
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: from __future__ import division, print_function, absolute_import
2: 
3: import warnings
4: 
5: import numpy as np
6: 
7: from numpy.testing import (
8:     assert_almost_equal, assert_array_equal, assert_array_almost_equal,
9:     assert_allclose, assert_equal, assert_)
10: from pytest import raises as assert_raises
11: 
12: from scipy.interpolate import (
13:     KroghInterpolator, krogh_interpolate,
14:     BarycentricInterpolator, barycentric_interpolate,
15:     approximate_taylor_polynomial, pchip, PchipInterpolator,
16:     pchip_interpolate, Akima1DInterpolator, CubicSpline, make_interp_spline)
17: 
18: from scipy._lib.six import xrange
19: 
20: 
21: def check_shape(interpolator_cls, x_shape, y_shape, deriv_shape=None, axis=0,
22:                 extra_args={}):
23:     np.random.seed(1234)
24: 
25:     x = [-1, 0, 1, 2, 3, 4]
26:     s = list(range(1, len(y_shape)+1))
27:     s.insert(axis % (len(y_shape)+1), 0)
28:     y = np.random.rand(*((6,) + y_shape)).transpose(s)
29: 
30:     # Cython code chokes on y.shape = (0, 3) etc, skip them
31:     if y.size == 0:
32:         return
33: 
34:     xi = np.zeros(x_shape)
35:     yi = interpolator_cls(x, y, axis=axis, **extra_args)(xi)
36: 
37:     target_shape = ((deriv_shape or ()) + y.shape[:axis]
38:                     + x_shape + y.shape[axis:][1:])
39:     assert_equal(yi.shape, target_shape)
40: 
41:     # check it works also with lists
42:     if x_shape and y.size > 0:
43:         interpolator_cls(list(x), list(y), axis=axis, **extra_args)(list(xi))
44: 
45:     # check also values
46:     if xi.size > 0 and deriv_shape is None:
47:         bs_shape = y.shape[:axis] + (1,)*len(x_shape) + y.shape[axis:][1:]
48:         yv = y[((slice(None,),)*(axis % y.ndim)) + (1,)]
49:         yv = yv.reshape(bs_shape)
50: 
51:         yi, y = np.broadcast_arrays(yi, yv)
52:         assert_allclose(yi, y)
53: 
54: SHAPES = [(), (0,), (1,), (6, 2, 5)]
55: 
56: 
57: def test_shapes():
58: 
59:     def spl_interp(x, y, axis):
60:         return make_interp_spline(x, y, axis=axis)
61: 
62:     for ip in [KroghInterpolator, BarycentricInterpolator, pchip,
63:                Akima1DInterpolator, CubicSpline, spl_interp]:
64:         for s1 in SHAPES:
65:             for s2 in SHAPES:
66:                 for axis in range(-len(s2), len(s2)):
67:                     if ip != CubicSpline:
68:                         check_shape(ip, s1, s2, None, axis)
69:                     else:
70:                         for bc in ['natural', 'clamped']:
71:                             extra = {'bc_type': bc}
72:                             check_shape(ip, s1, s2, None, axis, extra)
73: 
74: def test_derivs_shapes():
75:     def krogh_derivs(x, y, axis=0):
76:         return KroghInterpolator(x, y, axis).derivatives
77: 
78:     for s1 in SHAPES:
79:         for s2 in SHAPES:
80:             for axis in range(-len(s2), len(s2)):
81:                 check_shape(krogh_derivs, s1, s2, (6,), axis)
82: 
83: 
84: def test_deriv_shapes():
85:     def krogh_deriv(x, y, axis=0):
86:         return KroghInterpolator(x, y, axis).derivative
87: 
88:     def pchip_deriv(x, y, axis=0):
89:         return pchip(x, y, axis).derivative()
90: 
91:     def pchip_deriv2(x, y, axis=0):
92:         return pchip(x, y, axis).derivative(2)
93: 
94:     def pchip_antideriv(x, y, axis=0):
95:         return pchip(x, y, axis).derivative()
96: 
97:     def pchip_antideriv2(x, y, axis=0):
98:         return pchip(x, y, axis).derivative(2)
99: 
100:     def pchip_deriv_inplace(x, y, axis=0):
101:         class P(PchipInterpolator):
102:             def __call__(self, x):
103:                 return PchipInterpolator.__call__(self, x, 1)
104:             pass
105:         return P(x, y, axis)
106: 
107:     def akima_deriv(x, y, axis=0):
108:         return Akima1DInterpolator(x, y, axis).derivative()
109: 
110:     def akima_antideriv(x, y, axis=0):
111:         return Akima1DInterpolator(x, y, axis).antiderivative()
112: 
113:     def cspline_deriv(x, y, axis=0):
114:         return CubicSpline(x, y, axis).derivative()
115: 
116:     def cspline_antideriv(x, y, axis=0):
117:         return CubicSpline(x, y, axis).antiderivative()
118: 
119:     def bspl_deriv(x, y, axis=0):
120:         return make_interp_spline(x, y, axis=axis).derivative()
121: 
122:     def bspl_antideriv(x, y, axis=0):
123:         return make_interp_spline(x, y, axis=axis).antiderivative()
124: 
125:     for ip in [krogh_deriv, pchip_deriv, pchip_deriv2, pchip_deriv_inplace,
126:                pchip_antideriv, pchip_antideriv2, akima_deriv, akima_antideriv,
127:                cspline_deriv, cspline_antideriv, bspl_deriv, bspl_antideriv]:
128:         for s1 in SHAPES:
129:             for s2 in SHAPES:
130:                 for axis in range(-len(s2), len(s2)):
131:                     check_shape(ip, s1, s2, (), axis)
132: 
133: 
134: def _check_complex(ip):
135:     x = [1, 2, 3, 4]
136:     y = [1, 2, 1j, 3]
137:     p = ip(x, y)
138:     assert_allclose(y, p(x))
139: 
140: 
141: def test_complex():
142:     for ip in [KroghInterpolator, BarycentricInterpolator, pchip, CubicSpline]:
143:         _check_complex(ip)
144: 
145: 
146: class TestKrogh(object):
147:     def setup_method(self):
148:         self.true_poly = np.poly1d([-2,3,1,5,-4])
149:         self.test_xs = np.linspace(-1,1,100)
150:         self.xs = np.linspace(-1,1,5)
151:         self.ys = self.true_poly(self.xs)
152: 
153:     def test_lagrange(self):
154:         P = KroghInterpolator(self.xs,self.ys)
155:         assert_almost_equal(self.true_poly(self.test_xs),P(self.test_xs))
156: 
157:     def test_scalar(self):
158:         P = KroghInterpolator(self.xs,self.ys)
159:         assert_almost_equal(self.true_poly(7),P(7))
160:         assert_almost_equal(self.true_poly(np.array(7)), P(np.array(7)))
161: 
162:     def test_derivatives(self):
163:         P = KroghInterpolator(self.xs,self.ys)
164:         D = P.derivatives(self.test_xs)
165:         for i in xrange(D.shape[0]):
166:             assert_almost_equal(self.true_poly.deriv(i)(self.test_xs),
167:                                 D[i])
168: 
169:     def test_low_derivatives(self):
170:         P = KroghInterpolator(self.xs,self.ys)
171:         D = P.derivatives(self.test_xs,len(self.xs)+2)
172:         for i in xrange(D.shape[0]):
173:             assert_almost_equal(self.true_poly.deriv(i)(self.test_xs),
174:                                 D[i])
175: 
176:     def test_derivative(self):
177:         P = KroghInterpolator(self.xs,self.ys)
178:         m = 10
179:         r = P.derivatives(self.test_xs,m)
180:         for i in xrange(m):
181:             assert_almost_equal(P.derivative(self.test_xs,i),r[i])
182: 
183:     def test_high_derivative(self):
184:         P = KroghInterpolator(self.xs,self.ys)
185:         for i in xrange(len(self.xs),2*len(self.xs)):
186:             assert_almost_equal(P.derivative(self.test_xs,i),
187:                                 np.zeros(len(self.test_xs)))
188: 
189:     def test_hermite(self):
190:         xs = [0,0,0,1,1,1,2]
191:         ys = [self.true_poly(0),
192:               self.true_poly.deriv(1)(0),
193:               self.true_poly.deriv(2)(0),
194:               self.true_poly(1),
195:               self.true_poly.deriv(1)(1),
196:               self.true_poly.deriv(2)(1),
197:               self.true_poly(2)]
198:         P = KroghInterpolator(self.xs,self.ys)
199:         assert_almost_equal(self.true_poly(self.test_xs),P(self.test_xs))
200: 
201:     def test_vector(self):
202:         xs = [0, 1, 2]
203:         ys = np.array([[0,1],[1,0],[2,1]])
204:         P = KroghInterpolator(xs,ys)
205:         Pi = [KroghInterpolator(xs,ys[:,i]) for i in xrange(ys.shape[1])]
206:         test_xs = np.linspace(-1,3,100)
207:         assert_almost_equal(P(test_xs),
208:                 np.rollaxis(np.asarray([p(test_xs) for p in Pi]),-1))
209:         assert_almost_equal(P.derivatives(test_xs),
210:                 np.transpose(np.asarray([p.derivatives(test_xs) for p in Pi]),
211:                     (1,2,0)))
212: 
213:     def test_empty(self):
214:         P = KroghInterpolator(self.xs,self.ys)
215:         assert_array_equal(P([]), [])
216: 
217:     def test_shapes_scalarvalue(self):
218:         P = KroghInterpolator(self.xs,self.ys)
219:         assert_array_equal(np.shape(P(0)), ())
220:         assert_array_equal(np.shape(P(np.array(0))), ())
221:         assert_array_equal(np.shape(P([0])), (1,))
222:         assert_array_equal(np.shape(P([0,1])), (2,))
223: 
224:     def test_shapes_scalarvalue_derivative(self):
225:         P = KroghInterpolator(self.xs,self.ys)
226:         n = P.n
227:         assert_array_equal(np.shape(P.derivatives(0)), (n,))
228:         assert_array_equal(np.shape(P.derivatives(np.array(0))), (n,))
229:         assert_array_equal(np.shape(P.derivatives([0])), (n,1))
230:         assert_array_equal(np.shape(P.derivatives([0,1])), (n,2))
231: 
232:     def test_shapes_vectorvalue(self):
233:         P = KroghInterpolator(self.xs,np.outer(self.ys,np.arange(3)))
234:         assert_array_equal(np.shape(P(0)), (3,))
235:         assert_array_equal(np.shape(P([0])), (1,3))
236:         assert_array_equal(np.shape(P([0,1])), (2,3))
237: 
238:     def test_shapes_1d_vectorvalue(self):
239:         P = KroghInterpolator(self.xs,np.outer(self.ys,[1]))
240:         assert_array_equal(np.shape(P(0)), (1,))
241:         assert_array_equal(np.shape(P([0])), (1,1))
242:         assert_array_equal(np.shape(P([0,1])), (2,1))
243: 
244:     def test_shapes_vectorvalue_derivative(self):
245:         P = KroghInterpolator(self.xs,np.outer(self.ys,np.arange(3)))
246:         n = P.n
247:         assert_array_equal(np.shape(P.derivatives(0)), (n,3))
248:         assert_array_equal(np.shape(P.derivatives([0])), (n,1,3))
249:         assert_array_equal(np.shape(P.derivatives([0,1])), (n,2,3))
250: 
251:     def test_wrapper(self):
252:         P = KroghInterpolator(self.xs, self.ys)
253:         ki = krogh_interpolate
254:         assert_almost_equal(P(self.test_xs), ki(self.xs, self.ys, self.test_xs))
255:         assert_almost_equal(P.derivative(self.test_xs, 2),
256:                             ki(self.xs, self.ys, self.test_xs, der=2))
257:         assert_almost_equal(P.derivatives(self.test_xs, 2),
258:                             ki(self.xs, self.ys, self.test_xs, der=[0, 1]))
259: 
260:     def test_int_inputs(self):
261:         # Check input args are cast correctly to floats, gh-3669
262:         x = [0, 234, 468, 702, 936, 1170, 1404, 2340, 3744, 6084, 8424,
263:              13104, 60000]
264:         offset_cdf = np.array([-0.95, -0.86114777, -0.8147762, -0.64072425,
265:                                -0.48002351, -0.34925329, -0.26503107,
266:                                -0.13148093, -0.12988833, -0.12979296,
267:                                -0.12973574, -0.08582937, 0.05])
268:         f = KroghInterpolator(x, offset_cdf)
269: 
270:         assert_allclose(abs((f(x) - offset_cdf) / f.derivative(x, 1)),
271:                         0, atol=1e-10)
272: 
273:     def test_derivatives_complex(self):
274:         # regression test for gh-7381: krogh.derivatives(0) fails complex y
275:         x, y = np.array([-1, -1, 0, 1, 1]), np.array([1, 1.0j, 0, -1, 1.0j])
276:         func = KroghInterpolator(x, y)
277:         cmplx = func.derivatives(0)
278: 
279:         cmplx2 = (KroghInterpolator(x, y.real).derivatives(0) +
280:                   1j*KroghInterpolator(x, y.imag).derivatives(0))
281:         assert_allclose(cmplx, cmplx2, atol=1e-15)
282: 
283: 
284: class TestTaylor(object):
285:     def test_exponential(self):
286:         degree = 5
287:         p = approximate_taylor_polynomial(np.exp, 0, degree, 1, 15)
288:         for i in xrange(degree+1):
289:             assert_almost_equal(p(0),1)
290:             p = p.deriv()
291:         assert_almost_equal(p(0),0)
292: 
293: 
294: class TestBarycentric(object):
295:     def setup_method(self):
296:         self.true_poly = np.poly1d([-2,3,1,5,-4])
297:         self.test_xs = np.linspace(-1,1,100)
298:         self.xs = np.linspace(-1,1,5)
299:         self.ys = self.true_poly(self.xs)
300: 
301:     def test_lagrange(self):
302:         P = BarycentricInterpolator(self.xs,self.ys)
303:         assert_almost_equal(self.true_poly(self.test_xs),P(self.test_xs))
304: 
305:     def test_scalar(self):
306:         P = BarycentricInterpolator(self.xs,self.ys)
307:         assert_almost_equal(self.true_poly(7),P(7))
308:         assert_almost_equal(self.true_poly(np.array(7)),P(np.array(7)))
309: 
310:     def test_delayed(self):
311:         P = BarycentricInterpolator(self.xs)
312:         P.set_yi(self.ys)
313:         assert_almost_equal(self.true_poly(self.test_xs),P(self.test_xs))
314: 
315:     def test_append(self):
316:         P = BarycentricInterpolator(self.xs[:3],self.ys[:3])
317:         P.add_xi(self.xs[3:],self.ys[3:])
318:         assert_almost_equal(self.true_poly(self.test_xs),P(self.test_xs))
319: 
320:     def test_vector(self):
321:         xs = [0, 1, 2]
322:         ys = np.array([[0,1],[1,0],[2,1]])
323:         P = BarycentricInterpolator(xs,ys)
324:         Pi = [BarycentricInterpolator(xs,ys[:,i]) for i in xrange(ys.shape[1])]
325:         test_xs = np.linspace(-1,3,100)
326:         assert_almost_equal(P(test_xs),
327:                 np.rollaxis(np.asarray([p(test_xs) for p in Pi]),-1))
328: 
329:     def test_shapes_scalarvalue(self):
330:         P = BarycentricInterpolator(self.xs,self.ys)
331:         assert_array_equal(np.shape(P(0)), ())
332:         assert_array_equal(np.shape(P(np.array(0))), ())
333:         assert_array_equal(np.shape(P([0])), (1,))
334:         assert_array_equal(np.shape(P([0,1])), (2,))
335: 
336:     def test_shapes_vectorvalue(self):
337:         P = BarycentricInterpolator(self.xs,np.outer(self.ys,np.arange(3)))
338:         assert_array_equal(np.shape(P(0)), (3,))
339:         assert_array_equal(np.shape(P([0])), (1,3))
340:         assert_array_equal(np.shape(P([0,1])), (2,3))
341: 
342:     def test_shapes_1d_vectorvalue(self):
343:         P = BarycentricInterpolator(self.xs,np.outer(self.ys,[1]))
344:         assert_array_equal(np.shape(P(0)), (1,))
345:         assert_array_equal(np.shape(P([0])), (1,1))
346:         assert_array_equal(np.shape(P([0,1])), (2,1))
347: 
348:     def test_wrapper(self):
349:         P = BarycentricInterpolator(self.xs,self.ys)
350:         assert_almost_equal(P(self.test_xs),barycentric_interpolate(self.xs,self.ys,self.test_xs))
351: 
352: 
353: class TestPCHIP(object):
354:     def _make_random(self, npts=20):
355:         np.random.seed(1234)
356:         xi = np.sort(np.random.random(npts))
357:         yi = np.random.random(npts)
358:         return pchip(xi, yi), xi, yi
359: 
360:     def test_overshoot(self):
361:         # PCHIP should not overshoot
362:         p, xi, yi = self._make_random()
363:         for i in range(len(xi)-1):
364:             x1, x2 = xi[i], xi[i+1]
365:             y1, y2 = yi[i], yi[i+1]
366:             if y1 > y2:
367:                 y1, y2 = y2, y1
368:             xp = np.linspace(x1, x2, 10)
369:             yp = p(xp)
370:             assert_(((y1 <= yp) & (yp <= y2)).all())
371: 
372:     def test_monotone(self):
373:         # PCHIP should preserve monotonicty
374:         p, xi, yi = self._make_random()
375:         for i in range(len(xi)-1):
376:             x1, x2 = xi[i], xi[i+1]
377:             y1, y2 = yi[i], yi[i+1]
378:             xp = np.linspace(x1, x2, 10)
379:             yp = p(xp)
380:             assert_(((y2-y1) * (yp[1:] - yp[:1]) > 0).all())
381: 
382:     def test_cast(self):
383:         # regression test for integer input data, see gh-3453
384:         data = np.array([[0, 4, 12, 27, 47, 60, 79, 87, 99, 100],
385:                          [-33, -33, -19, -2, 12, 26, 38, 45, 53, 55]])
386:         xx = np.arange(100)
387:         curve = pchip(data[0], data[1])(xx)
388: 
389:         data1 = data * 1.0
390:         curve1 = pchip(data1[0], data1[1])(xx)
391: 
392:         assert_allclose(curve, curve1, atol=1e-14, rtol=1e-14)
393: 
394:     def test_nag(self):
395:         # Example from NAG C implementation,
396:         # http://nag.com/numeric/cl/nagdoc_cl25/html/e01/e01bec.html
397:         # suggested in gh-5326 as a smoke test for the way the derivatives
398:         # are computed (see also gh-3453)
399:         from scipy._lib.six import StringIO
400:         dataStr = '''
401:           7.99   0.00000E+0
402:           8.09   0.27643E-4
403:           8.19   0.43750E-1
404:           8.70   0.16918E+0
405:           9.20   0.46943E+0
406:          10.00   0.94374E+0
407:          12.00   0.99864E+0
408:          15.00   0.99992E+0
409:          20.00   0.99999E+0
410:         '''
411:         data = np.loadtxt(StringIO(dataStr))
412:         pch = pchip(data[:,0], data[:,1])
413: 
414:         resultStr = '''
415:            7.9900       0.0000
416:            9.1910       0.4640
417:           10.3920       0.9645
418:           11.5930       0.9965
419:           12.7940       0.9992
420:           13.9950       0.9998
421:           15.1960       0.9999
422:           16.3970       1.0000
423:           17.5980       1.0000
424:           18.7990       1.0000
425:           20.0000       1.0000
426:         '''
427:         result = np.loadtxt(StringIO(resultStr))
428:         assert_allclose(result[:,1], pch(result[:,0]), rtol=0., atol=5e-5)
429: 
430:     def test_endslopes(self):
431:         # this is a smoke test for gh-3453: PCHIP interpolator should not
432:         # set edge slopes to zero if the data do not suggest zero edge derivatives
433:         x = np.array([0.0, 0.1, 0.25, 0.35])
434:         y1 = np.array([279.35, 0.5e3, 1.0e3, 2.5e3])
435:         y2 = np.array([279.35, 2.5e3, 1.50e3, 1.0e3])
436:         for pp in (pchip(x, y1), pchip(x, y2)):
437:             for t in (x[0], x[-1]):
438:                 assert_(pp(t, 1) != 0)
439: 
440:     def test_all_zeros(self):
441:         x = np.arange(10)
442:         y = np.zeros_like(x)
443: 
444:         # this should work and not generate any warnings
445:         with warnings.catch_warnings():
446:             warnings.filterwarnings('error')
447:             pch = pchip(x, y)
448: 
449:         xx = np.linspace(0, 9, 101)
450:         assert_equal(pch(xx), 0.)
451: 
452:     def test_two_points(self):
453:         # regression test for gh-6222: pchip([0, 1], [0, 1]) fails because
454:         # it tries to use a three-point scheme to estimate edge derivatives,
455:         # while there are only two points available.
456:         # Instead, it should construct a linear interpolator.
457:         x = np.linspace(0, 1, 11)
458:         p = pchip([0, 1], [0, 2])
459:         assert_allclose(p(x), 2*x, atol=1e-15)
460: 
461:     def test_pchip_interpolate(self):
462:         assert_array_almost_equal(
463:             pchip_interpolate([1,2,3], [4,5,6], [0.5], der=1),
464:             [1.])
465: 
466:         assert_array_almost_equal(
467:             pchip_interpolate([1,2,3], [4,5,6], [0.5], der=0),
468:             [3.5])
469: 
470:         assert_array_almost_equal(
471:             pchip_interpolate([1,2,3], [4,5,6], [0.5], der=[0, 1]),
472:             [[3.5], [1]])
473: 
474:     def test_roots(self):
475:         # regression test for gh-6357: .roots method should work
476:         p = pchip([0, 1], [-1, 1])
477:         r = p.roots()
478:         assert_allclose(r, 0.5)
479: 
480: class TestCubicSpline(object):
481:     @staticmethod
482:     def check_correctness(S, bc_start='not-a-knot', bc_end='not-a-knot',
483:                           tol=1e-14):
484:         '''Check that spline coefficients satisfy the continuity and boundary
485:         conditions.'''
486:         x = S.x
487:         c = S.c
488:         dx = np.diff(x)
489:         dx = dx.reshape([dx.shape[0]] + [1] * (c.ndim - 2))
490:         dxi = dx[:-1]
491: 
492:         # Check C2 continuity.
493:         assert_allclose(c[3, 1:], c[0, :-1] * dxi**3 + c[1, :-1] * dxi**2 +
494:                         c[2, :-1] * dxi + c[3, :-1], rtol=tol, atol=tol)
495:         assert_allclose(c[2, 1:], 3 * c[0, :-1] * dxi**2 +
496:                         2 * c[1, :-1] * dxi + c[2, :-1], rtol=tol, atol=tol)
497:         assert_allclose(c[1, 1:], 3 * c[0, :-1] * dxi + c[1, :-1],
498:                         rtol=tol, atol=tol)
499: 
500:         # Check that we found a parabola, the third derivative is 0.
501:         if x.size == 3 and bc_start == 'not-a-knot' and bc_end == 'not-a-knot':
502:             assert_allclose(c[0], 0, rtol=tol, atol=tol)
503:             return
504: 
505:         # Check periodic boundary conditions.
506:         if bc_start == 'periodic':
507:             assert_allclose(S(x[0], 0), S(x[-1], 0), rtol=tol, atol=tol)
508:             assert_allclose(S(x[0], 1), S(x[-1], 1), rtol=tol, atol=tol)
509:             assert_allclose(S(x[0], 2), S(x[-1], 2), rtol=tol, atol=tol)
510:             return
511: 
512:         # Check other boundary conditions.
513:         if bc_start == 'not-a-knot':
514:             if x.size == 2:
515:                 slope = (S(x[1]) - S(x[0])) / dx[0]
516:                 assert_allclose(S(x[0], 1), slope, rtol=tol, atol=tol)
517:             else:
518:                 assert_allclose(c[0, 0], c[0, 1], rtol=tol, atol=tol)
519:         elif bc_start == 'clamped':
520:             assert_allclose(S(x[0], 1), 0, rtol=tol, atol=tol)
521:         elif bc_start == 'natural':
522:             assert_allclose(S(x[0], 2), 0, rtol=tol, atol=tol)
523:         else:
524:             order, value = bc_start
525:             assert_allclose(S(x[0], order), value, rtol=tol, atol=tol)
526: 
527:         if bc_end == 'not-a-knot':
528:             if x.size == 2:
529:                 slope = (S(x[1]) - S(x[0])) / dx[0]
530:                 assert_allclose(S(x[1], 1), slope, rtol=tol, atol=tol)
531:             else:
532:                 assert_allclose(c[0, -1], c[0, -2], rtol=tol, atol=tol)
533:         elif bc_end == 'clamped':
534:             assert_allclose(S(x[-1], 1), 0, rtol=tol, atol=tol)
535:         elif bc_end == 'natural':
536:             assert_allclose(S(x[-1], 2), 0, rtol=tol, atol=tol)
537:         else:
538:             order, value = bc_end
539:             assert_allclose(S(x[-1], order), value, rtol=tol, atol=tol)
540: 
541:     def check_all_bc(self, x, y, axis):
542:         deriv_shape = list(y.shape)
543:         del deriv_shape[axis]
544:         first_deriv = np.empty(deriv_shape)
545:         first_deriv.fill(2)
546:         second_deriv = np.empty(deriv_shape)
547:         second_deriv.fill(-1)
548:         bc_all = [
549:             'not-a-knot',
550:             'natural',
551:             'clamped',
552:             (1, first_deriv),
553:             (2, second_deriv)
554:         ]
555:         for bc in bc_all[:3]:
556:             S = CubicSpline(x, y, axis=axis, bc_type=bc)
557:             self.check_correctness(S, bc, bc)
558: 
559:         for bc_start in bc_all:
560:             for bc_end in bc_all:
561:                 S = CubicSpline(x, y, axis=axis, bc_type=(bc_start, bc_end))
562:                 self.check_correctness(S, bc_start, bc_end, tol=2e-14)
563: 
564:     def test_general(self):
565:         x = np.array([-1, 0, 0.5, 2, 4, 4.5, 5.5, 9])
566:         y = np.array([0, -0.5, 2, 3, 2.5, 1, 1, 0.5])
567:         for n in [2, 3, x.size]:
568:             self.check_all_bc(x[:n], y[:n], 0)
569: 
570:             Y = np.empty((2, n, 2))
571:             Y[0, :, 0] = y[:n]
572:             Y[0, :, 1] = y[:n] - 1
573:             Y[1, :, 0] = y[:n] + 2
574:             Y[1, :, 1] = y[:n] + 3
575:             self.check_all_bc(x[:n], Y, 1)
576: 
577:     def test_periodic(self):
578:         for n in [2, 3, 5]:
579:             x = np.linspace(0, 2 * np.pi, n)
580:             y = np.cos(x)
581:             S = CubicSpline(x, y, bc_type='periodic')
582:             self.check_correctness(S, 'periodic', 'periodic')
583: 
584:             Y = np.empty((2, n, 2))
585:             Y[0, :, 0] = y
586:             Y[0, :, 1] = y + 2
587:             Y[1, :, 0] = y - 1
588:             Y[1, :, 1] = y + 5
589:             S = CubicSpline(x, Y, axis=1, bc_type='periodic')
590:             self.check_correctness(S, 'periodic', 'periodic')
591: 
592:     def test_periodic_eval(self):
593:         x = np.linspace(0, 2 * np.pi, 10)
594:         y = np.cos(x)
595:         S = CubicSpline(x, y, bc_type='periodic')
596:         assert_almost_equal(S(1), S(1 + 2 * np.pi), decimal=15)
597: 
598:     def test_dtypes(self):
599:         x = np.array([0, 1, 2, 3], dtype=int)
600:         y = np.array([-5, 2, 3, 1], dtype=int)
601:         S = CubicSpline(x, y)
602:         self.check_correctness(S)
603: 
604:         y = np.array([-1+1j, 0.0, 1-1j, 0.5-1.5j])
605:         S = CubicSpline(x, y)
606:         self.check_correctness(S)
607: 
608:         S = CubicSpline(x, x ** 3, bc_type=("natural", (1, 2j)))
609:         self.check_correctness(S, "natural", (1, 2j))
610: 
611:         y = np.array([-5, 2, 3, 1])
612:         S = CubicSpline(x, y, bc_type=[(1, 2 + 0.5j), (2, 0.5 - 1j)])
613:         self.check_correctness(S, (1, 2 + 0.5j), (2, 0.5 - 1j))
614: 
615:     def test_small_dx(self):
616:         rng = np.random.RandomState(0)
617:         x = np.sort(rng.uniform(size=100))
618:         y = 1e4 + rng.uniform(size=100)
619:         S = CubicSpline(x, y)
620:         self.check_correctness(S, tol=1e-13)
621: 
622:     def test_incorrect_inputs(self):
623:         x = np.array([1, 2, 3, 4])
624:         y = np.array([1, 2, 3, 4])
625:         xc = np.array([1 + 1j, 2, 3, 4])
626:         xn = np.array([np.nan, 2, 3, 4])
627:         xo = np.array([2, 1, 3, 4])
628:         yn = np.array([np.nan, 2, 3, 4])
629:         y3 = [1, 2, 3]
630:         x1 = [1]
631:         y1 = [1]
632: 
633:         assert_raises(ValueError, CubicSpline, xc, y)
634:         assert_raises(ValueError, CubicSpline, xn, y)
635:         assert_raises(ValueError, CubicSpline, x, yn)
636:         assert_raises(ValueError, CubicSpline, xo, y)
637:         assert_raises(ValueError, CubicSpline, x, y3)
638:         assert_raises(ValueError, CubicSpline, x[:, np.newaxis], y)
639:         assert_raises(ValueError, CubicSpline, x1, y1)
640: 
641:         wrong_bc = [('periodic', 'clamped'),
642:                     ((2, 0), (3, 10)),
643:                     ((1, 0), ),
644:                     (0., 0.),
645:                     'not-a-typo']
646: 
647:         for bc_type in wrong_bc:
648:             assert_raises(ValueError, CubicSpline, x, y, 0, bc_type, True)
649: 
650:         # Shapes mismatch when giving arbitrary derivative values:
651:         Y = np.c_[y, y]
652:         bc1 = ('clamped', (1, 0))
653:         bc2 = ('clamped', (1, [0, 0, 0]))
654:         bc3 = ('clamped', (1, [[0, 0]]))
655:         assert_raises(ValueError, CubicSpline, x, Y, 0, bc1, True)
656:         assert_raises(ValueError, CubicSpline, x, Y, 0, bc2, True)
657:         assert_raises(ValueError, CubicSpline, x, Y, 0, bc3, True)
658: 
659:         # periodic condition, y[-1] must be equal to y[0]:
660:         assert_raises(ValueError, CubicSpline, x, y, 0, 'periodic', True)
661: 
662: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 3, 0))

# 'import warnings' statement (line 3)
import warnings

import_module(stypy.reporting.localization.Localization(__file__, 3, 0), 'warnings', warnings, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 5, 0))

# 'import numpy' statement (line 5)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/tests/')
import_115254 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 5, 0), 'numpy')

if (type(import_115254) is not StypyTypeError):

    if (import_115254 != 'pyd_module'):
        __import__(import_115254)
        sys_modules_115255 = sys.modules[import_115254]
        import_module(stypy.reporting.localization.Localization(__file__, 5, 0), 'np', sys_modules_115255.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 5, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 5)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 5, 0), 'numpy', import_115254)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 7, 0))

# 'from numpy.testing import assert_almost_equal, assert_array_equal, assert_array_almost_equal, assert_allclose, assert_equal, assert_' statement (line 7)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/tests/')
import_115256 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'numpy.testing')

if (type(import_115256) is not StypyTypeError):

    if (import_115256 != 'pyd_module'):
        __import__(import_115256)
        sys_modules_115257 = sys.modules[import_115256]
        import_from_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'numpy.testing', sys_modules_115257.module_type_store, module_type_store, ['assert_almost_equal', 'assert_array_equal', 'assert_array_almost_equal', 'assert_allclose', 'assert_equal', 'assert_'])
        nest_module(stypy.reporting.localization.Localization(__file__, 7, 0), __file__, sys_modules_115257, sys_modules_115257.module_type_store, module_type_store)
    else:
        from numpy.testing import assert_almost_equal, assert_array_equal, assert_array_almost_equal, assert_allclose, assert_equal, assert_

        import_from_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'numpy.testing', None, module_type_store, ['assert_almost_equal', 'assert_array_equal', 'assert_array_almost_equal', 'assert_allclose', 'assert_equal', 'assert_'], [assert_almost_equal, assert_array_equal, assert_array_almost_equal, assert_allclose, assert_equal, assert_])

else:
    # Assigning a type to the variable 'numpy.testing' (line 7)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 7, 0), 'numpy.testing', import_115256)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 10, 0))

# 'from pytest import assert_raises' statement (line 10)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/tests/')
import_115258 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'pytest')

if (type(import_115258) is not StypyTypeError):

    if (import_115258 != 'pyd_module'):
        __import__(import_115258)
        sys_modules_115259 = sys.modules[import_115258]
        import_from_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'pytest', sys_modules_115259.module_type_store, module_type_store, ['raises'])
        nest_module(stypy.reporting.localization.Localization(__file__, 10, 0), __file__, sys_modules_115259, sys_modules_115259.module_type_store, module_type_store)
    else:
        from pytest import raises as assert_raises

        import_from_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'pytest', None, module_type_store, ['raises'], [assert_raises])

else:
    # Assigning a type to the variable 'pytest' (line 10)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 10, 0), 'pytest', import_115258)

# Adding an alias
module_type_store.add_alias('assert_raises', 'raises')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 12, 0))

# 'from scipy.interpolate import KroghInterpolator, krogh_interpolate, BarycentricInterpolator, barycentric_interpolate, approximate_taylor_polynomial, pchip, PchipInterpolator, pchip_interpolate, Akima1DInterpolator, CubicSpline, make_interp_spline' statement (line 12)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/tests/')
import_115260 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'scipy.interpolate')

if (type(import_115260) is not StypyTypeError):

    if (import_115260 != 'pyd_module'):
        __import__(import_115260)
        sys_modules_115261 = sys.modules[import_115260]
        import_from_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'scipy.interpolate', sys_modules_115261.module_type_store, module_type_store, ['KroghInterpolator', 'krogh_interpolate', 'BarycentricInterpolator', 'barycentric_interpolate', 'approximate_taylor_polynomial', 'pchip', 'PchipInterpolator', 'pchip_interpolate', 'Akima1DInterpolator', 'CubicSpline', 'make_interp_spline'])
        nest_module(stypy.reporting.localization.Localization(__file__, 12, 0), __file__, sys_modules_115261, sys_modules_115261.module_type_store, module_type_store)
    else:
        from scipy.interpolate import KroghInterpolator, krogh_interpolate, BarycentricInterpolator, barycentric_interpolate, approximate_taylor_polynomial, pchip, PchipInterpolator, pchip_interpolate, Akima1DInterpolator, CubicSpline, make_interp_spline

        import_from_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'scipy.interpolate', None, module_type_store, ['KroghInterpolator', 'krogh_interpolate', 'BarycentricInterpolator', 'barycentric_interpolate', 'approximate_taylor_polynomial', 'pchip', 'PchipInterpolator', 'pchip_interpolate', 'Akima1DInterpolator', 'CubicSpline', 'make_interp_spline'], [KroghInterpolator, krogh_interpolate, BarycentricInterpolator, barycentric_interpolate, approximate_taylor_polynomial, pchip, PchipInterpolator, pchip_interpolate, Akima1DInterpolator, CubicSpline, make_interp_spline])

else:
    # Assigning a type to the variable 'scipy.interpolate' (line 12)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 12, 0), 'scipy.interpolate', import_115260)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 18, 0))

# 'from scipy._lib.six import xrange' statement (line 18)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/tests/')
import_115262 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy._lib.six')

if (type(import_115262) is not StypyTypeError):

    if (import_115262 != 'pyd_module'):
        __import__(import_115262)
        sys_modules_115263 = sys.modules[import_115262]
        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy._lib.six', sys_modules_115263.module_type_store, module_type_store, ['xrange'])
        nest_module(stypy.reporting.localization.Localization(__file__, 18, 0), __file__, sys_modules_115263, sys_modules_115263.module_type_store, module_type_store)
    else:
        from scipy._lib.six import xrange

        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy._lib.six', None, module_type_store, ['xrange'], [xrange])

else:
    # Assigning a type to the variable 'scipy._lib.six' (line 18)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy._lib.six', import_115262)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/tests/')


@norecursion
def check_shape(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 21)
    None_115264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 64), 'None')
    int_115265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 21, 75), 'int')
    
    # Obtaining an instance of the builtin type 'dict' (line 22)
    dict_115266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 22, 27), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 22)
    
    defaults = [None_115264, int_115265, dict_115266]
    # Create a new context for function 'check_shape'
    module_type_store = module_type_store.open_function_context('check_shape', 21, 0, False)
    
    # Passed parameters checking function
    check_shape.stypy_localization = localization
    check_shape.stypy_type_of_self = None
    check_shape.stypy_type_store = module_type_store
    check_shape.stypy_function_name = 'check_shape'
    check_shape.stypy_param_names_list = ['interpolator_cls', 'x_shape', 'y_shape', 'deriv_shape', 'axis', 'extra_args']
    check_shape.stypy_varargs_param_name = None
    check_shape.stypy_kwargs_param_name = None
    check_shape.stypy_call_defaults = defaults
    check_shape.stypy_call_varargs = varargs
    check_shape.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'check_shape', ['interpolator_cls', 'x_shape', 'y_shape', 'deriv_shape', 'axis', 'extra_args'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'check_shape', localization, ['interpolator_cls', 'x_shape', 'y_shape', 'deriv_shape', 'axis', 'extra_args'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'check_shape(...)' code ##################

    
    # Call to seed(...): (line 23)
    # Processing the call arguments (line 23)
    int_115270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 19), 'int')
    # Processing the call keyword arguments (line 23)
    kwargs_115271 = {}
    # Getting the type of 'np' (line 23)
    np_115267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 4), 'np', False)
    # Obtaining the member 'random' of a type (line 23)
    random_115268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 23, 4), np_115267, 'random')
    # Obtaining the member 'seed' of a type (line 23)
    seed_115269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 23, 4), random_115268, 'seed')
    # Calling seed(args, kwargs) (line 23)
    seed_call_result_115272 = invoke(stypy.reporting.localization.Localization(__file__, 23, 4), seed_115269, *[int_115270], **kwargs_115271)
    
    
    # Assigning a List to a Name (line 25):
    
    # Assigning a List to a Name (line 25):
    
    # Obtaining an instance of the builtin type 'list' (line 25)
    list_115273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 8), 'list')
    # Adding type elements to the builtin type 'list' instance (line 25)
    # Adding element type (line 25)
    int_115274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 25, 8), list_115273, int_115274)
    # Adding element type (line 25)
    int_115275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 13), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 25, 8), list_115273, int_115275)
    # Adding element type (line 25)
    int_115276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 16), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 25, 8), list_115273, int_115276)
    # Adding element type (line 25)
    int_115277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 25, 8), list_115273, int_115277)
    # Adding element type (line 25)
    int_115278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 25, 8), list_115273, int_115278)
    # Adding element type (line 25)
    int_115279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 25), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 25, 8), list_115273, int_115279)
    
    # Assigning a type to the variable 'x' (line 25)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 25, 4), 'x', list_115273)
    
    # Assigning a Call to a Name (line 26):
    
    # Assigning a Call to a Name (line 26):
    
    # Call to list(...): (line 26)
    # Processing the call arguments (line 26)
    
    # Call to range(...): (line 26)
    # Processing the call arguments (line 26)
    int_115282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 26, 19), 'int')
    
    # Call to len(...): (line 26)
    # Processing the call arguments (line 26)
    # Getting the type of 'y_shape' (line 26)
    y_shape_115284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 26), 'y_shape', False)
    # Processing the call keyword arguments (line 26)
    kwargs_115285 = {}
    # Getting the type of 'len' (line 26)
    len_115283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 22), 'len', False)
    # Calling len(args, kwargs) (line 26)
    len_call_result_115286 = invoke(stypy.reporting.localization.Localization(__file__, 26, 22), len_115283, *[y_shape_115284], **kwargs_115285)
    
    int_115287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 26, 35), 'int')
    # Applying the binary operator '+' (line 26)
    result_add_115288 = python_operator(stypy.reporting.localization.Localization(__file__, 26, 22), '+', len_call_result_115286, int_115287)
    
    # Processing the call keyword arguments (line 26)
    kwargs_115289 = {}
    # Getting the type of 'range' (line 26)
    range_115281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 13), 'range', False)
    # Calling range(args, kwargs) (line 26)
    range_call_result_115290 = invoke(stypy.reporting.localization.Localization(__file__, 26, 13), range_115281, *[int_115282, result_add_115288], **kwargs_115289)
    
    # Processing the call keyword arguments (line 26)
    kwargs_115291 = {}
    # Getting the type of 'list' (line 26)
    list_115280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 8), 'list', False)
    # Calling list(args, kwargs) (line 26)
    list_call_result_115292 = invoke(stypy.reporting.localization.Localization(__file__, 26, 8), list_115280, *[range_call_result_115290], **kwargs_115291)
    
    # Assigning a type to the variable 's' (line 26)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 4), 's', list_call_result_115292)
    
    # Call to insert(...): (line 27)
    # Processing the call arguments (line 27)
    # Getting the type of 'axis' (line 27)
    axis_115295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 13), 'axis', False)
    
    # Call to len(...): (line 27)
    # Processing the call arguments (line 27)
    # Getting the type of 'y_shape' (line 27)
    y_shape_115297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 25), 'y_shape', False)
    # Processing the call keyword arguments (line 27)
    kwargs_115298 = {}
    # Getting the type of 'len' (line 27)
    len_115296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 21), 'len', False)
    # Calling len(args, kwargs) (line 27)
    len_call_result_115299 = invoke(stypy.reporting.localization.Localization(__file__, 27, 21), len_115296, *[y_shape_115297], **kwargs_115298)
    
    int_115300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 34), 'int')
    # Applying the binary operator '+' (line 27)
    result_add_115301 = python_operator(stypy.reporting.localization.Localization(__file__, 27, 21), '+', len_call_result_115299, int_115300)
    
    # Applying the binary operator '%' (line 27)
    result_mod_115302 = python_operator(stypy.reporting.localization.Localization(__file__, 27, 13), '%', axis_115295, result_add_115301)
    
    int_115303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 38), 'int')
    # Processing the call keyword arguments (line 27)
    kwargs_115304 = {}
    # Getting the type of 's' (line 27)
    s_115293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 4), 's', False)
    # Obtaining the member 'insert' of a type (line 27)
    insert_115294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 27, 4), s_115293, 'insert')
    # Calling insert(args, kwargs) (line 27)
    insert_call_result_115305 = invoke(stypy.reporting.localization.Localization(__file__, 27, 4), insert_115294, *[result_mod_115302, int_115303], **kwargs_115304)
    
    
    # Assigning a Call to a Name (line 28):
    
    # Assigning a Call to a Name (line 28):
    
    # Call to transpose(...): (line 28)
    # Processing the call arguments (line 28)
    # Getting the type of 's' (line 28)
    s_115316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 52), 's', False)
    # Processing the call keyword arguments (line 28)
    kwargs_115317 = {}
    
    # Call to rand(...): (line 28)
    
    # Obtaining an instance of the builtin type 'tuple' (line 28)
    tuple_115309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 26), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 28)
    # Adding element type (line 28)
    int_115310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 26), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 26), tuple_115309, int_115310)
    
    # Getting the type of 'y_shape' (line 28)
    y_shape_115311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 32), 'y_shape', False)
    # Applying the binary operator '+' (line 28)
    result_add_115312 = python_operator(stypy.reporting.localization.Localization(__file__, 28, 25), '+', tuple_115309, y_shape_115311)
    
    # Processing the call keyword arguments (line 28)
    kwargs_115313 = {}
    # Getting the type of 'np' (line 28)
    np_115306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 8), 'np', False)
    # Obtaining the member 'random' of a type (line 28)
    random_115307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 8), np_115306, 'random')
    # Obtaining the member 'rand' of a type (line 28)
    rand_115308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 8), random_115307, 'rand')
    # Calling rand(args, kwargs) (line 28)
    rand_call_result_115314 = invoke(stypy.reporting.localization.Localization(__file__, 28, 8), rand_115308, *[result_add_115312], **kwargs_115313)
    
    # Obtaining the member 'transpose' of a type (line 28)
    transpose_115315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 8), rand_call_result_115314, 'transpose')
    # Calling transpose(args, kwargs) (line 28)
    transpose_call_result_115318 = invoke(stypy.reporting.localization.Localization(__file__, 28, 8), transpose_115315, *[s_115316], **kwargs_115317)
    
    # Assigning a type to the variable 'y' (line 28)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 4), 'y', transpose_call_result_115318)
    
    
    # Getting the type of 'y' (line 31)
    y_115319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 31, 7), 'y')
    # Obtaining the member 'size' of a type (line 31)
    size_115320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 31, 7), y_115319, 'size')
    int_115321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 17), 'int')
    # Applying the binary operator '==' (line 31)
    result_eq_115322 = python_operator(stypy.reporting.localization.Localization(__file__, 31, 7), '==', size_115320, int_115321)
    
    # Testing the type of an if condition (line 31)
    if_condition_115323 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 31, 4), result_eq_115322)
    # Assigning a type to the variable 'if_condition_115323' (line 31)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 4), 'if_condition_115323', if_condition_115323)
    # SSA begins for if statement (line 31)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Assigning a type to the variable 'stypy_return_type' (line 32)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 32, 8), 'stypy_return_type', types.NoneType)
    # SSA join for if statement (line 31)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 34):
    
    # Assigning a Call to a Name (line 34):
    
    # Call to zeros(...): (line 34)
    # Processing the call arguments (line 34)
    # Getting the type of 'x_shape' (line 34)
    x_shape_115326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 34, 18), 'x_shape', False)
    # Processing the call keyword arguments (line 34)
    kwargs_115327 = {}
    # Getting the type of 'np' (line 34)
    np_115324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 34, 9), 'np', False)
    # Obtaining the member 'zeros' of a type (line 34)
    zeros_115325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 34, 9), np_115324, 'zeros')
    # Calling zeros(args, kwargs) (line 34)
    zeros_call_result_115328 = invoke(stypy.reporting.localization.Localization(__file__, 34, 9), zeros_115325, *[x_shape_115326], **kwargs_115327)
    
    # Assigning a type to the variable 'xi' (line 34)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 34, 4), 'xi', zeros_call_result_115328)
    
    # Assigning a Call to a Name (line 35):
    
    # Assigning a Call to a Name (line 35):
    
    # Call to (...): (line 35)
    # Processing the call arguments (line 35)
    # Getting the type of 'xi' (line 35)
    xi_115337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 57), 'xi', False)
    # Processing the call keyword arguments (line 35)
    kwargs_115338 = {}
    
    # Call to interpolator_cls(...): (line 35)
    # Processing the call arguments (line 35)
    # Getting the type of 'x' (line 35)
    x_115330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 26), 'x', False)
    # Getting the type of 'y' (line 35)
    y_115331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 29), 'y', False)
    # Processing the call keyword arguments (line 35)
    # Getting the type of 'axis' (line 35)
    axis_115332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 37), 'axis', False)
    keyword_115333 = axis_115332
    # Getting the type of 'extra_args' (line 35)
    extra_args_115334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 45), 'extra_args', False)
    kwargs_115335 = {'extra_args_115334': extra_args_115334, 'axis': keyword_115333}
    # Getting the type of 'interpolator_cls' (line 35)
    interpolator_cls_115329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 9), 'interpolator_cls', False)
    # Calling interpolator_cls(args, kwargs) (line 35)
    interpolator_cls_call_result_115336 = invoke(stypy.reporting.localization.Localization(__file__, 35, 9), interpolator_cls_115329, *[x_115330, y_115331], **kwargs_115335)
    
    # Calling (args, kwargs) (line 35)
    _call_result_115339 = invoke(stypy.reporting.localization.Localization(__file__, 35, 9), interpolator_cls_call_result_115336, *[xi_115337], **kwargs_115338)
    
    # Assigning a type to the variable 'yi' (line 35)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 4), 'yi', _call_result_115339)
    
    # Assigning a BinOp to a Name (line 37):
    
    # Assigning a BinOp to a Name (line 37):
    
    # Evaluating a boolean operation
    # Getting the type of 'deriv_shape' (line 37)
    deriv_shape_115340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 37, 21), 'deriv_shape')
    
    # Obtaining an instance of the builtin type 'tuple' (line 37)
    tuple_115341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 37, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 37)
    
    # Applying the binary operator 'or' (line 37)
    result_or_keyword_115342 = python_operator(stypy.reporting.localization.Localization(__file__, 37, 21), 'or', deriv_shape_115340, tuple_115341)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'axis' (line 37)
    axis_115343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 37, 51), 'axis')
    slice_115344 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 37, 42), None, axis_115343, None)
    # Getting the type of 'y' (line 37)
    y_115345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 37, 42), 'y')
    # Obtaining the member 'shape' of a type (line 37)
    shape_115346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 37, 42), y_115345, 'shape')
    # Obtaining the member '__getitem__' of a type (line 37)
    getitem___115347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 37, 42), shape_115346, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 37)
    subscript_call_result_115348 = invoke(stypy.reporting.localization.Localization(__file__, 37, 42), getitem___115347, slice_115344)
    
    # Applying the binary operator '+' (line 37)
    result_add_115349 = python_operator(stypy.reporting.localization.Localization(__file__, 37, 20), '+', result_or_keyword_115342, subscript_call_result_115348)
    
    # Getting the type of 'x_shape' (line 38)
    x_shape_115350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 22), 'x_shape')
    # Applying the binary operator '+' (line 38)
    result_add_115351 = python_operator(stypy.reporting.localization.Localization(__file__, 38, 20), '+', result_add_115349, x_shape_115350)
    
    
    # Obtaining the type of the subscript
    int_115352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 38, 47), 'int')
    slice_115353 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 38, 32), int_115352, None, None)
    
    # Obtaining the type of the subscript
    # Getting the type of 'axis' (line 38)
    axis_115354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 40), 'axis')
    slice_115355 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 38, 32), axis_115354, None, None)
    # Getting the type of 'y' (line 38)
    y_115356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 32), 'y')
    # Obtaining the member 'shape' of a type (line 38)
    shape_115357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 38, 32), y_115356, 'shape')
    # Obtaining the member '__getitem__' of a type (line 38)
    getitem___115358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 38, 32), shape_115357, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 38)
    subscript_call_result_115359 = invoke(stypy.reporting.localization.Localization(__file__, 38, 32), getitem___115358, slice_115355)
    
    # Obtaining the member '__getitem__' of a type (line 38)
    getitem___115360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 38, 32), subscript_call_result_115359, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 38)
    subscript_call_result_115361 = invoke(stypy.reporting.localization.Localization(__file__, 38, 32), getitem___115360, slice_115353)
    
    # Applying the binary operator '+' (line 38)
    result_add_115362 = python_operator(stypy.reporting.localization.Localization(__file__, 38, 30), '+', result_add_115351, subscript_call_result_115361)
    
    # Assigning a type to the variable 'target_shape' (line 37)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 37, 4), 'target_shape', result_add_115362)
    
    # Call to assert_equal(...): (line 39)
    # Processing the call arguments (line 39)
    # Getting the type of 'yi' (line 39)
    yi_115364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 17), 'yi', False)
    # Obtaining the member 'shape' of a type (line 39)
    shape_115365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 39, 17), yi_115364, 'shape')
    # Getting the type of 'target_shape' (line 39)
    target_shape_115366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 27), 'target_shape', False)
    # Processing the call keyword arguments (line 39)
    kwargs_115367 = {}
    # Getting the type of 'assert_equal' (line 39)
    assert_equal_115363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 39)
    assert_equal_call_result_115368 = invoke(stypy.reporting.localization.Localization(__file__, 39, 4), assert_equal_115363, *[shape_115365, target_shape_115366], **kwargs_115367)
    
    
    
    # Evaluating a boolean operation
    # Getting the type of 'x_shape' (line 42)
    x_shape_115369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 7), 'x_shape')
    
    # Getting the type of 'y' (line 42)
    y_115370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 19), 'y')
    # Obtaining the member 'size' of a type (line 42)
    size_115371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 42, 19), y_115370, 'size')
    int_115372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 28), 'int')
    # Applying the binary operator '>' (line 42)
    result_gt_115373 = python_operator(stypy.reporting.localization.Localization(__file__, 42, 19), '>', size_115371, int_115372)
    
    # Applying the binary operator 'and' (line 42)
    result_and_keyword_115374 = python_operator(stypy.reporting.localization.Localization(__file__, 42, 7), 'and', x_shape_115369, result_gt_115373)
    
    # Testing the type of an if condition (line 42)
    if_condition_115375 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 42, 4), result_and_keyword_115374)
    # Assigning a type to the variable 'if_condition_115375' (line 42)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'if_condition_115375', if_condition_115375)
    # SSA begins for if statement (line 42)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to (...): (line 43)
    # Processing the call arguments (line 43)
    
    # Call to list(...): (line 43)
    # Processing the call arguments (line 43)
    # Getting the type of 'xi' (line 43)
    xi_115391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 73), 'xi', False)
    # Processing the call keyword arguments (line 43)
    kwargs_115392 = {}
    # Getting the type of 'list' (line 43)
    list_115390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 68), 'list', False)
    # Calling list(args, kwargs) (line 43)
    list_call_result_115393 = invoke(stypy.reporting.localization.Localization(__file__, 43, 68), list_115390, *[xi_115391], **kwargs_115392)
    
    # Processing the call keyword arguments (line 43)
    kwargs_115394 = {}
    
    # Call to interpolator_cls(...): (line 43)
    # Processing the call arguments (line 43)
    
    # Call to list(...): (line 43)
    # Processing the call arguments (line 43)
    # Getting the type of 'x' (line 43)
    x_115378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 30), 'x', False)
    # Processing the call keyword arguments (line 43)
    kwargs_115379 = {}
    # Getting the type of 'list' (line 43)
    list_115377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 25), 'list', False)
    # Calling list(args, kwargs) (line 43)
    list_call_result_115380 = invoke(stypy.reporting.localization.Localization(__file__, 43, 25), list_115377, *[x_115378], **kwargs_115379)
    
    
    # Call to list(...): (line 43)
    # Processing the call arguments (line 43)
    # Getting the type of 'y' (line 43)
    y_115382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 39), 'y', False)
    # Processing the call keyword arguments (line 43)
    kwargs_115383 = {}
    # Getting the type of 'list' (line 43)
    list_115381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 34), 'list', False)
    # Calling list(args, kwargs) (line 43)
    list_call_result_115384 = invoke(stypy.reporting.localization.Localization(__file__, 43, 34), list_115381, *[y_115382], **kwargs_115383)
    
    # Processing the call keyword arguments (line 43)
    # Getting the type of 'axis' (line 43)
    axis_115385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 48), 'axis', False)
    keyword_115386 = axis_115385
    # Getting the type of 'extra_args' (line 43)
    extra_args_115387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 56), 'extra_args', False)
    kwargs_115388 = {'extra_args_115387': extra_args_115387, 'axis': keyword_115386}
    # Getting the type of 'interpolator_cls' (line 43)
    interpolator_cls_115376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 8), 'interpolator_cls', False)
    # Calling interpolator_cls(args, kwargs) (line 43)
    interpolator_cls_call_result_115389 = invoke(stypy.reporting.localization.Localization(__file__, 43, 8), interpolator_cls_115376, *[list_call_result_115380, list_call_result_115384], **kwargs_115388)
    
    # Calling (args, kwargs) (line 43)
    _call_result_115395 = invoke(stypy.reporting.localization.Localization(__file__, 43, 8), interpolator_cls_call_result_115389, *[list_call_result_115393], **kwargs_115394)
    
    # SSA join for if statement (line 42)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'xi' (line 46)
    xi_115396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 7), 'xi')
    # Obtaining the member 'size' of a type (line 46)
    size_115397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 46, 7), xi_115396, 'size')
    int_115398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 46, 17), 'int')
    # Applying the binary operator '>' (line 46)
    result_gt_115399 = python_operator(stypy.reporting.localization.Localization(__file__, 46, 7), '>', size_115397, int_115398)
    
    
    # Getting the type of 'deriv_shape' (line 46)
    deriv_shape_115400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 23), 'deriv_shape')
    # Getting the type of 'None' (line 46)
    None_115401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 38), 'None')
    # Applying the binary operator 'is' (line 46)
    result_is__115402 = python_operator(stypy.reporting.localization.Localization(__file__, 46, 23), 'is', deriv_shape_115400, None_115401)
    
    # Applying the binary operator 'and' (line 46)
    result_and_keyword_115403 = python_operator(stypy.reporting.localization.Localization(__file__, 46, 7), 'and', result_gt_115399, result_is__115402)
    
    # Testing the type of an if condition (line 46)
    if_condition_115404 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 46, 4), result_and_keyword_115403)
    # Assigning a type to the variable 'if_condition_115404' (line 46)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 46, 4), 'if_condition_115404', if_condition_115404)
    # SSA begins for if statement (line 46)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a BinOp to a Name (line 47):
    
    # Assigning a BinOp to a Name (line 47):
    
    # Obtaining the type of the subscript
    # Getting the type of 'axis' (line 47)
    axis_115405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 28), 'axis')
    slice_115406 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 47, 19), None, axis_115405, None)
    # Getting the type of 'y' (line 47)
    y_115407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 19), 'y')
    # Obtaining the member 'shape' of a type (line 47)
    shape_115408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 19), y_115407, 'shape')
    # Obtaining the member '__getitem__' of a type (line 47)
    getitem___115409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 19), shape_115408, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 47)
    subscript_call_result_115410 = invoke(stypy.reporting.localization.Localization(__file__, 47, 19), getitem___115409, slice_115406)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 47)
    tuple_115411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 37), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 47)
    # Adding element type (line 47)
    int_115412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 37), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 47, 37), tuple_115411, int_115412)
    
    
    # Call to len(...): (line 47)
    # Processing the call arguments (line 47)
    # Getting the type of 'x_shape' (line 47)
    x_shape_115414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 45), 'x_shape', False)
    # Processing the call keyword arguments (line 47)
    kwargs_115415 = {}
    # Getting the type of 'len' (line 47)
    len_115413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 41), 'len', False)
    # Calling len(args, kwargs) (line 47)
    len_call_result_115416 = invoke(stypy.reporting.localization.Localization(__file__, 47, 41), len_115413, *[x_shape_115414], **kwargs_115415)
    
    # Applying the binary operator '*' (line 47)
    result_mul_115417 = python_operator(stypy.reporting.localization.Localization(__file__, 47, 36), '*', tuple_115411, len_call_result_115416)
    
    # Applying the binary operator '+' (line 47)
    result_add_115418 = python_operator(stypy.reporting.localization.Localization(__file__, 47, 19), '+', subscript_call_result_115410, result_mul_115417)
    
    
    # Obtaining the type of the subscript
    int_115419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 71), 'int')
    slice_115420 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 47, 56), int_115419, None, None)
    
    # Obtaining the type of the subscript
    # Getting the type of 'axis' (line 47)
    axis_115421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 64), 'axis')
    slice_115422 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 47, 56), axis_115421, None, None)
    # Getting the type of 'y' (line 47)
    y_115423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 56), 'y')
    # Obtaining the member 'shape' of a type (line 47)
    shape_115424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 56), y_115423, 'shape')
    # Obtaining the member '__getitem__' of a type (line 47)
    getitem___115425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 56), shape_115424, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 47)
    subscript_call_result_115426 = invoke(stypy.reporting.localization.Localization(__file__, 47, 56), getitem___115425, slice_115422)
    
    # Obtaining the member '__getitem__' of a type (line 47)
    getitem___115427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 56), subscript_call_result_115426, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 47)
    subscript_call_result_115428 = invoke(stypy.reporting.localization.Localization(__file__, 47, 56), getitem___115427, slice_115420)
    
    # Applying the binary operator '+' (line 47)
    result_add_115429 = python_operator(stypy.reporting.localization.Localization(__file__, 47, 54), '+', result_add_115418, subscript_call_result_115428)
    
    # Assigning a type to the variable 'bs_shape' (line 47)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 47, 8), 'bs_shape', result_add_115429)
    
    # Assigning a Subscript to a Name (line 48):
    
    # Assigning a Subscript to a Name (line 48):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 48)
    tuple_115430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 48)
    # Adding element type (line 48)
    
    # Call to slice(...): (line 48)
    # Processing the call arguments (line 48)
    # Getting the type of 'None' (line 48)
    None_115432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 23), 'None', False)
    # Processing the call keyword arguments (line 48)
    kwargs_115433 = {}
    # Getting the type of 'slice' (line 48)
    slice_115431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 17), 'slice', False)
    # Calling slice(args, kwargs) (line 48)
    slice_call_result_115434 = invoke(stypy.reporting.localization.Localization(__file__, 48, 17), slice_115431, *[None_115432], **kwargs_115433)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 48, 17), tuple_115430, slice_call_result_115434)
    
    # Getting the type of 'axis' (line 48)
    axis_115435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 33), 'axis')
    # Getting the type of 'y' (line 48)
    y_115436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 40), 'y')
    # Obtaining the member 'ndim' of a type (line 48)
    ndim_115437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 48, 40), y_115436, 'ndim')
    # Applying the binary operator '%' (line 48)
    result_mod_115438 = python_operator(stypy.reporting.localization.Localization(__file__, 48, 33), '%', axis_115435, ndim_115437)
    
    # Applying the binary operator '*' (line 48)
    result_mul_115439 = python_operator(stypy.reporting.localization.Localization(__file__, 48, 16), '*', tuple_115430, result_mod_115438)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 48)
    tuple_115440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 52), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 48)
    # Adding element type (line 48)
    int_115441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 52), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 48, 52), tuple_115440, int_115441)
    
    # Applying the binary operator '+' (line 48)
    result_add_115442 = python_operator(stypy.reporting.localization.Localization(__file__, 48, 15), '+', result_mul_115439, tuple_115440)
    
    # Getting the type of 'y' (line 48)
    y_115443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 13), 'y')
    # Obtaining the member '__getitem__' of a type (line 48)
    getitem___115444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 48, 13), y_115443, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 48)
    subscript_call_result_115445 = invoke(stypy.reporting.localization.Localization(__file__, 48, 13), getitem___115444, result_add_115442)
    
    # Assigning a type to the variable 'yv' (line 48)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 48, 8), 'yv', subscript_call_result_115445)
    
    # Assigning a Call to a Name (line 49):
    
    # Assigning a Call to a Name (line 49):
    
    # Call to reshape(...): (line 49)
    # Processing the call arguments (line 49)
    # Getting the type of 'bs_shape' (line 49)
    bs_shape_115448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 24), 'bs_shape', False)
    # Processing the call keyword arguments (line 49)
    kwargs_115449 = {}
    # Getting the type of 'yv' (line 49)
    yv_115446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 13), 'yv', False)
    # Obtaining the member 'reshape' of a type (line 49)
    reshape_115447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 49, 13), yv_115446, 'reshape')
    # Calling reshape(args, kwargs) (line 49)
    reshape_call_result_115450 = invoke(stypy.reporting.localization.Localization(__file__, 49, 13), reshape_115447, *[bs_shape_115448], **kwargs_115449)
    
    # Assigning a type to the variable 'yv' (line 49)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 49, 8), 'yv', reshape_call_result_115450)
    
    # Assigning a Call to a Tuple (line 51):
    
    # Assigning a Subscript to a Name (line 51):
    
    # Obtaining the type of the subscript
    int_115451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 8), 'int')
    
    # Call to broadcast_arrays(...): (line 51)
    # Processing the call arguments (line 51)
    # Getting the type of 'yi' (line 51)
    yi_115454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 36), 'yi', False)
    # Getting the type of 'yv' (line 51)
    yv_115455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 40), 'yv', False)
    # Processing the call keyword arguments (line 51)
    kwargs_115456 = {}
    # Getting the type of 'np' (line 51)
    np_115452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 16), 'np', False)
    # Obtaining the member 'broadcast_arrays' of a type (line 51)
    broadcast_arrays_115453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 16), np_115452, 'broadcast_arrays')
    # Calling broadcast_arrays(args, kwargs) (line 51)
    broadcast_arrays_call_result_115457 = invoke(stypy.reporting.localization.Localization(__file__, 51, 16), broadcast_arrays_115453, *[yi_115454, yv_115455], **kwargs_115456)
    
    # Obtaining the member '__getitem__' of a type (line 51)
    getitem___115458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 8), broadcast_arrays_call_result_115457, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 51)
    subscript_call_result_115459 = invoke(stypy.reporting.localization.Localization(__file__, 51, 8), getitem___115458, int_115451)
    
    # Assigning a type to the variable 'tuple_var_assignment_115230' (line 51)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 8), 'tuple_var_assignment_115230', subscript_call_result_115459)
    
    # Assigning a Subscript to a Name (line 51):
    
    # Obtaining the type of the subscript
    int_115460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 8), 'int')
    
    # Call to broadcast_arrays(...): (line 51)
    # Processing the call arguments (line 51)
    # Getting the type of 'yi' (line 51)
    yi_115463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 36), 'yi', False)
    # Getting the type of 'yv' (line 51)
    yv_115464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 40), 'yv', False)
    # Processing the call keyword arguments (line 51)
    kwargs_115465 = {}
    # Getting the type of 'np' (line 51)
    np_115461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 16), 'np', False)
    # Obtaining the member 'broadcast_arrays' of a type (line 51)
    broadcast_arrays_115462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 16), np_115461, 'broadcast_arrays')
    # Calling broadcast_arrays(args, kwargs) (line 51)
    broadcast_arrays_call_result_115466 = invoke(stypy.reporting.localization.Localization(__file__, 51, 16), broadcast_arrays_115462, *[yi_115463, yv_115464], **kwargs_115465)
    
    # Obtaining the member '__getitem__' of a type (line 51)
    getitem___115467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 8), broadcast_arrays_call_result_115466, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 51)
    subscript_call_result_115468 = invoke(stypy.reporting.localization.Localization(__file__, 51, 8), getitem___115467, int_115460)
    
    # Assigning a type to the variable 'tuple_var_assignment_115231' (line 51)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 8), 'tuple_var_assignment_115231', subscript_call_result_115468)
    
    # Assigning a Name to a Name (line 51):
    # Getting the type of 'tuple_var_assignment_115230' (line 51)
    tuple_var_assignment_115230_115469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 8), 'tuple_var_assignment_115230')
    # Assigning a type to the variable 'yi' (line 51)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 8), 'yi', tuple_var_assignment_115230_115469)
    
    # Assigning a Name to a Name (line 51):
    # Getting the type of 'tuple_var_assignment_115231' (line 51)
    tuple_var_assignment_115231_115470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 8), 'tuple_var_assignment_115231')
    # Assigning a type to the variable 'y' (line 51)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 51, 12), 'y', tuple_var_assignment_115231_115470)
    
    # Call to assert_allclose(...): (line 52)
    # Processing the call arguments (line 52)
    # Getting the type of 'yi' (line 52)
    yi_115472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 24), 'yi', False)
    # Getting the type of 'y' (line 52)
    y_115473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 28), 'y', False)
    # Processing the call keyword arguments (line 52)
    kwargs_115474 = {}
    # Getting the type of 'assert_allclose' (line 52)
    assert_allclose_115471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 52)
    assert_allclose_call_result_115475 = invoke(stypy.reporting.localization.Localization(__file__, 52, 8), assert_allclose_115471, *[yi_115472, y_115473], **kwargs_115474)
    
    # SSA join for if statement (line 46)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'check_shape(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'check_shape' in the type store
    # Getting the type of 'stypy_return_type' (line 21)
    stypy_return_type_115476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_115476)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'check_shape'
    return stypy_return_type_115476

# Assigning a type to the variable 'check_shape' (line 21)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 0), 'check_shape', check_shape)

# Assigning a List to a Name (line 54):

# Assigning a List to a Name (line 54):

# Obtaining an instance of the builtin type 'list' (line 54)
list_115477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 9), 'list')
# Adding type elements to the builtin type 'list' instance (line 54)
# Adding element type (line 54)

# Obtaining an instance of the builtin type 'tuple' (line 54)
tuple_115478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 10), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 54)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 9), list_115477, tuple_115478)
# Adding element type (line 54)

# Obtaining an instance of the builtin type 'tuple' (line 54)
tuple_115479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 15), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 54)
# Adding element type (line 54)
int_115480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 15), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 15), tuple_115479, int_115480)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 9), list_115477, tuple_115479)
# Adding element type (line 54)

# Obtaining an instance of the builtin type 'tuple' (line 54)
tuple_115481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 21), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 54)
# Adding element type (line 54)
int_115482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 21), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 21), tuple_115481, int_115482)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 9), list_115477, tuple_115481)
# Adding element type (line 54)

# Obtaining an instance of the builtin type 'tuple' (line 54)
tuple_115483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 27), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 54)
# Adding element type (line 54)
int_115484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 27), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 27), tuple_115483, int_115484)
# Adding element type (line 54)
int_115485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 30), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 27), tuple_115483, int_115485)
# Adding element type (line 54)
int_115486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 33), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 27), tuple_115483, int_115486)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 9), list_115477, tuple_115483)

# Assigning a type to the variable 'SHAPES' (line 54)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 54, 0), 'SHAPES', list_115477)

@norecursion
def test_shapes(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_shapes'
    module_type_store = module_type_store.open_function_context('test_shapes', 57, 0, False)
    
    # Passed parameters checking function
    test_shapes.stypy_localization = localization
    test_shapes.stypy_type_of_self = None
    test_shapes.stypy_type_store = module_type_store
    test_shapes.stypy_function_name = 'test_shapes'
    test_shapes.stypy_param_names_list = []
    test_shapes.stypy_varargs_param_name = None
    test_shapes.stypy_kwargs_param_name = None
    test_shapes.stypy_call_defaults = defaults
    test_shapes.stypy_call_varargs = varargs
    test_shapes.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_shapes', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_shapes', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_shapes(...)' code ##################


    @norecursion
    def spl_interp(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'spl_interp'
        module_type_store = module_type_store.open_function_context('spl_interp', 59, 4, False)
        
        # Passed parameters checking function
        spl_interp.stypy_localization = localization
        spl_interp.stypy_type_of_self = None
        spl_interp.stypy_type_store = module_type_store
        spl_interp.stypy_function_name = 'spl_interp'
        spl_interp.stypy_param_names_list = ['x', 'y', 'axis']
        spl_interp.stypy_varargs_param_name = None
        spl_interp.stypy_kwargs_param_name = None
        spl_interp.stypy_call_defaults = defaults
        spl_interp.stypy_call_varargs = varargs
        spl_interp.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'spl_interp', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'spl_interp', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'spl_interp(...)' code ##################

        
        # Call to make_interp_spline(...): (line 60)
        # Processing the call arguments (line 60)
        # Getting the type of 'x' (line 60)
        x_115488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 34), 'x', False)
        # Getting the type of 'y' (line 60)
        y_115489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 37), 'y', False)
        # Processing the call keyword arguments (line 60)
        # Getting the type of 'axis' (line 60)
        axis_115490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 45), 'axis', False)
        keyword_115491 = axis_115490
        kwargs_115492 = {'axis': keyword_115491}
        # Getting the type of 'make_interp_spline' (line 60)
        make_interp_spline_115487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 15), 'make_interp_spline', False)
        # Calling make_interp_spline(args, kwargs) (line 60)
        make_interp_spline_call_result_115493 = invoke(stypy.reporting.localization.Localization(__file__, 60, 15), make_interp_spline_115487, *[x_115488, y_115489], **kwargs_115492)
        
        # Assigning a type to the variable 'stypy_return_type' (line 60)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 60, 8), 'stypy_return_type', make_interp_spline_call_result_115493)
        
        # ################# End of 'spl_interp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'spl_interp' in the type store
        # Getting the type of 'stypy_return_type' (line 59)
        stypy_return_type_115494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115494)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'spl_interp'
        return stypy_return_type_115494

    # Assigning a type to the variable 'spl_interp' (line 59)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 59, 4), 'spl_interp', spl_interp)
    
    
    # Obtaining an instance of the builtin type 'list' (line 62)
    list_115495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 62, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 62)
    # Adding element type (line 62)
    # Getting the type of 'KroghInterpolator' (line 62)
    KroghInterpolator_115496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 15), 'KroghInterpolator')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 14), list_115495, KroghInterpolator_115496)
    # Adding element type (line 62)
    # Getting the type of 'BarycentricInterpolator' (line 62)
    BarycentricInterpolator_115497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 34), 'BarycentricInterpolator')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 14), list_115495, BarycentricInterpolator_115497)
    # Adding element type (line 62)
    # Getting the type of 'pchip' (line 62)
    pchip_115498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 59), 'pchip')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 14), list_115495, pchip_115498)
    # Adding element type (line 62)
    # Getting the type of 'Akima1DInterpolator' (line 63)
    Akima1DInterpolator_115499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 15), 'Akima1DInterpolator')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 14), list_115495, Akima1DInterpolator_115499)
    # Adding element type (line 62)
    # Getting the type of 'CubicSpline' (line 63)
    CubicSpline_115500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 36), 'CubicSpline')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 14), list_115495, CubicSpline_115500)
    # Adding element type (line 62)
    # Getting the type of 'spl_interp' (line 63)
    spl_interp_115501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 49), 'spl_interp')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 62, 14), list_115495, spl_interp_115501)
    
    # Testing the type of a for loop iterable (line 62)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 62, 4), list_115495)
    # Getting the type of the for loop variable (line 62)
    for_loop_var_115502 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 62, 4), list_115495)
    # Assigning a type to the variable 'ip' (line 62)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 62, 4), 'ip', for_loop_var_115502)
    # SSA begins for a for statement (line 62)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'SHAPES' (line 64)
    SHAPES_115503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 64, 18), 'SHAPES')
    # Testing the type of a for loop iterable (line 64)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 64, 8), SHAPES_115503)
    # Getting the type of the for loop variable (line 64)
    for_loop_var_115504 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 64, 8), SHAPES_115503)
    # Assigning a type to the variable 's1' (line 64)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 64, 8), 's1', for_loop_var_115504)
    # SSA begins for a for statement (line 64)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'SHAPES' (line 65)
    SHAPES_115505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 22), 'SHAPES')
    # Testing the type of a for loop iterable (line 65)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 65, 12), SHAPES_115505)
    # Getting the type of the for loop variable (line 65)
    for_loop_var_115506 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 65, 12), SHAPES_115505)
    # Assigning a type to the variable 's2' (line 65)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 12), 's2', for_loop_var_115506)
    # SSA begins for a for statement (line 65)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to range(...): (line 66)
    # Processing the call arguments (line 66)
    
    
    # Call to len(...): (line 66)
    # Processing the call arguments (line 66)
    # Getting the type of 's2' (line 66)
    s2_115509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 39), 's2', False)
    # Processing the call keyword arguments (line 66)
    kwargs_115510 = {}
    # Getting the type of 'len' (line 66)
    len_115508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 35), 'len', False)
    # Calling len(args, kwargs) (line 66)
    len_call_result_115511 = invoke(stypy.reporting.localization.Localization(__file__, 66, 35), len_115508, *[s2_115509], **kwargs_115510)
    
    # Applying the 'usub' unary operator (line 66)
    result___neg___115512 = python_operator(stypy.reporting.localization.Localization(__file__, 66, 34), 'usub', len_call_result_115511)
    
    
    # Call to len(...): (line 66)
    # Processing the call arguments (line 66)
    # Getting the type of 's2' (line 66)
    s2_115514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 48), 's2', False)
    # Processing the call keyword arguments (line 66)
    kwargs_115515 = {}
    # Getting the type of 'len' (line 66)
    len_115513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 44), 'len', False)
    # Calling len(args, kwargs) (line 66)
    len_call_result_115516 = invoke(stypy.reporting.localization.Localization(__file__, 66, 44), len_115513, *[s2_115514], **kwargs_115515)
    
    # Processing the call keyword arguments (line 66)
    kwargs_115517 = {}
    # Getting the type of 'range' (line 66)
    range_115507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 28), 'range', False)
    # Calling range(args, kwargs) (line 66)
    range_call_result_115518 = invoke(stypy.reporting.localization.Localization(__file__, 66, 28), range_115507, *[result___neg___115512, len_call_result_115516], **kwargs_115517)
    
    # Testing the type of a for loop iterable (line 66)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 66, 16), range_call_result_115518)
    # Getting the type of the for loop variable (line 66)
    for_loop_var_115519 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 66, 16), range_call_result_115518)
    # Assigning a type to the variable 'axis' (line 66)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 66, 16), 'axis', for_loop_var_115519)
    # SSA begins for a for statement (line 66)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Getting the type of 'ip' (line 67)
    ip_115520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 23), 'ip')
    # Getting the type of 'CubicSpline' (line 67)
    CubicSpline_115521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 29), 'CubicSpline')
    # Applying the binary operator '!=' (line 67)
    result_ne_115522 = python_operator(stypy.reporting.localization.Localization(__file__, 67, 23), '!=', ip_115520, CubicSpline_115521)
    
    # Testing the type of an if condition (line 67)
    if_condition_115523 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 67, 20), result_ne_115522)
    # Assigning a type to the variable 'if_condition_115523' (line 67)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 67, 20), 'if_condition_115523', if_condition_115523)
    # SSA begins for if statement (line 67)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to check_shape(...): (line 68)
    # Processing the call arguments (line 68)
    # Getting the type of 'ip' (line 68)
    ip_115525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 36), 'ip', False)
    # Getting the type of 's1' (line 68)
    s1_115526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 40), 's1', False)
    # Getting the type of 's2' (line 68)
    s2_115527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 44), 's2', False)
    # Getting the type of 'None' (line 68)
    None_115528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 48), 'None', False)
    # Getting the type of 'axis' (line 68)
    axis_115529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 54), 'axis', False)
    # Processing the call keyword arguments (line 68)
    kwargs_115530 = {}
    # Getting the type of 'check_shape' (line 68)
    check_shape_115524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 24), 'check_shape', False)
    # Calling check_shape(args, kwargs) (line 68)
    check_shape_call_result_115531 = invoke(stypy.reporting.localization.Localization(__file__, 68, 24), check_shape_115524, *[ip_115525, s1_115526, s2_115527, None_115528, axis_115529], **kwargs_115530)
    
    # SSA branch for the else part of an if statement (line 67)
    module_type_store.open_ssa_branch('else')
    
    
    # Obtaining an instance of the builtin type 'list' (line 70)
    list_115532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, 34), 'list')
    # Adding type elements to the builtin type 'list' instance (line 70)
    # Adding element type (line 70)
    str_115533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, 35), 'str', 'natural')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 70, 34), list_115532, str_115533)
    # Adding element type (line 70)
    str_115534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, 46), 'str', 'clamped')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 70, 34), list_115532, str_115534)
    
    # Testing the type of a for loop iterable (line 70)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 70, 24), list_115532)
    # Getting the type of the for loop variable (line 70)
    for_loop_var_115535 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 70, 24), list_115532)
    # Assigning a type to the variable 'bc' (line 70)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 70, 24), 'bc', for_loop_var_115535)
    # SSA begins for a for statement (line 70)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Dict to a Name (line 71):
    
    # Assigning a Dict to a Name (line 71):
    
    # Obtaining an instance of the builtin type 'dict' (line 71)
    dict_115536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 71, 36), 'dict')
    # Adding type elements to the builtin type 'dict' instance (line 71)
    # Adding element type (key, value) (line 71)
    str_115537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 71, 37), 'str', 'bc_type')
    # Getting the type of 'bc' (line 71)
    bc_115538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 48), 'bc')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 71, 36), dict_115536, (str_115537, bc_115538))
    
    # Assigning a type to the variable 'extra' (line 71)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 71, 28), 'extra', dict_115536)
    
    # Call to check_shape(...): (line 72)
    # Processing the call arguments (line 72)
    # Getting the type of 'ip' (line 72)
    ip_115540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 40), 'ip', False)
    # Getting the type of 's1' (line 72)
    s1_115541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 44), 's1', False)
    # Getting the type of 's2' (line 72)
    s2_115542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 48), 's2', False)
    # Getting the type of 'None' (line 72)
    None_115543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 52), 'None', False)
    # Getting the type of 'axis' (line 72)
    axis_115544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 58), 'axis', False)
    # Getting the type of 'extra' (line 72)
    extra_115545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 64), 'extra', False)
    # Processing the call keyword arguments (line 72)
    kwargs_115546 = {}
    # Getting the type of 'check_shape' (line 72)
    check_shape_115539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 28), 'check_shape', False)
    # Calling check_shape(args, kwargs) (line 72)
    check_shape_call_result_115547 = invoke(stypy.reporting.localization.Localization(__file__, 72, 28), check_shape_115539, *[ip_115540, s1_115541, s2_115542, None_115543, axis_115544, extra_115545], **kwargs_115546)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 67)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_shapes(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_shapes' in the type store
    # Getting the type of 'stypy_return_type' (line 57)
    stypy_return_type_115548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_115548)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_shapes'
    return stypy_return_type_115548

# Assigning a type to the variable 'test_shapes' (line 57)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 57, 0), 'test_shapes', test_shapes)

@norecursion
def test_derivs_shapes(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_derivs_shapes'
    module_type_store = module_type_store.open_function_context('test_derivs_shapes', 74, 0, False)
    
    # Passed parameters checking function
    test_derivs_shapes.stypy_localization = localization
    test_derivs_shapes.stypy_type_of_self = None
    test_derivs_shapes.stypy_type_store = module_type_store
    test_derivs_shapes.stypy_function_name = 'test_derivs_shapes'
    test_derivs_shapes.stypy_param_names_list = []
    test_derivs_shapes.stypy_varargs_param_name = None
    test_derivs_shapes.stypy_kwargs_param_name = None
    test_derivs_shapes.stypy_call_defaults = defaults
    test_derivs_shapes.stypy_call_varargs = varargs
    test_derivs_shapes.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_derivs_shapes', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_derivs_shapes', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_derivs_shapes(...)' code ##################


    @norecursion
    def krogh_derivs(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 32), 'int')
        defaults = [int_115549]
        # Create a new context for function 'krogh_derivs'
        module_type_store = module_type_store.open_function_context('krogh_derivs', 75, 4, False)
        
        # Passed parameters checking function
        krogh_derivs.stypy_localization = localization
        krogh_derivs.stypy_type_of_self = None
        krogh_derivs.stypy_type_store = module_type_store
        krogh_derivs.stypy_function_name = 'krogh_derivs'
        krogh_derivs.stypy_param_names_list = ['x', 'y', 'axis']
        krogh_derivs.stypy_varargs_param_name = None
        krogh_derivs.stypy_kwargs_param_name = None
        krogh_derivs.stypy_call_defaults = defaults
        krogh_derivs.stypy_call_varargs = varargs
        krogh_derivs.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'krogh_derivs', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'krogh_derivs', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'krogh_derivs(...)' code ##################

        
        # Call to KroghInterpolator(...): (line 76)
        # Processing the call arguments (line 76)
        # Getting the type of 'x' (line 76)
        x_115551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 33), 'x', False)
        # Getting the type of 'y' (line 76)
        y_115552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 36), 'y', False)
        # Getting the type of 'axis' (line 76)
        axis_115553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 39), 'axis', False)
        # Processing the call keyword arguments (line 76)
        kwargs_115554 = {}
        # Getting the type of 'KroghInterpolator' (line 76)
        KroghInterpolator_115550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 15), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 76)
        KroghInterpolator_call_result_115555 = invoke(stypy.reporting.localization.Localization(__file__, 76, 15), KroghInterpolator_115550, *[x_115551, y_115552, axis_115553], **kwargs_115554)
        
        # Obtaining the member 'derivatives' of a type (line 76)
        derivatives_115556 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 76, 15), KroghInterpolator_call_result_115555, 'derivatives')
        # Assigning a type to the variable 'stypy_return_type' (line 76)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 76, 8), 'stypy_return_type', derivatives_115556)
        
        # ################# End of 'krogh_derivs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'krogh_derivs' in the type store
        # Getting the type of 'stypy_return_type' (line 75)
        stypy_return_type_115557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115557)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'krogh_derivs'
        return stypy_return_type_115557

    # Assigning a type to the variable 'krogh_derivs' (line 75)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 4), 'krogh_derivs', krogh_derivs)
    
    # Getting the type of 'SHAPES' (line 78)
    SHAPES_115558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 14), 'SHAPES')
    # Testing the type of a for loop iterable (line 78)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 78, 4), SHAPES_115558)
    # Getting the type of the for loop variable (line 78)
    for_loop_var_115559 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 78, 4), SHAPES_115558)
    # Assigning a type to the variable 's1' (line 78)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 4), 's1', for_loop_var_115559)
    # SSA begins for a for statement (line 78)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'SHAPES' (line 79)
    SHAPES_115560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 18), 'SHAPES')
    # Testing the type of a for loop iterable (line 79)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 79, 8), SHAPES_115560)
    # Getting the type of the for loop variable (line 79)
    for_loop_var_115561 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 79, 8), SHAPES_115560)
    # Assigning a type to the variable 's2' (line 79)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 79, 8), 's2', for_loop_var_115561)
    # SSA begins for a for statement (line 79)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to range(...): (line 80)
    # Processing the call arguments (line 80)
    
    
    # Call to len(...): (line 80)
    # Processing the call arguments (line 80)
    # Getting the type of 's2' (line 80)
    s2_115564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 35), 's2', False)
    # Processing the call keyword arguments (line 80)
    kwargs_115565 = {}
    # Getting the type of 'len' (line 80)
    len_115563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 31), 'len', False)
    # Calling len(args, kwargs) (line 80)
    len_call_result_115566 = invoke(stypy.reporting.localization.Localization(__file__, 80, 31), len_115563, *[s2_115564], **kwargs_115565)
    
    # Applying the 'usub' unary operator (line 80)
    result___neg___115567 = python_operator(stypy.reporting.localization.Localization(__file__, 80, 30), 'usub', len_call_result_115566)
    
    
    # Call to len(...): (line 80)
    # Processing the call arguments (line 80)
    # Getting the type of 's2' (line 80)
    s2_115569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 44), 's2', False)
    # Processing the call keyword arguments (line 80)
    kwargs_115570 = {}
    # Getting the type of 'len' (line 80)
    len_115568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 40), 'len', False)
    # Calling len(args, kwargs) (line 80)
    len_call_result_115571 = invoke(stypy.reporting.localization.Localization(__file__, 80, 40), len_115568, *[s2_115569], **kwargs_115570)
    
    # Processing the call keyword arguments (line 80)
    kwargs_115572 = {}
    # Getting the type of 'range' (line 80)
    range_115562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 24), 'range', False)
    # Calling range(args, kwargs) (line 80)
    range_call_result_115573 = invoke(stypy.reporting.localization.Localization(__file__, 80, 24), range_115562, *[result___neg___115567, len_call_result_115571], **kwargs_115572)
    
    # Testing the type of a for loop iterable (line 80)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 80, 12), range_call_result_115573)
    # Getting the type of the for loop variable (line 80)
    for_loop_var_115574 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 80, 12), range_call_result_115573)
    # Assigning a type to the variable 'axis' (line 80)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 12), 'axis', for_loop_var_115574)
    # SSA begins for a for statement (line 80)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to check_shape(...): (line 81)
    # Processing the call arguments (line 81)
    # Getting the type of 'krogh_derivs' (line 81)
    krogh_derivs_115576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 28), 'krogh_derivs', False)
    # Getting the type of 's1' (line 81)
    s1_115577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 42), 's1', False)
    # Getting the type of 's2' (line 81)
    s2_115578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 46), 's2', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 81)
    tuple_115579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 51), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 81)
    # Adding element type (line 81)
    int_115580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 51), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 81, 51), tuple_115579, int_115580)
    
    # Getting the type of 'axis' (line 81)
    axis_115581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 56), 'axis', False)
    # Processing the call keyword arguments (line 81)
    kwargs_115582 = {}
    # Getting the type of 'check_shape' (line 81)
    check_shape_115575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'check_shape', False)
    # Calling check_shape(args, kwargs) (line 81)
    check_shape_call_result_115583 = invoke(stypy.reporting.localization.Localization(__file__, 81, 16), check_shape_115575, *[krogh_derivs_115576, s1_115577, s2_115578, tuple_115579, axis_115581], **kwargs_115582)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_derivs_shapes(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_derivs_shapes' in the type store
    # Getting the type of 'stypy_return_type' (line 74)
    stypy_return_type_115584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_115584)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_derivs_shapes'
    return stypy_return_type_115584

# Assigning a type to the variable 'test_derivs_shapes' (line 74)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 0), 'test_derivs_shapes', test_derivs_shapes)

@norecursion
def test_deriv_shapes(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_deriv_shapes'
    module_type_store = module_type_store.open_function_context('test_deriv_shapes', 84, 0, False)
    
    # Passed parameters checking function
    test_deriv_shapes.stypy_localization = localization
    test_deriv_shapes.stypy_type_of_self = None
    test_deriv_shapes.stypy_type_store = module_type_store
    test_deriv_shapes.stypy_function_name = 'test_deriv_shapes'
    test_deriv_shapes.stypy_param_names_list = []
    test_deriv_shapes.stypy_varargs_param_name = None
    test_deriv_shapes.stypy_kwargs_param_name = None
    test_deriv_shapes.stypy_call_defaults = defaults
    test_deriv_shapes.stypy_call_varargs = varargs
    test_deriv_shapes.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_deriv_shapes', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_deriv_shapes', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_deriv_shapes(...)' code ##################


    @norecursion
    def krogh_deriv(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 31), 'int')
        defaults = [int_115585]
        # Create a new context for function 'krogh_deriv'
        module_type_store = module_type_store.open_function_context('krogh_deriv', 85, 4, False)
        
        # Passed parameters checking function
        krogh_deriv.stypy_localization = localization
        krogh_deriv.stypy_type_of_self = None
        krogh_deriv.stypy_type_store = module_type_store
        krogh_deriv.stypy_function_name = 'krogh_deriv'
        krogh_deriv.stypy_param_names_list = ['x', 'y', 'axis']
        krogh_deriv.stypy_varargs_param_name = None
        krogh_deriv.stypy_kwargs_param_name = None
        krogh_deriv.stypy_call_defaults = defaults
        krogh_deriv.stypy_call_varargs = varargs
        krogh_deriv.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'krogh_deriv', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'krogh_deriv', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'krogh_deriv(...)' code ##################

        
        # Call to KroghInterpolator(...): (line 86)
        # Processing the call arguments (line 86)
        # Getting the type of 'x' (line 86)
        x_115587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 33), 'x', False)
        # Getting the type of 'y' (line 86)
        y_115588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 36), 'y', False)
        # Getting the type of 'axis' (line 86)
        axis_115589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 39), 'axis', False)
        # Processing the call keyword arguments (line 86)
        kwargs_115590 = {}
        # Getting the type of 'KroghInterpolator' (line 86)
        KroghInterpolator_115586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 15), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 86)
        KroghInterpolator_call_result_115591 = invoke(stypy.reporting.localization.Localization(__file__, 86, 15), KroghInterpolator_115586, *[x_115587, y_115588, axis_115589], **kwargs_115590)
        
        # Obtaining the member 'derivative' of a type (line 86)
        derivative_115592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 15), KroghInterpolator_call_result_115591, 'derivative')
        # Assigning a type to the variable 'stypy_return_type' (line 86)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 8), 'stypy_return_type', derivative_115592)
        
        # ################# End of 'krogh_deriv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'krogh_deriv' in the type store
        # Getting the type of 'stypy_return_type' (line 85)
        stypy_return_type_115593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115593)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'krogh_deriv'
        return stypy_return_type_115593

    # Assigning a type to the variable 'krogh_deriv' (line 85)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 4), 'krogh_deriv', krogh_deriv)

    @norecursion
    def pchip_deriv(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 31), 'int')
        defaults = [int_115594]
        # Create a new context for function 'pchip_deriv'
        module_type_store = module_type_store.open_function_context('pchip_deriv', 88, 4, False)
        
        # Passed parameters checking function
        pchip_deriv.stypy_localization = localization
        pchip_deriv.stypy_type_of_self = None
        pchip_deriv.stypy_type_store = module_type_store
        pchip_deriv.stypy_function_name = 'pchip_deriv'
        pchip_deriv.stypy_param_names_list = ['x', 'y', 'axis']
        pchip_deriv.stypy_varargs_param_name = None
        pchip_deriv.stypy_kwargs_param_name = None
        pchip_deriv.stypy_call_defaults = defaults
        pchip_deriv.stypy_call_varargs = varargs
        pchip_deriv.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'pchip_deriv', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pchip_deriv', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pchip_deriv(...)' code ##################

        
        # Call to derivative(...): (line 89)
        # Processing the call keyword arguments (line 89)
        kwargs_115602 = {}
        
        # Call to pchip(...): (line 89)
        # Processing the call arguments (line 89)
        # Getting the type of 'x' (line 89)
        x_115596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 21), 'x', False)
        # Getting the type of 'y' (line 89)
        y_115597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 24), 'y', False)
        # Getting the type of 'axis' (line 89)
        axis_115598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 27), 'axis', False)
        # Processing the call keyword arguments (line 89)
        kwargs_115599 = {}
        # Getting the type of 'pchip' (line 89)
        pchip_115595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 15), 'pchip', False)
        # Calling pchip(args, kwargs) (line 89)
        pchip_call_result_115600 = invoke(stypy.reporting.localization.Localization(__file__, 89, 15), pchip_115595, *[x_115596, y_115597, axis_115598], **kwargs_115599)
        
        # Obtaining the member 'derivative' of a type (line 89)
        derivative_115601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 89, 15), pchip_call_result_115600, 'derivative')
        # Calling derivative(args, kwargs) (line 89)
        derivative_call_result_115603 = invoke(stypy.reporting.localization.Localization(__file__, 89, 15), derivative_115601, *[], **kwargs_115602)
        
        # Assigning a type to the variable 'stypy_return_type' (line 89)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 8), 'stypy_return_type', derivative_call_result_115603)
        
        # ################# End of 'pchip_deriv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pchip_deriv' in the type store
        # Getting the type of 'stypy_return_type' (line 88)
        stypy_return_type_115604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115604)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pchip_deriv'
        return stypy_return_type_115604

    # Assigning a type to the variable 'pchip_deriv' (line 88)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 4), 'pchip_deriv', pchip_deriv)

    @norecursion
    def pchip_deriv2(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, 32), 'int')
        defaults = [int_115605]
        # Create a new context for function 'pchip_deriv2'
        module_type_store = module_type_store.open_function_context('pchip_deriv2', 91, 4, False)
        
        # Passed parameters checking function
        pchip_deriv2.stypy_localization = localization
        pchip_deriv2.stypy_type_of_self = None
        pchip_deriv2.stypy_type_store = module_type_store
        pchip_deriv2.stypy_function_name = 'pchip_deriv2'
        pchip_deriv2.stypy_param_names_list = ['x', 'y', 'axis']
        pchip_deriv2.stypy_varargs_param_name = None
        pchip_deriv2.stypy_kwargs_param_name = None
        pchip_deriv2.stypy_call_defaults = defaults
        pchip_deriv2.stypy_call_varargs = varargs
        pchip_deriv2.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'pchip_deriv2', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pchip_deriv2', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pchip_deriv2(...)' code ##################

        
        # Call to derivative(...): (line 92)
        # Processing the call arguments (line 92)
        int_115613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 44), 'int')
        # Processing the call keyword arguments (line 92)
        kwargs_115614 = {}
        
        # Call to pchip(...): (line 92)
        # Processing the call arguments (line 92)
        # Getting the type of 'x' (line 92)
        x_115607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 21), 'x', False)
        # Getting the type of 'y' (line 92)
        y_115608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 24), 'y', False)
        # Getting the type of 'axis' (line 92)
        axis_115609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 27), 'axis', False)
        # Processing the call keyword arguments (line 92)
        kwargs_115610 = {}
        # Getting the type of 'pchip' (line 92)
        pchip_115606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 15), 'pchip', False)
        # Calling pchip(args, kwargs) (line 92)
        pchip_call_result_115611 = invoke(stypy.reporting.localization.Localization(__file__, 92, 15), pchip_115606, *[x_115607, y_115608, axis_115609], **kwargs_115610)
        
        # Obtaining the member 'derivative' of a type (line 92)
        derivative_115612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 92, 15), pchip_call_result_115611, 'derivative')
        # Calling derivative(args, kwargs) (line 92)
        derivative_call_result_115615 = invoke(stypy.reporting.localization.Localization(__file__, 92, 15), derivative_115612, *[int_115613], **kwargs_115614)
        
        # Assigning a type to the variable 'stypy_return_type' (line 92)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 8), 'stypy_return_type', derivative_call_result_115615)
        
        # ################# End of 'pchip_deriv2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pchip_deriv2' in the type store
        # Getting the type of 'stypy_return_type' (line 91)
        stypy_return_type_115616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115616)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pchip_deriv2'
        return stypy_return_type_115616

    # Assigning a type to the variable 'pchip_deriv2' (line 91)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 4), 'pchip_deriv2', pchip_deriv2)

    @norecursion
    def pchip_antideriv(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 94, 35), 'int')
        defaults = [int_115617]
        # Create a new context for function 'pchip_antideriv'
        module_type_store = module_type_store.open_function_context('pchip_antideriv', 94, 4, False)
        
        # Passed parameters checking function
        pchip_antideriv.stypy_localization = localization
        pchip_antideriv.stypy_type_of_self = None
        pchip_antideriv.stypy_type_store = module_type_store
        pchip_antideriv.stypy_function_name = 'pchip_antideriv'
        pchip_antideriv.stypy_param_names_list = ['x', 'y', 'axis']
        pchip_antideriv.stypy_varargs_param_name = None
        pchip_antideriv.stypy_kwargs_param_name = None
        pchip_antideriv.stypy_call_defaults = defaults
        pchip_antideriv.stypy_call_varargs = varargs
        pchip_antideriv.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'pchip_antideriv', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pchip_antideriv', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pchip_antideriv(...)' code ##################

        
        # Call to derivative(...): (line 95)
        # Processing the call keyword arguments (line 95)
        kwargs_115625 = {}
        
        # Call to pchip(...): (line 95)
        # Processing the call arguments (line 95)
        # Getting the type of 'x' (line 95)
        x_115619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 21), 'x', False)
        # Getting the type of 'y' (line 95)
        y_115620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 24), 'y', False)
        # Getting the type of 'axis' (line 95)
        axis_115621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 27), 'axis', False)
        # Processing the call keyword arguments (line 95)
        kwargs_115622 = {}
        # Getting the type of 'pchip' (line 95)
        pchip_115618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 15), 'pchip', False)
        # Calling pchip(args, kwargs) (line 95)
        pchip_call_result_115623 = invoke(stypy.reporting.localization.Localization(__file__, 95, 15), pchip_115618, *[x_115619, y_115620, axis_115621], **kwargs_115622)
        
        # Obtaining the member 'derivative' of a type (line 95)
        derivative_115624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 95, 15), pchip_call_result_115623, 'derivative')
        # Calling derivative(args, kwargs) (line 95)
        derivative_call_result_115626 = invoke(stypy.reporting.localization.Localization(__file__, 95, 15), derivative_115624, *[], **kwargs_115625)
        
        # Assigning a type to the variable 'stypy_return_type' (line 95)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 8), 'stypy_return_type', derivative_call_result_115626)
        
        # ################# End of 'pchip_antideriv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pchip_antideriv' in the type store
        # Getting the type of 'stypy_return_type' (line 94)
        stypy_return_type_115627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115627)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pchip_antideriv'
        return stypy_return_type_115627

    # Assigning a type to the variable 'pchip_antideriv' (line 94)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 94, 4), 'pchip_antideriv', pchip_antideriv)

    @norecursion
    def pchip_antideriv2(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 36), 'int')
        defaults = [int_115628]
        # Create a new context for function 'pchip_antideriv2'
        module_type_store = module_type_store.open_function_context('pchip_antideriv2', 97, 4, False)
        
        # Passed parameters checking function
        pchip_antideriv2.stypy_localization = localization
        pchip_antideriv2.stypy_type_of_self = None
        pchip_antideriv2.stypy_type_store = module_type_store
        pchip_antideriv2.stypy_function_name = 'pchip_antideriv2'
        pchip_antideriv2.stypy_param_names_list = ['x', 'y', 'axis']
        pchip_antideriv2.stypy_varargs_param_name = None
        pchip_antideriv2.stypy_kwargs_param_name = None
        pchip_antideriv2.stypy_call_defaults = defaults
        pchip_antideriv2.stypy_call_varargs = varargs
        pchip_antideriv2.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'pchip_antideriv2', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pchip_antideriv2', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pchip_antideriv2(...)' code ##################

        
        # Call to derivative(...): (line 98)
        # Processing the call arguments (line 98)
        int_115636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 44), 'int')
        # Processing the call keyword arguments (line 98)
        kwargs_115637 = {}
        
        # Call to pchip(...): (line 98)
        # Processing the call arguments (line 98)
        # Getting the type of 'x' (line 98)
        x_115630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 21), 'x', False)
        # Getting the type of 'y' (line 98)
        y_115631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 24), 'y', False)
        # Getting the type of 'axis' (line 98)
        axis_115632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 27), 'axis', False)
        # Processing the call keyword arguments (line 98)
        kwargs_115633 = {}
        # Getting the type of 'pchip' (line 98)
        pchip_115629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 15), 'pchip', False)
        # Calling pchip(args, kwargs) (line 98)
        pchip_call_result_115634 = invoke(stypy.reporting.localization.Localization(__file__, 98, 15), pchip_115629, *[x_115630, y_115631, axis_115632], **kwargs_115633)
        
        # Obtaining the member 'derivative' of a type (line 98)
        derivative_115635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 98, 15), pchip_call_result_115634, 'derivative')
        # Calling derivative(args, kwargs) (line 98)
        derivative_call_result_115638 = invoke(stypy.reporting.localization.Localization(__file__, 98, 15), derivative_115635, *[int_115636], **kwargs_115637)
        
        # Assigning a type to the variable 'stypy_return_type' (line 98)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 98, 8), 'stypy_return_type', derivative_call_result_115638)
        
        # ################# End of 'pchip_antideriv2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pchip_antideriv2' in the type store
        # Getting the type of 'stypy_return_type' (line 97)
        stypy_return_type_115639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115639)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pchip_antideriv2'
        return stypy_return_type_115639

    # Assigning a type to the variable 'pchip_antideriv2' (line 97)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 4), 'pchip_antideriv2', pchip_antideriv2)

    @norecursion
    def pchip_deriv_inplace(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 100, 39), 'int')
        defaults = [int_115640]
        # Create a new context for function 'pchip_deriv_inplace'
        module_type_store = module_type_store.open_function_context('pchip_deriv_inplace', 100, 4, False)
        
        # Passed parameters checking function
        pchip_deriv_inplace.stypy_localization = localization
        pchip_deriv_inplace.stypy_type_of_self = None
        pchip_deriv_inplace.stypy_type_store = module_type_store
        pchip_deriv_inplace.stypy_function_name = 'pchip_deriv_inplace'
        pchip_deriv_inplace.stypy_param_names_list = ['x', 'y', 'axis']
        pchip_deriv_inplace.stypy_varargs_param_name = None
        pchip_deriv_inplace.stypy_kwargs_param_name = None
        pchip_deriv_inplace.stypy_call_defaults = defaults
        pchip_deriv_inplace.stypy_call_varargs = varargs
        pchip_deriv_inplace.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'pchip_deriv_inplace', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pchip_deriv_inplace', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pchip_deriv_inplace(...)' code ##################

        # Declaration of the 'P' class
        # Getting the type of 'PchipInterpolator' (line 101)
        PchipInterpolator_115641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 16), 'PchipInterpolator')

        class P(PchipInterpolator_115641, ):

            @norecursion
            def __call__(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '__call__'
                module_type_store = module_type_store.open_function_context('__call__', 102, 12, False)
                # Assigning a type to the variable 'self' (line 103)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                P.__call__.__dict__.__setitem__('stypy_localization', localization)
                P.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                P.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
                P.__call__.__dict__.__setitem__('stypy_function_name', 'P.__call__')
                P.__call__.__dict__.__setitem__('stypy_param_names_list', ['x'])
                P.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
                P.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
                P.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
                P.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
                P.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                P.__call__.__dict__.__setitem__('stypy_declared_arg_number', 2)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'P.__call__', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, '__call__', localization, ['x'], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of '__call__(...)' code ##################

                
                # Call to __call__(...): (line 103)
                # Processing the call arguments (line 103)
                # Getting the type of 'self' (line 103)
                self_115644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 50), 'self', False)
                # Getting the type of 'x' (line 103)
                x_115645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 56), 'x', False)
                int_115646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 59), 'int')
                # Processing the call keyword arguments (line 103)
                kwargs_115647 = {}
                # Getting the type of 'PchipInterpolator' (line 103)
                PchipInterpolator_115642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 23), 'PchipInterpolator', False)
                # Obtaining the member '__call__' of a type (line 103)
                call___115643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 103, 23), PchipInterpolator_115642, '__call__')
                # Calling __call__(args, kwargs) (line 103)
                call___call_result_115648 = invoke(stypy.reporting.localization.Localization(__file__, 103, 23), call___115643, *[self_115644, x_115645, int_115646], **kwargs_115647)
                
                # Assigning a type to the variable 'stypy_return_type' (line 103)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 16), 'stypy_return_type', call___call_result_115648)
                
                # ################# End of '__call__(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function '__call__' in the type store
                # Getting the type of 'stypy_return_type' (line 102)
                stypy_return_type_115649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_115649)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '__call__'
                return stypy_return_type_115649

            pass

            @norecursion
            def __init__(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '__init__'
                module_type_store = module_type_store.open_function_context('__init__', 101, 8, False)
                # Assigning a type to the variable 'self' (line 102)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 8), 'self', type_of_self)
                
                # Passed parameters checking function
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'P.__init__', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return

                # Initialize method data
                init_call_information(module_type_store, '__init__', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of '__init__(...)' code ##################

                pass
                
                # ################# End of '__init__(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()

        
        # Assigning a type to the variable 'P' (line 101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 8), 'P', P)
        
        # Call to P(...): (line 105)
        # Processing the call arguments (line 105)
        # Getting the type of 'x' (line 105)
        x_115651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 17), 'x', False)
        # Getting the type of 'y' (line 105)
        y_115652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 20), 'y', False)
        # Getting the type of 'axis' (line 105)
        axis_115653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 23), 'axis', False)
        # Processing the call keyword arguments (line 105)
        kwargs_115654 = {}
        # Getting the type of 'P' (line 105)
        P_115650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 15), 'P', False)
        # Calling P(args, kwargs) (line 105)
        P_call_result_115655 = invoke(stypy.reporting.localization.Localization(__file__, 105, 15), P_115650, *[x_115651, y_115652, axis_115653], **kwargs_115654)
        
        # Assigning a type to the variable 'stypy_return_type' (line 105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 105, 8), 'stypy_return_type', P_call_result_115655)
        
        # ################# End of 'pchip_deriv_inplace(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pchip_deriv_inplace' in the type store
        # Getting the type of 'stypy_return_type' (line 100)
        stypy_return_type_115656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115656)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pchip_deriv_inplace'
        return stypy_return_type_115656

    # Assigning a type to the variable 'pchip_deriv_inplace' (line 100)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 4), 'pchip_deriv_inplace', pchip_deriv_inplace)

    @norecursion
    def akima_deriv(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 31), 'int')
        defaults = [int_115657]
        # Create a new context for function 'akima_deriv'
        module_type_store = module_type_store.open_function_context('akima_deriv', 107, 4, False)
        
        # Passed parameters checking function
        akima_deriv.stypy_localization = localization
        akima_deriv.stypy_type_of_self = None
        akima_deriv.stypy_type_store = module_type_store
        akima_deriv.stypy_function_name = 'akima_deriv'
        akima_deriv.stypy_param_names_list = ['x', 'y', 'axis']
        akima_deriv.stypy_varargs_param_name = None
        akima_deriv.stypy_kwargs_param_name = None
        akima_deriv.stypy_call_defaults = defaults
        akima_deriv.stypy_call_varargs = varargs
        akima_deriv.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'akima_deriv', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'akima_deriv', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'akima_deriv(...)' code ##################

        
        # Call to derivative(...): (line 108)
        # Processing the call keyword arguments (line 108)
        kwargs_115665 = {}
        
        # Call to Akima1DInterpolator(...): (line 108)
        # Processing the call arguments (line 108)
        # Getting the type of 'x' (line 108)
        x_115659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 35), 'x', False)
        # Getting the type of 'y' (line 108)
        y_115660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 38), 'y', False)
        # Getting the type of 'axis' (line 108)
        axis_115661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 41), 'axis', False)
        # Processing the call keyword arguments (line 108)
        kwargs_115662 = {}
        # Getting the type of 'Akima1DInterpolator' (line 108)
        Akima1DInterpolator_115658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 15), 'Akima1DInterpolator', False)
        # Calling Akima1DInterpolator(args, kwargs) (line 108)
        Akima1DInterpolator_call_result_115663 = invoke(stypy.reporting.localization.Localization(__file__, 108, 15), Akima1DInterpolator_115658, *[x_115659, y_115660, axis_115661], **kwargs_115662)
        
        # Obtaining the member 'derivative' of a type (line 108)
        derivative_115664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 15), Akima1DInterpolator_call_result_115663, 'derivative')
        # Calling derivative(args, kwargs) (line 108)
        derivative_call_result_115666 = invoke(stypy.reporting.localization.Localization(__file__, 108, 15), derivative_115664, *[], **kwargs_115665)
        
        # Assigning a type to the variable 'stypy_return_type' (line 108)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 8), 'stypy_return_type', derivative_call_result_115666)
        
        # ################# End of 'akima_deriv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'akima_deriv' in the type store
        # Getting the type of 'stypy_return_type' (line 107)
        stypy_return_type_115667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115667)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'akima_deriv'
        return stypy_return_type_115667

    # Assigning a type to the variable 'akima_deriv' (line 107)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 4), 'akima_deriv', akima_deriv)

    @norecursion
    def akima_antideriv(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 35), 'int')
        defaults = [int_115668]
        # Create a new context for function 'akima_antideriv'
        module_type_store = module_type_store.open_function_context('akima_antideriv', 110, 4, False)
        
        # Passed parameters checking function
        akima_antideriv.stypy_localization = localization
        akima_antideriv.stypy_type_of_self = None
        akima_antideriv.stypy_type_store = module_type_store
        akima_antideriv.stypy_function_name = 'akima_antideriv'
        akima_antideriv.stypy_param_names_list = ['x', 'y', 'axis']
        akima_antideriv.stypy_varargs_param_name = None
        akima_antideriv.stypy_kwargs_param_name = None
        akima_antideriv.stypy_call_defaults = defaults
        akima_antideriv.stypy_call_varargs = varargs
        akima_antideriv.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'akima_antideriv', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'akima_antideriv', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'akima_antideriv(...)' code ##################

        
        # Call to antiderivative(...): (line 111)
        # Processing the call keyword arguments (line 111)
        kwargs_115676 = {}
        
        # Call to Akima1DInterpolator(...): (line 111)
        # Processing the call arguments (line 111)
        # Getting the type of 'x' (line 111)
        x_115670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 35), 'x', False)
        # Getting the type of 'y' (line 111)
        y_115671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 38), 'y', False)
        # Getting the type of 'axis' (line 111)
        axis_115672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 41), 'axis', False)
        # Processing the call keyword arguments (line 111)
        kwargs_115673 = {}
        # Getting the type of 'Akima1DInterpolator' (line 111)
        Akima1DInterpolator_115669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 15), 'Akima1DInterpolator', False)
        # Calling Akima1DInterpolator(args, kwargs) (line 111)
        Akima1DInterpolator_call_result_115674 = invoke(stypy.reporting.localization.Localization(__file__, 111, 15), Akima1DInterpolator_115669, *[x_115670, y_115671, axis_115672], **kwargs_115673)
        
        # Obtaining the member 'antiderivative' of a type (line 111)
        antiderivative_115675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 111, 15), Akima1DInterpolator_call_result_115674, 'antiderivative')
        # Calling antiderivative(args, kwargs) (line 111)
        antiderivative_call_result_115677 = invoke(stypy.reporting.localization.Localization(__file__, 111, 15), antiderivative_115675, *[], **kwargs_115676)
        
        # Assigning a type to the variable 'stypy_return_type' (line 111)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 111, 8), 'stypy_return_type', antiderivative_call_result_115677)
        
        # ################# End of 'akima_antideriv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'akima_antideriv' in the type store
        # Getting the type of 'stypy_return_type' (line 110)
        stypy_return_type_115678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115678)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'akima_antideriv'
        return stypy_return_type_115678

    # Assigning a type to the variable 'akima_antideriv' (line 110)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 110, 4), 'akima_antideriv', akima_antideriv)

    @norecursion
    def cspline_deriv(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 33), 'int')
        defaults = [int_115679]
        # Create a new context for function 'cspline_deriv'
        module_type_store = module_type_store.open_function_context('cspline_deriv', 113, 4, False)
        
        # Passed parameters checking function
        cspline_deriv.stypy_localization = localization
        cspline_deriv.stypy_type_of_self = None
        cspline_deriv.stypy_type_store = module_type_store
        cspline_deriv.stypy_function_name = 'cspline_deriv'
        cspline_deriv.stypy_param_names_list = ['x', 'y', 'axis']
        cspline_deriv.stypy_varargs_param_name = None
        cspline_deriv.stypy_kwargs_param_name = None
        cspline_deriv.stypy_call_defaults = defaults
        cspline_deriv.stypy_call_varargs = varargs
        cspline_deriv.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'cspline_deriv', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'cspline_deriv', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'cspline_deriv(...)' code ##################

        
        # Call to derivative(...): (line 114)
        # Processing the call keyword arguments (line 114)
        kwargs_115687 = {}
        
        # Call to CubicSpline(...): (line 114)
        # Processing the call arguments (line 114)
        # Getting the type of 'x' (line 114)
        x_115681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 27), 'x', False)
        # Getting the type of 'y' (line 114)
        y_115682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 30), 'y', False)
        # Getting the type of 'axis' (line 114)
        axis_115683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 33), 'axis', False)
        # Processing the call keyword arguments (line 114)
        kwargs_115684 = {}
        # Getting the type of 'CubicSpline' (line 114)
        CubicSpline_115680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 15), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 114)
        CubicSpline_call_result_115685 = invoke(stypy.reporting.localization.Localization(__file__, 114, 15), CubicSpline_115680, *[x_115681, y_115682, axis_115683], **kwargs_115684)
        
        # Obtaining the member 'derivative' of a type (line 114)
        derivative_115686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 114, 15), CubicSpline_call_result_115685, 'derivative')
        # Calling derivative(args, kwargs) (line 114)
        derivative_call_result_115688 = invoke(stypy.reporting.localization.Localization(__file__, 114, 15), derivative_115686, *[], **kwargs_115687)
        
        # Assigning a type to the variable 'stypy_return_type' (line 114)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 114, 8), 'stypy_return_type', derivative_call_result_115688)
        
        # ################# End of 'cspline_deriv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'cspline_deriv' in the type store
        # Getting the type of 'stypy_return_type' (line 113)
        stypy_return_type_115689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115689)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'cspline_deriv'
        return stypy_return_type_115689

    # Assigning a type to the variable 'cspline_deriv' (line 113)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 113, 4), 'cspline_deriv', cspline_deriv)

    @norecursion
    def cspline_antideriv(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 37), 'int')
        defaults = [int_115690]
        # Create a new context for function 'cspline_antideriv'
        module_type_store = module_type_store.open_function_context('cspline_antideriv', 116, 4, False)
        
        # Passed parameters checking function
        cspline_antideriv.stypy_localization = localization
        cspline_antideriv.stypy_type_of_self = None
        cspline_antideriv.stypy_type_store = module_type_store
        cspline_antideriv.stypy_function_name = 'cspline_antideriv'
        cspline_antideriv.stypy_param_names_list = ['x', 'y', 'axis']
        cspline_antideriv.stypy_varargs_param_name = None
        cspline_antideriv.stypy_kwargs_param_name = None
        cspline_antideriv.stypy_call_defaults = defaults
        cspline_antideriv.stypy_call_varargs = varargs
        cspline_antideriv.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'cspline_antideriv', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'cspline_antideriv', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'cspline_antideriv(...)' code ##################

        
        # Call to antiderivative(...): (line 117)
        # Processing the call keyword arguments (line 117)
        kwargs_115698 = {}
        
        # Call to CubicSpline(...): (line 117)
        # Processing the call arguments (line 117)
        # Getting the type of 'x' (line 117)
        x_115692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 27), 'x', False)
        # Getting the type of 'y' (line 117)
        y_115693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 30), 'y', False)
        # Getting the type of 'axis' (line 117)
        axis_115694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 33), 'axis', False)
        # Processing the call keyword arguments (line 117)
        kwargs_115695 = {}
        # Getting the type of 'CubicSpline' (line 117)
        CubicSpline_115691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 15), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 117)
        CubicSpline_call_result_115696 = invoke(stypy.reporting.localization.Localization(__file__, 117, 15), CubicSpline_115691, *[x_115692, y_115693, axis_115694], **kwargs_115695)
        
        # Obtaining the member 'antiderivative' of a type (line 117)
        antiderivative_115697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 117, 15), CubicSpline_call_result_115696, 'antiderivative')
        # Calling antiderivative(args, kwargs) (line 117)
        antiderivative_call_result_115699 = invoke(stypy.reporting.localization.Localization(__file__, 117, 15), antiderivative_115697, *[], **kwargs_115698)
        
        # Assigning a type to the variable 'stypy_return_type' (line 117)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 8), 'stypy_return_type', antiderivative_call_result_115699)
        
        # ################# End of 'cspline_antideriv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'cspline_antideriv' in the type store
        # Getting the type of 'stypy_return_type' (line 116)
        stypy_return_type_115700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115700)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'cspline_antideriv'
        return stypy_return_type_115700

    # Assigning a type to the variable 'cspline_antideriv' (line 116)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 116, 4), 'cspline_antideriv', cspline_antideriv)

    @norecursion
    def bspl_deriv(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 30), 'int')
        defaults = [int_115701]
        # Create a new context for function 'bspl_deriv'
        module_type_store = module_type_store.open_function_context('bspl_deriv', 119, 4, False)
        
        # Passed parameters checking function
        bspl_deriv.stypy_localization = localization
        bspl_deriv.stypy_type_of_self = None
        bspl_deriv.stypy_type_store = module_type_store
        bspl_deriv.stypy_function_name = 'bspl_deriv'
        bspl_deriv.stypy_param_names_list = ['x', 'y', 'axis']
        bspl_deriv.stypy_varargs_param_name = None
        bspl_deriv.stypy_kwargs_param_name = None
        bspl_deriv.stypy_call_defaults = defaults
        bspl_deriv.stypy_call_varargs = varargs
        bspl_deriv.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'bspl_deriv', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'bspl_deriv', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'bspl_deriv(...)' code ##################

        
        # Call to derivative(...): (line 120)
        # Processing the call keyword arguments (line 120)
        kwargs_115710 = {}
        
        # Call to make_interp_spline(...): (line 120)
        # Processing the call arguments (line 120)
        # Getting the type of 'x' (line 120)
        x_115703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 34), 'x', False)
        # Getting the type of 'y' (line 120)
        y_115704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 37), 'y', False)
        # Processing the call keyword arguments (line 120)
        # Getting the type of 'axis' (line 120)
        axis_115705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 45), 'axis', False)
        keyword_115706 = axis_115705
        kwargs_115707 = {'axis': keyword_115706}
        # Getting the type of 'make_interp_spline' (line 120)
        make_interp_spline_115702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 15), 'make_interp_spline', False)
        # Calling make_interp_spline(args, kwargs) (line 120)
        make_interp_spline_call_result_115708 = invoke(stypy.reporting.localization.Localization(__file__, 120, 15), make_interp_spline_115702, *[x_115703, y_115704], **kwargs_115707)
        
        # Obtaining the member 'derivative' of a type (line 120)
        derivative_115709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 15), make_interp_spline_call_result_115708, 'derivative')
        # Calling derivative(args, kwargs) (line 120)
        derivative_call_result_115711 = invoke(stypy.reporting.localization.Localization(__file__, 120, 15), derivative_115709, *[], **kwargs_115710)
        
        # Assigning a type to the variable 'stypy_return_type' (line 120)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 8), 'stypy_return_type', derivative_call_result_115711)
        
        # ################# End of 'bspl_deriv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'bspl_deriv' in the type store
        # Getting the type of 'stypy_return_type' (line 119)
        stypy_return_type_115712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115712)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'bspl_deriv'
        return stypy_return_type_115712

    # Assigning a type to the variable 'bspl_deriv' (line 119)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 119, 4), 'bspl_deriv', bspl_deriv)

    @norecursion
    def bspl_antideriv(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_115713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 34), 'int')
        defaults = [int_115713]
        # Create a new context for function 'bspl_antideriv'
        module_type_store = module_type_store.open_function_context('bspl_antideriv', 122, 4, False)
        
        # Passed parameters checking function
        bspl_antideriv.stypy_localization = localization
        bspl_antideriv.stypy_type_of_self = None
        bspl_antideriv.stypy_type_store = module_type_store
        bspl_antideriv.stypy_function_name = 'bspl_antideriv'
        bspl_antideriv.stypy_param_names_list = ['x', 'y', 'axis']
        bspl_antideriv.stypy_varargs_param_name = None
        bspl_antideriv.stypy_kwargs_param_name = None
        bspl_antideriv.stypy_call_defaults = defaults
        bspl_antideriv.stypy_call_varargs = varargs
        bspl_antideriv.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'bspl_antideriv', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'bspl_antideriv', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'bspl_antideriv(...)' code ##################

        
        # Call to antiderivative(...): (line 123)
        # Processing the call keyword arguments (line 123)
        kwargs_115722 = {}
        
        # Call to make_interp_spline(...): (line 123)
        # Processing the call arguments (line 123)
        # Getting the type of 'x' (line 123)
        x_115715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 34), 'x', False)
        # Getting the type of 'y' (line 123)
        y_115716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 37), 'y', False)
        # Processing the call keyword arguments (line 123)
        # Getting the type of 'axis' (line 123)
        axis_115717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 45), 'axis', False)
        keyword_115718 = axis_115717
        kwargs_115719 = {'axis': keyword_115718}
        # Getting the type of 'make_interp_spline' (line 123)
        make_interp_spline_115714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 15), 'make_interp_spline', False)
        # Calling make_interp_spline(args, kwargs) (line 123)
        make_interp_spline_call_result_115720 = invoke(stypy.reporting.localization.Localization(__file__, 123, 15), make_interp_spline_115714, *[x_115715, y_115716], **kwargs_115719)
        
        # Obtaining the member 'antiderivative' of a type (line 123)
        antiderivative_115721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 123, 15), make_interp_spline_call_result_115720, 'antiderivative')
        # Calling antiderivative(args, kwargs) (line 123)
        antiderivative_call_result_115723 = invoke(stypy.reporting.localization.Localization(__file__, 123, 15), antiderivative_115721, *[], **kwargs_115722)
        
        # Assigning a type to the variable 'stypy_return_type' (line 123)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 123, 8), 'stypy_return_type', antiderivative_call_result_115723)
        
        # ################# End of 'bspl_antideriv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'bspl_antideriv' in the type store
        # Getting the type of 'stypy_return_type' (line 122)
        stypy_return_type_115724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115724)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'bspl_antideriv'
        return stypy_return_type_115724

    # Assigning a type to the variable 'bspl_antideriv' (line 122)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 122, 4), 'bspl_antideriv', bspl_antideriv)
    
    
    # Obtaining an instance of the builtin type 'list' (line 125)
    list_115725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 125)
    # Adding element type (line 125)
    # Getting the type of 'krogh_deriv' (line 125)
    krogh_deriv_115726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 15), 'krogh_deriv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, krogh_deriv_115726)
    # Adding element type (line 125)
    # Getting the type of 'pchip_deriv' (line 125)
    pchip_deriv_115727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 28), 'pchip_deriv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, pchip_deriv_115727)
    # Adding element type (line 125)
    # Getting the type of 'pchip_deriv2' (line 125)
    pchip_deriv2_115728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 41), 'pchip_deriv2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, pchip_deriv2_115728)
    # Adding element type (line 125)
    # Getting the type of 'pchip_deriv_inplace' (line 125)
    pchip_deriv_inplace_115729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 55), 'pchip_deriv_inplace')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, pchip_deriv_inplace_115729)
    # Adding element type (line 125)
    # Getting the type of 'pchip_antideriv' (line 126)
    pchip_antideriv_115730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 15), 'pchip_antideriv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, pchip_antideriv_115730)
    # Adding element type (line 125)
    # Getting the type of 'pchip_antideriv2' (line 126)
    pchip_antideriv2_115731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 32), 'pchip_antideriv2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, pchip_antideriv2_115731)
    # Adding element type (line 125)
    # Getting the type of 'akima_deriv' (line 126)
    akima_deriv_115732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 50), 'akima_deriv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, akima_deriv_115732)
    # Adding element type (line 125)
    # Getting the type of 'akima_antideriv' (line 126)
    akima_antideriv_115733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 63), 'akima_antideriv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, akima_antideriv_115733)
    # Adding element type (line 125)
    # Getting the type of 'cspline_deriv' (line 127)
    cspline_deriv_115734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 15), 'cspline_deriv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, cspline_deriv_115734)
    # Adding element type (line 125)
    # Getting the type of 'cspline_antideriv' (line 127)
    cspline_antideriv_115735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 30), 'cspline_antideriv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, cspline_antideriv_115735)
    # Adding element type (line 125)
    # Getting the type of 'bspl_deriv' (line 127)
    bspl_deriv_115736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 49), 'bspl_deriv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, bspl_deriv_115736)
    # Adding element type (line 125)
    # Getting the type of 'bspl_antideriv' (line 127)
    bspl_antideriv_115737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 61), 'bspl_antideriv')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 125, 14), list_115725, bspl_antideriv_115737)
    
    # Testing the type of a for loop iterable (line 125)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 125, 4), list_115725)
    # Getting the type of the for loop variable (line 125)
    for_loop_var_115738 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 125, 4), list_115725)
    # Assigning a type to the variable 'ip' (line 125)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 125, 4), 'ip', for_loop_var_115738)
    # SSA begins for a for statement (line 125)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'SHAPES' (line 128)
    SHAPES_115739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 18), 'SHAPES')
    # Testing the type of a for loop iterable (line 128)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 128, 8), SHAPES_115739)
    # Getting the type of the for loop variable (line 128)
    for_loop_var_115740 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 128, 8), SHAPES_115739)
    # Assigning a type to the variable 's1' (line 128)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 8), 's1', for_loop_var_115740)
    # SSA begins for a for statement (line 128)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'SHAPES' (line 129)
    SHAPES_115741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 22), 'SHAPES')
    # Testing the type of a for loop iterable (line 129)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 129, 12), SHAPES_115741)
    # Getting the type of the for loop variable (line 129)
    for_loop_var_115742 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 129, 12), SHAPES_115741)
    # Assigning a type to the variable 's2' (line 129)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 129, 12), 's2', for_loop_var_115742)
    # SSA begins for a for statement (line 129)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to range(...): (line 130)
    # Processing the call arguments (line 130)
    
    
    # Call to len(...): (line 130)
    # Processing the call arguments (line 130)
    # Getting the type of 's2' (line 130)
    s2_115745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 39), 's2', False)
    # Processing the call keyword arguments (line 130)
    kwargs_115746 = {}
    # Getting the type of 'len' (line 130)
    len_115744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 35), 'len', False)
    # Calling len(args, kwargs) (line 130)
    len_call_result_115747 = invoke(stypy.reporting.localization.Localization(__file__, 130, 35), len_115744, *[s2_115745], **kwargs_115746)
    
    # Applying the 'usub' unary operator (line 130)
    result___neg___115748 = python_operator(stypy.reporting.localization.Localization(__file__, 130, 34), 'usub', len_call_result_115747)
    
    
    # Call to len(...): (line 130)
    # Processing the call arguments (line 130)
    # Getting the type of 's2' (line 130)
    s2_115750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 48), 's2', False)
    # Processing the call keyword arguments (line 130)
    kwargs_115751 = {}
    # Getting the type of 'len' (line 130)
    len_115749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 44), 'len', False)
    # Calling len(args, kwargs) (line 130)
    len_call_result_115752 = invoke(stypy.reporting.localization.Localization(__file__, 130, 44), len_115749, *[s2_115750], **kwargs_115751)
    
    # Processing the call keyword arguments (line 130)
    kwargs_115753 = {}
    # Getting the type of 'range' (line 130)
    range_115743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 28), 'range', False)
    # Calling range(args, kwargs) (line 130)
    range_call_result_115754 = invoke(stypy.reporting.localization.Localization(__file__, 130, 28), range_115743, *[result___neg___115748, len_call_result_115752], **kwargs_115753)
    
    # Testing the type of a for loop iterable (line 130)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 130, 16), range_call_result_115754)
    # Getting the type of the for loop variable (line 130)
    for_loop_var_115755 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 130, 16), range_call_result_115754)
    # Assigning a type to the variable 'axis' (line 130)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 130, 16), 'axis', for_loop_var_115755)
    # SSA begins for a for statement (line 130)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to check_shape(...): (line 131)
    # Processing the call arguments (line 131)
    # Getting the type of 'ip' (line 131)
    ip_115757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 32), 'ip', False)
    # Getting the type of 's1' (line 131)
    s1_115758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 36), 's1', False)
    # Getting the type of 's2' (line 131)
    s2_115759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 40), 's2', False)
    
    # Obtaining an instance of the builtin type 'tuple' (line 131)
    tuple_115760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 44), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 131)
    
    # Getting the type of 'axis' (line 131)
    axis_115761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 48), 'axis', False)
    # Processing the call keyword arguments (line 131)
    kwargs_115762 = {}
    # Getting the type of 'check_shape' (line 131)
    check_shape_115756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 20), 'check_shape', False)
    # Calling check_shape(args, kwargs) (line 131)
    check_shape_call_result_115763 = invoke(stypy.reporting.localization.Localization(__file__, 131, 20), check_shape_115756, *[ip_115757, s1_115758, s2_115759, tuple_115760, axis_115761], **kwargs_115762)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_deriv_shapes(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_deriv_shapes' in the type store
    # Getting the type of 'stypy_return_type' (line 84)
    stypy_return_type_115764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_115764)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_deriv_shapes'
    return stypy_return_type_115764

# Assigning a type to the variable 'test_deriv_shapes' (line 84)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 0), 'test_deriv_shapes', test_deriv_shapes)

@norecursion
def _check_complex(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_check_complex'
    module_type_store = module_type_store.open_function_context('_check_complex', 134, 0, False)
    
    # Passed parameters checking function
    _check_complex.stypy_localization = localization
    _check_complex.stypy_type_of_self = None
    _check_complex.stypy_type_store = module_type_store
    _check_complex.stypy_function_name = '_check_complex'
    _check_complex.stypy_param_names_list = ['ip']
    _check_complex.stypy_varargs_param_name = None
    _check_complex.stypy_kwargs_param_name = None
    _check_complex.stypy_call_defaults = defaults
    _check_complex.stypy_call_varargs = varargs
    _check_complex.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_check_complex', ['ip'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_check_complex', localization, ['ip'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_check_complex(...)' code ##################

    
    # Assigning a List to a Name (line 135):
    
    # Assigning a List to a Name (line 135):
    
    # Obtaining an instance of the builtin type 'list' (line 135)
    list_115765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 8), 'list')
    # Adding type elements to the builtin type 'list' instance (line 135)
    # Adding element type (line 135)
    int_115766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 8), list_115765, int_115766)
    # Adding element type (line 135)
    int_115767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 8), list_115765, int_115767)
    # Adding element type (line 135)
    int_115768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 15), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 8), list_115765, int_115768)
    # Adding element type (line 135)
    int_115769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 18), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 8), list_115765, int_115769)
    
    # Assigning a type to the variable 'x' (line 135)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 135, 4), 'x', list_115765)
    
    # Assigning a List to a Name (line 136):
    
    # Assigning a List to a Name (line 136):
    
    # Obtaining an instance of the builtin type 'list' (line 136)
    list_115770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 8), 'list')
    # Adding type elements to the builtin type 'list' instance (line 136)
    # Adding element type (line 136)
    int_115771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 9), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 8), list_115770, int_115771)
    # Adding element type (line 136)
    int_115772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 12), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 8), list_115770, int_115772)
    # Adding element type (line 136)
    complex_115773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 15), 'complex')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 8), list_115770, complex_115773)
    # Adding element type (line 136)
    int_115774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 8), list_115770, int_115774)
    
    # Assigning a type to the variable 'y' (line 136)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 136, 4), 'y', list_115770)
    
    # Assigning a Call to a Name (line 137):
    
    # Assigning a Call to a Name (line 137):
    
    # Call to ip(...): (line 137)
    # Processing the call arguments (line 137)
    # Getting the type of 'x' (line 137)
    x_115776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 11), 'x', False)
    # Getting the type of 'y' (line 137)
    y_115777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 14), 'y', False)
    # Processing the call keyword arguments (line 137)
    kwargs_115778 = {}
    # Getting the type of 'ip' (line 137)
    ip_115775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 8), 'ip', False)
    # Calling ip(args, kwargs) (line 137)
    ip_call_result_115779 = invoke(stypy.reporting.localization.Localization(__file__, 137, 8), ip_115775, *[x_115776, y_115777], **kwargs_115778)
    
    # Assigning a type to the variable 'p' (line 137)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 137, 4), 'p', ip_call_result_115779)
    
    # Call to assert_allclose(...): (line 138)
    # Processing the call arguments (line 138)
    # Getting the type of 'y' (line 138)
    y_115781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 20), 'y', False)
    
    # Call to p(...): (line 138)
    # Processing the call arguments (line 138)
    # Getting the type of 'x' (line 138)
    x_115783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 25), 'x', False)
    # Processing the call keyword arguments (line 138)
    kwargs_115784 = {}
    # Getting the type of 'p' (line 138)
    p_115782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 23), 'p', False)
    # Calling p(args, kwargs) (line 138)
    p_call_result_115785 = invoke(stypy.reporting.localization.Localization(__file__, 138, 23), p_115782, *[x_115783], **kwargs_115784)
    
    # Processing the call keyword arguments (line 138)
    kwargs_115786 = {}
    # Getting the type of 'assert_allclose' (line 138)
    assert_allclose_115780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 138)
    assert_allclose_call_result_115787 = invoke(stypy.reporting.localization.Localization(__file__, 138, 4), assert_allclose_115780, *[y_115781, p_call_result_115785], **kwargs_115786)
    
    
    # ################# End of '_check_complex(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_check_complex' in the type store
    # Getting the type of 'stypy_return_type' (line 134)
    stypy_return_type_115788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_115788)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_check_complex'
    return stypy_return_type_115788

# Assigning a type to the variable '_check_complex' (line 134)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 134, 0), '_check_complex', _check_complex)

@norecursion
def test_complex(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_complex'
    module_type_store = module_type_store.open_function_context('test_complex', 141, 0, False)
    
    # Passed parameters checking function
    test_complex.stypy_localization = localization
    test_complex.stypy_type_of_self = None
    test_complex.stypy_type_store = module_type_store
    test_complex.stypy_function_name = 'test_complex'
    test_complex.stypy_param_names_list = []
    test_complex.stypy_varargs_param_name = None
    test_complex.stypy_kwargs_param_name = None
    test_complex.stypy_call_defaults = defaults
    test_complex.stypy_call_varargs = varargs
    test_complex.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_complex', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_complex', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_complex(...)' code ##################

    
    
    # Obtaining an instance of the builtin type 'list' (line 142)
    list_115789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 14), 'list')
    # Adding type elements to the builtin type 'list' instance (line 142)
    # Adding element type (line 142)
    # Getting the type of 'KroghInterpolator' (line 142)
    KroghInterpolator_115790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 15), 'KroghInterpolator')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 14), list_115789, KroghInterpolator_115790)
    # Adding element type (line 142)
    # Getting the type of 'BarycentricInterpolator' (line 142)
    BarycentricInterpolator_115791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 34), 'BarycentricInterpolator')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 14), list_115789, BarycentricInterpolator_115791)
    # Adding element type (line 142)
    # Getting the type of 'pchip' (line 142)
    pchip_115792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 59), 'pchip')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 14), list_115789, pchip_115792)
    # Adding element type (line 142)
    # Getting the type of 'CubicSpline' (line 142)
    CubicSpline_115793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 66), 'CubicSpline')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 14), list_115789, CubicSpline_115793)
    
    # Testing the type of a for loop iterable (line 142)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 142, 4), list_115789)
    # Getting the type of the for loop variable (line 142)
    for_loop_var_115794 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 142, 4), list_115789)
    # Assigning a type to the variable 'ip' (line 142)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 142, 4), 'ip', for_loop_var_115794)
    # SSA begins for a for statement (line 142)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to _check_complex(...): (line 143)
    # Processing the call arguments (line 143)
    # Getting the type of 'ip' (line 143)
    ip_115796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 23), 'ip', False)
    # Processing the call keyword arguments (line 143)
    kwargs_115797 = {}
    # Getting the type of '_check_complex' (line 143)
    _check_complex_115795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 8), '_check_complex', False)
    # Calling _check_complex(args, kwargs) (line 143)
    _check_complex_call_result_115798 = invoke(stypy.reporting.localization.Localization(__file__, 143, 8), _check_complex_115795, *[ip_115796], **kwargs_115797)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_complex(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_complex' in the type store
    # Getting the type of 'stypy_return_type' (line 141)
    stypy_return_type_115799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_115799)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_complex'
    return stypy_return_type_115799

# Assigning a type to the variable 'test_complex' (line 141)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 0), 'test_complex', test_complex)
# Declaration of the 'TestKrogh' class

class TestKrogh(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 147, 4, False)
        # Assigning a type to the variable 'self' (line 148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 148, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.setup_method.__dict__.__setitem__('stypy_function_name', 'TestKrogh.setup_method')
        TestKrogh.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Call to a Attribute (line 148):
        
        # Assigning a Call to a Attribute (line 148):
        
        # Call to poly1d(...): (line 148)
        # Processing the call arguments (line 148)
        
        # Obtaining an instance of the builtin type 'list' (line 148)
        list_115802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 148)
        # Adding element type (line 148)
        int_115803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 35), list_115802, int_115803)
        # Adding element type (line 148)
        int_115804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 35), list_115802, int_115804)
        # Adding element type (line 148)
        int_115805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 35), list_115802, int_115805)
        # Adding element type (line 148)
        int_115806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 35), list_115802, int_115806)
        # Adding element type (line 148)
        int_115807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 35), list_115802, int_115807)
        
        # Processing the call keyword arguments (line 148)
        kwargs_115808 = {}
        # Getting the type of 'np' (line 148)
        np_115800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 25), 'np', False)
        # Obtaining the member 'poly1d' of a type (line 148)
        poly1d_115801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 25), np_115800, 'poly1d')
        # Calling poly1d(args, kwargs) (line 148)
        poly1d_call_result_115809 = invoke(stypy.reporting.localization.Localization(__file__, 148, 25), poly1d_115801, *[list_115802], **kwargs_115808)
        
        # Getting the type of 'self' (line 148)
        self_115810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 8), 'self')
        # Setting the type of the member 'true_poly' of a type (line 148)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 8), self_115810, 'true_poly', poly1d_call_result_115809)
        
        # Assigning a Call to a Attribute (line 149):
        
        # Assigning a Call to a Attribute (line 149):
        
        # Call to linspace(...): (line 149)
        # Processing the call arguments (line 149)
        int_115813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 35), 'int')
        int_115814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 38), 'int')
        int_115815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 40), 'int')
        # Processing the call keyword arguments (line 149)
        kwargs_115816 = {}
        # Getting the type of 'np' (line 149)
        np_115811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 23), 'np', False)
        # Obtaining the member 'linspace' of a type (line 149)
        linspace_115812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 149, 23), np_115811, 'linspace')
        # Calling linspace(args, kwargs) (line 149)
        linspace_call_result_115817 = invoke(stypy.reporting.localization.Localization(__file__, 149, 23), linspace_115812, *[int_115813, int_115814, int_115815], **kwargs_115816)
        
        # Getting the type of 'self' (line 149)
        self_115818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 8), 'self')
        # Setting the type of the member 'test_xs' of a type (line 149)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 149, 8), self_115818, 'test_xs', linspace_call_result_115817)
        
        # Assigning a Call to a Attribute (line 150):
        
        # Assigning a Call to a Attribute (line 150):
        
        # Call to linspace(...): (line 150)
        # Processing the call arguments (line 150)
        int_115821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 30), 'int')
        int_115822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 33), 'int')
        int_115823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 150, 35), 'int')
        # Processing the call keyword arguments (line 150)
        kwargs_115824 = {}
        # Getting the type of 'np' (line 150)
        np_115819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 18), 'np', False)
        # Obtaining the member 'linspace' of a type (line 150)
        linspace_115820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 18), np_115819, 'linspace')
        # Calling linspace(args, kwargs) (line 150)
        linspace_call_result_115825 = invoke(stypy.reporting.localization.Localization(__file__, 150, 18), linspace_115820, *[int_115821, int_115822, int_115823], **kwargs_115824)
        
        # Getting the type of 'self' (line 150)
        self_115826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 8), 'self')
        # Setting the type of the member 'xs' of a type (line 150)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 8), self_115826, 'xs', linspace_call_result_115825)
        
        # Assigning a Call to a Attribute (line 151):
        
        # Assigning a Call to a Attribute (line 151):
        
        # Call to true_poly(...): (line 151)
        # Processing the call arguments (line 151)
        # Getting the type of 'self' (line 151)
        self_115829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 33), 'self', False)
        # Obtaining the member 'xs' of a type (line 151)
        xs_115830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 33), self_115829, 'xs')
        # Processing the call keyword arguments (line 151)
        kwargs_115831 = {}
        # Getting the type of 'self' (line 151)
        self_115827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 18), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 151)
        true_poly_115828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 18), self_115827, 'true_poly')
        # Calling true_poly(args, kwargs) (line 151)
        true_poly_call_result_115832 = invoke(stypy.reporting.localization.Localization(__file__, 151, 18), true_poly_115828, *[xs_115830], **kwargs_115831)
        
        # Getting the type of 'self' (line 151)
        self_115833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 8), 'self')
        # Setting the type of the member 'ys' of a type (line 151)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 8), self_115833, 'ys', true_poly_call_result_115832)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 147)
        stypy_return_type_115834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115834)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_115834


    @norecursion
    def test_lagrange(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_lagrange'
        module_type_store = module_type_store.open_function_context('test_lagrange', 153, 4, False)
        # Assigning a type to the variable 'self' (line 154)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 154, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_lagrange')
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_lagrange.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_lagrange', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_lagrange', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_lagrange(...)' code ##################

        
        # Assigning a Call to a Name (line 154):
        
        # Assigning a Call to a Name (line 154):
        
        # Call to KroghInterpolator(...): (line 154)
        # Processing the call arguments (line 154)
        # Getting the type of 'self' (line 154)
        self_115836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 154)
        xs_115837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 30), self_115836, 'xs')
        # Getting the type of 'self' (line 154)
        self_115838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 154)
        ys_115839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 38), self_115838, 'ys')
        # Processing the call keyword arguments (line 154)
        kwargs_115840 = {}
        # Getting the type of 'KroghInterpolator' (line 154)
        KroghInterpolator_115835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 154)
        KroghInterpolator_call_result_115841 = invoke(stypy.reporting.localization.Localization(__file__, 154, 12), KroghInterpolator_115835, *[xs_115837, ys_115839], **kwargs_115840)
        
        # Assigning a type to the variable 'P' (line 154)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 154, 8), 'P', KroghInterpolator_call_result_115841)
        
        # Call to assert_almost_equal(...): (line 155)
        # Processing the call arguments (line 155)
        
        # Call to true_poly(...): (line 155)
        # Processing the call arguments (line 155)
        # Getting the type of 'self' (line 155)
        self_115845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 43), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 155)
        test_xs_115846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 43), self_115845, 'test_xs')
        # Processing the call keyword arguments (line 155)
        kwargs_115847 = {}
        # Getting the type of 'self' (line 155)
        self_115843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 28), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 155)
        true_poly_115844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 28), self_115843, 'true_poly')
        # Calling true_poly(args, kwargs) (line 155)
        true_poly_call_result_115848 = invoke(stypy.reporting.localization.Localization(__file__, 155, 28), true_poly_115844, *[test_xs_115846], **kwargs_115847)
        
        
        # Call to P(...): (line 155)
        # Processing the call arguments (line 155)
        # Getting the type of 'self' (line 155)
        self_115850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 59), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 155)
        test_xs_115851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 59), self_115850, 'test_xs')
        # Processing the call keyword arguments (line 155)
        kwargs_115852 = {}
        # Getting the type of 'P' (line 155)
        P_115849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 57), 'P', False)
        # Calling P(args, kwargs) (line 155)
        P_call_result_115853 = invoke(stypy.reporting.localization.Localization(__file__, 155, 57), P_115849, *[test_xs_115851], **kwargs_115852)
        
        # Processing the call keyword arguments (line 155)
        kwargs_115854 = {}
        # Getting the type of 'assert_almost_equal' (line 155)
        assert_almost_equal_115842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 155)
        assert_almost_equal_call_result_115855 = invoke(stypy.reporting.localization.Localization(__file__, 155, 8), assert_almost_equal_115842, *[true_poly_call_result_115848, P_call_result_115853], **kwargs_115854)
        
        
        # ################# End of 'test_lagrange(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_lagrange' in the type store
        # Getting the type of 'stypy_return_type' (line 153)
        stypy_return_type_115856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115856)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_lagrange'
        return stypy_return_type_115856


    @norecursion
    def test_scalar(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_scalar'
        module_type_store = module_type_store.open_function_context('test_scalar', 157, 4, False)
        # Assigning a type to the variable 'self' (line 158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 158, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_scalar')
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_scalar.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_scalar', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_scalar', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_scalar(...)' code ##################

        
        # Assigning a Call to a Name (line 158):
        
        # Assigning a Call to a Name (line 158):
        
        # Call to KroghInterpolator(...): (line 158)
        # Processing the call arguments (line 158)
        # Getting the type of 'self' (line 158)
        self_115858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 158)
        xs_115859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 158, 30), self_115858, 'xs')
        # Getting the type of 'self' (line 158)
        self_115860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 158)
        ys_115861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 158, 38), self_115860, 'ys')
        # Processing the call keyword arguments (line 158)
        kwargs_115862 = {}
        # Getting the type of 'KroghInterpolator' (line 158)
        KroghInterpolator_115857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 158)
        KroghInterpolator_call_result_115863 = invoke(stypy.reporting.localization.Localization(__file__, 158, 12), KroghInterpolator_115857, *[xs_115859, ys_115861], **kwargs_115862)
        
        # Assigning a type to the variable 'P' (line 158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 158, 8), 'P', KroghInterpolator_call_result_115863)
        
        # Call to assert_almost_equal(...): (line 159)
        # Processing the call arguments (line 159)
        
        # Call to true_poly(...): (line 159)
        # Processing the call arguments (line 159)
        int_115867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 43), 'int')
        # Processing the call keyword arguments (line 159)
        kwargs_115868 = {}
        # Getting the type of 'self' (line 159)
        self_115865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 28), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 159)
        true_poly_115866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 28), self_115865, 'true_poly')
        # Calling true_poly(args, kwargs) (line 159)
        true_poly_call_result_115869 = invoke(stypy.reporting.localization.Localization(__file__, 159, 28), true_poly_115866, *[int_115867], **kwargs_115868)
        
        
        # Call to P(...): (line 159)
        # Processing the call arguments (line 159)
        int_115871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 48), 'int')
        # Processing the call keyword arguments (line 159)
        kwargs_115872 = {}
        # Getting the type of 'P' (line 159)
        P_115870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 46), 'P', False)
        # Calling P(args, kwargs) (line 159)
        P_call_result_115873 = invoke(stypy.reporting.localization.Localization(__file__, 159, 46), P_115870, *[int_115871], **kwargs_115872)
        
        # Processing the call keyword arguments (line 159)
        kwargs_115874 = {}
        # Getting the type of 'assert_almost_equal' (line 159)
        assert_almost_equal_115864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 159)
        assert_almost_equal_call_result_115875 = invoke(stypy.reporting.localization.Localization(__file__, 159, 8), assert_almost_equal_115864, *[true_poly_call_result_115869, P_call_result_115873], **kwargs_115874)
        
        
        # Call to assert_almost_equal(...): (line 160)
        # Processing the call arguments (line 160)
        
        # Call to true_poly(...): (line 160)
        # Processing the call arguments (line 160)
        
        # Call to array(...): (line 160)
        # Processing the call arguments (line 160)
        int_115881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 52), 'int')
        # Processing the call keyword arguments (line 160)
        kwargs_115882 = {}
        # Getting the type of 'np' (line 160)
        np_115879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 43), 'np', False)
        # Obtaining the member 'array' of a type (line 160)
        array_115880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 160, 43), np_115879, 'array')
        # Calling array(args, kwargs) (line 160)
        array_call_result_115883 = invoke(stypy.reporting.localization.Localization(__file__, 160, 43), array_115880, *[int_115881], **kwargs_115882)
        
        # Processing the call keyword arguments (line 160)
        kwargs_115884 = {}
        # Getting the type of 'self' (line 160)
        self_115877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 28), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 160)
        true_poly_115878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 160, 28), self_115877, 'true_poly')
        # Calling true_poly(args, kwargs) (line 160)
        true_poly_call_result_115885 = invoke(stypy.reporting.localization.Localization(__file__, 160, 28), true_poly_115878, *[array_call_result_115883], **kwargs_115884)
        
        
        # Call to P(...): (line 160)
        # Processing the call arguments (line 160)
        
        # Call to array(...): (line 160)
        # Processing the call arguments (line 160)
        int_115889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 68), 'int')
        # Processing the call keyword arguments (line 160)
        kwargs_115890 = {}
        # Getting the type of 'np' (line 160)
        np_115887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 59), 'np', False)
        # Obtaining the member 'array' of a type (line 160)
        array_115888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 160, 59), np_115887, 'array')
        # Calling array(args, kwargs) (line 160)
        array_call_result_115891 = invoke(stypy.reporting.localization.Localization(__file__, 160, 59), array_115888, *[int_115889], **kwargs_115890)
        
        # Processing the call keyword arguments (line 160)
        kwargs_115892 = {}
        # Getting the type of 'P' (line 160)
        P_115886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 57), 'P', False)
        # Calling P(args, kwargs) (line 160)
        P_call_result_115893 = invoke(stypy.reporting.localization.Localization(__file__, 160, 57), P_115886, *[array_call_result_115891], **kwargs_115892)
        
        # Processing the call keyword arguments (line 160)
        kwargs_115894 = {}
        # Getting the type of 'assert_almost_equal' (line 160)
        assert_almost_equal_115876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 160)
        assert_almost_equal_call_result_115895 = invoke(stypy.reporting.localization.Localization(__file__, 160, 8), assert_almost_equal_115876, *[true_poly_call_result_115885, P_call_result_115893], **kwargs_115894)
        
        
        # ################# End of 'test_scalar(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_scalar' in the type store
        # Getting the type of 'stypy_return_type' (line 157)
        stypy_return_type_115896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115896)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_scalar'
        return stypy_return_type_115896


    @norecursion
    def test_derivatives(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_derivatives'
        module_type_store = module_type_store.open_function_context('test_derivatives', 162, 4, False)
        # Assigning a type to the variable 'self' (line 163)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 163, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_derivatives')
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_derivatives.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_derivatives', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_derivatives', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_derivatives(...)' code ##################

        
        # Assigning a Call to a Name (line 163):
        
        # Assigning a Call to a Name (line 163):
        
        # Call to KroghInterpolator(...): (line 163)
        # Processing the call arguments (line 163)
        # Getting the type of 'self' (line 163)
        self_115898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 163)
        xs_115899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 30), self_115898, 'xs')
        # Getting the type of 'self' (line 163)
        self_115900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 163)
        ys_115901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 38), self_115900, 'ys')
        # Processing the call keyword arguments (line 163)
        kwargs_115902 = {}
        # Getting the type of 'KroghInterpolator' (line 163)
        KroghInterpolator_115897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 163)
        KroghInterpolator_call_result_115903 = invoke(stypy.reporting.localization.Localization(__file__, 163, 12), KroghInterpolator_115897, *[xs_115899, ys_115901], **kwargs_115902)
        
        # Assigning a type to the variable 'P' (line 163)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 163, 8), 'P', KroghInterpolator_call_result_115903)
        
        # Assigning a Call to a Name (line 164):
        
        # Assigning a Call to a Name (line 164):
        
        # Call to derivatives(...): (line 164)
        # Processing the call arguments (line 164)
        # Getting the type of 'self' (line 164)
        self_115906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 26), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 164)
        test_xs_115907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 164, 26), self_115906, 'test_xs')
        # Processing the call keyword arguments (line 164)
        kwargs_115908 = {}
        # Getting the type of 'P' (line 164)
        P_115904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 12), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 164)
        derivatives_115905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 164, 12), P_115904, 'derivatives')
        # Calling derivatives(args, kwargs) (line 164)
        derivatives_call_result_115909 = invoke(stypy.reporting.localization.Localization(__file__, 164, 12), derivatives_115905, *[test_xs_115907], **kwargs_115908)
        
        # Assigning a type to the variable 'D' (line 164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 8), 'D', derivatives_call_result_115909)
        
        
        # Call to xrange(...): (line 165)
        # Processing the call arguments (line 165)
        
        # Obtaining the type of the subscript
        int_115911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 32), 'int')
        # Getting the type of 'D' (line 165)
        D_115912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 24), 'D', False)
        # Obtaining the member 'shape' of a type (line 165)
        shape_115913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 24), D_115912, 'shape')
        # Obtaining the member '__getitem__' of a type (line 165)
        getitem___115914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 24), shape_115913, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 165)
        subscript_call_result_115915 = invoke(stypy.reporting.localization.Localization(__file__, 165, 24), getitem___115914, int_115911)
        
        # Processing the call keyword arguments (line 165)
        kwargs_115916 = {}
        # Getting the type of 'xrange' (line 165)
        xrange_115910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 165)
        xrange_call_result_115917 = invoke(stypy.reporting.localization.Localization(__file__, 165, 17), xrange_115910, *[subscript_call_result_115915], **kwargs_115916)
        
        # Testing the type of a for loop iterable (line 165)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 165, 8), xrange_call_result_115917)
        # Getting the type of the for loop variable (line 165)
        for_loop_var_115918 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 165, 8), xrange_call_result_115917)
        # Assigning a type to the variable 'i' (line 165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 8), 'i', for_loop_var_115918)
        # SSA begins for a for statement (line 165)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_almost_equal(...): (line 166)
        # Processing the call arguments (line 166)
        
        # Call to (...): (line 166)
        # Processing the call arguments (line 166)
        # Getting the type of 'self' (line 166)
        self_115926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 56), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 166)
        test_xs_115927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 166, 56), self_115926, 'test_xs')
        # Processing the call keyword arguments (line 166)
        kwargs_115928 = {}
        
        # Call to deriv(...): (line 166)
        # Processing the call arguments (line 166)
        # Getting the type of 'i' (line 166)
        i_115923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 53), 'i', False)
        # Processing the call keyword arguments (line 166)
        kwargs_115924 = {}
        # Getting the type of 'self' (line 166)
        self_115920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 32), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 166)
        true_poly_115921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 166, 32), self_115920, 'true_poly')
        # Obtaining the member 'deriv' of a type (line 166)
        deriv_115922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 166, 32), true_poly_115921, 'deriv')
        # Calling deriv(args, kwargs) (line 166)
        deriv_call_result_115925 = invoke(stypy.reporting.localization.Localization(__file__, 166, 32), deriv_115922, *[i_115923], **kwargs_115924)
        
        # Calling (args, kwargs) (line 166)
        _call_result_115929 = invoke(stypy.reporting.localization.Localization(__file__, 166, 32), deriv_call_result_115925, *[test_xs_115927], **kwargs_115928)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 167)
        i_115930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 34), 'i', False)
        # Getting the type of 'D' (line 167)
        D_115931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 32), 'D', False)
        # Obtaining the member '__getitem__' of a type (line 167)
        getitem___115932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 32), D_115931, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 167)
        subscript_call_result_115933 = invoke(stypy.reporting.localization.Localization(__file__, 167, 32), getitem___115932, i_115930)
        
        # Processing the call keyword arguments (line 166)
        kwargs_115934 = {}
        # Getting the type of 'assert_almost_equal' (line 166)
        assert_almost_equal_115919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 166)
        assert_almost_equal_call_result_115935 = invoke(stypy.reporting.localization.Localization(__file__, 166, 12), assert_almost_equal_115919, *[_call_result_115929, subscript_call_result_115933], **kwargs_115934)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_derivatives(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_derivatives' in the type store
        # Getting the type of 'stypy_return_type' (line 162)
        stypy_return_type_115936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115936)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_derivatives'
        return stypy_return_type_115936


    @norecursion
    def test_low_derivatives(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_low_derivatives'
        module_type_store = module_type_store.open_function_context('test_low_derivatives', 169, 4, False)
        # Assigning a type to the variable 'self' (line 170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_low_derivatives')
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_low_derivatives.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_low_derivatives', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_low_derivatives', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_low_derivatives(...)' code ##################

        
        # Assigning a Call to a Name (line 170):
        
        # Assigning a Call to a Name (line 170):
        
        # Call to KroghInterpolator(...): (line 170)
        # Processing the call arguments (line 170)
        # Getting the type of 'self' (line 170)
        self_115938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 170)
        xs_115939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 170, 30), self_115938, 'xs')
        # Getting the type of 'self' (line 170)
        self_115940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 170)
        ys_115941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 170, 38), self_115940, 'ys')
        # Processing the call keyword arguments (line 170)
        kwargs_115942 = {}
        # Getting the type of 'KroghInterpolator' (line 170)
        KroghInterpolator_115937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 170)
        KroghInterpolator_call_result_115943 = invoke(stypy.reporting.localization.Localization(__file__, 170, 12), KroghInterpolator_115937, *[xs_115939, ys_115941], **kwargs_115942)
        
        # Assigning a type to the variable 'P' (line 170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 8), 'P', KroghInterpolator_call_result_115943)
        
        # Assigning a Call to a Name (line 171):
        
        # Assigning a Call to a Name (line 171):
        
        # Call to derivatives(...): (line 171)
        # Processing the call arguments (line 171)
        # Getting the type of 'self' (line 171)
        self_115946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 26), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 171)
        test_xs_115947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 26), self_115946, 'test_xs')
        
        # Call to len(...): (line 171)
        # Processing the call arguments (line 171)
        # Getting the type of 'self' (line 171)
        self_115949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 43), 'self', False)
        # Obtaining the member 'xs' of a type (line 171)
        xs_115950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 43), self_115949, 'xs')
        # Processing the call keyword arguments (line 171)
        kwargs_115951 = {}
        # Getting the type of 'len' (line 171)
        len_115948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 39), 'len', False)
        # Calling len(args, kwargs) (line 171)
        len_call_result_115952 = invoke(stypy.reporting.localization.Localization(__file__, 171, 39), len_115948, *[xs_115950], **kwargs_115951)
        
        int_115953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 171, 52), 'int')
        # Applying the binary operator '+' (line 171)
        result_add_115954 = python_operator(stypy.reporting.localization.Localization(__file__, 171, 39), '+', len_call_result_115952, int_115953)
        
        # Processing the call keyword arguments (line 171)
        kwargs_115955 = {}
        # Getting the type of 'P' (line 171)
        P_115944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 12), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 171)
        derivatives_115945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 12), P_115944, 'derivatives')
        # Calling derivatives(args, kwargs) (line 171)
        derivatives_call_result_115956 = invoke(stypy.reporting.localization.Localization(__file__, 171, 12), derivatives_115945, *[test_xs_115947, result_add_115954], **kwargs_115955)
        
        # Assigning a type to the variable 'D' (line 171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 171, 8), 'D', derivatives_call_result_115956)
        
        
        # Call to xrange(...): (line 172)
        # Processing the call arguments (line 172)
        
        # Obtaining the type of the subscript
        int_115958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 32), 'int')
        # Getting the type of 'D' (line 172)
        D_115959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 24), 'D', False)
        # Obtaining the member 'shape' of a type (line 172)
        shape_115960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 24), D_115959, 'shape')
        # Obtaining the member '__getitem__' of a type (line 172)
        getitem___115961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 24), shape_115960, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 172)
        subscript_call_result_115962 = invoke(stypy.reporting.localization.Localization(__file__, 172, 24), getitem___115961, int_115958)
        
        # Processing the call keyword arguments (line 172)
        kwargs_115963 = {}
        # Getting the type of 'xrange' (line 172)
        xrange_115957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 172)
        xrange_call_result_115964 = invoke(stypy.reporting.localization.Localization(__file__, 172, 17), xrange_115957, *[subscript_call_result_115962], **kwargs_115963)
        
        # Testing the type of a for loop iterable (line 172)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 172, 8), xrange_call_result_115964)
        # Getting the type of the for loop variable (line 172)
        for_loop_var_115965 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 172, 8), xrange_call_result_115964)
        # Assigning a type to the variable 'i' (line 172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 8), 'i', for_loop_var_115965)
        # SSA begins for a for statement (line 172)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_almost_equal(...): (line 173)
        # Processing the call arguments (line 173)
        
        # Call to (...): (line 173)
        # Processing the call arguments (line 173)
        # Getting the type of 'self' (line 173)
        self_115973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 56), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 173)
        test_xs_115974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 56), self_115973, 'test_xs')
        # Processing the call keyword arguments (line 173)
        kwargs_115975 = {}
        
        # Call to deriv(...): (line 173)
        # Processing the call arguments (line 173)
        # Getting the type of 'i' (line 173)
        i_115970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 53), 'i', False)
        # Processing the call keyword arguments (line 173)
        kwargs_115971 = {}
        # Getting the type of 'self' (line 173)
        self_115967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 32), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 173)
        true_poly_115968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 32), self_115967, 'true_poly')
        # Obtaining the member 'deriv' of a type (line 173)
        deriv_115969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 32), true_poly_115968, 'deriv')
        # Calling deriv(args, kwargs) (line 173)
        deriv_call_result_115972 = invoke(stypy.reporting.localization.Localization(__file__, 173, 32), deriv_115969, *[i_115970], **kwargs_115971)
        
        # Calling (args, kwargs) (line 173)
        _call_result_115976 = invoke(stypy.reporting.localization.Localization(__file__, 173, 32), deriv_call_result_115972, *[test_xs_115974], **kwargs_115975)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 174)
        i_115977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 34), 'i', False)
        # Getting the type of 'D' (line 174)
        D_115978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 32), 'D', False)
        # Obtaining the member '__getitem__' of a type (line 174)
        getitem___115979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 174, 32), D_115978, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 174)
        subscript_call_result_115980 = invoke(stypy.reporting.localization.Localization(__file__, 174, 32), getitem___115979, i_115977)
        
        # Processing the call keyword arguments (line 173)
        kwargs_115981 = {}
        # Getting the type of 'assert_almost_equal' (line 173)
        assert_almost_equal_115966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 173)
        assert_almost_equal_call_result_115982 = invoke(stypy.reporting.localization.Localization(__file__, 173, 12), assert_almost_equal_115966, *[_call_result_115976, subscript_call_result_115980], **kwargs_115981)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_low_derivatives(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_low_derivatives' in the type store
        # Getting the type of 'stypy_return_type' (line 169)
        stypy_return_type_115983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_115983)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_low_derivatives'
        return stypy_return_type_115983


    @norecursion
    def test_derivative(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_derivative'
        module_type_store = module_type_store.open_function_context('test_derivative', 176, 4, False)
        # Assigning a type to the variable 'self' (line 177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_derivative')
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_derivative.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_derivative', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_derivative', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_derivative(...)' code ##################

        
        # Assigning a Call to a Name (line 177):
        
        # Assigning a Call to a Name (line 177):
        
        # Call to KroghInterpolator(...): (line 177)
        # Processing the call arguments (line 177)
        # Getting the type of 'self' (line 177)
        self_115985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 177)
        xs_115986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 30), self_115985, 'xs')
        # Getting the type of 'self' (line 177)
        self_115987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 177)
        ys_115988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 38), self_115987, 'ys')
        # Processing the call keyword arguments (line 177)
        kwargs_115989 = {}
        # Getting the type of 'KroghInterpolator' (line 177)
        KroghInterpolator_115984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 177)
        KroghInterpolator_call_result_115990 = invoke(stypy.reporting.localization.Localization(__file__, 177, 12), KroghInterpolator_115984, *[xs_115986, ys_115988], **kwargs_115989)
        
        # Assigning a type to the variable 'P' (line 177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 8), 'P', KroghInterpolator_call_result_115990)
        
        # Assigning a Num to a Name (line 178):
        
        # Assigning a Num to a Name (line 178):
        int_115991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 178, 12), 'int')
        # Assigning a type to the variable 'm' (line 178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 8), 'm', int_115991)
        
        # Assigning a Call to a Name (line 179):
        
        # Assigning a Call to a Name (line 179):
        
        # Call to derivatives(...): (line 179)
        # Processing the call arguments (line 179)
        # Getting the type of 'self' (line 179)
        self_115994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 26), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 179)
        test_xs_115995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 179, 26), self_115994, 'test_xs')
        # Getting the type of 'm' (line 179)
        m_115996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 39), 'm', False)
        # Processing the call keyword arguments (line 179)
        kwargs_115997 = {}
        # Getting the type of 'P' (line 179)
        P_115992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 12), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 179)
        derivatives_115993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 179, 12), P_115992, 'derivatives')
        # Calling derivatives(args, kwargs) (line 179)
        derivatives_call_result_115998 = invoke(stypy.reporting.localization.Localization(__file__, 179, 12), derivatives_115993, *[test_xs_115995, m_115996], **kwargs_115997)
        
        # Assigning a type to the variable 'r' (line 179)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 179, 8), 'r', derivatives_call_result_115998)
        
        
        # Call to xrange(...): (line 180)
        # Processing the call arguments (line 180)
        # Getting the type of 'm' (line 180)
        m_116000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 24), 'm', False)
        # Processing the call keyword arguments (line 180)
        kwargs_116001 = {}
        # Getting the type of 'xrange' (line 180)
        xrange_115999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 180)
        xrange_call_result_116002 = invoke(stypy.reporting.localization.Localization(__file__, 180, 17), xrange_115999, *[m_116000], **kwargs_116001)
        
        # Testing the type of a for loop iterable (line 180)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 180, 8), xrange_call_result_116002)
        # Getting the type of the for loop variable (line 180)
        for_loop_var_116003 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 180, 8), xrange_call_result_116002)
        # Assigning a type to the variable 'i' (line 180)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 8), 'i', for_loop_var_116003)
        # SSA begins for a for statement (line 180)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_almost_equal(...): (line 181)
        # Processing the call arguments (line 181)
        
        # Call to derivative(...): (line 181)
        # Processing the call arguments (line 181)
        # Getting the type of 'self' (line 181)
        self_116007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 45), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 181)
        test_xs_116008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 45), self_116007, 'test_xs')
        # Getting the type of 'i' (line 181)
        i_116009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 58), 'i', False)
        # Processing the call keyword arguments (line 181)
        kwargs_116010 = {}
        # Getting the type of 'P' (line 181)
        P_116005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 32), 'P', False)
        # Obtaining the member 'derivative' of a type (line 181)
        derivative_116006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 32), P_116005, 'derivative')
        # Calling derivative(args, kwargs) (line 181)
        derivative_call_result_116011 = invoke(stypy.reporting.localization.Localization(__file__, 181, 32), derivative_116006, *[test_xs_116008, i_116009], **kwargs_116010)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 181)
        i_116012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 63), 'i', False)
        # Getting the type of 'r' (line 181)
        r_116013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 61), 'r', False)
        # Obtaining the member '__getitem__' of a type (line 181)
        getitem___116014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 61), r_116013, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 181)
        subscript_call_result_116015 = invoke(stypy.reporting.localization.Localization(__file__, 181, 61), getitem___116014, i_116012)
        
        # Processing the call keyword arguments (line 181)
        kwargs_116016 = {}
        # Getting the type of 'assert_almost_equal' (line 181)
        assert_almost_equal_116004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 181)
        assert_almost_equal_call_result_116017 = invoke(stypy.reporting.localization.Localization(__file__, 181, 12), assert_almost_equal_116004, *[derivative_call_result_116011, subscript_call_result_116015], **kwargs_116016)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_derivative(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_derivative' in the type store
        # Getting the type of 'stypy_return_type' (line 176)
        stypy_return_type_116018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116018)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_derivative'
        return stypy_return_type_116018


    @norecursion
    def test_high_derivative(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_high_derivative'
        module_type_store = module_type_store.open_function_context('test_high_derivative', 183, 4, False)
        # Assigning a type to the variable 'self' (line 184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_high_derivative')
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_high_derivative.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_high_derivative', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_high_derivative', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_high_derivative(...)' code ##################

        
        # Assigning a Call to a Name (line 184):
        
        # Assigning a Call to a Name (line 184):
        
        # Call to KroghInterpolator(...): (line 184)
        # Processing the call arguments (line 184)
        # Getting the type of 'self' (line 184)
        self_116020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 184)
        xs_116021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 184, 30), self_116020, 'xs')
        # Getting the type of 'self' (line 184)
        self_116022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 184)
        ys_116023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 184, 38), self_116022, 'ys')
        # Processing the call keyword arguments (line 184)
        kwargs_116024 = {}
        # Getting the type of 'KroghInterpolator' (line 184)
        KroghInterpolator_116019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 184)
        KroghInterpolator_call_result_116025 = invoke(stypy.reporting.localization.Localization(__file__, 184, 12), KroghInterpolator_116019, *[xs_116021, ys_116023], **kwargs_116024)
        
        # Assigning a type to the variable 'P' (line 184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 8), 'P', KroghInterpolator_call_result_116025)
        
        
        # Call to xrange(...): (line 185)
        # Processing the call arguments (line 185)
        
        # Call to len(...): (line 185)
        # Processing the call arguments (line 185)
        # Getting the type of 'self' (line 185)
        self_116028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 28), 'self', False)
        # Obtaining the member 'xs' of a type (line 185)
        xs_116029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 28), self_116028, 'xs')
        # Processing the call keyword arguments (line 185)
        kwargs_116030 = {}
        # Getting the type of 'len' (line 185)
        len_116027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 24), 'len', False)
        # Calling len(args, kwargs) (line 185)
        len_call_result_116031 = invoke(stypy.reporting.localization.Localization(__file__, 185, 24), len_116027, *[xs_116029], **kwargs_116030)
        
        int_116032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 185, 37), 'int')
        
        # Call to len(...): (line 185)
        # Processing the call arguments (line 185)
        # Getting the type of 'self' (line 185)
        self_116034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 43), 'self', False)
        # Obtaining the member 'xs' of a type (line 185)
        xs_116035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 43), self_116034, 'xs')
        # Processing the call keyword arguments (line 185)
        kwargs_116036 = {}
        # Getting the type of 'len' (line 185)
        len_116033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 39), 'len', False)
        # Calling len(args, kwargs) (line 185)
        len_call_result_116037 = invoke(stypy.reporting.localization.Localization(__file__, 185, 39), len_116033, *[xs_116035], **kwargs_116036)
        
        # Applying the binary operator '*' (line 185)
        result_mul_116038 = python_operator(stypy.reporting.localization.Localization(__file__, 185, 37), '*', int_116032, len_call_result_116037)
        
        # Processing the call keyword arguments (line 185)
        kwargs_116039 = {}
        # Getting the type of 'xrange' (line 185)
        xrange_116026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 185)
        xrange_call_result_116040 = invoke(stypy.reporting.localization.Localization(__file__, 185, 17), xrange_116026, *[len_call_result_116031, result_mul_116038], **kwargs_116039)
        
        # Testing the type of a for loop iterable (line 185)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 185, 8), xrange_call_result_116040)
        # Getting the type of the for loop variable (line 185)
        for_loop_var_116041 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 185, 8), xrange_call_result_116040)
        # Assigning a type to the variable 'i' (line 185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 8), 'i', for_loop_var_116041)
        # SSA begins for a for statement (line 185)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_almost_equal(...): (line 186)
        # Processing the call arguments (line 186)
        
        # Call to derivative(...): (line 186)
        # Processing the call arguments (line 186)
        # Getting the type of 'self' (line 186)
        self_116045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 45), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 186)
        test_xs_116046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 45), self_116045, 'test_xs')
        # Getting the type of 'i' (line 186)
        i_116047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 58), 'i', False)
        # Processing the call keyword arguments (line 186)
        kwargs_116048 = {}
        # Getting the type of 'P' (line 186)
        P_116043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 32), 'P', False)
        # Obtaining the member 'derivative' of a type (line 186)
        derivative_116044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 32), P_116043, 'derivative')
        # Calling derivative(args, kwargs) (line 186)
        derivative_call_result_116049 = invoke(stypy.reporting.localization.Localization(__file__, 186, 32), derivative_116044, *[test_xs_116046, i_116047], **kwargs_116048)
        
        
        # Call to zeros(...): (line 187)
        # Processing the call arguments (line 187)
        
        # Call to len(...): (line 187)
        # Processing the call arguments (line 187)
        # Getting the type of 'self' (line 187)
        self_116053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 45), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 187)
        test_xs_116054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 45), self_116053, 'test_xs')
        # Processing the call keyword arguments (line 187)
        kwargs_116055 = {}
        # Getting the type of 'len' (line 187)
        len_116052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 41), 'len', False)
        # Calling len(args, kwargs) (line 187)
        len_call_result_116056 = invoke(stypy.reporting.localization.Localization(__file__, 187, 41), len_116052, *[test_xs_116054], **kwargs_116055)
        
        # Processing the call keyword arguments (line 187)
        kwargs_116057 = {}
        # Getting the type of 'np' (line 187)
        np_116050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 32), 'np', False)
        # Obtaining the member 'zeros' of a type (line 187)
        zeros_116051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 32), np_116050, 'zeros')
        # Calling zeros(args, kwargs) (line 187)
        zeros_call_result_116058 = invoke(stypy.reporting.localization.Localization(__file__, 187, 32), zeros_116051, *[len_call_result_116056], **kwargs_116057)
        
        # Processing the call keyword arguments (line 186)
        kwargs_116059 = {}
        # Getting the type of 'assert_almost_equal' (line 186)
        assert_almost_equal_116042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 186)
        assert_almost_equal_call_result_116060 = invoke(stypy.reporting.localization.Localization(__file__, 186, 12), assert_almost_equal_116042, *[derivative_call_result_116049, zeros_call_result_116058], **kwargs_116059)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_high_derivative(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_high_derivative' in the type store
        # Getting the type of 'stypy_return_type' (line 183)
        stypy_return_type_116061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116061)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_high_derivative'
        return stypy_return_type_116061


    @norecursion
    def test_hermite(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hermite'
        module_type_store = module_type_store.open_function_context('test_hermite', 189, 4, False)
        # Assigning a type to the variable 'self' (line 190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_hermite')
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_hermite.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_hermite', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hermite', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hermite(...)' code ##################

        
        # Assigning a List to a Name (line 190):
        
        # Assigning a List to a Name (line 190):
        
        # Obtaining an instance of the builtin type 'list' (line 190)
        list_116062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 190)
        # Adding element type (line 190)
        int_116063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 190, 13), list_116062, int_116063)
        # Adding element type (line 190)
        int_116064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 190, 13), list_116062, int_116064)
        # Adding element type (line 190)
        int_116065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 18), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 190, 13), list_116062, int_116065)
        # Adding element type (line 190)
        int_116066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 190, 13), list_116062, int_116066)
        # Adding element type (line 190)
        int_116067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 190, 13), list_116062, int_116067)
        # Adding element type (line 190)
        int_116068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 190, 13), list_116062, int_116068)
        # Adding element type (line 190)
        int_116069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 190, 13), list_116062, int_116069)
        
        # Assigning a type to the variable 'xs' (line 190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'xs', list_116062)
        
        # Assigning a List to a Name (line 191):
        
        # Assigning a List to a Name (line 191):
        
        # Obtaining an instance of the builtin type 'list' (line 191)
        list_116070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 191)
        # Adding element type (line 191)
        
        # Call to true_poly(...): (line 191)
        # Processing the call arguments (line 191)
        int_116073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 29), 'int')
        # Processing the call keyword arguments (line 191)
        kwargs_116074 = {}
        # Getting the type of 'self' (line 191)
        self_116071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 14), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 191)
        true_poly_116072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 191, 14), self_116071, 'true_poly')
        # Calling true_poly(args, kwargs) (line 191)
        true_poly_call_result_116075 = invoke(stypy.reporting.localization.Localization(__file__, 191, 14), true_poly_116072, *[int_116073], **kwargs_116074)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 191, 13), list_116070, true_poly_call_result_116075)
        # Adding element type (line 191)
        
        # Call to (...): (line 192)
        # Processing the call arguments (line 192)
        int_116082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 38), 'int')
        # Processing the call keyword arguments (line 192)
        kwargs_116083 = {}
        
        # Call to deriv(...): (line 192)
        # Processing the call arguments (line 192)
        int_116079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 35), 'int')
        # Processing the call keyword arguments (line 192)
        kwargs_116080 = {}
        # Getting the type of 'self' (line 192)
        self_116076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 14), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 192)
        true_poly_116077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 14), self_116076, 'true_poly')
        # Obtaining the member 'deriv' of a type (line 192)
        deriv_116078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 14), true_poly_116077, 'deriv')
        # Calling deriv(args, kwargs) (line 192)
        deriv_call_result_116081 = invoke(stypy.reporting.localization.Localization(__file__, 192, 14), deriv_116078, *[int_116079], **kwargs_116080)
        
        # Calling (args, kwargs) (line 192)
        _call_result_116084 = invoke(stypy.reporting.localization.Localization(__file__, 192, 14), deriv_call_result_116081, *[int_116082], **kwargs_116083)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 191, 13), list_116070, _call_result_116084)
        # Adding element type (line 191)
        
        # Call to (...): (line 193)
        # Processing the call arguments (line 193)
        int_116091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 38), 'int')
        # Processing the call keyword arguments (line 193)
        kwargs_116092 = {}
        
        # Call to deriv(...): (line 193)
        # Processing the call arguments (line 193)
        int_116088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 35), 'int')
        # Processing the call keyword arguments (line 193)
        kwargs_116089 = {}
        # Getting the type of 'self' (line 193)
        self_116085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 14), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 193)
        true_poly_116086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 14), self_116085, 'true_poly')
        # Obtaining the member 'deriv' of a type (line 193)
        deriv_116087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 14), true_poly_116086, 'deriv')
        # Calling deriv(args, kwargs) (line 193)
        deriv_call_result_116090 = invoke(stypy.reporting.localization.Localization(__file__, 193, 14), deriv_116087, *[int_116088], **kwargs_116089)
        
        # Calling (args, kwargs) (line 193)
        _call_result_116093 = invoke(stypy.reporting.localization.Localization(__file__, 193, 14), deriv_call_result_116090, *[int_116091], **kwargs_116092)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 191, 13), list_116070, _call_result_116093)
        # Adding element type (line 191)
        
        # Call to true_poly(...): (line 194)
        # Processing the call arguments (line 194)
        int_116096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 29), 'int')
        # Processing the call keyword arguments (line 194)
        kwargs_116097 = {}
        # Getting the type of 'self' (line 194)
        self_116094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 14), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 194)
        true_poly_116095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 194, 14), self_116094, 'true_poly')
        # Calling true_poly(args, kwargs) (line 194)
        true_poly_call_result_116098 = invoke(stypy.reporting.localization.Localization(__file__, 194, 14), true_poly_116095, *[int_116096], **kwargs_116097)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 191, 13), list_116070, true_poly_call_result_116098)
        # Adding element type (line 191)
        
        # Call to (...): (line 195)
        # Processing the call arguments (line 195)
        int_116105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 38), 'int')
        # Processing the call keyword arguments (line 195)
        kwargs_116106 = {}
        
        # Call to deriv(...): (line 195)
        # Processing the call arguments (line 195)
        int_116102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 35), 'int')
        # Processing the call keyword arguments (line 195)
        kwargs_116103 = {}
        # Getting the type of 'self' (line 195)
        self_116099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 14), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 195)
        true_poly_116100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 14), self_116099, 'true_poly')
        # Obtaining the member 'deriv' of a type (line 195)
        deriv_116101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 14), true_poly_116100, 'deriv')
        # Calling deriv(args, kwargs) (line 195)
        deriv_call_result_116104 = invoke(stypy.reporting.localization.Localization(__file__, 195, 14), deriv_116101, *[int_116102], **kwargs_116103)
        
        # Calling (args, kwargs) (line 195)
        _call_result_116107 = invoke(stypy.reporting.localization.Localization(__file__, 195, 14), deriv_call_result_116104, *[int_116105], **kwargs_116106)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 191, 13), list_116070, _call_result_116107)
        # Adding element type (line 191)
        
        # Call to (...): (line 196)
        # Processing the call arguments (line 196)
        int_116114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 38), 'int')
        # Processing the call keyword arguments (line 196)
        kwargs_116115 = {}
        
        # Call to deriv(...): (line 196)
        # Processing the call arguments (line 196)
        int_116111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 35), 'int')
        # Processing the call keyword arguments (line 196)
        kwargs_116112 = {}
        # Getting the type of 'self' (line 196)
        self_116108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 14), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 196)
        true_poly_116109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 14), self_116108, 'true_poly')
        # Obtaining the member 'deriv' of a type (line 196)
        deriv_116110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 14), true_poly_116109, 'deriv')
        # Calling deriv(args, kwargs) (line 196)
        deriv_call_result_116113 = invoke(stypy.reporting.localization.Localization(__file__, 196, 14), deriv_116110, *[int_116111], **kwargs_116112)
        
        # Calling (args, kwargs) (line 196)
        _call_result_116116 = invoke(stypy.reporting.localization.Localization(__file__, 196, 14), deriv_call_result_116113, *[int_116114], **kwargs_116115)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 191, 13), list_116070, _call_result_116116)
        # Adding element type (line 191)
        
        # Call to true_poly(...): (line 197)
        # Processing the call arguments (line 197)
        int_116119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 29), 'int')
        # Processing the call keyword arguments (line 197)
        kwargs_116120 = {}
        # Getting the type of 'self' (line 197)
        self_116117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 14), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 197)
        true_poly_116118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 14), self_116117, 'true_poly')
        # Calling true_poly(args, kwargs) (line 197)
        true_poly_call_result_116121 = invoke(stypy.reporting.localization.Localization(__file__, 197, 14), true_poly_116118, *[int_116119], **kwargs_116120)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 191, 13), list_116070, true_poly_call_result_116121)
        
        # Assigning a type to the variable 'ys' (line 191)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 8), 'ys', list_116070)
        
        # Assigning a Call to a Name (line 198):
        
        # Assigning a Call to a Name (line 198):
        
        # Call to KroghInterpolator(...): (line 198)
        # Processing the call arguments (line 198)
        # Getting the type of 'self' (line 198)
        self_116123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 198)
        xs_116124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 30), self_116123, 'xs')
        # Getting the type of 'self' (line 198)
        self_116125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 198)
        ys_116126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 38), self_116125, 'ys')
        # Processing the call keyword arguments (line 198)
        kwargs_116127 = {}
        # Getting the type of 'KroghInterpolator' (line 198)
        KroghInterpolator_116122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 198)
        KroghInterpolator_call_result_116128 = invoke(stypy.reporting.localization.Localization(__file__, 198, 12), KroghInterpolator_116122, *[xs_116124, ys_116126], **kwargs_116127)
        
        # Assigning a type to the variable 'P' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'P', KroghInterpolator_call_result_116128)
        
        # Call to assert_almost_equal(...): (line 199)
        # Processing the call arguments (line 199)
        
        # Call to true_poly(...): (line 199)
        # Processing the call arguments (line 199)
        # Getting the type of 'self' (line 199)
        self_116132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 43), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 199)
        test_xs_116133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 43), self_116132, 'test_xs')
        # Processing the call keyword arguments (line 199)
        kwargs_116134 = {}
        # Getting the type of 'self' (line 199)
        self_116130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 28), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 199)
        true_poly_116131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 28), self_116130, 'true_poly')
        # Calling true_poly(args, kwargs) (line 199)
        true_poly_call_result_116135 = invoke(stypy.reporting.localization.Localization(__file__, 199, 28), true_poly_116131, *[test_xs_116133], **kwargs_116134)
        
        
        # Call to P(...): (line 199)
        # Processing the call arguments (line 199)
        # Getting the type of 'self' (line 199)
        self_116137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 59), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 199)
        test_xs_116138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 59), self_116137, 'test_xs')
        # Processing the call keyword arguments (line 199)
        kwargs_116139 = {}
        # Getting the type of 'P' (line 199)
        P_116136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 57), 'P', False)
        # Calling P(args, kwargs) (line 199)
        P_call_result_116140 = invoke(stypy.reporting.localization.Localization(__file__, 199, 57), P_116136, *[test_xs_116138], **kwargs_116139)
        
        # Processing the call keyword arguments (line 199)
        kwargs_116141 = {}
        # Getting the type of 'assert_almost_equal' (line 199)
        assert_almost_equal_116129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 199)
        assert_almost_equal_call_result_116142 = invoke(stypy.reporting.localization.Localization(__file__, 199, 8), assert_almost_equal_116129, *[true_poly_call_result_116135, P_call_result_116140], **kwargs_116141)
        
        
        # ################# End of 'test_hermite(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hermite' in the type store
        # Getting the type of 'stypy_return_type' (line 189)
        stypy_return_type_116143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116143)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hermite'
        return stypy_return_type_116143


    @norecursion
    def test_vector(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_vector'
        module_type_store = module_type_store.open_function_context('test_vector', 201, 4, False)
        # Assigning a type to the variable 'self' (line 202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_vector.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_vector.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_vector.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_vector.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_vector')
        TestKrogh.test_vector.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_vector.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_vector.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_vector.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_vector.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_vector.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_vector.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_vector', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_vector', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_vector(...)' code ##################

        
        # Assigning a List to a Name (line 202):
        
        # Assigning a List to a Name (line 202):
        
        # Obtaining an instance of the builtin type 'list' (line 202)
        list_116144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 202)
        # Adding element type (line 202)
        int_116145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 13), list_116144, int_116145)
        # Adding element type (line 202)
        int_116146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 17), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 13), list_116144, int_116146)
        # Adding element type (line 202)
        int_116147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 13), list_116144, int_116147)
        
        # Assigning a type to the variable 'xs' (line 202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 8), 'xs', list_116144)
        
        # Assigning a Call to a Name (line 203):
        
        # Assigning a Call to a Name (line 203):
        
        # Call to array(...): (line 203)
        # Processing the call arguments (line 203)
        
        # Obtaining an instance of the builtin type 'list' (line 203)
        list_116150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 203)
        # Adding element type (line 203)
        
        # Obtaining an instance of the builtin type 'list' (line 203)
        list_116151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 203)
        # Adding element type (line 203)
        int_116152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 23), list_116151, int_116152)
        # Adding element type (line 203)
        int_116153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 23), list_116151, int_116153)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 22), list_116150, list_116151)
        # Adding element type (line 203)
        
        # Obtaining an instance of the builtin type 'list' (line 203)
        list_116154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 203)
        # Adding element type (line 203)
        int_116155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 29), list_116154, int_116155)
        # Adding element type (line 203)
        int_116156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 29), list_116154, int_116156)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 22), list_116150, list_116154)
        # Adding element type (line 203)
        
        # Obtaining an instance of the builtin type 'list' (line 203)
        list_116157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 203)
        # Adding element type (line 203)
        int_116158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 35), list_116157, int_116158)
        # Adding element type (line 203)
        int_116159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 35), list_116157, int_116159)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 22), list_116150, list_116157)
        
        # Processing the call keyword arguments (line 203)
        kwargs_116160 = {}
        # Getting the type of 'np' (line 203)
        np_116148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 203)
        array_116149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 13), np_116148, 'array')
        # Calling array(args, kwargs) (line 203)
        array_call_result_116161 = invoke(stypy.reporting.localization.Localization(__file__, 203, 13), array_116149, *[list_116150], **kwargs_116160)
        
        # Assigning a type to the variable 'ys' (line 203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 203, 8), 'ys', array_call_result_116161)
        
        # Assigning a Call to a Name (line 204):
        
        # Assigning a Call to a Name (line 204):
        
        # Call to KroghInterpolator(...): (line 204)
        # Processing the call arguments (line 204)
        # Getting the type of 'xs' (line 204)
        xs_116163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 30), 'xs', False)
        # Getting the type of 'ys' (line 204)
        ys_116164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 33), 'ys', False)
        # Processing the call keyword arguments (line 204)
        kwargs_116165 = {}
        # Getting the type of 'KroghInterpolator' (line 204)
        KroghInterpolator_116162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 204)
        KroghInterpolator_call_result_116166 = invoke(stypy.reporting.localization.Localization(__file__, 204, 12), KroghInterpolator_116162, *[xs_116163, ys_116164], **kwargs_116165)
        
        # Assigning a type to the variable 'P' (line 204)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 204, 8), 'P', KroghInterpolator_call_result_116166)
        
        # Assigning a ListComp to a Name (line 205):
        
        # Assigning a ListComp to a Name (line 205):
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to xrange(...): (line 205)
        # Processing the call arguments (line 205)
        
        # Obtaining the type of the subscript
        int_116177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 69), 'int')
        # Getting the type of 'ys' (line 205)
        ys_116178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 60), 'ys', False)
        # Obtaining the member 'shape' of a type (line 205)
        shape_116179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 60), ys_116178, 'shape')
        # Obtaining the member '__getitem__' of a type (line 205)
        getitem___116180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 60), shape_116179, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 205)
        subscript_call_result_116181 = invoke(stypy.reporting.localization.Localization(__file__, 205, 60), getitem___116180, int_116177)
        
        # Processing the call keyword arguments (line 205)
        kwargs_116182 = {}
        # Getting the type of 'xrange' (line 205)
        xrange_116176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 53), 'xrange', False)
        # Calling xrange(args, kwargs) (line 205)
        xrange_call_result_116183 = invoke(stypy.reporting.localization.Localization(__file__, 205, 53), xrange_116176, *[subscript_call_result_116181], **kwargs_116182)
        
        comprehension_116184 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 14), xrange_call_result_116183)
        # Assigning a type to the variable 'i' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 14), 'i', comprehension_116184)
        
        # Call to KroghInterpolator(...): (line 205)
        # Processing the call arguments (line 205)
        # Getting the type of 'xs' (line 205)
        xs_116168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 32), 'xs', False)
        
        # Obtaining the type of the subscript
        slice_116169 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 205, 35), None, None, None)
        # Getting the type of 'i' (line 205)
        i_116170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 40), 'i', False)
        # Getting the type of 'ys' (line 205)
        ys_116171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 35), 'ys', False)
        # Obtaining the member '__getitem__' of a type (line 205)
        getitem___116172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 35), ys_116171, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 205)
        subscript_call_result_116173 = invoke(stypy.reporting.localization.Localization(__file__, 205, 35), getitem___116172, (slice_116169, i_116170))
        
        # Processing the call keyword arguments (line 205)
        kwargs_116174 = {}
        # Getting the type of 'KroghInterpolator' (line 205)
        KroghInterpolator_116167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 14), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 205)
        KroghInterpolator_call_result_116175 = invoke(stypy.reporting.localization.Localization(__file__, 205, 14), KroghInterpolator_116167, *[xs_116168, subscript_call_result_116173], **kwargs_116174)
        
        list_116185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 14), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 14), list_116185, KroghInterpolator_call_result_116175)
        # Assigning a type to the variable 'Pi' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 8), 'Pi', list_116185)
        
        # Assigning a Call to a Name (line 206):
        
        # Assigning a Call to a Name (line 206):
        
        # Call to linspace(...): (line 206)
        # Processing the call arguments (line 206)
        int_116188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 30), 'int')
        int_116189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 33), 'int')
        int_116190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 35), 'int')
        # Processing the call keyword arguments (line 206)
        kwargs_116191 = {}
        # Getting the type of 'np' (line 206)
        np_116186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 18), 'np', False)
        # Obtaining the member 'linspace' of a type (line 206)
        linspace_116187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 18), np_116186, 'linspace')
        # Calling linspace(args, kwargs) (line 206)
        linspace_call_result_116192 = invoke(stypy.reporting.localization.Localization(__file__, 206, 18), linspace_116187, *[int_116188, int_116189, int_116190], **kwargs_116191)
        
        # Assigning a type to the variable 'test_xs' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'test_xs', linspace_call_result_116192)
        
        # Call to assert_almost_equal(...): (line 207)
        # Processing the call arguments (line 207)
        
        # Call to P(...): (line 207)
        # Processing the call arguments (line 207)
        # Getting the type of 'test_xs' (line 207)
        test_xs_116195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 30), 'test_xs', False)
        # Processing the call keyword arguments (line 207)
        kwargs_116196 = {}
        # Getting the type of 'P' (line 207)
        P_116194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 28), 'P', False)
        # Calling P(args, kwargs) (line 207)
        P_call_result_116197 = invoke(stypy.reporting.localization.Localization(__file__, 207, 28), P_116194, *[test_xs_116195], **kwargs_116196)
        
        
        # Call to rollaxis(...): (line 208)
        # Processing the call arguments (line 208)
        
        # Call to asarray(...): (line 208)
        # Processing the call arguments (line 208)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'Pi' (line 208)
        Pi_116206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 60), 'Pi', False)
        comprehension_116207 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 40), Pi_116206)
        # Assigning a type to the variable 'p' (line 208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 40), 'p', comprehension_116207)
        
        # Call to p(...): (line 208)
        # Processing the call arguments (line 208)
        # Getting the type of 'test_xs' (line 208)
        test_xs_116203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 42), 'test_xs', False)
        # Processing the call keyword arguments (line 208)
        kwargs_116204 = {}
        # Getting the type of 'p' (line 208)
        p_116202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 40), 'p', False)
        # Calling p(args, kwargs) (line 208)
        p_call_result_116205 = invoke(stypy.reporting.localization.Localization(__file__, 208, 40), p_116202, *[test_xs_116203], **kwargs_116204)
        
        list_116208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 40), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 40), list_116208, p_call_result_116205)
        # Processing the call keyword arguments (line 208)
        kwargs_116209 = {}
        # Getting the type of 'np' (line 208)
        np_116200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 28), 'np', False)
        # Obtaining the member 'asarray' of a type (line 208)
        asarray_116201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 28), np_116200, 'asarray')
        # Calling asarray(args, kwargs) (line 208)
        asarray_call_result_116210 = invoke(stypy.reporting.localization.Localization(__file__, 208, 28), asarray_116201, *[list_116208], **kwargs_116209)
        
        int_116211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 65), 'int')
        # Processing the call keyword arguments (line 208)
        kwargs_116212 = {}
        # Getting the type of 'np' (line 208)
        np_116198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 16), 'np', False)
        # Obtaining the member 'rollaxis' of a type (line 208)
        rollaxis_116199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 208, 16), np_116198, 'rollaxis')
        # Calling rollaxis(args, kwargs) (line 208)
        rollaxis_call_result_116213 = invoke(stypy.reporting.localization.Localization(__file__, 208, 16), rollaxis_116199, *[asarray_call_result_116210, int_116211], **kwargs_116212)
        
        # Processing the call keyword arguments (line 207)
        kwargs_116214 = {}
        # Getting the type of 'assert_almost_equal' (line 207)
        assert_almost_equal_116193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 207)
        assert_almost_equal_call_result_116215 = invoke(stypy.reporting.localization.Localization(__file__, 207, 8), assert_almost_equal_116193, *[P_call_result_116197, rollaxis_call_result_116213], **kwargs_116214)
        
        
        # Call to assert_almost_equal(...): (line 209)
        # Processing the call arguments (line 209)
        
        # Call to derivatives(...): (line 209)
        # Processing the call arguments (line 209)
        # Getting the type of 'test_xs' (line 209)
        test_xs_116219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 42), 'test_xs', False)
        # Processing the call keyword arguments (line 209)
        kwargs_116220 = {}
        # Getting the type of 'P' (line 209)
        P_116217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 28), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 209)
        derivatives_116218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 28), P_116217, 'derivatives')
        # Calling derivatives(args, kwargs) (line 209)
        derivatives_call_result_116221 = invoke(stypy.reporting.localization.Localization(__file__, 209, 28), derivatives_116218, *[test_xs_116219], **kwargs_116220)
        
        
        # Call to transpose(...): (line 210)
        # Processing the call arguments (line 210)
        
        # Call to asarray(...): (line 210)
        # Processing the call arguments (line 210)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'Pi' (line 210)
        Pi_116231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 73), 'Pi', False)
        comprehension_116232 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 210, 41), Pi_116231)
        # Assigning a type to the variable 'p' (line 210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 41), 'p', comprehension_116232)
        
        # Call to derivatives(...): (line 210)
        # Processing the call arguments (line 210)
        # Getting the type of 'test_xs' (line 210)
        test_xs_116228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 55), 'test_xs', False)
        # Processing the call keyword arguments (line 210)
        kwargs_116229 = {}
        # Getting the type of 'p' (line 210)
        p_116226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 41), 'p', False)
        # Obtaining the member 'derivatives' of a type (line 210)
        derivatives_116227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 41), p_116226, 'derivatives')
        # Calling derivatives(args, kwargs) (line 210)
        derivatives_call_result_116230 = invoke(stypy.reporting.localization.Localization(__file__, 210, 41), derivatives_116227, *[test_xs_116228], **kwargs_116229)
        
        list_116233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 41), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 210, 41), list_116233, derivatives_call_result_116230)
        # Processing the call keyword arguments (line 210)
        kwargs_116234 = {}
        # Getting the type of 'np' (line 210)
        np_116224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 29), 'np', False)
        # Obtaining the member 'asarray' of a type (line 210)
        asarray_116225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 29), np_116224, 'asarray')
        # Calling asarray(args, kwargs) (line 210)
        asarray_call_result_116235 = invoke(stypy.reporting.localization.Localization(__file__, 210, 29), asarray_116225, *[list_116233], **kwargs_116234)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 211)
        tuple_116236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 211)
        # Adding element type (line 211)
        int_116237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 21), tuple_116236, int_116237)
        # Adding element type (line 211)
        int_116238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 21), tuple_116236, int_116238)
        # Adding element type (line 211)
        int_116239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 21), tuple_116236, int_116239)
        
        # Processing the call keyword arguments (line 210)
        kwargs_116240 = {}
        # Getting the type of 'np' (line 210)
        np_116222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 16), 'np', False)
        # Obtaining the member 'transpose' of a type (line 210)
        transpose_116223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 16), np_116222, 'transpose')
        # Calling transpose(args, kwargs) (line 210)
        transpose_call_result_116241 = invoke(stypy.reporting.localization.Localization(__file__, 210, 16), transpose_116223, *[asarray_call_result_116235, tuple_116236], **kwargs_116240)
        
        # Processing the call keyword arguments (line 209)
        kwargs_116242 = {}
        # Getting the type of 'assert_almost_equal' (line 209)
        assert_almost_equal_116216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 209)
        assert_almost_equal_call_result_116243 = invoke(stypy.reporting.localization.Localization(__file__, 209, 8), assert_almost_equal_116216, *[derivatives_call_result_116221, transpose_call_result_116241], **kwargs_116242)
        
        
        # ################# End of 'test_vector(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_vector' in the type store
        # Getting the type of 'stypy_return_type' (line 201)
        stypy_return_type_116244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116244)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_vector'
        return stypy_return_type_116244


    @norecursion
    def test_empty(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_empty'
        module_type_store = module_type_store.open_function_context('test_empty', 213, 4, False)
        # Assigning a type to the variable 'self' (line 214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_empty.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_empty.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_empty.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_empty.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_empty')
        TestKrogh.test_empty.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_empty.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_empty.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_empty.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_empty.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_empty.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_empty.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_empty', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_empty', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_empty(...)' code ##################

        
        # Assigning a Call to a Name (line 214):
        
        # Assigning a Call to a Name (line 214):
        
        # Call to KroghInterpolator(...): (line 214)
        # Processing the call arguments (line 214)
        # Getting the type of 'self' (line 214)
        self_116246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 214)
        xs_116247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 30), self_116246, 'xs')
        # Getting the type of 'self' (line 214)
        self_116248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 214)
        ys_116249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 38), self_116248, 'ys')
        # Processing the call keyword arguments (line 214)
        kwargs_116250 = {}
        # Getting the type of 'KroghInterpolator' (line 214)
        KroghInterpolator_116245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 214)
        KroghInterpolator_call_result_116251 = invoke(stypy.reporting.localization.Localization(__file__, 214, 12), KroghInterpolator_116245, *[xs_116247, ys_116249], **kwargs_116250)
        
        # Assigning a type to the variable 'P' (line 214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), 'P', KroghInterpolator_call_result_116251)
        
        # Call to assert_array_equal(...): (line 215)
        # Processing the call arguments (line 215)
        
        # Call to P(...): (line 215)
        # Processing the call arguments (line 215)
        
        # Obtaining an instance of the builtin type 'list' (line 215)
        list_116254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 215, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 215)
        
        # Processing the call keyword arguments (line 215)
        kwargs_116255 = {}
        # Getting the type of 'P' (line 215)
        P_116253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 27), 'P', False)
        # Calling P(args, kwargs) (line 215)
        P_call_result_116256 = invoke(stypy.reporting.localization.Localization(__file__, 215, 27), P_116253, *[list_116254], **kwargs_116255)
        
        
        # Obtaining an instance of the builtin type 'list' (line 215)
        list_116257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 215, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 215)
        
        # Processing the call keyword arguments (line 215)
        kwargs_116258 = {}
        # Getting the type of 'assert_array_equal' (line 215)
        assert_array_equal_116252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 215)
        assert_array_equal_call_result_116259 = invoke(stypy.reporting.localization.Localization(__file__, 215, 8), assert_array_equal_116252, *[P_call_result_116256, list_116257], **kwargs_116258)
        
        
        # ################# End of 'test_empty(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_empty' in the type store
        # Getting the type of 'stypy_return_type' (line 213)
        stypy_return_type_116260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116260)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_empty'
        return stypy_return_type_116260


    @norecursion
    def test_shapes_scalarvalue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shapes_scalarvalue'
        module_type_store = module_type_store.open_function_context('test_shapes_scalarvalue', 217, 4, False)
        # Assigning a type to the variable 'self' (line 218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_shapes_scalarvalue')
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_shapes_scalarvalue.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_shapes_scalarvalue', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shapes_scalarvalue', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shapes_scalarvalue(...)' code ##################

        
        # Assigning a Call to a Name (line 218):
        
        # Assigning a Call to a Name (line 218):
        
        # Call to KroghInterpolator(...): (line 218)
        # Processing the call arguments (line 218)
        # Getting the type of 'self' (line 218)
        self_116262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 218)
        xs_116263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 30), self_116262, 'xs')
        # Getting the type of 'self' (line 218)
        self_116264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 218)
        ys_116265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 38), self_116264, 'ys')
        # Processing the call keyword arguments (line 218)
        kwargs_116266 = {}
        # Getting the type of 'KroghInterpolator' (line 218)
        KroghInterpolator_116261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 218)
        KroghInterpolator_call_result_116267 = invoke(stypy.reporting.localization.Localization(__file__, 218, 12), KroghInterpolator_116261, *[xs_116263, ys_116265], **kwargs_116266)
        
        # Assigning a type to the variable 'P' (line 218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 8), 'P', KroghInterpolator_call_result_116267)
        
        # Call to assert_array_equal(...): (line 219)
        # Processing the call arguments (line 219)
        
        # Call to shape(...): (line 219)
        # Processing the call arguments (line 219)
        
        # Call to P(...): (line 219)
        # Processing the call arguments (line 219)
        int_116272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 38), 'int')
        # Processing the call keyword arguments (line 219)
        kwargs_116273 = {}
        # Getting the type of 'P' (line 219)
        P_116271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 36), 'P', False)
        # Calling P(args, kwargs) (line 219)
        P_call_result_116274 = invoke(stypy.reporting.localization.Localization(__file__, 219, 36), P_116271, *[int_116272], **kwargs_116273)
        
        # Processing the call keyword arguments (line 219)
        kwargs_116275 = {}
        # Getting the type of 'np' (line 219)
        np_116269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 219)
        shape_116270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 27), np_116269, 'shape')
        # Calling shape(args, kwargs) (line 219)
        shape_call_result_116276 = invoke(stypy.reporting.localization.Localization(__file__, 219, 27), shape_116270, *[P_call_result_116274], **kwargs_116275)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 219)
        tuple_116277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 219)
        
        # Processing the call keyword arguments (line 219)
        kwargs_116278 = {}
        # Getting the type of 'assert_array_equal' (line 219)
        assert_array_equal_116268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 219)
        assert_array_equal_call_result_116279 = invoke(stypy.reporting.localization.Localization(__file__, 219, 8), assert_array_equal_116268, *[shape_call_result_116276, tuple_116277], **kwargs_116278)
        
        
        # Call to assert_array_equal(...): (line 220)
        # Processing the call arguments (line 220)
        
        # Call to shape(...): (line 220)
        # Processing the call arguments (line 220)
        
        # Call to P(...): (line 220)
        # Processing the call arguments (line 220)
        
        # Call to array(...): (line 220)
        # Processing the call arguments (line 220)
        int_116286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 47), 'int')
        # Processing the call keyword arguments (line 220)
        kwargs_116287 = {}
        # Getting the type of 'np' (line 220)
        np_116284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 38), 'np', False)
        # Obtaining the member 'array' of a type (line 220)
        array_116285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 38), np_116284, 'array')
        # Calling array(args, kwargs) (line 220)
        array_call_result_116288 = invoke(stypy.reporting.localization.Localization(__file__, 220, 38), array_116285, *[int_116286], **kwargs_116287)
        
        # Processing the call keyword arguments (line 220)
        kwargs_116289 = {}
        # Getting the type of 'P' (line 220)
        P_116283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 36), 'P', False)
        # Calling P(args, kwargs) (line 220)
        P_call_result_116290 = invoke(stypy.reporting.localization.Localization(__file__, 220, 36), P_116283, *[array_call_result_116288], **kwargs_116289)
        
        # Processing the call keyword arguments (line 220)
        kwargs_116291 = {}
        # Getting the type of 'np' (line 220)
        np_116281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 220)
        shape_116282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 27), np_116281, 'shape')
        # Calling shape(args, kwargs) (line 220)
        shape_call_result_116292 = invoke(stypy.reporting.localization.Localization(__file__, 220, 27), shape_116282, *[P_call_result_116290], **kwargs_116291)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 220)
        tuple_116293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 220)
        
        # Processing the call keyword arguments (line 220)
        kwargs_116294 = {}
        # Getting the type of 'assert_array_equal' (line 220)
        assert_array_equal_116280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 220)
        assert_array_equal_call_result_116295 = invoke(stypy.reporting.localization.Localization(__file__, 220, 8), assert_array_equal_116280, *[shape_call_result_116292, tuple_116293], **kwargs_116294)
        
        
        # Call to assert_array_equal(...): (line 221)
        # Processing the call arguments (line 221)
        
        # Call to shape(...): (line 221)
        # Processing the call arguments (line 221)
        
        # Call to P(...): (line 221)
        # Processing the call arguments (line 221)
        
        # Obtaining an instance of the builtin type 'list' (line 221)
        list_116300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 221)
        # Adding element type (line 221)
        int_116301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 38), list_116300, int_116301)
        
        # Processing the call keyword arguments (line 221)
        kwargs_116302 = {}
        # Getting the type of 'P' (line 221)
        P_116299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 36), 'P', False)
        # Calling P(args, kwargs) (line 221)
        P_call_result_116303 = invoke(stypy.reporting.localization.Localization(__file__, 221, 36), P_116299, *[list_116300], **kwargs_116302)
        
        # Processing the call keyword arguments (line 221)
        kwargs_116304 = {}
        # Getting the type of 'np' (line 221)
        np_116297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 221)
        shape_116298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 27), np_116297, 'shape')
        # Calling shape(args, kwargs) (line 221)
        shape_call_result_116305 = invoke(stypy.reporting.localization.Localization(__file__, 221, 27), shape_116298, *[P_call_result_116303], **kwargs_116304)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 221)
        tuple_116306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 46), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 221)
        # Adding element type (line 221)
        int_116307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 46), tuple_116306, int_116307)
        
        # Processing the call keyword arguments (line 221)
        kwargs_116308 = {}
        # Getting the type of 'assert_array_equal' (line 221)
        assert_array_equal_116296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 221)
        assert_array_equal_call_result_116309 = invoke(stypy.reporting.localization.Localization(__file__, 221, 8), assert_array_equal_116296, *[shape_call_result_116305, tuple_116306], **kwargs_116308)
        
        
        # Call to assert_array_equal(...): (line 222)
        # Processing the call arguments (line 222)
        
        # Call to shape(...): (line 222)
        # Processing the call arguments (line 222)
        
        # Call to P(...): (line 222)
        # Processing the call arguments (line 222)
        
        # Obtaining an instance of the builtin type 'list' (line 222)
        list_116314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 222)
        # Adding element type (line 222)
        int_116315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 222, 38), list_116314, int_116315)
        # Adding element type (line 222)
        int_116316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 222, 38), list_116314, int_116316)
        
        # Processing the call keyword arguments (line 222)
        kwargs_116317 = {}
        # Getting the type of 'P' (line 222)
        P_116313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 36), 'P', False)
        # Calling P(args, kwargs) (line 222)
        P_call_result_116318 = invoke(stypy.reporting.localization.Localization(__file__, 222, 36), P_116313, *[list_116314], **kwargs_116317)
        
        # Processing the call keyword arguments (line 222)
        kwargs_116319 = {}
        # Getting the type of 'np' (line 222)
        np_116311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 222)
        shape_116312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 27), np_116311, 'shape')
        # Calling shape(args, kwargs) (line 222)
        shape_call_result_116320 = invoke(stypy.reporting.localization.Localization(__file__, 222, 27), shape_116312, *[P_call_result_116318], **kwargs_116319)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 222)
        tuple_116321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 222)
        # Adding element type (line 222)
        int_116322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 222, 48), tuple_116321, int_116322)
        
        # Processing the call keyword arguments (line 222)
        kwargs_116323 = {}
        # Getting the type of 'assert_array_equal' (line 222)
        assert_array_equal_116310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 222)
        assert_array_equal_call_result_116324 = invoke(stypy.reporting.localization.Localization(__file__, 222, 8), assert_array_equal_116310, *[shape_call_result_116320, tuple_116321], **kwargs_116323)
        
        
        # ################# End of 'test_shapes_scalarvalue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shapes_scalarvalue' in the type store
        # Getting the type of 'stypy_return_type' (line 217)
        stypy_return_type_116325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116325)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shapes_scalarvalue'
        return stypy_return_type_116325


    @norecursion
    def test_shapes_scalarvalue_derivative(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shapes_scalarvalue_derivative'
        module_type_store = module_type_store.open_function_context('test_shapes_scalarvalue_derivative', 224, 4, False)
        # Assigning a type to the variable 'self' (line 225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_shapes_scalarvalue_derivative')
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_shapes_scalarvalue_derivative.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_shapes_scalarvalue_derivative', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shapes_scalarvalue_derivative', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shapes_scalarvalue_derivative(...)' code ##################

        
        # Assigning a Call to a Name (line 225):
        
        # Assigning a Call to a Name (line 225):
        
        # Call to KroghInterpolator(...): (line 225)
        # Processing the call arguments (line 225)
        # Getting the type of 'self' (line 225)
        self_116327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 225)
        xs_116328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 30), self_116327, 'xs')
        # Getting the type of 'self' (line 225)
        self_116329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 38), 'self', False)
        # Obtaining the member 'ys' of a type (line 225)
        ys_116330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 38), self_116329, 'ys')
        # Processing the call keyword arguments (line 225)
        kwargs_116331 = {}
        # Getting the type of 'KroghInterpolator' (line 225)
        KroghInterpolator_116326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 225)
        KroghInterpolator_call_result_116332 = invoke(stypy.reporting.localization.Localization(__file__, 225, 12), KroghInterpolator_116326, *[xs_116328, ys_116330], **kwargs_116331)
        
        # Assigning a type to the variable 'P' (line 225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 8), 'P', KroghInterpolator_call_result_116332)
        
        # Assigning a Attribute to a Name (line 226):
        
        # Assigning a Attribute to a Name (line 226):
        # Getting the type of 'P' (line 226)
        P_116333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 12), 'P')
        # Obtaining the member 'n' of a type (line 226)
        n_116334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 12), P_116333, 'n')
        # Assigning a type to the variable 'n' (line 226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 8), 'n', n_116334)
        
        # Call to assert_array_equal(...): (line 227)
        # Processing the call arguments (line 227)
        
        # Call to shape(...): (line 227)
        # Processing the call arguments (line 227)
        
        # Call to derivatives(...): (line 227)
        # Processing the call arguments (line 227)
        int_116340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 50), 'int')
        # Processing the call keyword arguments (line 227)
        kwargs_116341 = {}
        # Getting the type of 'P' (line 227)
        P_116338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 36), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 227)
        derivatives_116339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 36), P_116338, 'derivatives')
        # Calling derivatives(args, kwargs) (line 227)
        derivatives_call_result_116342 = invoke(stypy.reporting.localization.Localization(__file__, 227, 36), derivatives_116339, *[int_116340], **kwargs_116341)
        
        # Processing the call keyword arguments (line 227)
        kwargs_116343 = {}
        # Getting the type of 'np' (line 227)
        np_116336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 227)
        shape_116337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 27), np_116336, 'shape')
        # Calling shape(args, kwargs) (line 227)
        shape_call_result_116344 = invoke(stypy.reporting.localization.Localization(__file__, 227, 27), shape_116337, *[derivatives_call_result_116342], **kwargs_116343)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 227)
        tuple_116345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 227)
        # Adding element type (line 227)
        # Getting the type of 'n' (line 227)
        n_116346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 56), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 56), tuple_116345, n_116346)
        
        # Processing the call keyword arguments (line 227)
        kwargs_116347 = {}
        # Getting the type of 'assert_array_equal' (line 227)
        assert_array_equal_116335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 227)
        assert_array_equal_call_result_116348 = invoke(stypy.reporting.localization.Localization(__file__, 227, 8), assert_array_equal_116335, *[shape_call_result_116344, tuple_116345], **kwargs_116347)
        
        
        # Call to assert_array_equal(...): (line 228)
        # Processing the call arguments (line 228)
        
        # Call to shape(...): (line 228)
        # Processing the call arguments (line 228)
        
        # Call to derivatives(...): (line 228)
        # Processing the call arguments (line 228)
        
        # Call to array(...): (line 228)
        # Processing the call arguments (line 228)
        int_116356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 59), 'int')
        # Processing the call keyword arguments (line 228)
        kwargs_116357 = {}
        # Getting the type of 'np' (line 228)
        np_116354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 50), 'np', False)
        # Obtaining the member 'array' of a type (line 228)
        array_116355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 50), np_116354, 'array')
        # Calling array(args, kwargs) (line 228)
        array_call_result_116358 = invoke(stypy.reporting.localization.Localization(__file__, 228, 50), array_116355, *[int_116356], **kwargs_116357)
        
        # Processing the call keyword arguments (line 228)
        kwargs_116359 = {}
        # Getting the type of 'P' (line 228)
        P_116352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 36), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 228)
        derivatives_116353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 36), P_116352, 'derivatives')
        # Calling derivatives(args, kwargs) (line 228)
        derivatives_call_result_116360 = invoke(stypy.reporting.localization.Localization(__file__, 228, 36), derivatives_116353, *[array_call_result_116358], **kwargs_116359)
        
        # Processing the call keyword arguments (line 228)
        kwargs_116361 = {}
        # Getting the type of 'np' (line 228)
        np_116350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 228)
        shape_116351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 27), np_116350, 'shape')
        # Calling shape(args, kwargs) (line 228)
        shape_call_result_116362 = invoke(stypy.reporting.localization.Localization(__file__, 228, 27), shape_116351, *[derivatives_call_result_116360], **kwargs_116361)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 228)
        tuple_116363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 66), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 228)
        # Adding element type (line 228)
        # Getting the type of 'n' (line 228)
        n_116364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 66), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 228, 66), tuple_116363, n_116364)
        
        # Processing the call keyword arguments (line 228)
        kwargs_116365 = {}
        # Getting the type of 'assert_array_equal' (line 228)
        assert_array_equal_116349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 228)
        assert_array_equal_call_result_116366 = invoke(stypy.reporting.localization.Localization(__file__, 228, 8), assert_array_equal_116349, *[shape_call_result_116362, tuple_116363], **kwargs_116365)
        
        
        # Call to assert_array_equal(...): (line 229)
        # Processing the call arguments (line 229)
        
        # Call to shape(...): (line 229)
        # Processing the call arguments (line 229)
        
        # Call to derivatives(...): (line 229)
        # Processing the call arguments (line 229)
        
        # Obtaining an instance of the builtin type 'list' (line 229)
        list_116372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 229)
        # Adding element type (line 229)
        int_116373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 229, 50), list_116372, int_116373)
        
        # Processing the call keyword arguments (line 229)
        kwargs_116374 = {}
        # Getting the type of 'P' (line 229)
        P_116370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 36), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 229)
        derivatives_116371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 36), P_116370, 'derivatives')
        # Calling derivatives(args, kwargs) (line 229)
        derivatives_call_result_116375 = invoke(stypy.reporting.localization.Localization(__file__, 229, 36), derivatives_116371, *[list_116372], **kwargs_116374)
        
        # Processing the call keyword arguments (line 229)
        kwargs_116376 = {}
        # Getting the type of 'np' (line 229)
        np_116368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 229)
        shape_116369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 27), np_116368, 'shape')
        # Calling shape(args, kwargs) (line 229)
        shape_call_result_116377 = invoke(stypy.reporting.localization.Localization(__file__, 229, 27), shape_116369, *[derivatives_call_result_116375], **kwargs_116376)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 229)
        tuple_116378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 58), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 229)
        # Adding element type (line 229)
        # Getting the type of 'n' (line 229)
        n_116379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 58), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 229, 58), tuple_116378, n_116379)
        # Adding element type (line 229)
        int_116380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 229, 58), tuple_116378, int_116380)
        
        # Processing the call keyword arguments (line 229)
        kwargs_116381 = {}
        # Getting the type of 'assert_array_equal' (line 229)
        assert_array_equal_116367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 229)
        assert_array_equal_call_result_116382 = invoke(stypy.reporting.localization.Localization(__file__, 229, 8), assert_array_equal_116367, *[shape_call_result_116377, tuple_116378], **kwargs_116381)
        
        
        # Call to assert_array_equal(...): (line 230)
        # Processing the call arguments (line 230)
        
        # Call to shape(...): (line 230)
        # Processing the call arguments (line 230)
        
        # Call to derivatives(...): (line 230)
        # Processing the call arguments (line 230)
        
        # Obtaining an instance of the builtin type 'list' (line 230)
        list_116388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 230)
        # Adding element type (line 230)
        int_116389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 50), list_116388, int_116389)
        # Adding element type (line 230)
        int_116390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 50), list_116388, int_116390)
        
        # Processing the call keyword arguments (line 230)
        kwargs_116391 = {}
        # Getting the type of 'P' (line 230)
        P_116386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 36), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 230)
        derivatives_116387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 36), P_116386, 'derivatives')
        # Calling derivatives(args, kwargs) (line 230)
        derivatives_call_result_116392 = invoke(stypy.reporting.localization.Localization(__file__, 230, 36), derivatives_116387, *[list_116388], **kwargs_116391)
        
        # Processing the call keyword arguments (line 230)
        kwargs_116393 = {}
        # Getting the type of 'np' (line 230)
        np_116384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 230)
        shape_116385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 27), np_116384, 'shape')
        # Calling shape(args, kwargs) (line 230)
        shape_call_result_116394 = invoke(stypy.reporting.localization.Localization(__file__, 230, 27), shape_116385, *[derivatives_call_result_116392], **kwargs_116393)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 230)
        tuple_116395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 230)
        # Adding element type (line 230)
        # Getting the type of 'n' (line 230)
        n_116396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 60), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 60), tuple_116395, n_116396)
        # Adding element type (line 230)
        int_116397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 60), tuple_116395, int_116397)
        
        # Processing the call keyword arguments (line 230)
        kwargs_116398 = {}
        # Getting the type of 'assert_array_equal' (line 230)
        assert_array_equal_116383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 230)
        assert_array_equal_call_result_116399 = invoke(stypy.reporting.localization.Localization(__file__, 230, 8), assert_array_equal_116383, *[shape_call_result_116394, tuple_116395], **kwargs_116398)
        
        
        # ################# End of 'test_shapes_scalarvalue_derivative(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shapes_scalarvalue_derivative' in the type store
        # Getting the type of 'stypy_return_type' (line 224)
        stypy_return_type_116400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116400)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shapes_scalarvalue_derivative'
        return stypy_return_type_116400


    @norecursion
    def test_shapes_vectorvalue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shapes_vectorvalue'
        module_type_store = module_type_store.open_function_context('test_shapes_vectorvalue', 232, 4, False)
        # Assigning a type to the variable 'self' (line 233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_shapes_vectorvalue')
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_shapes_vectorvalue.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_shapes_vectorvalue', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shapes_vectorvalue', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shapes_vectorvalue(...)' code ##################

        
        # Assigning a Call to a Name (line 233):
        
        # Assigning a Call to a Name (line 233):
        
        # Call to KroghInterpolator(...): (line 233)
        # Processing the call arguments (line 233)
        # Getting the type of 'self' (line 233)
        self_116402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 233)
        xs_116403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 233, 30), self_116402, 'xs')
        
        # Call to outer(...): (line 233)
        # Processing the call arguments (line 233)
        # Getting the type of 'self' (line 233)
        self_116406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 47), 'self', False)
        # Obtaining the member 'ys' of a type (line 233)
        ys_116407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 233, 47), self_116406, 'ys')
        
        # Call to arange(...): (line 233)
        # Processing the call arguments (line 233)
        int_116410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 65), 'int')
        # Processing the call keyword arguments (line 233)
        kwargs_116411 = {}
        # Getting the type of 'np' (line 233)
        np_116408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 55), 'np', False)
        # Obtaining the member 'arange' of a type (line 233)
        arange_116409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 233, 55), np_116408, 'arange')
        # Calling arange(args, kwargs) (line 233)
        arange_call_result_116412 = invoke(stypy.reporting.localization.Localization(__file__, 233, 55), arange_116409, *[int_116410], **kwargs_116411)
        
        # Processing the call keyword arguments (line 233)
        kwargs_116413 = {}
        # Getting the type of 'np' (line 233)
        np_116404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 38), 'np', False)
        # Obtaining the member 'outer' of a type (line 233)
        outer_116405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 233, 38), np_116404, 'outer')
        # Calling outer(args, kwargs) (line 233)
        outer_call_result_116414 = invoke(stypy.reporting.localization.Localization(__file__, 233, 38), outer_116405, *[ys_116407, arange_call_result_116412], **kwargs_116413)
        
        # Processing the call keyword arguments (line 233)
        kwargs_116415 = {}
        # Getting the type of 'KroghInterpolator' (line 233)
        KroghInterpolator_116401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 233)
        KroghInterpolator_call_result_116416 = invoke(stypy.reporting.localization.Localization(__file__, 233, 12), KroghInterpolator_116401, *[xs_116403, outer_call_result_116414], **kwargs_116415)
        
        # Assigning a type to the variable 'P' (line 233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'P', KroghInterpolator_call_result_116416)
        
        # Call to assert_array_equal(...): (line 234)
        # Processing the call arguments (line 234)
        
        # Call to shape(...): (line 234)
        # Processing the call arguments (line 234)
        
        # Call to P(...): (line 234)
        # Processing the call arguments (line 234)
        int_116421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 38), 'int')
        # Processing the call keyword arguments (line 234)
        kwargs_116422 = {}
        # Getting the type of 'P' (line 234)
        P_116420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 36), 'P', False)
        # Calling P(args, kwargs) (line 234)
        P_call_result_116423 = invoke(stypy.reporting.localization.Localization(__file__, 234, 36), P_116420, *[int_116421], **kwargs_116422)
        
        # Processing the call keyword arguments (line 234)
        kwargs_116424 = {}
        # Getting the type of 'np' (line 234)
        np_116418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 234)
        shape_116419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 27), np_116418, 'shape')
        # Calling shape(args, kwargs) (line 234)
        shape_call_result_116425 = invoke(stypy.reporting.localization.Localization(__file__, 234, 27), shape_116419, *[P_call_result_116423], **kwargs_116424)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 234)
        tuple_116426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 234)
        # Adding element type (line 234)
        int_116427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 234, 44), tuple_116426, int_116427)
        
        # Processing the call keyword arguments (line 234)
        kwargs_116428 = {}
        # Getting the type of 'assert_array_equal' (line 234)
        assert_array_equal_116417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 234)
        assert_array_equal_call_result_116429 = invoke(stypy.reporting.localization.Localization(__file__, 234, 8), assert_array_equal_116417, *[shape_call_result_116425, tuple_116426], **kwargs_116428)
        
        
        # Call to assert_array_equal(...): (line 235)
        # Processing the call arguments (line 235)
        
        # Call to shape(...): (line 235)
        # Processing the call arguments (line 235)
        
        # Call to P(...): (line 235)
        # Processing the call arguments (line 235)
        
        # Obtaining an instance of the builtin type 'list' (line 235)
        list_116434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 235)
        # Adding element type (line 235)
        int_116435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 235, 38), list_116434, int_116435)
        
        # Processing the call keyword arguments (line 235)
        kwargs_116436 = {}
        # Getting the type of 'P' (line 235)
        P_116433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 36), 'P', False)
        # Calling P(args, kwargs) (line 235)
        P_call_result_116437 = invoke(stypy.reporting.localization.Localization(__file__, 235, 36), P_116433, *[list_116434], **kwargs_116436)
        
        # Processing the call keyword arguments (line 235)
        kwargs_116438 = {}
        # Getting the type of 'np' (line 235)
        np_116431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 235)
        shape_116432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 27), np_116431, 'shape')
        # Calling shape(args, kwargs) (line 235)
        shape_call_result_116439 = invoke(stypy.reporting.localization.Localization(__file__, 235, 27), shape_116432, *[P_call_result_116437], **kwargs_116438)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 235)
        tuple_116440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 46), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 235)
        # Adding element type (line 235)
        int_116441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 235, 46), tuple_116440, int_116441)
        # Adding element type (line 235)
        int_116442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 235, 46), tuple_116440, int_116442)
        
        # Processing the call keyword arguments (line 235)
        kwargs_116443 = {}
        # Getting the type of 'assert_array_equal' (line 235)
        assert_array_equal_116430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 235)
        assert_array_equal_call_result_116444 = invoke(stypy.reporting.localization.Localization(__file__, 235, 8), assert_array_equal_116430, *[shape_call_result_116439, tuple_116440], **kwargs_116443)
        
        
        # Call to assert_array_equal(...): (line 236)
        # Processing the call arguments (line 236)
        
        # Call to shape(...): (line 236)
        # Processing the call arguments (line 236)
        
        # Call to P(...): (line 236)
        # Processing the call arguments (line 236)
        
        # Obtaining an instance of the builtin type 'list' (line 236)
        list_116449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 236)
        # Adding element type (line 236)
        int_116450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 38), list_116449, int_116450)
        # Adding element type (line 236)
        int_116451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 38), list_116449, int_116451)
        
        # Processing the call keyword arguments (line 236)
        kwargs_116452 = {}
        # Getting the type of 'P' (line 236)
        P_116448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 36), 'P', False)
        # Calling P(args, kwargs) (line 236)
        P_call_result_116453 = invoke(stypy.reporting.localization.Localization(__file__, 236, 36), P_116448, *[list_116449], **kwargs_116452)
        
        # Processing the call keyword arguments (line 236)
        kwargs_116454 = {}
        # Getting the type of 'np' (line 236)
        np_116446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 236)
        shape_116447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 27), np_116446, 'shape')
        # Calling shape(args, kwargs) (line 236)
        shape_call_result_116455 = invoke(stypy.reporting.localization.Localization(__file__, 236, 27), shape_116447, *[P_call_result_116453], **kwargs_116454)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 236)
        tuple_116456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 236)
        # Adding element type (line 236)
        int_116457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 48), tuple_116456, int_116457)
        # Adding element type (line 236)
        int_116458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 236, 48), tuple_116456, int_116458)
        
        # Processing the call keyword arguments (line 236)
        kwargs_116459 = {}
        # Getting the type of 'assert_array_equal' (line 236)
        assert_array_equal_116445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 236)
        assert_array_equal_call_result_116460 = invoke(stypy.reporting.localization.Localization(__file__, 236, 8), assert_array_equal_116445, *[shape_call_result_116455, tuple_116456], **kwargs_116459)
        
        
        # ################# End of 'test_shapes_vectorvalue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shapes_vectorvalue' in the type store
        # Getting the type of 'stypy_return_type' (line 232)
        stypy_return_type_116461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116461)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shapes_vectorvalue'
        return stypy_return_type_116461


    @norecursion
    def test_shapes_1d_vectorvalue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shapes_1d_vectorvalue'
        module_type_store = module_type_store.open_function_context('test_shapes_1d_vectorvalue', 238, 4, False)
        # Assigning a type to the variable 'self' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_shapes_1d_vectorvalue')
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_shapes_1d_vectorvalue', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shapes_1d_vectorvalue', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shapes_1d_vectorvalue(...)' code ##################

        
        # Assigning a Call to a Name (line 239):
        
        # Assigning a Call to a Name (line 239):
        
        # Call to KroghInterpolator(...): (line 239)
        # Processing the call arguments (line 239)
        # Getting the type of 'self' (line 239)
        self_116463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 239)
        xs_116464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 30), self_116463, 'xs')
        
        # Call to outer(...): (line 239)
        # Processing the call arguments (line 239)
        # Getting the type of 'self' (line 239)
        self_116467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 47), 'self', False)
        # Obtaining the member 'ys' of a type (line 239)
        ys_116468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 47), self_116467, 'ys')
        
        # Obtaining an instance of the builtin type 'list' (line 239)
        list_116469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 239, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 239)
        # Adding element type (line 239)
        int_116470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 239, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 239, 55), list_116469, int_116470)
        
        # Processing the call keyword arguments (line 239)
        kwargs_116471 = {}
        # Getting the type of 'np' (line 239)
        np_116465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 38), 'np', False)
        # Obtaining the member 'outer' of a type (line 239)
        outer_116466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 38), np_116465, 'outer')
        # Calling outer(args, kwargs) (line 239)
        outer_call_result_116472 = invoke(stypy.reporting.localization.Localization(__file__, 239, 38), outer_116466, *[ys_116468, list_116469], **kwargs_116471)
        
        # Processing the call keyword arguments (line 239)
        kwargs_116473 = {}
        # Getting the type of 'KroghInterpolator' (line 239)
        KroghInterpolator_116462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 239)
        KroghInterpolator_call_result_116474 = invoke(stypy.reporting.localization.Localization(__file__, 239, 12), KroghInterpolator_116462, *[xs_116464, outer_call_result_116472], **kwargs_116473)
        
        # Assigning a type to the variable 'P' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'P', KroghInterpolator_call_result_116474)
        
        # Call to assert_array_equal(...): (line 240)
        # Processing the call arguments (line 240)
        
        # Call to shape(...): (line 240)
        # Processing the call arguments (line 240)
        
        # Call to P(...): (line 240)
        # Processing the call arguments (line 240)
        int_116479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 38), 'int')
        # Processing the call keyword arguments (line 240)
        kwargs_116480 = {}
        # Getting the type of 'P' (line 240)
        P_116478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 36), 'P', False)
        # Calling P(args, kwargs) (line 240)
        P_call_result_116481 = invoke(stypy.reporting.localization.Localization(__file__, 240, 36), P_116478, *[int_116479], **kwargs_116480)
        
        # Processing the call keyword arguments (line 240)
        kwargs_116482 = {}
        # Getting the type of 'np' (line 240)
        np_116476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 240)
        shape_116477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 27), np_116476, 'shape')
        # Calling shape(args, kwargs) (line 240)
        shape_call_result_116483 = invoke(stypy.reporting.localization.Localization(__file__, 240, 27), shape_116477, *[P_call_result_116481], **kwargs_116482)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 240)
        tuple_116484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 240)
        # Adding element type (line 240)
        int_116485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 240, 44), tuple_116484, int_116485)
        
        # Processing the call keyword arguments (line 240)
        kwargs_116486 = {}
        # Getting the type of 'assert_array_equal' (line 240)
        assert_array_equal_116475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 240)
        assert_array_equal_call_result_116487 = invoke(stypy.reporting.localization.Localization(__file__, 240, 8), assert_array_equal_116475, *[shape_call_result_116483, tuple_116484], **kwargs_116486)
        
        
        # Call to assert_array_equal(...): (line 241)
        # Processing the call arguments (line 241)
        
        # Call to shape(...): (line 241)
        # Processing the call arguments (line 241)
        
        # Call to P(...): (line 241)
        # Processing the call arguments (line 241)
        
        # Obtaining an instance of the builtin type 'list' (line 241)
        list_116492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 241)
        # Adding element type (line 241)
        int_116493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 241, 38), list_116492, int_116493)
        
        # Processing the call keyword arguments (line 241)
        kwargs_116494 = {}
        # Getting the type of 'P' (line 241)
        P_116491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 36), 'P', False)
        # Calling P(args, kwargs) (line 241)
        P_call_result_116495 = invoke(stypy.reporting.localization.Localization(__file__, 241, 36), P_116491, *[list_116492], **kwargs_116494)
        
        # Processing the call keyword arguments (line 241)
        kwargs_116496 = {}
        # Getting the type of 'np' (line 241)
        np_116489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 241)
        shape_116490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 27), np_116489, 'shape')
        # Calling shape(args, kwargs) (line 241)
        shape_call_result_116497 = invoke(stypy.reporting.localization.Localization(__file__, 241, 27), shape_116490, *[P_call_result_116495], **kwargs_116496)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 241)
        tuple_116498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 46), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 241)
        # Adding element type (line 241)
        int_116499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 241, 46), tuple_116498, int_116499)
        # Adding element type (line 241)
        int_116500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 241, 46), tuple_116498, int_116500)
        
        # Processing the call keyword arguments (line 241)
        kwargs_116501 = {}
        # Getting the type of 'assert_array_equal' (line 241)
        assert_array_equal_116488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 241)
        assert_array_equal_call_result_116502 = invoke(stypy.reporting.localization.Localization(__file__, 241, 8), assert_array_equal_116488, *[shape_call_result_116497, tuple_116498], **kwargs_116501)
        
        
        # Call to assert_array_equal(...): (line 242)
        # Processing the call arguments (line 242)
        
        # Call to shape(...): (line 242)
        # Processing the call arguments (line 242)
        
        # Call to P(...): (line 242)
        # Processing the call arguments (line 242)
        
        # Obtaining an instance of the builtin type 'list' (line 242)
        list_116507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 242)
        # Adding element type (line 242)
        int_116508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 38), list_116507, int_116508)
        # Adding element type (line 242)
        int_116509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 38), list_116507, int_116509)
        
        # Processing the call keyword arguments (line 242)
        kwargs_116510 = {}
        # Getting the type of 'P' (line 242)
        P_116506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 36), 'P', False)
        # Calling P(args, kwargs) (line 242)
        P_call_result_116511 = invoke(stypy.reporting.localization.Localization(__file__, 242, 36), P_116506, *[list_116507], **kwargs_116510)
        
        # Processing the call keyword arguments (line 242)
        kwargs_116512 = {}
        # Getting the type of 'np' (line 242)
        np_116504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 242)
        shape_116505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 27), np_116504, 'shape')
        # Calling shape(args, kwargs) (line 242)
        shape_call_result_116513 = invoke(stypy.reporting.localization.Localization(__file__, 242, 27), shape_116505, *[P_call_result_116511], **kwargs_116512)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 242)
        tuple_116514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 242)
        # Adding element type (line 242)
        int_116515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 48), tuple_116514, int_116515)
        # Adding element type (line 242)
        int_116516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 48), tuple_116514, int_116516)
        
        # Processing the call keyword arguments (line 242)
        kwargs_116517 = {}
        # Getting the type of 'assert_array_equal' (line 242)
        assert_array_equal_116503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 242)
        assert_array_equal_call_result_116518 = invoke(stypy.reporting.localization.Localization(__file__, 242, 8), assert_array_equal_116503, *[shape_call_result_116513, tuple_116514], **kwargs_116517)
        
        
        # ################# End of 'test_shapes_1d_vectorvalue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shapes_1d_vectorvalue' in the type store
        # Getting the type of 'stypy_return_type' (line 238)
        stypy_return_type_116519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116519)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shapes_1d_vectorvalue'
        return stypy_return_type_116519


    @norecursion
    def test_shapes_vectorvalue_derivative(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shapes_vectorvalue_derivative'
        module_type_store = module_type_store.open_function_context('test_shapes_vectorvalue_derivative', 244, 4, False)
        # Assigning a type to the variable 'self' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_shapes_vectorvalue_derivative')
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_shapes_vectorvalue_derivative.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_shapes_vectorvalue_derivative', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shapes_vectorvalue_derivative', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shapes_vectorvalue_derivative(...)' code ##################

        
        # Assigning a Call to a Name (line 245):
        
        # Assigning a Call to a Name (line 245):
        
        # Call to KroghInterpolator(...): (line 245)
        # Processing the call arguments (line 245)
        # Getting the type of 'self' (line 245)
        self_116521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 245)
        xs_116522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 30), self_116521, 'xs')
        
        # Call to outer(...): (line 245)
        # Processing the call arguments (line 245)
        # Getting the type of 'self' (line 245)
        self_116525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 47), 'self', False)
        # Obtaining the member 'ys' of a type (line 245)
        ys_116526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 47), self_116525, 'ys')
        
        # Call to arange(...): (line 245)
        # Processing the call arguments (line 245)
        int_116529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 65), 'int')
        # Processing the call keyword arguments (line 245)
        kwargs_116530 = {}
        # Getting the type of 'np' (line 245)
        np_116527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 55), 'np', False)
        # Obtaining the member 'arange' of a type (line 245)
        arange_116528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 55), np_116527, 'arange')
        # Calling arange(args, kwargs) (line 245)
        arange_call_result_116531 = invoke(stypy.reporting.localization.Localization(__file__, 245, 55), arange_116528, *[int_116529], **kwargs_116530)
        
        # Processing the call keyword arguments (line 245)
        kwargs_116532 = {}
        # Getting the type of 'np' (line 245)
        np_116523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 38), 'np', False)
        # Obtaining the member 'outer' of a type (line 245)
        outer_116524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 38), np_116523, 'outer')
        # Calling outer(args, kwargs) (line 245)
        outer_call_result_116533 = invoke(stypy.reporting.localization.Localization(__file__, 245, 38), outer_116524, *[ys_116526, arange_call_result_116531], **kwargs_116532)
        
        # Processing the call keyword arguments (line 245)
        kwargs_116534 = {}
        # Getting the type of 'KroghInterpolator' (line 245)
        KroghInterpolator_116520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 245)
        KroghInterpolator_call_result_116535 = invoke(stypy.reporting.localization.Localization(__file__, 245, 12), KroghInterpolator_116520, *[xs_116522, outer_call_result_116533], **kwargs_116534)
        
        # Assigning a type to the variable 'P' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'P', KroghInterpolator_call_result_116535)
        
        # Assigning a Attribute to a Name (line 246):
        
        # Assigning a Attribute to a Name (line 246):
        # Getting the type of 'P' (line 246)
        P_116536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'P')
        # Obtaining the member 'n' of a type (line 246)
        n_116537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 12), P_116536, 'n')
        # Assigning a type to the variable 'n' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 8), 'n', n_116537)
        
        # Call to assert_array_equal(...): (line 247)
        # Processing the call arguments (line 247)
        
        # Call to shape(...): (line 247)
        # Processing the call arguments (line 247)
        
        # Call to derivatives(...): (line 247)
        # Processing the call arguments (line 247)
        int_116543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 50), 'int')
        # Processing the call keyword arguments (line 247)
        kwargs_116544 = {}
        # Getting the type of 'P' (line 247)
        P_116541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 36), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 247)
        derivatives_116542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 36), P_116541, 'derivatives')
        # Calling derivatives(args, kwargs) (line 247)
        derivatives_call_result_116545 = invoke(stypy.reporting.localization.Localization(__file__, 247, 36), derivatives_116542, *[int_116543], **kwargs_116544)
        
        # Processing the call keyword arguments (line 247)
        kwargs_116546 = {}
        # Getting the type of 'np' (line 247)
        np_116539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 247)
        shape_116540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 27), np_116539, 'shape')
        # Calling shape(args, kwargs) (line 247)
        shape_call_result_116547 = invoke(stypy.reporting.localization.Localization(__file__, 247, 27), shape_116540, *[derivatives_call_result_116545], **kwargs_116546)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 247)
        tuple_116548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 247)
        # Adding element type (line 247)
        # Getting the type of 'n' (line 247)
        n_116549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 56), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 56), tuple_116548, n_116549)
        # Adding element type (line 247)
        int_116550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 56), tuple_116548, int_116550)
        
        # Processing the call keyword arguments (line 247)
        kwargs_116551 = {}
        # Getting the type of 'assert_array_equal' (line 247)
        assert_array_equal_116538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 247)
        assert_array_equal_call_result_116552 = invoke(stypy.reporting.localization.Localization(__file__, 247, 8), assert_array_equal_116538, *[shape_call_result_116547, tuple_116548], **kwargs_116551)
        
        
        # Call to assert_array_equal(...): (line 248)
        # Processing the call arguments (line 248)
        
        # Call to shape(...): (line 248)
        # Processing the call arguments (line 248)
        
        # Call to derivatives(...): (line 248)
        # Processing the call arguments (line 248)
        
        # Obtaining an instance of the builtin type 'list' (line 248)
        list_116558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 248)
        # Adding element type (line 248)
        int_116559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 50), list_116558, int_116559)
        
        # Processing the call keyword arguments (line 248)
        kwargs_116560 = {}
        # Getting the type of 'P' (line 248)
        P_116556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 36), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 248)
        derivatives_116557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 36), P_116556, 'derivatives')
        # Calling derivatives(args, kwargs) (line 248)
        derivatives_call_result_116561 = invoke(stypy.reporting.localization.Localization(__file__, 248, 36), derivatives_116557, *[list_116558], **kwargs_116560)
        
        # Processing the call keyword arguments (line 248)
        kwargs_116562 = {}
        # Getting the type of 'np' (line 248)
        np_116554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 248)
        shape_116555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 27), np_116554, 'shape')
        # Calling shape(args, kwargs) (line 248)
        shape_call_result_116563 = invoke(stypy.reporting.localization.Localization(__file__, 248, 27), shape_116555, *[derivatives_call_result_116561], **kwargs_116562)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 248)
        tuple_116564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 58), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 248)
        # Adding element type (line 248)
        # Getting the type of 'n' (line 248)
        n_116565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 58), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 58), tuple_116564, n_116565)
        # Adding element type (line 248)
        int_116566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 58), tuple_116564, int_116566)
        # Adding element type (line 248)
        int_116567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 58), tuple_116564, int_116567)
        
        # Processing the call keyword arguments (line 248)
        kwargs_116568 = {}
        # Getting the type of 'assert_array_equal' (line 248)
        assert_array_equal_116553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 248)
        assert_array_equal_call_result_116569 = invoke(stypy.reporting.localization.Localization(__file__, 248, 8), assert_array_equal_116553, *[shape_call_result_116563, tuple_116564], **kwargs_116568)
        
        
        # Call to assert_array_equal(...): (line 249)
        # Processing the call arguments (line 249)
        
        # Call to shape(...): (line 249)
        # Processing the call arguments (line 249)
        
        # Call to derivatives(...): (line 249)
        # Processing the call arguments (line 249)
        
        # Obtaining an instance of the builtin type 'list' (line 249)
        list_116575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 249)
        # Adding element type (line 249)
        int_116576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 50), list_116575, int_116576)
        # Adding element type (line 249)
        int_116577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 50), list_116575, int_116577)
        
        # Processing the call keyword arguments (line 249)
        kwargs_116578 = {}
        # Getting the type of 'P' (line 249)
        P_116573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 36), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 249)
        derivatives_116574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 249, 36), P_116573, 'derivatives')
        # Calling derivatives(args, kwargs) (line 249)
        derivatives_call_result_116579 = invoke(stypy.reporting.localization.Localization(__file__, 249, 36), derivatives_116574, *[list_116575], **kwargs_116578)
        
        # Processing the call keyword arguments (line 249)
        kwargs_116580 = {}
        # Getting the type of 'np' (line 249)
        np_116571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 249)
        shape_116572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 249, 27), np_116571, 'shape')
        # Calling shape(args, kwargs) (line 249)
        shape_call_result_116581 = invoke(stypy.reporting.localization.Localization(__file__, 249, 27), shape_116572, *[derivatives_call_result_116579], **kwargs_116580)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 249)
        tuple_116582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 249)
        # Adding element type (line 249)
        # Getting the type of 'n' (line 249)
        n_116583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 60), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 60), tuple_116582, n_116583)
        # Adding element type (line 249)
        int_116584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 60), tuple_116582, int_116584)
        # Adding element type (line 249)
        int_116585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 64), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 60), tuple_116582, int_116585)
        
        # Processing the call keyword arguments (line 249)
        kwargs_116586 = {}
        # Getting the type of 'assert_array_equal' (line 249)
        assert_array_equal_116570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 249)
        assert_array_equal_call_result_116587 = invoke(stypy.reporting.localization.Localization(__file__, 249, 8), assert_array_equal_116570, *[shape_call_result_116581, tuple_116582], **kwargs_116586)
        
        
        # ################# End of 'test_shapes_vectorvalue_derivative(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shapes_vectorvalue_derivative' in the type store
        # Getting the type of 'stypy_return_type' (line 244)
        stypy_return_type_116588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116588)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shapes_vectorvalue_derivative'
        return stypy_return_type_116588


    @norecursion
    def test_wrapper(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrapper'
        module_type_store = module_type_store.open_function_context('test_wrapper', 251, 4, False)
        # Assigning a type to the variable 'self' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_wrapper')
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_wrapper.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_wrapper', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrapper', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrapper(...)' code ##################

        
        # Assigning a Call to a Name (line 252):
        
        # Assigning a Call to a Name (line 252):
        
        # Call to KroghInterpolator(...): (line 252)
        # Processing the call arguments (line 252)
        # Getting the type of 'self' (line 252)
        self_116590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 30), 'self', False)
        # Obtaining the member 'xs' of a type (line 252)
        xs_116591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 30), self_116590, 'xs')
        # Getting the type of 'self' (line 252)
        self_116592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 39), 'self', False)
        # Obtaining the member 'ys' of a type (line 252)
        ys_116593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 39), self_116592, 'ys')
        # Processing the call keyword arguments (line 252)
        kwargs_116594 = {}
        # Getting the type of 'KroghInterpolator' (line 252)
        KroghInterpolator_116589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 252)
        KroghInterpolator_call_result_116595 = invoke(stypy.reporting.localization.Localization(__file__, 252, 12), KroghInterpolator_116589, *[xs_116591, ys_116593], **kwargs_116594)
        
        # Assigning a type to the variable 'P' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 8), 'P', KroghInterpolator_call_result_116595)
        
        # Assigning a Name to a Name (line 253):
        
        # Assigning a Name to a Name (line 253):
        # Getting the type of 'krogh_interpolate' (line 253)
        krogh_interpolate_116596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 13), 'krogh_interpolate')
        # Assigning a type to the variable 'ki' (line 253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 253, 8), 'ki', krogh_interpolate_116596)
        
        # Call to assert_almost_equal(...): (line 254)
        # Processing the call arguments (line 254)
        
        # Call to P(...): (line 254)
        # Processing the call arguments (line 254)
        # Getting the type of 'self' (line 254)
        self_116599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 30), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 254)
        test_xs_116600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 30), self_116599, 'test_xs')
        # Processing the call keyword arguments (line 254)
        kwargs_116601 = {}
        # Getting the type of 'P' (line 254)
        P_116598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 28), 'P', False)
        # Calling P(args, kwargs) (line 254)
        P_call_result_116602 = invoke(stypy.reporting.localization.Localization(__file__, 254, 28), P_116598, *[test_xs_116600], **kwargs_116601)
        
        
        # Call to ki(...): (line 254)
        # Processing the call arguments (line 254)
        # Getting the type of 'self' (line 254)
        self_116604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 48), 'self', False)
        # Obtaining the member 'xs' of a type (line 254)
        xs_116605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 48), self_116604, 'xs')
        # Getting the type of 'self' (line 254)
        self_116606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 57), 'self', False)
        # Obtaining the member 'ys' of a type (line 254)
        ys_116607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 57), self_116606, 'ys')
        # Getting the type of 'self' (line 254)
        self_116608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 66), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 254)
        test_xs_116609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 66), self_116608, 'test_xs')
        # Processing the call keyword arguments (line 254)
        kwargs_116610 = {}
        # Getting the type of 'ki' (line 254)
        ki_116603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 45), 'ki', False)
        # Calling ki(args, kwargs) (line 254)
        ki_call_result_116611 = invoke(stypy.reporting.localization.Localization(__file__, 254, 45), ki_116603, *[xs_116605, ys_116607, test_xs_116609], **kwargs_116610)
        
        # Processing the call keyword arguments (line 254)
        kwargs_116612 = {}
        # Getting the type of 'assert_almost_equal' (line 254)
        assert_almost_equal_116597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 254)
        assert_almost_equal_call_result_116613 = invoke(stypy.reporting.localization.Localization(__file__, 254, 8), assert_almost_equal_116597, *[P_call_result_116602, ki_call_result_116611], **kwargs_116612)
        
        
        # Call to assert_almost_equal(...): (line 255)
        # Processing the call arguments (line 255)
        
        # Call to derivative(...): (line 255)
        # Processing the call arguments (line 255)
        # Getting the type of 'self' (line 255)
        self_116617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 41), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 255)
        test_xs_116618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 41), self_116617, 'test_xs')
        int_116619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 55), 'int')
        # Processing the call keyword arguments (line 255)
        kwargs_116620 = {}
        # Getting the type of 'P' (line 255)
        P_116615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 28), 'P', False)
        # Obtaining the member 'derivative' of a type (line 255)
        derivative_116616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 28), P_116615, 'derivative')
        # Calling derivative(args, kwargs) (line 255)
        derivative_call_result_116621 = invoke(stypy.reporting.localization.Localization(__file__, 255, 28), derivative_116616, *[test_xs_116618, int_116619], **kwargs_116620)
        
        
        # Call to ki(...): (line 256)
        # Processing the call arguments (line 256)
        # Getting the type of 'self' (line 256)
        self_116623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 31), 'self', False)
        # Obtaining the member 'xs' of a type (line 256)
        xs_116624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 31), self_116623, 'xs')
        # Getting the type of 'self' (line 256)
        self_116625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 40), 'self', False)
        # Obtaining the member 'ys' of a type (line 256)
        ys_116626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 40), self_116625, 'ys')
        # Getting the type of 'self' (line 256)
        self_116627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 49), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 256)
        test_xs_116628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 49), self_116627, 'test_xs')
        # Processing the call keyword arguments (line 256)
        int_116629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 67), 'int')
        keyword_116630 = int_116629
        kwargs_116631 = {'der': keyword_116630}
        # Getting the type of 'ki' (line 256)
        ki_116622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 28), 'ki', False)
        # Calling ki(args, kwargs) (line 256)
        ki_call_result_116632 = invoke(stypy.reporting.localization.Localization(__file__, 256, 28), ki_116622, *[xs_116624, ys_116626, test_xs_116628], **kwargs_116631)
        
        # Processing the call keyword arguments (line 255)
        kwargs_116633 = {}
        # Getting the type of 'assert_almost_equal' (line 255)
        assert_almost_equal_116614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 255)
        assert_almost_equal_call_result_116634 = invoke(stypy.reporting.localization.Localization(__file__, 255, 8), assert_almost_equal_116614, *[derivative_call_result_116621, ki_call_result_116632], **kwargs_116633)
        
        
        # Call to assert_almost_equal(...): (line 257)
        # Processing the call arguments (line 257)
        
        # Call to derivatives(...): (line 257)
        # Processing the call arguments (line 257)
        # Getting the type of 'self' (line 257)
        self_116638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 42), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 257)
        test_xs_116639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 42), self_116638, 'test_xs')
        int_116640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 56), 'int')
        # Processing the call keyword arguments (line 257)
        kwargs_116641 = {}
        # Getting the type of 'P' (line 257)
        P_116636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 28), 'P', False)
        # Obtaining the member 'derivatives' of a type (line 257)
        derivatives_116637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 28), P_116636, 'derivatives')
        # Calling derivatives(args, kwargs) (line 257)
        derivatives_call_result_116642 = invoke(stypy.reporting.localization.Localization(__file__, 257, 28), derivatives_116637, *[test_xs_116639, int_116640], **kwargs_116641)
        
        
        # Call to ki(...): (line 258)
        # Processing the call arguments (line 258)
        # Getting the type of 'self' (line 258)
        self_116644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 31), 'self', False)
        # Obtaining the member 'xs' of a type (line 258)
        xs_116645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 31), self_116644, 'xs')
        # Getting the type of 'self' (line 258)
        self_116646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 40), 'self', False)
        # Obtaining the member 'ys' of a type (line 258)
        ys_116647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 40), self_116646, 'ys')
        # Getting the type of 'self' (line 258)
        self_116648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 49), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 258)
        test_xs_116649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 49), self_116648, 'test_xs')
        # Processing the call keyword arguments (line 258)
        
        # Obtaining an instance of the builtin type 'list' (line 258)
        list_116650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 67), 'list')
        # Adding type elements to the builtin type 'list' instance (line 258)
        # Adding element type (line 258)
        int_116651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 68), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 67), list_116650, int_116651)
        # Adding element type (line 258)
        int_116652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 71), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 67), list_116650, int_116652)
        
        keyword_116653 = list_116650
        kwargs_116654 = {'der': keyword_116653}
        # Getting the type of 'ki' (line 258)
        ki_116643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 28), 'ki', False)
        # Calling ki(args, kwargs) (line 258)
        ki_call_result_116655 = invoke(stypy.reporting.localization.Localization(__file__, 258, 28), ki_116643, *[xs_116645, ys_116647, test_xs_116649], **kwargs_116654)
        
        # Processing the call keyword arguments (line 257)
        kwargs_116656 = {}
        # Getting the type of 'assert_almost_equal' (line 257)
        assert_almost_equal_116635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 257)
        assert_almost_equal_call_result_116657 = invoke(stypy.reporting.localization.Localization(__file__, 257, 8), assert_almost_equal_116635, *[derivatives_call_result_116642, ki_call_result_116655], **kwargs_116656)
        
        
        # ################# End of 'test_wrapper(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrapper' in the type store
        # Getting the type of 'stypy_return_type' (line 251)
        stypy_return_type_116658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116658)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrapper'
        return stypy_return_type_116658


    @norecursion
    def test_int_inputs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_int_inputs'
        module_type_store = module_type_store.open_function_context('test_int_inputs', 260, 4, False)
        # Assigning a type to the variable 'self' (line 261)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_int_inputs')
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_int_inputs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_int_inputs', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_int_inputs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_int_inputs(...)' code ##################

        
        # Assigning a List to a Name (line 262):
        
        # Assigning a List to a Name (line 262):
        
        # Obtaining an instance of the builtin type 'list' (line 262)
        list_116659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 262)
        # Adding element type (line 262)
        int_116660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116660)
        # Adding element type (line 262)
        int_116661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116661)
        # Adding element type (line 262)
        int_116662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116662)
        # Adding element type (line 262)
        int_116663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116663)
        # Adding element type (line 262)
        int_116664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116664)
        # Adding element type (line 262)
        int_116665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116665)
        # Adding element type (line 262)
        int_116666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116666)
        # Adding element type (line 262)
        int_116667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116667)
        # Adding element type (line 262)
        int_116668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116668)
        # Adding element type (line 262)
        int_116669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116669)
        # Adding element type (line 262)
        int_116670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116670)
        # Adding element type (line 262)
        int_116671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116671)
        # Adding element type (line 262)
        int_116672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 12), list_116659, int_116672)
        
        # Assigning a type to the variable 'x' (line 262)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 8), 'x', list_116659)
        
        # Assigning a Call to a Name (line 264):
        
        # Assigning a Call to a Name (line 264):
        
        # Call to array(...): (line 264)
        # Processing the call arguments (line 264)
        
        # Obtaining an instance of the builtin type 'list' (line 264)
        list_116675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 264)
        # Adding element type (line 264)
        float_116676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116676)
        # Adding element type (line 264)
        float_116677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116677)
        # Adding element type (line 264)
        float_116678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 51), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116678)
        # Adding element type (line 264)
        float_116679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 63), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116679)
        # Adding element type (line 264)
        float_116680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116680)
        # Adding element type (line 264)
        float_116681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116681)
        # Adding element type (line 264)
        float_116682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 57), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116682)
        # Adding element type (line 264)
        float_116683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116683)
        # Adding element type (line 264)
        float_116684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116684)
        # Adding element type (line 264)
        float_116685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 57), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116685)
        # Adding element type (line 264)
        float_116686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116686)
        # Adding element type (line 264)
        float_116687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116687)
        # Adding element type (line 264)
        float_116688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 57), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 30), list_116675, float_116688)
        
        # Processing the call keyword arguments (line 264)
        kwargs_116689 = {}
        # Getting the type of 'np' (line 264)
        np_116673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 21), 'np', False)
        # Obtaining the member 'array' of a type (line 264)
        array_116674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 21), np_116673, 'array')
        # Calling array(args, kwargs) (line 264)
        array_call_result_116690 = invoke(stypy.reporting.localization.Localization(__file__, 264, 21), array_116674, *[list_116675], **kwargs_116689)
        
        # Assigning a type to the variable 'offset_cdf' (line 264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 8), 'offset_cdf', array_call_result_116690)
        
        # Assigning a Call to a Name (line 268):
        
        # Assigning a Call to a Name (line 268):
        
        # Call to KroghInterpolator(...): (line 268)
        # Processing the call arguments (line 268)
        # Getting the type of 'x' (line 268)
        x_116692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 30), 'x', False)
        # Getting the type of 'offset_cdf' (line 268)
        offset_cdf_116693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 33), 'offset_cdf', False)
        # Processing the call keyword arguments (line 268)
        kwargs_116694 = {}
        # Getting the type of 'KroghInterpolator' (line 268)
        KroghInterpolator_116691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 12), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 268)
        KroghInterpolator_call_result_116695 = invoke(stypy.reporting.localization.Localization(__file__, 268, 12), KroghInterpolator_116691, *[x_116692, offset_cdf_116693], **kwargs_116694)
        
        # Assigning a type to the variable 'f' (line 268)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 8), 'f', KroghInterpolator_call_result_116695)
        
        # Call to assert_allclose(...): (line 270)
        # Processing the call arguments (line 270)
        
        # Call to abs(...): (line 270)
        # Processing the call arguments (line 270)
        
        # Call to f(...): (line 270)
        # Processing the call arguments (line 270)
        # Getting the type of 'x' (line 270)
        x_116699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 31), 'x', False)
        # Processing the call keyword arguments (line 270)
        kwargs_116700 = {}
        # Getting the type of 'f' (line 270)
        f_116698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 29), 'f', False)
        # Calling f(args, kwargs) (line 270)
        f_call_result_116701 = invoke(stypy.reporting.localization.Localization(__file__, 270, 29), f_116698, *[x_116699], **kwargs_116700)
        
        # Getting the type of 'offset_cdf' (line 270)
        offset_cdf_116702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 36), 'offset_cdf', False)
        # Applying the binary operator '-' (line 270)
        result_sub_116703 = python_operator(stypy.reporting.localization.Localization(__file__, 270, 29), '-', f_call_result_116701, offset_cdf_116702)
        
        
        # Call to derivative(...): (line 270)
        # Processing the call arguments (line 270)
        # Getting the type of 'x' (line 270)
        x_116706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 63), 'x', False)
        int_116707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 66), 'int')
        # Processing the call keyword arguments (line 270)
        kwargs_116708 = {}
        # Getting the type of 'f' (line 270)
        f_116704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 50), 'f', False)
        # Obtaining the member 'derivative' of a type (line 270)
        derivative_116705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 50), f_116704, 'derivative')
        # Calling derivative(args, kwargs) (line 270)
        derivative_call_result_116709 = invoke(stypy.reporting.localization.Localization(__file__, 270, 50), derivative_116705, *[x_116706, int_116707], **kwargs_116708)
        
        # Applying the binary operator 'div' (line 270)
        result_div_116710 = python_operator(stypy.reporting.localization.Localization(__file__, 270, 28), 'div', result_sub_116703, derivative_call_result_116709)
        
        # Processing the call keyword arguments (line 270)
        kwargs_116711 = {}
        # Getting the type of 'abs' (line 270)
        abs_116697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 24), 'abs', False)
        # Calling abs(args, kwargs) (line 270)
        abs_call_result_116712 = invoke(stypy.reporting.localization.Localization(__file__, 270, 24), abs_116697, *[result_div_116710], **kwargs_116711)
        
        int_116713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 24), 'int')
        # Processing the call keyword arguments (line 270)
        float_116714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 32), 'float')
        keyword_116715 = float_116714
        kwargs_116716 = {'atol': keyword_116715}
        # Getting the type of 'assert_allclose' (line 270)
        assert_allclose_116696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 270)
        assert_allclose_call_result_116717 = invoke(stypy.reporting.localization.Localization(__file__, 270, 8), assert_allclose_116696, *[abs_call_result_116712, int_116713], **kwargs_116716)
        
        
        # ################# End of 'test_int_inputs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_int_inputs' in the type store
        # Getting the type of 'stypy_return_type' (line 260)
        stypy_return_type_116718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116718)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_int_inputs'
        return stypy_return_type_116718


    @norecursion
    def test_derivatives_complex(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_derivatives_complex'
        module_type_store = module_type_store.open_function_context('test_derivatives_complex', 273, 4, False)
        # Assigning a type to the variable 'self' (line 274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_localization', localization)
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_function_name', 'TestKrogh.test_derivatives_complex')
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_param_names_list', [])
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestKrogh.test_derivatives_complex.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.test_derivatives_complex', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_derivatives_complex', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_derivatives_complex(...)' code ##################

        
        # Assigning a Tuple to a Tuple (line 275):
        
        # Assigning a Call to a Name (line 275):
        
        # Call to array(...): (line 275)
        # Processing the call arguments (line 275)
        
        # Obtaining an instance of the builtin type 'list' (line 275)
        list_116721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 275)
        # Adding element type (line 275)
        int_116722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 24), list_116721, int_116722)
        # Adding element type (line 275)
        int_116723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 24), list_116721, int_116723)
        # Adding element type (line 275)
        int_116724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 24), list_116721, int_116724)
        # Adding element type (line 275)
        int_116725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 24), list_116721, int_116725)
        # Adding element type (line 275)
        int_116726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 24), list_116721, int_116726)
        
        # Processing the call keyword arguments (line 275)
        kwargs_116727 = {}
        # Getting the type of 'np' (line 275)
        np_116719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 15), 'np', False)
        # Obtaining the member 'array' of a type (line 275)
        array_116720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 15), np_116719, 'array')
        # Calling array(args, kwargs) (line 275)
        array_call_result_116728 = invoke(stypy.reporting.localization.Localization(__file__, 275, 15), array_116720, *[list_116721], **kwargs_116727)
        
        # Assigning a type to the variable 'tuple_assignment_115232' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'tuple_assignment_115232', array_call_result_116728)
        
        # Assigning a Call to a Name (line 275):
        
        # Call to array(...): (line 275)
        # Processing the call arguments (line 275)
        
        # Obtaining an instance of the builtin type 'list' (line 275)
        list_116731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 275)
        # Adding element type (line 275)
        int_116732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 53), list_116731, int_116732)
        # Adding element type (line 275)
        complex_116733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 57), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 53), list_116731, complex_116733)
        # Adding element type (line 275)
        int_116734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 53), list_116731, int_116734)
        # Adding element type (line 275)
        int_116735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 53), list_116731, int_116735)
        # Adding element type (line 275)
        complex_116736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 70), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 53), list_116731, complex_116736)
        
        # Processing the call keyword arguments (line 275)
        kwargs_116737 = {}
        # Getting the type of 'np' (line 275)
        np_116729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 44), 'np', False)
        # Obtaining the member 'array' of a type (line 275)
        array_116730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 44), np_116729, 'array')
        # Calling array(args, kwargs) (line 275)
        array_call_result_116738 = invoke(stypy.reporting.localization.Localization(__file__, 275, 44), array_116730, *[list_116731], **kwargs_116737)
        
        # Assigning a type to the variable 'tuple_assignment_115233' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'tuple_assignment_115233', array_call_result_116738)
        
        # Assigning a Name to a Name (line 275):
        # Getting the type of 'tuple_assignment_115232' (line 275)
        tuple_assignment_115232_116739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'tuple_assignment_115232')
        # Assigning a type to the variable 'x' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'x', tuple_assignment_115232_116739)
        
        # Assigning a Name to a Name (line 275):
        # Getting the type of 'tuple_assignment_115233' (line 275)
        tuple_assignment_115233_116740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'tuple_assignment_115233')
        # Assigning a type to the variable 'y' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 11), 'y', tuple_assignment_115233_116740)
        
        # Assigning a Call to a Name (line 276):
        
        # Assigning a Call to a Name (line 276):
        
        # Call to KroghInterpolator(...): (line 276)
        # Processing the call arguments (line 276)
        # Getting the type of 'x' (line 276)
        x_116742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 33), 'x', False)
        # Getting the type of 'y' (line 276)
        y_116743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 36), 'y', False)
        # Processing the call keyword arguments (line 276)
        kwargs_116744 = {}
        # Getting the type of 'KroghInterpolator' (line 276)
        KroghInterpolator_116741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 15), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 276)
        KroghInterpolator_call_result_116745 = invoke(stypy.reporting.localization.Localization(__file__, 276, 15), KroghInterpolator_116741, *[x_116742, y_116743], **kwargs_116744)
        
        # Assigning a type to the variable 'func' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 8), 'func', KroghInterpolator_call_result_116745)
        
        # Assigning a Call to a Name (line 277):
        
        # Assigning a Call to a Name (line 277):
        
        # Call to derivatives(...): (line 277)
        # Processing the call arguments (line 277)
        int_116748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 33), 'int')
        # Processing the call keyword arguments (line 277)
        kwargs_116749 = {}
        # Getting the type of 'func' (line 277)
        func_116746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'func', False)
        # Obtaining the member 'derivatives' of a type (line 277)
        derivatives_116747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), func_116746, 'derivatives')
        # Calling derivatives(args, kwargs) (line 277)
        derivatives_call_result_116750 = invoke(stypy.reporting.localization.Localization(__file__, 277, 16), derivatives_116747, *[int_116748], **kwargs_116749)
        
        # Assigning a type to the variable 'cmplx' (line 277)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 8), 'cmplx', derivatives_call_result_116750)
        
        # Assigning a BinOp to a Name (line 279):
        
        # Assigning a BinOp to a Name (line 279):
        
        # Call to derivatives(...): (line 279)
        # Processing the call arguments (line 279)
        int_116758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 59), 'int')
        # Processing the call keyword arguments (line 279)
        kwargs_116759 = {}
        
        # Call to KroghInterpolator(...): (line 279)
        # Processing the call arguments (line 279)
        # Getting the type of 'x' (line 279)
        x_116752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 36), 'x', False)
        # Getting the type of 'y' (line 279)
        y_116753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 39), 'y', False)
        # Obtaining the member 'real' of a type (line 279)
        real_116754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 39), y_116753, 'real')
        # Processing the call keyword arguments (line 279)
        kwargs_116755 = {}
        # Getting the type of 'KroghInterpolator' (line 279)
        KroghInterpolator_116751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 18), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 279)
        KroghInterpolator_call_result_116756 = invoke(stypy.reporting.localization.Localization(__file__, 279, 18), KroghInterpolator_116751, *[x_116752, real_116754], **kwargs_116755)
        
        # Obtaining the member 'derivatives' of a type (line 279)
        derivatives_116757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 18), KroghInterpolator_call_result_116756, 'derivatives')
        # Calling derivatives(args, kwargs) (line 279)
        derivatives_call_result_116760 = invoke(stypy.reporting.localization.Localization(__file__, 279, 18), derivatives_116757, *[int_116758], **kwargs_116759)
        
        complex_116761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 18), 'complex')
        
        # Call to derivatives(...): (line 280)
        # Processing the call arguments (line 280)
        int_116769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 62), 'int')
        # Processing the call keyword arguments (line 280)
        kwargs_116770 = {}
        
        # Call to KroghInterpolator(...): (line 280)
        # Processing the call arguments (line 280)
        # Getting the type of 'x' (line 280)
        x_116763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 39), 'x', False)
        # Getting the type of 'y' (line 280)
        y_116764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 42), 'y', False)
        # Obtaining the member 'imag' of a type (line 280)
        imag_116765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 42), y_116764, 'imag')
        # Processing the call keyword arguments (line 280)
        kwargs_116766 = {}
        # Getting the type of 'KroghInterpolator' (line 280)
        KroghInterpolator_116762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 21), 'KroghInterpolator', False)
        # Calling KroghInterpolator(args, kwargs) (line 280)
        KroghInterpolator_call_result_116767 = invoke(stypy.reporting.localization.Localization(__file__, 280, 21), KroghInterpolator_116762, *[x_116763, imag_116765], **kwargs_116766)
        
        # Obtaining the member 'derivatives' of a type (line 280)
        derivatives_116768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 21), KroghInterpolator_call_result_116767, 'derivatives')
        # Calling derivatives(args, kwargs) (line 280)
        derivatives_call_result_116771 = invoke(stypy.reporting.localization.Localization(__file__, 280, 21), derivatives_116768, *[int_116769], **kwargs_116770)
        
        # Applying the binary operator '*' (line 280)
        result_mul_116772 = python_operator(stypy.reporting.localization.Localization(__file__, 280, 18), '*', complex_116761, derivatives_call_result_116771)
        
        # Applying the binary operator '+' (line 279)
        result_add_116773 = python_operator(stypy.reporting.localization.Localization(__file__, 279, 18), '+', derivatives_call_result_116760, result_mul_116772)
        
        # Assigning a type to the variable 'cmplx2' (line 279)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'cmplx2', result_add_116773)
        
        # Call to assert_allclose(...): (line 281)
        # Processing the call arguments (line 281)
        # Getting the type of 'cmplx' (line 281)
        cmplx_116775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 24), 'cmplx', False)
        # Getting the type of 'cmplx2' (line 281)
        cmplx2_116776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 31), 'cmplx2', False)
        # Processing the call keyword arguments (line 281)
        float_116777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 281, 44), 'float')
        keyword_116778 = float_116777
        kwargs_116779 = {'atol': keyword_116778}
        # Getting the type of 'assert_allclose' (line 281)
        assert_allclose_116774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 281)
        assert_allclose_call_result_116780 = invoke(stypy.reporting.localization.Localization(__file__, 281, 8), assert_allclose_116774, *[cmplx_116775, cmplx2_116776], **kwargs_116779)
        
        
        # ################# End of 'test_derivatives_complex(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_derivatives_complex' in the type store
        # Getting the type of 'stypy_return_type' (line 273)
        stypy_return_type_116781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116781)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_derivatives_complex'
        return stypy_return_type_116781


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 146, 0, False)
        # Assigning a type to the variable 'self' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestKrogh.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestKrogh' (line 146)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 0), 'TestKrogh', TestKrogh)
# Declaration of the 'TestTaylor' class

class TestTaylor(object, ):

    @norecursion
    def test_exponential(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_exponential'
        module_type_store = module_type_store.open_function_context('test_exponential', 285, 4, False)
        # Assigning a type to the variable 'self' (line 286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 286, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_localization', localization)
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_function_name', 'TestTaylor.test_exponential')
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_param_names_list', [])
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestTaylor.test_exponential.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestTaylor.test_exponential', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_exponential', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_exponential(...)' code ##################

        
        # Assigning a Num to a Name (line 286):
        
        # Assigning a Num to a Name (line 286):
        int_116782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 17), 'int')
        # Assigning a type to the variable 'degree' (line 286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 286, 8), 'degree', int_116782)
        
        # Assigning a Call to a Name (line 287):
        
        # Assigning a Call to a Name (line 287):
        
        # Call to approximate_taylor_polynomial(...): (line 287)
        # Processing the call arguments (line 287)
        # Getting the type of 'np' (line 287)
        np_116784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 42), 'np', False)
        # Obtaining the member 'exp' of a type (line 287)
        exp_116785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 42), np_116784, 'exp')
        int_116786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 50), 'int')
        # Getting the type of 'degree' (line 287)
        degree_116787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 53), 'degree', False)
        int_116788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 61), 'int')
        int_116789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 64), 'int')
        # Processing the call keyword arguments (line 287)
        kwargs_116790 = {}
        # Getting the type of 'approximate_taylor_polynomial' (line 287)
        approximate_taylor_polynomial_116783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 12), 'approximate_taylor_polynomial', False)
        # Calling approximate_taylor_polynomial(args, kwargs) (line 287)
        approximate_taylor_polynomial_call_result_116791 = invoke(stypy.reporting.localization.Localization(__file__, 287, 12), approximate_taylor_polynomial_116783, *[exp_116785, int_116786, degree_116787, int_116788, int_116789], **kwargs_116790)
        
        # Assigning a type to the variable 'p' (line 287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 287, 8), 'p', approximate_taylor_polynomial_call_result_116791)
        
        
        # Call to xrange(...): (line 288)
        # Processing the call arguments (line 288)
        # Getting the type of 'degree' (line 288)
        degree_116793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 24), 'degree', False)
        int_116794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 31), 'int')
        # Applying the binary operator '+' (line 288)
        result_add_116795 = python_operator(stypy.reporting.localization.Localization(__file__, 288, 24), '+', degree_116793, int_116794)
        
        # Processing the call keyword arguments (line 288)
        kwargs_116796 = {}
        # Getting the type of 'xrange' (line 288)
        xrange_116792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 288)
        xrange_call_result_116797 = invoke(stypy.reporting.localization.Localization(__file__, 288, 17), xrange_116792, *[result_add_116795], **kwargs_116796)
        
        # Testing the type of a for loop iterable (line 288)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 288, 8), xrange_call_result_116797)
        # Getting the type of the for loop variable (line 288)
        for_loop_var_116798 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 288, 8), xrange_call_result_116797)
        # Assigning a type to the variable 'i' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'i', for_loop_var_116798)
        # SSA begins for a for statement (line 288)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_almost_equal(...): (line 289)
        # Processing the call arguments (line 289)
        
        # Call to p(...): (line 289)
        # Processing the call arguments (line 289)
        int_116801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 289, 34), 'int')
        # Processing the call keyword arguments (line 289)
        kwargs_116802 = {}
        # Getting the type of 'p' (line 289)
        p_116800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 32), 'p', False)
        # Calling p(args, kwargs) (line 289)
        p_call_result_116803 = invoke(stypy.reporting.localization.Localization(__file__, 289, 32), p_116800, *[int_116801], **kwargs_116802)
        
        int_116804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 289, 37), 'int')
        # Processing the call keyword arguments (line 289)
        kwargs_116805 = {}
        # Getting the type of 'assert_almost_equal' (line 289)
        assert_almost_equal_116799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 289)
        assert_almost_equal_call_result_116806 = invoke(stypy.reporting.localization.Localization(__file__, 289, 12), assert_almost_equal_116799, *[p_call_result_116803, int_116804], **kwargs_116805)
        
        
        # Assigning a Call to a Name (line 290):
        
        # Assigning a Call to a Name (line 290):
        
        # Call to deriv(...): (line 290)
        # Processing the call keyword arguments (line 290)
        kwargs_116809 = {}
        # Getting the type of 'p' (line 290)
        p_116807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 16), 'p', False)
        # Obtaining the member 'deriv' of a type (line 290)
        deriv_116808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 16), p_116807, 'deriv')
        # Calling deriv(args, kwargs) (line 290)
        deriv_call_result_116810 = invoke(stypy.reporting.localization.Localization(__file__, 290, 16), deriv_116808, *[], **kwargs_116809)
        
        # Assigning a type to the variable 'p' (line 290)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 12), 'p', deriv_call_result_116810)
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to assert_almost_equal(...): (line 291)
        # Processing the call arguments (line 291)
        
        # Call to p(...): (line 291)
        # Processing the call arguments (line 291)
        int_116813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 30), 'int')
        # Processing the call keyword arguments (line 291)
        kwargs_116814 = {}
        # Getting the type of 'p' (line 291)
        p_116812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 28), 'p', False)
        # Calling p(args, kwargs) (line 291)
        p_call_result_116815 = invoke(stypy.reporting.localization.Localization(__file__, 291, 28), p_116812, *[int_116813], **kwargs_116814)
        
        int_116816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 33), 'int')
        # Processing the call keyword arguments (line 291)
        kwargs_116817 = {}
        # Getting the type of 'assert_almost_equal' (line 291)
        assert_almost_equal_116811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 291)
        assert_almost_equal_call_result_116818 = invoke(stypy.reporting.localization.Localization(__file__, 291, 8), assert_almost_equal_116811, *[p_call_result_116815, int_116816], **kwargs_116817)
        
        
        # ################# End of 'test_exponential(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_exponential' in the type store
        # Getting the type of 'stypy_return_type' (line 285)
        stypy_return_type_116819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116819)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_exponential'
        return stypy_return_type_116819


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 284, 0, False)
        # Assigning a type to the variable 'self' (line 285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestTaylor.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestTaylor' (line 284)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 0), 'TestTaylor', TestTaylor)
# Declaration of the 'TestBarycentric' class

class TestBarycentric(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 295, 4, False)
        # Assigning a type to the variable 'self' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.setup_method')
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Call to a Attribute (line 296):
        
        # Assigning a Call to a Attribute (line 296):
        
        # Call to poly1d(...): (line 296)
        # Processing the call arguments (line 296)
        
        # Obtaining an instance of the builtin type 'list' (line 296)
        list_116822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 296)
        # Adding element type (line 296)
        int_116823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 296, 35), list_116822, int_116823)
        # Adding element type (line 296)
        int_116824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 296, 35), list_116822, int_116824)
        # Adding element type (line 296)
        int_116825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 296, 35), list_116822, int_116825)
        # Adding element type (line 296)
        int_116826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 296, 35), list_116822, int_116826)
        # Adding element type (line 296)
        int_116827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 296, 35), list_116822, int_116827)
        
        # Processing the call keyword arguments (line 296)
        kwargs_116828 = {}
        # Getting the type of 'np' (line 296)
        np_116820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 25), 'np', False)
        # Obtaining the member 'poly1d' of a type (line 296)
        poly1d_116821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 25), np_116820, 'poly1d')
        # Calling poly1d(args, kwargs) (line 296)
        poly1d_call_result_116829 = invoke(stypy.reporting.localization.Localization(__file__, 296, 25), poly1d_116821, *[list_116822], **kwargs_116828)
        
        # Getting the type of 'self' (line 296)
        self_116830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'self')
        # Setting the type of the member 'true_poly' of a type (line 296)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 8), self_116830, 'true_poly', poly1d_call_result_116829)
        
        # Assigning a Call to a Attribute (line 297):
        
        # Assigning a Call to a Attribute (line 297):
        
        # Call to linspace(...): (line 297)
        # Processing the call arguments (line 297)
        int_116833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 297, 35), 'int')
        int_116834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 297, 38), 'int')
        int_116835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 297, 40), 'int')
        # Processing the call keyword arguments (line 297)
        kwargs_116836 = {}
        # Getting the type of 'np' (line 297)
        np_116831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 23), 'np', False)
        # Obtaining the member 'linspace' of a type (line 297)
        linspace_116832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 23), np_116831, 'linspace')
        # Calling linspace(args, kwargs) (line 297)
        linspace_call_result_116837 = invoke(stypy.reporting.localization.Localization(__file__, 297, 23), linspace_116832, *[int_116833, int_116834, int_116835], **kwargs_116836)
        
        # Getting the type of 'self' (line 297)
        self_116838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 8), 'self')
        # Setting the type of the member 'test_xs' of a type (line 297)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 8), self_116838, 'test_xs', linspace_call_result_116837)
        
        # Assigning a Call to a Attribute (line 298):
        
        # Assigning a Call to a Attribute (line 298):
        
        # Call to linspace(...): (line 298)
        # Processing the call arguments (line 298)
        int_116841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 298, 30), 'int')
        int_116842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 298, 33), 'int')
        int_116843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 298, 35), 'int')
        # Processing the call keyword arguments (line 298)
        kwargs_116844 = {}
        # Getting the type of 'np' (line 298)
        np_116839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 18), 'np', False)
        # Obtaining the member 'linspace' of a type (line 298)
        linspace_116840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 18), np_116839, 'linspace')
        # Calling linspace(args, kwargs) (line 298)
        linspace_call_result_116845 = invoke(stypy.reporting.localization.Localization(__file__, 298, 18), linspace_116840, *[int_116841, int_116842, int_116843], **kwargs_116844)
        
        # Getting the type of 'self' (line 298)
        self_116846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 8), 'self')
        # Setting the type of the member 'xs' of a type (line 298)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 8), self_116846, 'xs', linspace_call_result_116845)
        
        # Assigning a Call to a Attribute (line 299):
        
        # Assigning a Call to a Attribute (line 299):
        
        # Call to true_poly(...): (line 299)
        # Processing the call arguments (line 299)
        # Getting the type of 'self' (line 299)
        self_116849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 33), 'self', False)
        # Obtaining the member 'xs' of a type (line 299)
        xs_116850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 33), self_116849, 'xs')
        # Processing the call keyword arguments (line 299)
        kwargs_116851 = {}
        # Getting the type of 'self' (line 299)
        self_116847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 18), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 299)
        true_poly_116848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 18), self_116847, 'true_poly')
        # Calling true_poly(args, kwargs) (line 299)
        true_poly_call_result_116852 = invoke(stypy.reporting.localization.Localization(__file__, 299, 18), true_poly_116848, *[xs_116850], **kwargs_116851)
        
        # Getting the type of 'self' (line 299)
        self_116853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 8), 'self')
        # Setting the type of the member 'ys' of a type (line 299)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 8), self_116853, 'ys', true_poly_call_result_116852)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 295)
        stypy_return_type_116854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116854)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_116854


    @norecursion
    def test_lagrange(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_lagrange'
        module_type_store = module_type_store.open_function_context('test_lagrange', 301, 4, False)
        # Assigning a type to the variable 'self' (line 302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 302, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.test_lagrange')
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.test_lagrange.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.test_lagrange', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_lagrange', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_lagrange(...)' code ##################

        
        # Assigning a Call to a Name (line 302):
        
        # Assigning a Call to a Name (line 302):
        
        # Call to BarycentricInterpolator(...): (line 302)
        # Processing the call arguments (line 302)
        # Getting the type of 'self' (line 302)
        self_116856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 36), 'self', False)
        # Obtaining the member 'xs' of a type (line 302)
        xs_116857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 36), self_116856, 'xs')
        # Getting the type of 'self' (line 302)
        self_116858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 44), 'self', False)
        # Obtaining the member 'ys' of a type (line 302)
        ys_116859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 44), self_116858, 'ys')
        # Processing the call keyword arguments (line 302)
        kwargs_116860 = {}
        # Getting the type of 'BarycentricInterpolator' (line 302)
        BarycentricInterpolator_116855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 12), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 302)
        BarycentricInterpolator_call_result_116861 = invoke(stypy.reporting.localization.Localization(__file__, 302, 12), BarycentricInterpolator_116855, *[xs_116857, ys_116859], **kwargs_116860)
        
        # Assigning a type to the variable 'P' (line 302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 302, 8), 'P', BarycentricInterpolator_call_result_116861)
        
        # Call to assert_almost_equal(...): (line 303)
        # Processing the call arguments (line 303)
        
        # Call to true_poly(...): (line 303)
        # Processing the call arguments (line 303)
        # Getting the type of 'self' (line 303)
        self_116865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 43), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 303)
        test_xs_116866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 43), self_116865, 'test_xs')
        # Processing the call keyword arguments (line 303)
        kwargs_116867 = {}
        # Getting the type of 'self' (line 303)
        self_116863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 28), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 303)
        true_poly_116864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 28), self_116863, 'true_poly')
        # Calling true_poly(args, kwargs) (line 303)
        true_poly_call_result_116868 = invoke(stypy.reporting.localization.Localization(__file__, 303, 28), true_poly_116864, *[test_xs_116866], **kwargs_116867)
        
        
        # Call to P(...): (line 303)
        # Processing the call arguments (line 303)
        # Getting the type of 'self' (line 303)
        self_116870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 59), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 303)
        test_xs_116871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 59), self_116870, 'test_xs')
        # Processing the call keyword arguments (line 303)
        kwargs_116872 = {}
        # Getting the type of 'P' (line 303)
        P_116869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 57), 'P', False)
        # Calling P(args, kwargs) (line 303)
        P_call_result_116873 = invoke(stypy.reporting.localization.Localization(__file__, 303, 57), P_116869, *[test_xs_116871], **kwargs_116872)
        
        # Processing the call keyword arguments (line 303)
        kwargs_116874 = {}
        # Getting the type of 'assert_almost_equal' (line 303)
        assert_almost_equal_116862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 303)
        assert_almost_equal_call_result_116875 = invoke(stypy.reporting.localization.Localization(__file__, 303, 8), assert_almost_equal_116862, *[true_poly_call_result_116868, P_call_result_116873], **kwargs_116874)
        
        
        # ################# End of 'test_lagrange(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_lagrange' in the type store
        # Getting the type of 'stypy_return_type' (line 301)
        stypy_return_type_116876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116876)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_lagrange'
        return stypy_return_type_116876


    @norecursion
    def test_scalar(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_scalar'
        module_type_store = module_type_store.open_function_context('test_scalar', 305, 4, False)
        # Assigning a type to the variable 'self' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.test_scalar')
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.test_scalar.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.test_scalar', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_scalar', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_scalar(...)' code ##################

        
        # Assigning a Call to a Name (line 306):
        
        # Assigning a Call to a Name (line 306):
        
        # Call to BarycentricInterpolator(...): (line 306)
        # Processing the call arguments (line 306)
        # Getting the type of 'self' (line 306)
        self_116878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 36), 'self', False)
        # Obtaining the member 'xs' of a type (line 306)
        xs_116879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 36), self_116878, 'xs')
        # Getting the type of 'self' (line 306)
        self_116880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 44), 'self', False)
        # Obtaining the member 'ys' of a type (line 306)
        ys_116881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 44), self_116880, 'ys')
        # Processing the call keyword arguments (line 306)
        kwargs_116882 = {}
        # Getting the type of 'BarycentricInterpolator' (line 306)
        BarycentricInterpolator_116877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 12), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 306)
        BarycentricInterpolator_call_result_116883 = invoke(stypy.reporting.localization.Localization(__file__, 306, 12), BarycentricInterpolator_116877, *[xs_116879, ys_116881], **kwargs_116882)
        
        # Assigning a type to the variable 'P' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'P', BarycentricInterpolator_call_result_116883)
        
        # Call to assert_almost_equal(...): (line 307)
        # Processing the call arguments (line 307)
        
        # Call to true_poly(...): (line 307)
        # Processing the call arguments (line 307)
        int_116887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 43), 'int')
        # Processing the call keyword arguments (line 307)
        kwargs_116888 = {}
        # Getting the type of 'self' (line 307)
        self_116885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 28), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 307)
        true_poly_116886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 28), self_116885, 'true_poly')
        # Calling true_poly(args, kwargs) (line 307)
        true_poly_call_result_116889 = invoke(stypy.reporting.localization.Localization(__file__, 307, 28), true_poly_116886, *[int_116887], **kwargs_116888)
        
        
        # Call to P(...): (line 307)
        # Processing the call arguments (line 307)
        int_116891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 48), 'int')
        # Processing the call keyword arguments (line 307)
        kwargs_116892 = {}
        # Getting the type of 'P' (line 307)
        P_116890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 46), 'P', False)
        # Calling P(args, kwargs) (line 307)
        P_call_result_116893 = invoke(stypy.reporting.localization.Localization(__file__, 307, 46), P_116890, *[int_116891], **kwargs_116892)
        
        # Processing the call keyword arguments (line 307)
        kwargs_116894 = {}
        # Getting the type of 'assert_almost_equal' (line 307)
        assert_almost_equal_116884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 307)
        assert_almost_equal_call_result_116895 = invoke(stypy.reporting.localization.Localization(__file__, 307, 8), assert_almost_equal_116884, *[true_poly_call_result_116889, P_call_result_116893], **kwargs_116894)
        
        
        # Call to assert_almost_equal(...): (line 308)
        # Processing the call arguments (line 308)
        
        # Call to true_poly(...): (line 308)
        # Processing the call arguments (line 308)
        
        # Call to array(...): (line 308)
        # Processing the call arguments (line 308)
        int_116901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 308, 52), 'int')
        # Processing the call keyword arguments (line 308)
        kwargs_116902 = {}
        # Getting the type of 'np' (line 308)
        np_116899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 43), 'np', False)
        # Obtaining the member 'array' of a type (line 308)
        array_116900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 43), np_116899, 'array')
        # Calling array(args, kwargs) (line 308)
        array_call_result_116903 = invoke(stypy.reporting.localization.Localization(__file__, 308, 43), array_116900, *[int_116901], **kwargs_116902)
        
        # Processing the call keyword arguments (line 308)
        kwargs_116904 = {}
        # Getting the type of 'self' (line 308)
        self_116897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 28), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 308)
        true_poly_116898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 28), self_116897, 'true_poly')
        # Calling true_poly(args, kwargs) (line 308)
        true_poly_call_result_116905 = invoke(stypy.reporting.localization.Localization(__file__, 308, 28), true_poly_116898, *[array_call_result_116903], **kwargs_116904)
        
        
        # Call to P(...): (line 308)
        # Processing the call arguments (line 308)
        
        # Call to array(...): (line 308)
        # Processing the call arguments (line 308)
        int_116909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 308, 67), 'int')
        # Processing the call keyword arguments (line 308)
        kwargs_116910 = {}
        # Getting the type of 'np' (line 308)
        np_116907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 58), 'np', False)
        # Obtaining the member 'array' of a type (line 308)
        array_116908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 58), np_116907, 'array')
        # Calling array(args, kwargs) (line 308)
        array_call_result_116911 = invoke(stypy.reporting.localization.Localization(__file__, 308, 58), array_116908, *[int_116909], **kwargs_116910)
        
        # Processing the call keyword arguments (line 308)
        kwargs_116912 = {}
        # Getting the type of 'P' (line 308)
        P_116906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 56), 'P', False)
        # Calling P(args, kwargs) (line 308)
        P_call_result_116913 = invoke(stypy.reporting.localization.Localization(__file__, 308, 56), P_116906, *[array_call_result_116911], **kwargs_116912)
        
        # Processing the call keyword arguments (line 308)
        kwargs_116914 = {}
        # Getting the type of 'assert_almost_equal' (line 308)
        assert_almost_equal_116896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 308)
        assert_almost_equal_call_result_116915 = invoke(stypy.reporting.localization.Localization(__file__, 308, 8), assert_almost_equal_116896, *[true_poly_call_result_116905, P_call_result_116913], **kwargs_116914)
        
        
        # ################# End of 'test_scalar(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_scalar' in the type store
        # Getting the type of 'stypy_return_type' (line 305)
        stypy_return_type_116916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116916)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_scalar'
        return stypy_return_type_116916


    @norecursion
    def test_delayed(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_delayed'
        module_type_store = module_type_store.open_function_context('test_delayed', 310, 4, False)
        # Assigning a type to the variable 'self' (line 311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.test_delayed')
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.test_delayed.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.test_delayed', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_delayed', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_delayed(...)' code ##################

        
        # Assigning a Call to a Name (line 311):
        
        # Assigning a Call to a Name (line 311):
        
        # Call to BarycentricInterpolator(...): (line 311)
        # Processing the call arguments (line 311)
        # Getting the type of 'self' (line 311)
        self_116918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 36), 'self', False)
        # Obtaining the member 'xs' of a type (line 311)
        xs_116919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 311, 36), self_116918, 'xs')
        # Processing the call keyword arguments (line 311)
        kwargs_116920 = {}
        # Getting the type of 'BarycentricInterpolator' (line 311)
        BarycentricInterpolator_116917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 12), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 311)
        BarycentricInterpolator_call_result_116921 = invoke(stypy.reporting.localization.Localization(__file__, 311, 12), BarycentricInterpolator_116917, *[xs_116919], **kwargs_116920)
        
        # Assigning a type to the variable 'P' (line 311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'P', BarycentricInterpolator_call_result_116921)
        
        # Call to set_yi(...): (line 312)
        # Processing the call arguments (line 312)
        # Getting the type of 'self' (line 312)
        self_116924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 17), 'self', False)
        # Obtaining the member 'ys' of a type (line 312)
        ys_116925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 17), self_116924, 'ys')
        # Processing the call keyword arguments (line 312)
        kwargs_116926 = {}
        # Getting the type of 'P' (line 312)
        P_116922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'P', False)
        # Obtaining the member 'set_yi' of a type (line 312)
        set_yi_116923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 8), P_116922, 'set_yi')
        # Calling set_yi(args, kwargs) (line 312)
        set_yi_call_result_116927 = invoke(stypy.reporting.localization.Localization(__file__, 312, 8), set_yi_116923, *[ys_116925], **kwargs_116926)
        
        
        # Call to assert_almost_equal(...): (line 313)
        # Processing the call arguments (line 313)
        
        # Call to true_poly(...): (line 313)
        # Processing the call arguments (line 313)
        # Getting the type of 'self' (line 313)
        self_116931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 43), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 313)
        test_xs_116932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 43), self_116931, 'test_xs')
        # Processing the call keyword arguments (line 313)
        kwargs_116933 = {}
        # Getting the type of 'self' (line 313)
        self_116929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 28), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 313)
        true_poly_116930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 28), self_116929, 'true_poly')
        # Calling true_poly(args, kwargs) (line 313)
        true_poly_call_result_116934 = invoke(stypy.reporting.localization.Localization(__file__, 313, 28), true_poly_116930, *[test_xs_116932], **kwargs_116933)
        
        
        # Call to P(...): (line 313)
        # Processing the call arguments (line 313)
        # Getting the type of 'self' (line 313)
        self_116936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 59), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 313)
        test_xs_116937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 59), self_116936, 'test_xs')
        # Processing the call keyword arguments (line 313)
        kwargs_116938 = {}
        # Getting the type of 'P' (line 313)
        P_116935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 57), 'P', False)
        # Calling P(args, kwargs) (line 313)
        P_call_result_116939 = invoke(stypy.reporting.localization.Localization(__file__, 313, 57), P_116935, *[test_xs_116937], **kwargs_116938)
        
        # Processing the call keyword arguments (line 313)
        kwargs_116940 = {}
        # Getting the type of 'assert_almost_equal' (line 313)
        assert_almost_equal_116928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 313)
        assert_almost_equal_call_result_116941 = invoke(stypy.reporting.localization.Localization(__file__, 313, 8), assert_almost_equal_116928, *[true_poly_call_result_116934, P_call_result_116939], **kwargs_116940)
        
        
        # ################# End of 'test_delayed(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_delayed' in the type store
        # Getting the type of 'stypy_return_type' (line 310)
        stypy_return_type_116942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116942)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_delayed'
        return stypy_return_type_116942


    @norecursion
    def test_append(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_append'
        module_type_store = module_type_store.open_function_context('test_append', 315, 4, False)
        # Assigning a type to the variable 'self' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.test_append.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.test_append.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.test_append.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.test_append.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.test_append')
        TestBarycentric.test_append.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.test_append.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.test_append.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.test_append.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.test_append.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.test_append.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.test_append.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.test_append', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_append', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_append(...)' code ##################

        
        # Assigning a Call to a Name (line 316):
        
        # Assigning a Call to a Name (line 316):
        
        # Call to BarycentricInterpolator(...): (line 316)
        # Processing the call arguments (line 316)
        
        # Obtaining the type of the subscript
        int_116944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 45), 'int')
        slice_116945 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 316, 36), None, int_116944, None)
        # Getting the type of 'self' (line 316)
        self_116946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 36), 'self', False)
        # Obtaining the member 'xs' of a type (line 316)
        xs_116947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 36), self_116946, 'xs')
        # Obtaining the member '__getitem__' of a type (line 316)
        getitem___116948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 36), xs_116947, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 316)
        subscript_call_result_116949 = invoke(stypy.reporting.localization.Localization(__file__, 316, 36), getitem___116948, slice_116945)
        
        
        # Obtaining the type of the subscript
        int_116950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 57), 'int')
        slice_116951 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 316, 48), None, int_116950, None)
        # Getting the type of 'self' (line 316)
        self_116952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 48), 'self', False)
        # Obtaining the member 'ys' of a type (line 316)
        ys_116953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 48), self_116952, 'ys')
        # Obtaining the member '__getitem__' of a type (line 316)
        getitem___116954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 48), ys_116953, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 316)
        subscript_call_result_116955 = invoke(stypy.reporting.localization.Localization(__file__, 316, 48), getitem___116954, slice_116951)
        
        # Processing the call keyword arguments (line 316)
        kwargs_116956 = {}
        # Getting the type of 'BarycentricInterpolator' (line 316)
        BarycentricInterpolator_116943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 12), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 316)
        BarycentricInterpolator_call_result_116957 = invoke(stypy.reporting.localization.Localization(__file__, 316, 12), BarycentricInterpolator_116943, *[subscript_call_result_116949, subscript_call_result_116955], **kwargs_116956)
        
        # Assigning a type to the variable 'P' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 8), 'P', BarycentricInterpolator_call_result_116957)
        
        # Call to add_xi(...): (line 317)
        # Processing the call arguments (line 317)
        
        # Obtaining the type of the subscript
        int_116960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 25), 'int')
        slice_116961 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 317, 17), int_116960, None, None)
        # Getting the type of 'self' (line 317)
        self_116962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 17), 'self', False)
        # Obtaining the member 'xs' of a type (line 317)
        xs_116963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 17), self_116962, 'xs')
        # Obtaining the member '__getitem__' of a type (line 317)
        getitem___116964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 17), xs_116963, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 317)
        subscript_call_result_116965 = invoke(stypy.reporting.localization.Localization(__file__, 317, 17), getitem___116964, slice_116961)
        
        
        # Obtaining the type of the subscript
        int_116966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 37), 'int')
        slice_116967 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 317, 29), int_116966, None, None)
        # Getting the type of 'self' (line 317)
        self_116968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 29), 'self', False)
        # Obtaining the member 'ys' of a type (line 317)
        ys_116969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 29), self_116968, 'ys')
        # Obtaining the member '__getitem__' of a type (line 317)
        getitem___116970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 29), ys_116969, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 317)
        subscript_call_result_116971 = invoke(stypy.reporting.localization.Localization(__file__, 317, 29), getitem___116970, slice_116967)
        
        # Processing the call keyword arguments (line 317)
        kwargs_116972 = {}
        # Getting the type of 'P' (line 317)
        P_116958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'P', False)
        # Obtaining the member 'add_xi' of a type (line 317)
        add_xi_116959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 8), P_116958, 'add_xi')
        # Calling add_xi(args, kwargs) (line 317)
        add_xi_call_result_116973 = invoke(stypy.reporting.localization.Localization(__file__, 317, 8), add_xi_116959, *[subscript_call_result_116965, subscript_call_result_116971], **kwargs_116972)
        
        
        # Call to assert_almost_equal(...): (line 318)
        # Processing the call arguments (line 318)
        
        # Call to true_poly(...): (line 318)
        # Processing the call arguments (line 318)
        # Getting the type of 'self' (line 318)
        self_116977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 43), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 318)
        test_xs_116978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 43), self_116977, 'test_xs')
        # Processing the call keyword arguments (line 318)
        kwargs_116979 = {}
        # Getting the type of 'self' (line 318)
        self_116975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 28), 'self', False)
        # Obtaining the member 'true_poly' of a type (line 318)
        true_poly_116976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 28), self_116975, 'true_poly')
        # Calling true_poly(args, kwargs) (line 318)
        true_poly_call_result_116980 = invoke(stypy.reporting.localization.Localization(__file__, 318, 28), true_poly_116976, *[test_xs_116978], **kwargs_116979)
        
        
        # Call to P(...): (line 318)
        # Processing the call arguments (line 318)
        # Getting the type of 'self' (line 318)
        self_116982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 59), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 318)
        test_xs_116983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 59), self_116982, 'test_xs')
        # Processing the call keyword arguments (line 318)
        kwargs_116984 = {}
        # Getting the type of 'P' (line 318)
        P_116981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 57), 'P', False)
        # Calling P(args, kwargs) (line 318)
        P_call_result_116985 = invoke(stypy.reporting.localization.Localization(__file__, 318, 57), P_116981, *[test_xs_116983], **kwargs_116984)
        
        # Processing the call keyword arguments (line 318)
        kwargs_116986 = {}
        # Getting the type of 'assert_almost_equal' (line 318)
        assert_almost_equal_116974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 318)
        assert_almost_equal_call_result_116987 = invoke(stypy.reporting.localization.Localization(__file__, 318, 8), assert_almost_equal_116974, *[true_poly_call_result_116980, P_call_result_116985], **kwargs_116986)
        
        
        # ################# End of 'test_append(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_append' in the type store
        # Getting the type of 'stypy_return_type' (line 315)
        stypy_return_type_116988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_116988)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_append'
        return stypy_return_type_116988


    @norecursion
    def test_vector(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_vector'
        module_type_store = module_type_store.open_function_context('test_vector', 320, 4, False)
        # Assigning a type to the variable 'self' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.test_vector')
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.test_vector.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.test_vector', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_vector', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_vector(...)' code ##################

        
        # Assigning a List to a Name (line 321):
        
        # Assigning a List to a Name (line 321):
        
        # Obtaining an instance of the builtin type 'list' (line 321)
        list_116989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 321)
        # Adding element type (line 321)
        int_116990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 321, 13), list_116989, int_116990)
        # Adding element type (line 321)
        int_116991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 17), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 321, 13), list_116989, int_116991)
        # Adding element type (line 321)
        int_116992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 321, 13), list_116989, int_116992)
        
        # Assigning a type to the variable 'xs' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 8), 'xs', list_116989)
        
        # Assigning a Call to a Name (line 322):
        
        # Assigning a Call to a Name (line 322):
        
        # Call to array(...): (line 322)
        # Processing the call arguments (line 322)
        
        # Obtaining an instance of the builtin type 'list' (line 322)
        list_116995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 322)
        # Adding element type (line 322)
        
        # Obtaining an instance of the builtin type 'list' (line 322)
        list_116996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 322)
        # Adding element type (line 322)
        int_116997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 23), list_116996, int_116997)
        # Adding element type (line 322)
        int_116998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 23), list_116996, int_116998)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 22), list_116995, list_116996)
        # Adding element type (line 322)
        
        # Obtaining an instance of the builtin type 'list' (line 322)
        list_116999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 322)
        # Adding element type (line 322)
        int_117000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 29), list_116999, int_117000)
        # Adding element type (line 322)
        int_117001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 29), list_116999, int_117001)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 22), list_116995, list_116999)
        # Adding element type (line 322)
        
        # Obtaining an instance of the builtin type 'list' (line 322)
        list_117002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 322)
        # Adding element type (line 322)
        int_117003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 35), list_117002, int_117003)
        # Adding element type (line 322)
        int_117004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 35), list_117002, int_117004)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 22), list_116995, list_117002)
        
        # Processing the call keyword arguments (line 322)
        kwargs_117005 = {}
        # Getting the type of 'np' (line 322)
        np_116993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 322)
        array_116994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 13), np_116993, 'array')
        # Calling array(args, kwargs) (line 322)
        array_call_result_117006 = invoke(stypy.reporting.localization.Localization(__file__, 322, 13), array_116994, *[list_116995], **kwargs_117005)
        
        # Assigning a type to the variable 'ys' (line 322)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 8), 'ys', array_call_result_117006)
        
        # Assigning a Call to a Name (line 323):
        
        # Assigning a Call to a Name (line 323):
        
        # Call to BarycentricInterpolator(...): (line 323)
        # Processing the call arguments (line 323)
        # Getting the type of 'xs' (line 323)
        xs_117008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 36), 'xs', False)
        # Getting the type of 'ys' (line 323)
        ys_117009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 39), 'ys', False)
        # Processing the call keyword arguments (line 323)
        kwargs_117010 = {}
        # Getting the type of 'BarycentricInterpolator' (line 323)
        BarycentricInterpolator_117007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 12), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 323)
        BarycentricInterpolator_call_result_117011 = invoke(stypy.reporting.localization.Localization(__file__, 323, 12), BarycentricInterpolator_117007, *[xs_117008, ys_117009], **kwargs_117010)
        
        # Assigning a type to the variable 'P' (line 323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 323, 8), 'P', BarycentricInterpolator_call_result_117011)
        
        # Assigning a ListComp to a Name (line 324):
        
        # Assigning a ListComp to a Name (line 324):
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to xrange(...): (line 324)
        # Processing the call arguments (line 324)
        
        # Obtaining the type of the subscript
        int_117022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 75), 'int')
        # Getting the type of 'ys' (line 324)
        ys_117023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 66), 'ys', False)
        # Obtaining the member 'shape' of a type (line 324)
        shape_117024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 66), ys_117023, 'shape')
        # Obtaining the member '__getitem__' of a type (line 324)
        getitem___117025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 66), shape_117024, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 324)
        subscript_call_result_117026 = invoke(stypy.reporting.localization.Localization(__file__, 324, 66), getitem___117025, int_117022)
        
        # Processing the call keyword arguments (line 324)
        kwargs_117027 = {}
        # Getting the type of 'xrange' (line 324)
        xrange_117021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 59), 'xrange', False)
        # Calling xrange(args, kwargs) (line 324)
        xrange_call_result_117028 = invoke(stypy.reporting.localization.Localization(__file__, 324, 59), xrange_117021, *[subscript_call_result_117026], **kwargs_117027)
        
        comprehension_117029 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 324, 14), xrange_call_result_117028)
        # Assigning a type to the variable 'i' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 14), 'i', comprehension_117029)
        
        # Call to BarycentricInterpolator(...): (line 324)
        # Processing the call arguments (line 324)
        # Getting the type of 'xs' (line 324)
        xs_117013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 38), 'xs', False)
        
        # Obtaining the type of the subscript
        slice_117014 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 324, 41), None, None, None)
        # Getting the type of 'i' (line 324)
        i_117015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 46), 'i', False)
        # Getting the type of 'ys' (line 324)
        ys_117016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 41), 'ys', False)
        # Obtaining the member '__getitem__' of a type (line 324)
        getitem___117017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 41), ys_117016, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 324)
        subscript_call_result_117018 = invoke(stypy.reporting.localization.Localization(__file__, 324, 41), getitem___117017, (slice_117014, i_117015))
        
        # Processing the call keyword arguments (line 324)
        kwargs_117019 = {}
        # Getting the type of 'BarycentricInterpolator' (line 324)
        BarycentricInterpolator_117012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 14), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 324)
        BarycentricInterpolator_call_result_117020 = invoke(stypy.reporting.localization.Localization(__file__, 324, 14), BarycentricInterpolator_117012, *[xs_117013, subscript_call_result_117018], **kwargs_117019)
        
        list_117030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 14), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 324, 14), list_117030, BarycentricInterpolator_call_result_117020)
        # Assigning a type to the variable 'Pi' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 8), 'Pi', list_117030)
        
        # Assigning a Call to a Name (line 325):
        
        # Assigning a Call to a Name (line 325):
        
        # Call to linspace(...): (line 325)
        # Processing the call arguments (line 325)
        int_117033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 30), 'int')
        int_117034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 33), 'int')
        int_117035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 35), 'int')
        # Processing the call keyword arguments (line 325)
        kwargs_117036 = {}
        # Getting the type of 'np' (line 325)
        np_117031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 18), 'np', False)
        # Obtaining the member 'linspace' of a type (line 325)
        linspace_117032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 18), np_117031, 'linspace')
        # Calling linspace(args, kwargs) (line 325)
        linspace_call_result_117037 = invoke(stypy.reporting.localization.Localization(__file__, 325, 18), linspace_117032, *[int_117033, int_117034, int_117035], **kwargs_117036)
        
        # Assigning a type to the variable 'test_xs' (line 325)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 325, 8), 'test_xs', linspace_call_result_117037)
        
        # Call to assert_almost_equal(...): (line 326)
        # Processing the call arguments (line 326)
        
        # Call to P(...): (line 326)
        # Processing the call arguments (line 326)
        # Getting the type of 'test_xs' (line 326)
        test_xs_117040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 30), 'test_xs', False)
        # Processing the call keyword arguments (line 326)
        kwargs_117041 = {}
        # Getting the type of 'P' (line 326)
        P_117039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 28), 'P', False)
        # Calling P(args, kwargs) (line 326)
        P_call_result_117042 = invoke(stypy.reporting.localization.Localization(__file__, 326, 28), P_117039, *[test_xs_117040], **kwargs_117041)
        
        
        # Call to rollaxis(...): (line 327)
        # Processing the call arguments (line 327)
        
        # Call to asarray(...): (line 327)
        # Processing the call arguments (line 327)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'Pi' (line 327)
        Pi_117051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 60), 'Pi', False)
        comprehension_117052 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 327, 40), Pi_117051)
        # Assigning a type to the variable 'p' (line 327)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 40), 'p', comprehension_117052)
        
        # Call to p(...): (line 327)
        # Processing the call arguments (line 327)
        # Getting the type of 'test_xs' (line 327)
        test_xs_117048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 42), 'test_xs', False)
        # Processing the call keyword arguments (line 327)
        kwargs_117049 = {}
        # Getting the type of 'p' (line 327)
        p_117047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 40), 'p', False)
        # Calling p(args, kwargs) (line 327)
        p_call_result_117050 = invoke(stypy.reporting.localization.Localization(__file__, 327, 40), p_117047, *[test_xs_117048], **kwargs_117049)
        
        list_117053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 40), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 327, 40), list_117053, p_call_result_117050)
        # Processing the call keyword arguments (line 327)
        kwargs_117054 = {}
        # Getting the type of 'np' (line 327)
        np_117045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 28), 'np', False)
        # Obtaining the member 'asarray' of a type (line 327)
        asarray_117046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 28), np_117045, 'asarray')
        # Calling asarray(args, kwargs) (line 327)
        asarray_call_result_117055 = invoke(stypy.reporting.localization.Localization(__file__, 327, 28), asarray_117046, *[list_117053], **kwargs_117054)
        
        int_117056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 65), 'int')
        # Processing the call keyword arguments (line 327)
        kwargs_117057 = {}
        # Getting the type of 'np' (line 327)
        np_117043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 16), 'np', False)
        # Obtaining the member 'rollaxis' of a type (line 327)
        rollaxis_117044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 16), np_117043, 'rollaxis')
        # Calling rollaxis(args, kwargs) (line 327)
        rollaxis_call_result_117058 = invoke(stypy.reporting.localization.Localization(__file__, 327, 16), rollaxis_117044, *[asarray_call_result_117055, int_117056], **kwargs_117057)
        
        # Processing the call keyword arguments (line 326)
        kwargs_117059 = {}
        # Getting the type of 'assert_almost_equal' (line 326)
        assert_almost_equal_117038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 326)
        assert_almost_equal_call_result_117060 = invoke(stypy.reporting.localization.Localization(__file__, 326, 8), assert_almost_equal_117038, *[P_call_result_117042, rollaxis_call_result_117058], **kwargs_117059)
        
        
        # ################# End of 'test_vector(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_vector' in the type store
        # Getting the type of 'stypy_return_type' (line 320)
        stypy_return_type_117061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117061)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_vector'
        return stypy_return_type_117061


    @norecursion
    def test_shapes_scalarvalue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shapes_scalarvalue'
        module_type_store = module_type_store.open_function_context('test_shapes_scalarvalue', 329, 4, False)
        # Assigning a type to the variable 'self' (line 330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.test_shapes_scalarvalue')
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.test_shapes_scalarvalue.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.test_shapes_scalarvalue', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shapes_scalarvalue', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shapes_scalarvalue(...)' code ##################

        
        # Assigning a Call to a Name (line 330):
        
        # Assigning a Call to a Name (line 330):
        
        # Call to BarycentricInterpolator(...): (line 330)
        # Processing the call arguments (line 330)
        # Getting the type of 'self' (line 330)
        self_117063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 36), 'self', False)
        # Obtaining the member 'xs' of a type (line 330)
        xs_117064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 36), self_117063, 'xs')
        # Getting the type of 'self' (line 330)
        self_117065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 44), 'self', False)
        # Obtaining the member 'ys' of a type (line 330)
        ys_117066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 44), self_117065, 'ys')
        # Processing the call keyword arguments (line 330)
        kwargs_117067 = {}
        # Getting the type of 'BarycentricInterpolator' (line 330)
        BarycentricInterpolator_117062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 12), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 330)
        BarycentricInterpolator_call_result_117068 = invoke(stypy.reporting.localization.Localization(__file__, 330, 12), BarycentricInterpolator_117062, *[xs_117064, ys_117066], **kwargs_117067)
        
        # Assigning a type to the variable 'P' (line 330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 8), 'P', BarycentricInterpolator_call_result_117068)
        
        # Call to assert_array_equal(...): (line 331)
        # Processing the call arguments (line 331)
        
        # Call to shape(...): (line 331)
        # Processing the call arguments (line 331)
        
        # Call to P(...): (line 331)
        # Processing the call arguments (line 331)
        int_117073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 38), 'int')
        # Processing the call keyword arguments (line 331)
        kwargs_117074 = {}
        # Getting the type of 'P' (line 331)
        P_117072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 36), 'P', False)
        # Calling P(args, kwargs) (line 331)
        P_call_result_117075 = invoke(stypy.reporting.localization.Localization(__file__, 331, 36), P_117072, *[int_117073], **kwargs_117074)
        
        # Processing the call keyword arguments (line 331)
        kwargs_117076 = {}
        # Getting the type of 'np' (line 331)
        np_117070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 331)
        shape_117071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 331, 27), np_117070, 'shape')
        # Calling shape(args, kwargs) (line 331)
        shape_call_result_117077 = invoke(stypy.reporting.localization.Localization(__file__, 331, 27), shape_117071, *[P_call_result_117075], **kwargs_117076)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 331)
        tuple_117078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 331)
        
        # Processing the call keyword arguments (line 331)
        kwargs_117079 = {}
        # Getting the type of 'assert_array_equal' (line 331)
        assert_array_equal_117069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 331)
        assert_array_equal_call_result_117080 = invoke(stypy.reporting.localization.Localization(__file__, 331, 8), assert_array_equal_117069, *[shape_call_result_117077, tuple_117078], **kwargs_117079)
        
        
        # Call to assert_array_equal(...): (line 332)
        # Processing the call arguments (line 332)
        
        # Call to shape(...): (line 332)
        # Processing the call arguments (line 332)
        
        # Call to P(...): (line 332)
        # Processing the call arguments (line 332)
        
        # Call to array(...): (line 332)
        # Processing the call arguments (line 332)
        int_117087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, 47), 'int')
        # Processing the call keyword arguments (line 332)
        kwargs_117088 = {}
        # Getting the type of 'np' (line 332)
        np_117085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 38), 'np', False)
        # Obtaining the member 'array' of a type (line 332)
        array_117086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 38), np_117085, 'array')
        # Calling array(args, kwargs) (line 332)
        array_call_result_117089 = invoke(stypy.reporting.localization.Localization(__file__, 332, 38), array_117086, *[int_117087], **kwargs_117088)
        
        # Processing the call keyword arguments (line 332)
        kwargs_117090 = {}
        # Getting the type of 'P' (line 332)
        P_117084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 36), 'P', False)
        # Calling P(args, kwargs) (line 332)
        P_call_result_117091 = invoke(stypy.reporting.localization.Localization(__file__, 332, 36), P_117084, *[array_call_result_117089], **kwargs_117090)
        
        # Processing the call keyword arguments (line 332)
        kwargs_117092 = {}
        # Getting the type of 'np' (line 332)
        np_117082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 332)
        shape_117083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 27), np_117082, 'shape')
        # Calling shape(args, kwargs) (line 332)
        shape_call_result_117093 = invoke(stypy.reporting.localization.Localization(__file__, 332, 27), shape_117083, *[P_call_result_117091], **kwargs_117092)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 332)
        tuple_117094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 332)
        
        # Processing the call keyword arguments (line 332)
        kwargs_117095 = {}
        # Getting the type of 'assert_array_equal' (line 332)
        assert_array_equal_117081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 332)
        assert_array_equal_call_result_117096 = invoke(stypy.reporting.localization.Localization(__file__, 332, 8), assert_array_equal_117081, *[shape_call_result_117093, tuple_117094], **kwargs_117095)
        
        
        # Call to assert_array_equal(...): (line 333)
        # Processing the call arguments (line 333)
        
        # Call to shape(...): (line 333)
        # Processing the call arguments (line 333)
        
        # Call to P(...): (line 333)
        # Processing the call arguments (line 333)
        
        # Obtaining an instance of the builtin type 'list' (line 333)
        list_117101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 333)
        # Adding element type (line 333)
        int_117102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 38), list_117101, int_117102)
        
        # Processing the call keyword arguments (line 333)
        kwargs_117103 = {}
        # Getting the type of 'P' (line 333)
        P_117100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 36), 'P', False)
        # Calling P(args, kwargs) (line 333)
        P_call_result_117104 = invoke(stypy.reporting.localization.Localization(__file__, 333, 36), P_117100, *[list_117101], **kwargs_117103)
        
        # Processing the call keyword arguments (line 333)
        kwargs_117105 = {}
        # Getting the type of 'np' (line 333)
        np_117098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 333)
        shape_117099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 27), np_117098, 'shape')
        # Calling shape(args, kwargs) (line 333)
        shape_call_result_117106 = invoke(stypy.reporting.localization.Localization(__file__, 333, 27), shape_117099, *[P_call_result_117104], **kwargs_117105)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 333)
        tuple_117107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 46), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 333)
        # Adding element type (line 333)
        int_117108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 46), tuple_117107, int_117108)
        
        # Processing the call keyword arguments (line 333)
        kwargs_117109 = {}
        # Getting the type of 'assert_array_equal' (line 333)
        assert_array_equal_117097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 333)
        assert_array_equal_call_result_117110 = invoke(stypy.reporting.localization.Localization(__file__, 333, 8), assert_array_equal_117097, *[shape_call_result_117106, tuple_117107], **kwargs_117109)
        
        
        # Call to assert_array_equal(...): (line 334)
        # Processing the call arguments (line 334)
        
        # Call to shape(...): (line 334)
        # Processing the call arguments (line 334)
        
        # Call to P(...): (line 334)
        # Processing the call arguments (line 334)
        
        # Obtaining an instance of the builtin type 'list' (line 334)
        list_117115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 334)
        # Adding element type (line 334)
        int_117116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 334, 38), list_117115, int_117116)
        # Adding element type (line 334)
        int_117117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 334, 38), list_117115, int_117117)
        
        # Processing the call keyword arguments (line 334)
        kwargs_117118 = {}
        # Getting the type of 'P' (line 334)
        P_117114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 36), 'P', False)
        # Calling P(args, kwargs) (line 334)
        P_call_result_117119 = invoke(stypy.reporting.localization.Localization(__file__, 334, 36), P_117114, *[list_117115], **kwargs_117118)
        
        # Processing the call keyword arguments (line 334)
        kwargs_117120 = {}
        # Getting the type of 'np' (line 334)
        np_117112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 334)
        shape_117113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 27), np_117112, 'shape')
        # Calling shape(args, kwargs) (line 334)
        shape_call_result_117121 = invoke(stypy.reporting.localization.Localization(__file__, 334, 27), shape_117113, *[P_call_result_117119], **kwargs_117120)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 334)
        tuple_117122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 334)
        # Adding element type (line 334)
        int_117123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 334, 48), tuple_117122, int_117123)
        
        # Processing the call keyword arguments (line 334)
        kwargs_117124 = {}
        # Getting the type of 'assert_array_equal' (line 334)
        assert_array_equal_117111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 334)
        assert_array_equal_call_result_117125 = invoke(stypy.reporting.localization.Localization(__file__, 334, 8), assert_array_equal_117111, *[shape_call_result_117121, tuple_117122], **kwargs_117124)
        
        
        # ################# End of 'test_shapes_scalarvalue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shapes_scalarvalue' in the type store
        # Getting the type of 'stypy_return_type' (line 329)
        stypy_return_type_117126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117126)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shapes_scalarvalue'
        return stypy_return_type_117126


    @norecursion
    def test_shapes_vectorvalue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shapes_vectorvalue'
        module_type_store = module_type_store.open_function_context('test_shapes_vectorvalue', 336, 4, False)
        # Assigning a type to the variable 'self' (line 337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.test_shapes_vectorvalue')
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.test_shapes_vectorvalue.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.test_shapes_vectorvalue', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shapes_vectorvalue', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shapes_vectorvalue(...)' code ##################

        
        # Assigning a Call to a Name (line 337):
        
        # Assigning a Call to a Name (line 337):
        
        # Call to BarycentricInterpolator(...): (line 337)
        # Processing the call arguments (line 337)
        # Getting the type of 'self' (line 337)
        self_117128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 36), 'self', False)
        # Obtaining the member 'xs' of a type (line 337)
        xs_117129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 36), self_117128, 'xs')
        
        # Call to outer(...): (line 337)
        # Processing the call arguments (line 337)
        # Getting the type of 'self' (line 337)
        self_117132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 53), 'self', False)
        # Obtaining the member 'ys' of a type (line 337)
        ys_117133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 53), self_117132, 'ys')
        
        # Call to arange(...): (line 337)
        # Processing the call arguments (line 337)
        int_117136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 71), 'int')
        # Processing the call keyword arguments (line 337)
        kwargs_117137 = {}
        # Getting the type of 'np' (line 337)
        np_117134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 61), 'np', False)
        # Obtaining the member 'arange' of a type (line 337)
        arange_117135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 61), np_117134, 'arange')
        # Calling arange(args, kwargs) (line 337)
        arange_call_result_117138 = invoke(stypy.reporting.localization.Localization(__file__, 337, 61), arange_117135, *[int_117136], **kwargs_117137)
        
        # Processing the call keyword arguments (line 337)
        kwargs_117139 = {}
        # Getting the type of 'np' (line 337)
        np_117130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 44), 'np', False)
        # Obtaining the member 'outer' of a type (line 337)
        outer_117131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 44), np_117130, 'outer')
        # Calling outer(args, kwargs) (line 337)
        outer_call_result_117140 = invoke(stypy.reporting.localization.Localization(__file__, 337, 44), outer_117131, *[ys_117133, arange_call_result_117138], **kwargs_117139)
        
        # Processing the call keyword arguments (line 337)
        kwargs_117141 = {}
        # Getting the type of 'BarycentricInterpolator' (line 337)
        BarycentricInterpolator_117127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 337)
        BarycentricInterpolator_call_result_117142 = invoke(stypy.reporting.localization.Localization(__file__, 337, 12), BarycentricInterpolator_117127, *[xs_117129, outer_call_result_117140], **kwargs_117141)
        
        # Assigning a type to the variable 'P' (line 337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 8), 'P', BarycentricInterpolator_call_result_117142)
        
        # Call to assert_array_equal(...): (line 338)
        # Processing the call arguments (line 338)
        
        # Call to shape(...): (line 338)
        # Processing the call arguments (line 338)
        
        # Call to P(...): (line 338)
        # Processing the call arguments (line 338)
        int_117147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 338, 38), 'int')
        # Processing the call keyword arguments (line 338)
        kwargs_117148 = {}
        # Getting the type of 'P' (line 338)
        P_117146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 36), 'P', False)
        # Calling P(args, kwargs) (line 338)
        P_call_result_117149 = invoke(stypy.reporting.localization.Localization(__file__, 338, 36), P_117146, *[int_117147], **kwargs_117148)
        
        # Processing the call keyword arguments (line 338)
        kwargs_117150 = {}
        # Getting the type of 'np' (line 338)
        np_117144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 338)
        shape_117145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 27), np_117144, 'shape')
        # Calling shape(args, kwargs) (line 338)
        shape_call_result_117151 = invoke(stypy.reporting.localization.Localization(__file__, 338, 27), shape_117145, *[P_call_result_117149], **kwargs_117150)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 338)
        tuple_117152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 338, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 338)
        # Adding element type (line 338)
        int_117153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 338, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 338, 44), tuple_117152, int_117153)
        
        # Processing the call keyword arguments (line 338)
        kwargs_117154 = {}
        # Getting the type of 'assert_array_equal' (line 338)
        assert_array_equal_117143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 338)
        assert_array_equal_call_result_117155 = invoke(stypy.reporting.localization.Localization(__file__, 338, 8), assert_array_equal_117143, *[shape_call_result_117151, tuple_117152], **kwargs_117154)
        
        
        # Call to assert_array_equal(...): (line 339)
        # Processing the call arguments (line 339)
        
        # Call to shape(...): (line 339)
        # Processing the call arguments (line 339)
        
        # Call to P(...): (line 339)
        # Processing the call arguments (line 339)
        
        # Obtaining an instance of the builtin type 'list' (line 339)
        list_117160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 339)
        # Adding element type (line 339)
        int_117161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 339, 38), list_117160, int_117161)
        
        # Processing the call keyword arguments (line 339)
        kwargs_117162 = {}
        # Getting the type of 'P' (line 339)
        P_117159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 36), 'P', False)
        # Calling P(args, kwargs) (line 339)
        P_call_result_117163 = invoke(stypy.reporting.localization.Localization(__file__, 339, 36), P_117159, *[list_117160], **kwargs_117162)
        
        # Processing the call keyword arguments (line 339)
        kwargs_117164 = {}
        # Getting the type of 'np' (line 339)
        np_117157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 339)
        shape_117158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 27), np_117157, 'shape')
        # Calling shape(args, kwargs) (line 339)
        shape_call_result_117165 = invoke(stypy.reporting.localization.Localization(__file__, 339, 27), shape_117158, *[P_call_result_117163], **kwargs_117164)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 339)
        tuple_117166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, 46), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 339)
        # Adding element type (line 339)
        int_117167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 339, 46), tuple_117166, int_117167)
        # Adding element type (line 339)
        int_117168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 339, 46), tuple_117166, int_117168)
        
        # Processing the call keyword arguments (line 339)
        kwargs_117169 = {}
        # Getting the type of 'assert_array_equal' (line 339)
        assert_array_equal_117156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 339)
        assert_array_equal_call_result_117170 = invoke(stypy.reporting.localization.Localization(__file__, 339, 8), assert_array_equal_117156, *[shape_call_result_117165, tuple_117166], **kwargs_117169)
        
        
        # Call to assert_array_equal(...): (line 340)
        # Processing the call arguments (line 340)
        
        # Call to shape(...): (line 340)
        # Processing the call arguments (line 340)
        
        # Call to P(...): (line 340)
        # Processing the call arguments (line 340)
        
        # Obtaining an instance of the builtin type 'list' (line 340)
        list_117175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 340)
        # Adding element type (line 340)
        int_117176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 38), list_117175, int_117176)
        # Adding element type (line 340)
        int_117177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 38), list_117175, int_117177)
        
        # Processing the call keyword arguments (line 340)
        kwargs_117178 = {}
        # Getting the type of 'P' (line 340)
        P_117174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 36), 'P', False)
        # Calling P(args, kwargs) (line 340)
        P_call_result_117179 = invoke(stypy.reporting.localization.Localization(__file__, 340, 36), P_117174, *[list_117175], **kwargs_117178)
        
        # Processing the call keyword arguments (line 340)
        kwargs_117180 = {}
        # Getting the type of 'np' (line 340)
        np_117172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 340)
        shape_117173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 27), np_117172, 'shape')
        # Calling shape(args, kwargs) (line 340)
        shape_call_result_117181 = invoke(stypy.reporting.localization.Localization(__file__, 340, 27), shape_117173, *[P_call_result_117179], **kwargs_117180)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 340)
        tuple_117182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 340)
        # Adding element type (line 340)
        int_117183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 48), tuple_117182, int_117183)
        # Adding element type (line 340)
        int_117184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 48), tuple_117182, int_117184)
        
        # Processing the call keyword arguments (line 340)
        kwargs_117185 = {}
        # Getting the type of 'assert_array_equal' (line 340)
        assert_array_equal_117171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 340)
        assert_array_equal_call_result_117186 = invoke(stypy.reporting.localization.Localization(__file__, 340, 8), assert_array_equal_117171, *[shape_call_result_117181, tuple_117182], **kwargs_117185)
        
        
        # ################# End of 'test_shapes_vectorvalue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shapes_vectorvalue' in the type store
        # Getting the type of 'stypy_return_type' (line 336)
        stypy_return_type_117187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117187)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shapes_vectorvalue'
        return stypy_return_type_117187


    @norecursion
    def test_shapes_1d_vectorvalue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_shapes_1d_vectorvalue'
        module_type_store = module_type_store.open_function_context('test_shapes_1d_vectorvalue', 342, 4, False)
        # Assigning a type to the variable 'self' (line 343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.test_shapes_1d_vectorvalue')
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.test_shapes_1d_vectorvalue.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.test_shapes_1d_vectorvalue', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_shapes_1d_vectorvalue', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_shapes_1d_vectorvalue(...)' code ##################

        
        # Assigning a Call to a Name (line 343):
        
        # Assigning a Call to a Name (line 343):
        
        # Call to BarycentricInterpolator(...): (line 343)
        # Processing the call arguments (line 343)
        # Getting the type of 'self' (line 343)
        self_117189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 36), 'self', False)
        # Obtaining the member 'xs' of a type (line 343)
        xs_117190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 36), self_117189, 'xs')
        
        # Call to outer(...): (line 343)
        # Processing the call arguments (line 343)
        # Getting the type of 'self' (line 343)
        self_117193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 53), 'self', False)
        # Obtaining the member 'ys' of a type (line 343)
        ys_117194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 53), self_117193, 'ys')
        
        # Obtaining an instance of the builtin type 'list' (line 343)
        list_117195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 343)
        # Adding element type (line 343)
        int_117196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 343, 61), list_117195, int_117196)
        
        # Processing the call keyword arguments (line 343)
        kwargs_117197 = {}
        # Getting the type of 'np' (line 343)
        np_117191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 44), 'np', False)
        # Obtaining the member 'outer' of a type (line 343)
        outer_117192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 44), np_117191, 'outer')
        # Calling outer(args, kwargs) (line 343)
        outer_call_result_117198 = invoke(stypy.reporting.localization.Localization(__file__, 343, 44), outer_117192, *[ys_117194, list_117195], **kwargs_117197)
        
        # Processing the call keyword arguments (line 343)
        kwargs_117199 = {}
        # Getting the type of 'BarycentricInterpolator' (line 343)
        BarycentricInterpolator_117188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 12), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 343)
        BarycentricInterpolator_call_result_117200 = invoke(stypy.reporting.localization.Localization(__file__, 343, 12), BarycentricInterpolator_117188, *[xs_117190, outer_call_result_117198], **kwargs_117199)
        
        # Assigning a type to the variable 'P' (line 343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 8), 'P', BarycentricInterpolator_call_result_117200)
        
        # Call to assert_array_equal(...): (line 344)
        # Processing the call arguments (line 344)
        
        # Call to shape(...): (line 344)
        # Processing the call arguments (line 344)
        
        # Call to P(...): (line 344)
        # Processing the call arguments (line 344)
        int_117205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 38), 'int')
        # Processing the call keyword arguments (line 344)
        kwargs_117206 = {}
        # Getting the type of 'P' (line 344)
        P_117204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 36), 'P', False)
        # Calling P(args, kwargs) (line 344)
        P_call_result_117207 = invoke(stypy.reporting.localization.Localization(__file__, 344, 36), P_117204, *[int_117205], **kwargs_117206)
        
        # Processing the call keyword arguments (line 344)
        kwargs_117208 = {}
        # Getting the type of 'np' (line 344)
        np_117202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 344)
        shape_117203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 27), np_117202, 'shape')
        # Calling shape(args, kwargs) (line 344)
        shape_call_result_117209 = invoke(stypy.reporting.localization.Localization(__file__, 344, 27), shape_117203, *[P_call_result_117207], **kwargs_117208)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 344)
        tuple_117210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 344)
        # Adding element type (line 344)
        int_117211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 344, 44), tuple_117210, int_117211)
        
        # Processing the call keyword arguments (line 344)
        kwargs_117212 = {}
        # Getting the type of 'assert_array_equal' (line 344)
        assert_array_equal_117201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 344)
        assert_array_equal_call_result_117213 = invoke(stypy.reporting.localization.Localization(__file__, 344, 8), assert_array_equal_117201, *[shape_call_result_117209, tuple_117210], **kwargs_117212)
        
        
        # Call to assert_array_equal(...): (line 345)
        # Processing the call arguments (line 345)
        
        # Call to shape(...): (line 345)
        # Processing the call arguments (line 345)
        
        # Call to P(...): (line 345)
        # Processing the call arguments (line 345)
        
        # Obtaining an instance of the builtin type 'list' (line 345)
        list_117218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 345)
        # Adding element type (line 345)
        int_117219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 345, 38), list_117218, int_117219)
        
        # Processing the call keyword arguments (line 345)
        kwargs_117220 = {}
        # Getting the type of 'P' (line 345)
        P_117217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 36), 'P', False)
        # Calling P(args, kwargs) (line 345)
        P_call_result_117221 = invoke(stypy.reporting.localization.Localization(__file__, 345, 36), P_117217, *[list_117218], **kwargs_117220)
        
        # Processing the call keyword arguments (line 345)
        kwargs_117222 = {}
        # Getting the type of 'np' (line 345)
        np_117215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 345)
        shape_117216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 27), np_117215, 'shape')
        # Calling shape(args, kwargs) (line 345)
        shape_call_result_117223 = invoke(stypy.reporting.localization.Localization(__file__, 345, 27), shape_117216, *[P_call_result_117221], **kwargs_117222)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 345)
        tuple_117224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 46), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 345)
        # Adding element type (line 345)
        int_117225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 345, 46), tuple_117224, int_117225)
        # Adding element type (line 345)
        int_117226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 345, 46), tuple_117224, int_117226)
        
        # Processing the call keyword arguments (line 345)
        kwargs_117227 = {}
        # Getting the type of 'assert_array_equal' (line 345)
        assert_array_equal_117214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 345)
        assert_array_equal_call_result_117228 = invoke(stypy.reporting.localization.Localization(__file__, 345, 8), assert_array_equal_117214, *[shape_call_result_117223, tuple_117224], **kwargs_117227)
        
        
        # Call to assert_array_equal(...): (line 346)
        # Processing the call arguments (line 346)
        
        # Call to shape(...): (line 346)
        # Processing the call arguments (line 346)
        
        # Call to P(...): (line 346)
        # Processing the call arguments (line 346)
        
        # Obtaining an instance of the builtin type 'list' (line 346)
        list_117233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 346)
        # Adding element type (line 346)
        int_117234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 346, 38), list_117233, int_117234)
        # Adding element type (line 346)
        int_117235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 346, 38), list_117233, int_117235)
        
        # Processing the call keyword arguments (line 346)
        kwargs_117236 = {}
        # Getting the type of 'P' (line 346)
        P_117232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 36), 'P', False)
        # Calling P(args, kwargs) (line 346)
        P_call_result_117237 = invoke(stypy.reporting.localization.Localization(__file__, 346, 36), P_117232, *[list_117233], **kwargs_117236)
        
        # Processing the call keyword arguments (line 346)
        kwargs_117238 = {}
        # Getting the type of 'np' (line 346)
        np_117230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 27), 'np', False)
        # Obtaining the member 'shape' of a type (line 346)
        shape_117231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 346, 27), np_117230, 'shape')
        # Calling shape(args, kwargs) (line 346)
        shape_call_result_117239 = invoke(stypy.reporting.localization.Localization(__file__, 346, 27), shape_117231, *[P_call_result_117237], **kwargs_117238)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 346)
        tuple_117240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 346)
        # Adding element type (line 346)
        int_117241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 346, 48), tuple_117240, int_117241)
        # Adding element type (line 346)
        int_117242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 346, 48), tuple_117240, int_117242)
        
        # Processing the call keyword arguments (line 346)
        kwargs_117243 = {}
        # Getting the type of 'assert_array_equal' (line 346)
        assert_array_equal_117229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 346)
        assert_array_equal_call_result_117244 = invoke(stypy.reporting.localization.Localization(__file__, 346, 8), assert_array_equal_117229, *[shape_call_result_117239, tuple_117240], **kwargs_117243)
        
        
        # ################# End of 'test_shapes_1d_vectorvalue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_shapes_1d_vectorvalue' in the type store
        # Getting the type of 'stypy_return_type' (line 342)
        stypy_return_type_117245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117245)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_shapes_1d_vectorvalue'
        return stypy_return_type_117245


    @norecursion
    def test_wrapper(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrapper'
        module_type_store = module_type_store.open_function_context('test_wrapper', 348, 4, False)
        # Assigning a type to the variable 'self' (line 349)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_localization', localization)
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_function_name', 'TestBarycentric.test_wrapper')
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_param_names_list', [])
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBarycentric.test_wrapper.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.test_wrapper', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrapper', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrapper(...)' code ##################

        
        # Assigning a Call to a Name (line 349):
        
        # Assigning a Call to a Name (line 349):
        
        # Call to BarycentricInterpolator(...): (line 349)
        # Processing the call arguments (line 349)
        # Getting the type of 'self' (line 349)
        self_117247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 36), 'self', False)
        # Obtaining the member 'xs' of a type (line 349)
        xs_117248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 36), self_117247, 'xs')
        # Getting the type of 'self' (line 349)
        self_117249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 44), 'self', False)
        # Obtaining the member 'ys' of a type (line 349)
        ys_117250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 44), self_117249, 'ys')
        # Processing the call keyword arguments (line 349)
        kwargs_117251 = {}
        # Getting the type of 'BarycentricInterpolator' (line 349)
        BarycentricInterpolator_117246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 12), 'BarycentricInterpolator', False)
        # Calling BarycentricInterpolator(args, kwargs) (line 349)
        BarycentricInterpolator_call_result_117252 = invoke(stypy.reporting.localization.Localization(__file__, 349, 12), BarycentricInterpolator_117246, *[xs_117248, ys_117250], **kwargs_117251)
        
        # Assigning a type to the variable 'P' (line 349)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 8), 'P', BarycentricInterpolator_call_result_117252)
        
        # Call to assert_almost_equal(...): (line 350)
        # Processing the call arguments (line 350)
        
        # Call to P(...): (line 350)
        # Processing the call arguments (line 350)
        # Getting the type of 'self' (line 350)
        self_117255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 30), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 350)
        test_xs_117256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 30), self_117255, 'test_xs')
        # Processing the call keyword arguments (line 350)
        kwargs_117257 = {}
        # Getting the type of 'P' (line 350)
        P_117254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 28), 'P', False)
        # Calling P(args, kwargs) (line 350)
        P_call_result_117258 = invoke(stypy.reporting.localization.Localization(__file__, 350, 28), P_117254, *[test_xs_117256], **kwargs_117257)
        
        
        # Call to barycentric_interpolate(...): (line 350)
        # Processing the call arguments (line 350)
        # Getting the type of 'self' (line 350)
        self_117260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 68), 'self', False)
        # Obtaining the member 'xs' of a type (line 350)
        xs_117261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 68), self_117260, 'xs')
        # Getting the type of 'self' (line 350)
        self_117262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 76), 'self', False)
        # Obtaining the member 'ys' of a type (line 350)
        ys_117263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 76), self_117262, 'ys')
        # Getting the type of 'self' (line 350)
        self_117264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 84), 'self', False)
        # Obtaining the member 'test_xs' of a type (line 350)
        test_xs_117265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 84), self_117264, 'test_xs')
        # Processing the call keyword arguments (line 350)
        kwargs_117266 = {}
        # Getting the type of 'barycentric_interpolate' (line 350)
        barycentric_interpolate_117259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 44), 'barycentric_interpolate', False)
        # Calling barycentric_interpolate(args, kwargs) (line 350)
        barycentric_interpolate_call_result_117267 = invoke(stypy.reporting.localization.Localization(__file__, 350, 44), barycentric_interpolate_117259, *[xs_117261, ys_117263, test_xs_117265], **kwargs_117266)
        
        # Processing the call keyword arguments (line 350)
        kwargs_117268 = {}
        # Getting the type of 'assert_almost_equal' (line 350)
        assert_almost_equal_117253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 350)
        assert_almost_equal_call_result_117269 = invoke(stypy.reporting.localization.Localization(__file__, 350, 8), assert_almost_equal_117253, *[P_call_result_117258, barycentric_interpolate_call_result_117267], **kwargs_117268)
        
        
        # ################# End of 'test_wrapper(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrapper' in the type store
        # Getting the type of 'stypy_return_type' (line 348)
        stypy_return_type_117270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117270)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrapper'
        return stypy_return_type_117270


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 294, 0, False)
        # Assigning a type to the variable 'self' (line 295)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 295, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBarycentric.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestBarycentric' (line 294)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 0), 'TestBarycentric', TestBarycentric)
# Declaration of the 'TestPCHIP' class

class TestPCHIP(object, ):

    @norecursion
    def _make_random(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_117271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 32), 'int')
        defaults = [int_117271]
        # Create a new context for function '_make_random'
        module_type_store = module_type_store.open_function_context('_make_random', 354, 4, False)
        # Assigning a type to the variable 'self' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP._make_random.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP._make_random.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP._make_random.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP._make_random.__dict__.__setitem__('stypy_function_name', 'TestPCHIP._make_random')
        TestPCHIP._make_random.__dict__.__setitem__('stypy_param_names_list', ['npts'])
        TestPCHIP._make_random.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP._make_random.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP._make_random.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP._make_random.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP._make_random.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP._make_random.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP._make_random', ['npts'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_make_random', localization, ['npts'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_make_random(...)' code ##################

        
        # Call to seed(...): (line 355)
        # Processing the call arguments (line 355)
        int_117275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 355, 23), 'int')
        # Processing the call keyword arguments (line 355)
        kwargs_117276 = {}
        # Getting the type of 'np' (line 355)
        np_117272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 355)
        random_117273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 8), np_117272, 'random')
        # Obtaining the member 'seed' of a type (line 355)
        seed_117274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 8), random_117273, 'seed')
        # Calling seed(args, kwargs) (line 355)
        seed_call_result_117277 = invoke(stypy.reporting.localization.Localization(__file__, 355, 8), seed_117274, *[int_117275], **kwargs_117276)
        
        
        # Assigning a Call to a Name (line 356):
        
        # Assigning a Call to a Name (line 356):
        
        # Call to sort(...): (line 356)
        # Processing the call arguments (line 356)
        
        # Call to random(...): (line 356)
        # Processing the call arguments (line 356)
        # Getting the type of 'npts' (line 356)
        npts_117283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 38), 'npts', False)
        # Processing the call keyword arguments (line 356)
        kwargs_117284 = {}
        # Getting the type of 'np' (line 356)
        np_117280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 21), 'np', False)
        # Obtaining the member 'random' of a type (line 356)
        random_117281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 21), np_117280, 'random')
        # Obtaining the member 'random' of a type (line 356)
        random_117282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 21), random_117281, 'random')
        # Calling random(args, kwargs) (line 356)
        random_call_result_117285 = invoke(stypy.reporting.localization.Localization(__file__, 356, 21), random_117282, *[npts_117283], **kwargs_117284)
        
        # Processing the call keyword arguments (line 356)
        kwargs_117286 = {}
        # Getting the type of 'np' (line 356)
        np_117278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 13), 'np', False)
        # Obtaining the member 'sort' of a type (line 356)
        sort_117279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 13), np_117278, 'sort')
        # Calling sort(args, kwargs) (line 356)
        sort_call_result_117287 = invoke(stypy.reporting.localization.Localization(__file__, 356, 13), sort_117279, *[random_call_result_117285], **kwargs_117286)
        
        # Assigning a type to the variable 'xi' (line 356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'xi', sort_call_result_117287)
        
        # Assigning a Call to a Name (line 357):
        
        # Assigning a Call to a Name (line 357):
        
        # Call to random(...): (line 357)
        # Processing the call arguments (line 357)
        # Getting the type of 'npts' (line 357)
        npts_117291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'npts', False)
        # Processing the call keyword arguments (line 357)
        kwargs_117292 = {}
        # Getting the type of 'np' (line 357)
        np_117288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 13), 'np', False)
        # Obtaining the member 'random' of a type (line 357)
        random_117289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 13), np_117288, 'random')
        # Obtaining the member 'random' of a type (line 357)
        random_117290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 13), random_117289, 'random')
        # Calling random(args, kwargs) (line 357)
        random_call_result_117293 = invoke(stypy.reporting.localization.Localization(__file__, 357, 13), random_117290, *[npts_117291], **kwargs_117292)
        
        # Assigning a type to the variable 'yi' (line 357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 8), 'yi', random_call_result_117293)
        
        # Obtaining an instance of the builtin type 'tuple' (line 358)
        tuple_117294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 358)
        # Adding element type (line 358)
        
        # Call to pchip(...): (line 358)
        # Processing the call arguments (line 358)
        # Getting the type of 'xi' (line 358)
        xi_117296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 21), 'xi', False)
        # Getting the type of 'yi' (line 358)
        yi_117297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 25), 'yi', False)
        # Processing the call keyword arguments (line 358)
        kwargs_117298 = {}
        # Getting the type of 'pchip' (line 358)
        pchip_117295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 15), 'pchip', False)
        # Calling pchip(args, kwargs) (line 358)
        pchip_call_result_117299 = invoke(stypy.reporting.localization.Localization(__file__, 358, 15), pchip_117295, *[xi_117296, yi_117297], **kwargs_117298)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 15), tuple_117294, pchip_call_result_117299)
        # Adding element type (line 358)
        # Getting the type of 'xi' (line 358)
        xi_117300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 30), 'xi')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 15), tuple_117294, xi_117300)
        # Adding element type (line 358)
        # Getting the type of 'yi' (line 358)
        yi_117301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 34), 'yi')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 15), tuple_117294, yi_117301)
        
        # Assigning a type to the variable 'stypy_return_type' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 8), 'stypy_return_type', tuple_117294)
        
        # ################# End of '_make_random(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_make_random' in the type store
        # Getting the type of 'stypy_return_type' (line 354)
        stypy_return_type_117302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117302)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_make_random'
        return stypy_return_type_117302


    @norecursion
    def test_overshoot(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_overshoot'
        module_type_store = module_type_store.open_function_context('test_overshoot', 360, 4, False)
        # Assigning a type to the variable 'self' (line 361)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_function_name', 'TestPCHIP.test_overshoot')
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_param_names_list', [])
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP.test_overshoot.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.test_overshoot', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_overshoot', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_overshoot(...)' code ##################

        
        # Assigning a Call to a Tuple (line 362):
        
        # Assigning a Subscript to a Name (line 362):
        
        # Obtaining the type of the subscript
        int_117303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 8), 'int')
        
        # Call to _make_random(...): (line 362)
        # Processing the call keyword arguments (line 362)
        kwargs_117306 = {}
        # Getting the type of 'self' (line 362)
        self_117304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 20), 'self', False)
        # Obtaining the member '_make_random' of a type (line 362)
        _make_random_117305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 20), self_117304, '_make_random')
        # Calling _make_random(args, kwargs) (line 362)
        _make_random_call_result_117307 = invoke(stypy.reporting.localization.Localization(__file__, 362, 20), _make_random_117305, *[], **kwargs_117306)
        
        # Obtaining the member '__getitem__' of a type (line 362)
        getitem___117308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 8), _make_random_call_result_117307, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 362)
        subscript_call_result_117309 = invoke(stypy.reporting.localization.Localization(__file__, 362, 8), getitem___117308, int_117303)
        
        # Assigning a type to the variable 'tuple_var_assignment_115234' (line 362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'tuple_var_assignment_115234', subscript_call_result_117309)
        
        # Assigning a Subscript to a Name (line 362):
        
        # Obtaining the type of the subscript
        int_117310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 8), 'int')
        
        # Call to _make_random(...): (line 362)
        # Processing the call keyword arguments (line 362)
        kwargs_117313 = {}
        # Getting the type of 'self' (line 362)
        self_117311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 20), 'self', False)
        # Obtaining the member '_make_random' of a type (line 362)
        _make_random_117312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 20), self_117311, '_make_random')
        # Calling _make_random(args, kwargs) (line 362)
        _make_random_call_result_117314 = invoke(stypy.reporting.localization.Localization(__file__, 362, 20), _make_random_117312, *[], **kwargs_117313)
        
        # Obtaining the member '__getitem__' of a type (line 362)
        getitem___117315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 8), _make_random_call_result_117314, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 362)
        subscript_call_result_117316 = invoke(stypy.reporting.localization.Localization(__file__, 362, 8), getitem___117315, int_117310)
        
        # Assigning a type to the variable 'tuple_var_assignment_115235' (line 362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'tuple_var_assignment_115235', subscript_call_result_117316)
        
        # Assigning a Subscript to a Name (line 362):
        
        # Obtaining the type of the subscript
        int_117317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 8), 'int')
        
        # Call to _make_random(...): (line 362)
        # Processing the call keyword arguments (line 362)
        kwargs_117320 = {}
        # Getting the type of 'self' (line 362)
        self_117318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 20), 'self', False)
        # Obtaining the member '_make_random' of a type (line 362)
        _make_random_117319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 20), self_117318, '_make_random')
        # Calling _make_random(args, kwargs) (line 362)
        _make_random_call_result_117321 = invoke(stypy.reporting.localization.Localization(__file__, 362, 20), _make_random_117319, *[], **kwargs_117320)
        
        # Obtaining the member '__getitem__' of a type (line 362)
        getitem___117322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 8), _make_random_call_result_117321, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 362)
        subscript_call_result_117323 = invoke(stypy.reporting.localization.Localization(__file__, 362, 8), getitem___117322, int_117317)
        
        # Assigning a type to the variable 'tuple_var_assignment_115236' (line 362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'tuple_var_assignment_115236', subscript_call_result_117323)
        
        # Assigning a Name to a Name (line 362):
        # Getting the type of 'tuple_var_assignment_115234' (line 362)
        tuple_var_assignment_115234_117324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'tuple_var_assignment_115234')
        # Assigning a type to the variable 'p' (line 362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'p', tuple_var_assignment_115234_117324)
        
        # Assigning a Name to a Name (line 362):
        # Getting the type of 'tuple_var_assignment_115235' (line 362)
        tuple_var_assignment_115235_117325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'tuple_var_assignment_115235')
        # Assigning a type to the variable 'xi' (line 362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 11), 'xi', tuple_var_assignment_115235_117325)
        
        # Assigning a Name to a Name (line 362):
        # Getting the type of 'tuple_var_assignment_115236' (line 362)
        tuple_var_assignment_115236_117326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'tuple_var_assignment_115236')
        # Assigning a type to the variable 'yi' (line 362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 15), 'yi', tuple_var_assignment_115236_117326)
        
        
        # Call to range(...): (line 363)
        # Processing the call arguments (line 363)
        
        # Call to len(...): (line 363)
        # Processing the call arguments (line 363)
        # Getting the type of 'xi' (line 363)
        xi_117329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 27), 'xi', False)
        # Processing the call keyword arguments (line 363)
        kwargs_117330 = {}
        # Getting the type of 'len' (line 363)
        len_117328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 23), 'len', False)
        # Calling len(args, kwargs) (line 363)
        len_call_result_117331 = invoke(stypy.reporting.localization.Localization(__file__, 363, 23), len_117328, *[xi_117329], **kwargs_117330)
        
        int_117332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 31), 'int')
        # Applying the binary operator '-' (line 363)
        result_sub_117333 = python_operator(stypy.reporting.localization.Localization(__file__, 363, 23), '-', len_call_result_117331, int_117332)
        
        # Processing the call keyword arguments (line 363)
        kwargs_117334 = {}
        # Getting the type of 'range' (line 363)
        range_117327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 17), 'range', False)
        # Calling range(args, kwargs) (line 363)
        range_call_result_117335 = invoke(stypy.reporting.localization.Localization(__file__, 363, 17), range_117327, *[result_sub_117333], **kwargs_117334)
        
        # Testing the type of a for loop iterable (line 363)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 363, 8), range_call_result_117335)
        # Getting the type of the for loop variable (line 363)
        for_loop_var_117336 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 363, 8), range_call_result_117335)
        # Assigning a type to the variable 'i' (line 363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 8), 'i', for_loop_var_117336)
        # SSA begins for a for statement (line 363)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Tuple to a Tuple (line 364):
        
        # Assigning a Subscript to a Name (line 364):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 364)
        i_117337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 24), 'i')
        # Getting the type of 'xi' (line 364)
        xi_117338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 21), 'xi')
        # Obtaining the member '__getitem__' of a type (line 364)
        getitem___117339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 21), xi_117338, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 364)
        subscript_call_result_117340 = invoke(stypy.reporting.localization.Localization(__file__, 364, 21), getitem___117339, i_117337)
        
        # Assigning a type to the variable 'tuple_assignment_115237' (line 364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'tuple_assignment_115237', subscript_call_result_117340)
        
        # Assigning a Subscript to a Name (line 364):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 364)
        i_117341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 31), 'i')
        int_117342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 33), 'int')
        # Applying the binary operator '+' (line 364)
        result_add_117343 = python_operator(stypy.reporting.localization.Localization(__file__, 364, 31), '+', i_117341, int_117342)
        
        # Getting the type of 'xi' (line 364)
        xi_117344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 28), 'xi')
        # Obtaining the member '__getitem__' of a type (line 364)
        getitem___117345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 28), xi_117344, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 364)
        subscript_call_result_117346 = invoke(stypy.reporting.localization.Localization(__file__, 364, 28), getitem___117345, result_add_117343)
        
        # Assigning a type to the variable 'tuple_assignment_115238' (line 364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'tuple_assignment_115238', subscript_call_result_117346)
        
        # Assigning a Name to a Name (line 364):
        # Getting the type of 'tuple_assignment_115237' (line 364)
        tuple_assignment_115237_117347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'tuple_assignment_115237')
        # Assigning a type to the variable 'x1' (line 364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'x1', tuple_assignment_115237_117347)
        
        # Assigning a Name to a Name (line 364):
        # Getting the type of 'tuple_assignment_115238' (line 364)
        tuple_assignment_115238_117348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'tuple_assignment_115238')
        # Assigning a type to the variable 'x2' (line 364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 16), 'x2', tuple_assignment_115238_117348)
        
        # Assigning a Tuple to a Tuple (line 365):
        
        # Assigning a Subscript to a Name (line 365):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 365)
        i_117349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 24), 'i')
        # Getting the type of 'yi' (line 365)
        yi_117350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 21), 'yi')
        # Obtaining the member '__getitem__' of a type (line 365)
        getitem___117351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 21), yi_117350, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 365)
        subscript_call_result_117352 = invoke(stypy.reporting.localization.Localization(__file__, 365, 21), getitem___117351, i_117349)
        
        # Assigning a type to the variable 'tuple_assignment_115239' (line 365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 365, 12), 'tuple_assignment_115239', subscript_call_result_117352)
        
        # Assigning a Subscript to a Name (line 365):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 365)
        i_117353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 31), 'i')
        int_117354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 33), 'int')
        # Applying the binary operator '+' (line 365)
        result_add_117355 = python_operator(stypy.reporting.localization.Localization(__file__, 365, 31), '+', i_117353, int_117354)
        
        # Getting the type of 'yi' (line 365)
        yi_117356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 28), 'yi')
        # Obtaining the member '__getitem__' of a type (line 365)
        getitem___117357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 28), yi_117356, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 365)
        subscript_call_result_117358 = invoke(stypy.reporting.localization.Localization(__file__, 365, 28), getitem___117357, result_add_117355)
        
        # Assigning a type to the variable 'tuple_assignment_115240' (line 365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 365, 12), 'tuple_assignment_115240', subscript_call_result_117358)
        
        # Assigning a Name to a Name (line 365):
        # Getting the type of 'tuple_assignment_115239' (line 365)
        tuple_assignment_115239_117359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 12), 'tuple_assignment_115239')
        # Assigning a type to the variable 'y1' (line 365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 365, 12), 'y1', tuple_assignment_115239_117359)
        
        # Assigning a Name to a Name (line 365):
        # Getting the type of 'tuple_assignment_115240' (line 365)
        tuple_assignment_115240_117360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 12), 'tuple_assignment_115240')
        # Assigning a type to the variable 'y2' (line 365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 365, 16), 'y2', tuple_assignment_115240_117360)
        
        
        # Getting the type of 'y1' (line 366)
        y1_117361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 15), 'y1')
        # Getting the type of 'y2' (line 366)
        y2_117362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 20), 'y2')
        # Applying the binary operator '>' (line 366)
        result_gt_117363 = python_operator(stypy.reporting.localization.Localization(__file__, 366, 15), '>', y1_117361, y2_117362)
        
        # Testing the type of an if condition (line 366)
        if_condition_117364 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 366, 12), result_gt_117363)
        # Assigning a type to the variable 'if_condition_117364' (line 366)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 12), 'if_condition_117364', if_condition_117364)
        # SSA begins for if statement (line 366)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 367):
        
        # Assigning a Name to a Name (line 367):
        # Getting the type of 'y2' (line 367)
        y2_117365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 25), 'y2')
        # Assigning a type to the variable 'tuple_assignment_115241' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 16), 'tuple_assignment_115241', y2_117365)
        
        # Assigning a Name to a Name (line 367):
        # Getting the type of 'y1' (line 367)
        y1_117366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 29), 'y1')
        # Assigning a type to the variable 'tuple_assignment_115242' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 16), 'tuple_assignment_115242', y1_117366)
        
        # Assigning a Name to a Name (line 367):
        # Getting the type of 'tuple_assignment_115241' (line 367)
        tuple_assignment_115241_117367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 16), 'tuple_assignment_115241')
        # Assigning a type to the variable 'y1' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 16), 'y1', tuple_assignment_115241_117367)
        
        # Assigning a Name to a Name (line 367):
        # Getting the type of 'tuple_assignment_115242' (line 367)
        tuple_assignment_115242_117368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 16), 'tuple_assignment_115242')
        # Assigning a type to the variable 'y2' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 20), 'y2', tuple_assignment_115242_117368)
        # SSA join for if statement (line 366)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 368):
        
        # Assigning a Call to a Name (line 368):
        
        # Call to linspace(...): (line 368)
        # Processing the call arguments (line 368)
        # Getting the type of 'x1' (line 368)
        x1_117371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 29), 'x1', False)
        # Getting the type of 'x2' (line 368)
        x2_117372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 33), 'x2', False)
        int_117373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 37), 'int')
        # Processing the call keyword arguments (line 368)
        kwargs_117374 = {}
        # Getting the type of 'np' (line 368)
        np_117369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 17), 'np', False)
        # Obtaining the member 'linspace' of a type (line 368)
        linspace_117370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 17), np_117369, 'linspace')
        # Calling linspace(args, kwargs) (line 368)
        linspace_call_result_117375 = invoke(stypy.reporting.localization.Localization(__file__, 368, 17), linspace_117370, *[x1_117371, x2_117372, int_117373], **kwargs_117374)
        
        # Assigning a type to the variable 'xp' (line 368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 368, 12), 'xp', linspace_call_result_117375)
        
        # Assigning a Call to a Name (line 369):
        
        # Assigning a Call to a Name (line 369):
        
        # Call to p(...): (line 369)
        # Processing the call arguments (line 369)
        # Getting the type of 'xp' (line 369)
        xp_117377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 19), 'xp', False)
        # Processing the call keyword arguments (line 369)
        kwargs_117378 = {}
        # Getting the type of 'p' (line 369)
        p_117376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 17), 'p', False)
        # Calling p(args, kwargs) (line 369)
        p_call_result_117379 = invoke(stypy.reporting.localization.Localization(__file__, 369, 17), p_117376, *[xp_117377], **kwargs_117378)
        
        # Assigning a type to the variable 'yp' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 12), 'yp', p_call_result_117379)
        
        # Call to assert_(...): (line 370)
        # Processing the call arguments (line 370)
        
        # Call to all(...): (line 370)
        # Processing the call keyword arguments (line 370)
        kwargs_117389 = {}
        
        # Getting the type of 'y1' (line 370)
        y1_117381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 22), 'y1', False)
        # Getting the type of 'yp' (line 370)
        yp_117382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 28), 'yp', False)
        # Applying the binary operator '<=' (line 370)
        result_le_117383 = python_operator(stypy.reporting.localization.Localization(__file__, 370, 22), '<=', y1_117381, yp_117382)
        
        
        # Getting the type of 'yp' (line 370)
        yp_117384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 35), 'yp', False)
        # Getting the type of 'y2' (line 370)
        y2_117385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 41), 'y2', False)
        # Applying the binary operator '<=' (line 370)
        result_le_117386 = python_operator(stypy.reporting.localization.Localization(__file__, 370, 35), '<=', yp_117384, y2_117385)
        
        # Applying the binary operator '&' (line 370)
        result_and__117387 = python_operator(stypy.reporting.localization.Localization(__file__, 370, 21), '&', result_le_117383, result_le_117386)
        
        # Obtaining the member 'all' of a type (line 370)
        all_117388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 21), result_and__117387, 'all')
        # Calling all(args, kwargs) (line 370)
        all_call_result_117390 = invoke(stypy.reporting.localization.Localization(__file__, 370, 21), all_117388, *[], **kwargs_117389)
        
        # Processing the call keyword arguments (line 370)
        kwargs_117391 = {}
        # Getting the type of 'assert_' (line 370)
        assert__117380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 370)
        assert__call_result_117392 = invoke(stypy.reporting.localization.Localization(__file__, 370, 12), assert__117380, *[all_call_result_117390], **kwargs_117391)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_overshoot(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_overshoot' in the type store
        # Getting the type of 'stypy_return_type' (line 360)
        stypy_return_type_117393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117393)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_overshoot'
        return stypy_return_type_117393


    @norecursion
    def test_monotone(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_monotone'
        module_type_store = module_type_store.open_function_context('test_monotone', 372, 4, False)
        # Assigning a type to the variable 'self' (line 373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_function_name', 'TestPCHIP.test_monotone')
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_param_names_list', [])
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP.test_monotone.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.test_monotone', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_monotone', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_monotone(...)' code ##################

        
        # Assigning a Call to a Tuple (line 374):
        
        # Assigning a Subscript to a Name (line 374):
        
        # Obtaining the type of the subscript
        int_117394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 8), 'int')
        
        # Call to _make_random(...): (line 374)
        # Processing the call keyword arguments (line 374)
        kwargs_117397 = {}
        # Getting the type of 'self' (line 374)
        self_117395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 20), 'self', False)
        # Obtaining the member '_make_random' of a type (line 374)
        _make_random_117396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 20), self_117395, '_make_random')
        # Calling _make_random(args, kwargs) (line 374)
        _make_random_call_result_117398 = invoke(stypy.reporting.localization.Localization(__file__, 374, 20), _make_random_117396, *[], **kwargs_117397)
        
        # Obtaining the member '__getitem__' of a type (line 374)
        getitem___117399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 8), _make_random_call_result_117398, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 374)
        subscript_call_result_117400 = invoke(stypy.reporting.localization.Localization(__file__, 374, 8), getitem___117399, int_117394)
        
        # Assigning a type to the variable 'tuple_var_assignment_115243' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'tuple_var_assignment_115243', subscript_call_result_117400)
        
        # Assigning a Subscript to a Name (line 374):
        
        # Obtaining the type of the subscript
        int_117401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 8), 'int')
        
        # Call to _make_random(...): (line 374)
        # Processing the call keyword arguments (line 374)
        kwargs_117404 = {}
        # Getting the type of 'self' (line 374)
        self_117402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 20), 'self', False)
        # Obtaining the member '_make_random' of a type (line 374)
        _make_random_117403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 20), self_117402, '_make_random')
        # Calling _make_random(args, kwargs) (line 374)
        _make_random_call_result_117405 = invoke(stypy.reporting.localization.Localization(__file__, 374, 20), _make_random_117403, *[], **kwargs_117404)
        
        # Obtaining the member '__getitem__' of a type (line 374)
        getitem___117406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 8), _make_random_call_result_117405, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 374)
        subscript_call_result_117407 = invoke(stypy.reporting.localization.Localization(__file__, 374, 8), getitem___117406, int_117401)
        
        # Assigning a type to the variable 'tuple_var_assignment_115244' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'tuple_var_assignment_115244', subscript_call_result_117407)
        
        # Assigning a Subscript to a Name (line 374):
        
        # Obtaining the type of the subscript
        int_117408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 8), 'int')
        
        # Call to _make_random(...): (line 374)
        # Processing the call keyword arguments (line 374)
        kwargs_117411 = {}
        # Getting the type of 'self' (line 374)
        self_117409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 20), 'self', False)
        # Obtaining the member '_make_random' of a type (line 374)
        _make_random_117410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 20), self_117409, '_make_random')
        # Calling _make_random(args, kwargs) (line 374)
        _make_random_call_result_117412 = invoke(stypy.reporting.localization.Localization(__file__, 374, 20), _make_random_117410, *[], **kwargs_117411)
        
        # Obtaining the member '__getitem__' of a type (line 374)
        getitem___117413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 8), _make_random_call_result_117412, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 374)
        subscript_call_result_117414 = invoke(stypy.reporting.localization.Localization(__file__, 374, 8), getitem___117413, int_117408)
        
        # Assigning a type to the variable 'tuple_var_assignment_115245' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'tuple_var_assignment_115245', subscript_call_result_117414)
        
        # Assigning a Name to a Name (line 374):
        # Getting the type of 'tuple_var_assignment_115243' (line 374)
        tuple_var_assignment_115243_117415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'tuple_var_assignment_115243')
        # Assigning a type to the variable 'p' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'p', tuple_var_assignment_115243_117415)
        
        # Assigning a Name to a Name (line 374):
        # Getting the type of 'tuple_var_assignment_115244' (line 374)
        tuple_var_assignment_115244_117416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'tuple_var_assignment_115244')
        # Assigning a type to the variable 'xi' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 11), 'xi', tuple_var_assignment_115244_117416)
        
        # Assigning a Name to a Name (line 374):
        # Getting the type of 'tuple_var_assignment_115245' (line 374)
        tuple_var_assignment_115245_117417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'tuple_var_assignment_115245')
        # Assigning a type to the variable 'yi' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 15), 'yi', tuple_var_assignment_115245_117417)
        
        
        # Call to range(...): (line 375)
        # Processing the call arguments (line 375)
        
        # Call to len(...): (line 375)
        # Processing the call arguments (line 375)
        # Getting the type of 'xi' (line 375)
        xi_117420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 27), 'xi', False)
        # Processing the call keyword arguments (line 375)
        kwargs_117421 = {}
        # Getting the type of 'len' (line 375)
        len_117419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 23), 'len', False)
        # Calling len(args, kwargs) (line 375)
        len_call_result_117422 = invoke(stypy.reporting.localization.Localization(__file__, 375, 23), len_117419, *[xi_117420], **kwargs_117421)
        
        int_117423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 375, 31), 'int')
        # Applying the binary operator '-' (line 375)
        result_sub_117424 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 23), '-', len_call_result_117422, int_117423)
        
        # Processing the call keyword arguments (line 375)
        kwargs_117425 = {}
        # Getting the type of 'range' (line 375)
        range_117418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 17), 'range', False)
        # Calling range(args, kwargs) (line 375)
        range_call_result_117426 = invoke(stypy.reporting.localization.Localization(__file__, 375, 17), range_117418, *[result_sub_117424], **kwargs_117425)
        
        # Testing the type of a for loop iterable (line 375)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 375, 8), range_call_result_117426)
        # Getting the type of the for loop variable (line 375)
        for_loop_var_117427 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 375, 8), range_call_result_117426)
        # Assigning a type to the variable 'i' (line 375)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 8), 'i', for_loop_var_117427)
        # SSA begins for a for statement (line 375)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Tuple to a Tuple (line 376):
        
        # Assigning a Subscript to a Name (line 376):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 376)
        i_117428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 24), 'i')
        # Getting the type of 'xi' (line 376)
        xi_117429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 21), 'xi')
        # Obtaining the member '__getitem__' of a type (line 376)
        getitem___117430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 21), xi_117429, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 376)
        subscript_call_result_117431 = invoke(stypy.reporting.localization.Localization(__file__, 376, 21), getitem___117430, i_117428)
        
        # Assigning a type to the variable 'tuple_assignment_115246' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'tuple_assignment_115246', subscript_call_result_117431)
        
        # Assigning a Subscript to a Name (line 376):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 376)
        i_117432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 31), 'i')
        int_117433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 33), 'int')
        # Applying the binary operator '+' (line 376)
        result_add_117434 = python_operator(stypy.reporting.localization.Localization(__file__, 376, 31), '+', i_117432, int_117433)
        
        # Getting the type of 'xi' (line 376)
        xi_117435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 28), 'xi')
        # Obtaining the member '__getitem__' of a type (line 376)
        getitem___117436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 28), xi_117435, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 376)
        subscript_call_result_117437 = invoke(stypy.reporting.localization.Localization(__file__, 376, 28), getitem___117436, result_add_117434)
        
        # Assigning a type to the variable 'tuple_assignment_115247' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'tuple_assignment_115247', subscript_call_result_117437)
        
        # Assigning a Name to a Name (line 376):
        # Getting the type of 'tuple_assignment_115246' (line 376)
        tuple_assignment_115246_117438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'tuple_assignment_115246')
        # Assigning a type to the variable 'x1' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'x1', tuple_assignment_115246_117438)
        
        # Assigning a Name to a Name (line 376):
        # Getting the type of 'tuple_assignment_115247' (line 376)
        tuple_assignment_115247_117439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'tuple_assignment_115247')
        # Assigning a type to the variable 'x2' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 16), 'x2', tuple_assignment_115247_117439)
        
        # Assigning a Tuple to a Tuple (line 377):
        
        # Assigning a Subscript to a Name (line 377):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 377)
        i_117440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 24), 'i')
        # Getting the type of 'yi' (line 377)
        yi_117441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 21), 'yi')
        # Obtaining the member '__getitem__' of a type (line 377)
        getitem___117442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 21), yi_117441, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 377)
        subscript_call_result_117443 = invoke(stypy.reporting.localization.Localization(__file__, 377, 21), getitem___117442, i_117440)
        
        # Assigning a type to the variable 'tuple_assignment_115248' (line 377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'tuple_assignment_115248', subscript_call_result_117443)
        
        # Assigning a Subscript to a Name (line 377):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 377)
        i_117444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 31), 'i')
        int_117445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 33), 'int')
        # Applying the binary operator '+' (line 377)
        result_add_117446 = python_operator(stypy.reporting.localization.Localization(__file__, 377, 31), '+', i_117444, int_117445)
        
        # Getting the type of 'yi' (line 377)
        yi_117447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 28), 'yi')
        # Obtaining the member '__getitem__' of a type (line 377)
        getitem___117448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 377, 28), yi_117447, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 377)
        subscript_call_result_117449 = invoke(stypy.reporting.localization.Localization(__file__, 377, 28), getitem___117448, result_add_117446)
        
        # Assigning a type to the variable 'tuple_assignment_115249' (line 377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'tuple_assignment_115249', subscript_call_result_117449)
        
        # Assigning a Name to a Name (line 377):
        # Getting the type of 'tuple_assignment_115248' (line 377)
        tuple_assignment_115248_117450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'tuple_assignment_115248')
        # Assigning a type to the variable 'y1' (line 377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'y1', tuple_assignment_115248_117450)
        
        # Assigning a Name to a Name (line 377):
        # Getting the type of 'tuple_assignment_115249' (line 377)
        tuple_assignment_115249_117451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'tuple_assignment_115249')
        # Assigning a type to the variable 'y2' (line 377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 16), 'y2', tuple_assignment_115249_117451)
        
        # Assigning a Call to a Name (line 378):
        
        # Assigning a Call to a Name (line 378):
        
        # Call to linspace(...): (line 378)
        # Processing the call arguments (line 378)
        # Getting the type of 'x1' (line 378)
        x1_117454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 29), 'x1', False)
        # Getting the type of 'x2' (line 378)
        x2_117455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 33), 'x2', False)
        int_117456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 37), 'int')
        # Processing the call keyword arguments (line 378)
        kwargs_117457 = {}
        # Getting the type of 'np' (line 378)
        np_117452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 17), 'np', False)
        # Obtaining the member 'linspace' of a type (line 378)
        linspace_117453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 17), np_117452, 'linspace')
        # Calling linspace(args, kwargs) (line 378)
        linspace_call_result_117458 = invoke(stypy.reporting.localization.Localization(__file__, 378, 17), linspace_117453, *[x1_117454, x2_117455, int_117456], **kwargs_117457)
        
        # Assigning a type to the variable 'xp' (line 378)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'xp', linspace_call_result_117458)
        
        # Assigning a Call to a Name (line 379):
        
        # Assigning a Call to a Name (line 379):
        
        # Call to p(...): (line 379)
        # Processing the call arguments (line 379)
        # Getting the type of 'xp' (line 379)
        xp_117460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 19), 'xp', False)
        # Processing the call keyword arguments (line 379)
        kwargs_117461 = {}
        # Getting the type of 'p' (line 379)
        p_117459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 17), 'p', False)
        # Calling p(args, kwargs) (line 379)
        p_call_result_117462 = invoke(stypy.reporting.localization.Localization(__file__, 379, 17), p_117459, *[xp_117460], **kwargs_117461)
        
        # Assigning a type to the variable 'yp' (line 379)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'yp', p_call_result_117462)
        
        # Call to assert_(...): (line 380)
        # Processing the call arguments (line 380)
        
        # Call to all(...): (line 380)
        # Processing the call keyword arguments (line 380)
        kwargs_117482 = {}
        
        # Getting the type of 'y2' (line 380)
        y2_117464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 22), 'y2', False)
        # Getting the type of 'y1' (line 380)
        y1_117465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 25), 'y1', False)
        # Applying the binary operator '-' (line 380)
        result_sub_117466 = python_operator(stypy.reporting.localization.Localization(__file__, 380, 22), '-', y2_117464, y1_117465)
        
        
        # Obtaining the type of the subscript
        int_117467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 380, 35), 'int')
        slice_117468 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 380, 32), int_117467, None, None)
        # Getting the type of 'yp' (line 380)
        yp_117469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 32), 'yp', False)
        # Obtaining the member '__getitem__' of a type (line 380)
        getitem___117470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 380, 32), yp_117469, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 380)
        subscript_call_result_117471 = invoke(stypy.reporting.localization.Localization(__file__, 380, 32), getitem___117470, slice_117468)
        
        
        # Obtaining the type of the subscript
        int_117472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 380, 45), 'int')
        slice_117473 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 380, 41), None, int_117472, None)
        # Getting the type of 'yp' (line 380)
        yp_117474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 41), 'yp', False)
        # Obtaining the member '__getitem__' of a type (line 380)
        getitem___117475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 380, 41), yp_117474, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 380)
        subscript_call_result_117476 = invoke(stypy.reporting.localization.Localization(__file__, 380, 41), getitem___117475, slice_117473)
        
        # Applying the binary operator '-' (line 380)
        result_sub_117477 = python_operator(stypy.reporting.localization.Localization(__file__, 380, 32), '-', subscript_call_result_117471, subscript_call_result_117476)
        
        # Applying the binary operator '*' (line 380)
        result_mul_117478 = python_operator(stypy.reporting.localization.Localization(__file__, 380, 21), '*', result_sub_117466, result_sub_117477)
        
        int_117479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 380, 51), 'int')
        # Applying the binary operator '>' (line 380)
        result_gt_117480 = python_operator(stypy.reporting.localization.Localization(__file__, 380, 21), '>', result_mul_117478, int_117479)
        
        # Obtaining the member 'all' of a type (line 380)
        all_117481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 380, 21), result_gt_117480, 'all')
        # Calling all(args, kwargs) (line 380)
        all_call_result_117483 = invoke(stypy.reporting.localization.Localization(__file__, 380, 21), all_117481, *[], **kwargs_117482)
        
        # Processing the call keyword arguments (line 380)
        kwargs_117484 = {}
        # Getting the type of 'assert_' (line 380)
        assert__117463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 380)
        assert__call_result_117485 = invoke(stypy.reporting.localization.Localization(__file__, 380, 12), assert__117463, *[all_call_result_117483], **kwargs_117484)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_monotone(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_monotone' in the type store
        # Getting the type of 'stypy_return_type' (line 372)
        stypy_return_type_117486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117486)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_monotone'
        return stypy_return_type_117486


    @norecursion
    def test_cast(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_cast'
        module_type_store = module_type_store.open_function_context('test_cast', 382, 4, False)
        # Assigning a type to the variable 'self' (line 383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_function_name', 'TestPCHIP.test_cast')
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_param_names_list', [])
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP.test_cast.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.test_cast', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_cast', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_cast(...)' code ##################

        
        # Assigning a Call to a Name (line 384):
        
        # Assigning a Call to a Name (line 384):
        
        # Call to array(...): (line 384)
        # Processing the call arguments (line 384)
        
        # Obtaining an instance of the builtin type 'list' (line 384)
        list_117489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 384)
        # Adding element type (line 384)
        
        # Obtaining an instance of the builtin type 'list' (line 384)
        list_117490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 384)
        # Adding element type (line 384)
        int_117491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117491)
        # Adding element type (line 384)
        int_117492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117492)
        # Adding element type (line 384)
        int_117493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117493)
        # Adding element type (line 384)
        int_117494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117494)
        # Adding element type (line 384)
        int_117495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117495)
        # Adding element type (line 384)
        int_117496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117496)
        # Adding element type (line 384)
        int_117497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117497)
        # Adding element type (line 384)
        int_117498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117498)
        # Adding element type (line 384)
        int_117499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117499)
        # Adding element type (line 384)
        int_117500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 25), list_117490, int_117500)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 24), list_117489, list_117490)
        # Adding element type (line 384)
        
        # Obtaining an instance of the builtin type 'list' (line 385)
        list_117501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 385)
        # Adding element type (line 385)
        int_117502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117502)
        # Adding element type (line 385)
        int_117503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117503)
        # Adding element type (line 385)
        int_117504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117504)
        # Adding element type (line 385)
        int_117505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117505)
        # Adding element type (line 385)
        int_117506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117506)
        # Adding element type (line 385)
        int_117507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117507)
        # Adding element type (line 385)
        int_117508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117508)
        # Adding element type (line 385)
        int_117509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117509)
        # Adding element type (line 385)
        int_117510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117510)
        # Adding element type (line 385)
        int_117511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 65), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 385, 25), list_117501, int_117511)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 24), list_117489, list_117501)
        
        # Processing the call keyword arguments (line 384)
        kwargs_117512 = {}
        # Getting the type of 'np' (line 384)
        np_117487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 15), 'np', False)
        # Obtaining the member 'array' of a type (line 384)
        array_117488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 15), np_117487, 'array')
        # Calling array(args, kwargs) (line 384)
        array_call_result_117513 = invoke(stypy.reporting.localization.Localization(__file__, 384, 15), array_117488, *[list_117489], **kwargs_117512)
        
        # Assigning a type to the variable 'data' (line 384)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 384, 8), 'data', array_call_result_117513)
        
        # Assigning a Call to a Name (line 386):
        
        # Assigning a Call to a Name (line 386):
        
        # Call to arange(...): (line 386)
        # Processing the call arguments (line 386)
        int_117516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 23), 'int')
        # Processing the call keyword arguments (line 386)
        kwargs_117517 = {}
        # Getting the type of 'np' (line 386)
        np_117514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 13), 'np', False)
        # Obtaining the member 'arange' of a type (line 386)
        arange_117515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 13), np_117514, 'arange')
        # Calling arange(args, kwargs) (line 386)
        arange_call_result_117518 = invoke(stypy.reporting.localization.Localization(__file__, 386, 13), arange_117515, *[int_117516], **kwargs_117517)
        
        # Assigning a type to the variable 'xx' (line 386)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 8), 'xx', arange_call_result_117518)
        
        # Assigning a Call to a Name (line 387):
        
        # Assigning a Call to a Name (line 387):
        
        # Call to (...): (line 387)
        # Processing the call arguments (line 387)
        # Getting the type of 'xx' (line 387)
        xx_117530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 40), 'xx', False)
        # Processing the call keyword arguments (line 387)
        kwargs_117531 = {}
        
        # Call to pchip(...): (line 387)
        # Processing the call arguments (line 387)
        
        # Obtaining the type of the subscript
        int_117520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 27), 'int')
        # Getting the type of 'data' (line 387)
        data_117521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 22), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 387)
        getitem___117522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 22), data_117521, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 387)
        subscript_call_result_117523 = invoke(stypy.reporting.localization.Localization(__file__, 387, 22), getitem___117522, int_117520)
        
        
        # Obtaining the type of the subscript
        int_117524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 36), 'int')
        # Getting the type of 'data' (line 387)
        data_117525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 31), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 387)
        getitem___117526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 31), data_117525, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 387)
        subscript_call_result_117527 = invoke(stypy.reporting.localization.Localization(__file__, 387, 31), getitem___117526, int_117524)
        
        # Processing the call keyword arguments (line 387)
        kwargs_117528 = {}
        # Getting the type of 'pchip' (line 387)
        pchip_117519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 16), 'pchip', False)
        # Calling pchip(args, kwargs) (line 387)
        pchip_call_result_117529 = invoke(stypy.reporting.localization.Localization(__file__, 387, 16), pchip_117519, *[subscript_call_result_117523, subscript_call_result_117527], **kwargs_117528)
        
        # Calling (args, kwargs) (line 387)
        _call_result_117532 = invoke(stypy.reporting.localization.Localization(__file__, 387, 16), pchip_call_result_117529, *[xx_117530], **kwargs_117531)
        
        # Assigning a type to the variable 'curve' (line 387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 8), 'curve', _call_result_117532)
        
        # Assigning a BinOp to a Name (line 389):
        
        # Assigning a BinOp to a Name (line 389):
        # Getting the type of 'data' (line 389)
        data_117533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 16), 'data')
        float_117534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 23), 'float')
        # Applying the binary operator '*' (line 389)
        result_mul_117535 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 16), '*', data_117533, float_117534)
        
        # Assigning a type to the variable 'data1' (line 389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 8), 'data1', result_mul_117535)
        
        # Assigning a Call to a Name (line 390):
        
        # Assigning a Call to a Name (line 390):
        
        # Call to (...): (line 390)
        # Processing the call arguments (line 390)
        # Getting the type of 'xx' (line 390)
        xx_117547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 43), 'xx', False)
        # Processing the call keyword arguments (line 390)
        kwargs_117548 = {}
        
        # Call to pchip(...): (line 390)
        # Processing the call arguments (line 390)
        
        # Obtaining the type of the subscript
        int_117537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 29), 'int')
        # Getting the type of 'data1' (line 390)
        data1_117538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 23), 'data1', False)
        # Obtaining the member '__getitem__' of a type (line 390)
        getitem___117539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 23), data1_117538, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 390)
        subscript_call_result_117540 = invoke(stypy.reporting.localization.Localization(__file__, 390, 23), getitem___117539, int_117537)
        
        
        # Obtaining the type of the subscript
        int_117541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 39), 'int')
        # Getting the type of 'data1' (line 390)
        data1_117542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 33), 'data1', False)
        # Obtaining the member '__getitem__' of a type (line 390)
        getitem___117543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 33), data1_117542, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 390)
        subscript_call_result_117544 = invoke(stypy.reporting.localization.Localization(__file__, 390, 33), getitem___117543, int_117541)
        
        # Processing the call keyword arguments (line 390)
        kwargs_117545 = {}
        # Getting the type of 'pchip' (line 390)
        pchip_117536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 17), 'pchip', False)
        # Calling pchip(args, kwargs) (line 390)
        pchip_call_result_117546 = invoke(stypy.reporting.localization.Localization(__file__, 390, 17), pchip_117536, *[subscript_call_result_117540, subscript_call_result_117544], **kwargs_117545)
        
        # Calling (args, kwargs) (line 390)
        _call_result_117549 = invoke(stypy.reporting.localization.Localization(__file__, 390, 17), pchip_call_result_117546, *[xx_117547], **kwargs_117548)
        
        # Assigning a type to the variable 'curve1' (line 390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 8), 'curve1', _call_result_117549)
        
        # Call to assert_allclose(...): (line 392)
        # Processing the call arguments (line 392)
        # Getting the type of 'curve' (line 392)
        curve_117551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 24), 'curve', False)
        # Getting the type of 'curve1' (line 392)
        curve1_117552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 31), 'curve1', False)
        # Processing the call keyword arguments (line 392)
        float_117553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 44), 'float')
        keyword_117554 = float_117553
        float_117555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 56), 'float')
        keyword_117556 = float_117555
        kwargs_117557 = {'rtol': keyword_117556, 'atol': keyword_117554}
        # Getting the type of 'assert_allclose' (line 392)
        assert_allclose_117550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 392)
        assert_allclose_call_result_117558 = invoke(stypy.reporting.localization.Localization(__file__, 392, 8), assert_allclose_117550, *[curve_117551, curve1_117552], **kwargs_117557)
        
        
        # ################# End of 'test_cast(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_cast' in the type store
        # Getting the type of 'stypy_return_type' (line 382)
        stypy_return_type_117559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117559)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_cast'
        return stypy_return_type_117559


    @norecursion
    def test_nag(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_nag'
        module_type_store = module_type_store.open_function_context('test_nag', 394, 4, False)
        # Assigning a type to the variable 'self' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_function_name', 'TestPCHIP.test_nag')
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_param_names_list', [])
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP.test_nag.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.test_nag', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_nag', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_nag(...)' code ##################

        stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 399, 8))
        
        # 'from scipy._lib.six import StringIO' statement (line 399)
        update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/tests/')
        import_117560 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 399, 8), 'scipy._lib.six')

        if (type(import_117560) is not StypyTypeError):

            if (import_117560 != 'pyd_module'):
                __import__(import_117560)
                sys_modules_117561 = sys.modules[import_117560]
                import_from_module(stypy.reporting.localization.Localization(__file__, 399, 8), 'scipy._lib.six', sys_modules_117561.module_type_store, module_type_store, ['StringIO'])
                nest_module(stypy.reporting.localization.Localization(__file__, 399, 8), __file__, sys_modules_117561, sys_modules_117561.module_type_store, module_type_store)
            else:
                from scipy._lib.six import StringIO

                import_from_module(stypy.reporting.localization.Localization(__file__, 399, 8), 'scipy._lib.six', None, module_type_store, ['StringIO'], [StringIO])

        else:
            # Assigning a type to the variable 'scipy._lib.six' (line 399)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 8), 'scipy._lib.six', import_117560)

        remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/tests/')
        
        
        # Assigning a Str to a Name (line 400):
        
        # Assigning a Str to a Name (line 400):
        str_117562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, (-1)), 'str', '\n          7.99   0.00000E+0\n          8.09   0.27643E-4\n          8.19   0.43750E-1\n          8.70   0.16918E+0\n          9.20   0.46943E+0\n         10.00   0.94374E+0\n         12.00   0.99864E+0\n         15.00   0.99992E+0\n         20.00   0.99999E+0\n        ')
        # Assigning a type to the variable 'dataStr' (line 400)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 400, 8), 'dataStr', str_117562)
        
        # Assigning a Call to a Name (line 411):
        
        # Assigning a Call to a Name (line 411):
        
        # Call to loadtxt(...): (line 411)
        # Processing the call arguments (line 411)
        
        # Call to StringIO(...): (line 411)
        # Processing the call arguments (line 411)
        # Getting the type of 'dataStr' (line 411)
        dataStr_117566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 35), 'dataStr', False)
        # Processing the call keyword arguments (line 411)
        kwargs_117567 = {}
        # Getting the type of 'StringIO' (line 411)
        StringIO_117565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 26), 'StringIO', False)
        # Calling StringIO(args, kwargs) (line 411)
        StringIO_call_result_117568 = invoke(stypy.reporting.localization.Localization(__file__, 411, 26), StringIO_117565, *[dataStr_117566], **kwargs_117567)
        
        # Processing the call keyword arguments (line 411)
        kwargs_117569 = {}
        # Getting the type of 'np' (line 411)
        np_117563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 15), 'np', False)
        # Obtaining the member 'loadtxt' of a type (line 411)
        loadtxt_117564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 15), np_117563, 'loadtxt')
        # Calling loadtxt(args, kwargs) (line 411)
        loadtxt_call_result_117570 = invoke(stypy.reporting.localization.Localization(__file__, 411, 15), loadtxt_117564, *[StringIO_call_result_117568], **kwargs_117569)
        
        # Assigning a type to the variable 'data' (line 411)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 8), 'data', loadtxt_call_result_117570)
        
        # Assigning a Call to a Name (line 412):
        
        # Assigning a Call to a Name (line 412):
        
        # Call to pchip(...): (line 412)
        # Processing the call arguments (line 412)
        
        # Obtaining the type of the subscript
        slice_117572 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 412, 20), None, None, None)
        int_117573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 27), 'int')
        # Getting the type of 'data' (line 412)
        data_117574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 20), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 412)
        getitem___117575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 20), data_117574, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 412)
        subscript_call_result_117576 = invoke(stypy.reporting.localization.Localization(__file__, 412, 20), getitem___117575, (slice_117572, int_117573))
        
        
        # Obtaining the type of the subscript
        slice_117577 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 412, 31), None, None, None)
        int_117578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 38), 'int')
        # Getting the type of 'data' (line 412)
        data_117579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 31), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 412)
        getitem___117580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 31), data_117579, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 412)
        subscript_call_result_117581 = invoke(stypy.reporting.localization.Localization(__file__, 412, 31), getitem___117580, (slice_117577, int_117578))
        
        # Processing the call keyword arguments (line 412)
        kwargs_117582 = {}
        # Getting the type of 'pchip' (line 412)
        pchip_117571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 14), 'pchip', False)
        # Calling pchip(args, kwargs) (line 412)
        pchip_call_result_117583 = invoke(stypy.reporting.localization.Localization(__file__, 412, 14), pchip_117571, *[subscript_call_result_117576, subscript_call_result_117581], **kwargs_117582)
        
        # Assigning a type to the variable 'pch' (line 412)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 8), 'pch', pchip_call_result_117583)
        
        # Assigning a Str to a Name (line 414):
        
        # Assigning a Str to a Name (line 414):
        str_117584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 426, (-1)), 'str', '\n           7.9900       0.0000\n           9.1910       0.4640\n          10.3920       0.9645\n          11.5930       0.9965\n          12.7940       0.9992\n          13.9950       0.9998\n          15.1960       0.9999\n          16.3970       1.0000\n          17.5980       1.0000\n          18.7990       1.0000\n          20.0000       1.0000\n        ')
        # Assigning a type to the variable 'resultStr' (line 414)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 414, 8), 'resultStr', str_117584)
        
        # Assigning a Call to a Name (line 427):
        
        # Assigning a Call to a Name (line 427):
        
        # Call to loadtxt(...): (line 427)
        # Processing the call arguments (line 427)
        
        # Call to StringIO(...): (line 427)
        # Processing the call arguments (line 427)
        # Getting the type of 'resultStr' (line 427)
        resultStr_117588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 37), 'resultStr', False)
        # Processing the call keyword arguments (line 427)
        kwargs_117589 = {}
        # Getting the type of 'StringIO' (line 427)
        StringIO_117587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 28), 'StringIO', False)
        # Calling StringIO(args, kwargs) (line 427)
        StringIO_call_result_117590 = invoke(stypy.reporting.localization.Localization(__file__, 427, 28), StringIO_117587, *[resultStr_117588], **kwargs_117589)
        
        # Processing the call keyword arguments (line 427)
        kwargs_117591 = {}
        # Getting the type of 'np' (line 427)
        np_117585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 17), 'np', False)
        # Obtaining the member 'loadtxt' of a type (line 427)
        loadtxt_117586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 427, 17), np_117585, 'loadtxt')
        # Calling loadtxt(args, kwargs) (line 427)
        loadtxt_call_result_117592 = invoke(stypy.reporting.localization.Localization(__file__, 427, 17), loadtxt_117586, *[StringIO_call_result_117590], **kwargs_117591)
        
        # Assigning a type to the variable 'result' (line 427)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 427, 8), 'result', loadtxt_call_result_117592)
        
        # Call to assert_allclose(...): (line 428)
        # Processing the call arguments (line 428)
        
        # Obtaining the type of the subscript
        slice_117594 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 428, 24), None, None, None)
        int_117595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 33), 'int')
        # Getting the type of 'result' (line 428)
        result_117596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 24), 'result', False)
        # Obtaining the member '__getitem__' of a type (line 428)
        getitem___117597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 24), result_117596, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 428)
        subscript_call_result_117598 = invoke(stypy.reporting.localization.Localization(__file__, 428, 24), getitem___117597, (slice_117594, int_117595))
        
        
        # Call to pch(...): (line 428)
        # Processing the call arguments (line 428)
        
        # Obtaining the type of the subscript
        slice_117600 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 428, 41), None, None, None)
        int_117601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 50), 'int')
        # Getting the type of 'result' (line 428)
        result_117602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 41), 'result', False)
        # Obtaining the member '__getitem__' of a type (line 428)
        getitem___117603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 41), result_117602, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 428)
        subscript_call_result_117604 = invoke(stypy.reporting.localization.Localization(__file__, 428, 41), getitem___117603, (slice_117600, int_117601))
        
        # Processing the call keyword arguments (line 428)
        kwargs_117605 = {}
        # Getting the type of 'pch' (line 428)
        pch_117599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 37), 'pch', False)
        # Calling pch(args, kwargs) (line 428)
        pch_call_result_117606 = invoke(stypy.reporting.localization.Localization(__file__, 428, 37), pch_117599, *[subscript_call_result_117604], **kwargs_117605)
        
        # Processing the call keyword arguments (line 428)
        float_117607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 60), 'float')
        keyword_117608 = float_117607
        float_117609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 69), 'float')
        keyword_117610 = float_117609
        kwargs_117611 = {'rtol': keyword_117608, 'atol': keyword_117610}
        # Getting the type of 'assert_allclose' (line 428)
        assert_allclose_117593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 428)
        assert_allclose_call_result_117612 = invoke(stypy.reporting.localization.Localization(__file__, 428, 8), assert_allclose_117593, *[subscript_call_result_117598, pch_call_result_117606], **kwargs_117611)
        
        
        # ################# End of 'test_nag(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_nag' in the type store
        # Getting the type of 'stypy_return_type' (line 394)
        stypy_return_type_117613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117613)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_nag'
        return stypy_return_type_117613


    @norecursion
    def test_endslopes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_endslopes'
        module_type_store = module_type_store.open_function_context('test_endslopes', 430, 4, False)
        # Assigning a type to the variable 'self' (line 431)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 431, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_function_name', 'TestPCHIP.test_endslopes')
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_param_names_list', [])
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP.test_endslopes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.test_endslopes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_endslopes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_endslopes(...)' code ##################

        
        # Assigning a Call to a Name (line 433):
        
        # Assigning a Call to a Name (line 433):
        
        # Call to array(...): (line 433)
        # Processing the call arguments (line 433)
        
        # Obtaining an instance of the builtin type 'list' (line 433)
        list_117616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 433)
        # Adding element type (line 433)
        float_117617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 22), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 433, 21), list_117616, float_117617)
        # Adding element type (line 433)
        float_117618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 27), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 433, 21), list_117616, float_117618)
        # Adding element type (line 433)
        float_117619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 433, 21), list_117616, float_117619)
        # Adding element type (line 433)
        float_117620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 433, 21), list_117616, float_117620)
        
        # Processing the call keyword arguments (line 433)
        kwargs_117621 = {}
        # Getting the type of 'np' (line 433)
        np_117614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 433)
        array_117615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 12), np_117614, 'array')
        # Calling array(args, kwargs) (line 433)
        array_call_result_117622 = invoke(stypy.reporting.localization.Localization(__file__, 433, 12), array_117615, *[list_117616], **kwargs_117621)
        
        # Assigning a type to the variable 'x' (line 433)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 8), 'x', array_call_result_117622)
        
        # Assigning a Call to a Name (line 434):
        
        # Assigning a Call to a Name (line 434):
        
        # Call to array(...): (line 434)
        # Processing the call arguments (line 434)
        
        # Obtaining an instance of the builtin type 'list' (line 434)
        list_117625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 434)
        # Adding element type (line 434)
        float_117626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 23), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 22), list_117625, float_117626)
        # Adding element type (line 434)
        float_117627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 22), list_117625, float_117627)
        # Adding element type (line 434)
        float_117628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 22), list_117625, float_117628)
        # Adding element type (line 434)
        float_117629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 434, 45), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 434, 22), list_117625, float_117629)
        
        # Processing the call keyword arguments (line 434)
        kwargs_117630 = {}
        # Getting the type of 'np' (line 434)
        np_117623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 434)
        array_117624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 13), np_117623, 'array')
        # Calling array(args, kwargs) (line 434)
        array_call_result_117631 = invoke(stypy.reporting.localization.Localization(__file__, 434, 13), array_117624, *[list_117625], **kwargs_117630)
        
        # Assigning a type to the variable 'y1' (line 434)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 8), 'y1', array_call_result_117631)
        
        # Assigning a Call to a Name (line 435):
        
        # Assigning a Call to a Name (line 435):
        
        # Call to array(...): (line 435)
        # Processing the call arguments (line 435)
        
        # Obtaining an instance of the builtin type 'list' (line 435)
        list_117634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 435)
        # Adding element type (line 435)
        float_117635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 23), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 22), list_117634, float_117635)
        # Adding element type (line 435)
        float_117636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 22), list_117634, float_117636)
        # Adding element type (line 435)
        float_117637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 22), list_117634, float_117637)
        # Adding element type (line 435)
        float_117638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 46), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 22), list_117634, float_117638)
        
        # Processing the call keyword arguments (line 435)
        kwargs_117639 = {}
        # Getting the type of 'np' (line 435)
        np_117632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 435)
        array_117633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 13), np_117632, 'array')
        # Calling array(args, kwargs) (line 435)
        array_call_result_117640 = invoke(stypy.reporting.localization.Localization(__file__, 435, 13), array_117633, *[list_117634], **kwargs_117639)
        
        # Assigning a type to the variable 'y2' (line 435)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 8), 'y2', array_call_result_117640)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 436)
        tuple_117641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 436)
        # Adding element type (line 436)
        
        # Call to pchip(...): (line 436)
        # Processing the call arguments (line 436)
        # Getting the type of 'x' (line 436)
        x_117643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 25), 'x', False)
        # Getting the type of 'y1' (line 436)
        y1_117644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 28), 'y1', False)
        # Processing the call keyword arguments (line 436)
        kwargs_117645 = {}
        # Getting the type of 'pchip' (line 436)
        pchip_117642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 19), 'pchip', False)
        # Calling pchip(args, kwargs) (line 436)
        pchip_call_result_117646 = invoke(stypy.reporting.localization.Localization(__file__, 436, 19), pchip_117642, *[x_117643, y1_117644], **kwargs_117645)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 19), tuple_117641, pchip_call_result_117646)
        # Adding element type (line 436)
        
        # Call to pchip(...): (line 436)
        # Processing the call arguments (line 436)
        # Getting the type of 'x' (line 436)
        x_117648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 39), 'x', False)
        # Getting the type of 'y2' (line 436)
        y2_117649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 42), 'y2', False)
        # Processing the call keyword arguments (line 436)
        kwargs_117650 = {}
        # Getting the type of 'pchip' (line 436)
        pchip_117647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 33), 'pchip', False)
        # Calling pchip(args, kwargs) (line 436)
        pchip_call_result_117651 = invoke(stypy.reporting.localization.Localization(__file__, 436, 33), pchip_117647, *[x_117648, y2_117649], **kwargs_117650)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 19), tuple_117641, pchip_call_result_117651)
        
        # Testing the type of a for loop iterable (line 436)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 436, 8), tuple_117641)
        # Getting the type of the for loop variable (line 436)
        for_loop_var_117652 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 436, 8), tuple_117641)
        # Assigning a type to the variable 'pp' (line 436)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'pp', for_loop_var_117652)
        # SSA begins for a for statement (line 436)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 437)
        tuple_117653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 437)
        # Adding element type (line 437)
        
        # Obtaining the type of the subscript
        int_117654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 24), 'int')
        # Getting the type of 'x' (line 437)
        x_117655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 22), 'x')
        # Obtaining the member '__getitem__' of a type (line 437)
        getitem___117656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 22), x_117655, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 437)
        subscript_call_result_117657 = invoke(stypy.reporting.localization.Localization(__file__, 437, 22), getitem___117656, int_117654)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 22), tuple_117653, subscript_call_result_117657)
        # Adding element type (line 437)
        
        # Obtaining the type of the subscript
        int_117658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 30), 'int')
        # Getting the type of 'x' (line 437)
        x_117659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 28), 'x')
        # Obtaining the member '__getitem__' of a type (line 437)
        getitem___117660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 28), x_117659, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 437)
        subscript_call_result_117661 = invoke(stypy.reporting.localization.Localization(__file__, 437, 28), getitem___117660, int_117658)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 22), tuple_117653, subscript_call_result_117661)
        
        # Testing the type of a for loop iterable (line 437)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 437, 12), tuple_117653)
        # Getting the type of the for loop variable (line 437)
        for_loop_var_117662 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 437, 12), tuple_117653)
        # Assigning a type to the variable 't' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 12), 't', for_loop_var_117662)
        # SSA begins for a for statement (line 437)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_(...): (line 438)
        # Processing the call arguments (line 438)
        
        
        # Call to pp(...): (line 438)
        # Processing the call arguments (line 438)
        # Getting the type of 't' (line 438)
        t_117665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 27), 't', False)
        int_117666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 30), 'int')
        # Processing the call keyword arguments (line 438)
        kwargs_117667 = {}
        # Getting the type of 'pp' (line 438)
        pp_117664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 24), 'pp', False)
        # Calling pp(args, kwargs) (line 438)
        pp_call_result_117668 = invoke(stypy.reporting.localization.Localization(__file__, 438, 24), pp_117664, *[t_117665, int_117666], **kwargs_117667)
        
        int_117669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 36), 'int')
        # Applying the binary operator '!=' (line 438)
        result_ne_117670 = python_operator(stypy.reporting.localization.Localization(__file__, 438, 24), '!=', pp_call_result_117668, int_117669)
        
        # Processing the call keyword arguments (line 438)
        kwargs_117671 = {}
        # Getting the type of 'assert_' (line 438)
        assert__117663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 16), 'assert_', False)
        # Calling assert_(args, kwargs) (line 438)
        assert__call_result_117672 = invoke(stypy.reporting.localization.Localization(__file__, 438, 16), assert__117663, *[result_ne_117670], **kwargs_117671)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_endslopes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_endslopes' in the type store
        # Getting the type of 'stypy_return_type' (line 430)
        stypy_return_type_117673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117673)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_endslopes'
        return stypy_return_type_117673


    @norecursion
    def test_all_zeros(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_all_zeros'
        module_type_store = module_type_store.open_function_context('test_all_zeros', 440, 4, False)
        # Assigning a type to the variable 'self' (line 441)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_function_name', 'TestPCHIP.test_all_zeros')
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_param_names_list', [])
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP.test_all_zeros.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.test_all_zeros', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_all_zeros', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_all_zeros(...)' code ##################

        
        # Assigning a Call to a Name (line 441):
        
        # Assigning a Call to a Name (line 441):
        
        # Call to arange(...): (line 441)
        # Processing the call arguments (line 441)
        int_117676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 22), 'int')
        # Processing the call keyword arguments (line 441)
        kwargs_117677 = {}
        # Getting the type of 'np' (line 441)
        np_117674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 12), 'np', False)
        # Obtaining the member 'arange' of a type (line 441)
        arange_117675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 12), np_117674, 'arange')
        # Calling arange(args, kwargs) (line 441)
        arange_call_result_117678 = invoke(stypy.reporting.localization.Localization(__file__, 441, 12), arange_117675, *[int_117676], **kwargs_117677)
        
        # Assigning a type to the variable 'x' (line 441)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 8), 'x', arange_call_result_117678)
        
        # Assigning a Call to a Name (line 442):
        
        # Assigning a Call to a Name (line 442):
        
        # Call to zeros_like(...): (line 442)
        # Processing the call arguments (line 442)
        # Getting the type of 'x' (line 442)
        x_117681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 26), 'x', False)
        # Processing the call keyword arguments (line 442)
        kwargs_117682 = {}
        # Getting the type of 'np' (line 442)
        np_117679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 12), 'np', False)
        # Obtaining the member 'zeros_like' of a type (line 442)
        zeros_like_117680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 12), np_117679, 'zeros_like')
        # Calling zeros_like(args, kwargs) (line 442)
        zeros_like_call_result_117683 = invoke(stypy.reporting.localization.Localization(__file__, 442, 12), zeros_like_117680, *[x_117681], **kwargs_117682)
        
        # Assigning a type to the variable 'y' (line 442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 8), 'y', zeros_like_call_result_117683)
        
        # Call to catch_warnings(...): (line 445)
        # Processing the call keyword arguments (line 445)
        kwargs_117686 = {}
        # Getting the type of 'warnings' (line 445)
        warnings_117684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 13), 'warnings', False)
        # Obtaining the member 'catch_warnings' of a type (line 445)
        catch_warnings_117685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 13), warnings_117684, 'catch_warnings')
        # Calling catch_warnings(args, kwargs) (line 445)
        catch_warnings_call_result_117687 = invoke(stypy.reporting.localization.Localization(__file__, 445, 13), catch_warnings_117685, *[], **kwargs_117686)
        
        with_117688 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 445, 13), catch_warnings_call_result_117687, 'with parameter', '__enter__', '__exit__')

        if with_117688:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 445)
            enter___117689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 13), catch_warnings_call_result_117687, '__enter__')
            with_enter_117690 = invoke(stypy.reporting.localization.Localization(__file__, 445, 13), enter___117689)
            
            # Call to filterwarnings(...): (line 446)
            # Processing the call arguments (line 446)
            str_117693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 446, 36), 'str', 'error')
            # Processing the call keyword arguments (line 446)
            kwargs_117694 = {}
            # Getting the type of 'warnings' (line 446)
            warnings_117691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 12), 'warnings', False)
            # Obtaining the member 'filterwarnings' of a type (line 446)
            filterwarnings_117692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 446, 12), warnings_117691, 'filterwarnings')
            # Calling filterwarnings(args, kwargs) (line 446)
            filterwarnings_call_result_117695 = invoke(stypy.reporting.localization.Localization(__file__, 446, 12), filterwarnings_117692, *[str_117693], **kwargs_117694)
            
            
            # Assigning a Call to a Name (line 447):
            
            # Assigning a Call to a Name (line 447):
            
            # Call to pchip(...): (line 447)
            # Processing the call arguments (line 447)
            # Getting the type of 'x' (line 447)
            x_117697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 24), 'x', False)
            # Getting the type of 'y' (line 447)
            y_117698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 27), 'y', False)
            # Processing the call keyword arguments (line 447)
            kwargs_117699 = {}
            # Getting the type of 'pchip' (line 447)
            pchip_117696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 18), 'pchip', False)
            # Calling pchip(args, kwargs) (line 447)
            pchip_call_result_117700 = invoke(stypy.reporting.localization.Localization(__file__, 447, 18), pchip_117696, *[x_117697, y_117698], **kwargs_117699)
            
            # Assigning a type to the variable 'pch' (line 447)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 447, 12), 'pch', pchip_call_result_117700)
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 445)
            exit___117701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 13), catch_warnings_call_result_117687, '__exit__')
            with_exit_117702 = invoke(stypy.reporting.localization.Localization(__file__, 445, 13), exit___117701, None, None, None)

        
        # Assigning a Call to a Name (line 449):
        
        # Assigning a Call to a Name (line 449):
        
        # Call to linspace(...): (line 449)
        # Processing the call arguments (line 449)
        int_117705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 25), 'int')
        int_117706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 28), 'int')
        int_117707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 31), 'int')
        # Processing the call keyword arguments (line 449)
        kwargs_117708 = {}
        # Getting the type of 'np' (line 449)
        np_117703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 13), 'np', False)
        # Obtaining the member 'linspace' of a type (line 449)
        linspace_117704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 449, 13), np_117703, 'linspace')
        # Calling linspace(args, kwargs) (line 449)
        linspace_call_result_117709 = invoke(stypy.reporting.localization.Localization(__file__, 449, 13), linspace_117704, *[int_117705, int_117706, int_117707], **kwargs_117708)
        
        # Assigning a type to the variable 'xx' (line 449)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 449, 8), 'xx', linspace_call_result_117709)
        
        # Call to assert_equal(...): (line 450)
        # Processing the call arguments (line 450)
        
        # Call to pch(...): (line 450)
        # Processing the call arguments (line 450)
        # Getting the type of 'xx' (line 450)
        xx_117712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 25), 'xx', False)
        # Processing the call keyword arguments (line 450)
        kwargs_117713 = {}
        # Getting the type of 'pch' (line 450)
        pch_117711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 21), 'pch', False)
        # Calling pch(args, kwargs) (line 450)
        pch_call_result_117714 = invoke(stypy.reporting.localization.Localization(__file__, 450, 21), pch_117711, *[xx_117712], **kwargs_117713)
        
        float_117715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 30), 'float')
        # Processing the call keyword arguments (line 450)
        kwargs_117716 = {}
        # Getting the type of 'assert_equal' (line 450)
        assert_equal_117710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 450)
        assert_equal_call_result_117717 = invoke(stypy.reporting.localization.Localization(__file__, 450, 8), assert_equal_117710, *[pch_call_result_117714, float_117715], **kwargs_117716)
        
        
        # ################# End of 'test_all_zeros(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_all_zeros' in the type store
        # Getting the type of 'stypy_return_type' (line 440)
        stypy_return_type_117718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117718)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_all_zeros'
        return stypy_return_type_117718


    @norecursion
    def test_two_points(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_two_points'
        module_type_store = module_type_store.open_function_context('test_two_points', 452, 4, False)
        # Assigning a type to the variable 'self' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_function_name', 'TestPCHIP.test_two_points')
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_param_names_list', [])
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP.test_two_points.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.test_two_points', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_two_points', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_two_points(...)' code ##################

        
        # Assigning a Call to a Name (line 457):
        
        # Assigning a Call to a Name (line 457):
        
        # Call to linspace(...): (line 457)
        # Processing the call arguments (line 457)
        int_117721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 24), 'int')
        int_117722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 27), 'int')
        int_117723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 30), 'int')
        # Processing the call keyword arguments (line 457)
        kwargs_117724 = {}
        # Getting the type of 'np' (line 457)
        np_117719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 12), 'np', False)
        # Obtaining the member 'linspace' of a type (line 457)
        linspace_117720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 457, 12), np_117719, 'linspace')
        # Calling linspace(args, kwargs) (line 457)
        linspace_call_result_117725 = invoke(stypy.reporting.localization.Localization(__file__, 457, 12), linspace_117720, *[int_117721, int_117722, int_117723], **kwargs_117724)
        
        # Assigning a type to the variable 'x' (line 457)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 457, 8), 'x', linspace_call_result_117725)
        
        # Assigning a Call to a Name (line 458):
        
        # Assigning a Call to a Name (line 458):
        
        # Call to pchip(...): (line 458)
        # Processing the call arguments (line 458)
        
        # Obtaining an instance of the builtin type 'list' (line 458)
        list_117727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 458)
        # Adding element type (line 458)
        int_117728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 458, 18), list_117727, int_117728)
        # Adding element type (line 458)
        int_117729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 458, 18), list_117727, int_117729)
        
        
        # Obtaining an instance of the builtin type 'list' (line 458)
        list_117730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 458)
        # Adding element type (line 458)
        int_117731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 458, 26), list_117730, int_117731)
        # Adding element type (line 458)
        int_117732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 458, 26), list_117730, int_117732)
        
        # Processing the call keyword arguments (line 458)
        kwargs_117733 = {}
        # Getting the type of 'pchip' (line 458)
        pchip_117726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'pchip', False)
        # Calling pchip(args, kwargs) (line 458)
        pchip_call_result_117734 = invoke(stypy.reporting.localization.Localization(__file__, 458, 12), pchip_117726, *[list_117727, list_117730], **kwargs_117733)
        
        # Assigning a type to the variable 'p' (line 458)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 8), 'p', pchip_call_result_117734)
        
        # Call to assert_allclose(...): (line 459)
        # Processing the call arguments (line 459)
        
        # Call to p(...): (line 459)
        # Processing the call arguments (line 459)
        # Getting the type of 'x' (line 459)
        x_117737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 26), 'x', False)
        # Processing the call keyword arguments (line 459)
        kwargs_117738 = {}
        # Getting the type of 'p' (line 459)
        p_117736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 24), 'p', False)
        # Calling p(args, kwargs) (line 459)
        p_call_result_117739 = invoke(stypy.reporting.localization.Localization(__file__, 459, 24), p_117736, *[x_117737], **kwargs_117738)
        
        int_117740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 30), 'int')
        # Getting the type of 'x' (line 459)
        x_117741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 32), 'x', False)
        # Applying the binary operator '*' (line 459)
        result_mul_117742 = python_operator(stypy.reporting.localization.Localization(__file__, 459, 30), '*', int_117740, x_117741)
        
        # Processing the call keyword arguments (line 459)
        float_117743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 40), 'float')
        keyword_117744 = float_117743
        kwargs_117745 = {'atol': keyword_117744}
        # Getting the type of 'assert_allclose' (line 459)
        assert_allclose_117735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 459)
        assert_allclose_call_result_117746 = invoke(stypy.reporting.localization.Localization(__file__, 459, 8), assert_allclose_117735, *[p_call_result_117739, result_mul_117742], **kwargs_117745)
        
        
        # ################# End of 'test_two_points(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_two_points' in the type store
        # Getting the type of 'stypy_return_type' (line 452)
        stypy_return_type_117747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117747)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_two_points'
        return stypy_return_type_117747


    @norecursion
    def test_pchip_interpolate(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pchip_interpolate'
        module_type_store = module_type_store.open_function_context('test_pchip_interpolate', 461, 4, False)
        # Assigning a type to the variable 'self' (line 462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_function_name', 'TestPCHIP.test_pchip_interpolate')
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_param_names_list', [])
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP.test_pchip_interpolate.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.test_pchip_interpolate', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pchip_interpolate', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pchip_interpolate(...)' code ##################

        
        # Call to assert_array_almost_equal(...): (line 462)
        # Processing the call arguments (line 462)
        
        # Call to pchip_interpolate(...): (line 463)
        # Processing the call arguments (line 463)
        
        # Obtaining an instance of the builtin type 'list' (line 463)
        list_117750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 463)
        # Adding element type (line 463)
        int_117751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 30), list_117750, int_117751)
        # Adding element type (line 463)
        int_117752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 30), list_117750, int_117752)
        # Adding element type (line 463)
        int_117753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 30), list_117750, int_117753)
        
        
        # Obtaining an instance of the builtin type 'list' (line 463)
        list_117754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 463)
        # Adding element type (line 463)
        int_117755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 39), list_117754, int_117755)
        # Adding element type (line 463)
        int_117756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 39), list_117754, int_117756)
        # Adding element type (line 463)
        int_117757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 39), list_117754, int_117757)
        
        
        # Obtaining an instance of the builtin type 'list' (line 463)
        list_117758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 463)
        # Adding element type (line 463)
        float_117759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 48), list_117758, float_117759)
        
        # Processing the call keyword arguments (line 463)
        int_117760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 59), 'int')
        keyword_117761 = int_117760
        kwargs_117762 = {'der': keyword_117761}
        # Getting the type of 'pchip_interpolate' (line 463)
        pchip_interpolate_117749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 12), 'pchip_interpolate', False)
        # Calling pchip_interpolate(args, kwargs) (line 463)
        pchip_interpolate_call_result_117763 = invoke(stypy.reporting.localization.Localization(__file__, 463, 12), pchip_interpolate_117749, *[list_117750, list_117754, list_117758], **kwargs_117762)
        
        
        # Obtaining an instance of the builtin type 'list' (line 464)
        list_117764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 464)
        # Adding element type (line 464)
        float_117765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 13), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 12), list_117764, float_117765)
        
        # Processing the call keyword arguments (line 462)
        kwargs_117766 = {}
        # Getting the type of 'assert_array_almost_equal' (line 462)
        assert_array_almost_equal_117748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 462)
        assert_array_almost_equal_call_result_117767 = invoke(stypy.reporting.localization.Localization(__file__, 462, 8), assert_array_almost_equal_117748, *[pchip_interpolate_call_result_117763, list_117764], **kwargs_117766)
        
        
        # Call to assert_array_almost_equal(...): (line 466)
        # Processing the call arguments (line 466)
        
        # Call to pchip_interpolate(...): (line 467)
        # Processing the call arguments (line 467)
        
        # Obtaining an instance of the builtin type 'list' (line 467)
        list_117770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 467)
        # Adding element type (line 467)
        int_117771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 30), list_117770, int_117771)
        # Adding element type (line 467)
        int_117772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 30), list_117770, int_117772)
        # Adding element type (line 467)
        int_117773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 30), list_117770, int_117773)
        
        
        # Obtaining an instance of the builtin type 'list' (line 467)
        list_117774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 467)
        # Adding element type (line 467)
        int_117775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 39), list_117774, int_117775)
        # Adding element type (line 467)
        int_117776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 39), list_117774, int_117776)
        # Adding element type (line 467)
        int_117777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 39), list_117774, int_117777)
        
        
        # Obtaining an instance of the builtin type 'list' (line 467)
        list_117778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 467)
        # Adding element type (line 467)
        float_117779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 467, 48), list_117778, float_117779)
        
        # Processing the call keyword arguments (line 467)
        int_117780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 59), 'int')
        keyword_117781 = int_117780
        kwargs_117782 = {'der': keyword_117781}
        # Getting the type of 'pchip_interpolate' (line 467)
        pchip_interpolate_117769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 12), 'pchip_interpolate', False)
        # Calling pchip_interpolate(args, kwargs) (line 467)
        pchip_interpolate_call_result_117783 = invoke(stypy.reporting.localization.Localization(__file__, 467, 12), pchip_interpolate_117769, *[list_117770, list_117774, list_117778], **kwargs_117782)
        
        
        # Obtaining an instance of the builtin type 'list' (line 468)
        list_117784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 468)
        # Adding element type (line 468)
        float_117785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 13), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 12), list_117784, float_117785)
        
        # Processing the call keyword arguments (line 466)
        kwargs_117786 = {}
        # Getting the type of 'assert_array_almost_equal' (line 466)
        assert_array_almost_equal_117768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 466)
        assert_array_almost_equal_call_result_117787 = invoke(stypy.reporting.localization.Localization(__file__, 466, 8), assert_array_almost_equal_117768, *[pchip_interpolate_call_result_117783, list_117784], **kwargs_117786)
        
        
        # Call to assert_array_almost_equal(...): (line 470)
        # Processing the call arguments (line 470)
        
        # Call to pchip_interpolate(...): (line 471)
        # Processing the call arguments (line 471)
        
        # Obtaining an instance of the builtin type 'list' (line 471)
        list_117790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 471)
        # Adding element type (line 471)
        int_117791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 30), list_117790, int_117791)
        # Adding element type (line 471)
        int_117792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 30), list_117790, int_117792)
        # Adding element type (line 471)
        int_117793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 30), list_117790, int_117793)
        
        
        # Obtaining an instance of the builtin type 'list' (line 471)
        list_117794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 471)
        # Adding element type (line 471)
        int_117795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 39), list_117794, int_117795)
        # Adding element type (line 471)
        int_117796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 39), list_117794, int_117796)
        # Adding element type (line 471)
        int_117797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 39), list_117794, int_117797)
        
        
        # Obtaining an instance of the builtin type 'list' (line 471)
        list_117798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 471)
        # Adding element type (line 471)
        float_117799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 48), list_117798, float_117799)
        
        # Processing the call keyword arguments (line 471)
        
        # Obtaining an instance of the builtin type 'list' (line 471)
        list_117800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 471)
        # Adding element type (line 471)
        int_117801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 59), list_117800, int_117801)
        # Adding element type (line 471)
        int_117802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 59), list_117800, int_117802)
        
        keyword_117803 = list_117800
        kwargs_117804 = {'der': keyword_117803}
        # Getting the type of 'pchip_interpolate' (line 471)
        pchip_interpolate_117789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 12), 'pchip_interpolate', False)
        # Calling pchip_interpolate(args, kwargs) (line 471)
        pchip_interpolate_call_result_117805 = invoke(stypy.reporting.localization.Localization(__file__, 471, 12), pchip_interpolate_117789, *[list_117790, list_117794, list_117798], **kwargs_117804)
        
        
        # Obtaining an instance of the builtin type 'list' (line 472)
        list_117806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 472)
        # Adding element type (line 472)
        
        # Obtaining an instance of the builtin type 'list' (line 472)
        list_117807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 472)
        # Adding element type (line 472)
        float_117808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 14), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 13), list_117807, float_117808)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 12), list_117806, list_117807)
        # Adding element type (line 472)
        
        # Obtaining an instance of the builtin type 'list' (line 472)
        list_117809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 472)
        # Adding element type (line 472)
        int_117810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 20), list_117809, int_117810)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 472, 12), list_117806, list_117809)
        
        # Processing the call keyword arguments (line 470)
        kwargs_117811 = {}
        # Getting the type of 'assert_array_almost_equal' (line 470)
        assert_array_almost_equal_117788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 470)
        assert_array_almost_equal_call_result_117812 = invoke(stypy.reporting.localization.Localization(__file__, 470, 8), assert_array_almost_equal_117788, *[pchip_interpolate_call_result_117805, list_117806], **kwargs_117811)
        
        
        # ################# End of 'test_pchip_interpolate(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pchip_interpolate' in the type store
        # Getting the type of 'stypy_return_type' (line 461)
        stypy_return_type_117813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117813)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pchip_interpolate'
        return stypy_return_type_117813


    @norecursion
    def test_roots(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_roots'
        module_type_store = module_type_store.open_function_context('test_roots', 474, 4, False)
        # Assigning a type to the variable 'self' (line 475)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_localization', localization)
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_function_name', 'TestPCHIP.test_roots')
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_param_names_list', [])
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestPCHIP.test_roots.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.test_roots', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_roots', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_roots(...)' code ##################

        
        # Assigning a Call to a Name (line 476):
        
        # Assigning a Call to a Name (line 476):
        
        # Call to pchip(...): (line 476)
        # Processing the call arguments (line 476)
        
        # Obtaining an instance of the builtin type 'list' (line 476)
        list_117815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 476)
        # Adding element type (line 476)
        int_117816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 476, 18), list_117815, int_117816)
        # Adding element type (line 476)
        int_117817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 476, 18), list_117815, int_117817)
        
        
        # Obtaining an instance of the builtin type 'list' (line 476)
        list_117818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 476)
        # Adding element type (line 476)
        int_117819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 476, 26), list_117818, int_117819)
        # Adding element type (line 476)
        int_117820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 476, 26), list_117818, int_117820)
        
        # Processing the call keyword arguments (line 476)
        kwargs_117821 = {}
        # Getting the type of 'pchip' (line 476)
        pchip_117814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 12), 'pchip', False)
        # Calling pchip(args, kwargs) (line 476)
        pchip_call_result_117822 = invoke(stypy.reporting.localization.Localization(__file__, 476, 12), pchip_117814, *[list_117815, list_117818], **kwargs_117821)
        
        # Assigning a type to the variable 'p' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 8), 'p', pchip_call_result_117822)
        
        # Assigning a Call to a Name (line 477):
        
        # Assigning a Call to a Name (line 477):
        
        # Call to roots(...): (line 477)
        # Processing the call keyword arguments (line 477)
        kwargs_117825 = {}
        # Getting the type of 'p' (line 477)
        p_117823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 12), 'p', False)
        # Obtaining the member 'roots' of a type (line 477)
        roots_117824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 12), p_117823, 'roots')
        # Calling roots(args, kwargs) (line 477)
        roots_call_result_117826 = invoke(stypy.reporting.localization.Localization(__file__, 477, 12), roots_117824, *[], **kwargs_117825)
        
        # Assigning a type to the variable 'r' (line 477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 8), 'r', roots_call_result_117826)
        
        # Call to assert_allclose(...): (line 478)
        # Processing the call arguments (line 478)
        # Getting the type of 'r' (line 478)
        r_117828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 24), 'r', False)
        float_117829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 27), 'float')
        # Processing the call keyword arguments (line 478)
        kwargs_117830 = {}
        # Getting the type of 'assert_allclose' (line 478)
        assert_allclose_117827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 478)
        assert_allclose_call_result_117831 = invoke(stypy.reporting.localization.Localization(__file__, 478, 8), assert_allclose_117827, *[r_117828, float_117829], **kwargs_117830)
        
        
        # ################# End of 'test_roots(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_roots' in the type store
        # Getting the type of 'stypy_return_type' (line 474)
        stypy_return_type_117832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_117832)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_roots'
        return stypy_return_type_117832


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 353, 0, False)
        # Assigning a type to the variable 'self' (line 354)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestPCHIP.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestPCHIP' (line 353)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 0), 'TestPCHIP', TestPCHIP)
# Declaration of the 'TestCubicSpline' class

class TestCubicSpline(object, ):

    @staticmethod
    @norecursion
    def check_correctness(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        str_117833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 38), 'str', 'not-a-knot')
        str_117834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 59), 'str', 'not-a-knot')
        float_117835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 483, 30), 'float')
        defaults = [str_117833, str_117834, float_117835]
        # Create a new context for function 'check_correctness'
        module_type_store = module_type_store.open_function_context('check_correctness', 481, 4, False)
        
        # Passed parameters checking function
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_localization', localization)
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_type_of_self', None)
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_function_name', 'check_correctness')
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_param_names_list', ['S', 'bc_start', 'bc_end', 'tol'])
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCubicSpline.check_correctness.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, None, module_type_store, 'check_correctness', ['S', 'bc_start', 'bc_end', 'tol'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_correctness', localization, ['bc_start', 'bc_end', 'tol'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_correctness(...)' code ##################

        str_117836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, (-1)), 'str', 'Check that spline coefficients satisfy the continuity and boundary\n        conditions.')
        
        # Assigning a Attribute to a Name (line 486):
        
        # Assigning a Attribute to a Name (line 486):
        # Getting the type of 'S' (line 486)
        S_117837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 12), 'S')
        # Obtaining the member 'x' of a type (line 486)
        x_117838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 486, 12), S_117837, 'x')
        # Assigning a type to the variable 'x' (line 486)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 486, 8), 'x', x_117838)
        
        # Assigning a Attribute to a Name (line 487):
        
        # Assigning a Attribute to a Name (line 487):
        # Getting the type of 'S' (line 487)
        S_117839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 12), 'S')
        # Obtaining the member 'c' of a type (line 487)
        c_117840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 12), S_117839, 'c')
        # Assigning a type to the variable 'c' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 8), 'c', c_117840)
        
        # Assigning a Call to a Name (line 488):
        
        # Assigning a Call to a Name (line 488):
        
        # Call to diff(...): (line 488)
        # Processing the call arguments (line 488)
        # Getting the type of 'x' (line 488)
        x_117843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 21), 'x', False)
        # Processing the call keyword arguments (line 488)
        kwargs_117844 = {}
        # Getting the type of 'np' (line 488)
        np_117841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 13), 'np', False)
        # Obtaining the member 'diff' of a type (line 488)
        diff_117842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 13), np_117841, 'diff')
        # Calling diff(args, kwargs) (line 488)
        diff_call_result_117845 = invoke(stypy.reporting.localization.Localization(__file__, 488, 13), diff_117842, *[x_117843], **kwargs_117844)
        
        # Assigning a type to the variable 'dx' (line 488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 8), 'dx', diff_call_result_117845)
        
        # Assigning a Call to a Name (line 489):
        
        # Assigning a Call to a Name (line 489):
        
        # Call to reshape(...): (line 489)
        # Processing the call arguments (line 489)
        
        # Obtaining an instance of the builtin type 'list' (line 489)
        list_117848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 489)
        # Adding element type (line 489)
        
        # Obtaining the type of the subscript
        int_117849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 34), 'int')
        # Getting the type of 'dx' (line 489)
        dx_117850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 25), 'dx', False)
        # Obtaining the member 'shape' of a type (line 489)
        shape_117851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 489, 25), dx_117850, 'shape')
        # Obtaining the member '__getitem__' of a type (line 489)
        getitem___117852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 489, 25), shape_117851, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 489)
        subscript_call_result_117853 = invoke(stypy.reporting.localization.Localization(__file__, 489, 25), getitem___117852, int_117849)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 24), list_117848, subscript_call_result_117853)
        
        
        # Obtaining an instance of the builtin type 'list' (line 489)
        list_117854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 489)
        # Adding element type (line 489)
        int_117855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 489, 40), list_117854, int_117855)
        
        # Getting the type of 'c' (line 489)
        c_117856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 47), 'c', False)
        # Obtaining the member 'ndim' of a type (line 489)
        ndim_117857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 489, 47), c_117856, 'ndim')
        int_117858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 56), 'int')
        # Applying the binary operator '-' (line 489)
        result_sub_117859 = python_operator(stypy.reporting.localization.Localization(__file__, 489, 47), '-', ndim_117857, int_117858)
        
        # Applying the binary operator '*' (line 489)
        result_mul_117860 = python_operator(stypy.reporting.localization.Localization(__file__, 489, 40), '*', list_117854, result_sub_117859)
        
        # Applying the binary operator '+' (line 489)
        result_add_117861 = python_operator(stypy.reporting.localization.Localization(__file__, 489, 24), '+', list_117848, result_mul_117860)
        
        # Processing the call keyword arguments (line 489)
        kwargs_117862 = {}
        # Getting the type of 'dx' (line 489)
        dx_117846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 13), 'dx', False)
        # Obtaining the member 'reshape' of a type (line 489)
        reshape_117847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 489, 13), dx_117846, 'reshape')
        # Calling reshape(args, kwargs) (line 489)
        reshape_call_result_117863 = invoke(stypy.reporting.localization.Localization(__file__, 489, 13), reshape_117847, *[result_add_117861], **kwargs_117862)
        
        # Assigning a type to the variable 'dx' (line 489)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 489, 8), 'dx', reshape_call_result_117863)
        
        # Assigning a Subscript to a Name (line 490):
        
        # Assigning a Subscript to a Name (line 490):
        
        # Obtaining the type of the subscript
        int_117864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 18), 'int')
        slice_117865 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 490, 14), None, int_117864, None)
        # Getting the type of 'dx' (line 490)
        dx_117866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 14), 'dx')
        # Obtaining the member '__getitem__' of a type (line 490)
        getitem___117867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 14), dx_117866, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 490)
        subscript_call_result_117868 = invoke(stypy.reporting.localization.Localization(__file__, 490, 14), getitem___117867, slice_117865)
        
        # Assigning a type to the variable 'dxi' (line 490)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 8), 'dxi', subscript_call_result_117868)
        
        # Call to assert_allclose(...): (line 493)
        # Processing the call arguments (line 493)
        
        # Obtaining the type of the subscript
        int_117870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 26), 'int')
        int_117871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 29), 'int')
        slice_117872 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 493, 24), int_117871, None, None)
        # Getting the type of 'c' (line 493)
        c_117873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 24), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 493)
        getitem___117874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 24), c_117873, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 493)
        subscript_call_result_117875 = invoke(stypy.reporting.localization.Localization(__file__, 493, 24), getitem___117874, (int_117870, slice_117872))
        
        
        # Obtaining the type of the subscript
        int_117876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 36), 'int')
        int_117877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 40), 'int')
        slice_117878 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 493, 34), None, int_117877, None)
        # Getting the type of 'c' (line 493)
        c_117879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 34), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 493)
        getitem___117880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 34), c_117879, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 493)
        subscript_call_result_117881 = invoke(stypy.reporting.localization.Localization(__file__, 493, 34), getitem___117880, (int_117876, slice_117878))
        
        # Getting the type of 'dxi' (line 493)
        dxi_117882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 46), 'dxi', False)
        int_117883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 51), 'int')
        # Applying the binary operator '**' (line 493)
        result_pow_117884 = python_operator(stypy.reporting.localization.Localization(__file__, 493, 46), '**', dxi_117882, int_117883)
        
        # Applying the binary operator '*' (line 493)
        result_mul_117885 = python_operator(stypy.reporting.localization.Localization(__file__, 493, 34), '*', subscript_call_result_117881, result_pow_117884)
        
        
        # Obtaining the type of the subscript
        int_117886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 57), 'int')
        int_117887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 61), 'int')
        slice_117888 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 493, 55), None, int_117887, None)
        # Getting the type of 'c' (line 493)
        c_117889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 55), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 493)
        getitem___117890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 55), c_117889, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 493)
        subscript_call_result_117891 = invoke(stypy.reporting.localization.Localization(__file__, 493, 55), getitem___117890, (int_117886, slice_117888))
        
        # Getting the type of 'dxi' (line 493)
        dxi_117892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 67), 'dxi', False)
        int_117893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 72), 'int')
        # Applying the binary operator '**' (line 493)
        result_pow_117894 = python_operator(stypy.reporting.localization.Localization(__file__, 493, 67), '**', dxi_117892, int_117893)
        
        # Applying the binary operator '*' (line 493)
        result_mul_117895 = python_operator(stypy.reporting.localization.Localization(__file__, 493, 55), '*', subscript_call_result_117891, result_pow_117894)
        
        # Applying the binary operator '+' (line 493)
        result_add_117896 = python_operator(stypy.reporting.localization.Localization(__file__, 493, 34), '+', result_mul_117885, result_mul_117895)
        
        
        # Obtaining the type of the subscript
        int_117897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 26), 'int')
        int_117898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 30), 'int')
        slice_117899 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 494, 24), None, int_117898, None)
        # Getting the type of 'c' (line 494)
        c_117900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 24), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 494)
        getitem___117901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 24), c_117900, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 494)
        subscript_call_result_117902 = invoke(stypy.reporting.localization.Localization(__file__, 494, 24), getitem___117901, (int_117897, slice_117899))
        
        # Getting the type of 'dxi' (line 494)
        dxi_117903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 36), 'dxi', False)
        # Applying the binary operator '*' (line 494)
        result_mul_117904 = python_operator(stypy.reporting.localization.Localization(__file__, 494, 24), '*', subscript_call_result_117902, dxi_117903)
        
        # Applying the binary operator '+' (line 493)
        result_add_117905 = python_operator(stypy.reporting.localization.Localization(__file__, 493, 74), '+', result_add_117896, result_mul_117904)
        
        
        # Obtaining the type of the subscript
        int_117906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 44), 'int')
        int_117907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 48), 'int')
        slice_117908 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 494, 42), None, int_117907, None)
        # Getting the type of 'c' (line 494)
        c_117909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 42), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 494)
        getitem___117910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 42), c_117909, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 494)
        subscript_call_result_117911 = invoke(stypy.reporting.localization.Localization(__file__, 494, 42), getitem___117910, (int_117906, slice_117908))
        
        # Applying the binary operator '+' (line 494)
        result_add_117912 = python_operator(stypy.reporting.localization.Localization(__file__, 494, 40), '+', result_add_117905, subscript_call_result_117911)
        
        # Processing the call keyword arguments (line 493)
        # Getting the type of 'tol' (line 494)
        tol_117913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 58), 'tol', False)
        keyword_117914 = tol_117913
        # Getting the type of 'tol' (line 494)
        tol_117915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 68), 'tol', False)
        keyword_117916 = tol_117915
        kwargs_117917 = {'rtol': keyword_117914, 'atol': keyword_117916}
        # Getting the type of 'assert_allclose' (line 493)
        assert_allclose_117869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 493)
        assert_allclose_call_result_117918 = invoke(stypy.reporting.localization.Localization(__file__, 493, 8), assert_allclose_117869, *[subscript_call_result_117875, result_add_117912], **kwargs_117917)
        
        
        # Call to assert_allclose(...): (line 495)
        # Processing the call arguments (line 495)
        
        # Obtaining the type of the subscript
        int_117920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 26), 'int')
        int_117921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 29), 'int')
        slice_117922 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 495, 24), int_117921, None, None)
        # Getting the type of 'c' (line 495)
        c_117923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 24), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 495)
        getitem___117924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 24), c_117923, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 495)
        subscript_call_result_117925 = invoke(stypy.reporting.localization.Localization(__file__, 495, 24), getitem___117924, (int_117920, slice_117922))
        
        int_117926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 34), 'int')
        
        # Obtaining the type of the subscript
        int_117927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 40), 'int')
        int_117928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 44), 'int')
        slice_117929 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 495, 38), None, int_117928, None)
        # Getting the type of 'c' (line 495)
        c_117930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 38), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 495)
        getitem___117931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 495, 38), c_117930, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 495)
        subscript_call_result_117932 = invoke(stypy.reporting.localization.Localization(__file__, 495, 38), getitem___117931, (int_117927, slice_117929))
        
        # Applying the binary operator '*' (line 495)
        result_mul_117933 = python_operator(stypy.reporting.localization.Localization(__file__, 495, 34), '*', int_117926, subscript_call_result_117932)
        
        # Getting the type of 'dxi' (line 495)
        dxi_117934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 50), 'dxi', False)
        int_117935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 55), 'int')
        # Applying the binary operator '**' (line 495)
        result_pow_117936 = python_operator(stypy.reporting.localization.Localization(__file__, 495, 50), '**', dxi_117934, int_117935)
        
        # Applying the binary operator '*' (line 495)
        result_mul_117937 = python_operator(stypy.reporting.localization.Localization(__file__, 495, 48), '*', result_mul_117933, result_pow_117936)
        
        int_117938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 24), 'int')
        
        # Obtaining the type of the subscript
        int_117939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 30), 'int')
        int_117940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 34), 'int')
        slice_117941 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 496, 28), None, int_117940, None)
        # Getting the type of 'c' (line 496)
        c_117942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 28), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 496)
        getitem___117943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 28), c_117942, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 496)
        subscript_call_result_117944 = invoke(stypy.reporting.localization.Localization(__file__, 496, 28), getitem___117943, (int_117939, slice_117941))
        
        # Applying the binary operator '*' (line 496)
        result_mul_117945 = python_operator(stypy.reporting.localization.Localization(__file__, 496, 24), '*', int_117938, subscript_call_result_117944)
        
        # Getting the type of 'dxi' (line 496)
        dxi_117946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 40), 'dxi', False)
        # Applying the binary operator '*' (line 496)
        result_mul_117947 = python_operator(stypy.reporting.localization.Localization(__file__, 496, 38), '*', result_mul_117945, dxi_117946)
        
        # Applying the binary operator '+' (line 495)
        result_add_117948 = python_operator(stypy.reporting.localization.Localization(__file__, 495, 34), '+', result_mul_117937, result_mul_117947)
        
        
        # Obtaining the type of the subscript
        int_117949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 48), 'int')
        int_117950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 52), 'int')
        slice_117951 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 496, 46), None, int_117950, None)
        # Getting the type of 'c' (line 496)
        c_117952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 46), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 496)
        getitem___117953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 46), c_117952, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 496)
        subscript_call_result_117954 = invoke(stypy.reporting.localization.Localization(__file__, 496, 46), getitem___117953, (int_117949, slice_117951))
        
        # Applying the binary operator '+' (line 496)
        result_add_117955 = python_operator(stypy.reporting.localization.Localization(__file__, 496, 44), '+', result_add_117948, subscript_call_result_117954)
        
        # Processing the call keyword arguments (line 495)
        # Getting the type of 'tol' (line 496)
        tol_117956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 62), 'tol', False)
        keyword_117957 = tol_117956
        # Getting the type of 'tol' (line 496)
        tol_117958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 72), 'tol', False)
        keyword_117959 = tol_117958
        kwargs_117960 = {'rtol': keyword_117957, 'atol': keyword_117959}
        # Getting the type of 'assert_allclose' (line 495)
        assert_allclose_117919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 495)
        assert_allclose_call_result_117961 = invoke(stypy.reporting.localization.Localization(__file__, 495, 8), assert_allclose_117919, *[subscript_call_result_117925, result_add_117955], **kwargs_117960)
        
        
        # Call to assert_allclose(...): (line 497)
        # Processing the call arguments (line 497)
        
        # Obtaining the type of the subscript
        int_117963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 26), 'int')
        int_117964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 29), 'int')
        slice_117965 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 497, 24), int_117964, None, None)
        # Getting the type of 'c' (line 497)
        c_117966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 24), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 497)
        getitem___117967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 24), c_117966, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 497)
        subscript_call_result_117968 = invoke(stypy.reporting.localization.Localization(__file__, 497, 24), getitem___117967, (int_117963, slice_117965))
        
        int_117969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 34), 'int')
        
        # Obtaining the type of the subscript
        int_117970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 40), 'int')
        int_117971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 44), 'int')
        slice_117972 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 497, 38), None, int_117971, None)
        # Getting the type of 'c' (line 497)
        c_117973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 38), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 497)
        getitem___117974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 38), c_117973, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 497)
        subscript_call_result_117975 = invoke(stypy.reporting.localization.Localization(__file__, 497, 38), getitem___117974, (int_117970, slice_117972))
        
        # Applying the binary operator '*' (line 497)
        result_mul_117976 = python_operator(stypy.reporting.localization.Localization(__file__, 497, 34), '*', int_117969, subscript_call_result_117975)
        
        # Getting the type of 'dxi' (line 497)
        dxi_117977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 50), 'dxi', False)
        # Applying the binary operator '*' (line 497)
        result_mul_117978 = python_operator(stypy.reporting.localization.Localization(__file__, 497, 48), '*', result_mul_117976, dxi_117977)
        
        
        # Obtaining the type of the subscript
        int_117979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 58), 'int')
        int_117980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 62), 'int')
        slice_117981 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 497, 56), None, int_117980, None)
        # Getting the type of 'c' (line 497)
        c_117982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 56), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 497)
        getitem___117983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 56), c_117982, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 497)
        subscript_call_result_117984 = invoke(stypy.reporting.localization.Localization(__file__, 497, 56), getitem___117983, (int_117979, slice_117981))
        
        # Applying the binary operator '+' (line 497)
        result_add_117985 = python_operator(stypy.reporting.localization.Localization(__file__, 497, 34), '+', result_mul_117978, subscript_call_result_117984)
        
        # Processing the call keyword arguments (line 497)
        # Getting the type of 'tol' (line 498)
        tol_117986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 29), 'tol', False)
        keyword_117987 = tol_117986
        # Getting the type of 'tol' (line 498)
        tol_117988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 39), 'tol', False)
        keyword_117989 = tol_117988
        kwargs_117990 = {'rtol': keyword_117987, 'atol': keyword_117989}
        # Getting the type of 'assert_allclose' (line 497)
        assert_allclose_117962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 497)
        assert_allclose_call_result_117991 = invoke(stypy.reporting.localization.Localization(__file__, 497, 8), assert_allclose_117962, *[subscript_call_result_117968, result_add_117985], **kwargs_117990)
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'x' (line 501)
        x_117992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 11), 'x')
        # Obtaining the member 'size' of a type (line 501)
        size_117993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 11), x_117992, 'size')
        int_117994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 21), 'int')
        # Applying the binary operator '==' (line 501)
        result_eq_117995 = python_operator(stypy.reporting.localization.Localization(__file__, 501, 11), '==', size_117993, int_117994)
        
        
        # Getting the type of 'bc_start' (line 501)
        bc_start_117996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 27), 'bc_start')
        str_117997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 39), 'str', 'not-a-knot')
        # Applying the binary operator '==' (line 501)
        result_eq_117998 = python_operator(stypy.reporting.localization.Localization(__file__, 501, 27), '==', bc_start_117996, str_117997)
        
        # Applying the binary operator 'and' (line 501)
        result_and_keyword_117999 = python_operator(stypy.reporting.localization.Localization(__file__, 501, 11), 'and', result_eq_117995, result_eq_117998)
        
        # Getting the type of 'bc_end' (line 501)
        bc_end_118000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 56), 'bc_end')
        str_118001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 66), 'str', 'not-a-knot')
        # Applying the binary operator '==' (line 501)
        result_eq_118002 = python_operator(stypy.reporting.localization.Localization(__file__, 501, 56), '==', bc_end_118000, str_118001)
        
        # Applying the binary operator 'and' (line 501)
        result_and_keyword_118003 = python_operator(stypy.reporting.localization.Localization(__file__, 501, 11), 'and', result_and_keyword_117999, result_eq_118002)
        
        # Testing the type of an if condition (line 501)
        if_condition_118004 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 501, 8), result_and_keyword_118003)
        # Assigning a type to the variable 'if_condition_118004' (line 501)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 501, 8), 'if_condition_118004', if_condition_118004)
        # SSA begins for if statement (line 501)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to assert_allclose(...): (line 502)
        # Processing the call arguments (line 502)
        
        # Obtaining the type of the subscript
        int_118006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 502, 30), 'int')
        # Getting the type of 'c' (line 502)
        c_118007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 28), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 502)
        getitem___118008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 28), c_118007, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 502)
        subscript_call_result_118009 = invoke(stypy.reporting.localization.Localization(__file__, 502, 28), getitem___118008, int_118006)
        
        int_118010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 502, 34), 'int')
        # Processing the call keyword arguments (line 502)
        # Getting the type of 'tol' (line 502)
        tol_118011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 42), 'tol', False)
        keyword_118012 = tol_118011
        # Getting the type of 'tol' (line 502)
        tol_118013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 52), 'tol', False)
        keyword_118014 = tol_118013
        kwargs_118015 = {'rtol': keyword_118012, 'atol': keyword_118014}
        # Getting the type of 'assert_allclose' (line 502)
        assert_allclose_118005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 502)
        assert_allclose_call_result_118016 = invoke(stypy.reporting.localization.Localization(__file__, 502, 12), assert_allclose_118005, *[subscript_call_result_118009, int_118010], **kwargs_118015)
        
        # Assigning a type to the variable 'stypy_return_type' (line 503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 503, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 501)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'bc_start' (line 506)
        bc_start_118017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 11), 'bc_start')
        str_118018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 23), 'str', 'periodic')
        # Applying the binary operator '==' (line 506)
        result_eq_118019 = python_operator(stypy.reporting.localization.Localization(__file__, 506, 11), '==', bc_start_118017, str_118018)
        
        # Testing the type of an if condition (line 506)
        if_condition_118020 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 506, 8), result_eq_118019)
        # Assigning a type to the variable 'if_condition_118020' (line 506)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 8), 'if_condition_118020', if_condition_118020)
        # SSA begins for if statement (line 506)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to assert_allclose(...): (line 507)
        # Processing the call arguments (line 507)
        
        # Call to S(...): (line 507)
        # Processing the call arguments (line 507)
        
        # Obtaining the type of the subscript
        int_118023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 32), 'int')
        # Getting the type of 'x' (line 507)
        x_118024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 507)
        getitem___118025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 507, 30), x_118024, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 507)
        subscript_call_result_118026 = invoke(stypy.reporting.localization.Localization(__file__, 507, 30), getitem___118025, int_118023)
        
        int_118027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 36), 'int')
        # Processing the call keyword arguments (line 507)
        kwargs_118028 = {}
        # Getting the type of 'S' (line 507)
        S_118022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 28), 'S', False)
        # Calling S(args, kwargs) (line 507)
        S_call_result_118029 = invoke(stypy.reporting.localization.Localization(__file__, 507, 28), S_118022, *[subscript_call_result_118026, int_118027], **kwargs_118028)
        
        
        # Call to S(...): (line 507)
        # Processing the call arguments (line 507)
        
        # Obtaining the type of the subscript
        int_118031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 44), 'int')
        # Getting the type of 'x' (line 507)
        x_118032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 42), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 507)
        getitem___118033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 507, 42), x_118032, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 507)
        subscript_call_result_118034 = invoke(stypy.reporting.localization.Localization(__file__, 507, 42), getitem___118033, int_118031)
        
        int_118035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 49), 'int')
        # Processing the call keyword arguments (line 507)
        kwargs_118036 = {}
        # Getting the type of 'S' (line 507)
        S_118030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 40), 'S', False)
        # Calling S(args, kwargs) (line 507)
        S_call_result_118037 = invoke(stypy.reporting.localization.Localization(__file__, 507, 40), S_118030, *[subscript_call_result_118034, int_118035], **kwargs_118036)
        
        # Processing the call keyword arguments (line 507)
        # Getting the type of 'tol' (line 507)
        tol_118038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 58), 'tol', False)
        keyword_118039 = tol_118038
        # Getting the type of 'tol' (line 507)
        tol_118040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 68), 'tol', False)
        keyword_118041 = tol_118040
        kwargs_118042 = {'rtol': keyword_118039, 'atol': keyword_118041}
        # Getting the type of 'assert_allclose' (line 507)
        assert_allclose_118021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 507)
        assert_allclose_call_result_118043 = invoke(stypy.reporting.localization.Localization(__file__, 507, 12), assert_allclose_118021, *[S_call_result_118029, S_call_result_118037], **kwargs_118042)
        
        
        # Call to assert_allclose(...): (line 508)
        # Processing the call arguments (line 508)
        
        # Call to S(...): (line 508)
        # Processing the call arguments (line 508)
        
        # Obtaining the type of the subscript
        int_118046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 32), 'int')
        # Getting the type of 'x' (line 508)
        x_118047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 508)
        getitem___118048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 30), x_118047, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 508)
        subscript_call_result_118049 = invoke(stypy.reporting.localization.Localization(__file__, 508, 30), getitem___118048, int_118046)
        
        int_118050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 36), 'int')
        # Processing the call keyword arguments (line 508)
        kwargs_118051 = {}
        # Getting the type of 'S' (line 508)
        S_118045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 28), 'S', False)
        # Calling S(args, kwargs) (line 508)
        S_call_result_118052 = invoke(stypy.reporting.localization.Localization(__file__, 508, 28), S_118045, *[subscript_call_result_118049, int_118050], **kwargs_118051)
        
        
        # Call to S(...): (line 508)
        # Processing the call arguments (line 508)
        
        # Obtaining the type of the subscript
        int_118054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 44), 'int')
        # Getting the type of 'x' (line 508)
        x_118055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 42), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 508)
        getitem___118056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 42), x_118055, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 508)
        subscript_call_result_118057 = invoke(stypy.reporting.localization.Localization(__file__, 508, 42), getitem___118056, int_118054)
        
        int_118058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 49), 'int')
        # Processing the call keyword arguments (line 508)
        kwargs_118059 = {}
        # Getting the type of 'S' (line 508)
        S_118053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 40), 'S', False)
        # Calling S(args, kwargs) (line 508)
        S_call_result_118060 = invoke(stypy.reporting.localization.Localization(__file__, 508, 40), S_118053, *[subscript_call_result_118057, int_118058], **kwargs_118059)
        
        # Processing the call keyword arguments (line 508)
        # Getting the type of 'tol' (line 508)
        tol_118061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 58), 'tol', False)
        keyword_118062 = tol_118061
        # Getting the type of 'tol' (line 508)
        tol_118063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 68), 'tol', False)
        keyword_118064 = tol_118063
        kwargs_118065 = {'rtol': keyword_118062, 'atol': keyword_118064}
        # Getting the type of 'assert_allclose' (line 508)
        assert_allclose_118044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 508)
        assert_allclose_call_result_118066 = invoke(stypy.reporting.localization.Localization(__file__, 508, 12), assert_allclose_118044, *[S_call_result_118052, S_call_result_118060], **kwargs_118065)
        
        
        # Call to assert_allclose(...): (line 509)
        # Processing the call arguments (line 509)
        
        # Call to S(...): (line 509)
        # Processing the call arguments (line 509)
        
        # Obtaining the type of the subscript
        int_118069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 32), 'int')
        # Getting the type of 'x' (line 509)
        x_118070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 509)
        getitem___118071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 30), x_118070, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 509)
        subscript_call_result_118072 = invoke(stypy.reporting.localization.Localization(__file__, 509, 30), getitem___118071, int_118069)
        
        int_118073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 36), 'int')
        # Processing the call keyword arguments (line 509)
        kwargs_118074 = {}
        # Getting the type of 'S' (line 509)
        S_118068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 28), 'S', False)
        # Calling S(args, kwargs) (line 509)
        S_call_result_118075 = invoke(stypy.reporting.localization.Localization(__file__, 509, 28), S_118068, *[subscript_call_result_118072, int_118073], **kwargs_118074)
        
        
        # Call to S(...): (line 509)
        # Processing the call arguments (line 509)
        
        # Obtaining the type of the subscript
        int_118077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 44), 'int')
        # Getting the type of 'x' (line 509)
        x_118078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 42), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 509)
        getitem___118079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 42), x_118078, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 509)
        subscript_call_result_118080 = invoke(stypy.reporting.localization.Localization(__file__, 509, 42), getitem___118079, int_118077)
        
        int_118081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 49), 'int')
        # Processing the call keyword arguments (line 509)
        kwargs_118082 = {}
        # Getting the type of 'S' (line 509)
        S_118076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 40), 'S', False)
        # Calling S(args, kwargs) (line 509)
        S_call_result_118083 = invoke(stypy.reporting.localization.Localization(__file__, 509, 40), S_118076, *[subscript_call_result_118080, int_118081], **kwargs_118082)
        
        # Processing the call keyword arguments (line 509)
        # Getting the type of 'tol' (line 509)
        tol_118084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 58), 'tol', False)
        keyword_118085 = tol_118084
        # Getting the type of 'tol' (line 509)
        tol_118086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 68), 'tol', False)
        keyword_118087 = tol_118086
        kwargs_118088 = {'rtol': keyword_118085, 'atol': keyword_118087}
        # Getting the type of 'assert_allclose' (line 509)
        assert_allclose_118067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 509)
        assert_allclose_call_result_118089 = invoke(stypy.reporting.localization.Localization(__file__, 509, 12), assert_allclose_118067, *[S_call_result_118075, S_call_result_118083], **kwargs_118088)
        
        # Assigning a type to the variable 'stypy_return_type' (line 510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 506)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'bc_start' (line 513)
        bc_start_118090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 11), 'bc_start')
        str_118091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 23), 'str', 'not-a-knot')
        # Applying the binary operator '==' (line 513)
        result_eq_118092 = python_operator(stypy.reporting.localization.Localization(__file__, 513, 11), '==', bc_start_118090, str_118091)
        
        # Testing the type of an if condition (line 513)
        if_condition_118093 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 513, 8), result_eq_118092)
        # Assigning a type to the variable 'if_condition_118093' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'if_condition_118093', if_condition_118093)
        # SSA begins for if statement (line 513)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'x' (line 514)
        x_118094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 15), 'x')
        # Obtaining the member 'size' of a type (line 514)
        size_118095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 15), x_118094, 'size')
        int_118096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 25), 'int')
        # Applying the binary operator '==' (line 514)
        result_eq_118097 = python_operator(stypy.reporting.localization.Localization(__file__, 514, 15), '==', size_118095, int_118096)
        
        # Testing the type of an if condition (line 514)
        if_condition_118098 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 514, 12), result_eq_118097)
        # Assigning a type to the variable 'if_condition_118098' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 12), 'if_condition_118098', if_condition_118098)
        # SSA begins for if statement (line 514)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 515):
        
        # Assigning a BinOp to a Name (line 515):
        
        # Call to S(...): (line 515)
        # Processing the call arguments (line 515)
        
        # Obtaining the type of the subscript
        int_118100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 29), 'int')
        # Getting the type of 'x' (line 515)
        x_118101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 27), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 515)
        getitem___118102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 27), x_118101, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 515)
        subscript_call_result_118103 = invoke(stypy.reporting.localization.Localization(__file__, 515, 27), getitem___118102, int_118100)
        
        # Processing the call keyword arguments (line 515)
        kwargs_118104 = {}
        # Getting the type of 'S' (line 515)
        S_118099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 25), 'S', False)
        # Calling S(args, kwargs) (line 515)
        S_call_result_118105 = invoke(stypy.reporting.localization.Localization(__file__, 515, 25), S_118099, *[subscript_call_result_118103], **kwargs_118104)
        
        
        # Call to S(...): (line 515)
        # Processing the call arguments (line 515)
        
        # Obtaining the type of the subscript
        int_118107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 39), 'int')
        # Getting the type of 'x' (line 515)
        x_118108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 37), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 515)
        getitem___118109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 37), x_118108, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 515)
        subscript_call_result_118110 = invoke(stypy.reporting.localization.Localization(__file__, 515, 37), getitem___118109, int_118107)
        
        # Processing the call keyword arguments (line 515)
        kwargs_118111 = {}
        # Getting the type of 'S' (line 515)
        S_118106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 35), 'S', False)
        # Calling S(args, kwargs) (line 515)
        S_call_result_118112 = invoke(stypy.reporting.localization.Localization(__file__, 515, 35), S_118106, *[subscript_call_result_118110], **kwargs_118111)
        
        # Applying the binary operator '-' (line 515)
        result_sub_118113 = python_operator(stypy.reporting.localization.Localization(__file__, 515, 25), '-', S_call_result_118105, S_call_result_118112)
        
        
        # Obtaining the type of the subscript
        int_118114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 49), 'int')
        # Getting the type of 'dx' (line 515)
        dx_118115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 46), 'dx')
        # Obtaining the member '__getitem__' of a type (line 515)
        getitem___118116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 46), dx_118115, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 515)
        subscript_call_result_118117 = invoke(stypy.reporting.localization.Localization(__file__, 515, 46), getitem___118116, int_118114)
        
        # Applying the binary operator 'div' (line 515)
        result_div_118118 = python_operator(stypy.reporting.localization.Localization(__file__, 515, 24), 'div', result_sub_118113, subscript_call_result_118117)
        
        # Assigning a type to the variable 'slope' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 16), 'slope', result_div_118118)
        
        # Call to assert_allclose(...): (line 516)
        # Processing the call arguments (line 516)
        
        # Call to S(...): (line 516)
        # Processing the call arguments (line 516)
        
        # Obtaining the type of the subscript
        int_118121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, 36), 'int')
        # Getting the type of 'x' (line 516)
        x_118122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 34), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 516)
        getitem___118123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 34), x_118122, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 516)
        subscript_call_result_118124 = invoke(stypy.reporting.localization.Localization(__file__, 516, 34), getitem___118123, int_118121)
        
        int_118125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, 40), 'int')
        # Processing the call keyword arguments (line 516)
        kwargs_118126 = {}
        # Getting the type of 'S' (line 516)
        S_118120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 32), 'S', False)
        # Calling S(args, kwargs) (line 516)
        S_call_result_118127 = invoke(stypy.reporting.localization.Localization(__file__, 516, 32), S_118120, *[subscript_call_result_118124, int_118125], **kwargs_118126)
        
        # Getting the type of 'slope' (line 516)
        slope_118128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 44), 'slope', False)
        # Processing the call keyword arguments (line 516)
        # Getting the type of 'tol' (line 516)
        tol_118129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 56), 'tol', False)
        keyword_118130 = tol_118129
        # Getting the type of 'tol' (line 516)
        tol_118131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 66), 'tol', False)
        keyword_118132 = tol_118131
        kwargs_118133 = {'rtol': keyword_118130, 'atol': keyword_118132}
        # Getting the type of 'assert_allclose' (line 516)
        assert_allclose_118119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 16), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 516)
        assert_allclose_call_result_118134 = invoke(stypy.reporting.localization.Localization(__file__, 516, 16), assert_allclose_118119, *[S_call_result_118127, slope_118128], **kwargs_118133)
        
        # SSA branch for the else part of an if statement (line 514)
        module_type_store.open_ssa_branch('else')
        
        # Call to assert_allclose(...): (line 518)
        # Processing the call arguments (line 518)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 518)
        tuple_118136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 518)
        # Adding element type (line 518)
        int_118137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 518, 34), tuple_118136, int_118137)
        # Adding element type (line 518)
        int_118138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 518, 34), tuple_118136, int_118138)
        
        # Getting the type of 'c' (line 518)
        c_118139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 32), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 518)
        getitem___118140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 32), c_118139, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 518)
        subscript_call_result_118141 = invoke(stypy.reporting.localization.Localization(__file__, 518, 32), getitem___118140, tuple_118136)
        
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 518)
        tuple_118142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 518)
        # Adding element type (line 518)
        int_118143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 518, 43), tuple_118142, int_118143)
        # Adding element type (line 518)
        int_118144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 518, 43), tuple_118142, int_118144)
        
        # Getting the type of 'c' (line 518)
        c_118145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 41), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 518)
        getitem___118146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 41), c_118145, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 518)
        subscript_call_result_118147 = invoke(stypy.reporting.localization.Localization(__file__, 518, 41), getitem___118146, tuple_118142)
        
        # Processing the call keyword arguments (line 518)
        # Getting the type of 'tol' (line 518)
        tol_118148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 55), 'tol', False)
        keyword_118149 = tol_118148
        # Getting the type of 'tol' (line 518)
        tol_118150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 65), 'tol', False)
        keyword_118151 = tol_118150
        kwargs_118152 = {'rtol': keyword_118149, 'atol': keyword_118151}
        # Getting the type of 'assert_allclose' (line 518)
        assert_allclose_118135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 518)
        assert_allclose_call_result_118153 = invoke(stypy.reporting.localization.Localization(__file__, 518, 16), assert_allclose_118135, *[subscript_call_result_118141, subscript_call_result_118147], **kwargs_118152)
        
        # SSA join for if statement (line 514)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 513)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'bc_start' (line 519)
        bc_start_118154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 13), 'bc_start')
        str_118155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 25), 'str', 'clamped')
        # Applying the binary operator '==' (line 519)
        result_eq_118156 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 13), '==', bc_start_118154, str_118155)
        
        # Testing the type of an if condition (line 519)
        if_condition_118157 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 519, 13), result_eq_118156)
        # Assigning a type to the variable 'if_condition_118157' (line 519)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 519, 13), 'if_condition_118157', if_condition_118157)
        # SSA begins for if statement (line 519)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to assert_allclose(...): (line 520)
        # Processing the call arguments (line 520)
        
        # Call to S(...): (line 520)
        # Processing the call arguments (line 520)
        
        # Obtaining the type of the subscript
        int_118160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 520, 32), 'int')
        # Getting the type of 'x' (line 520)
        x_118161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 520)
        getitem___118162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 520, 30), x_118161, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 520)
        subscript_call_result_118163 = invoke(stypy.reporting.localization.Localization(__file__, 520, 30), getitem___118162, int_118160)
        
        int_118164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 520, 36), 'int')
        # Processing the call keyword arguments (line 520)
        kwargs_118165 = {}
        # Getting the type of 'S' (line 520)
        S_118159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 28), 'S', False)
        # Calling S(args, kwargs) (line 520)
        S_call_result_118166 = invoke(stypy.reporting.localization.Localization(__file__, 520, 28), S_118159, *[subscript_call_result_118163, int_118164], **kwargs_118165)
        
        int_118167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 520, 40), 'int')
        # Processing the call keyword arguments (line 520)
        # Getting the type of 'tol' (line 520)
        tol_118168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 48), 'tol', False)
        keyword_118169 = tol_118168
        # Getting the type of 'tol' (line 520)
        tol_118170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 58), 'tol', False)
        keyword_118171 = tol_118170
        kwargs_118172 = {'rtol': keyword_118169, 'atol': keyword_118171}
        # Getting the type of 'assert_allclose' (line 520)
        assert_allclose_118158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 520)
        assert_allclose_call_result_118173 = invoke(stypy.reporting.localization.Localization(__file__, 520, 12), assert_allclose_118158, *[S_call_result_118166, int_118167], **kwargs_118172)
        
        # SSA branch for the else part of an if statement (line 519)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'bc_start' (line 521)
        bc_start_118174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 13), 'bc_start')
        str_118175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 521, 25), 'str', 'natural')
        # Applying the binary operator '==' (line 521)
        result_eq_118176 = python_operator(stypy.reporting.localization.Localization(__file__, 521, 13), '==', bc_start_118174, str_118175)
        
        # Testing the type of an if condition (line 521)
        if_condition_118177 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 521, 13), result_eq_118176)
        # Assigning a type to the variable 'if_condition_118177' (line 521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 13), 'if_condition_118177', if_condition_118177)
        # SSA begins for if statement (line 521)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to assert_allclose(...): (line 522)
        # Processing the call arguments (line 522)
        
        # Call to S(...): (line 522)
        # Processing the call arguments (line 522)
        
        # Obtaining the type of the subscript
        int_118180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 32), 'int')
        # Getting the type of 'x' (line 522)
        x_118181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 522)
        getitem___118182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 30), x_118181, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 522)
        subscript_call_result_118183 = invoke(stypy.reporting.localization.Localization(__file__, 522, 30), getitem___118182, int_118180)
        
        int_118184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 36), 'int')
        # Processing the call keyword arguments (line 522)
        kwargs_118185 = {}
        # Getting the type of 'S' (line 522)
        S_118179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 28), 'S', False)
        # Calling S(args, kwargs) (line 522)
        S_call_result_118186 = invoke(stypy.reporting.localization.Localization(__file__, 522, 28), S_118179, *[subscript_call_result_118183, int_118184], **kwargs_118185)
        
        int_118187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 40), 'int')
        # Processing the call keyword arguments (line 522)
        # Getting the type of 'tol' (line 522)
        tol_118188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 48), 'tol', False)
        keyword_118189 = tol_118188
        # Getting the type of 'tol' (line 522)
        tol_118190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 58), 'tol', False)
        keyword_118191 = tol_118190
        kwargs_118192 = {'rtol': keyword_118189, 'atol': keyword_118191}
        # Getting the type of 'assert_allclose' (line 522)
        assert_allclose_118178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 522)
        assert_allclose_call_result_118193 = invoke(stypy.reporting.localization.Localization(__file__, 522, 12), assert_allclose_118178, *[S_call_result_118186, int_118187], **kwargs_118192)
        
        # SSA branch for the else part of an if statement (line 521)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Tuple (line 524):
        
        # Assigning a Subscript to a Name (line 524):
        
        # Obtaining the type of the subscript
        int_118194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 12), 'int')
        # Getting the type of 'bc_start' (line 524)
        bc_start_118195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 27), 'bc_start')
        # Obtaining the member '__getitem__' of a type (line 524)
        getitem___118196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 12), bc_start_118195, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 524)
        subscript_call_result_118197 = invoke(stypy.reporting.localization.Localization(__file__, 524, 12), getitem___118196, int_118194)
        
        # Assigning a type to the variable 'tuple_var_assignment_115250' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 12), 'tuple_var_assignment_115250', subscript_call_result_118197)
        
        # Assigning a Subscript to a Name (line 524):
        
        # Obtaining the type of the subscript
        int_118198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 12), 'int')
        # Getting the type of 'bc_start' (line 524)
        bc_start_118199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 27), 'bc_start')
        # Obtaining the member '__getitem__' of a type (line 524)
        getitem___118200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 12), bc_start_118199, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 524)
        subscript_call_result_118201 = invoke(stypy.reporting.localization.Localization(__file__, 524, 12), getitem___118200, int_118198)
        
        # Assigning a type to the variable 'tuple_var_assignment_115251' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 12), 'tuple_var_assignment_115251', subscript_call_result_118201)
        
        # Assigning a Name to a Name (line 524):
        # Getting the type of 'tuple_var_assignment_115250' (line 524)
        tuple_var_assignment_115250_118202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 12), 'tuple_var_assignment_115250')
        # Assigning a type to the variable 'order' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 12), 'order', tuple_var_assignment_115250_118202)
        
        # Assigning a Name to a Name (line 524):
        # Getting the type of 'tuple_var_assignment_115251' (line 524)
        tuple_var_assignment_115251_118203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 12), 'tuple_var_assignment_115251')
        # Assigning a type to the variable 'value' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 19), 'value', tuple_var_assignment_115251_118203)
        
        # Call to assert_allclose(...): (line 525)
        # Processing the call arguments (line 525)
        
        # Call to S(...): (line 525)
        # Processing the call arguments (line 525)
        
        # Obtaining the type of the subscript
        int_118206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 32), 'int')
        # Getting the type of 'x' (line 525)
        x_118207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 525)
        getitem___118208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 30), x_118207, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 525)
        subscript_call_result_118209 = invoke(stypy.reporting.localization.Localization(__file__, 525, 30), getitem___118208, int_118206)
        
        # Getting the type of 'order' (line 525)
        order_118210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 36), 'order', False)
        # Processing the call keyword arguments (line 525)
        kwargs_118211 = {}
        # Getting the type of 'S' (line 525)
        S_118205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 28), 'S', False)
        # Calling S(args, kwargs) (line 525)
        S_call_result_118212 = invoke(stypy.reporting.localization.Localization(__file__, 525, 28), S_118205, *[subscript_call_result_118209, order_118210], **kwargs_118211)
        
        # Getting the type of 'value' (line 525)
        value_118213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 44), 'value', False)
        # Processing the call keyword arguments (line 525)
        # Getting the type of 'tol' (line 525)
        tol_118214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 56), 'tol', False)
        keyword_118215 = tol_118214
        # Getting the type of 'tol' (line 525)
        tol_118216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 66), 'tol', False)
        keyword_118217 = tol_118216
        kwargs_118218 = {'rtol': keyword_118215, 'atol': keyword_118217}
        # Getting the type of 'assert_allclose' (line 525)
        assert_allclose_118204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 525)
        assert_allclose_call_result_118219 = invoke(stypy.reporting.localization.Localization(__file__, 525, 12), assert_allclose_118204, *[S_call_result_118212, value_118213], **kwargs_118218)
        
        # SSA join for if statement (line 521)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 519)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 513)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'bc_end' (line 527)
        bc_end_118220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 11), 'bc_end')
        str_118221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 21), 'str', 'not-a-knot')
        # Applying the binary operator '==' (line 527)
        result_eq_118222 = python_operator(stypy.reporting.localization.Localization(__file__, 527, 11), '==', bc_end_118220, str_118221)
        
        # Testing the type of an if condition (line 527)
        if_condition_118223 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 527, 8), result_eq_118222)
        # Assigning a type to the variable 'if_condition_118223' (line 527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 8), 'if_condition_118223', if_condition_118223)
        # SSA begins for if statement (line 527)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'x' (line 528)
        x_118224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 15), 'x')
        # Obtaining the member 'size' of a type (line 528)
        size_118225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 15), x_118224, 'size')
        int_118226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 25), 'int')
        # Applying the binary operator '==' (line 528)
        result_eq_118227 = python_operator(stypy.reporting.localization.Localization(__file__, 528, 15), '==', size_118225, int_118226)
        
        # Testing the type of an if condition (line 528)
        if_condition_118228 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 528, 12), result_eq_118227)
        # Assigning a type to the variable 'if_condition_118228' (line 528)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 528, 12), 'if_condition_118228', if_condition_118228)
        # SSA begins for if statement (line 528)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 529):
        
        # Assigning a BinOp to a Name (line 529):
        
        # Call to S(...): (line 529)
        # Processing the call arguments (line 529)
        
        # Obtaining the type of the subscript
        int_118230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 29), 'int')
        # Getting the type of 'x' (line 529)
        x_118231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 27), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 529)
        getitem___118232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 27), x_118231, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 529)
        subscript_call_result_118233 = invoke(stypy.reporting.localization.Localization(__file__, 529, 27), getitem___118232, int_118230)
        
        # Processing the call keyword arguments (line 529)
        kwargs_118234 = {}
        # Getting the type of 'S' (line 529)
        S_118229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 25), 'S', False)
        # Calling S(args, kwargs) (line 529)
        S_call_result_118235 = invoke(stypy.reporting.localization.Localization(__file__, 529, 25), S_118229, *[subscript_call_result_118233], **kwargs_118234)
        
        
        # Call to S(...): (line 529)
        # Processing the call arguments (line 529)
        
        # Obtaining the type of the subscript
        int_118237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 39), 'int')
        # Getting the type of 'x' (line 529)
        x_118238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 37), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 529)
        getitem___118239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 37), x_118238, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 529)
        subscript_call_result_118240 = invoke(stypy.reporting.localization.Localization(__file__, 529, 37), getitem___118239, int_118237)
        
        # Processing the call keyword arguments (line 529)
        kwargs_118241 = {}
        # Getting the type of 'S' (line 529)
        S_118236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 35), 'S', False)
        # Calling S(args, kwargs) (line 529)
        S_call_result_118242 = invoke(stypy.reporting.localization.Localization(__file__, 529, 35), S_118236, *[subscript_call_result_118240], **kwargs_118241)
        
        # Applying the binary operator '-' (line 529)
        result_sub_118243 = python_operator(stypy.reporting.localization.Localization(__file__, 529, 25), '-', S_call_result_118235, S_call_result_118242)
        
        
        # Obtaining the type of the subscript
        int_118244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 49), 'int')
        # Getting the type of 'dx' (line 529)
        dx_118245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 46), 'dx')
        # Obtaining the member '__getitem__' of a type (line 529)
        getitem___118246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 46), dx_118245, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 529)
        subscript_call_result_118247 = invoke(stypy.reporting.localization.Localization(__file__, 529, 46), getitem___118246, int_118244)
        
        # Applying the binary operator 'div' (line 529)
        result_div_118248 = python_operator(stypy.reporting.localization.Localization(__file__, 529, 24), 'div', result_sub_118243, subscript_call_result_118247)
        
        # Assigning a type to the variable 'slope' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 16), 'slope', result_div_118248)
        
        # Call to assert_allclose(...): (line 530)
        # Processing the call arguments (line 530)
        
        # Call to S(...): (line 530)
        # Processing the call arguments (line 530)
        
        # Obtaining the type of the subscript
        int_118251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 36), 'int')
        # Getting the type of 'x' (line 530)
        x_118252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 34), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 530)
        getitem___118253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 34), x_118252, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 530)
        subscript_call_result_118254 = invoke(stypy.reporting.localization.Localization(__file__, 530, 34), getitem___118253, int_118251)
        
        int_118255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 40), 'int')
        # Processing the call keyword arguments (line 530)
        kwargs_118256 = {}
        # Getting the type of 'S' (line 530)
        S_118250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 32), 'S', False)
        # Calling S(args, kwargs) (line 530)
        S_call_result_118257 = invoke(stypy.reporting.localization.Localization(__file__, 530, 32), S_118250, *[subscript_call_result_118254, int_118255], **kwargs_118256)
        
        # Getting the type of 'slope' (line 530)
        slope_118258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 44), 'slope', False)
        # Processing the call keyword arguments (line 530)
        # Getting the type of 'tol' (line 530)
        tol_118259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 56), 'tol', False)
        keyword_118260 = tol_118259
        # Getting the type of 'tol' (line 530)
        tol_118261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 66), 'tol', False)
        keyword_118262 = tol_118261
        kwargs_118263 = {'rtol': keyword_118260, 'atol': keyword_118262}
        # Getting the type of 'assert_allclose' (line 530)
        assert_allclose_118249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 16), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 530)
        assert_allclose_call_result_118264 = invoke(stypy.reporting.localization.Localization(__file__, 530, 16), assert_allclose_118249, *[S_call_result_118257, slope_118258], **kwargs_118263)
        
        # SSA branch for the else part of an if statement (line 528)
        module_type_store.open_ssa_branch('else')
        
        # Call to assert_allclose(...): (line 532)
        # Processing the call arguments (line 532)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 532)
        tuple_118266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 532)
        # Adding element type (line 532)
        int_118267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 34), tuple_118266, int_118267)
        # Adding element type (line 532)
        int_118268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 34), tuple_118266, int_118268)
        
        # Getting the type of 'c' (line 532)
        c_118269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 32), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 532)
        getitem___118270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 32), c_118269, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 532)
        subscript_call_result_118271 = invoke(stypy.reporting.localization.Localization(__file__, 532, 32), getitem___118270, tuple_118266)
        
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 532)
        tuple_118272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 532)
        # Adding element type (line 532)
        int_118273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 44), tuple_118272, int_118273)
        # Adding element type (line 532)
        int_118274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 44), tuple_118272, int_118274)
        
        # Getting the type of 'c' (line 532)
        c_118275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 42), 'c', False)
        # Obtaining the member '__getitem__' of a type (line 532)
        getitem___118276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 42), c_118275, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 532)
        subscript_call_result_118277 = invoke(stypy.reporting.localization.Localization(__file__, 532, 42), getitem___118276, tuple_118272)
        
        # Processing the call keyword arguments (line 532)
        # Getting the type of 'tol' (line 532)
        tol_118278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 57), 'tol', False)
        keyword_118279 = tol_118278
        # Getting the type of 'tol' (line 532)
        tol_118280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 67), 'tol', False)
        keyword_118281 = tol_118280
        kwargs_118282 = {'rtol': keyword_118279, 'atol': keyword_118281}
        # Getting the type of 'assert_allclose' (line 532)
        assert_allclose_118265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 16), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 532)
        assert_allclose_call_result_118283 = invoke(stypy.reporting.localization.Localization(__file__, 532, 16), assert_allclose_118265, *[subscript_call_result_118271, subscript_call_result_118277], **kwargs_118282)
        
        # SSA join for if statement (line 528)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 527)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'bc_end' (line 533)
        bc_end_118284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 13), 'bc_end')
        str_118285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 23), 'str', 'clamped')
        # Applying the binary operator '==' (line 533)
        result_eq_118286 = python_operator(stypy.reporting.localization.Localization(__file__, 533, 13), '==', bc_end_118284, str_118285)
        
        # Testing the type of an if condition (line 533)
        if_condition_118287 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 533, 13), result_eq_118286)
        # Assigning a type to the variable 'if_condition_118287' (line 533)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 533, 13), 'if_condition_118287', if_condition_118287)
        # SSA begins for if statement (line 533)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to assert_allclose(...): (line 534)
        # Processing the call arguments (line 534)
        
        # Call to S(...): (line 534)
        # Processing the call arguments (line 534)
        
        # Obtaining the type of the subscript
        int_118290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 32), 'int')
        # Getting the type of 'x' (line 534)
        x_118291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 534)
        getitem___118292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 30), x_118291, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 534)
        subscript_call_result_118293 = invoke(stypy.reporting.localization.Localization(__file__, 534, 30), getitem___118292, int_118290)
        
        int_118294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 37), 'int')
        # Processing the call keyword arguments (line 534)
        kwargs_118295 = {}
        # Getting the type of 'S' (line 534)
        S_118289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 28), 'S', False)
        # Calling S(args, kwargs) (line 534)
        S_call_result_118296 = invoke(stypy.reporting.localization.Localization(__file__, 534, 28), S_118289, *[subscript_call_result_118293, int_118294], **kwargs_118295)
        
        int_118297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 41), 'int')
        # Processing the call keyword arguments (line 534)
        # Getting the type of 'tol' (line 534)
        tol_118298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 49), 'tol', False)
        keyword_118299 = tol_118298
        # Getting the type of 'tol' (line 534)
        tol_118300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 59), 'tol', False)
        keyword_118301 = tol_118300
        kwargs_118302 = {'rtol': keyword_118299, 'atol': keyword_118301}
        # Getting the type of 'assert_allclose' (line 534)
        assert_allclose_118288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 534)
        assert_allclose_call_result_118303 = invoke(stypy.reporting.localization.Localization(__file__, 534, 12), assert_allclose_118288, *[S_call_result_118296, int_118297], **kwargs_118302)
        
        # SSA branch for the else part of an if statement (line 533)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'bc_end' (line 535)
        bc_end_118304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 13), 'bc_end')
        str_118305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 535, 23), 'str', 'natural')
        # Applying the binary operator '==' (line 535)
        result_eq_118306 = python_operator(stypy.reporting.localization.Localization(__file__, 535, 13), '==', bc_end_118304, str_118305)
        
        # Testing the type of an if condition (line 535)
        if_condition_118307 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 535, 13), result_eq_118306)
        # Assigning a type to the variable 'if_condition_118307' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 13), 'if_condition_118307', if_condition_118307)
        # SSA begins for if statement (line 535)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to assert_allclose(...): (line 536)
        # Processing the call arguments (line 536)
        
        # Call to S(...): (line 536)
        # Processing the call arguments (line 536)
        
        # Obtaining the type of the subscript
        int_118310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 32), 'int')
        # Getting the type of 'x' (line 536)
        x_118311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 536)
        getitem___118312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 30), x_118311, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 536)
        subscript_call_result_118313 = invoke(stypy.reporting.localization.Localization(__file__, 536, 30), getitem___118312, int_118310)
        
        int_118314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 37), 'int')
        # Processing the call keyword arguments (line 536)
        kwargs_118315 = {}
        # Getting the type of 'S' (line 536)
        S_118309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 28), 'S', False)
        # Calling S(args, kwargs) (line 536)
        S_call_result_118316 = invoke(stypy.reporting.localization.Localization(__file__, 536, 28), S_118309, *[subscript_call_result_118313, int_118314], **kwargs_118315)
        
        int_118317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 41), 'int')
        # Processing the call keyword arguments (line 536)
        # Getting the type of 'tol' (line 536)
        tol_118318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 49), 'tol', False)
        keyword_118319 = tol_118318
        # Getting the type of 'tol' (line 536)
        tol_118320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 59), 'tol', False)
        keyword_118321 = tol_118320
        kwargs_118322 = {'rtol': keyword_118319, 'atol': keyword_118321}
        # Getting the type of 'assert_allclose' (line 536)
        assert_allclose_118308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 536)
        assert_allclose_call_result_118323 = invoke(stypy.reporting.localization.Localization(__file__, 536, 12), assert_allclose_118308, *[S_call_result_118316, int_118317], **kwargs_118322)
        
        # SSA branch for the else part of an if statement (line 535)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Name to a Tuple (line 538):
        
        # Assigning a Subscript to a Name (line 538):
        
        # Obtaining the type of the subscript
        int_118324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 12), 'int')
        # Getting the type of 'bc_end' (line 538)
        bc_end_118325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 27), 'bc_end')
        # Obtaining the member '__getitem__' of a type (line 538)
        getitem___118326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 538, 12), bc_end_118325, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 538)
        subscript_call_result_118327 = invoke(stypy.reporting.localization.Localization(__file__, 538, 12), getitem___118326, int_118324)
        
        # Assigning a type to the variable 'tuple_var_assignment_115252' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 12), 'tuple_var_assignment_115252', subscript_call_result_118327)
        
        # Assigning a Subscript to a Name (line 538):
        
        # Obtaining the type of the subscript
        int_118328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 12), 'int')
        # Getting the type of 'bc_end' (line 538)
        bc_end_118329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 27), 'bc_end')
        # Obtaining the member '__getitem__' of a type (line 538)
        getitem___118330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 538, 12), bc_end_118329, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 538)
        subscript_call_result_118331 = invoke(stypy.reporting.localization.Localization(__file__, 538, 12), getitem___118330, int_118328)
        
        # Assigning a type to the variable 'tuple_var_assignment_115253' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 12), 'tuple_var_assignment_115253', subscript_call_result_118331)
        
        # Assigning a Name to a Name (line 538):
        # Getting the type of 'tuple_var_assignment_115252' (line 538)
        tuple_var_assignment_115252_118332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 12), 'tuple_var_assignment_115252')
        # Assigning a type to the variable 'order' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 12), 'order', tuple_var_assignment_115252_118332)
        
        # Assigning a Name to a Name (line 538):
        # Getting the type of 'tuple_var_assignment_115253' (line 538)
        tuple_var_assignment_115253_118333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 12), 'tuple_var_assignment_115253')
        # Assigning a type to the variable 'value' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 19), 'value', tuple_var_assignment_115253_118333)
        
        # Call to assert_allclose(...): (line 539)
        # Processing the call arguments (line 539)
        
        # Call to S(...): (line 539)
        # Processing the call arguments (line 539)
        
        # Obtaining the type of the subscript
        int_118336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 32), 'int')
        # Getting the type of 'x' (line 539)
        x_118337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 539)
        getitem___118338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 30), x_118337, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 539)
        subscript_call_result_118339 = invoke(stypy.reporting.localization.Localization(__file__, 539, 30), getitem___118338, int_118336)
        
        # Getting the type of 'order' (line 539)
        order_118340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 37), 'order', False)
        # Processing the call keyword arguments (line 539)
        kwargs_118341 = {}
        # Getting the type of 'S' (line 539)
        S_118335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 28), 'S', False)
        # Calling S(args, kwargs) (line 539)
        S_call_result_118342 = invoke(stypy.reporting.localization.Localization(__file__, 539, 28), S_118335, *[subscript_call_result_118339, order_118340], **kwargs_118341)
        
        # Getting the type of 'value' (line 539)
        value_118343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 45), 'value', False)
        # Processing the call keyword arguments (line 539)
        # Getting the type of 'tol' (line 539)
        tol_118344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 57), 'tol', False)
        keyword_118345 = tol_118344
        # Getting the type of 'tol' (line 539)
        tol_118346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 67), 'tol', False)
        keyword_118347 = tol_118346
        kwargs_118348 = {'rtol': keyword_118345, 'atol': keyword_118347}
        # Getting the type of 'assert_allclose' (line 539)
        assert_allclose_118334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 539)
        assert_allclose_call_result_118349 = invoke(stypy.reporting.localization.Localization(__file__, 539, 12), assert_allclose_118334, *[S_call_result_118342, value_118343], **kwargs_118348)
        
        # SSA join for if statement (line 535)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 533)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 527)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'check_correctness(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_correctness' in the type store
        # Getting the type of 'stypy_return_type' (line 481)
        stypy_return_type_118350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_118350)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_correctness'
        return stypy_return_type_118350


    @norecursion
    def check_all_bc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_all_bc'
        module_type_store = module_type_store.open_function_context('check_all_bc', 541, 4, False)
        # Assigning a type to the variable 'self' (line 542)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_localization', localization)
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_function_name', 'TestCubicSpline.check_all_bc')
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_param_names_list', ['x', 'y', 'axis'])
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCubicSpline.check_all_bc.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCubicSpline.check_all_bc', ['x', 'y', 'axis'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_all_bc', localization, ['x', 'y', 'axis'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_all_bc(...)' code ##################

        
        # Assigning a Call to a Name (line 542):
        
        # Assigning a Call to a Name (line 542):
        
        # Call to list(...): (line 542)
        # Processing the call arguments (line 542)
        # Getting the type of 'y' (line 542)
        y_118352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 27), 'y', False)
        # Obtaining the member 'shape' of a type (line 542)
        shape_118353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 27), y_118352, 'shape')
        # Processing the call keyword arguments (line 542)
        kwargs_118354 = {}
        # Getting the type of 'list' (line 542)
        list_118351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 22), 'list', False)
        # Calling list(args, kwargs) (line 542)
        list_call_result_118355 = invoke(stypy.reporting.localization.Localization(__file__, 542, 22), list_118351, *[shape_118353], **kwargs_118354)
        
        # Assigning a type to the variable 'deriv_shape' (line 542)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 8), 'deriv_shape', list_call_result_118355)
        # Deleting a member
        # Getting the type of 'deriv_shape' (line 543)
        deriv_shape_118356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 12), 'deriv_shape')
        
        # Obtaining the type of the subscript
        # Getting the type of 'axis' (line 543)
        axis_118357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 24), 'axis')
        # Getting the type of 'deriv_shape' (line 543)
        deriv_shape_118358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 12), 'deriv_shape')
        # Obtaining the member '__getitem__' of a type (line 543)
        getitem___118359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 12), deriv_shape_118358, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 543)
        subscript_call_result_118360 = invoke(stypy.reporting.localization.Localization(__file__, 543, 12), getitem___118359, axis_118357)
        
        del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 543, 8), deriv_shape_118356, subscript_call_result_118360)
        
        # Assigning a Call to a Name (line 544):
        
        # Assigning a Call to a Name (line 544):
        
        # Call to empty(...): (line 544)
        # Processing the call arguments (line 544)
        # Getting the type of 'deriv_shape' (line 544)
        deriv_shape_118363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 31), 'deriv_shape', False)
        # Processing the call keyword arguments (line 544)
        kwargs_118364 = {}
        # Getting the type of 'np' (line 544)
        np_118361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 22), 'np', False)
        # Obtaining the member 'empty' of a type (line 544)
        empty_118362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 22), np_118361, 'empty')
        # Calling empty(args, kwargs) (line 544)
        empty_call_result_118365 = invoke(stypy.reporting.localization.Localization(__file__, 544, 22), empty_118362, *[deriv_shape_118363], **kwargs_118364)
        
        # Assigning a type to the variable 'first_deriv' (line 544)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'first_deriv', empty_call_result_118365)
        
        # Call to fill(...): (line 545)
        # Processing the call arguments (line 545)
        int_118368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 25), 'int')
        # Processing the call keyword arguments (line 545)
        kwargs_118369 = {}
        # Getting the type of 'first_deriv' (line 545)
        first_deriv_118366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 8), 'first_deriv', False)
        # Obtaining the member 'fill' of a type (line 545)
        fill_118367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 8), first_deriv_118366, 'fill')
        # Calling fill(args, kwargs) (line 545)
        fill_call_result_118370 = invoke(stypy.reporting.localization.Localization(__file__, 545, 8), fill_118367, *[int_118368], **kwargs_118369)
        
        
        # Assigning a Call to a Name (line 546):
        
        # Assigning a Call to a Name (line 546):
        
        # Call to empty(...): (line 546)
        # Processing the call arguments (line 546)
        # Getting the type of 'deriv_shape' (line 546)
        deriv_shape_118373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 32), 'deriv_shape', False)
        # Processing the call keyword arguments (line 546)
        kwargs_118374 = {}
        # Getting the type of 'np' (line 546)
        np_118371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 23), 'np', False)
        # Obtaining the member 'empty' of a type (line 546)
        empty_118372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 23), np_118371, 'empty')
        # Calling empty(args, kwargs) (line 546)
        empty_call_result_118375 = invoke(stypy.reporting.localization.Localization(__file__, 546, 23), empty_118372, *[deriv_shape_118373], **kwargs_118374)
        
        # Assigning a type to the variable 'second_deriv' (line 546)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 8), 'second_deriv', empty_call_result_118375)
        
        # Call to fill(...): (line 547)
        # Processing the call arguments (line 547)
        int_118378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 26), 'int')
        # Processing the call keyword arguments (line 547)
        kwargs_118379 = {}
        # Getting the type of 'second_deriv' (line 547)
        second_deriv_118376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'second_deriv', False)
        # Obtaining the member 'fill' of a type (line 547)
        fill_118377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 547, 8), second_deriv_118376, 'fill')
        # Calling fill(args, kwargs) (line 547)
        fill_call_result_118380 = invoke(stypy.reporting.localization.Localization(__file__, 547, 8), fill_118377, *[int_118378], **kwargs_118379)
        
        
        # Assigning a List to a Name (line 548):
        
        # Assigning a List to a Name (line 548):
        
        # Obtaining an instance of the builtin type 'list' (line 548)
        list_118381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 548)
        # Adding element type (line 548)
        str_118382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 12), 'str', 'not-a-knot')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 17), list_118381, str_118382)
        # Adding element type (line 548)
        str_118383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 12), 'str', 'natural')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 17), list_118381, str_118383)
        # Adding element type (line 548)
        str_118384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 12), 'str', 'clamped')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 17), list_118381, str_118384)
        # Adding element type (line 548)
        
        # Obtaining an instance of the builtin type 'tuple' (line 552)
        tuple_118385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 552)
        # Adding element type (line 552)
        int_118386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 552, 13), tuple_118385, int_118386)
        # Adding element type (line 552)
        # Getting the type of 'first_deriv' (line 552)
        first_deriv_118387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 16), 'first_deriv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 552, 13), tuple_118385, first_deriv_118387)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 17), list_118381, tuple_118385)
        # Adding element type (line 548)
        
        # Obtaining an instance of the builtin type 'tuple' (line 553)
        tuple_118388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 13), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 553)
        # Adding element type (line 553)
        int_118389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 13), tuple_118388, int_118389)
        # Adding element type (line 553)
        # Getting the type of 'second_deriv' (line 553)
        second_deriv_118390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 16), 'second_deriv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 13), tuple_118388, second_deriv_118390)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 548, 17), list_118381, tuple_118388)
        
        # Assigning a type to the variable 'bc_all' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 8), 'bc_all', list_118381)
        
        
        # Obtaining the type of the subscript
        int_118391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 26), 'int')
        slice_118392 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 555, 18), None, int_118391, None)
        # Getting the type of 'bc_all' (line 555)
        bc_all_118393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 18), 'bc_all')
        # Obtaining the member '__getitem__' of a type (line 555)
        getitem___118394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 18), bc_all_118393, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 555)
        subscript_call_result_118395 = invoke(stypy.reporting.localization.Localization(__file__, 555, 18), getitem___118394, slice_118392)
        
        # Testing the type of a for loop iterable (line 555)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 555, 8), subscript_call_result_118395)
        # Getting the type of the for loop variable (line 555)
        for_loop_var_118396 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 555, 8), subscript_call_result_118395)
        # Assigning a type to the variable 'bc' (line 555)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 555, 8), 'bc', for_loop_var_118396)
        # SSA begins for a for statement (line 555)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 556):
        
        # Assigning a Call to a Name (line 556):
        
        # Call to CubicSpline(...): (line 556)
        # Processing the call arguments (line 556)
        # Getting the type of 'x' (line 556)
        x_118398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 28), 'x', False)
        # Getting the type of 'y' (line 556)
        y_118399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 31), 'y', False)
        # Processing the call keyword arguments (line 556)
        # Getting the type of 'axis' (line 556)
        axis_118400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 39), 'axis', False)
        keyword_118401 = axis_118400
        # Getting the type of 'bc' (line 556)
        bc_118402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 53), 'bc', False)
        keyword_118403 = bc_118402
        kwargs_118404 = {'bc_type': keyword_118403, 'axis': keyword_118401}
        # Getting the type of 'CubicSpline' (line 556)
        CubicSpline_118397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 16), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 556)
        CubicSpline_call_result_118405 = invoke(stypy.reporting.localization.Localization(__file__, 556, 16), CubicSpline_118397, *[x_118398, y_118399], **kwargs_118404)
        
        # Assigning a type to the variable 'S' (line 556)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 556, 12), 'S', CubicSpline_call_result_118405)
        
        # Call to check_correctness(...): (line 557)
        # Processing the call arguments (line 557)
        # Getting the type of 'S' (line 557)
        S_118408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 35), 'S', False)
        # Getting the type of 'bc' (line 557)
        bc_118409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 38), 'bc', False)
        # Getting the type of 'bc' (line 557)
        bc_118410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 42), 'bc', False)
        # Processing the call keyword arguments (line 557)
        kwargs_118411 = {}
        # Getting the type of 'self' (line 557)
        self_118406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 12), 'self', False)
        # Obtaining the member 'check_correctness' of a type (line 557)
        check_correctness_118407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 12), self_118406, 'check_correctness')
        # Calling check_correctness(args, kwargs) (line 557)
        check_correctness_call_result_118412 = invoke(stypy.reporting.localization.Localization(__file__, 557, 12), check_correctness_118407, *[S_118408, bc_118409, bc_118410], **kwargs_118411)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'bc_all' (line 559)
        bc_all_118413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 24), 'bc_all')
        # Testing the type of a for loop iterable (line 559)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 559, 8), bc_all_118413)
        # Getting the type of the for loop variable (line 559)
        for_loop_var_118414 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 559, 8), bc_all_118413)
        # Assigning a type to the variable 'bc_start' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'bc_start', for_loop_var_118414)
        # SSA begins for a for statement (line 559)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Getting the type of 'bc_all' (line 560)
        bc_all_118415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 26), 'bc_all')
        # Testing the type of a for loop iterable (line 560)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 560, 12), bc_all_118415)
        # Getting the type of the for loop variable (line 560)
        for_loop_var_118416 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 560, 12), bc_all_118415)
        # Assigning a type to the variable 'bc_end' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 12), 'bc_end', for_loop_var_118416)
        # SSA begins for a for statement (line 560)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 561):
        
        # Assigning a Call to a Name (line 561):
        
        # Call to CubicSpline(...): (line 561)
        # Processing the call arguments (line 561)
        # Getting the type of 'x' (line 561)
        x_118418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 32), 'x', False)
        # Getting the type of 'y' (line 561)
        y_118419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 35), 'y', False)
        # Processing the call keyword arguments (line 561)
        # Getting the type of 'axis' (line 561)
        axis_118420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 43), 'axis', False)
        keyword_118421 = axis_118420
        
        # Obtaining an instance of the builtin type 'tuple' (line 561)
        tuple_118422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 58), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 561)
        # Adding element type (line 561)
        # Getting the type of 'bc_start' (line 561)
        bc_start_118423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 58), 'bc_start', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 58), tuple_118422, bc_start_118423)
        # Adding element type (line 561)
        # Getting the type of 'bc_end' (line 561)
        bc_end_118424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 68), 'bc_end', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 58), tuple_118422, bc_end_118424)
        
        keyword_118425 = tuple_118422
        kwargs_118426 = {'bc_type': keyword_118425, 'axis': keyword_118421}
        # Getting the type of 'CubicSpline' (line 561)
        CubicSpline_118417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 20), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 561)
        CubicSpline_call_result_118427 = invoke(stypy.reporting.localization.Localization(__file__, 561, 20), CubicSpline_118417, *[x_118418, y_118419], **kwargs_118426)
        
        # Assigning a type to the variable 'S' (line 561)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 16), 'S', CubicSpline_call_result_118427)
        
        # Call to check_correctness(...): (line 562)
        # Processing the call arguments (line 562)
        # Getting the type of 'S' (line 562)
        S_118430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 39), 'S', False)
        # Getting the type of 'bc_start' (line 562)
        bc_start_118431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 42), 'bc_start', False)
        # Getting the type of 'bc_end' (line 562)
        bc_end_118432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 52), 'bc_end', False)
        # Processing the call keyword arguments (line 562)
        float_118433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 64), 'float')
        keyword_118434 = float_118433
        kwargs_118435 = {'tol': keyword_118434}
        # Getting the type of 'self' (line 562)
        self_118428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 16), 'self', False)
        # Obtaining the member 'check_correctness' of a type (line 562)
        check_correctness_118429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 16), self_118428, 'check_correctness')
        # Calling check_correctness(args, kwargs) (line 562)
        check_correctness_call_result_118436 = invoke(stypy.reporting.localization.Localization(__file__, 562, 16), check_correctness_118429, *[S_118430, bc_start_118431, bc_end_118432], **kwargs_118435)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'check_all_bc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_all_bc' in the type store
        # Getting the type of 'stypy_return_type' (line 541)
        stypy_return_type_118437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_118437)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_all_bc'
        return stypy_return_type_118437


    @norecursion
    def test_general(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_general'
        module_type_store = module_type_store.open_function_context('test_general', 564, 4, False)
        # Assigning a type to the variable 'self' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_localization', localization)
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_function_name', 'TestCubicSpline.test_general')
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_param_names_list', [])
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCubicSpline.test_general.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCubicSpline.test_general', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_general', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_general(...)' code ##################

        
        # Assigning a Call to a Name (line 565):
        
        # Assigning a Call to a Name (line 565):
        
        # Call to array(...): (line 565)
        # Processing the call arguments (line 565)
        
        # Obtaining an instance of the builtin type 'list' (line 565)
        list_118440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 565)
        # Adding element type (line 565)
        int_118441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_118440, int_118441)
        # Adding element type (line 565)
        int_118442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_118440, int_118442)
        # Adding element type (line 565)
        float_118443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_118440, float_118443)
        # Adding element type (line 565)
        int_118444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_118440, int_118444)
        # Adding element type (line 565)
        int_118445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_118440, int_118445)
        # Adding element type (line 565)
        float_118446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_118440, float_118446)
        # Adding element type (line 565)
        float_118447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 45), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_118440, float_118447)
        # Adding element type (line 565)
        int_118448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 565, 21), list_118440, int_118448)
        
        # Processing the call keyword arguments (line 565)
        kwargs_118449 = {}
        # Getting the type of 'np' (line 565)
        np_118438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 565)
        array_118439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 12), np_118438, 'array')
        # Calling array(args, kwargs) (line 565)
        array_call_result_118450 = invoke(stypy.reporting.localization.Localization(__file__, 565, 12), array_118439, *[list_118440], **kwargs_118449)
        
        # Assigning a type to the variable 'x' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 8), 'x', array_call_result_118450)
        
        # Assigning a Call to a Name (line 566):
        
        # Assigning a Call to a Name (line 566):
        
        # Call to array(...): (line 566)
        # Processing the call arguments (line 566)
        
        # Obtaining an instance of the builtin type 'list' (line 566)
        list_118453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 566)
        # Adding element type (line 566)
        int_118454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_118453, int_118454)
        # Adding element type (line 566)
        float_118455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_118453, float_118455)
        # Adding element type (line 566)
        int_118456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_118453, int_118456)
        # Adding element type (line 566)
        int_118457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_118453, int_118457)
        # Adding element type (line 566)
        float_118458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_118453, float_118458)
        # Adding element type (line 566)
        int_118459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_118453, int_118459)
        # Adding element type (line 566)
        int_118460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_118453, int_118460)
        # Adding element type (line 566)
        float_118461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 21), list_118453, float_118461)
        
        # Processing the call keyword arguments (line 566)
        kwargs_118462 = {}
        # Getting the type of 'np' (line 566)
        np_118451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 566)
        array_118452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 12), np_118451, 'array')
        # Calling array(args, kwargs) (line 566)
        array_call_result_118463 = invoke(stypy.reporting.localization.Localization(__file__, 566, 12), array_118452, *[list_118453], **kwargs_118462)
        
        # Assigning a type to the variable 'y' (line 566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'y', array_call_result_118463)
        
        
        # Obtaining an instance of the builtin type 'list' (line 567)
        list_118464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 567)
        # Adding element type (line 567)
        int_118465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 18), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 17), list_118464, int_118465)
        # Adding element type (line 567)
        int_118466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 17), list_118464, int_118466)
        # Adding element type (line 567)
        # Getting the type of 'x' (line 567)
        x_118467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 24), 'x')
        # Obtaining the member 'size' of a type (line 567)
        size_118468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 24), x_118467, 'size')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 567, 17), list_118464, size_118468)
        
        # Testing the type of a for loop iterable (line 567)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 567, 8), list_118464)
        # Getting the type of the for loop variable (line 567)
        for_loop_var_118469 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 567, 8), list_118464)
        # Assigning a type to the variable 'n' (line 567)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'n', for_loop_var_118469)
        # SSA begins for a for statement (line 567)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_all_bc(...): (line 568)
        # Processing the call arguments (line 568)
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 568)
        n_118472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 33), 'n', False)
        slice_118473 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 568, 30), None, n_118472, None)
        # Getting the type of 'x' (line 568)
        x_118474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 568)
        getitem___118475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 30), x_118474, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 568)
        subscript_call_result_118476 = invoke(stypy.reporting.localization.Localization(__file__, 568, 30), getitem___118475, slice_118473)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 568)
        n_118477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 40), 'n', False)
        slice_118478 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 568, 37), None, n_118477, None)
        # Getting the type of 'y' (line 568)
        y_118479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 37), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 568)
        getitem___118480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 37), y_118479, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 568)
        subscript_call_result_118481 = invoke(stypy.reporting.localization.Localization(__file__, 568, 37), getitem___118480, slice_118478)
        
        int_118482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 44), 'int')
        # Processing the call keyword arguments (line 568)
        kwargs_118483 = {}
        # Getting the type of 'self' (line 568)
        self_118470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 12), 'self', False)
        # Obtaining the member 'check_all_bc' of a type (line 568)
        check_all_bc_118471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 12), self_118470, 'check_all_bc')
        # Calling check_all_bc(args, kwargs) (line 568)
        check_all_bc_call_result_118484 = invoke(stypy.reporting.localization.Localization(__file__, 568, 12), check_all_bc_118471, *[subscript_call_result_118476, subscript_call_result_118481, int_118482], **kwargs_118483)
        
        
        # Assigning a Call to a Name (line 570):
        
        # Assigning a Call to a Name (line 570):
        
        # Call to empty(...): (line 570)
        # Processing the call arguments (line 570)
        
        # Obtaining an instance of the builtin type 'tuple' (line 570)
        tuple_118487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 570)
        # Adding element type (line 570)
        int_118488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 26), tuple_118487, int_118488)
        # Adding element type (line 570)
        # Getting the type of 'n' (line 570)
        n_118489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 29), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 26), tuple_118487, n_118489)
        # Adding element type (line 570)
        int_118490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 570, 26), tuple_118487, int_118490)
        
        # Processing the call keyword arguments (line 570)
        kwargs_118491 = {}
        # Getting the type of 'np' (line 570)
        np_118485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 16), 'np', False)
        # Obtaining the member 'empty' of a type (line 570)
        empty_118486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 16), np_118485, 'empty')
        # Calling empty(args, kwargs) (line 570)
        empty_call_result_118492 = invoke(stypy.reporting.localization.Localization(__file__, 570, 16), empty_118486, *[tuple_118487], **kwargs_118491)
        
        # Assigning a type to the variable 'Y' (line 570)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 570, 12), 'Y', empty_call_result_118492)
        
        # Assigning a Subscript to a Subscript (line 571):
        
        # Assigning a Subscript to a Subscript (line 571):
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 571)
        n_118493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 28), 'n')
        slice_118494 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 571, 25), None, n_118493, None)
        # Getting the type of 'y' (line 571)
        y_118495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 25), 'y')
        # Obtaining the member '__getitem__' of a type (line 571)
        getitem___118496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 25), y_118495, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 571)
        subscript_call_result_118497 = invoke(stypy.reporting.localization.Localization(__file__, 571, 25), getitem___118496, slice_118494)
        
        # Getting the type of 'Y' (line 571)
        Y_118498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 12), 'Y')
        int_118499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 14), 'int')
        slice_118500 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 571, 12), None, None, None)
        int_118501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 20), 'int')
        # Storing an element on a container (line 571)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 571, 12), Y_118498, ((int_118499, slice_118500, int_118501), subscript_call_result_118497))
        
        # Assigning a BinOp to a Subscript (line 572):
        
        # Assigning a BinOp to a Subscript (line 572):
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 572)
        n_118502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 28), 'n')
        slice_118503 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 572, 25), None, n_118502, None)
        # Getting the type of 'y' (line 572)
        y_118504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 25), 'y')
        # Obtaining the member '__getitem__' of a type (line 572)
        getitem___118505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 25), y_118504, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 572)
        subscript_call_result_118506 = invoke(stypy.reporting.localization.Localization(__file__, 572, 25), getitem___118505, slice_118503)
        
        int_118507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 33), 'int')
        # Applying the binary operator '-' (line 572)
        result_sub_118508 = python_operator(stypy.reporting.localization.Localization(__file__, 572, 25), '-', subscript_call_result_118506, int_118507)
        
        # Getting the type of 'Y' (line 572)
        Y_118509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 12), 'Y')
        int_118510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 14), 'int')
        slice_118511 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 572, 12), None, None, None)
        int_118512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 20), 'int')
        # Storing an element on a container (line 572)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 12), Y_118509, ((int_118510, slice_118511, int_118512), result_sub_118508))
        
        # Assigning a BinOp to a Subscript (line 573):
        
        # Assigning a BinOp to a Subscript (line 573):
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 573)
        n_118513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 28), 'n')
        slice_118514 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 573, 25), None, n_118513, None)
        # Getting the type of 'y' (line 573)
        y_118515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 25), 'y')
        # Obtaining the member '__getitem__' of a type (line 573)
        getitem___118516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 25), y_118515, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 573)
        subscript_call_result_118517 = invoke(stypy.reporting.localization.Localization(__file__, 573, 25), getitem___118516, slice_118514)
        
        int_118518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 33), 'int')
        # Applying the binary operator '+' (line 573)
        result_add_118519 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 25), '+', subscript_call_result_118517, int_118518)
        
        # Getting the type of 'Y' (line 573)
        Y_118520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 12), 'Y')
        int_118521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 14), 'int')
        slice_118522 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 573, 12), None, None, None)
        int_118523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 20), 'int')
        # Storing an element on a container (line 573)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 573, 12), Y_118520, ((int_118521, slice_118522, int_118523), result_add_118519))
        
        # Assigning a BinOp to a Subscript (line 574):
        
        # Assigning a BinOp to a Subscript (line 574):
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 574)
        n_118524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 28), 'n')
        slice_118525 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 574, 25), None, n_118524, None)
        # Getting the type of 'y' (line 574)
        y_118526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 25), 'y')
        # Obtaining the member '__getitem__' of a type (line 574)
        getitem___118527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 25), y_118526, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 574)
        subscript_call_result_118528 = invoke(stypy.reporting.localization.Localization(__file__, 574, 25), getitem___118527, slice_118525)
        
        int_118529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 33), 'int')
        # Applying the binary operator '+' (line 574)
        result_add_118530 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 25), '+', subscript_call_result_118528, int_118529)
        
        # Getting the type of 'Y' (line 574)
        Y_118531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 12), 'Y')
        int_118532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 14), 'int')
        slice_118533 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 574, 12), None, None, None)
        int_118534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 20), 'int')
        # Storing an element on a container (line 574)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 574, 12), Y_118531, ((int_118532, slice_118533, int_118534), result_add_118530))
        
        # Call to check_all_bc(...): (line 575)
        # Processing the call arguments (line 575)
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 575)
        n_118537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 33), 'n', False)
        slice_118538 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 575, 30), None, n_118537, None)
        # Getting the type of 'x' (line 575)
        x_118539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 30), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 575)
        getitem___118540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 30), x_118539, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 575)
        subscript_call_result_118541 = invoke(stypy.reporting.localization.Localization(__file__, 575, 30), getitem___118540, slice_118538)
        
        # Getting the type of 'Y' (line 575)
        Y_118542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 37), 'Y', False)
        int_118543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 40), 'int')
        # Processing the call keyword arguments (line 575)
        kwargs_118544 = {}
        # Getting the type of 'self' (line 575)
        self_118535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'self', False)
        # Obtaining the member 'check_all_bc' of a type (line 575)
        check_all_bc_118536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 12), self_118535, 'check_all_bc')
        # Calling check_all_bc(args, kwargs) (line 575)
        check_all_bc_call_result_118545 = invoke(stypy.reporting.localization.Localization(__file__, 575, 12), check_all_bc_118536, *[subscript_call_result_118541, Y_118542, int_118543], **kwargs_118544)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_general(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_general' in the type store
        # Getting the type of 'stypy_return_type' (line 564)
        stypy_return_type_118546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_118546)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_general'
        return stypy_return_type_118546


    @norecursion
    def test_periodic(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_periodic'
        module_type_store = module_type_store.open_function_context('test_periodic', 577, 4, False)
        # Assigning a type to the variable 'self' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_localization', localization)
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_function_name', 'TestCubicSpline.test_periodic')
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_param_names_list', [])
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCubicSpline.test_periodic.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCubicSpline.test_periodic', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_periodic', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_periodic(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 578)
        list_118547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 578)
        # Adding element type (line 578)
        int_118548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 18), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 17), list_118547, int_118548)
        # Adding element type (line 578)
        int_118549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 17), list_118547, int_118549)
        # Adding element type (line 578)
        int_118550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 17), list_118547, int_118550)
        
        # Testing the type of a for loop iterable (line 578)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 578, 8), list_118547)
        # Getting the type of the for loop variable (line 578)
        for_loop_var_118551 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 578, 8), list_118547)
        # Assigning a type to the variable 'n' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'n', for_loop_var_118551)
        # SSA begins for a for statement (line 578)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 579):
        
        # Assigning a Call to a Name (line 579):
        
        # Call to linspace(...): (line 579)
        # Processing the call arguments (line 579)
        int_118554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 28), 'int')
        int_118555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 31), 'int')
        # Getting the type of 'np' (line 579)
        np_118556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 35), 'np', False)
        # Obtaining the member 'pi' of a type (line 579)
        pi_118557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 35), np_118556, 'pi')
        # Applying the binary operator '*' (line 579)
        result_mul_118558 = python_operator(stypy.reporting.localization.Localization(__file__, 579, 31), '*', int_118555, pi_118557)
        
        # Getting the type of 'n' (line 579)
        n_118559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 42), 'n', False)
        # Processing the call keyword arguments (line 579)
        kwargs_118560 = {}
        # Getting the type of 'np' (line 579)
        np_118552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 16), 'np', False)
        # Obtaining the member 'linspace' of a type (line 579)
        linspace_118553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 16), np_118552, 'linspace')
        # Calling linspace(args, kwargs) (line 579)
        linspace_call_result_118561 = invoke(stypy.reporting.localization.Localization(__file__, 579, 16), linspace_118553, *[int_118554, result_mul_118558, n_118559], **kwargs_118560)
        
        # Assigning a type to the variable 'x' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 12), 'x', linspace_call_result_118561)
        
        # Assigning a Call to a Name (line 580):
        
        # Assigning a Call to a Name (line 580):
        
        # Call to cos(...): (line 580)
        # Processing the call arguments (line 580)
        # Getting the type of 'x' (line 580)
        x_118564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 23), 'x', False)
        # Processing the call keyword arguments (line 580)
        kwargs_118565 = {}
        # Getting the type of 'np' (line 580)
        np_118562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 16), 'np', False)
        # Obtaining the member 'cos' of a type (line 580)
        cos_118563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 16), np_118562, 'cos')
        # Calling cos(args, kwargs) (line 580)
        cos_call_result_118566 = invoke(stypy.reporting.localization.Localization(__file__, 580, 16), cos_118563, *[x_118564], **kwargs_118565)
        
        # Assigning a type to the variable 'y' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 12), 'y', cos_call_result_118566)
        
        # Assigning a Call to a Name (line 581):
        
        # Assigning a Call to a Name (line 581):
        
        # Call to CubicSpline(...): (line 581)
        # Processing the call arguments (line 581)
        # Getting the type of 'x' (line 581)
        x_118568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 28), 'x', False)
        # Getting the type of 'y' (line 581)
        y_118569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 31), 'y', False)
        # Processing the call keyword arguments (line 581)
        str_118570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 42), 'str', 'periodic')
        keyword_118571 = str_118570
        kwargs_118572 = {'bc_type': keyword_118571}
        # Getting the type of 'CubicSpline' (line 581)
        CubicSpline_118567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 16), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 581)
        CubicSpline_call_result_118573 = invoke(stypy.reporting.localization.Localization(__file__, 581, 16), CubicSpline_118567, *[x_118568, y_118569], **kwargs_118572)
        
        # Assigning a type to the variable 'S' (line 581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 12), 'S', CubicSpline_call_result_118573)
        
        # Call to check_correctness(...): (line 582)
        # Processing the call arguments (line 582)
        # Getting the type of 'S' (line 582)
        S_118576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 35), 'S', False)
        str_118577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 38), 'str', 'periodic')
        str_118578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 50), 'str', 'periodic')
        # Processing the call keyword arguments (line 582)
        kwargs_118579 = {}
        # Getting the type of 'self' (line 582)
        self_118574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 12), 'self', False)
        # Obtaining the member 'check_correctness' of a type (line 582)
        check_correctness_118575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 12), self_118574, 'check_correctness')
        # Calling check_correctness(args, kwargs) (line 582)
        check_correctness_call_result_118580 = invoke(stypy.reporting.localization.Localization(__file__, 582, 12), check_correctness_118575, *[S_118576, str_118577, str_118578], **kwargs_118579)
        
        
        # Assigning a Call to a Name (line 584):
        
        # Assigning a Call to a Name (line 584):
        
        # Call to empty(...): (line 584)
        # Processing the call arguments (line 584)
        
        # Obtaining an instance of the builtin type 'tuple' (line 584)
        tuple_118583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 584)
        # Adding element type (line 584)
        int_118584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 26), tuple_118583, int_118584)
        # Adding element type (line 584)
        # Getting the type of 'n' (line 584)
        n_118585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 29), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 26), tuple_118583, n_118585)
        # Adding element type (line 584)
        int_118586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 584, 26), tuple_118583, int_118586)
        
        # Processing the call keyword arguments (line 584)
        kwargs_118587 = {}
        # Getting the type of 'np' (line 584)
        np_118581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 16), 'np', False)
        # Obtaining the member 'empty' of a type (line 584)
        empty_118582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 16), np_118581, 'empty')
        # Calling empty(args, kwargs) (line 584)
        empty_call_result_118588 = invoke(stypy.reporting.localization.Localization(__file__, 584, 16), empty_118582, *[tuple_118583], **kwargs_118587)
        
        # Assigning a type to the variable 'Y' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 12), 'Y', empty_call_result_118588)
        
        # Assigning a Name to a Subscript (line 585):
        
        # Assigning a Name to a Subscript (line 585):
        # Getting the type of 'y' (line 585)
        y_118589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 25), 'y')
        # Getting the type of 'Y' (line 585)
        Y_118590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 12), 'Y')
        int_118591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 14), 'int')
        slice_118592 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 585, 12), None, None, None)
        int_118593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 20), 'int')
        # Storing an element on a container (line 585)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 585, 12), Y_118590, ((int_118591, slice_118592, int_118593), y_118589))
        
        # Assigning a BinOp to a Subscript (line 586):
        
        # Assigning a BinOp to a Subscript (line 586):
        # Getting the type of 'y' (line 586)
        y_118594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 25), 'y')
        int_118595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 29), 'int')
        # Applying the binary operator '+' (line 586)
        result_add_118596 = python_operator(stypy.reporting.localization.Localization(__file__, 586, 25), '+', y_118594, int_118595)
        
        # Getting the type of 'Y' (line 586)
        Y_118597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'Y')
        int_118598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 14), 'int')
        slice_118599 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 586, 12), None, None, None)
        int_118600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 20), 'int')
        # Storing an element on a container (line 586)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 12), Y_118597, ((int_118598, slice_118599, int_118600), result_add_118596))
        
        # Assigning a BinOp to a Subscript (line 587):
        
        # Assigning a BinOp to a Subscript (line 587):
        # Getting the type of 'y' (line 587)
        y_118601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 25), 'y')
        int_118602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 29), 'int')
        # Applying the binary operator '-' (line 587)
        result_sub_118603 = python_operator(stypy.reporting.localization.Localization(__file__, 587, 25), '-', y_118601, int_118602)
        
        # Getting the type of 'Y' (line 587)
        Y_118604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 12), 'Y')
        int_118605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 14), 'int')
        slice_118606 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 587, 12), None, None, None)
        int_118607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 20), 'int')
        # Storing an element on a container (line 587)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 587, 12), Y_118604, ((int_118605, slice_118606, int_118607), result_sub_118603))
        
        # Assigning a BinOp to a Subscript (line 588):
        
        # Assigning a BinOp to a Subscript (line 588):
        # Getting the type of 'y' (line 588)
        y_118608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 25), 'y')
        int_118609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 29), 'int')
        # Applying the binary operator '+' (line 588)
        result_add_118610 = python_operator(stypy.reporting.localization.Localization(__file__, 588, 25), '+', y_118608, int_118609)
        
        # Getting the type of 'Y' (line 588)
        Y_118611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 12), 'Y')
        int_118612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 14), 'int')
        slice_118613 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 588, 12), None, None, None)
        int_118614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 20), 'int')
        # Storing an element on a container (line 588)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 588, 12), Y_118611, ((int_118612, slice_118613, int_118614), result_add_118610))
        
        # Assigning a Call to a Name (line 589):
        
        # Assigning a Call to a Name (line 589):
        
        # Call to CubicSpline(...): (line 589)
        # Processing the call arguments (line 589)
        # Getting the type of 'x' (line 589)
        x_118616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 28), 'x', False)
        # Getting the type of 'Y' (line 589)
        Y_118617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 31), 'Y', False)
        # Processing the call keyword arguments (line 589)
        int_118618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 39), 'int')
        keyword_118619 = int_118618
        str_118620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 50), 'str', 'periodic')
        keyword_118621 = str_118620
        kwargs_118622 = {'bc_type': keyword_118621, 'axis': keyword_118619}
        # Getting the type of 'CubicSpline' (line 589)
        CubicSpline_118615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 16), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 589)
        CubicSpline_call_result_118623 = invoke(stypy.reporting.localization.Localization(__file__, 589, 16), CubicSpline_118615, *[x_118616, Y_118617], **kwargs_118622)
        
        # Assigning a type to the variable 'S' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 12), 'S', CubicSpline_call_result_118623)
        
        # Call to check_correctness(...): (line 590)
        # Processing the call arguments (line 590)
        # Getting the type of 'S' (line 590)
        S_118626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 35), 'S', False)
        str_118627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 38), 'str', 'periodic')
        str_118628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 50), 'str', 'periodic')
        # Processing the call keyword arguments (line 590)
        kwargs_118629 = {}
        # Getting the type of 'self' (line 590)
        self_118624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'self', False)
        # Obtaining the member 'check_correctness' of a type (line 590)
        check_correctness_118625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 12), self_118624, 'check_correctness')
        # Calling check_correctness(args, kwargs) (line 590)
        check_correctness_call_result_118630 = invoke(stypy.reporting.localization.Localization(__file__, 590, 12), check_correctness_118625, *[S_118626, str_118627, str_118628], **kwargs_118629)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_periodic(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_periodic' in the type store
        # Getting the type of 'stypy_return_type' (line 577)
        stypy_return_type_118631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_118631)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_periodic'
        return stypy_return_type_118631


    @norecursion
    def test_periodic_eval(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_periodic_eval'
        module_type_store = module_type_store.open_function_context('test_periodic_eval', 592, 4, False)
        # Assigning a type to the variable 'self' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_localization', localization)
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_function_name', 'TestCubicSpline.test_periodic_eval')
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_param_names_list', [])
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCubicSpline.test_periodic_eval.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCubicSpline.test_periodic_eval', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_periodic_eval', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_periodic_eval(...)' code ##################

        
        # Assigning a Call to a Name (line 593):
        
        # Assigning a Call to a Name (line 593):
        
        # Call to linspace(...): (line 593)
        # Processing the call arguments (line 593)
        int_118634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 24), 'int')
        int_118635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 27), 'int')
        # Getting the type of 'np' (line 593)
        np_118636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 31), 'np', False)
        # Obtaining the member 'pi' of a type (line 593)
        pi_118637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 31), np_118636, 'pi')
        # Applying the binary operator '*' (line 593)
        result_mul_118638 = python_operator(stypy.reporting.localization.Localization(__file__, 593, 27), '*', int_118635, pi_118637)
        
        int_118639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 38), 'int')
        # Processing the call keyword arguments (line 593)
        kwargs_118640 = {}
        # Getting the type of 'np' (line 593)
        np_118632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 12), 'np', False)
        # Obtaining the member 'linspace' of a type (line 593)
        linspace_118633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 12), np_118632, 'linspace')
        # Calling linspace(args, kwargs) (line 593)
        linspace_call_result_118641 = invoke(stypy.reporting.localization.Localization(__file__, 593, 12), linspace_118633, *[int_118634, result_mul_118638, int_118639], **kwargs_118640)
        
        # Assigning a type to the variable 'x' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'x', linspace_call_result_118641)
        
        # Assigning a Call to a Name (line 594):
        
        # Assigning a Call to a Name (line 594):
        
        # Call to cos(...): (line 594)
        # Processing the call arguments (line 594)
        # Getting the type of 'x' (line 594)
        x_118644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 19), 'x', False)
        # Processing the call keyword arguments (line 594)
        kwargs_118645 = {}
        # Getting the type of 'np' (line 594)
        np_118642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 12), 'np', False)
        # Obtaining the member 'cos' of a type (line 594)
        cos_118643 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 12), np_118642, 'cos')
        # Calling cos(args, kwargs) (line 594)
        cos_call_result_118646 = invoke(stypy.reporting.localization.Localization(__file__, 594, 12), cos_118643, *[x_118644], **kwargs_118645)
        
        # Assigning a type to the variable 'y' (line 594)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 8), 'y', cos_call_result_118646)
        
        # Assigning a Call to a Name (line 595):
        
        # Assigning a Call to a Name (line 595):
        
        # Call to CubicSpline(...): (line 595)
        # Processing the call arguments (line 595)
        # Getting the type of 'x' (line 595)
        x_118648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 24), 'x', False)
        # Getting the type of 'y' (line 595)
        y_118649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 27), 'y', False)
        # Processing the call keyword arguments (line 595)
        str_118650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 38), 'str', 'periodic')
        keyword_118651 = str_118650
        kwargs_118652 = {'bc_type': keyword_118651}
        # Getting the type of 'CubicSpline' (line 595)
        CubicSpline_118647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 12), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 595)
        CubicSpline_call_result_118653 = invoke(stypy.reporting.localization.Localization(__file__, 595, 12), CubicSpline_118647, *[x_118648, y_118649], **kwargs_118652)
        
        # Assigning a type to the variable 'S' (line 595)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'S', CubicSpline_call_result_118653)
        
        # Call to assert_almost_equal(...): (line 596)
        # Processing the call arguments (line 596)
        
        # Call to S(...): (line 596)
        # Processing the call arguments (line 596)
        int_118656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 30), 'int')
        # Processing the call keyword arguments (line 596)
        kwargs_118657 = {}
        # Getting the type of 'S' (line 596)
        S_118655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 28), 'S', False)
        # Calling S(args, kwargs) (line 596)
        S_call_result_118658 = invoke(stypy.reporting.localization.Localization(__file__, 596, 28), S_118655, *[int_118656], **kwargs_118657)
        
        
        # Call to S(...): (line 596)
        # Processing the call arguments (line 596)
        int_118660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 36), 'int')
        int_118661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 40), 'int')
        # Getting the type of 'np' (line 596)
        np_118662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 44), 'np', False)
        # Obtaining the member 'pi' of a type (line 596)
        pi_118663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 44), np_118662, 'pi')
        # Applying the binary operator '*' (line 596)
        result_mul_118664 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 40), '*', int_118661, pi_118663)
        
        # Applying the binary operator '+' (line 596)
        result_add_118665 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 36), '+', int_118660, result_mul_118664)
        
        # Processing the call keyword arguments (line 596)
        kwargs_118666 = {}
        # Getting the type of 'S' (line 596)
        S_118659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 34), 'S', False)
        # Calling S(args, kwargs) (line 596)
        S_call_result_118667 = invoke(stypy.reporting.localization.Localization(__file__, 596, 34), S_118659, *[result_add_118665], **kwargs_118666)
        
        # Processing the call keyword arguments (line 596)
        int_118668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 60), 'int')
        keyword_118669 = int_118668
        kwargs_118670 = {'decimal': keyword_118669}
        # Getting the type of 'assert_almost_equal' (line 596)
        assert_almost_equal_118654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 596)
        assert_almost_equal_call_result_118671 = invoke(stypy.reporting.localization.Localization(__file__, 596, 8), assert_almost_equal_118654, *[S_call_result_118658, S_call_result_118667], **kwargs_118670)
        
        
        # ################# End of 'test_periodic_eval(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_periodic_eval' in the type store
        # Getting the type of 'stypy_return_type' (line 592)
        stypy_return_type_118672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_118672)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_periodic_eval'
        return stypy_return_type_118672


    @norecursion
    def test_dtypes(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_dtypes'
        module_type_store = module_type_store.open_function_context('test_dtypes', 598, 4, False)
        # Assigning a type to the variable 'self' (line 599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_localization', localization)
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_function_name', 'TestCubicSpline.test_dtypes')
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_param_names_list', [])
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCubicSpline.test_dtypes.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCubicSpline.test_dtypes', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_dtypes', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_dtypes(...)' code ##################

        
        # Assigning a Call to a Name (line 599):
        
        # Assigning a Call to a Name (line 599):
        
        # Call to array(...): (line 599)
        # Processing the call arguments (line 599)
        
        # Obtaining an instance of the builtin type 'list' (line 599)
        list_118675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 599)
        # Adding element type (line 599)
        int_118676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 21), list_118675, int_118676)
        # Adding element type (line 599)
        int_118677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 21), list_118675, int_118677)
        # Adding element type (line 599)
        int_118678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 21), list_118675, int_118678)
        # Adding element type (line 599)
        int_118679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 21), list_118675, int_118679)
        
        # Processing the call keyword arguments (line 599)
        # Getting the type of 'int' (line 599)
        int_118680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 41), 'int', False)
        keyword_118681 = int_118680
        kwargs_118682 = {'dtype': keyword_118681}
        # Getting the type of 'np' (line 599)
        np_118673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 599)
        array_118674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 12), np_118673, 'array')
        # Calling array(args, kwargs) (line 599)
        array_call_result_118683 = invoke(stypy.reporting.localization.Localization(__file__, 599, 12), array_118674, *[list_118675], **kwargs_118682)
        
        # Assigning a type to the variable 'x' (line 599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 8), 'x', array_call_result_118683)
        
        # Assigning a Call to a Name (line 600):
        
        # Assigning a Call to a Name (line 600):
        
        # Call to array(...): (line 600)
        # Processing the call arguments (line 600)
        
        # Obtaining an instance of the builtin type 'list' (line 600)
        list_118686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 600)
        # Adding element type (line 600)
        int_118687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 21), list_118686, int_118687)
        # Adding element type (line 600)
        int_118688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 21), list_118686, int_118688)
        # Adding element type (line 600)
        int_118689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 21), list_118686, int_118689)
        # Adding element type (line 600)
        int_118690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 21), list_118686, int_118690)
        
        # Processing the call keyword arguments (line 600)
        # Getting the type of 'int' (line 600)
        int_118691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 42), 'int', False)
        keyword_118692 = int_118691
        kwargs_118693 = {'dtype': keyword_118692}
        # Getting the type of 'np' (line 600)
        np_118684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 600)
        array_118685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 600, 12), np_118684, 'array')
        # Calling array(args, kwargs) (line 600)
        array_call_result_118694 = invoke(stypy.reporting.localization.Localization(__file__, 600, 12), array_118685, *[list_118686], **kwargs_118693)
        
        # Assigning a type to the variable 'y' (line 600)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 600, 8), 'y', array_call_result_118694)
        
        # Assigning a Call to a Name (line 601):
        
        # Assigning a Call to a Name (line 601):
        
        # Call to CubicSpline(...): (line 601)
        # Processing the call arguments (line 601)
        # Getting the type of 'x' (line 601)
        x_118696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 24), 'x', False)
        # Getting the type of 'y' (line 601)
        y_118697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 27), 'y', False)
        # Processing the call keyword arguments (line 601)
        kwargs_118698 = {}
        # Getting the type of 'CubicSpline' (line 601)
        CubicSpline_118695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 12), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 601)
        CubicSpline_call_result_118699 = invoke(stypy.reporting.localization.Localization(__file__, 601, 12), CubicSpline_118695, *[x_118696, y_118697], **kwargs_118698)
        
        # Assigning a type to the variable 'S' (line 601)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 8), 'S', CubicSpline_call_result_118699)
        
        # Call to check_correctness(...): (line 602)
        # Processing the call arguments (line 602)
        # Getting the type of 'S' (line 602)
        S_118702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 31), 'S', False)
        # Processing the call keyword arguments (line 602)
        kwargs_118703 = {}
        # Getting the type of 'self' (line 602)
        self_118700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'self', False)
        # Obtaining the member 'check_correctness' of a type (line 602)
        check_correctness_118701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 8), self_118700, 'check_correctness')
        # Calling check_correctness(args, kwargs) (line 602)
        check_correctness_call_result_118704 = invoke(stypy.reporting.localization.Localization(__file__, 602, 8), check_correctness_118701, *[S_118702], **kwargs_118703)
        
        
        # Assigning a Call to a Name (line 604):
        
        # Assigning a Call to a Name (line 604):
        
        # Call to array(...): (line 604)
        # Processing the call arguments (line 604)
        
        # Obtaining an instance of the builtin type 'list' (line 604)
        list_118707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 604)
        # Adding element type (line 604)
        int_118708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 22), 'int')
        complex_118709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 25), 'complex')
        # Applying the binary operator '+' (line 604)
        result_add_118710 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 22), '+', int_118708, complex_118709)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 21), list_118707, result_add_118710)
        # Adding element type (line 604)
        float_118711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 21), list_118707, float_118711)
        # Adding element type (line 604)
        int_118712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 34), 'int')
        complex_118713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 36), 'complex')
        # Applying the binary operator '-' (line 604)
        result_sub_118714 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 34), '-', int_118712, complex_118713)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 21), list_118707, result_sub_118714)
        # Adding element type (line 604)
        float_118715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 40), 'float')
        complex_118716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 44), 'complex')
        # Applying the binary operator '-' (line 604)
        result_sub_118717 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 40), '-', float_118715, complex_118716)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 21), list_118707, result_sub_118717)
        
        # Processing the call keyword arguments (line 604)
        kwargs_118718 = {}
        # Getting the type of 'np' (line 604)
        np_118705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 604)
        array_118706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 12), np_118705, 'array')
        # Calling array(args, kwargs) (line 604)
        array_call_result_118719 = invoke(stypy.reporting.localization.Localization(__file__, 604, 12), array_118706, *[list_118707], **kwargs_118718)
        
        # Assigning a type to the variable 'y' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'y', array_call_result_118719)
        
        # Assigning a Call to a Name (line 605):
        
        # Assigning a Call to a Name (line 605):
        
        # Call to CubicSpline(...): (line 605)
        # Processing the call arguments (line 605)
        # Getting the type of 'x' (line 605)
        x_118721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 24), 'x', False)
        # Getting the type of 'y' (line 605)
        y_118722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 27), 'y', False)
        # Processing the call keyword arguments (line 605)
        kwargs_118723 = {}
        # Getting the type of 'CubicSpline' (line 605)
        CubicSpline_118720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 12), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 605)
        CubicSpline_call_result_118724 = invoke(stypy.reporting.localization.Localization(__file__, 605, 12), CubicSpline_118720, *[x_118721, y_118722], **kwargs_118723)
        
        # Assigning a type to the variable 'S' (line 605)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 605, 8), 'S', CubicSpline_call_result_118724)
        
        # Call to check_correctness(...): (line 606)
        # Processing the call arguments (line 606)
        # Getting the type of 'S' (line 606)
        S_118727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 31), 'S', False)
        # Processing the call keyword arguments (line 606)
        kwargs_118728 = {}
        # Getting the type of 'self' (line 606)
        self_118725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 8), 'self', False)
        # Obtaining the member 'check_correctness' of a type (line 606)
        check_correctness_118726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 8), self_118725, 'check_correctness')
        # Calling check_correctness(args, kwargs) (line 606)
        check_correctness_call_result_118729 = invoke(stypy.reporting.localization.Localization(__file__, 606, 8), check_correctness_118726, *[S_118727], **kwargs_118728)
        
        
        # Assigning a Call to a Name (line 608):
        
        # Assigning a Call to a Name (line 608):
        
        # Call to CubicSpline(...): (line 608)
        # Processing the call arguments (line 608)
        # Getting the type of 'x' (line 608)
        x_118731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 24), 'x', False)
        # Getting the type of 'x' (line 608)
        x_118732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 27), 'x', False)
        int_118733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 32), 'int')
        # Applying the binary operator '**' (line 608)
        result_pow_118734 = python_operator(stypy.reporting.localization.Localization(__file__, 608, 27), '**', x_118732, int_118733)
        
        # Processing the call keyword arguments (line 608)
        
        # Obtaining an instance of the builtin type 'tuple' (line 608)
        tuple_118735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 608)
        # Adding element type (line 608)
        str_118736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 44), 'str', 'natural')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 608, 44), tuple_118735, str_118736)
        # Adding element type (line 608)
        
        # Obtaining an instance of the builtin type 'tuple' (line 608)
        tuple_118737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 56), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 608)
        # Adding element type (line 608)
        int_118738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 608, 56), tuple_118737, int_118738)
        # Adding element type (line 608)
        complex_118739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 59), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 608, 56), tuple_118737, complex_118739)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 608, 44), tuple_118735, tuple_118737)
        
        keyword_118740 = tuple_118735
        kwargs_118741 = {'bc_type': keyword_118740}
        # Getting the type of 'CubicSpline' (line 608)
        CubicSpline_118730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 12), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 608)
        CubicSpline_call_result_118742 = invoke(stypy.reporting.localization.Localization(__file__, 608, 12), CubicSpline_118730, *[x_118731, result_pow_118734], **kwargs_118741)
        
        # Assigning a type to the variable 'S' (line 608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 608, 8), 'S', CubicSpline_call_result_118742)
        
        # Call to check_correctness(...): (line 609)
        # Processing the call arguments (line 609)
        # Getting the type of 'S' (line 609)
        S_118745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 31), 'S', False)
        str_118746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 34), 'str', 'natural')
        
        # Obtaining an instance of the builtin type 'tuple' (line 609)
        tuple_118747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 46), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 609)
        # Adding element type (line 609)
        int_118748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 46), tuple_118747, int_118748)
        # Adding element type (line 609)
        complex_118749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 49), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 609, 46), tuple_118747, complex_118749)
        
        # Processing the call keyword arguments (line 609)
        kwargs_118750 = {}
        # Getting the type of 'self' (line 609)
        self_118743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 8), 'self', False)
        # Obtaining the member 'check_correctness' of a type (line 609)
        check_correctness_118744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 8), self_118743, 'check_correctness')
        # Calling check_correctness(args, kwargs) (line 609)
        check_correctness_call_result_118751 = invoke(stypy.reporting.localization.Localization(__file__, 609, 8), check_correctness_118744, *[S_118745, str_118746, tuple_118747], **kwargs_118750)
        
        
        # Assigning a Call to a Name (line 611):
        
        # Assigning a Call to a Name (line 611):
        
        # Call to array(...): (line 611)
        # Processing the call arguments (line 611)
        
        # Obtaining an instance of the builtin type 'list' (line 611)
        list_118754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 611)
        # Adding element type (line 611)
        int_118755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 21), list_118754, int_118755)
        # Adding element type (line 611)
        int_118756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 21), list_118754, int_118756)
        # Adding element type (line 611)
        int_118757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 21), list_118754, int_118757)
        # Adding element type (line 611)
        int_118758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 611, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 21), list_118754, int_118758)
        
        # Processing the call keyword arguments (line 611)
        kwargs_118759 = {}
        # Getting the type of 'np' (line 611)
        np_118752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 611)
        array_118753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 12), np_118752, 'array')
        # Calling array(args, kwargs) (line 611)
        array_call_result_118760 = invoke(stypy.reporting.localization.Localization(__file__, 611, 12), array_118753, *[list_118754], **kwargs_118759)
        
        # Assigning a type to the variable 'y' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'y', array_call_result_118760)
        
        # Assigning a Call to a Name (line 612):
        
        # Assigning a Call to a Name (line 612):
        
        # Call to CubicSpline(...): (line 612)
        # Processing the call arguments (line 612)
        # Getting the type of 'x' (line 612)
        x_118762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 24), 'x', False)
        # Getting the type of 'y' (line 612)
        y_118763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 27), 'y', False)
        # Processing the call keyword arguments (line 612)
        
        # Obtaining an instance of the builtin type 'list' (line 612)
        list_118764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 612)
        # Adding element type (line 612)
        
        # Obtaining an instance of the builtin type 'tuple' (line 612)
        tuple_118765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 612)
        # Adding element type (line 612)
        int_118766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 40), tuple_118765, int_118766)
        # Adding element type (line 612)
        int_118767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 43), 'int')
        complex_118768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 47), 'complex')
        # Applying the binary operator '+' (line 612)
        result_add_118769 = python_operator(stypy.reporting.localization.Localization(__file__, 612, 43), '+', int_118767, complex_118768)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 40), tuple_118765, result_add_118769)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 38), list_118764, tuple_118765)
        # Adding element type (line 612)
        
        # Obtaining an instance of the builtin type 'tuple' (line 612)
        tuple_118770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 55), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 612)
        # Adding element type (line 612)
        int_118771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 55), tuple_118770, int_118771)
        # Adding element type (line 612)
        float_118772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 58), 'float')
        complex_118773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 64), 'complex')
        # Applying the binary operator '-' (line 612)
        result_sub_118774 = python_operator(stypy.reporting.localization.Localization(__file__, 612, 58), '-', float_118772, complex_118773)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 55), tuple_118770, result_sub_118774)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 612, 38), list_118764, tuple_118770)
        
        keyword_118775 = list_118764
        kwargs_118776 = {'bc_type': keyword_118775}
        # Getting the type of 'CubicSpline' (line 612)
        CubicSpline_118761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 12), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 612)
        CubicSpline_call_result_118777 = invoke(stypy.reporting.localization.Localization(__file__, 612, 12), CubicSpline_118761, *[x_118762, y_118763], **kwargs_118776)
        
        # Assigning a type to the variable 'S' (line 612)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 8), 'S', CubicSpline_call_result_118777)
        
        # Call to check_correctness(...): (line 613)
        # Processing the call arguments (line 613)
        # Getting the type of 'S' (line 613)
        S_118780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 31), 'S', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 613)
        tuple_118781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 613)
        # Adding element type (line 613)
        int_118782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 35), tuple_118781, int_118782)
        # Adding element type (line 613)
        int_118783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 38), 'int')
        complex_118784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 42), 'complex')
        # Applying the binary operator '+' (line 613)
        result_add_118785 = python_operator(stypy.reporting.localization.Localization(__file__, 613, 38), '+', int_118783, complex_118784)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 35), tuple_118781, result_add_118785)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 613)
        tuple_118786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 613)
        # Adding element type (line 613)
        int_118787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 50), tuple_118786, int_118787)
        # Adding element type (line 613)
        float_118788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 53), 'float')
        complex_118789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 59), 'complex')
        # Applying the binary operator '-' (line 613)
        result_sub_118790 = python_operator(stypy.reporting.localization.Localization(__file__, 613, 53), '-', float_118788, complex_118789)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 613, 50), tuple_118786, result_sub_118790)
        
        # Processing the call keyword arguments (line 613)
        kwargs_118791 = {}
        # Getting the type of 'self' (line 613)
        self_118778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 8), 'self', False)
        # Obtaining the member 'check_correctness' of a type (line 613)
        check_correctness_118779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 8), self_118778, 'check_correctness')
        # Calling check_correctness(args, kwargs) (line 613)
        check_correctness_call_result_118792 = invoke(stypy.reporting.localization.Localization(__file__, 613, 8), check_correctness_118779, *[S_118780, tuple_118781, tuple_118786], **kwargs_118791)
        
        
        # ################# End of 'test_dtypes(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_dtypes' in the type store
        # Getting the type of 'stypy_return_type' (line 598)
        stypy_return_type_118793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_118793)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_dtypes'
        return stypy_return_type_118793


    @norecursion
    def test_small_dx(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_small_dx'
        module_type_store = module_type_store.open_function_context('test_small_dx', 615, 4, False)
        # Assigning a type to the variable 'self' (line 616)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_localization', localization)
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_function_name', 'TestCubicSpline.test_small_dx')
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_param_names_list', [])
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCubicSpline.test_small_dx.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCubicSpline.test_small_dx', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_small_dx', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_small_dx(...)' code ##################

        
        # Assigning a Call to a Name (line 616):
        
        # Assigning a Call to a Name (line 616):
        
        # Call to RandomState(...): (line 616)
        # Processing the call arguments (line 616)
        int_118797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 36), 'int')
        # Processing the call keyword arguments (line 616)
        kwargs_118798 = {}
        # Getting the type of 'np' (line 616)
        np_118794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 14), 'np', False)
        # Obtaining the member 'random' of a type (line 616)
        random_118795 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 14), np_118794, 'random')
        # Obtaining the member 'RandomState' of a type (line 616)
        RandomState_118796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 14), random_118795, 'RandomState')
        # Calling RandomState(args, kwargs) (line 616)
        RandomState_call_result_118799 = invoke(stypy.reporting.localization.Localization(__file__, 616, 14), RandomState_118796, *[int_118797], **kwargs_118798)
        
        # Assigning a type to the variable 'rng' (line 616)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 8), 'rng', RandomState_call_result_118799)
        
        # Assigning a Call to a Name (line 617):
        
        # Assigning a Call to a Name (line 617):
        
        # Call to sort(...): (line 617)
        # Processing the call arguments (line 617)
        
        # Call to uniform(...): (line 617)
        # Processing the call keyword arguments (line 617)
        int_118804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 37), 'int')
        keyword_118805 = int_118804
        kwargs_118806 = {'size': keyword_118805}
        # Getting the type of 'rng' (line 617)
        rng_118802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 20), 'rng', False)
        # Obtaining the member 'uniform' of a type (line 617)
        uniform_118803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 20), rng_118802, 'uniform')
        # Calling uniform(args, kwargs) (line 617)
        uniform_call_result_118807 = invoke(stypy.reporting.localization.Localization(__file__, 617, 20), uniform_118803, *[], **kwargs_118806)
        
        # Processing the call keyword arguments (line 617)
        kwargs_118808 = {}
        # Getting the type of 'np' (line 617)
        np_118800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 12), 'np', False)
        # Obtaining the member 'sort' of a type (line 617)
        sort_118801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 12), np_118800, 'sort')
        # Calling sort(args, kwargs) (line 617)
        sort_call_result_118809 = invoke(stypy.reporting.localization.Localization(__file__, 617, 12), sort_118801, *[uniform_call_result_118807], **kwargs_118808)
        
        # Assigning a type to the variable 'x' (line 617)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 617, 8), 'x', sort_call_result_118809)
        
        # Assigning a BinOp to a Name (line 618):
        
        # Assigning a BinOp to a Name (line 618):
        float_118810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 12), 'float')
        
        # Call to uniform(...): (line 618)
        # Processing the call keyword arguments (line 618)
        int_118813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 35), 'int')
        keyword_118814 = int_118813
        kwargs_118815 = {'size': keyword_118814}
        # Getting the type of 'rng' (line 618)
        rng_118811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 18), 'rng', False)
        # Obtaining the member 'uniform' of a type (line 618)
        uniform_118812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 18), rng_118811, 'uniform')
        # Calling uniform(args, kwargs) (line 618)
        uniform_call_result_118816 = invoke(stypy.reporting.localization.Localization(__file__, 618, 18), uniform_118812, *[], **kwargs_118815)
        
        # Applying the binary operator '+' (line 618)
        result_add_118817 = python_operator(stypy.reporting.localization.Localization(__file__, 618, 12), '+', float_118810, uniform_call_result_118816)
        
        # Assigning a type to the variable 'y' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'y', result_add_118817)
        
        # Assigning a Call to a Name (line 619):
        
        # Assigning a Call to a Name (line 619):
        
        # Call to CubicSpline(...): (line 619)
        # Processing the call arguments (line 619)
        # Getting the type of 'x' (line 619)
        x_118819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 24), 'x', False)
        # Getting the type of 'y' (line 619)
        y_118820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 27), 'y', False)
        # Processing the call keyword arguments (line 619)
        kwargs_118821 = {}
        # Getting the type of 'CubicSpline' (line 619)
        CubicSpline_118818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 12), 'CubicSpline', False)
        # Calling CubicSpline(args, kwargs) (line 619)
        CubicSpline_call_result_118822 = invoke(stypy.reporting.localization.Localization(__file__, 619, 12), CubicSpline_118818, *[x_118819, y_118820], **kwargs_118821)
        
        # Assigning a type to the variable 'S' (line 619)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 8), 'S', CubicSpline_call_result_118822)
        
        # Call to check_correctness(...): (line 620)
        # Processing the call arguments (line 620)
        # Getting the type of 'S' (line 620)
        S_118825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 31), 'S', False)
        # Processing the call keyword arguments (line 620)
        float_118826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 38), 'float')
        keyword_118827 = float_118826
        kwargs_118828 = {'tol': keyword_118827}
        # Getting the type of 'self' (line 620)
        self_118823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 8), 'self', False)
        # Obtaining the member 'check_correctness' of a type (line 620)
        check_correctness_118824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 8), self_118823, 'check_correctness')
        # Calling check_correctness(args, kwargs) (line 620)
        check_correctness_call_result_118829 = invoke(stypy.reporting.localization.Localization(__file__, 620, 8), check_correctness_118824, *[S_118825], **kwargs_118828)
        
        
        # ################# End of 'test_small_dx(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_small_dx' in the type store
        # Getting the type of 'stypy_return_type' (line 615)
        stypy_return_type_118830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_118830)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_small_dx'
        return stypy_return_type_118830


    @norecursion
    def test_incorrect_inputs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_incorrect_inputs'
        module_type_store = module_type_store.open_function_context('test_incorrect_inputs', 622, 4, False)
        # Assigning a type to the variable 'self' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_localization', localization)
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_function_name', 'TestCubicSpline.test_incorrect_inputs')
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_param_names_list', [])
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCubicSpline.test_incorrect_inputs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCubicSpline.test_incorrect_inputs', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_incorrect_inputs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_incorrect_inputs(...)' code ##################

        
        # Assigning a Call to a Name (line 623):
        
        # Assigning a Call to a Name (line 623):
        
        # Call to array(...): (line 623)
        # Processing the call arguments (line 623)
        
        # Obtaining an instance of the builtin type 'list' (line 623)
        list_118833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 623)
        # Adding element type (line 623)
        int_118834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 623, 21), list_118833, int_118834)
        # Adding element type (line 623)
        int_118835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 623, 21), list_118833, int_118835)
        # Adding element type (line 623)
        int_118836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 623, 21), list_118833, int_118836)
        # Adding element type (line 623)
        int_118837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 623, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 623, 21), list_118833, int_118837)
        
        # Processing the call keyword arguments (line 623)
        kwargs_118838 = {}
        # Getting the type of 'np' (line 623)
        np_118831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 623)
        array_118832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 12), np_118831, 'array')
        # Calling array(args, kwargs) (line 623)
        array_call_result_118839 = invoke(stypy.reporting.localization.Localization(__file__, 623, 12), array_118832, *[list_118833], **kwargs_118838)
        
        # Assigning a type to the variable 'x' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'x', array_call_result_118839)
        
        # Assigning a Call to a Name (line 624):
        
        # Assigning a Call to a Name (line 624):
        
        # Call to array(...): (line 624)
        # Processing the call arguments (line 624)
        
        # Obtaining an instance of the builtin type 'list' (line 624)
        list_118842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 624)
        # Adding element type (line 624)
        int_118843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 21), list_118842, int_118843)
        # Adding element type (line 624)
        int_118844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 21), list_118842, int_118844)
        # Adding element type (line 624)
        int_118845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 21), list_118842, int_118845)
        # Adding element type (line 624)
        int_118846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 21), list_118842, int_118846)
        
        # Processing the call keyword arguments (line 624)
        kwargs_118847 = {}
        # Getting the type of 'np' (line 624)
        np_118840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 624)
        array_118841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 12), np_118840, 'array')
        # Calling array(args, kwargs) (line 624)
        array_call_result_118848 = invoke(stypy.reporting.localization.Localization(__file__, 624, 12), array_118841, *[list_118842], **kwargs_118847)
        
        # Assigning a type to the variable 'y' (line 624)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 624, 8), 'y', array_call_result_118848)
        
        # Assigning a Call to a Name (line 625):
        
        # Assigning a Call to a Name (line 625):
        
        # Call to array(...): (line 625)
        # Processing the call arguments (line 625)
        
        # Obtaining an instance of the builtin type 'list' (line 625)
        list_118851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 625)
        # Adding element type (line 625)
        int_118852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 23), 'int')
        complex_118853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 27), 'complex')
        # Applying the binary operator '+' (line 625)
        result_add_118854 = python_operator(stypy.reporting.localization.Localization(__file__, 625, 23), '+', int_118852, complex_118853)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 22), list_118851, result_add_118854)
        # Adding element type (line 625)
        int_118855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 22), list_118851, int_118855)
        # Adding element type (line 625)
        int_118856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 22), list_118851, int_118856)
        # Adding element type (line 625)
        int_118857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 22), list_118851, int_118857)
        
        # Processing the call keyword arguments (line 625)
        kwargs_118858 = {}
        # Getting the type of 'np' (line 625)
        np_118849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 625)
        array_118850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 625, 13), np_118849, 'array')
        # Calling array(args, kwargs) (line 625)
        array_call_result_118859 = invoke(stypy.reporting.localization.Localization(__file__, 625, 13), array_118850, *[list_118851], **kwargs_118858)
        
        # Assigning a type to the variable 'xc' (line 625)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 625, 8), 'xc', array_call_result_118859)
        
        # Assigning a Call to a Name (line 626):
        
        # Assigning a Call to a Name (line 626):
        
        # Call to array(...): (line 626)
        # Processing the call arguments (line 626)
        
        # Obtaining an instance of the builtin type 'list' (line 626)
        list_118862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 626)
        # Adding element type (line 626)
        # Getting the type of 'np' (line 626)
        np_118863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 23), 'np', False)
        # Obtaining the member 'nan' of a type (line 626)
        nan_118864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 626, 23), np_118863, 'nan')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 22), list_118862, nan_118864)
        # Adding element type (line 626)
        int_118865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 22), list_118862, int_118865)
        # Adding element type (line 626)
        int_118866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 22), list_118862, int_118866)
        # Adding element type (line 626)
        int_118867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 22), list_118862, int_118867)
        
        # Processing the call keyword arguments (line 626)
        kwargs_118868 = {}
        # Getting the type of 'np' (line 626)
        np_118860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 626)
        array_118861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 626, 13), np_118860, 'array')
        # Calling array(args, kwargs) (line 626)
        array_call_result_118869 = invoke(stypy.reporting.localization.Localization(__file__, 626, 13), array_118861, *[list_118862], **kwargs_118868)
        
        # Assigning a type to the variable 'xn' (line 626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'xn', array_call_result_118869)
        
        # Assigning a Call to a Name (line 627):
        
        # Assigning a Call to a Name (line 627):
        
        # Call to array(...): (line 627)
        # Processing the call arguments (line 627)
        
        # Obtaining an instance of the builtin type 'list' (line 627)
        list_118872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 627)
        # Adding element type (line 627)
        int_118873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 627, 22), list_118872, int_118873)
        # Adding element type (line 627)
        int_118874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 627, 22), list_118872, int_118874)
        # Adding element type (line 627)
        int_118875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 627, 22), list_118872, int_118875)
        # Adding element type (line 627)
        int_118876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 627, 22), list_118872, int_118876)
        
        # Processing the call keyword arguments (line 627)
        kwargs_118877 = {}
        # Getting the type of 'np' (line 627)
        np_118870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 627)
        array_118871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 13), np_118870, 'array')
        # Calling array(args, kwargs) (line 627)
        array_call_result_118878 = invoke(stypy.reporting.localization.Localization(__file__, 627, 13), array_118871, *[list_118872], **kwargs_118877)
        
        # Assigning a type to the variable 'xo' (line 627)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 8), 'xo', array_call_result_118878)
        
        # Assigning a Call to a Name (line 628):
        
        # Assigning a Call to a Name (line 628):
        
        # Call to array(...): (line 628)
        # Processing the call arguments (line 628)
        
        # Obtaining an instance of the builtin type 'list' (line 628)
        list_118881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 628)
        # Adding element type (line 628)
        # Getting the type of 'np' (line 628)
        np_118882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 23), 'np', False)
        # Obtaining the member 'nan' of a type (line 628)
        nan_118883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 23), np_118882, 'nan')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 628, 22), list_118881, nan_118883)
        # Adding element type (line 628)
        int_118884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 628, 22), list_118881, int_118884)
        # Adding element type (line 628)
        int_118885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 628, 22), list_118881, int_118885)
        # Adding element type (line 628)
        int_118886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 628, 22), list_118881, int_118886)
        
        # Processing the call keyword arguments (line 628)
        kwargs_118887 = {}
        # Getting the type of 'np' (line 628)
        np_118879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 628)
        array_118880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 13), np_118879, 'array')
        # Calling array(args, kwargs) (line 628)
        array_call_result_118888 = invoke(stypy.reporting.localization.Localization(__file__, 628, 13), array_118880, *[list_118881], **kwargs_118887)
        
        # Assigning a type to the variable 'yn' (line 628)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 8), 'yn', array_call_result_118888)
        
        # Assigning a List to a Name (line 629):
        
        # Assigning a List to a Name (line 629):
        
        # Obtaining an instance of the builtin type 'list' (line 629)
        list_118889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 629)
        # Adding element type (line 629)
        int_118890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 629, 13), list_118889, int_118890)
        # Adding element type (line 629)
        int_118891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 17), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 629, 13), list_118889, int_118891)
        # Adding element type (line 629)
        int_118892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 629, 13), list_118889, int_118892)
        
        # Assigning a type to the variable 'y3' (line 629)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 629, 8), 'y3', list_118889)
        
        # Assigning a List to a Name (line 630):
        
        # Assigning a List to a Name (line 630):
        
        # Obtaining an instance of the builtin type 'list' (line 630)
        list_118893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 630, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 630)
        # Adding element type (line 630)
        int_118894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 630, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 13), list_118893, int_118894)
        
        # Assigning a type to the variable 'x1' (line 630)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'x1', list_118893)
        
        # Assigning a List to a Name (line 631):
        
        # Assigning a List to a Name (line 631):
        
        # Obtaining an instance of the builtin type 'list' (line 631)
        list_118895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 631)
        # Adding element type (line 631)
        int_118896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 631, 13), list_118895, int_118896)
        
        # Assigning a type to the variable 'y1' (line 631)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 'y1', list_118895)
        
        # Call to assert_raises(...): (line 633)
        # Processing the call arguments (line 633)
        # Getting the type of 'ValueError' (line 633)
        ValueError_118898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 633)
        CubicSpline_118899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 34), 'CubicSpline', False)
        # Getting the type of 'xc' (line 633)
        xc_118900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 47), 'xc', False)
        # Getting the type of 'y' (line 633)
        y_118901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 51), 'y', False)
        # Processing the call keyword arguments (line 633)
        kwargs_118902 = {}
        # Getting the type of 'assert_raises' (line 633)
        assert_raises_118897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 633)
        assert_raises_call_result_118903 = invoke(stypy.reporting.localization.Localization(__file__, 633, 8), assert_raises_118897, *[ValueError_118898, CubicSpline_118899, xc_118900, y_118901], **kwargs_118902)
        
        
        # Call to assert_raises(...): (line 634)
        # Processing the call arguments (line 634)
        # Getting the type of 'ValueError' (line 634)
        ValueError_118905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 634)
        CubicSpline_118906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 34), 'CubicSpline', False)
        # Getting the type of 'xn' (line 634)
        xn_118907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 47), 'xn', False)
        # Getting the type of 'y' (line 634)
        y_118908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 51), 'y', False)
        # Processing the call keyword arguments (line 634)
        kwargs_118909 = {}
        # Getting the type of 'assert_raises' (line 634)
        assert_raises_118904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 634)
        assert_raises_call_result_118910 = invoke(stypy.reporting.localization.Localization(__file__, 634, 8), assert_raises_118904, *[ValueError_118905, CubicSpline_118906, xn_118907, y_118908], **kwargs_118909)
        
        
        # Call to assert_raises(...): (line 635)
        # Processing the call arguments (line 635)
        # Getting the type of 'ValueError' (line 635)
        ValueError_118912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 635)
        CubicSpline_118913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 34), 'CubicSpline', False)
        # Getting the type of 'x' (line 635)
        x_118914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 47), 'x', False)
        # Getting the type of 'yn' (line 635)
        yn_118915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 50), 'yn', False)
        # Processing the call keyword arguments (line 635)
        kwargs_118916 = {}
        # Getting the type of 'assert_raises' (line 635)
        assert_raises_118911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 635)
        assert_raises_call_result_118917 = invoke(stypy.reporting.localization.Localization(__file__, 635, 8), assert_raises_118911, *[ValueError_118912, CubicSpline_118913, x_118914, yn_118915], **kwargs_118916)
        
        
        # Call to assert_raises(...): (line 636)
        # Processing the call arguments (line 636)
        # Getting the type of 'ValueError' (line 636)
        ValueError_118919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 636)
        CubicSpline_118920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 34), 'CubicSpline', False)
        # Getting the type of 'xo' (line 636)
        xo_118921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 47), 'xo', False)
        # Getting the type of 'y' (line 636)
        y_118922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 51), 'y', False)
        # Processing the call keyword arguments (line 636)
        kwargs_118923 = {}
        # Getting the type of 'assert_raises' (line 636)
        assert_raises_118918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 636)
        assert_raises_call_result_118924 = invoke(stypy.reporting.localization.Localization(__file__, 636, 8), assert_raises_118918, *[ValueError_118919, CubicSpline_118920, xo_118921, y_118922], **kwargs_118923)
        
        
        # Call to assert_raises(...): (line 637)
        # Processing the call arguments (line 637)
        # Getting the type of 'ValueError' (line 637)
        ValueError_118926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 637)
        CubicSpline_118927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 34), 'CubicSpline', False)
        # Getting the type of 'x' (line 637)
        x_118928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 47), 'x', False)
        # Getting the type of 'y3' (line 637)
        y3_118929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 50), 'y3', False)
        # Processing the call keyword arguments (line 637)
        kwargs_118930 = {}
        # Getting the type of 'assert_raises' (line 637)
        assert_raises_118925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 637)
        assert_raises_call_result_118931 = invoke(stypy.reporting.localization.Localization(__file__, 637, 8), assert_raises_118925, *[ValueError_118926, CubicSpline_118927, x_118928, y3_118929], **kwargs_118930)
        
        
        # Call to assert_raises(...): (line 638)
        # Processing the call arguments (line 638)
        # Getting the type of 'ValueError' (line 638)
        ValueError_118933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 638)
        CubicSpline_118934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 34), 'CubicSpline', False)
        
        # Obtaining the type of the subscript
        slice_118935 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 638, 47), None, None, None)
        # Getting the type of 'np' (line 638)
        np_118936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 52), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 638)
        newaxis_118937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 52), np_118936, 'newaxis')
        # Getting the type of 'x' (line 638)
        x_118938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 47), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 638)
        getitem___118939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 47), x_118938, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 638)
        subscript_call_result_118940 = invoke(stypy.reporting.localization.Localization(__file__, 638, 47), getitem___118939, (slice_118935, newaxis_118937))
        
        # Getting the type of 'y' (line 638)
        y_118941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 65), 'y', False)
        # Processing the call keyword arguments (line 638)
        kwargs_118942 = {}
        # Getting the type of 'assert_raises' (line 638)
        assert_raises_118932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 638)
        assert_raises_call_result_118943 = invoke(stypy.reporting.localization.Localization(__file__, 638, 8), assert_raises_118932, *[ValueError_118933, CubicSpline_118934, subscript_call_result_118940, y_118941], **kwargs_118942)
        
        
        # Call to assert_raises(...): (line 639)
        # Processing the call arguments (line 639)
        # Getting the type of 'ValueError' (line 639)
        ValueError_118945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 639)
        CubicSpline_118946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 34), 'CubicSpline', False)
        # Getting the type of 'x1' (line 639)
        x1_118947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 47), 'x1', False)
        # Getting the type of 'y1' (line 639)
        y1_118948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 51), 'y1', False)
        # Processing the call keyword arguments (line 639)
        kwargs_118949 = {}
        # Getting the type of 'assert_raises' (line 639)
        assert_raises_118944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 639)
        assert_raises_call_result_118950 = invoke(stypy.reporting.localization.Localization(__file__, 639, 8), assert_raises_118944, *[ValueError_118945, CubicSpline_118946, x1_118947, y1_118948], **kwargs_118949)
        
        
        # Assigning a List to a Name (line 641):
        
        # Assigning a List to a Name (line 641):
        
        # Obtaining an instance of the builtin type 'list' (line 641)
        list_118951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 641)
        # Adding element type (line 641)
        
        # Obtaining an instance of the builtin type 'tuple' (line 641)
        tuple_118952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 641)
        # Adding element type (line 641)
        str_118953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 21), 'str', 'periodic')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 21), tuple_118952, str_118953)
        # Adding element type (line 641)
        str_118954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 33), 'str', 'clamped')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 21), tuple_118952, str_118954)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 19), list_118951, tuple_118952)
        # Adding element type (line 641)
        
        # Obtaining an instance of the builtin type 'tuple' (line 642)
        tuple_118955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 642, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 642)
        # Adding element type (line 642)
        
        # Obtaining an instance of the builtin type 'tuple' (line 642)
        tuple_118956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 642, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 642)
        # Adding element type (line 642)
        int_118957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 642, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 642, 22), tuple_118956, int_118957)
        # Adding element type (line 642)
        int_118958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 642, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 642, 22), tuple_118956, int_118958)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 642, 21), tuple_118955, tuple_118956)
        # Adding element type (line 642)
        
        # Obtaining an instance of the builtin type 'tuple' (line 642)
        tuple_118959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 642, 30), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 642)
        # Adding element type (line 642)
        int_118960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 642, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 642, 30), tuple_118959, int_118960)
        # Adding element type (line 642)
        int_118961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 642, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 642, 30), tuple_118959, int_118961)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 642, 21), tuple_118955, tuple_118959)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 19), list_118951, tuple_118955)
        # Adding element type (line 641)
        
        # Obtaining an instance of the builtin type 'tuple' (line 643)
        tuple_118962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 643)
        # Adding element type (line 643)
        
        # Obtaining an instance of the builtin type 'tuple' (line 643)
        tuple_118963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 643)
        # Adding element type (line 643)
        int_118964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 22), tuple_118963, int_118964)
        # Adding element type (line 643)
        int_118965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 22), tuple_118963, int_118965)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 21), tuple_118962, tuple_118963)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 19), list_118951, tuple_118962)
        # Adding element type (line 641)
        
        # Obtaining an instance of the builtin type 'tuple' (line 644)
        tuple_118966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 644)
        # Adding element type (line 644)
        float_118967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 21), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 644, 21), tuple_118966, float_118967)
        # Adding element type (line 644)
        float_118968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 644, 21), tuple_118966, float_118968)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 19), list_118951, tuple_118966)
        # Adding element type (line 641)
        str_118969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 20), 'str', 'not-a-typo')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 641, 19), list_118951, str_118969)
        
        # Assigning a type to the variable 'wrong_bc' (line 641)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 8), 'wrong_bc', list_118951)
        
        # Getting the type of 'wrong_bc' (line 647)
        wrong_bc_118970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 23), 'wrong_bc')
        # Testing the type of a for loop iterable (line 647)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 647, 8), wrong_bc_118970)
        # Getting the type of the for loop variable (line 647)
        for_loop_var_118971 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 647, 8), wrong_bc_118970)
        # Assigning a type to the variable 'bc_type' (line 647)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 8), 'bc_type', for_loop_var_118971)
        # SSA begins for a for statement (line 647)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assert_raises(...): (line 648)
        # Processing the call arguments (line 648)
        # Getting the type of 'ValueError' (line 648)
        ValueError_118973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 26), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 648)
        CubicSpline_118974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 38), 'CubicSpline', False)
        # Getting the type of 'x' (line 648)
        x_118975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 51), 'x', False)
        # Getting the type of 'y' (line 648)
        y_118976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 54), 'y', False)
        int_118977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 57), 'int')
        # Getting the type of 'bc_type' (line 648)
        bc_type_118978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 60), 'bc_type', False)
        # Getting the type of 'True' (line 648)
        True_118979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 69), 'True', False)
        # Processing the call keyword arguments (line 648)
        kwargs_118980 = {}
        # Getting the type of 'assert_raises' (line 648)
        assert_raises_118972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 648)
        assert_raises_call_result_118981 = invoke(stypy.reporting.localization.Localization(__file__, 648, 12), assert_raises_118972, *[ValueError_118973, CubicSpline_118974, x_118975, y_118976, int_118977, bc_type_118978, True_118979], **kwargs_118980)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Name (line 651):
        
        # Assigning a Subscript to a Name (line 651):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 651)
        tuple_118982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 651)
        # Adding element type (line 651)
        # Getting the type of 'y' (line 651)
        y_118983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 18), 'y')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 651, 18), tuple_118982, y_118983)
        # Adding element type (line 651)
        # Getting the type of 'y' (line 651)
        y_118984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 21), 'y')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 651, 18), tuple_118982, y_118984)
        
        # Getting the type of 'np' (line 651)
        np_118985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 12), 'np')
        # Obtaining the member 'c_' of a type (line 651)
        c__118986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 651, 12), np_118985, 'c_')
        # Obtaining the member '__getitem__' of a type (line 651)
        getitem___118987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 651, 12), c__118986, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 651)
        subscript_call_result_118988 = invoke(stypy.reporting.localization.Localization(__file__, 651, 12), getitem___118987, tuple_118982)
        
        # Assigning a type to the variable 'Y' (line 651)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 651, 8), 'Y', subscript_call_result_118988)
        
        # Assigning a Tuple to a Name (line 652):
        
        # Assigning a Tuple to a Name (line 652):
        
        # Obtaining an instance of the builtin type 'tuple' (line 652)
        tuple_118989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 652)
        # Adding element type (line 652)
        str_118990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 15), 'str', 'clamped')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 15), tuple_118989, str_118990)
        # Adding element type (line 652)
        
        # Obtaining an instance of the builtin type 'tuple' (line 652)
        tuple_118991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 652)
        # Adding element type (line 652)
        int_118992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 27), tuple_118991, int_118992)
        # Adding element type (line 652)
        int_118993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 27), tuple_118991, int_118993)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 15), tuple_118989, tuple_118991)
        
        # Assigning a type to the variable 'bc1' (line 652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 8), 'bc1', tuple_118989)
        
        # Assigning a Tuple to a Name (line 653):
        
        # Assigning a Tuple to a Name (line 653):
        
        # Obtaining an instance of the builtin type 'tuple' (line 653)
        tuple_118994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 653)
        # Adding element type (line 653)
        str_118995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 15), 'str', 'clamped')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 15), tuple_118994, str_118995)
        # Adding element type (line 653)
        
        # Obtaining an instance of the builtin type 'tuple' (line 653)
        tuple_118996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 653)
        # Adding element type (line 653)
        int_118997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 27), tuple_118996, int_118997)
        # Adding element type (line 653)
        
        # Obtaining an instance of the builtin type 'list' (line 653)
        list_118998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 653)
        # Adding element type (line 653)
        int_118999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 30), list_118998, int_118999)
        # Adding element type (line 653)
        int_119000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 30), list_118998, int_119000)
        # Adding element type (line 653)
        int_119001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 30), list_118998, int_119001)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 27), tuple_118996, list_118998)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 15), tuple_118994, tuple_118996)
        
        # Assigning a type to the variable 'bc2' (line 653)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 653, 8), 'bc2', tuple_118994)
        
        # Assigning a Tuple to a Name (line 654):
        
        # Assigning a Tuple to a Name (line 654):
        
        # Obtaining an instance of the builtin type 'tuple' (line 654)
        tuple_119002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 654)
        # Adding element type (line 654)
        str_119003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 15), 'str', 'clamped')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 15), tuple_119002, str_119003)
        # Adding element type (line 654)
        
        # Obtaining an instance of the builtin type 'tuple' (line 654)
        tuple_119004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 654)
        # Adding element type (line 654)
        int_119005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 27), tuple_119004, int_119005)
        # Adding element type (line 654)
        
        # Obtaining an instance of the builtin type 'list' (line 654)
        list_119006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 654)
        # Adding element type (line 654)
        
        # Obtaining an instance of the builtin type 'list' (line 654)
        list_119007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 654)
        # Adding element type (line 654)
        int_119008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 31), list_119007, int_119008)
        # Adding element type (line 654)
        int_119009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 31), list_119007, int_119009)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 30), list_119006, list_119007)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 27), tuple_119004, list_119006)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 654, 15), tuple_119002, tuple_119004)
        
        # Assigning a type to the variable 'bc3' (line 654)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 8), 'bc3', tuple_119002)
        
        # Call to assert_raises(...): (line 655)
        # Processing the call arguments (line 655)
        # Getting the type of 'ValueError' (line 655)
        ValueError_119011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 655)
        CubicSpline_119012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 34), 'CubicSpline', False)
        # Getting the type of 'x' (line 655)
        x_119013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 47), 'x', False)
        # Getting the type of 'Y' (line 655)
        Y_119014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 50), 'Y', False)
        int_119015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 53), 'int')
        # Getting the type of 'bc1' (line 655)
        bc1_119016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 56), 'bc1', False)
        # Getting the type of 'True' (line 655)
        True_119017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 61), 'True', False)
        # Processing the call keyword arguments (line 655)
        kwargs_119018 = {}
        # Getting the type of 'assert_raises' (line 655)
        assert_raises_119010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 655)
        assert_raises_call_result_119019 = invoke(stypy.reporting.localization.Localization(__file__, 655, 8), assert_raises_119010, *[ValueError_119011, CubicSpline_119012, x_119013, Y_119014, int_119015, bc1_119016, True_119017], **kwargs_119018)
        
        
        # Call to assert_raises(...): (line 656)
        # Processing the call arguments (line 656)
        # Getting the type of 'ValueError' (line 656)
        ValueError_119021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 656)
        CubicSpline_119022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 34), 'CubicSpline', False)
        # Getting the type of 'x' (line 656)
        x_119023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 47), 'x', False)
        # Getting the type of 'Y' (line 656)
        Y_119024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 50), 'Y', False)
        int_119025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 53), 'int')
        # Getting the type of 'bc2' (line 656)
        bc2_119026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 56), 'bc2', False)
        # Getting the type of 'True' (line 656)
        True_119027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 61), 'True', False)
        # Processing the call keyword arguments (line 656)
        kwargs_119028 = {}
        # Getting the type of 'assert_raises' (line 656)
        assert_raises_119020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 656)
        assert_raises_call_result_119029 = invoke(stypy.reporting.localization.Localization(__file__, 656, 8), assert_raises_119020, *[ValueError_119021, CubicSpline_119022, x_119023, Y_119024, int_119025, bc2_119026, True_119027], **kwargs_119028)
        
        
        # Call to assert_raises(...): (line 657)
        # Processing the call arguments (line 657)
        # Getting the type of 'ValueError' (line 657)
        ValueError_119031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 657)
        CubicSpline_119032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 34), 'CubicSpline', False)
        # Getting the type of 'x' (line 657)
        x_119033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 47), 'x', False)
        # Getting the type of 'Y' (line 657)
        Y_119034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 50), 'Y', False)
        int_119035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 53), 'int')
        # Getting the type of 'bc3' (line 657)
        bc3_119036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 56), 'bc3', False)
        # Getting the type of 'True' (line 657)
        True_119037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 61), 'True', False)
        # Processing the call keyword arguments (line 657)
        kwargs_119038 = {}
        # Getting the type of 'assert_raises' (line 657)
        assert_raises_119030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 657)
        assert_raises_call_result_119039 = invoke(stypy.reporting.localization.Localization(__file__, 657, 8), assert_raises_119030, *[ValueError_119031, CubicSpline_119032, x_119033, Y_119034, int_119035, bc3_119036, True_119037], **kwargs_119038)
        
        
        # Call to assert_raises(...): (line 660)
        # Processing the call arguments (line 660)
        # Getting the type of 'ValueError' (line 660)
        ValueError_119041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 22), 'ValueError', False)
        # Getting the type of 'CubicSpline' (line 660)
        CubicSpline_119042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 34), 'CubicSpline', False)
        # Getting the type of 'x' (line 660)
        x_119043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 47), 'x', False)
        # Getting the type of 'y' (line 660)
        y_119044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 50), 'y', False)
        int_119045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 53), 'int')
        str_119046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 56), 'str', 'periodic')
        # Getting the type of 'True' (line 660)
        True_119047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 68), 'True', False)
        # Processing the call keyword arguments (line 660)
        kwargs_119048 = {}
        # Getting the type of 'assert_raises' (line 660)
        assert_raises_119040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 660)
        assert_raises_call_result_119049 = invoke(stypy.reporting.localization.Localization(__file__, 660, 8), assert_raises_119040, *[ValueError_119041, CubicSpline_119042, x_119043, y_119044, int_119045, str_119046, True_119047], **kwargs_119048)
        
        
        # ################# End of 'test_incorrect_inputs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_incorrect_inputs' in the type store
        # Getting the type of 'stypy_return_type' (line 622)
        stypy_return_type_119050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_119050)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_incorrect_inputs'
        return stypy_return_type_119050


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 480, 0, False)
        # Assigning a type to the variable 'self' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCubicSpline.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestCubicSpline' (line 480)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 0), 'TestCubicSpline', TestCubicSpline)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
