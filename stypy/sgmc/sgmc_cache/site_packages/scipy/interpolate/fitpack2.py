
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''
2: fitpack --- curve and surface fitting with splines
3: 
4: fitpack is based on a collection of Fortran routines DIERCKX
5: by P. Dierckx (see http://www.netlib.org/dierckx/) transformed
6: to double routines by Pearu Peterson.
7: '''
8: # Created by Pearu Peterson, June,August 2003
9: from __future__ import division, print_function, absolute_import
10: 
11: __all__ = [
12:     'UnivariateSpline',
13:     'InterpolatedUnivariateSpline',
14:     'LSQUnivariateSpline',
15:     'BivariateSpline',
16:     'LSQBivariateSpline',
17:     'SmoothBivariateSpline',
18:     'LSQSphereBivariateSpline',
19:     'SmoothSphereBivariateSpline',
20:     'RectBivariateSpline',
21:     'RectSphereBivariateSpline']
22: 
23: 
24: import warnings
25: 
26: from numpy import zeros, concatenate, alltrue, ravel, all, diff, array, ones
27: import numpy as np
28: 
29: from . import fitpack
30: from . import dfitpack
31: 
32: 
33: ################ Univariate spline ####################
34: 
35: _curfit_messages = {1:'''
36: The required storage space exceeds the available storage space, as
37: specified by the parameter nest: nest too small. If nest is already
38: large (say nest > m/2), it may also indicate that s is too small.
39: The approximation returned is the weighted least-squares spline
40: according to the knots t[0],t[1],...,t[n-1]. (n=nest) the parameter fp
41: gives the corresponding weighted sum of squared residuals (fp>s).
42: ''',
43:                     2:'''
44: A theoretically impossible result was found during the iteration
45: process for finding a smoothing spline with fp = s: s too small.
46: There is an approximation returned but the corresponding weighted sum
47: of squared residuals does not satisfy the condition abs(fp-s)/s < tol.''',
48:                     3:'''
49: The maximal number of iterations maxit (set to 20 by the program)
50: allowed for finding a smoothing spline with fp=s has been reached: s
51: too small.
52: There is an approximation returned but the corresponding weighted sum
53: of squared residuals does not satisfy the condition abs(fp-s)/s < tol.''',
54:                     10:'''
55: Error on entry, no approximation returned. The following conditions
56: must hold:
57: xb<=x[0]<x[1]<...<x[m-1]<=xe, w[i]>0, i=0..m-1
58: if iopt=-1:
59:   xb<t[k+1]<t[k+2]<...<t[n-k-2]<xe'''
60:                     }
61: 
62: 
63: # UnivariateSpline, ext parameter can be an int or a string
64: _extrap_modes = {0: 0, 'extrapolate': 0,
65:                  1: 1, 'zeros': 1,
66:                  2: 2, 'raise': 2,
67:                  3: 3, 'const': 3}
68: 
69: 
70: class UnivariateSpline(object):
71:     '''
72:     One-dimensional smoothing spline fit to a given set of data points.
73: 
74:     Fits a spline y = spl(x) of degree `k` to the provided `x`, `y` data.  `s`
75:     specifies the number of knots by specifying a smoothing condition.
76: 
77:     Parameters
78:     ----------
79:     x : (N,) array_like
80:         1-D array of independent input data. Must be increasing.
81:     y : (N,) array_like
82:         1-D array of dependent input data, of the same length as `x`.
83:     w : (N,) array_like, optional
84:         Weights for spline fitting.  Must be positive.  If None (default),
85:         weights are all equal.
86:     bbox : (2,) array_like, optional
87:         2-sequence specifying the boundary of the approximation interval. If
88:         None (default), ``bbox=[x[0], x[-1]]``.
89:     k : int, optional
90:         Degree of the smoothing spline.  Must be <= 5.
91:         Default is k=3, a cubic spline.
92:     s : float or None, optional
93:         Positive smoothing factor used to choose the number of knots.  Number
94:         of knots will be increased until the smoothing condition is satisfied::
95: 
96:             sum((w[i] * (y[i]-spl(x[i])))**2, axis=0) <= s
97: 
98:         If None (default), ``s = len(w)`` which should be a good value if
99:         ``1/w[i]`` is an estimate of the standard deviation of ``y[i]``.
100:         If 0, spline will interpolate through all data points.
101:     ext : int or str, optional
102:         Controls the extrapolation mode for elements
103:         not in the interval defined by the knot sequence.
104: 
105:         * if ext=0 or 'extrapolate', return the extrapolated value.
106:         * if ext=1 or 'zeros', return 0
107:         * if ext=2 or 'raise', raise a ValueError
108:         * if ext=3 of 'const', return the boundary value.
109: 
110:         The default value is 0.
111: 
112:     check_finite : bool, optional
113:         Whether to check that the input arrays contain only finite numbers.
114:         Disabling may give a performance gain, but may result in problems
115:         (crashes, non-termination or non-sensical results) if the inputs
116:         do contain infinities or NaNs.
117:         Default is False.
118: 
119:     See Also
120:     --------
121:     InterpolatedUnivariateSpline : Subclass with smoothing forced to 0
122:     LSQUnivariateSpline : Subclass in which knots are user-selected instead of
123:         being set by smoothing condition
124:     splrep : An older, non object-oriented wrapping of FITPACK
125:     splev, sproot, splint, spalde
126:     BivariateSpline : A similar class for two-dimensional spline interpolation
127: 
128:     Notes
129:     -----
130:     The number of data points must be larger than the spline degree `k`.
131: 
132:     **NaN handling**: If the input arrays contain ``nan`` values, the result
133:     is not useful, since the underlying spline fitting routines cannot deal
134:     with ``nan`` . A workaround is to use zero weights for not-a-number
135:     data points:
136: 
137:     >>> from scipy.interpolate import UnivariateSpline
138:     >>> x, y = np.array([1, 2, 3, 4]), np.array([1, np.nan, 3, 4])
139:     >>> w = np.isnan(y)
140:     >>> y[w] = 0.
141:     >>> spl = UnivariateSpline(x, y, w=~w)
142: 
143:     Notice the need to replace a ``nan`` by a numerical value (precise value
144:     does not matter as long as the corresponding weight is zero.)
145: 
146:     Examples
147:     --------
148:     >>> import matplotlib.pyplot as plt
149:     >>> from scipy.interpolate import UnivariateSpline
150:     >>> x = np.linspace(-3, 3, 50)
151:     >>> y = np.exp(-x**2) + 0.1 * np.random.randn(50)
152:     >>> plt.plot(x, y, 'ro', ms=5)
153: 
154:     Use the default value for the smoothing parameter:
155: 
156:     >>> spl = UnivariateSpline(x, y)
157:     >>> xs = np.linspace(-3, 3, 1000)
158:     >>> plt.plot(xs, spl(xs), 'g', lw=3)
159: 
160:     Manually change the amount of smoothing:
161: 
162:     >>> spl.set_smoothing_factor(0.5)
163:     >>> plt.plot(xs, spl(xs), 'b', lw=3)
164:     >>> plt.show()
165: 
166:     '''
167:     def __init__(self, x, y, w=None, bbox=[None]*2, k=3, s=None,
168:                  ext=0, check_finite=False):
169: 
170:         if check_finite:
171:             w_finite = np.isfinite(w).all() if w is not None else True
172:             if (not np.isfinite(x).all() or not np.isfinite(y).all() or
173:                     not w_finite):
174:                 raise ValueError("x and y array must not contain NaNs or infs.")
175:         if not all(diff(x) > 0.0):
176:             raise ValueError('x must be strictly increasing')
177: 
178:         # _data == x,y,w,xb,xe,k,s,n,t,c,fp,fpint,nrdata,ier
179:         try:
180:             self.ext = _extrap_modes[ext]
181:         except KeyError:
182:             raise ValueError("Unknown extrapolation mode %s." % ext)
183: 
184:         data = dfitpack.fpcurf0(x,y,k,w=w,
185:                                 xb=bbox[0],xe=bbox[1],s=s)
186:         if data[-1] == 1:
187:             # nest too small, setting to maximum bound
188:             data = self._reset_nest(data)
189:         self._data = data
190:         self._reset_class()
191: 
192:     @classmethod
193:     def _from_tck(cls, tck, ext=0):
194:         '''Construct a spline object from given tck'''
195:         self = cls.__new__(cls)
196:         t, c, k = tck
197:         self._eval_args = tck
198:         #_data == x,y,w,xb,xe,k,s,n,t,c,fp,fpint,nrdata,ier
199:         self._data = (None,None,None,None,None,k,None,len(t),t,
200:                       c,None,None,None,None)
201:         self.ext = ext
202:         return self
203: 
204:     def _reset_class(self):
205:         data = self._data
206:         n,t,c,k,ier = data[7],data[8],data[9],data[5],data[-1]
207:         self._eval_args = t[:n],c[:n],k
208:         if ier == 0:
209:             # the spline returned has a residual sum of squares fp
210:             # such that abs(fp-s)/s <= tol with tol a relative
211:             # tolerance set to 0.001 by the program
212:             pass
213:         elif ier == -1:
214:             # the spline returned is an interpolating spline
215:             self._set_class(InterpolatedUnivariateSpline)
216:         elif ier == -2:
217:             # the spline returned is the weighted least-squares
218:             # polynomial of degree k. In this extreme case fp gives
219:             # the upper bound fp0 for the smoothing factor s.
220:             self._set_class(LSQUnivariateSpline)
221:         else:
222:             # error
223:             if ier == 1:
224:                 self._set_class(LSQUnivariateSpline)
225:             message = _curfit_messages.get(ier,'ier=%s' % (ier))
226:             warnings.warn(message)
227: 
228:     def _set_class(self, cls):
229:         self._spline_class = cls
230:         if self.__class__ in (UnivariateSpline, InterpolatedUnivariateSpline,
231:                               LSQUnivariateSpline):
232:             self.__class__ = cls
233:         else:
234:             # It's an unknown subclass -- don't change class. cf. #731
235:             pass
236: 
237:     def _reset_nest(self, data, nest=None):
238:         n = data[10]
239:         if nest is None:
240:             k,m = data[5],len(data[0])
241:             nest = m+k+1  # this is the maximum bound for nest
242:         else:
243:             if not n <= nest:
244:                 raise ValueError("`nest` can only be increased")
245:         t, c, fpint, nrdata = [np.resize(data[j], nest) for j in [8,9,11,12]]
246: 
247:         args = data[:8] + (t,c,n,fpint,nrdata,data[13])
248:         data = dfitpack.fpcurf1(*args)
249:         return data
250: 
251:     def set_smoothing_factor(self, s):
252:         ''' Continue spline computation with the given smoothing
253:         factor s and with the knots found at the last call.
254: 
255:         This routine modifies the spline in place.
256: 
257:         '''
258:         data = self._data
259:         if data[6] == -1:
260:             warnings.warn('smoothing factor unchanged for'
261:                           'LSQ spline with fixed knots')
262:             return
263:         args = data[:6] + (s,) + data[7:]
264:         data = dfitpack.fpcurf1(*args)
265:         if data[-1] == 1:
266:             # nest too small, setting to maximum bound
267:             data = self._reset_nest(data)
268:         self._data = data
269:         self._reset_class()
270: 
271:     def __call__(self, x, nu=0, ext=None):
272:         '''
273:         Evaluate spline (or its nu-th derivative) at positions x.
274: 
275:         Parameters
276:         ----------
277:         x : array_like
278:             A 1-D array of points at which to return the value of the smoothed
279:             spline or its derivatives. Note: x can be unordered but the
280:             evaluation is more efficient if x is (partially) ordered.
281:         nu  : int
282:             The order of derivative of the spline to compute.
283:         ext : int
284:             Controls the value returned for elements of ``x`` not in the
285:             interval defined by the knot sequence.
286: 
287:             * if ext=0 or 'extrapolate', return the extrapolated value.
288:             * if ext=1 or 'zeros', return 0
289:             * if ext=2 or 'raise', raise a ValueError
290:             * if ext=3 or 'const', return the boundary value.
291: 
292:             The default value is 0, passed from the initialization of
293:             UnivariateSpline.
294: 
295:         '''
296:         x = np.asarray(x)
297:         # empty input yields empty output
298:         if x.size == 0:
299:             return array([])
300: #        if nu is None:
301: #            return dfitpack.splev(*(self._eval_args+(x,)))
302: #        return dfitpack.splder(nu=nu,*(self._eval_args+(x,)))
303:         if ext is None:
304:             ext = self.ext
305:         else:
306:             try:
307:                 ext = _extrap_modes[ext]
308:             except KeyError:
309:                 raise ValueError("Unknown extrapolation mode %s." % ext)
310:         return fitpack.splev(x, self._eval_args, der=nu, ext=ext)
311: 
312:     def get_knots(self):
313:         ''' Return positions of interior knots of the spline.
314: 
315:         Internally, the knot vector contains ``2*k`` additional boundary knots.
316:         '''
317:         data = self._data
318:         k,n = data[5],data[7]
319:         return data[8][k:n-k]
320: 
321:     def get_coeffs(self):
322:         '''Return spline coefficients.'''
323:         data = self._data
324:         k,n = data[5],data[7]
325:         return data[9][:n-k-1]
326: 
327:     def get_residual(self):
328:         '''Return weighted sum of squared residuals of the spline approximation.
329: 
330:            This is equivalent to::
331: 
332:                 sum((w[i] * (y[i]-spl(x[i])))**2, axis=0)
333: 
334:         '''
335:         return self._data[10]
336: 
337:     def integral(self, a, b):
338:         ''' Return definite integral of the spline between two given points.
339: 
340:         Parameters
341:         ----------
342:         a : float
343:             Lower limit of integration.
344:         b : float
345:             Upper limit of integration.
346: 
347:         Returns
348:         -------
349:         integral : float
350:             The value of the definite integral of the spline between limits.
351: 
352:         Examples
353:         --------
354:         >>> from scipy.interpolate import UnivariateSpline
355:         >>> x = np.linspace(0, 3, 11)
356:         >>> y = x**2
357:         >>> spl = UnivariateSpline(x, y)
358:         >>> spl.integral(0, 3)
359:         9.0
360: 
361:         which agrees with :math:`\\int x^2 dx = x^3 / 3` between the limits
362:         of 0 and 3.
363: 
364:         A caveat is that this routine assumes the spline to be zero outside of
365:         the data limits:
366: 
367:         >>> spl.integral(-1, 4)
368:         9.0
369:         >>> spl.integral(-1, 0)
370:         0.0
371: 
372:         '''
373:         return dfitpack.splint(*(self._eval_args+(a,b)))
374: 
375:     def derivatives(self, x):
376:         ''' Return all derivatives of the spline at the point x.
377: 
378:         Parameters
379:         ----------
380:         x : float
381:             The point to evaluate the derivatives at.
382: 
383:         Returns
384:         -------
385:         der : ndarray, shape(k+1,)
386:             Derivatives of the orders 0 to k.
387: 
388:         Examples
389:         --------
390:         >>> from scipy.interpolate import UnivariateSpline
391:         >>> x = np.linspace(0, 3, 11)
392:         >>> y = x**2
393:         >>> spl = UnivariateSpline(x, y)
394:         >>> spl.derivatives(1.5)
395:         array([2.25, 3.0, 2.0, 0])
396: 
397:         '''
398:         d,ier = dfitpack.spalde(*(self._eval_args+(x,)))
399:         if not ier == 0:
400:             raise ValueError("Error code returned by spalde: %s" % ier)
401:         return d
402: 
403:     def roots(self):
404:         ''' Return the zeros of the spline.
405: 
406:         Restriction: only cubic splines are supported by fitpack.
407:         '''
408:         k = self._data[5]
409:         if k == 3:
410:             z,m,ier = dfitpack.sproot(*self._eval_args[:2])
411:             if not ier == 0:
412:                 raise ValueError("Error code returned by spalde: %s" % ier)
413:             return z[:m]
414:         raise NotImplementedError('finding roots unsupported for '
415:                                     'non-cubic splines')
416: 
417:     def derivative(self, n=1):
418:         '''
419:         Construct a new spline representing the derivative of this spline.
420: 
421:         Parameters
422:         ----------
423:         n : int, optional
424:             Order of derivative to evaluate. Default: 1
425: 
426:         Returns
427:         -------
428:         spline : UnivariateSpline
429:             Spline of order k2=k-n representing the derivative of this
430:             spline.
431: 
432:         See Also
433:         --------
434:         splder, antiderivative
435: 
436:         Notes
437:         -----
438: 
439:         .. versionadded:: 0.13.0
440: 
441:         Examples
442:         --------
443:         This can be used for finding maxima of a curve:
444: 
445:         >>> from scipy.interpolate import UnivariateSpline
446:         >>> x = np.linspace(0, 10, 70)
447:         >>> y = np.sin(x)
448:         >>> spl = UnivariateSpline(x, y, k=4, s=0)
449: 
450:         Now, differentiate the spline and find the zeros of the
451:         derivative. (NB: `sproot` only works for order 3 splines, so we
452:         fit an order 4 spline):
453: 
454:         >>> spl.derivative().roots() / np.pi
455:         array([ 0.50000001,  1.5       ,  2.49999998])
456: 
457:         This agrees well with roots :math:`\\pi/2 + n\\pi` of
458:         :math:`\\cos(x) = \\sin'(x)`.
459: 
460:         '''
461:         tck = fitpack.splder(self._eval_args, n)
462:         return UnivariateSpline._from_tck(tck, self.ext)
463: 
464:     def antiderivative(self, n=1):
465:         '''
466:         Construct a new spline representing the antiderivative of this spline.
467: 
468:         Parameters
469:         ----------
470:         n : int, optional
471:             Order of antiderivative to evaluate. Default: 1
472: 
473:         Returns
474:         -------
475:         spline : UnivariateSpline
476:             Spline of order k2=k+n representing the antiderivative of this
477:             spline.
478: 
479:         Notes
480:         -----
481: 
482:         .. versionadded:: 0.13.0
483: 
484:         See Also
485:         --------
486:         splantider, derivative
487: 
488:         Examples
489:         --------
490:         >>> from scipy.interpolate import UnivariateSpline
491:         >>> x = np.linspace(0, np.pi/2, 70)
492:         >>> y = 1 / np.sqrt(1 - 0.8*np.sin(x)**2)
493:         >>> spl = UnivariateSpline(x, y, s=0)
494: 
495:         The derivative is the inverse operation of the antiderivative,
496:         although some floating point error accumulates:
497: 
498:         >>> spl(1.7), spl.antiderivative().derivative()(1.7)
499:         (array(2.1565429877197317), array(2.1565429877201865))
500: 
501:         Antiderivative can be used to evaluate definite integrals:
502: 
503:         >>> ispl = spl.antiderivative()
504:         >>> ispl(np.pi/2) - ispl(0)
505:         2.2572053588768486
506: 
507:         This is indeed an approximation to the complete elliptic integral
508:         :math:`K(m) = \\int_0^{\\pi/2} [1 - m\\sin^2 x]^{-1/2} dx`:
509: 
510:         >>> from scipy.special import ellipk
511:         >>> ellipk(0.8)
512:         2.2572053268208538
513: 
514:         '''
515:         tck = fitpack.splantider(self._eval_args, n)
516:         return UnivariateSpline._from_tck(tck, self.ext)
517: 
518: 
519: class InterpolatedUnivariateSpline(UnivariateSpline):
520:     '''
521:     One-dimensional interpolating spline for a given set of data points.
522: 
523:     Fits a spline y = spl(x) of degree `k` to the provided `x`, `y` data. Spline
524:     function passes through all provided points. Equivalent to
525:     `UnivariateSpline` with  s=0.
526: 
527:     Parameters
528:     ----------
529:     x : (N,) array_like
530:         Input dimension of data points -- must be increasing
531:     y : (N,) array_like
532:         input dimension of data points
533:     w : (N,) array_like, optional
534:         Weights for spline fitting.  Must be positive.  If None (default),
535:         weights are all equal.
536:     bbox : (2,) array_like, optional
537:         2-sequence specifying the boundary of the approximation interval. If
538:         None (default), ``bbox=[x[0], x[-1]]``.
539:     k : int, optional
540:         Degree of the smoothing spline.  Must be 1 <= `k` <= 5.
541:     ext : int or str, optional
542:         Controls the extrapolation mode for elements
543:         not in the interval defined by the knot sequence.
544: 
545:         * if ext=0 or 'extrapolate', return the extrapolated value.
546:         * if ext=1 or 'zeros', return 0
547:         * if ext=2 or 'raise', raise a ValueError
548:         * if ext=3 of 'const', return the boundary value.
549: 
550:         The default value is 0.
551: 
552:     check_finite : bool, optional
553:         Whether to check that the input arrays contain only finite numbers.
554:         Disabling may give a performance gain, but may result in problems
555:         (crashes, non-termination or non-sensical results) if the inputs
556:         do contain infinities or NaNs.
557:         Default is False.
558: 
559:     See Also
560:     --------
561:     UnivariateSpline : Superclass -- allows knots to be selected by a
562:         smoothing condition
563:     LSQUnivariateSpline : spline for which knots are user-selected
564:     splrep : An older, non object-oriented wrapping of FITPACK
565:     splev, sproot, splint, spalde
566:     BivariateSpline : A similar class for two-dimensional spline interpolation
567: 
568:     Notes
569:     -----
570:     The number of data points must be larger than the spline degree `k`.
571: 
572:     Examples
573:     --------
574:     >>> import matplotlib.pyplot as plt
575:     >>> from scipy.interpolate import InterpolatedUnivariateSpline
576:     >>> x = np.linspace(-3, 3, 50)
577:     >>> y = np.exp(-x**2) + 0.1 * np.random.randn(50)
578:     >>> spl = InterpolatedUnivariateSpline(x, y)
579:     >>> plt.plot(x, y, 'ro', ms=5)
580:     >>> xs = np.linspace(-3, 3, 1000)
581:     >>> plt.plot(xs, spl(xs), 'g', lw=3, alpha=0.7)
582:     >>> plt.show()
583: 
584:     Notice that the ``spl(x)`` interpolates `y`:
585: 
586:     >>> spl.get_residual()
587:     0.0
588: 
589:     '''
590:     def __init__(self, x, y, w=None, bbox=[None]*2, k=3,
591:                  ext=0, check_finite=False):
592: 
593:         if check_finite:
594:             w_finite = np.isfinite(w).all() if w is not None else True
595:             if (not np.isfinite(x).all() or not np.isfinite(y).all() or
596:                     not w_finite):
597:                 raise ValueError("Input must not contain NaNs or infs.")
598:         if not all(diff(x) > 0.0):
599:             raise ValueError('x must be strictly increasing')
600: 
601:         # _data == x,y,w,xb,xe,k,s,n,t,c,fp,fpint,nrdata,ier
602:         self._data = dfitpack.fpcurf0(x,y,k,w=w,
603:                                       xb=bbox[0],xe=bbox[1],s=0)
604:         self._reset_class()
605: 
606:         try:
607:             self.ext = _extrap_modes[ext]
608:         except KeyError:
609:             raise ValueError("Unknown extrapolation mode %s." % ext)
610: 
611: 
612: _fpchec_error_string = '''The input parameters have been rejected by fpchec. \
613: This means that at least one of the following conditions is violated:
614: 
615: 1) k+1 <= n-k-1 <= m
616: 2) t(1) <= t(2) <= ... <= t(k+1)
617:    t(n-k) <= t(n-k+1) <= ... <= t(n)
618: 3) t(k+1) < t(k+2) < ... < t(n-k)
619: 4) t(k+1) <= x(i) <= t(n-k)
620: 5) The conditions specified by Schoenberg and Whitney must hold
621:    for at least one subset of data points, i.e., there must be a
622:    subset of data points y(j) such that
623:        t(j) < y(j) < t(j+k+1), j=1,2,...,n-k-1
624: '''
625: 
626: 
627: class LSQUnivariateSpline(UnivariateSpline):
628:     '''
629:     One-dimensional spline with explicit internal knots.
630: 
631:     Fits a spline y = spl(x) of degree `k` to the provided `x`, `y` data.  `t`
632:     specifies the internal knots of the spline
633: 
634:     Parameters
635:     ----------
636:     x : (N,) array_like
637:         Input dimension of data points -- must be increasing
638:     y : (N,) array_like
639:         Input dimension of data points
640:     t : (M,) array_like
641:         interior knots of the spline.  Must be in ascending order and::
642: 
643:             bbox[0] < t[0] < ... < t[-1] < bbox[-1]
644: 
645:     w : (N,) array_like, optional
646:         weights for spline fitting.  Must be positive.  If None (default),
647:         weights are all equal.
648:     bbox : (2,) array_like, optional
649:         2-sequence specifying the boundary of the approximation interval. If
650:         None (default), ``bbox = [x[0], x[-1]]``.
651:     k : int, optional
652:         Degree of the smoothing spline.  Must be 1 <= `k` <= 5.
653:         Default is k=3, a cubic spline.
654:     ext : int or str, optional
655:         Controls the extrapolation mode for elements
656:         not in the interval defined by the knot sequence.
657: 
658:         * if ext=0 or 'extrapolate', return the extrapolated value.
659:         * if ext=1 or 'zeros', return 0
660:         * if ext=2 or 'raise', raise a ValueError
661:         * if ext=3 of 'const', return the boundary value.
662: 
663:         The default value is 0.
664: 
665:     check_finite : bool, optional
666:         Whether to check that the input arrays contain only finite numbers.
667:         Disabling may give a performance gain, but may result in problems
668:         (crashes, non-termination or non-sensical results) if the inputs
669:         do contain infinities or NaNs.
670:         Default is False.
671: 
672:     Raises
673:     ------
674:     ValueError
675:         If the interior knots do not satisfy the Schoenberg-Whitney conditions
676: 
677:     See Also
678:     --------
679:     UnivariateSpline : Superclass -- knots are specified by setting a
680:         smoothing condition
681:     InterpolatedUnivariateSpline : spline passing through all points
682:     splrep : An older, non object-oriented wrapping of FITPACK
683:     splev, sproot, splint, spalde
684:     BivariateSpline : A similar class for two-dimensional spline interpolation
685: 
686:     Notes
687:     -----
688:     The number of data points must be larger than the spline degree `k`.
689: 
690:     Knots `t` must satisfy the Schoenberg-Whitney conditions,
691:     i.e., there must be a subset of data points ``x[j]`` such that
692:     ``t[j] < x[j] < t[j+k+1]``, for ``j=0, 1,...,n-k-2``.
693: 
694:     Examples
695:     --------
696:     >>> from scipy.interpolate import LSQUnivariateSpline, UnivariateSpline
697:     >>> import matplotlib.pyplot as plt
698:     >>> x = np.linspace(-3, 3, 50)
699:     >>> y = np.exp(-x**2) + 0.1 * np.random.randn(50)
700: 
701:     Fit a smoothing spline with a pre-defined internal knots:
702: 
703:     >>> t = [-1, 0, 1]
704:     >>> spl = LSQUnivariateSpline(x, y, t)
705: 
706:     >>> xs = np.linspace(-3, 3, 1000)
707:     >>> plt.plot(x, y, 'ro', ms=5)
708:     >>> plt.plot(xs, spl(xs), 'g-', lw=3)
709:     >>> plt.show()
710: 
711:     Check the knot vector:
712: 
713:     >>> spl.get_knots()
714:     array([-3., -1., 0., 1., 3.])
715: 
716:     Constructing lsq spline using the knots from another spline:
717: 
718:     >>> x = np.arange(10)
719:     >>> s = UnivariateSpline(x, x, s=0)
720:     >>> s.get_knots()
721:     array([ 0.,  2.,  3.,  4.,  5.,  6.,  7.,  9.])
722:     >>> knt = s.get_knots()
723:     >>> s1 = LSQUnivariateSpline(x, x, knt[1:-1])    # Chop 1st and last knot
724:     >>> s1.get_knots()
725:     array([ 0.,  2.,  3.,  4.,  5.,  6.,  7.,  9.])
726: 
727:     '''
728: 
729:     def __init__(self, x, y, t, w=None, bbox=[None]*2, k=3,
730:                  ext=0, check_finite=False):
731: 
732:         if check_finite:
733:             w_finite = np.isfinite(w).all() if w is not None else True
734:             if (not np.isfinite(x).all() or not np.isfinite(y).all() or
735:                     not w_finite or not np.isfinite(t).all()):
736:                 raise ValueError("Input(s) must not contain NaNs or infs.")
737:         if not all(diff(x) > 0.0):
738:             raise ValueError('x must be strictly increasing')
739: 
740:         # _data == x,y,w,xb,xe,k,s,n,t,c,fp,fpint,nrdata,ier
741:         xb = bbox[0]
742:         xe = bbox[1]
743:         if xb is None:
744:             xb = x[0]
745:         if xe is None:
746:             xe = x[-1]
747:         t = concatenate(([xb]*(k+1), t, [xe]*(k+1)))
748:         n = len(t)
749:         if not alltrue(t[k+1:n-k]-t[k:n-k-1] > 0, axis=0):
750:             raise ValueError('Interior knots t must satisfy '
751:                              'Schoenberg-Whitney conditions')
752:         if not dfitpack.fpchec(x, t, k) == 0:
753:             raise ValueError(_fpchec_error_string)
754:         data = dfitpack.fpcurfm1(x, y, k, t, w=w, xb=xb, xe=xe)
755:         self._data = data[:-3] + (None, None, data[-1])
756:         self._reset_class()
757: 
758:         try:
759:             self.ext = _extrap_modes[ext]
760:         except KeyError:
761:             raise ValueError("Unknown extrapolation mode %s." % ext)
762: 
763: 
764: ################ Bivariate spline ####################
765: 
766: class _BivariateSplineBase(object):
767:     ''' Base class for Bivariate spline s(x,y) interpolation on the rectangle
768:     [xb,xe] x [yb, ye] calculated from a given set of data points
769:     (x,y,z).
770: 
771:     See Also
772:     --------
773:     bisplrep, bisplev : an older wrapping of FITPACK
774:     BivariateSpline :
775:         implementation of bivariate spline interpolation on a plane grid
776:     SphereBivariateSpline :
777:         implementation of bivariate spline interpolation on a spherical grid
778:     '''
779: 
780:     def get_residual(self):
781:         ''' Return weighted sum of squared residuals of the spline
782:         approximation: sum ((w[i]*(z[i]-s(x[i],y[i])))**2,axis=0)
783:         '''
784:         return self.fp
785: 
786:     def get_knots(self):
787:         ''' Return a tuple (tx,ty) where tx,ty contain knots positions
788:         of the spline with respect to x-, y-variable, respectively.
789:         The position of interior and additional knots are given as
790:         t[k+1:-k-1] and t[:k+1]=b, t[-k-1:]=e, respectively.
791:         '''
792:         return self.tck[:2]
793: 
794:     def get_coeffs(self):
795:         ''' Return spline coefficients.'''
796:         return self.tck[2]
797: 
798:     def __call__(self, x, y, dx=0, dy=0, grid=True):
799:         '''
800:         Evaluate the spline or its derivatives at given positions.
801: 
802:         Parameters
803:         ----------
804:         x, y : array_like
805:             Input coordinates.
806: 
807:             If `grid` is False, evaluate the spline at points ``(x[i],
808:             y[i]), i=0, ..., len(x)-1``.  Standard Numpy broadcasting
809:             is obeyed.
810: 
811:             If `grid` is True: evaluate spline at the grid points
812:             defined by the coordinate arrays x, y. The arrays must be
813:             sorted to increasing order.
814:         dx : int
815:             Order of x-derivative
816: 
817:             .. versionadded:: 0.14.0
818:         dy : int
819:             Order of y-derivative
820: 
821:             .. versionadded:: 0.14.0
822:         grid : bool
823:             Whether to evaluate the results on a grid spanned by the
824:             input arrays, or at points specified by the input arrays.
825: 
826:             .. versionadded:: 0.14.0
827: 
828:         '''
829:         x = np.asarray(x)
830:         y = np.asarray(y)
831: 
832:         tx, ty, c = self.tck[:3]
833:         kx, ky = self.degrees
834:         if grid:
835:             if x.size == 0 or y.size == 0:
836:                 return np.zeros((x.size, y.size), dtype=self.tck[2].dtype)
837: 
838:             if dx or dy:
839:                 z,ier = dfitpack.parder(tx,ty,c,kx,ky,dx,dy,x,y)
840:                 if not ier == 0:
841:                     raise ValueError("Error code returned by parder: %s" % ier)
842:             else:
843:                 z,ier = dfitpack.bispev(tx,ty,c,kx,ky,x,y)
844:                 if not ier == 0:
845:                     raise ValueError("Error code returned by bispev: %s" % ier)
846:         else:
847:             # standard Numpy broadcasting
848:             if x.shape != y.shape:
849:                 x, y = np.broadcast_arrays(x, y)
850: 
851:             shape = x.shape
852:             x = x.ravel()
853:             y = y.ravel()
854: 
855:             if x.size == 0 or y.size == 0:
856:                 return np.zeros(shape, dtype=self.tck[2].dtype)
857: 
858:             if dx or dy:
859:                 z,ier = dfitpack.pardeu(tx,ty,c,kx,ky,dx,dy,x,y)
860:                 if not ier == 0:
861:                     raise ValueError("Error code returned by pardeu: %s" % ier)
862:             else:
863:                 z,ier = dfitpack.bispeu(tx,ty,c,kx,ky,x,y)
864:                 if not ier == 0:
865:                     raise ValueError("Error code returned by bispeu: %s" % ier)
866: 
867:             z = z.reshape(shape)
868:         return z
869: 
870: 
871: _surfit_messages = {1:'''
872: The required storage space exceeds the available storage space: nxest
873: or nyest too small, or s too small.
874: The weighted least-squares spline corresponds to the current set of
875: knots.''',
876:                     2:'''
877: A theoretically impossible result was found during the iteration
878: process for finding a smoothing spline with fp = s: s too small or
879: badly chosen eps.
880: Weighted sum of squared residuals does not satisfy abs(fp-s)/s < tol.''',
881:                     3:'''
882: the maximal number of iterations maxit (set to 20 by the program)
883: allowed for finding a smoothing spline with fp=s has been reached:
884: s too small.
885: Weighted sum of squared residuals does not satisfy abs(fp-s)/s < tol.''',
886:                     4:'''
887: No more knots can be added because the number of b-spline coefficients
888: (nx-kx-1)*(ny-ky-1) already exceeds the number of data points m:
889: either s or m too small.
890: The weighted least-squares spline corresponds to the current set of
891: knots.''',
892:                     5:'''
893: No more knots can be added because the additional knot would (quasi)
894: coincide with an old one: s too small or too large a weight to an
895: inaccurate data point.
896: The weighted least-squares spline corresponds to the current set of
897: knots.''',
898:                     10:'''
899: Error on entry, no approximation returned. The following conditions
900: must hold:
901: xb<=x[i]<=xe, yb<=y[i]<=ye, w[i]>0, i=0..m-1
902: If iopt==-1, then
903:   xb<tx[kx+1]<tx[kx+2]<...<tx[nx-kx-2]<xe
904:   yb<ty[ky+1]<ty[ky+2]<...<ty[ny-ky-2]<ye''',
905:                     -3:'''
906: The coefficients of the spline returned have been computed as the
907: minimal norm least-squares solution of a (numerically) rank deficient
908: system (deficiency=%i). If deficiency is large, the results may be
909: inaccurate. Deficiency may strongly depend on the value of eps.'''
910:                     }
911: 
912: 
913: class BivariateSpline(_BivariateSplineBase):
914:     '''
915:     Base class for bivariate splines.
916: 
917:     This describes a spline ``s(x, y)`` of degrees ``kx`` and ``ky`` on
918:     the rectangle ``[xb, xe] * [yb, ye]`` calculated from a given set
919:     of data points ``(x, y, z)``.
920: 
921:     This class is meant to be subclassed, not instantiated directly.
922:     To construct these splines, call either `SmoothBivariateSpline` or
923:     `LSQBivariateSpline`.
924: 
925:     See Also
926:     --------
927:     UnivariateSpline : a similar class for univariate spline interpolation
928:     SmoothBivariateSpline :
929:         to create a BivariateSpline through the given points
930:     LSQBivariateSpline :
931:         to create a BivariateSpline using weighted least-squares fitting
932:     SphereBivariateSpline :
933:         bivariate spline interpolation in spherical cooridinates
934:     bisplrep : older wrapping of FITPACK
935:     bisplev : older wrapping of FITPACK
936: 
937:     '''
938: 
939:     @classmethod
940:     def _from_tck(cls, tck):
941:         '''Construct a spline object from given tck and degree'''
942:         self = cls.__new__(cls)
943:         if len(tck) != 5:
944:             raise ValueError("tck should be a 5 element tuple of tx, ty, c, kx, ky")
945:         self.tck = tck[:3]
946:         self.degrees = tck[3:]
947:         return self
948: 
949:     def ev(self, xi, yi, dx=0, dy=0):
950:         '''
951:         Evaluate the spline at points
952: 
953:         Returns the interpolated value at ``(xi[i], yi[i]),
954:         i=0,...,len(xi)-1``.
955: 
956:         Parameters
957:         ----------
958:         xi, yi : array_like
959:             Input coordinates. Standard Numpy broadcasting is obeyed.
960:         dx : int, optional
961:             Order of x-derivative
962: 
963:             .. versionadded:: 0.14.0
964:         dy : int, optional
965:             Order of y-derivative
966: 
967:             .. versionadded:: 0.14.0
968:         '''
969:         return self.__call__(xi, yi, dx=dx, dy=dy, grid=False)
970: 
971:     def integral(self, xa, xb, ya, yb):
972:         '''
973:         Evaluate the integral of the spline over area [xa,xb] x [ya,yb].
974: 
975:         Parameters
976:         ----------
977:         xa, xb : float
978:             The end-points of the x integration interval.
979:         ya, yb : float
980:             The end-points of the y integration interval.
981: 
982:         Returns
983:         -------
984:         integ : float
985:             The value of the resulting integral.
986: 
987:         '''
988:         tx,ty,c = self.tck[:3]
989:         kx,ky = self.degrees
990:         return dfitpack.dblint(tx,ty,c,kx,ky,xa,xb,ya,yb)
991: 
992: 
993: class SmoothBivariateSpline(BivariateSpline):
994:     '''
995:     Smooth bivariate spline approximation.
996: 
997:     Parameters
998:     ----------
999:     x, y, z : array_like
1000:         1-D sequences of data points (order is not important).
1001:     w : array_like, optional
1002:         Positive 1-D sequence of weights, of same length as `x`, `y` and `z`.
1003:     bbox : array_like, optional
1004:         Sequence of length 4 specifying the boundary of the rectangular
1005:         approximation domain.  By default,
1006:         ``bbox=[min(x,tx),max(x,tx), min(y,ty),max(y,ty)]``.
1007:     kx, ky : ints, optional
1008:         Degrees of the bivariate spline. Default is 3.
1009:     s : float, optional
1010:         Positive smoothing factor defined for estimation condition:
1011:         ``sum((w[i]*(z[i]-s(x[i], y[i])))**2, axis=0) <= s``
1012:         Default ``s=len(w)`` which should be a good value if ``1/w[i]`` is an
1013:         estimate of the standard deviation of ``z[i]``.
1014:     eps : float, optional
1015:         A threshold for determining the effective rank of an over-determined
1016:         linear system of equations. `eps` should have a value between 0 and 1,
1017:         the default is 1e-16.
1018: 
1019:     See Also
1020:     --------
1021:     bisplrep : an older wrapping of FITPACK
1022:     bisplev : an older wrapping of FITPACK
1023:     UnivariateSpline : a similar class for univariate spline interpolation
1024:     LSQUnivariateSpline : to create a BivariateSpline using weighted
1025: 
1026:     Notes
1027:     -----
1028:     The length of `x`, `y` and `z` should be at least ``(kx+1) * (ky+1)``.
1029: 
1030:     '''
1031: 
1032:     def __init__(self, x, y, z, w=None, bbox=[None] * 4, kx=3, ky=3, s=None,
1033:                  eps=None):
1034:         xb,xe,yb,ye = bbox
1035:         nx,tx,ny,ty,c,fp,wrk1,ier = dfitpack.surfit_smth(x,y,z,w,
1036:                                                          xb,xe,yb,ye,
1037:                                                          kx,ky,s=s,
1038:                                                          eps=eps,lwrk2=1)
1039:         if ier > 10:          # lwrk2 was to small, re-run
1040:             nx,tx,ny,ty,c,fp,wrk1,ier = dfitpack.surfit_smth(x,y,z,w,
1041:                                                          xb,xe,yb,ye,
1042:                                                          kx,ky,s=s,
1043:                                                          eps=eps,lwrk2=ier)
1044:         if ier in [0,-1,-2]:  # normal return
1045:             pass
1046:         else:
1047:             message = _surfit_messages.get(ier,'ier=%s' % (ier))
1048:             warnings.warn(message)
1049: 
1050:         self.fp = fp
1051:         self.tck = tx[:nx],ty[:ny],c[:(nx-kx-1)*(ny-ky-1)]
1052:         self.degrees = kx,ky
1053: 
1054: 
1055: class LSQBivariateSpline(BivariateSpline):
1056:     '''
1057:     Weighted least-squares bivariate spline approximation.
1058: 
1059:     Parameters
1060:     ----------
1061:     x, y, z : array_like
1062:         1-D sequences of data points (order is not important).
1063:     tx, ty : array_like
1064:         Strictly ordered 1-D sequences of knots coordinates.
1065:     w : array_like, optional
1066:         Positive 1-D array of weights, of the same length as `x`, `y` and `z`.
1067:     bbox : (4,) array_like, optional
1068:         Sequence of length 4 specifying the boundary of the rectangular
1069:         approximation domain.  By default,
1070:         ``bbox=[min(x,tx),max(x,tx), min(y,ty),max(y,ty)]``.
1071:     kx, ky : ints, optional
1072:         Degrees of the bivariate spline. Default is 3.
1073:     eps : float, optional
1074:         A threshold for determining the effective rank of an over-determined
1075:         linear system of equations. `eps` should have a value between 0 and 1,
1076:         the default is 1e-16.
1077: 
1078:     See Also
1079:     --------
1080:     bisplrep : an older wrapping of FITPACK
1081:     bisplev : an older wrapping of FITPACK
1082:     UnivariateSpline : a similar class for univariate spline interpolation
1083:     SmoothBivariateSpline : create a smoothing BivariateSpline
1084: 
1085:     Notes
1086:     -----
1087:     The length of `x`, `y` and `z` should be at least ``(kx+1) * (ky+1)``.
1088: 
1089:     '''
1090: 
1091:     def __init__(self, x, y, z, tx, ty, w=None, bbox=[None]*4, kx=3, ky=3,
1092:                  eps=None):
1093:         nx = 2*kx+2+len(tx)
1094:         ny = 2*ky+2+len(ty)
1095:         tx1 = zeros((nx,),float)
1096:         ty1 = zeros((ny,),float)
1097:         tx1[kx+1:nx-kx-1] = tx
1098:         ty1[ky+1:ny-ky-1] = ty
1099: 
1100:         xb,xe,yb,ye = bbox
1101:         tx1,ty1,c,fp,ier = dfitpack.surfit_lsq(x,y,z,tx1,ty1,w,
1102:                                                xb,xe,yb,ye,
1103:                                                kx,ky,eps,lwrk2=1)
1104:         if ier > 10:
1105:             tx1,ty1,c,fp,ier = dfitpack.surfit_lsq(x,y,z,tx1,ty1,w,
1106:                                                    xb,xe,yb,ye,
1107:                                                    kx,ky,eps,lwrk2=ier)
1108:         if ier in [0,-1,-2]:  # normal return
1109:             pass
1110:         else:
1111:             if ier < -2:
1112:                 deficiency = (nx-kx-1)*(ny-ky-1)+ier
1113:                 message = _surfit_messages.get(-3) % (deficiency)
1114:             else:
1115:                 message = _surfit_messages.get(ier, 'ier=%s' % (ier))
1116:             warnings.warn(message)
1117:         self.fp = fp
1118:         self.tck = tx1, ty1, c
1119:         self.degrees = kx, ky
1120: 
1121: 
1122: class RectBivariateSpline(BivariateSpline):
1123:     '''
1124:     Bivariate spline approximation over a rectangular mesh.
1125: 
1126:     Can be used for both smoothing and interpolating data.
1127: 
1128:     Parameters
1129:     ----------
1130:     x,y : array_like
1131:         1-D arrays of coordinates in strictly ascending order.
1132:     z : array_like
1133:         2-D array of data with shape (x.size,y.size).
1134:     bbox : array_like, optional
1135:         Sequence of length 4 specifying the boundary of the rectangular
1136:         approximation domain.  By default,
1137:         ``bbox=[min(x,tx),max(x,tx), min(y,ty),max(y,ty)]``.
1138:     kx, ky : ints, optional
1139:         Degrees of the bivariate spline. Default is 3.
1140:     s : float, optional
1141:         Positive smoothing factor defined for estimation condition:
1142:         ``sum((w[i]*(z[i]-s(x[i], y[i])))**2, axis=0) <= s``
1143:         Default is ``s=0``, which is for interpolation.
1144: 
1145:     See Also
1146:     --------
1147:     SmoothBivariateSpline : a smoothing bivariate spline for scattered data
1148:     bisplrep : an older wrapping of FITPACK
1149:     bisplev : an older wrapping of FITPACK
1150:     UnivariateSpline : a similar class for univariate spline interpolation
1151: 
1152:     '''
1153: 
1154:     def __init__(self, x, y, z, bbox=[None] * 4, kx=3, ky=3, s=0):
1155:         x, y = ravel(x), ravel(y)
1156:         if not all(diff(x) > 0.0):
1157:             raise ValueError('x must be strictly increasing')
1158:         if not all(diff(y) > 0.0):
1159:             raise ValueError('y must be strictly increasing')
1160:         if not ((x.min() == x[0]) and (x.max() == x[-1])):
1161:             raise ValueError('x must be strictly ascending')
1162:         if not ((y.min() == y[0]) and (y.max() == y[-1])):
1163:             raise ValueError('y must be strictly ascending')
1164:         if not x.size == z.shape[0]:
1165:             raise ValueError('x dimension of z must have same number of '
1166:                             'elements as x')
1167:         if not y.size == z.shape[1]:
1168:             raise ValueError('y dimension of z must have same number of '
1169:                              'elements as y')
1170:         z = ravel(z)
1171:         xb, xe, yb, ye = bbox
1172:         nx, tx, ny, ty, c, fp, ier = dfitpack.regrid_smth(x, y, z, xb, xe, yb,
1173:                                                           ye, kx, ky, s)
1174: 
1175:         if ier not in [0, -1, -2]:
1176:             msg = _surfit_messages.get(ier, 'ier=%s' % (ier))
1177:             raise ValueError(msg)
1178: 
1179:         self.fp = fp
1180:         self.tck = tx[:nx], ty[:ny], c[:(nx - kx - 1) * (ny - ky - 1)]
1181:         self.degrees = kx, ky
1182: 
1183: 
1184: _spherefit_messages = _surfit_messages.copy()
1185: _spherefit_messages[10] = '''
1186: ERROR. On entry, the input data are controlled on validity. The following
1187:        restrictions must be satisfied:
1188:             -1<=iopt<=1,  m>=2, ntest>=8 ,npest >=8, 0<eps<1,
1189:             0<=teta(i)<=pi, 0<=phi(i)<=2*pi, w(i)>0, i=1,...,m
1190:             lwrk1 >= 185+52*v+10*u+14*u*v+8*(u-1)*v**2+8*m
1191:             kwrk >= m+(ntest-7)*(npest-7)
1192:             if iopt=-1: 8<=nt<=ntest , 9<=np<=npest
1193:                         0<tt(5)<tt(6)<...<tt(nt-4)<pi
1194:                         0<tp(5)<tp(6)<...<tp(np-4)<2*pi
1195:             if iopt>=0: s>=0
1196:             if one of these conditions is found to be violated,control
1197:             is immediately repassed to the calling program. in that
1198:             case there is no approximation returned.'''
1199: _spherefit_messages[-3] = '''
1200: WARNING. The coefficients of the spline returned have been computed as the
1201:          minimal norm least-squares solution of a (numerically) rank
1202:          deficient system (deficiency=%i, rank=%i). Especially if the rank
1203:          deficiency, which is computed by 6+(nt-8)*(np-7)+ier, is large,
1204:          the results may be inaccurate. They could also seriously depend on
1205:          the value of eps.'''
1206: 
1207: 
1208: class SphereBivariateSpline(_BivariateSplineBase):
1209:     '''
1210:     Bivariate spline s(x,y) of degrees 3 on a sphere, calculated from a
1211:     given set of data points (theta,phi,r).
1212: 
1213:     .. versionadded:: 0.11.0
1214: 
1215:     See Also
1216:     --------
1217:     bisplrep, bisplev : an older wrapping of FITPACK
1218:     UnivariateSpline : a similar class for univariate spline interpolation
1219:     SmoothUnivariateSpline :
1220:         to create a BivariateSpline through the given points
1221:     LSQUnivariateSpline :
1222:         to create a BivariateSpline using weighted least-squares fitting
1223:     '''
1224: 
1225:     def __call__(self, theta, phi, dtheta=0, dphi=0, grid=True):
1226:         '''
1227:         Evaluate the spline or its derivatives at given positions.
1228: 
1229:         Parameters
1230:         ----------
1231:         theta, phi : array_like
1232:             Input coordinates.
1233: 
1234:             If `grid` is False, evaluate the spline at points
1235:             ``(theta[i], phi[i]), i=0, ..., len(x)-1``.  Standard
1236:             Numpy broadcasting is obeyed.
1237: 
1238:             If `grid` is True: evaluate spline at the grid points
1239:             defined by the coordinate arrays theta, phi. The arrays
1240:             must be sorted to increasing order.
1241:         dtheta : int, optional
1242:             Order of theta-derivative
1243: 
1244:             .. versionadded:: 0.14.0
1245:         dphi : int
1246:             Order of phi-derivative
1247: 
1248:             .. versionadded:: 0.14.0
1249:         grid : bool
1250:             Whether to evaluate the results on a grid spanned by the
1251:             input arrays, or at points specified by the input arrays.
1252: 
1253:             .. versionadded:: 0.14.0
1254: 
1255:         '''
1256:         theta = np.asarray(theta)
1257:         phi = np.asarray(phi)
1258: 
1259:         if theta.size > 0 and (theta.min() < 0. or theta.max() > np.pi):
1260:             raise ValueError("requested theta out of bounds.")
1261:         if phi.size > 0 and (phi.min() < 0. or phi.max() > 2. * np.pi):
1262:             raise ValueError("requested phi out of bounds.")
1263: 
1264:         return _BivariateSplineBase.__call__(self, theta, phi,
1265:                                              dx=dtheta, dy=dphi, grid=grid)
1266: 
1267:     def ev(self, theta, phi, dtheta=0, dphi=0):
1268:         '''
1269:         Evaluate the spline at points
1270: 
1271:         Returns the interpolated value at ``(theta[i], phi[i]),
1272:         i=0,...,len(theta)-1``.
1273: 
1274:         Parameters
1275:         ----------
1276:         theta, phi : array_like
1277:             Input coordinates. Standard Numpy broadcasting is obeyed.
1278:         dtheta : int, optional
1279:             Order of theta-derivative
1280: 
1281:             .. versionadded:: 0.14.0
1282:         dphi : int, optional
1283:             Order of phi-derivative
1284: 
1285:             .. versionadded:: 0.14.0
1286:         '''
1287:         return self.__call__(theta, phi, dtheta=dtheta, dphi=dphi, grid=False)
1288: 
1289: 
1290: class SmoothSphereBivariateSpline(SphereBivariateSpline):
1291:     '''
1292:     Smooth bivariate spline approximation in spherical coordinates.
1293: 
1294:     .. versionadded:: 0.11.0
1295: 
1296:     Parameters
1297:     ----------
1298:     theta, phi, r : array_like
1299:         1-D sequences of data points (order is not important). Coordinates
1300:         must be given in radians. Theta must lie within the interval (0, pi),
1301:         and phi must lie within the interval (0, 2pi).
1302:     w : array_like, optional
1303:         Positive 1-D sequence of weights.
1304:     s : float, optional
1305:         Positive smoothing factor defined for estimation condition:
1306:         ``sum((w(i)*(r(i) - s(theta(i), phi(i))))**2, axis=0) <= s``
1307:         Default ``s=len(w)`` which should be a good value if 1/w[i] is an
1308:         estimate of the standard deviation of r[i].
1309:     eps : float, optional
1310:         A threshold for determining the effective rank of an over-determined
1311:         linear system of equations. `eps` should have a value between 0 and 1,
1312:         the default is 1e-16.
1313: 
1314:     Notes
1315:     -----
1316:     For more information, see the FITPACK_ site about this function.
1317: 
1318:     .. _FITPACK: http://www.netlib.org/dierckx/sphere.f
1319: 
1320:     Examples
1321:     --------
1322:     Suppose we have global data on a coarse grid (the input data does not
1323:     have to be on a grid):
1324: 
1325:     >>> theta = np.linspace(0., np.pi, 7)
1326:     >>> phi = np.linspace(0., 2*np.pi, 9)
1327:     >>> data = np.empty((theta.shape[0], phi.shape[0]))
1328:     >>> data[:,0], data[0,:], data[-1,:] = 0., 0., 0.
1329:     >>> data[1:-1,1], data[1:-1,-1] = 1., 1.
1330:     >>> data[1,1:-1], data[-2,1:-1] = 1., 1.
1331:     >>> data[2:-2,2], data[2:-2,-2] = 2., 2.
1332:     >>> data[2,2:-2], data[-3,2:-2] = 2., 2.
1333:     >>> data[3,3:-2] = 3.
1334:     >>> data = np.roll(data, 4, 1)
1335: 
1336:     We need to set up the interpolator object
1337: 
1338:     >>> lats, lons = np.meshgrid(theta, phi)
1339:     >>> from scipy.interpolate import SmoothSphereBivariateSpline
1340:     >>> lut = SmoothSphereBivariateSpline(lats.ravel(), lons.ravel(),
1341:     ...                                   data.T.ravel(), s=3.5)
1342: 
1343:     As a first test, we'll see what the algorithm returns when run on the
1344:     input coordinates
1345: 
1346:     >>> data_orig = lut(theta, phi)
1347: 
1348:     Finally we interpolate the data to a finer grid
1349: 
1350:     >>> fine_lats = np.linspace(0., np.pi, 70)
1351:     >>> fine_lons = np.linspace(0., 2 * np.pi, 90)
1352: 
1353:     >>> data_smth = lut(fine_lats, fine_lons)
1354: 
1355:     >>> import matplotlib.pyplot as plt
1356:     >>> fig = plt.figure()
1357:     >>> ax1 = fig.add_subplot(131)
1358:     >>> ax1.imshow(data, interpolation='nearest')
1359:     >>> ax2 = fig.add_subplot(132)
1360:     >>> ax2.imshow(data_orig, interpolation='nearest')
1361:     >>> ax3 = fig.add_subplot(133)
1362:     >>> ax3.imshow(data_smth, interpolation='nearest')
1363:     >>> plt.show()
1364: 
1365:     '''
1366: 
1367:     def __init__(self, theta, phi, r, w=None, s=0., eps=1E-16):
1368:         if np.issubclass_(w, float):
1369:             w = ones(len(theta)) * w
1370:         nt_, tt_, np_, tp_, c, fp, ier = dfitpack.spherfit_smth(theta, phi,
1371:                                                                 r, w=w, s=s,
1372:                                                                 eps=eps)
1373:         if ier not in [0, -1, -2]:
1374:             message = _spherefit_messages.get(ier, 'ier=%s' % (ier))
1375:             raise ValueError(message)
1376: 
1377:         self.fp = fp
1378:         self.tck = tt_[:nt_], tp_[:np_], c[:(nt_ - 4) * (np_ - 4)]
1379:         self.degrees = (3, 3)
1380: 
1381: 
1382: class LSQSphereBivariateSpline(SphereBivariateSpline):
1383:     '''
1384:     Weighted least-squares bivariate spline approximation in spherical
1385:     coordinates.
1386: 
1387:     .. versionadded:: 0.11.0
1388: 
1389:     Parameters
1390:     ----------
1391:     theta, phi, r : array_like
1392:         1-D sequences of data points (order is not important). Coordinates
1393:         must be given in radians. Theta must lie within the interval (0, pi),
1394:         and phi must lie within the interval (0, 2pi).
1395:     tt, tp : array_like
1396:         Strictly ordered 1-D sequences of knots coordinates.
1397:         Coordinates must satisfy ``0 < tt[i] < pi``, ``0 < tp[i] < 2*pi``.
1398:     w : array_like, optional
1399:         Positive 1-D sequence of weights, of the same length as `theta`, `phi`
1400:         and `r`.
1401:     eps : float, optional
1402:         A threshold for determining the effective rank of an over-determined
1403:         linear system of equations. `eps` should have a value between 0 and 1,
1404:         the default is 1e-16.
1405: 
1406:     Notes
1407:     -----
1408:     For more information, see the FITPACK_ site about this function.
1409: 
1410:     .. _FITPACK: http://www.netlib.org/dierckx/sphere.f
1411: 
1412:     Examples
1413:     --------
1414:     Suppose we have global data on a coarse grid (the input data does not
1415:     have to be on a grid):
1416: 
1417:     >>> theta = np.linspace(0., np.pi, 7)
1418:     >>> phi = np.linspace(0., 2*np.pi, 9)
1419:     >>> data = np.empty((theta.shape[0], phi.shape[0]))
1420:     >>> data[:,0], data[0,:], data[-1,:] = 0., 0., 0.
1421:     >>> data[1:-1,1], data[1:-1,-1] = 1., 1.
1422:     >>> data[1,1:-1], data[-2,1:-1] = 1., 1.
1423:     >>> data[2:-2,2], data[2:-2,-2] = 2., 2.
1424:     >>> data[2,2:-2], data[-3,2:-2] = 2., 2.
1425:     >>> data[3,3:-2] = 3.
1426:     >>> data = np.roll(data, 4, 1)
1427: 
1428:     We need to set up the interpolator object. Here, we must also specify the
1429:     coordinates of the knots to use.
1430: 
1431:     >>> lats, lons = np.meshgrid(theta, phi)
1432:     >>> knotst, knotsp = theta.copy(), phi.copy()
1433:     >>> knotst[0] += .0001
1434:     >>> knotst[-1] -= .0001
1435:     >>> knotsp[0] += .0001
1436:     >>> knotsp[-1] -= .0001
1437:     >>> from scipy.interpolate import LSQSphereBivariateSpline
1438:     >>> lut = LSQSphereBivariateSpline(lats.ravel(), lons.ravel(),
1439:     ...                                data.T.ravel(), knotst, knotsp)
1440: 
1441:     As a first test, we'll see what the algorithm returns when run on the
1442:     input coordinates
1443: 
1444:     >>> data_orig = lut(theta, phi)
1445: 
1446:     Finally we interpolate the data to a finer grid
1447: 
1448:     >>> fine_lats = np.linspace(0., np.pi, 70)
1449:     >>> fine_lons = np.linspace(0., 2*np.pi, 90)
1450: 
1451:     >>> data_lsq = lut(fine_lats, fine_lons)
1452: 
1453:     >>> import matplotlib.pyplot as plt
1454:     >>> fig = plt.figure()
1455:     >>> ax1 = fig.add_subplot(131)
1456:     >>> ax1.imshow(data, interpolation='nearest')
1457:     >>> ax2 = fig.add_subplot(132)
1458:     >>> ax2.imshow(data_orig, interpolation='nearest')
1459:     >>> ax3 = fig.add_subplot(133)
1460:     >>> ax3.imshow(data_lsq, interpolation='nearest')
1461:     >>> plt.show()
1462: 
1463:     '''
1464: 
1465:     def __init__(self, theta, phi, r, tt, tp, w=None, eps=1E-16):
1466:         if np.issubclass_(w, float):
1467:             w = ones(len(theta)) * w
1468:         nt_, np_ = 8 + len(tt), 8 + len(tp)
1469:         tt_, tp_ = zeros((nt_,), float), zeros((np_,), float)
1470:         tt_[4:-4], tp_[4:-4] = tt, tp
1471:         tt_[-4:], tp_[-4:] = np.pi, 2. * np.pi
1472:         tt_, tp_, c, fp, ier = dfitpack.spherfit_lsq(theta, phi, r, tt_, tp_,
1473:                                                      w=w, eps=eps)
1474:         if ier < -2:
1475:             deficiency = 6 + (nt_ - 8) * (np_ - 7) + ier
1476:             message = _spherefit_messages.get(-3) % (deficiency, -ier)
1477:             warnings.warn(message)
1478:         elif ier not in [0, -1, -2]:
1479:             message = _spherefit_messages.get(ier, 'ier=%s' % (ier))
1480:             raise ValueError(message)
1481: 
1482:         self.fp = fp
1483:         self.tck = tt_, tp_, c
1484:         self.degrees = (3, 3)
1485: 
1486: 
1487: _spfit_messages = _surfit_messages.copy()
1488: _spfit_messages[10] = '''
1489: ERROR: on entry, the input data are controlled on validity
1490:        the following restrictions must be satisfied.
1491:           -1<=iopt(1)<=1, 0<=iopt(2)<=1, 0<=iopt(3)<=1,
1492:           -1<=ider(1)<=1, 0<=ider(2)<=1, ider(2)=0 if iopt(2)=0.
1493:           -1<=ider(3)<=1, 0<=ider(4)<=1, ider(4)=0 if iopt(3)=0.
1494:           mu >= mumin (see above), mv >= 4, nuest >=8, nvest >= 8,
1495:           kwrk>=5+mu+mv+nuest+nvest,
1496:           lwrk >= 12+nuest*(mv+nvest+3)+nvest*24+4*mu+8*mv+max(nuest,mv+nvest)
1497:           0< u(i-1)<u(i)< pi,i=2,..,mu,
1498:           -pi<=v(1)< pi, v(1)<v(i-1)<v(i)<v(1)+2*pi, i=3,...,mv
1499:           if iopt(1)=-1: 8<=nu<=min(nuest,mu+6+iopt(2)+iopt(3))
1500:                          0<tu(5)<tu(6)<...<tu(nu-4)< pi
1501:                          8<=nv<=min(nvest,mv+7)
1502:                          v(1)<tv(5)<tv(6)<...<tv(nv-4)<v(1)+2*pi
1503:                          the schoenberg-whitney conditions, i.e. there must be
1504:                          subset of grid co-ordinates uu(p) and vv(q) such that
1505:                             tu(p) < uu(p) < tu(p+4) ,p=1,...,nu-4
1506:                             (iopt(2)=1 and iopt(3)=1 also count for a uu-value
1507:                             tv(q) < vv(q) < tv(q+4) ,q=1,...,nv-4
1508:                             (vv(q) is either a value v(j) or v(j)+2*pi)
1509:           if iopt(1)>=0: s>=0
1510:           if s=0: nuest>=mu+6+iopt(2)+iopt(3), nvest>=mv+7
1511:        if one of these conditions is found to be violated,control is
1512:        immediately repassed to the calling program. in that case there is no
1513:        approximation returned.'''
1514: 
1515: 
1516: class RectSphereBivariateSpline(SphereBivariateSpline):
1517:     '''
1518:     Bivariate spline approximation over a rectangular mesh on a sphere.
1519: 
1520:     Can be used for smoothing data.
1521: 
1522:     .. versionadded:: 0.11.0
1523: 
1524:     Parameters
1525:     ----------
1526:     u : array_like
1527:         1-D array of latitude coordinates in strictly ascending order.
1528:         Coordinates must be given in radians and lie within the interval
1529:         (0, pi).
1530:     v : array_like
1531:         1-D array of longitude coordinates in strictly ascending order.
1532:         Coordinates must be given in radians. First element (v[0]) must lie
1533:         within the interval [-pi, pi). Last element (v[-1]) must satisfy
1534:         v[-1] <= v[0] + 2*pi.
1535:     r : array_like
1536:         2-D array of data with shape ``(u.size, v.size)``.
1537:     s : float, optional
1538:         Positive smoothing factor defined for estimation condition
1539:         (``s=0`` is for interpolation).
1540:     pole_continuity : bool or (bool, bool), optional
1541:         Order of continuity at the poles ``u=0`` (``pole_continuity[0]``) and
1542:         ``u=pi`` (``pole_continuity[1]``).  The order of continuity at the pole
1543:         will be 1 or 0 when this is True or False, respectively.
1544:         Defaults to False.
1545:     pole_values : float or (float, float), optional
1546:         Data values at the poles ``u=0`` and ``u=pi``.  Either the whole
1547:         parameter or each individual element can be None.  Defaults to None.
1548:     pole_exact : bool or (bool, bool), optional
1549:         Data value exactness at the poles ``u=0`` and ``u=pi``.  If True, the
1550:         value is considered to be the right function value, and it will be
1551:         fitted exactly. If False, the value will be considered to be a data
1552:         value just like the other data values.  Defaults to False.
1553:     pole_flat : bool or (bool, bool), optional
1554:         For the poles at ``u=0`` and ``u=pi``, specify whether or not the
1555:         approximation has vanishing derivatives.  Defaults to False.
1556: 
1557:     See Also
1558:     --------
1559:     RectBivariateSpline : bivariate spline approximation over a rectangular
1560:         mesh
1561: 
1562:     Notes
1563:     -----
1564:     Currently, only the smoothing spline approximation (``iopt[0] = 0`` and
1565:     ``iopt[0] = 1`` in the FITPACK routine) is supported.  The exact
1566:     least-squares spline approximation is not implemented yet.
1567: 
1568:     When actually performing the interpolation, the requested `v` values must
1569:     lie within the same length 2pi interval that the original `v` values were
1570:     chosen from.
1571: 
1572:     For more information, see the FITPACK_ site about this function.
1573: 
1574:     .. _FITPACK: http://www.netlib.org/dierckx/spgrid.f
1575: 
1576:     Examples
1577:     --------
1578:     Suppose we have global data on a coarse grid
1579: 
1580:     >>> lats = np.linspace(10, 170, 9) * np.pi / 180.
1581:     >>> lons = np.linspace(0, 350, 18) * np.pi / 180.
1582:     >>> data = np.dot(np.atleast_2d(90. - np.linspace(-80., 80., 18)).T,
1583:     ...               np.atleast_2d(180. - np.abs(np.linspace(0., 350., 9)))).T
1584: 
1585:     We want to interpolate it to a global one-degree grid
1586: 
1587:     >>> new_lats = np.linspace(1, 180, 180) * np.pi / 180
1588:     >>> new_lons = np.linspace(1, 360, 360) * np.pi / 180
1589:     >>> new_lats, new_lons = np.meshgrid(new_lats, new_lons)
1590: 
1591:     We need to set up the interpolator object
1592: 
1593:     >>> from scipy.interpolate import RectSphereBivariateSpline
1594:     >>> lut = RectSphereBivariateSpline(lats, lons, data)
1595: 
1596:     Finally we interpolate the data.  The `RectSphereBivariateSpline` object
1597:     only takes 1-D arrays as input, therefore we need to do some reshaping.
1598: 
1599:     >>> data_interp = lut.ev(new_lats.ravel(),
1600:     ...                      new_lons.ravel()).reshape((360, 180)).T
1601: 
1602:     Looking at the original and the interpolated data, one can see that the
1603:     interpolant reproduces the original data very well:
1604: 
1605:     >>> import matplotlib.pyplot as plt
1606:     >>> fig = plt.figure()
1607:     >>> ax1 = fig.add_subplot(211)
1608:     >>> ax1.imshow(data, interpolation='nearest')
1609:     >>> ax2 = fig.add_subplot(212)
1610:     >>> ax2.imshow(data_interp, interpolation='nearest')
1611:     >>> plt.show()
1612: 
1613:     Chosing the optimal value of ``s`` can be a delicate task. Recommended
1614:     values for ``s`` depend on the accuracy of the data values.  If the user
1615:     has an idea of the statistical errors on the data, she can also find a
1616:     proper estimate for ``s``. By assuming that, if she specifies the
1617:     right ``s``, the interpolator will use a spline ``f(u,v)`` which exactly
1618:     reproduces the function underlying the data, she can evaluate
1619:     ``sum((r(i,j)-s(u(i),v(j)))**2)`` to find a good estimate for this ``s``.
1620:     For example, if she knows that the statistical errors on her
1621:     ``r(i,j)``-values are not greater than 0.1, she may expect that a good
1622:     ``s`` should have a value not larger than ``u.size * v.size * (0.1)**2``.
1623: 
1624:     If nothing is known about the statistical error in ``r(i,j)``, ``s`` must
1625:     be determined by trial and error.  The best is then to start with a very
1626:     large value of ``s`` (to determine the least-squares polynomial and the
1627:     corresponding upper bound ``fp0`` for ``s``) and then to progressively
1628:     decrease the value of ``s`` (say by a factor 10 in the beginning, i.e.
1629:     ``s = fp0 / 10, fp0 / 100, ...``  and more carefully as the approximation
1630:     shows more detail) to obtain closer fits.
1631: 
1632:     The interpolation results for different values of ``s`` give some insight
1633:     into this process:
1634: 
1635:     >>> fig2 = plt.figure()
1636:     >>> s = [3e9, 2e9, 1e9, 1e8]
1637:     >>> for ii in range(len(s)):
1638:     ...     lut = RectSphereBivariateSpline(lats, lons, data, s=s[ii])
1639:     ...     data_interp = lut.ev(new_lats.ravel(),
1640:     ...                          new_lons.ravel()).reshape((360, 180)).T
1641:     ...     ax = fig2.add_subplot(2, 2, ii+1)
1642:     ...     ax.imshow(data_interp, interpolation='nearest')
1643:     ...     ax.set_title("s = %g" % s[ii])
1644:     >>> plt.show()
1645: 
1646:     '''
1647: 
1648:     def __init__(self, u, v, r, s=0., pole_continuity=False, pole_values=None,
1649:                  pole_exact=False, pole_flat=False):
1650:         iopt = np.array([0, 0, 0], dtype=int)
1651:         ider = np.array([-1, 0, -1, 0], dtype=int)
1652:         if pole_values is None:
1653:             pole_values = (None, None)
1654:         elif isinstance(pole_values, (float, np.float32, np.float64)):
1655:             pole_values = (pole_values, pole_values)
1656:         if isinstance(pole_continuity, bool):
1657:             pole_continuity = (pole_continuity, pole_continuity)
1658:         if isinstance(pole_exact, bool):
1659:             pole_exact = (pole_exact, pole_exact)
1660:         if isinstance(pole_flat, bool):
1661:             pole_flat = (pole_flat, pole_flat)
1662: 
1663:         r0, r1 = pole_values
1664:         iopt[1:] = pole_continuity
1665:         if r0 is None:
1666:             ider[0] = -1
1667:         else:
1668:             ider[0] = pole_exact[0]
1669: 
1670:         if r1 is None:
1671:             ider[2] = -1
1672:         else:
1673:             ider[2] = pole_exact[1]
1674: 
1675:         ider[1], ider[3] = pole_flat
1676: 
1677:         u, v = np.ravel(u), np.ravel(v)
1678:         if not np.all(np.diff(u) > 0.0):
1679:             raise ValueError('u must be strictly increasing')
1680:         if not np.all(np.diff(v) > 0.0):
1681:             raise ValueError('v must be strictly increasing')
1682: 
1683:         if not u.size == r.shape[0]:
1684:             raise ValueError('u dimension of r must have same number of '
1685:                              'elements as u')
1686:         if not v.size == r.shape[1]:
1687:             raise ValueError('v dimension of r must have same number of '
1688:                              'elements as v')
1689: 
1690:         if pole_continuity[1] is False and pole_flat[1] is True:
1691:             raise ValueError('if pole_continuity is False, so must be '
1692:                              'pole_flat')
1693:         if pole_continuity[0] is False and pole_flat[0] is True:
1694:             raise ValueError('if pole_continuity is False, so must be '
1695:                              'pole_flat')
1696: 
1697:         r = np.ravel(r)
1698:         nu, tu, nv, tv, c, fp, ier = dfitpack.regrid_smth_spher(iopt, ider,
1699:                                        u.copy(), v.copy(), r.copy(), r0, r1, s)
1700: 
1701:         if ier not in [0, -1, -2]:
1702:             msg = _spfit_messages.get(ier, 'ier=%s' % (ier))
1703:             raise ValueError(msg)
1704: 
1705:         self.fp = fp
1706:         self.tck = tu[:nu], tv[:nv], c[:(nu - 4) * (nv-4)]
1707:         self.degrees = (3, 3)
1708: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_59644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, (-1)), 'str', '\nfitpack --- curve and surface fitting with splines\n\nfitpack is based on a collection of Fortran routines DIERCKX\nby P. Dierckx (see http://www.netlib.org/dierckx/) transformed\nto double routines by Pearu Peterson.\n')

# Assigning a List to a Name (line 11):

# Assigning a List to a Name (line 11):
__all__ = ['UnivariateSpline', 'InterpolatedUnivariateSpline', 'LSQUnivariateSpline', 'BivariateSpline', 'LSQBivariateSpline', 'SmoothBivariateSpline', 'LSQSphereBivariateSpline', 'SmoothSphereBivariateSpline', 'RectBivariateSpline', 'RectSphereBivariateSpline']
module_type_store.set_exportable_members(['UnivariateSpline', 'InterpolatedUnivariateSpline', 'LSQUnivariateSpline', 'BivariateSpline', 'LSQBivariateSpline', 'SmoothBivariateSpline', 'LSQSphereBivariateSpline', 'SmoothSphereBivariateSpline', 'RectBivariateSpline', 'RectSphereBivariateSpline'])

# Obtaining an instance of the builtin type 'list' (line 11)
list_59645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 10), 'list')
# Adding type elements to the builtin type 'list' instance (line 11)
# Adding element type (line 11)
str_59646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 12, 4), 'str', 'UnivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59646)
# Adding element type (line 11)
str_59647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 4), 'str', 'InterpolatedUnivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59647)
# Adding element type (line 11)
str_59648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 14, 4), 'str', 'LSQUnivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59648)
# Adding element type (line 11)
str_59649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 15, 4), 'str', 'BivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59649)
# Adding element type (line 11)
str_59650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 16, 4), 'str', 'LSQBivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59650)
# Adding element type (line 11)
str_59651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 17, 4), 'str', 'SmoothBivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59651)
# Adding element type (line 11)
str_59652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 18, 4), 'str', 'LSQSphereBivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59652)
# Adding element type (line 11)
str_59653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 19, 4), 'str', 'SmoothSphereBivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59653)
# Adding element type (line 11)
str_59654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 4), 'str', 'RectBivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59654)
# Adding element type (line 11)
str_59655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 21, 4), 'str', 'RectSphereBivariateSpline')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 11, 10), list_59645, str_59655)

# Assigning a type to the variable '__all__' (line 11)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 11, 0), '__all__', list_59645)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 24, 0))

# 'import warnings' statement (line 24)
import warnings

import_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'warnings', warnings, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 26, 0))

# 'from numpy import zeros, concatenate, alltrue, ravel, all, diff, array, ones' statement (line 26)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/')
import_59656 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'numpy')

if (type(import_59656) is not StypyTypeError):

    if (import_59656 != 'pyd_module'):
        __import__(import_59656)
        sys_modules_59657 = sys.modules[import_59656]
        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'numpy', sys_modules_59657.module_type_store, module_type_store, ['zeros', 'concatenate', 'alltrue', 'ravel', 'all', 'diff', 'array', 'ones'])
        nest_module(stypy.reporting.localization.Localization(__file__, 26, 0), __file__, sys_modules_59657, sys_modules_59657.module_type_store, module_type_store)
    else:
        from numpy import zeros, concatenate, alltrue, ravel, all, diff, array, ones

        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'numpy', None, module_type_store, ['zeros', 'concatenate', 'alltrue', 'ravel', 'all', 'diff', 'array', 'ones'], [zeros, concatenate, alltrue, ravel, all, diff, array, ones])

else:
    # Assigning a type to the variable 'numpy' (line 26)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 0), 'numpy', import_59656)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 27, 0))

# 'import numpy' statement (line 27)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/')
import_59658 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'numpy')

if (type(import_59658) is not StypyTypeError):

    if (import_59658 != 'pyd_module'):
        __import__(import_59658)
        sys_modules_59659 = sys.modules[import_59658]
        import_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'np', sys_modules_59659.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 27)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 0), 'numpy', import_59658)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 29, 0))

# 'from scipy.interpolate import fitpack' statement (line 29)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/')
import_59660 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'scipy.interpolate')

if (type(import_59660) is not StypyTypeError):

    if (import_59660 != 'pyd_module'):
        __import__(import_59660)
        sys_modules_59661 = sys.modules[import_59660]
        import_from_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'scipy.interpolate', sys_modules_59661.module_type_store, module_type_store, ['fitpack'])
        nest_module(stypy.reporting.localization.Localization(__file__, 29, 0), __file__, sys_modules_59661, sys_modules_59661.module_type_store, module_type_store)
    else:
        from scipy.interpolate import fitpack

        import_from_module(stypy.reporting.localization.Localization(__file__, 29, 0), 'scipy.interpolate', None, module_type_store, ['fitpack'], [fitpack])

else:
    # Assigning a type to the variable 'scipy.interpolate' (line 29)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 0), 'scipy.interpolate', import_59660)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 30, 0))

# 'from scipy.interpolate import dfitpack' statement (line 30)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/interpolate/')
import_59662 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'scipy.interpolate')

if (type(import_59662) is not StypyTypeError):

    if (import_59662 != 'pyd_module'):
        __import__(import_59662)
        sys_modules_59663 = sys.modules[import_59662]
        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'scipy.interpolate', sys_modules_59663.module_type_store, module_type_store, ['dfitpack'])
        nest_module(stypy.reporting.localization.Localization(__file__, 30, 0), __file__, sys_modules_59663, sys_modules_59663.module_type_store, module_type_store)
    else:
        from scipy.interpolate import dfitpack

        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'scipy.interpolate', None, module_type_store, ['dfitpack'], [dfitpack])

else:
    # Assigning a type to the variable 'scipy.interpolate' (line 30)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 0), 'scipy.interpolate', import_59662)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/interpolate/')


# Assigning a Dict to a Name (line 35):

# Assigning a Dict to a Name (line 35):

# Obtaining an instance of the builtin type 'dict' (line 35)
dict_59664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 35, 19), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 35)
# Adding element type (key, value) (line 35)
int_59665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 35, 20), 'int')
str_59666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, (-1)), 'str', '\nThe required storage space exceeds the available storage space, as\nspecified by the parameter nest: nest too small. If nest is already\nlarge (say nest > m/2), it may also indicate that s is too small.\nThe approximation returned is the weighted least-squares spline\naccording to the knots t[0],t[1],...,t[n-1]. (n=nest) the parameter fp\ngives the corresponding weighted sum of squared residuals (fp>s).\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 35, 19), dict_59664, (int_59665, str_59666))
# Adding element type (key, value) (line 35)
int_59667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 20), 'int')
str_59668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, (-1)), 'str', '\nA theoretically impossible result was found during the iteration\nprocess for finding a smoothing spline with fp = s: s too small.\nThere is an approximation returned but the corresponding weighted sum\nof squared residuals does not satisfy the condition abs(fp-s)/s < tol.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 35, 19), dict_59664, (int_59667, str_59668))
# Adding element type (key, value) (line 35)
int_59669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 20), 'int')
str_59670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, (-1)), 'str', '\nThe maximal number of iterations maxit (set to 20 by the program)\nallowed for finding a smoothing spline with fp=s has been reached: s\ntoo small.\nThere is an approximation returned but the corresponding weighted sum\nof squared residuals does not satisfy the condition abs(fp-s)/s < tol.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 35, 19), dict_59664, (int_59669, str_59670))
# Adding element type (key, value) (line 35)
int_59671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 20), 'int')
str_59672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, (-1)), 'str', '\nError on entry, no approximation returned. The following conditions\nmust hold:\nxb<=x[0]<x[1]<...<x[m-1]<=xe, w[i]>0, i=0..m-1\nif iopt=-1:\n  xb<t[k+1]<t[k+2]<...<t[n-k-2]<xe')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 35, 19), dict_59664, (int_59671, str_59672))

# Assigning a type to the variable '_curfit_messages' (line 35)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 0), '_curfit_messages', dict_59664)

# Assigning a Dict to a Name (line 64):

# Assigning a Dict to a Name (line 64):

# Obtaining an instance of the builtin type 'dict' (line 64)
dict_59673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 64, 16), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 64)
# Adding element type (key, value) (line 64)
int_59674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 64, 17), 'int')
int_59675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 64, 20), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 64, 16), dict_59673, (int_59674, int_59675))
# Adding element type (key, value) (line 64)
str_59676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 64, 23), 'str', 'extrapolate')
int_59677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 64, 38), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 64, 16), dict_59673, (str_59676, int_59677))
# Adding element type (key, value) (line 64)
int_59678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 65, 17), 'int')
int_59679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 65, 20), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 64, 16), dict_59673, (int_59678, int_59679))
# Adding element type (key, value) (line 64)
str_59680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 65, 23), 'str', 'zeros')
int_59681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 65, 32), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 64, 16), dict_59673, (str_59680, int_59681))
# Adding element type (key, value) (line 64)
int_59682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 17), 'int')
int_59683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 20), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 64, 16), dict_59673, (int_59682, int_59683))
# Adding element type (key, value) (line 64)
str_59684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 23), 'str', 'raise')
int_59685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 32), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 64, 16), dict_59673, (str_59684, int_59685))
# Adding element type (key, value) (line 64)
int_59686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 67, 17), 'int')
int_59687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 67, 20), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 64, 16), dict_59673, (int_59686, int_59687))
# Adding element type (key, value) (line 64)
str_59688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 67, 23), 'str', 'const')
int_59689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 67, 32), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 64, 16), dict_59673, (str_59688, int_59689))

# Assigning a type to the variable '_extrap_modes' (line 64)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 64, 0), '_extrap_modes', dict_59673)
# Declaration of the 'UnivariateSpline' class

class UnivariateSpline(object, ):
    str_59690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, (-1)), 'str', "\n    One-dimensional smoothing spline fit to a given set of data points.\n\n    Fits a spline y = spl(x) of degree `k` to the provided `x`, `y` data.  `s`\n    specifies the number of knots by specifying a smoothing condition.\n\n    Parameters\n    ----------\n    x : (N,) array_like\n        1-D array of independent input data. Must be increasing.\n    y : (N,) array_like\n        1-D array of dependent input data, of the same length as `x`.\n    w : (N,) array_like, optional\n        Weights for spline fitting.  Must be positive.  If None (default),\n        weights are all equal.\n    bbox : (2,) array_like, optional\n        2-sequence specifying the boundary of the approximation interval. If\n        None (default), ``bbox=[x[0], x[-1]]``.\n    k : int, optional\n        Degree of the smoothing spline.  Must be <= 5.\n        Default is k=3, a cubic spline.\n    s : float or None, optional\n        Positive smoothing factor used to choose the number of knots.  Number\n        of knots will be increased until the smoothing condition is satisfied::\n\n            sum((w[i] * (y[i]-spl(x[i])))**2, axis=0) <= s\n\n        If None (default), ``s = len(w)`` which should be a good value if\n        ``1/w[i]`` is an estimate of the standard deviation of ``y[i]``.\n        If 0, spline will interpolate through all data points.\n    ext : int or str, optional\n        Controls the extrapolation mode for elements\n        not in the interval defined by the knot sequence.\n\n        * if ext=0 or 'extrapolate', return the extrapolated value.\n        * if ext=1 or 'zeros', return 0\n        * if ext=2 or 'raise', raise a ValueError\n        * if ext=3 of 'const', return the boundary value.\n\n        The default value is 0.\n\n    check_finite : bool, optional\n        Whether to check that the input arrays contain only finite numbers.\n        Disabling may give a performance gain, but may result in problems\n        (crashes, non-termination or non-sensical results) if the inputs\n        do contain infinities or NaNs.\n        Default is False.\n\n    See Also\n    --------\n    InterpolatedUnivariateSpline : Subclass with smoothing forced to 0\n    LSQUnivariateSpline : Subclass in which knots are user-selected instead of\n        being set by smoothing condition\n    splrep : An older, non object-oriented wrapping of FITPACK\n    splev, sproot, splint, spalde\n    BivariateSpline : A similar class for two-dimensional spline interpolation\n\n    Notes\n    -----\n    The number of data points must be larger than the spline degree `k`.\n\n    **NaN handling**: If the input arrays contain ``nan`` values, the result\n    is not useful, since the underlying spline fitting routines cannot deal\n    with ``nan`` . A workaround is to use zero weights for not-a-number\n    data points:\n\n    >>> from scipy.interpolate import UnivariateSpline\n    >>> x, y = np.array([1, 2, 3, 4]), np.array([1, np.nan, 3, 4])\n    >>> w = np.isnan(y)\n    >>> y[w] = 0.\n    >>> spl = UnivariateSpline(x, y, w=~w)\n\n    Notice the need to replace a ``nan`` by a numerical value (precise value\n    does not matter as long as the corresponding weight is zero.)\n\n    Examples\n    --------\n    >>> import matplotlib.pyplot as plt\n    >>> from scipy.interpolate import UnivariateSpline\n    >>> x = np.linspace(-3, 3, 50)\n    >>> y = np.exp(-x**2) + 0.1 * np.random.randn(50)\n    >>> plt.plot(x, y, 'ro', ms=5)\n\n    Use the default value for the smoothing parameter:\n\n    >>> spl = UnivariateSpline(x, y)\n    >>> xs = np.linspace(-3, 3, 1000)\n    >>> plt.plot(xs, spl(xs), 'g', lw=3)\n\n    Manually change the amount of smoothing:\n\n    >>> spl.set_smoothing_factor(0.5)\n    >>> plt.plot(xs, spl(xs), 'b', lw=3)\n    >>> plt.show()\n\n    ")

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 167)
        None_59691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 31), 'None')
        
        # Obtaining an instance of the builtin type 'list' (line 167)
        list_59692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 167, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 167)
        # Adding element type (line 167)
        # Getting the type of 'None' (line 167)
        None_59693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 43), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 167, 42), list_59692, None_59693)
        
        int_59694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 167, 49), 'int')
        # Applying the binary operator '*' (line 167)
        result_mul_59695 = python_operator(stypy.reporting.localization.Localization(__file__, 167, 42), '*', list_59692, int_59694)
        
        int_59696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 167, 54), 'int')
        # Getting the type of 'None' (line 167)
        None_59697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 59), 'None')
        int_59698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, 21), 'int')
        # Getting the type of 'False' (line 168)
        False_59699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 37), 'False')
        defaults = [None_59691, result_mul_59695, int_59696, None_59697, int_59698, False_59699]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 167, 4, False)
        # Assigning a type to the variable 'self' (line 168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.__init__', ['x', 'y', 'w', 'bbox', 'k', 's', 'ext', 'check_finite'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['x', 'y', 'w', 'bbox', 'k', 's', 'ext', 'check_finite'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Getting the type of 'check_finite' (line 170)
        check_finite_59700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 11), 'check_finite')
        # Testing the type of an if condition (line 170)
        if_condition_59701 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 170, 8), check_finite_59700)
        # Assigning a type to the variable 'if_condition_59701' (line 170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 8), 'if_condition_59701', if_condition_59701)
        # SSA begins for if statement (line 170)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a IfExp to a Name (line 171):
        
        # Assigning a IfExp to a Name (line 171):
        
        
        # Getting the type of 'w' (line 171)
        w_59702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 47), 'w')
        # Getting the type of 'None' (line 171)
        None_59703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 56), 'None')
        # Applying the binary operator 'isnot' (line 171)
        result_is_not_59704 = python_operator(stypy.reporting.localization.Localization(__file__, 171, 47), 'isnot', w_59702, None_59703)
        
        # Testing the type of an if expression (line 171)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 171, 23), result_is_not_59704)
        # SSA begins for if expression (line 171)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to all(...): (line 171)
        # Processing the call keyword arguments (line 171)
        kwargs_59711 = {}
        
        # Call to isfinite(...): (line 171)
        # Processing the call arguments (line 171)
        # Getting the type of 'w' (line 171)
        w_59707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 35), 'w', False)
        # Processing the call keyword arguments (line 171)
        kwargs_59708 = {}
        # Getting the type of 'np' (line 171)
        np_59705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 23), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 171)
        isfinite_59706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 23), np_59705, 'isfinite')
        # Calling isfinite(args, kwargs) (line 171)
        isfinite_call_result_59709 = invoke(stypy.reporting.localization.Localization(__file__, 171, 23), isfinite_59706, *[w_59707], **kwargs_59708)
        
        # Obtaining the member 'all' of a type (line 171)
        all_59710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 23), isfinite_call_result_59709, 'all')
        # Calling all(args, kwargs) (line 171)
        all_call_result_59712 = invoke(stypy.reporting.localization.Localization(__file__, 171, 23), all_59710, *[], **kwargs_59711)
        
        # SSA branch for the else part of an if expression (line 171)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'True' (line 171)
        True_59713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 66), 'True')
        # SSA join for if expression (line 171)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_59714 = union_type.UnionType.add(all_call_result_59712, True_59713)
        
        # Assigning a type to the variable 'w_finite' (line 171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 171, 12), 'w_finite', if_exp_59714)
        
        
        # Evaluating a boolean operation
        
        
        # Call to all(...): (line 172)
        # Processing the call keyword arguments (line 172)
        kwargs_59721 = {}
        
        # Call to isfinite(...): (line 172)
        # Processing the call arguments (line 172)
        # Getting the type of 'x' (line 172)
        x_59717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 32), 'x', False)
        # Processing the call keyword arguments (line 172)
        kwargs_59718 = {}
        # Getting the type of 'np' (line 172)
        np_59715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 20), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 172)
        isfinite_59716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 20), np_59715, 'isfinite')
        # Calling isfinite(args, kwargs) (line 172)
        isfinite_call_result_59719 = invoke(stypy.reporting.localization.Localization(__file__, 172, 20), isfinite_59716, *[x_59717], **kwargs_59718)
        
        # Obtaining the member 'all' of a type (line 172)
        all_59720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 20), isfinite_call_result_59719, 'all')
        # Calling all(args, kwargs) (line 172)
        all_call_result_59722 = invoke(stypy.reporting.localization.Localization(__file__, 172, 20), all_59720, *[], **kwargs_59721)
        
        # Applying the 'not' unary operator (line 172)
        result_not__59723 = python_operator(stypy.reporting.localization.Localization(__file__, 172, 16), 'not', all_call_result_59722)
        
        
        
        # Call to all(...): (line 172)
        # Processing the call keyword arguments (line 172)
        kwargs_59730 = {}
        
        # Call to isfinite(...): (line 172)
        # Processing the call arguments (line 172)
        # Getting the type of 'y' (line 172)
        y_59726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 60), 'y', False)
        # Processing the call keyword arguments (line 172)
        kwargs_59727 = {}
        # Getting the type of 'np' (line 172)
        np_59724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 48), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 172)
        isfinite_59725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 48), np_59724, 'isfinite')
        # Calling isfinite(args, kwargs) (line 172)
        isfinite_call_result_59728 = invoke(stypy.reporting.localization.Localization(__file__, 172, 48), isfinite_59725, *[y_59726], **kwargs_59727)
        
        # Obtaining the member 'all' of a type (line 172)
        all_59729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 48), isfinite_call_result_59728, 'all')
        # Calling all(args, kwargs) (line 172)
        all_call_result_59731 = invoke(stypy.reporting.localization.Localization(__file__, 172, 48), all_59729, *[], **kwargs_59730)
        
        # Applying the 'not' unary operator (line 172)
        result_not__59732 = python_operator(stypy.reporting.localization.Localization(__file__, 172, 44), 'not', all_call_result_59731)
        
        # Applying the binary operator 'or' (line 172)
        result_or_keyword_59733 = python_operator(stypy.reporting.localization.Localization(__file__, 172, 16), 'or', result_not__59723, result_not__59732)
        
        # Getting the type of 'w_finite' (line 173)
        w_finite_59734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 24), 'w_finite')
        # Applying the 'not' unary operator (line 173)
        result_not__59735 = python_operator(stypy.reporting.localization.Localization(__file__, 173, 20), 'not', w_finite_59734)
        
        # Applying the binary operator 'or' (line 172)
        result_or_keyword_59736 = python_operator(stypy.reporting.localization.Localization(__file__, 172, 16), 'or', result_or_keyword_59733, result_not__59735)
        
        # Testing the type of an if condition (line 172)
        if_condition_59737 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 172, 12), result_or_keyword_59736)
        # Assigning a type to the variable 'if_condition_59737' (line 172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 12), 'if_condition_59737', if_condition_59737)
        # SSA begins for if statement (line 172)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 174)
        # Processing the call arguments (line 174)
        str_59739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 174, 33), 'str', 'x and y array must not contain NaNs or infs.')
        # Processing the call keyword arguments (line 174)
        kwargs_59740 = {}
        # Getting the type of 'ValueError' (line 174)
        ValueError_59738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 174)
        ValueError_call_result_59741 = invoke(stypy.reporting.localization.Localization(__file__, 174, 22), ValueError_59738, *[str_59739], **kwargs_59740)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 174, 16), ValueError_call_result_59741, 'raise parameter', BaseException)
        # SSA join for if statement (line 172)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 170)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to all(...): (line 175)
        # Processing the call arguments (line 175)
        
        
        # Call to diff(...): (line 175)
        # Processing the call arguments (line 175)
        # Getting the type of 'x' (line 175)
        x_59744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 24), 'x', False)
        # Processing the call keyword arguments (line 175)
        kwargs_59745 = {}
        # Getting the type of 'diff' (line 175)
        diff_59743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 19), 'diff', False)
        # Calling diff(args, kwargs) (line 175)
        diff_call_result_59746 = invoke(stypy.reporting.localization.Localization(__file__, 175, 19), diff_59743, *[x_59744], **kwargs_59745)
        
        float_59747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 29), 'float')
        # Applying the binary operator '>' (line 175)
        result_gt_59748 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 19), '>', diff_call_result_59746, float_59747)
        
        # Processing the call keyword arguments (line 175)
        kwargs_59749 = {}
        # Getting the type of 'all' (line 175)
        all_59742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 15), 'all', False)
        # Calling all(args, kwargs) (line 175)
        all_call_result_59750 = invoke(stypy.reporting.localization.Localization(__file__, 175, 15), all_59742, *[result_gt_59748], **kwargs_59749)
        
        # Applying the 'not' unary operator (line 175)
        result_not__59751 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 11), 'not', all_call_result_59750)
        
        # Testing the type of an if condition (line 175)
        if_condition_59752 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 175, 8), result_not__59751)
        # Assigning a type to the variable 'if_condition_59752' (line 175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 8), 'if_condition_59752', if_condition_59752)
        # SSA begins for if statement (line 175)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 176)
        # Processing the call arguments (line 176)
        str_59754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 29), 'str', 'x must be strictly increasing')
        # Processing the call keyword arguments (line 176)
        kwargs_59755 = {}
        # Getting the type of 'ValueError' (line 176)
        ValueError_59753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 176, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 176)
        ValueError_call_result_59756 = invoke(stypy.reporting.localization.Localization(__file__, 176, 18), ValueError_59753, *[str_59754], **kwargs_59755)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 176, 12), ValueError_call_result_59756, 'raise parameter', BaseException)
        # SSA join for if statement (line 175)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # SSA begins for try-except statement (line 179)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Subscript to a Attribute (line 180):
        
        # Assigning a Subscript to a Attribute (line 180):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ext' (line 180)
        ext_59757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 37), 'ext')
        # Getting the type of '_extrap_modes' (line 180)
        _extrap_modes_59758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 23), '_extrap_modes')
        # Obtaining the member '__getitem__' of a type (line 180)
        getitem___59759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 23), _extrap_modes_59758, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 180)
        subscript_call_result_59760 = invoke(stypy.reporting.localization.Localization(__file__, 180, 23), getitem___59759, ext_59757)
        
        # Getting the type of 'self' (line 180)
        self_59761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 12), 'self')
        # Setting the type of the member 'ext' of a type (line 180)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 12), self_59761, 'ext', subscript_call_result_59760)
        # SSA branch for the except part of a try statement (line 179)
        # SSA branch for the except 'KeyError' branch of a try statement (line 179)
        module_type_store.open_ssa_branch('except')
        
        # Call to ValueError(...): (line 182)
        # Processing the call arguments (line 182)
        str_59763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 29), 'str', 'Unknown extrapolation mode %s.')
        # Getting the type of 'ext' (line 182)
        ext_59764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 64), 'ext', False)
        # Applying the binary operator '%' (line 182)
        result_mod_59765 = python_operator(stypy.reporting.localization.Localization(__file__, 182, 29), '%', str_59763, ext_59764)
        
        # Processing the call keyword arguments (line 182)
        kwargs_59766 = {}
        # Getting the type of 'ValueError' (line 182)
        ValueError_59762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 182)
        ValueError_call_result_59767 = invoke(stypy.reporting.localization.Localization(__file__, 182, 18), ValueError_59762, *[result_mod_59765], **kwargs_59766)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 182, 12), ValueError_call_result_59767, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 179)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 184):
        
        # Assigning a Call to a Name (line 184):
        
        # Call to fpcurf0(...): (line 184)
        # Processing the call arguments (line 184)
        # Getting the type of 'x' (line 184)
        x_59770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 32), 'x', False)
        # Getting the type of 'y' (line 184)
        y_59771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 34), 'y', False)
        # Getting the type of 'k' (line 184)
        k_59772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 36), 'k', False)
        # Processing the call keyword arguments (line 184)
        # Getting the type of 'w' (line 184)
        w_59773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 40), 'w', False)
        keyword_59774 = w_59773
        
        # Obtaining the type of the subscript
        int_59775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 185, 40), 'int')
        # Getting the type of 'bbox' (line 185)
        bbox_59776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 35), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 185)
        getitem___59777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 35), bbox_59776, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 185)
        subscript_call_result_59778 = invoke(stypy.reporting.localization.Localization(__file__, 185, 35), getitem___59777, int_59775)
        
        keyword_59779 = subscript_call_result_59778
        
        # Obtaining the type of the subscript
        int_59780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 185, 51), 'int')
        # Getting the type of 'bbox' (line 185)
        bbox_59781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 46), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 185)
        getitem___59782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 46), bbox_59781, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 185)
        subscript_call_result_59783 = invoke(stypy.reporting.localization.Localization(__file__, 185, 46), getitem___59782, int_59780)
        
        keyword_59784 = subscript_call_result_59783
        # Getting the type of 's' (line 185)
        s_59785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 56), 's', False)
        keyword_59786 = s_59785
        kwargs_59787 = {'xb': keyword_59779, 's': keyword_59786, 'w': keyword_59774, 'xe': keyword_59784}
        # Getting the type of 'dfitpack' (line 184)
        dfitpack_59768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 15), 'dfitpack', False)
        # Obtaining the member 'fpcurf0' of a type (line 184)
        fpcurf0_59769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 184, 15), dfitpack_59768, 'fpcurf0')
        # Calling fpcurf0(args, kwargs) (line 184)
        fpcurf0_call_result_59788 = invoke(stypy.reporting.localization.Localization(__file__, 184, 15), fpcurf0_59769, *[x_59770, y_59771, k_59772], **kwargs_59787)
        
        # Assigning a type to the variable 'data' (line 184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 8), 'data', fpcurf0_call_result_59788)
        
        
        
        # Obtaining the type of the subscript
        int_59789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 186, 16), 'int')
        # Getting the type of 'data' (line 186)
        data_59790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 11), 'data')
        # Obtaining the member '__getitem__' of a type (line 186)
        getitem___59791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 11), data_59790, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 186)
        subscript_call_result_59792 = invoke(stypy.reporting.localization.Localization(__file__, 186, 11), getitem___59791, int_59789)
        
        int_59793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 186, 23), 'int')
        # Applying the binary operator '==' (line 186)
        result_eq_59794 = python_operator(stypy.reporting.localization.Localization(__file__, 186, 11), '==', subscript_call_result_59792, int_59793)
        
        # Testing the type of an if condition (line 186)
        if_condition_59795 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 186, 8), result_eq_59794)
        # Assigning a type to the variable 'if_condition_59795' (line 186)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 8), 'if_condition_59795', if_condition_59795)
        # SSA begins for if statement (line 186)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 188):
        
        # Assigning a Call to a Name (line 188):
        
        # Call to _reset_nest(...): (line 188)
        # Processing the call arguments (line 188)
        # Getting the type of 'data' (line 188)
        data_59798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 36), 'data', False)
        # Processing the call keyword arguments (line 188)
        kwargs_59799 = {}
        # Getting the type of 'self' (line 188)
        self_59796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 19), 'self', False)
        # Obtaining the member '_reset_nest' of a type (line 188)
        _reset_nest_59797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 19), self_59796, '_reset_nest')
        # Calling _reset_nest(args, kwargs) (line 188)
        _reset_nest_call_result_59800 = invoke(stypy.reporting.localization.Localization(__file__, 188, 19), _reset_nest_59797, *[data_59798], **kwargs_59799)
        
        # Assigning a type to the variable 'data' (line 188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 12), 'data', _reset_nest_call_result_59800)
        # SSA join for if statement (line 186)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 189):
        
        # Assigning a Name to a Attribute (line 189):
        # Getting the type of 'data' (line 189)
        data_59801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 21), 'data')
        # Getting the type of 'self' (line 189)
        self_59802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'self')
        # Setting the type of the member '_data' of a type (line 189)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 8), self_59802, '_data', data_59801)
        
        # Call to _reset_class(...): (line 190)
        # Processing the call keyword arguments (line 190)
        kwargs_59805 = {}
        # Getting the type of 'self' (line 190)
        self_59803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'self', False)
        # Obtaining the member '_reset_class' of a type (line 190)
        _reset_class_59804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 8), self_59803, '_reset_class')
        # Calling _reset_class(args, kwargs) (line 190)
        _reset_class_call_result_59806 = invoke(stypy.reporting.localization.Localization(__file__, 190, 8), _reset_class_59804, *[], **kwargs_59805)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _from_tck(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_59807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 32), 'int')
        defaults = [int_59807]
        # Create a new context for function '_from_tck'
        module_type_store = module_type_store.open_function_context('_from_tck', 192, 4, False)
        # Assigning a type to the variable 'self' (line 193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline._from_tck')
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_param_names_list', ['tck', 'ext'])
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline._from_tck.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline._from_tck', ['tck', 'ext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_from_tck', localization, ['tck', 'ext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_from_tck(...)' code ##################

        str_59808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 8), 'str', 'Construct a spline object from given tck')
        
        # Assigning a Call to a Name (line 195):
        
        # Assigning a Call to a Name (line 195):
        
        # Call to __new__(...): (line 195)
        # Processing the call arguments (line 195)
        # Getting the type of 'cls' (line 195)
        cls_59811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 27), 'cls', False)
        # Processing the call keyword arguments (line 195)
        kwargs_59812 = {}
        # Getting the type of 'cls' (line 195)
        cls_59809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 15), 'cls', False)
        # Obtaining the member '__new__' of a type (line 195)
        new___59810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 15), cls_59809, '__new__')
        # Calling __new__(args, kwargs) (line 195)
        new___call_result_59813 = invoke(stypy.reporting.localization.Localization(__file__, 195, 15), new___59810, *[cls_59811], **kwargs_59812)
        
        # Assigning a type to the variable 'self' (line 195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'self', new___call_result_59813)
        
        # Assigning a Name to a Tuple (line 196):
        
        # Assigning a Subscript to a Name (line 196):
        
        # Obtaining the type of the subscript
        int_59814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 8), 'int')
        # Getting the type of 'tck' (line 196)
        tck_59815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 18), 'tck')
        # Obtaining the member '__getitem__' of a type (line 196)
        getitem___59816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 8), tck_59815, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 196)
        subscript_call_result_59817 = invoke(stypy.reporting.localization.Localization(__file__, 196, 8), getitem___59816, int_59814)
        
        # Assigning a type to the variable 'tuple_var_assignment_59521' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'tuple_var_assignment_59521', subscript_call_result_59817)
        
        # Assigning a Subscript to a Name (line 196):
        
        # Obtaining the type of the subscript
        int_59818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 8), 'int')
        # Getting the type of 'tck' (line 196)
        tck_59819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 18), 'tck')
        # Obtaining the member '__getitem__' of a type (line 196)
        getitem___59820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 8), tck_59819, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 196)
        subscript_call_result_59821 = invoke(stypy.reporting.localization.Localization(__file__, 196, 8), getitem___59820, int_59818)
        
        # Assigning a type to the variable 'tuple_var_assignment_59522' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'tuple_var_assignment_59522', subscript_call_result_59821)
        
        # Assigning a Subscript to a Name (line 196):
        
        # Obtaining the type of the subscript
        int_59822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 8), 'int')
        # Getting the type of 'tck' (line 196)
        tck_59823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 18), 'tck')
        # Obtaining the member '__getitem__' of a type (line 196)
        getitem___59824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 8), tck_59823, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 196)
        subscript_call_result_59825 = invoke(stypy.reporting.localization.Localization(__file__, 196, 8), getitem___59824, int_59822)
        
        # Assigning a type to the variable 'tuple_var_assignment_59523' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'tuple_var_assignment_59523', subscript_call_result_59825)
        
        # Assigning a Name to a Name (line 196):
        # Getting the type of 'tuple_var_assignment_59521' (line 196)
        tuple_var_assignment_59521_59826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'tuple_var_assignment_59521')
        # Assigning a type to the variable 't' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 't', tuple_var_assignment_59521_59826)
        
        # Assigning a Name to a Name (line 196):
        # Getting the type of 'tuple_var_assignment_59522' (line 196)
        tuple_var_assignment_59522_59827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'tuple_var_assignment_59522')
        # Assigning a type to the variable 'c' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 11), 'c', tuple_var_assignment_59522_59827)
        
        # Assigning a Name to a Name (line 196):
        # Getting the type of 'tuple_var_assignment_59523' (line 196)
        tuple_var_assignment_59523_59828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'tuple_var_assignment_59523')
        # Assigning a type to the variable 'k' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 14), 'k', tuple_var_assignment_59523_59828)
        
        # Assigning a Name to a Attribute (line 197):
        
        # Assigning a Name to a Attribute (line 197):
        # Getting the type of 'tck' (line 197)
        tck_59829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 26), 'tck')
        # Getting the type of 'self' (line 197)
        self_59830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'self')
        # Setting the type of the member '_eval_args' of a type (line 197)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 8), self_59830, '_eval_args', tck_59829)
        
        # Assigning a Tuple to a Attribute (line 199):
        
        # Assigning a Tuple to a Attribute (line 199):
        
        # Obtaining an instance of the builtin type 'tuple' (line 199)
        tuple_59831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 199, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 199)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 199)
        None_59832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 22), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59832)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 199)
        None_59833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 27), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59833)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 199)
        None_59834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 32), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59834)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 199)
        None_59835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 37), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59835)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 199)
        None_59836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 42), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59836)
        # Adding element type (line 199)
        # Getting the type of 'k' (line 199)
        k_59837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 47), 'k')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, k_59837)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 199)
        None_59838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 49), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59838)
        # Adding element type (line 199)
        
        # Call to len(...): (line 199)
        # Processing the call arguments (line 199)
        # Getting the type of 't' (line 199)
        t_59840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 58), 't', False)
        # Processing the call keyword arguments (line 199)
        kwargs_59841 = {}
        # Getting the type of 'len' (line 199)
        len_59839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 54), 'len', False)
        # Calling len(args, kwargs) (line 199)
        len_call_result_59842 = invoke(stypy.reporting.localization.Localization(__file__, 199, 54), len_59839, *[t_59840], **kwargs_59841)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, len_call_result_59842)
        # Adding element type (line 199)
        # Getting the type of 't' (line 199)
        t_59843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 61), 't')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, t_59843)
        # Adding element type (line 199)
        # Getting the type of 'c' (line 200)
        c_59844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 22), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, c_59844)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 200)
        None_59845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 24), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59845)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 200)
        None_59846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 29), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59846)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 200)
        None_59847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 34), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59847)
        # Adding element type (line 199)
        # Getting the type of 'None' (line 200)
        None_59848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 39), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 199, 22), tuple_59831, None_59848)
        
        # Getting the type of 'self' (line 199)
        self_59849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'self')
        # Setting the type of the member '_data' of a type (line 199)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 8), self_59849, '_data', tuple_59831)
        
        # Assigning a Name to a Attribute (line 201):
        
        # Assigning a Name to a Attribute (line 201):
        # Getting the type of 'ext' (line 201)
        ext_59850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 19), 'ext')
        # Getting the type of 'self' (line 201)
        self_59851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 8), 'self')
        # Setting the type of the member 'ext' of a type (line 201)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 8), self_59851, 'ext', ext_59850)
        # Getting the type of 'self' (line 202)
        self_59852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 15), 'self')
        # Assigning a type to the variable 'stypy_return_type' (line 202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 8), 'stypy_return_type', self_59852)
        
        # ################# End of '_from_tck(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_from_tck' in the type store
        # Getting the type of 'stypy_return_type' (line 192)
        stypy_return_type_59853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_59853)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_from_tck'
        return stypy_return_type_59853


    @norecursion
    def _reset_class(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_reset_class'
        module_type_store = module_type_store.open_function_context('_reset_class', 204, 4, False)
        # Assigning a type to the variable 'self' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline._reset_class')
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_param_names_list', [])
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline._reset_class.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline._reset_class', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_reset_class', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_reset_class(...)' code ##################

        
        # Assigning a Attribute to a Name (line 205):
        
        # Assigning a Attribute to a Name (line 205):
        # Getting the type of 'self' (line 205)
        self_59854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 15), 'self')
        # Obtaining the member '_data' of a type (line 205)
        _data_59855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 15), self_59854, '_data')
        # Assigning a type to the variable 'data' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 8), 'data', _data_59855)
        
        # Assigning a Tuple to a Tuple (line 206):
        
        # Assigning a Subscript to a Name (line 206):
        
        # Obtaining the type of the subscript
        int_59856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 27), 'int')
        # Getting the type of 'data' (line 206)
        data_59857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 22), 'data')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___59858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 22), data_59857, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_59859 = invoke(stypy.reporting.localization.Localization(__file__, 206, 22), getitem___59858, int_59856)
        
        # Assigning a type to the variable 'tuple_assignment_59524' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59524', subscript_call_result_59859)
        
        # Assigning a Subscript to a Name (line 206):
        
        # Obtaining the type of the subscript
        int_59860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 35), 'int')
        # Getting the type of 'data' (line 206)
        data_59861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 30), 'data')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___59862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 30), data_59861, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_59863 = invoke(stypy.reporting.localization.Localization(__file__, 206, 30), getitem___59862, int_59860)
        
        # Assigning a type to the variable 'tuple_assignment_59525' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59525', subscript_call_result_59863)
        
        # Assigning a Subscript to a Name (line 206):
        
        # Obtaining the type of the subscript
        int_59864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 43), 'int')
        # Getting the type of 'data' (line 206)
        data_59865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 38), 'data')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___59866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 38), data_59865, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_59867 = invoke(stypy.reporting.localization.Localization(__file__, 206, 38), getitem___59866, int_59864)
        
        # Assigning a type to the variable 'tuple_assignment_59526' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59526', subscript_call_result_59867)
        
        # Assigning a Subscript to a Name (line 206):
        
        # Obtaining the type of the subscript
        int_59868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 51), 'int')
        # Getting the type of 'data' (line 206)
        data_59869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 46), 'data')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___59870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 46), data_59869, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_59871 = invoke(stypy.reporting.localization.Localization(__file__, 206, 46), getitem___59870, int_59868)
        
        # Assigning a type to the variable 'tuple_assignment_59527' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59527', subscript_call_result_59871)
        
        # Assigning a Subscript to a Name (line 206):
        
        # Obtaining the type of the subscript
        int_59872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 59), 'int')
        # Getting the type of 'data' (line 206)
        data_59873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 54), 'data')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___59874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 54), data_59873, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_59875 = invoke(stypy.reporting.localization.Localization(__file__, 206, 54), getitem___59874, int_59872)
        
        # Assigning a type to the variable 'tuple_assignment_59528' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59528', subscript_call_result_59875)
        
        # Assigning a Name to a Name (line 206):
        # Getting the type of 'tuple_assignment_59524' (line 206)
        tuple_assignment_59524_59876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59524')
        # Assigning a type to the variable 'n' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'n', tuple_assignment_59524_59876)
        
        # Assigning a Name to a Name (line 206):
        # Getting the type of 'tuple_assignment_59525' (line 206)
        tuple_assignment_59525_59877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59525')
        # Assigning a type to the variable 't' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 10), 't', tuple_assignment_59525_59877)
        
        # Assigning a Name to a Name (line 206):
        # Getting the type of 'tuple_assignment_59526' (line 206)
        tuple_assignment_59526_59878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59526')
        # Assigning a type to the variable 'c' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 12), 'c', tuple_assignment_59526_59878)
        
        # Assigning a Name to a Name (line 206):
        # Getting the type of 'tuple_assignment_59527' (line 206)
        tuple_assignment_59527_59879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59527')
        # Assigning a type to the variable 'k' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 14), 'k', tuple_assignment_59527_59879)
        
        # Assigning a Name to a Name (line 206):
        # Getting the type of 'tuple_assignment_59528' (line 206)
        tuple_assignment_59528_59880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_assignment_59528')
        # Assigning a type to the variable 'ier' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 16), 'ier', tuple_assignment_59528_59880)
        
        # Assigning a Tuple to a Attribute (line 207):
        
        # Assigning a Tuple to a Attribute (line 207):
        
        # Obtaining an instance of the builtin type 'tuple' (line 207)
        tuple_59881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 207)
        # Adding element type (line 207)
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 207)
        n_59882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 29), 'n')
        slice_59883 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 207, 26), None, n_59882, None)
        # Getting the type of 't' (line 207)
        t_59884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 26), 't')
        # Obtaining the member '__getitem__' of a type (line 207)
        getitem___59885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 26), t_59884, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 207)
        subscript_call_result_59886 = invoke(stypy.reporting.localization.Localization(__file__, 207, 26), getitem___59885, slice_59883)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 207, 26), tuple_59881, subscript_call_result_59886)
        # Adding element type (line 207)
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 207)
        n_59887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 35), 'n')
        slice_59888 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 207, 32), None, n_59887, None)
        # Getting the type of 'c' (line 207)
        c_59889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 32), 'c')
        # Obtaining the member '__getitem__' of a type (line 207)
        getitem___59890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 32), c_59889, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 207)
        subscript_call_result_59891 = invoke(stypy.reporting.localization.Localization(__file__, 207, 32), getitem___59890, slice_59888)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 207, 26), tuple_59881, subscript_call_result_59891)
        # Adding element type (line 207)
        # Getting the type of 'k' (line 207)
        k_59892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 38), 'k')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 207, 26), tuple_59881, k_59892)
        
        # Getting the type of 'self' (line 207)
        self_59893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'self')
        # Setting the type of the member '_eval_args' of a type (line 207)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 8), self_59893, '_eval_args', tuple_59881)
        
        
        # Getting the type of 'ier' (line 208)
        ier_59894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 11), 'ier')
        int_59895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 18), 'int')
        # Applying the binary operator '==' (line 208)
        result_eq_59896 = python_operator(stypy.reporting.localization.Localization(__file__, 208, 11), '==', ier_59894, int_59895)
        
        # Testing the type of an if condition (line 208)
        if_condition_59897 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 208, 8), result_eq_59896)
        # Assigning a type to the variable 'if_condition_59897' (line 208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 8), 'if_condition_59897', if_condition_59897)
        # SSA begins for if statement (line 208)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        pass
        # SSA branch for the else part of an if statement (line 208)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'ier' (line 213)
        ier_59898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 13), 'ier')
        int_59899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 20), 'int')
        # Applying the binary operator '==' (line 213)
        result_eq_59900 = python_operator(stypy.reporting.localization.Localization(__file__, 213, 13), '==', ier_59898, int_59899)
        
        # Testing the type of an if condition (line 213)
        if_condition_59901 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 213, 13), result_eq_59900)
        # Assigning a type to the variable 'if_condition_59901' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 13), 'if_condition_59901', if_condition_59901)
        # SSA begins for if statement (line 213)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _set_class(...): (line 215)
        # Processing the call arguments (line 215)
        # Getting the type of 'InterpolatedUnivariateSpline' (line 215)
        InterpolatedUnivariateSpline_59904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 28), 'InterpolatedUnivariateSpline', False)
        # Processing the call keyword arguments (line 215)
        kwargs_59905 = {}
        # Getting the type of 'self' (line 215)
        self_59902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 12), 'self', False)
        # Obtaining the member '_set_class' of a type (line 215)
        _set_class_59903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 12), self_59902, '_set_class')
        # Calling _set_class(args, kwargs) (line 215)
        _set_class_call_result_59906 = invoke(stypy.reporting.localization.Localization(__file__, 215, 12), _set_class_59903, *[InterpolatedUnivariateSpline_59904], **kwargs_59905)
        
        # SSA branch for the else part of an if statement (line 213)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'ier' (line 216)
        ier_59907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 13), 'ier')
        int_59908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 20), 'int')
        # Applying the binary operator '==' (line 216)
        result_eq_59909 = python_operator(stypy.reporting.localization.Localization(__file__, 216, 13), '==', ier_59907, int_59908)
        
        # Testing the type of an if condition (line 216)
        if_condition_59910 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 216, 13), result_eq_59909)
        # Assigning a type to the variable 'if_condition_59910' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 13), 'if_condition_59910', if_condition_59910)
        # SSA begins for if statement (line 216)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _set_class(...): (line 220)
        # Processing the call arguments (line 220)
        # Getting the type of 'LSQUnivariateSpline' (line 220)
        LSQUnivariateSpline_59913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 28), 'LSQUnivariateSpline', False)
        # Processing the call keyword arguments (line 220)
        kwargs_59914 = {}
        # Getting the type of 'self' (line 220)
        self_59911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 12), 'self', False)
        # Obtaining the member '_set_class' of a type (line 220)
        _set_class_59912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 12), self_59911, '_set_class')
        # Calling _set_class(args, kwargs) (line 220)
        _set_class_call_result_59915 = invoke(stypy.reporting.localization.Localization(__file__, 220, 12), _set_class_59912, *[LSQUnivariateSpline_59913], **kwargs_59914)
        
        # SSA branch for the else part of an if statement (line 216)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'ier' (line 223)
        ier_59916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 15), 'ier')
        int_59917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 22), 'int')
        # Applying the binary operator '==' (line 223)
        result_eq_59918 = python_operator(stypy.reporting.localization.Localization(__file__, 223, 15), '==', ier_59916, int_59917)
        
        # Testing the type of an if condition (line 223)
        if_condition_59919 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 223, 12), result_eq_59918)
        # Assigning a type to the variable 'if_condition_59919' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 12), 'if_condition_59919', if_condition_59919)
        # SSA begins for if statement (line 223)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to _set_class(...): (line 224)
        # Processing the call arguments (line 224)
        # Getting the type of 'LSQUnivariateSpline' (line 224)
        LSQUnivariateSpline_59922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 32), 'LSQUnivariateSpline', False)
        # Processing the call keyword arguments (line 224)
        kwargs_59923 = {}
        # Getting the type of 'self' (line 224)
        self_59920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 16), 'self', False)
        # Obtaining the member '_set_class' of a type (line 224)
        _set_class_59921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 224, 16), self_59920, '_set_class')
        # Calling _set_class(args, kwargs) (line 224)
        _set_class_call_result_59924 = invoke(stypy.reporting.localization.Localization(__file__, 224, 16), _set_class_59921, *[LSQUnivariateSpline_59922], **kwargs_59923)
        
        # SSA join for if statement (line 223)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 225):
        
        # Assigning a Call to a Name (line 225):
        
        # Call to get(...): (line 225)
        # Processing the call arguments (line 225)
        # Getting the type of 'ier' (line 225)
        ier_59927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 43), 'ier', False)
        str_59928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 47), 'str', 'ier=%s')
        # Getting the type of 'ier' (line 225)
        ier_59929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 59), 'ier', False)
        # Applying the binary operator '%' (line 225)
        result_mod_59930 = python_operator(stypy.reporting.localization.Localization(__file__, 225, 47), '%', str_59928, ier_59929)
        
        # Processing the call keyword arguments (line 225)
        kwargs_59931 = {}
        # Getting the type of '_curfit_messages' (line 225)
        _curfit_messages_59925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 22), '_curfit_messages', False)
        # Obtaining the member 'get' of a type (line 225)
        get_59926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 22), _curfit_messages_59925, 'get')
        # Calling get(args, kwargs) (line 225)
        get_call_result_59932 = invoke(stypy.reporting.localization.Localization(__file__, 225, 22), get_59926, *[ier_59927, result_mod_59930], **kwargs_59931)
        
        # Assigning a type to the variable 'message' (line 225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 12), 'message', get_call_result_59932)
        
        # Call to warn(...): (line 226)
        # Processing the call arguments (line 226)
        # Getting the type of 'message' (line 226)
        message_59935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 26), 'message', False)
        # Processing the call keyword arguments (line 226)
        kwargs_59936 = {}
        # Getting the type of 'warnings' (line 226)
        warnings_59933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 12), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 226)
        warn_59934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 12), warnings_59933, 'warn')
        # Calling warn(args, kwargs) (line 226)
        warn_call_result_59937 = invoke(stypy.reporting.localization.Localization(__file__, 226, 12), warn_59934, *[message_59935], **kwargs_59936)
        
        # SSA join for if statement (line 216)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 213)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 208)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_reset_class(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_reset_class' in the type store
        # Getting the type of 'stypy_return_type' (line 204)
        stypy_return_type_59938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_59938)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_reset_class'
        return stypy_return_type_59938


    @norecursion
    def _set_class(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_set_class'
        module_type_store = module_type_store.open_function_context('_set_class', 228, 4, False)
        # Assigning a type to the variable 'self' (line 229)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline._set_class')
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_param_names_list', ['cls'])
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline._set_class.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline._set_class', ['cls'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_set_class', localization, ['cls'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_set_class(...)' code ##################

        
        # Assigning a Name to a Attribute (line 229):
        
        # Assigning a Name to a Attribute (line 229):
        # Getting the type of 'cls' (line 229)
        cls_59939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 29), 'cls')
        # Getting the type of 'self' (line 229)
        self_59940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 8), 'self')
        # Setting the type of the member '_spline_class' of a type (line 229)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 8), self_59940, '_spline_class', cls_59939)
        
        
        # Getting the type of 'self' (line 230)
        self_59941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 11), 'self')
        # Obtaining the member '__class__' of a type (line 230)
        class___59942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 11), self_59941, '__class__')
        
        # Obtaining an instance of the builtin type 'tuple' (line 230)
        tuple_59943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 30), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 230)
        # Adding element type (line 230)
        # Getting the type of 'UnivariateSpline' (line 230)
        UnivariateSpline_59944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 30), 'UnivariateSpline')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 30), tuple_59943, UnivariateSpline_59944)
        # Adding element type (line 230)
        # Getting the type of 'InterpolatedUnivariateSpline' (line 230)
        InterpolatedUnivariateSpline_59945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 48), 'InterpolatedUnivariateSpline')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 30), tuple_59943, InterpolatedUnivariateSpline_59945)
        # Adding element type (line 230)
        # Getting the type of 'LSQUnivariateSpline' (line 231)
        LSQUnivariateSpline_59946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 30), 'LSQUnivariateSpline')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 30), tuple_59943, LSQUnivariateSpline_59946)
        
        # Applying the binary operator 'in' (line 230)
        result_contains_59947 = python_operator(stypy.reporting.localization.Localization(__file__, 230, 11), 'in', class___59942, tuple_59943)
        
        # Testing the type of an if condition (line 230)
        if_condition_59948 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 230, 8), result_contains_59947)
        # Assigning a type to the variable 'if_condition_59948' (line 230)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 230, 8), 'if_condition_59948', if_condition_59948)
        # SSA begins for if statement (line 230)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Attribute (line 232):
        
        # Assigning a Name to a Attribute (line 232):
        # Getting the type of 'cls' (line 232)
        cls_59949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 29), 'cls')
        # Getting the type of 'self' (line 232)
        self_59950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 12), 'self')
        # Setting the type of the member '__class__' of a type (line 232)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 12), self_59950, '__class__', cls_59949)
        # SSA branch for the else part of an if statement (line 230)
        module_type_store.open_ssa_branch('else')
        pass
        # SSA join for if statement (line 230)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_set_class(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_set_class' in the type store
        # Getting the type of 'stypy_return_type' (line 228)
        stypy_return_type_59951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_59951)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_set_class'
        return stypy_return_type_59951


    @norecursion
    def _reset_nest(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 237)
        None_59952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 37), 'None')
        defaults = [None_59952]
        # Create a new context for function '_reset_nest'
        module_type_store = module_type_store.open_function_context('_reset_nest', 237, 4, False)
        # Assigning a type to the variable 'self' (line 238)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 238, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline._reset_nest')
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_param_names_list', ['data', 'nest'])
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline._reset_nest.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline._reset_nest', ['data', 'nest'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_reset_nest', localization, ['data', 'nest'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_reset_nest(...)' code ##################

        
        # Assigning a Subscript to a Name (line 238):
        
        # Assigning a Subscript to a Name (line 238):
        
        # Obtaining the type of the subscript
        int_59953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 17), 'int')
        # Getting the type of 'data' (line 238)
        data_59954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 12), 'data')
        # Obtaining the member '__getitem__' of a type (line 238)
        getitem___59955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 238, 12), data_59954, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 238)
        subscript_call_result_59956 = invoke(stypy.reporting.localization.Localization(__file__, 238, 12), getitem___59955, int_59953)
        
        # Assigning a type to the variable 'n' (line 238)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 238, 8), 'n', subscript_call_result_59956)
        
        # Type idiom detected: calculating its left and rigth part (line 239)
        # Getting the type of 'nest' (line 239)
        nest_59957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 11), 'nest')
        # Getting the type of 'None' (line 239)
        None_59958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 19), 'None')
        
        (may_be_59959, more_types_in_union_59960) = may_be_none(nest_59957, None_59958)

        if may_be_59959:

            if more_types_in_union_59960:
                # Runtime conditional SSA (line 239)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Tuple to a Tuple (line 240):
            
            # Assigning a Subscript to a Name (line 240):
            
            # Obtaining the type of the subscript
            int_59961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 23), 'int')
            # Getting the type of 'data' (line 240)
            data_59962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 18), 'data')
            # Obtaining the member '__getitem__' of a type (line 240)
            getitem___59963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 18), data_59962, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 240)
            subscript_call_result_59964 = invoke(stypy.reporting.localization.Localization(__file__, 240, 18), getitem___59963, int_59961)
            
            # Assigning a type to the variable 'tuple_assignment_59529' (line 240)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 12), 'tuple_assignment_59529', subscript_call_result_59964)
            
            # Assigning a Call to a Name (line 240):
            
            # Call to len(...): (line 240)
            # Processing the call arguments (line 240)
            
            # Obtaining the type of the subscript
            int_59966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 35), 'int')
            # Getting the type of 'data' (line 240)
            data_59967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 30), 'data', False)
            # Obtaining the member '__getitem__' of a type (line 240)
            getitem___59968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 30), data_59967, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 240)
            subscript_call_result_59969 = invoke(stypy.reporting.localization.Localization(__file__, 240, 30), getitem___59968, int_59966)
            
            # Processing the call keyword arguments (line 240)
            kwargs_59970 = {}
            # Getting the type of 'len' (line 240)
            len_59965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 26), 'len', False)
            # Calling len(args, kwargs) (line 240)
            len_call_result_59971 = invoke(stypy.reporting.localization.Localization(__file__, 240, 26), len_59965, *[subscript_call_result_59969], **kwargs_59970)
            
            # Assigning a type to the variable 'tuple_assignment_59530' (line 240)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 12), 'tuple_assignment_59530', len_call_result_59971)
            
            # Assigning a Name to a Name (line 240):
            # Getting the type of 'tuple_assignment_59529' (line 240)
            tuple_assignment_59529_59972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 12), 'tuple_assignment_59529')
            # Assigning a type to the variable 'k' (line 240)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 12), 'k', tuple_assignment_59529_59972)
            
            # Assigning a Name to a Name (line 240):
            # Getting the type of 'tuple_assignment_59530' (line 240)
            tuple_assignment_59530_59973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 12), 'tuple_assignment_59530')
            # Assigning a type to the variable 'm' (line 240)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 14), 'm', tuple_assignment_59530_59973)
            
            # Assigning a BinOp to a Name (line 241):
            
            # Assigning a BinOp to a Name (line 241):
            # Getting the type of 'm' (line 241)
            m_59974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 19), 'm')
            # Getting the type of 'k' (line 241)
            k_59975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 21), 'k')
            # Applying the binary operator '+' (line 241)
            result_add_59976 = python_operator(stypy.reporting.localization.Localization(__file__, 241, 19), '+', m_59974, k_59975)
            
            int_59977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 23), 'int')
            # Applying the binary operator '+' (line 241)
            result_add_59978 = python_operator(stypy.reporting.localization.Localization(__file__, 241, 22), '+', result_add_59976, int_59977)
            
            # Assigning a type to the variable 'nest' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'nest', result_add_59978)

            if more_types_in_union_59960:
                # Runtime conditional SSA for else branch (line 239)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_59959) or more_types_in_union_59960):
            
            
            
            # Getting the type of 'n' (line 243)
            n_59979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 19), 'n')
            # Getting the type of 'nest' (line 243)
            nest_59980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 24), 'nest')
            # Applying the binary operator '<=' (line 243)
            result_le_59981 = python_operator(stypy.reporting.localization.Localization(__file__, 243, 19), '<=', n_59979, nest_59980)
            
            # Applying the 'not' unary operator (line 243)
            result_not__59982 = python_operator(stypy.reporting.localization.Localization(__file__, 243, 15), 'not', result_le_59981)
            
            # Testing the type of an if condition (line 243)
            if_condition_59983 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 243, 12), result_not__59982)
            # Assigning a type to the variable 'if_condition_59983' (line 243)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 243, 12), 'if_condition_59983', if_condition_59983)
            # SSA begins for if statement (line 243)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to ValueError(...): (line 244)
            # Processing the call arguments (line 244)
            str_59985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 33), 'str', '`nest` can only be increased')
            # Processing the call keyword arguments (line 244)
            kwargs_59986 = {}
            # Getting the type of 'ValueError' (line 244)
            ValueError_59984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 244)
            ValueError_call_result_59987 = invoke(stypy.reporting.localization.Localization(__file__, 244, 22), ValueError_59984, *[str_59985], **kwargs_59986)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 244, 16), ValueError_call_result_59987, 'raise parameter', BaseException)
            # SSA join for if statement (line 243)
            module_type_store = module_type_store.join_ssa_context()
            

            if (may_be_59959 and more_types_in_union_59960):
                # SSA join for if statement (line 239)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a ListComp to a Tuple (line 245):
        
        # Assigning a Subscript to a Name (line 245):
        
        # Obtaining the type of the subscript
        int_59988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'list' (line 245)
        list_59998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 65), 'list')
        # Adding type elements to the builtin type 'list' instance (line 245)
        # Adding element type (line 245)
        int_59999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_59998, int_59999)
        # Adding element type (line 245)
        int_60000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 68), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_59998, int_60000)
        # Adding element type (line 245)
        int_60001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 70), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_59998, int_60001)
        # Adding element type (line 245)
        int_60002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 73), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_59998, int_60002)
        
        comprehension_60003 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 31), list_59998)
        # Assigning a type to the variable 'j' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 31), 'j', comprehension_60003)
        
        # Call to resize(...): (line 245)
        # Processing the call arguments (line 245)
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 245)
        j_59991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 46), 'j', False)
        # Getting the type of 'data' (line 245)
        data_59992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 41), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 245)
        getitem___59993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 41), data_59992, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 245)
        subscript_call_result_59994 = invoke(stypy.reporting.localization.Localization(__file__, 245, 41), getitem___59993, j_59991)
        
        # Getting the type of 'nest' (line 245)
        nest_59995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 50), 'nest', False)
        # Processing the call keyword arguments (line 245)
        kwargs_59996 = {}
        # Getting the type of 'np' (line 245)
        np_59989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 31), 'np', False)
        # Obtaining the member 'resize' of a type (line 245)
        resize_59990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 31), np_59989, 'resize')
        # Calling resize(args, kwargs) (line 245)
        resize_call_result_59997 = invoke(stypy.reporting.localization.Localization(__file__, 245, 31), resize_59990, *[subscript_call_result_59994, nest_59995], **kwargs_59996)
        
        list_60004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 31), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 31), list_60004, resize_call_result_59997)
        # Obtaining the member '__getitem__' of a type (line 245)
        getitem___60005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 8), list_60004, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 245)
        subscript_call_result_60006 = invoke(stypy.reporting.localization.Localization(__file__, 245, 8), getitem___60005, int_59988)
        
        # Assigning a type to the variable 'tuple_var_assignment_59531' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'tuple_var_assignment_59531', subscript_call_result_60006)
        
        # Assigning a Subscript to a Name (line 245):
        
        # Obtaining the type of the subscript
        int_60007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'list' (line 245)
        list_60017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 65), 'list')
        # Adding type elements to the builtin type 'list' instance (line 245)
        # Adding element type (line 245)
        int_60018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60017, int_60018)
        # Adding element type (line 245)
        int_60019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 68), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60017, int_60019)
        # Adding element type (line 245)
        int_60020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 70), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60017, int_60020)
        # Adding element type (line 245)
        int_60021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 73), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60017, int_60021)
        
        comprehension_60022 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 31), list_60017)
        # Assigning a type to the variable 'j' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 31), 'j', comprehension_60022)
        
        # Call to resize(...): (line 245)
        # Processing the call arguments (line 245)
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 245)
        j_60010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 46), 'j', False)
        # Getting the type of 'data' (line 245)
        data_60011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 41), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 245)
        getitem___60012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 41), data_60011, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 245)
        subscript_call_result_60013 = invoke(stypy.reporting.localization.Localization(__file__, 245, 41), getitem___60012, j_60010)
        
        # Getting the type of 'nest' (line 245)
        nest_60014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 50), 'nest', False)
        # Processing the call keyword arguments (line 245)
        kwargs_60015 = {}
        # Getting the type of 'np' (line 245)
        np_60008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 31), 'np', False)
        # Obtaining the member 'resize' of a type (line 245)
        resize_60009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 31), np_60008, 'resize')
        # Calling resize(args, kwargs) (line 245)
        resize_call_result_60016 = invoke(stypy.reporting.localization.Localization(__file__, 245, 31), resize_60009, *[subscript_call_result_60013, nest_60014], **kwargs_60015)
        
        list_60023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 31), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 31), list_60023, resize_call_result_60016)
        # Obtaining the member '__getitem__' of a type (line 245)
        getitem___60024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 8), list_60023, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 245)
        subscript_call_result_60025 = invoke(stypy.reporting.localization.Localization(__file__, 245, 8), getitem___60024, int_60007)
        
        # Assigning a type to the variable 'tuple_var_assignment_59532' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'tuple_var_assignment_59532', subscript_call_result_60025)
        
        # Assigning a Subscript to a Name (line 245):
        
        # Obtaining the type of the subscript
        int_60026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'list' (line 245)
        list_60036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 65), 'list')
        # Adding type elements to the builtin type 'list' instance (line 245)
        # Adding element type (line 245)
        int_60037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60036, int_60037)
        # Adding element type (line 245)
        int_60038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 68), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60036, int_60038)
        # Adding element type (line 245)
        int_60039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 70), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60036, int_60039)
        # Adding element type (line 245)
        int_60040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 73), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60036, int_60040)
        
        comprehension_60041 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 31), list_60036)
        # Assigning a type to the variable 'j' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 31), 'j', comprehension_60041)
        
        # Call to resize(...): (line 245)
        # Processing the call arguments (line 245)
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 245)
        j_60029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 46), 'j', False)
        # Getting the type of 'data' (line 245)
        data_60030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 41), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 245)
        getitem___60031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 41), data_60030, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 245)
        subscript_call_result_60032 = invoke(stypy.reporting.localization.Localization(__file__, 245, 41), getitem___60031, j_60029)
        
        # Getting the type of 'nest' (line 245)
        nest_60033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 50), 'nest', False)
        # Processing the call keyword arguments (line 245)
        kwargs_60034 = {}
        # Getting the type of 'np' (line 245)
        np_60027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 31), 'np', False)
        # Obtaining the member 'resize' of a type (line 245)
        resize_60028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 31), np_60027, 'resize')
        # Calling resize(args, kwargs) (line 245)
        resize_call_result_60035 = invoke(stypy.reporting.localization.Localization(__file__, 245, 31), resize_60028, *[subscript_call_result_60032, nest_60033], **kwargs_60034)
        
        list_60042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 31), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 31), list_60042, resize_call_result_60035)
        # Obtaining the member '__getitem__' of a type (line 245)
        getitem___60043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 8), list_60042, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 245)
        subscript_call_result_60044 = invoke(stypy.reporting.localization.Localization(__file__, 245, 8), getitem___60043, int_60026)
        
        # Assigning a type to the variable 'tuple_var_assignment_59533' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'tuple_var_assignment_59533', subscript_call_result_60044)
        
        # Assigning a Subscript to a Name (line 245):
        
        # Obtaining the type of the subscript
        int_60045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 8), 'int')
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Obtaining an instance of the builtin type 'list' (line 245)
        list_60055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 65), 'list')
        # Adding type elements to the builtin type 'list' instance (line 245)
        # Adding element type (line 245)
        int_60056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60055, int_60056)
        # Adding element type (line 245)
        int_60057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 68), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60055, int_60057)
        # Adding element type (line 245)
        int_60058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 70), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60055, int_60058)
        # Adding element type (line 245)
        int_60059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 73), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 65), list_60055, int_60059)
        
        comprehension_60060 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 31), list_60055)
        # Assigning a type to the variable 'j' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 31), 'j', comprehension_60060)
        
        # Call to resize(...): (line 245)
        # Processing the call arguments (line 245)
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 245)
        j_60048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 46), 'j', False)
        # Getting the type of 'data' (line 245)
        data_60049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 41), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 245)
        getitem___60050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 41), data_60049, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 245)
        subscript_call_result_60051 = invoke(stypy.reporting.localization.Localization(__file__, 245, 41), getitem___60050, j_60048)
        
        # Getting the type of 'nest' (line 245)
        nest_60052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 50), 'nest', False)
        # Processing the call keyword arguments (line 245)
        kwargs_60053 = {}
        # Getting the type of 'np' (line 245)
        np_60046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 31), 'np', False)
        # Obtaining the member 'resize' of a type (line 245)
        resize_60047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 31), np_60046, 'resize')
        # Calling resize(args, kwargs) (line 245)
        resize_call_result_60054 = invoke(stypy.reporting.localization.Localization(__file__, 245, 31), resize_60047, *[subscript_call_result_60051, nest_60052], **kwargs_60053)
        
        list_60061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 31), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 245, 31), list_60061, resize_call_result_60054)
        # Obtaining the member '__getitem__' of a type (line 245)
        getitem___60062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 8), list_60061, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 245)
        subscript_call_result_60063 = invoke(stypy.reporting.localization.Localization(__file__, 245, 8), getitem___60062, int_60045)
        
        # Assigning a type to the variable 'tuple_var_assignment_59534' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'tuple_var_assignment_59534', subscript_call_result_60063)
        
        # Assigning a Name to a Name (line 245):
        # Getting the type of 'tuple_var_assignment_59531' (line 245)
        tuple_var_assignment_59531_60064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'tuple_var_assignment_59531')
        # Assigning a type to the variable 't' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 't', tuple_var_assignment_59531_60064)
        
        # Assigning a Name to a Name (line 245):
        # Getting the type of 'tuple_var_assignment_59532' (line 245)
        tuple_var_assignment_59532_60065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'tuple_var_assignment_59532')
        # Assigning a type to the variable 'c' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 11), 'c', tuple_var_assignment_59532_60065)
        
        # Assigning a Name to a Name (line 245):
        # Getting the type of 'tuple_var_assignment_59533' (line 245)
        tuple_var_assignment_59533_60066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'tuple_var_assignment_59533')
        # Assigning a type to the variable 'fpint' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 14), 'fpint', tuple_var_assignment_59533_60066)
        
        # Assigning a Name to a Name (line 245):
        # Getting the type of 'tuple_var_assignment_59534' (line 245)
        tuple_var_assignment_59534_60067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'tuple_var_assignment_59534')
        # Assigning a type to the variable 'nrdata' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 21), 'nrdata', tuple_var_assignment_59534_60067)
        
        # Assigning a BinOp to a Name (line 247):
        
        # Assigning a BinOp to a Name (line 247):
        
        # Obtaining the type of the subscript
        int_60068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 21), 'int')
        slice_60069 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 247, 15), None, int_60068, None)
        # Getting the type of 'data' (line 247)
        data_60070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 15), 'data')
        # Obtaining the member '__getitem__' of a type (line 247)
        getitem___60071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 15), data_60070, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 247)
        subscript_call_result_60072 = invoke(stypy.reporting.localization.Localization(__file__, 247, 15), getitem___60071, slice_60069)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 247)
        tuple_60073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 247)
        # Adding element type (line 247)
        # Getting the type of 't' (line 247)
        t_60074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 27), 't')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), tuple_60073, t_60074)
        # Adding element type (line 247)
        # Getting the type of 'c' (line 247)
        c_60075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 29), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), tuple_60073, c_60075)
        # Adding element type (line 247)
        # Getting the type of 'n' (line 247)
        n_60076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 31), 'n')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), tuple_60073, n_60076)
        # Adding element type (line 247)
        # Getting the type of 'fpint' (line 247)
        fpint_60077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 33), 'fpint')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), tuple_60073, fpint_60077)
        # Adding element type (line 247)
        # Getting the type of 'nrdata' (line 247)
        nrdata_60078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 39), 'nrdata')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), tuple_60073, nrdata_60078)
        # Adding element type (line 247)
        
        # Obtaining the type of the subscript
        int_60079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 51), 'int')
        # Getting the type of 'data' (line 247)
        data_60080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 46), 'data')
        # Obtaining the member '__getitem__' of a type (line 247)
        getitem___60081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 46), data_60080, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 247)
        subscript_call_result_60082 = invoke(stypy.reporting.localization.Localization(__file__, 247, 46), getitem___60081, int_60079)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), tuple_60073, subscript_call_result_60082)
        
        # Applying the binary operator '+' (line 247)
        result_add_60083 = python_operator(stypy.reporting.localization.Localization(__file__, 247, 15), '+', subscript_call_result_60072, tuple_60073)
        
        # Assigning a type to the variable 'args' (line 247)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 8), 'args', result_add_60083)
        
        # Assigning a Call to a Name (line 248):
        
        # Assigning a Call to a Name (line 248):
        
        # Call to fpcurf1(...): (line 248)
        # Getting the type of 'args' (line 248)
        args_60086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 33), 'args', False)
        # Processing the call keyword arguments (line 248)
        kwargs_60087 = {}
        # Getting the type of 'dfitpack' (line 248)
        dfitpack_60084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 15), 'dfitpack', False)
        # Obtaining the member 'fpcurf1' of a type (line 248)
        fpcurf1_60085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 15), dfitpack_60084, 'fpcurf1')
        # Calling fpcurf1(args, kwargs) (line 248)
        fpcurf1_call_result_60088 = invoke(stypy.reporting.localization.Localization(__file__, 248, 15), fpcurf1_60085, *[args_60086], **kwargs_60087)
        
        # Assigning a type to the variable 'data' (line 248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 8), 'data', fpcurf1_call_result_60088)
        # Getting the type of 'data' (line 249)
        data_60089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 15), 'data')
        # Assigning a type to the variable 'stypy_return_type' (line 249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 8), 'stypy_return_type', data_60089)
        
        # ################# End of '_reset_nest(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_reset_nest' in the type store
        # Getting the type of 'stypy_return_type' (line 237)
        stypy_return_type_60090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60090)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_reset_nest'
        return stypy_return_type_60090


    @norecursion
    def set_smoothing_factor(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'set_smoothing_factor'
        module_type_store = module_type_store.open_function_context('set_smoothing_factor', 251, 4, False)
        # Assigning a type to the variable 'self' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.set_smoothing_factor')
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_param_names_list', ['s'])
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.set_smoothing_factor.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.set_smoothing_factor', ['s'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'set_smoothing_factor', localization, ['s'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'set_smoothing_factor(...)' code ##################

        str_60091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, (-1)), 'str', ' Continue spline computation with the given smoothing\n        factor s and with the knots found at the last call.\n\n        This routine modifies the spline in place.\n\n        ')
        
        # Assigning a Attribute to a Name (line 258):
        
        # Assigning a Attribute to a Name (line 258):
        # Getting the type of 'self' (line 258)
        self_60092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 15), 'self')
        # Obtaining the member '_data' of a type (line 258)
        _data_60093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 15), self_60092, '_data')
        # Assigning a type to the variable 'data' (line 258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 8), 'data', _data_60093)
        
        
        
        # Obtaining the type of the subscript
        int_60094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 16), 'int')
        # Getting the type of 'data' (line 259)
        data_60095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 11), 'data')
        # Obtaining the member '__getitem__' of a type (line 259)
        getitem___60096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 11), data_60095, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 259)
        subscript_call_result_60097 = invoke(stypy.reporting.localization.Localization(__file__, 259, 11), getitem___60096, int_60094)
        
        int_60098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 22), 'int')
        # Applying the binary operator '==' (line 259)
        result_eq_60099 = python_operator(stypy.reporting.localization.Localization(__file__, 259, 11), '==', subscript_call_result_60097, int_60098)
        
        # Testing the type of an if condition (line 259)
        if_condition_60100 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 259, 8), result_eq_60099)
        # Assigning a type to the variable 'if_condition_60100' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'if_condition_60100', if_condition_60100)
        # SSA begins for if statement (line 259)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to warn(...): (line 260)
        # Processing the call arguments (line 260)
        str_60103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 26), 'str', 'smoothing factor unchanged forLSQ spline with fixed knots')
        # Processing the call keyword arguments (line 260)
        kwargs_60104 = {}
        # Getting the type of 'warnings' (line 260)
        warnings_60101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 12), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 260)
        warn_60102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 12), warnings_60101, 'warn')
        # Calling warn(args, kwargs) (line 260)
        warn_call_result_60105 = invoke(stypy.reporting.localization.Localization(__file__, 260, 12), warn_60102, *[str_60103], **kwargs_60104)
        
        # Assigning a type to the variable 'stypy_return_type' (line 262)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 12), 'stypy_return_type', types.NoneType)
        # SSA join for if statement (line 259)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 263):
        
        # Assigning a BinOp to a Name (line 263):
        
        # Obtaining the type of the subscript
        int_60106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 21), 'int')
        slice_60107 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 263, 15), None, int_60106, None)
        # Getting the type of 'data' (line 263)
        data_60108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 15), 'data')
        # Obtaining the member '__getitem__' of a type (line 263)
        getitem___60109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 15), data_60108, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 263)
        subscript_call_result_60110 = invoke(stypy.reporting.localization.Localization(__file__, 263, 15), getitem___60109, slice_60107)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 263)
        tuple_60111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 263)
        # Adding element type (line 263)
        # Getting the type of 's' (line 263)
        s_60112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 27), 's')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 27), tuple_60111, s_60112)
        
        # Applying the binary operator '+' (line 263)
        result_add_60113 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 15), '+', subscript_call_result_60110, tuple_60111)
        
        
        # Obtaining the type of the subscript
        int_60114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 38), 'int')
        slice_60115 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 263, 33), int_60114, None, None)
        # Getting the type of 'data' (line 263)
        data_60116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 33), 'data')
        # Obtaining the member '__getitem__' of a type (line 263)
        getitem___60117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 33), data_60116, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 263)
        subscript_call_result_60118 = invoke(stypy.reporting.localization.Localization(__file__, 263, 33), getitem___60117, slice_60115)
        
        # Applying the binary operator '+' (line 263)
        result_add_60119 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 31), '+', result_add_60113, subscript_call_result_60118)
        
        # Assigning a type to the variable 'args' (line 263)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 8), 'args', result_add_60119)
        
        # Assigning a Call to a Name (line 264):
        
        # Assigning a Call to a Name (line 264):
        
        # Call to fpcurf1(...): (line 264)
        # Getting the type of 'args' (line 264)
        args_60122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 33), 'args', False)
        # Processing the call keyword arguments (line 264)
        kwargs_60123 = {}
        # Getting the type of 'dfitpack' (line 264)
        dfitpack_60120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 15), 'dfitpack', False)
        # Obtaining the member 'fpcurf1' of a type (line 264)
        fpcurf1_60121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 15), dfitpack_60120, 'fpcurf1')
        # Calling fpcurf1(args, kwargs) (line 264)
        fpcurf1_call_result_60124 = invoke(stypy.reporting.localization.Localization(__file__, 264, 15), fpcurf1_60121, *[args_60122], **kwargs_60123)
        
        # Assigning a type to the variable 'data' (line 264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 8), 'data', fpcurf1_call_result_60124)
        
        
        
        # Obtaining the type of the subscript
        int_60125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 16), 'int')
        # Getting the type of 'data' (line 265)
        data_60126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 11), 'data')
        # Obtaining the member '__getitem__' of a type (line 265)
        getitem___60127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 11), data_60126, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 265)
        subscript_call_result_60128 = invoke(stypy.reporting.localization.Localization(__file__, 265, 11), getitem___60127, int_60125)
        
        int_60129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 23), 'int')
        # Applying the binary operator '==' (line 265)
        result_eq_60130 = python_operator(stypy.reporting.localization.Localization(__file__, 265, 11), '==', subscript_call_result_60128, int_60129)
        
        # Testing the type of an if condition (line 265)
        if_condition_60131 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 265, 8), result_eq_60130)
        # Assigning a type to the variable 'if_condition_60131' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 8), 'if_condition_60131', if_condition_60131)
        # SSA begins for if statement (line 265)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 267):
        
        # Assigning a Call to a Name (line 267):
        
        # Call to _reset_nest(...): (line 267)
        # Processing the call arguments (line 267)
        # Getting the type of 'data' (line 267)
        data_60134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 36), 'data', False)
        # Processing the call keyword arguments (line 267)
        kwargs_60135 = {}
        # Getting the type of 'self' (line 267)
        self_60132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 19), 'self', False)
        # Obtaining the member '_reset_nest' of a type (line 267)
        _reset_nest_60133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 19), self_60132, '_reset_nest')
        # Calling _reset_nest(args, kwargs) (line 267)
        _reset_nest_call_result_60136 = invoke(stypy.reporting.localization.Localization(__file__, 267, 19), _reset_nest_60133, *[data_60134], **kwargs_60135)
        
        # Assigning a type to the variable 'data' (line 267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'data', _reset_nest_call_result_60136)
        # SSA join for if statement (line 265)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 268):
        
        # Assigning a Name to a Attribute (line 268):
        # Getting the type of 'data' (line 268)
        data_60137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 21), 'data')
        # Getting the type of 'self' (line 268)
        self_60138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 8), 'self')
        # Setting the type of the member '_data' of a type (line 268)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 8), self_60138, '_data', data_60137)
        
        # Call to _reset_class(...): (line 269)
        # Processing the call keyword arguments (line 269)
        kwargs_60141 = {}
        # Getting the type of 'self' (line 269)
        self_60139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 8), 'self', False)
        # Obtaining the member '_reset_class' of a type (line 269)
        _reset_class_60140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 8), self_60139, '_reset_class')
        # Calling _reset_class(args, kwargs) (line 269)
        _reset_class_call_result_60142 = invoke(stypy.reporting.localization.Localization(__file__, 269, 8), _reset_class_60140, *[], **kwargs_60141)
        
        
        # ################# End of 'set_smoothing_factor(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'set_smoothing_factor' in the type store
        # Getting the type of 'stypy_return_type' (line 251)
        stypy_return_type_60143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60143)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'set_smoothing_factor'
        return stypy_return_type_60143


    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_60144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'int')
        # Getting the type of 'None' (line 271)
        None_60145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 36), 'None')
        defaults = [int_60144, None_60145]
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 271, 4, False)
        # Assigning a type to the variable 'self' (line 272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 272, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.__call__')
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_param_names_list', ['x', 'nu', 'ext'])
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.__call__.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.__call__', ['x', 'nu', 'ext'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, ['x', 'nu', 'ext'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        str_60146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 295, (-1)), 'str', "\n        Evaluate spline (or its nu-th derivative) at positions x.\n\n        Parameters\n        ----------\n        x : array_like\n            A 1-D array of points at which to return the value of the smoothed\n            spline or its derivatives. Note: x can be unordered but the\n            evaluation is more efficient if x is (partially) ordered.\n        nu  : int\n            The order of derivative of the spline to compute.\n        ext : int\n            Controls the value returned for elements of ``x`` not in the\n            interval defined by the knot sequence.\n\n            * if ext=0 or 'extrapolate', return the extrapolated value.\n            * if ext=1 or 'zeros', return 0\n            * if ext=2 or 'raise', raise a ValueError\n            * if ext=3 or 'const', return the boundary value.\n\n            The default value is 0, passed from the initialization of\n            UnivariateSpline.\n\n        ")
        
        # Assigning a Call to a Name (line 296):
        
        # Assigning a Call to a Name (line 296):
        
        # Call to asarray(...): (line 296)
        # Processing the call arguments (line 296)
        # Getting the type of 'x' (line 296)
        x_60149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 23), 'x', False)
        # Processing the call keyword arguments (line 296)
        kwargs_60150 = {}
        # Getting the type of 'np' (line 296)
        np_60147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 296)
        asarray_60148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 12), np_60147, 'asarray')
        # Calling asarray(args, kwargs) (line 296)
        asarray_call_result_60151 = invoke(stypy.reporting.localization.Localization(__file__, 296, 12), asarray_60148, *[x_60149], **kwargs_60150)
        
        # Assigning a type to the variable 'x' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'x', asarray_call_result_60151)
        
        
        # Getting the type of 'x' (line 298)
        x_60152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 11), 'x')
        # Obtaining the member 'size' of a type (line 298)
        size_60153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 11), x_60152, 'size')
        int_60154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 298, 21), 'int')
        # Applying the binary operator '==' (line 298)
        result_eq_60155 = python_operator(stypy.reporting.localization.Localization(__file__, 298, 11), '==', size_60153, int_60154)
        
        # Testing the type of an if condition (line 298)
        if_condition_60156 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 298, 8), result_eq_60155)
        # Assigning a type to the variable 'if_condition_60156' (line 298)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 298, 8), 'if_condition_60156', if_condition_60156)
        # SSA begins for if statement (line 298)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to array(...): (line 299)
        # Processing the call arguments (line 299)
        
        # Obtaining an instance of the builtin type 'list' (line 299)
        list_60158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 299)
        
        # Processing the call keyword arguments (line 299)
        kwargs_60159 = {}
        # Getting the type of 'array' (line 299)
        array_60157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 19), 'array', False)
        # Calling array(args, kwargs) (line 299)
        array_call_result_60160 = invoke(stypy.reporting.localization.Localization(__file__, 299, 19), array_60157, *[list_60158], **kwargs_60159)
        
        # Assigning a type to the variable 'stypy_return_type' (line 299)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 12), 'stypy_return_type', array_call_result_60160)
        # SSA join for if statement (line 298)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 303)
        # Getting the type of 'ext' (line 303)
        ext_60161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 11), 'ext')
        # Getting the type of 'None' (line 303)
        None_60162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 18), 'None')
        
        (may_be_60163, more_types_in_union_60164) = may_be_none(ext_60161, None_60162)

        if may_be_60163:

            if more_types_in_union_60164:
                # Runtime conditional SSA (line 303)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Attribute to a Name (line 304):
            
            # Assigning a Attribute to a Name (line 304):
            # Getting the type of 'self' (line 304)
            self_60165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 18), 'self')
            # Obtaining the member 'ext' of a type (line 304)
            ext_60166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 18), self_60165, 'ext')
            # Assigning a type to the variable 'ext' (line 304)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 304, 12), 'ext', ext_60166)

            if more_types_in_union_60164:
                # Runtime conditional SSA for else branch (line 303)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_60163) or more_types_in_union_60164):
            
            
            # SSA begins for try-except statement (line 306)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
            
            # Assigning a Subscript to a Name (line 307):
            
            # Assigning a Subscript to a Name (line 307):
            
            # Obtaining the type of the subscript
            # Getting the type of 'ext' (line 307)
            ext_60167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 36), 'ext')
            # Getting the type of '_extrap_modes' (line 307)
            _extrap_modes_60168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 22), '_extrap_modes')
            # Obtaining the member '__getitem__' of a type (line 307)
            getitem___60169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 22), _extrap_modes_60168, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 307)
            subscript_call_result_60170 = invoke(stypy.reporting.localization.Localization(__file__, 307, 22), getitem___60169, ext_60167)
            
            # Assigning a type to the variable 'ext' (line 307)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'ext', subscript_call_result_60170)
            # SSA branch for the except part of a try statement (line 306)
            # SSA branch for the except 'KeyError' branch of a try statement (line 306)
            module_type_store.open_ssa_branch('except')
            
            # Call to ValueError(...): (line 309)
            # Processing the call arguments (line 309)
            str_60172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 309, 33), 'str', 'Unknown extrapolation mode %s.')
            # Getting the type of 'ext' (line 309)
            ext_60173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 68), 'ext', False)
            # Applying the binary operator '%' (line 309)
            result_mod_60174 = python_operator(stypy.reporting.localization.Localization(__file__, 309, 33), '%', str_60172, ext_60173)
            
            # Processing the call keyword arguments (line 309)
            kwargs_60175 = {}
            # Getting the type of 'ValueError' (line 309)
            ValueError_60171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 22), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 309)
            ValueError_call_result_60176 = invoke(stypy.reporting.localization.Localization(__file__, 309, 22), ValueError_60171, *[result_mod_60174], **kwargs_60175)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 309, 16), ValueError_call_result_60176, 'raise parameter', BaseException)
            # SSA join for try-except statement (line 306)
            module_type_store = module_type_store.join_ssa_context()
            

            if (may_be_60163 and more_types_in_union_60164):
                # SSA join for if statement (line 303)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to splev(...): (line 310)
        # Processing the call arguments (line 310)
        # Getting the type of 'x' (line 310)
        x_60179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 29), 'x', False)
        # Getting the type of 'self' (line 310)
        self_60180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 32), 'self', False)
        # Obtaining the member '_eval_args' of a type (line 310)
        _eval_args_60181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 32), self_60180, '_eval_args')
        # Processing the call keyword arguments (line 310)
        # Getting the type of 'nu' (line 310)
        nu_60182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 53), 'nu', False)
        keyword_60183 = nu_60182
        # Getting the type of 'ext' (line 310)
        ext_60184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 61), 'ext', False)
        keyword_60185 = ext_60184
        kwargs_60186 = {'der': keyword_60183, 'ext': keyword_60185}
        # Getting the type of 'fitpack' (line 310)
        fitpack_60177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 15), 'fitpack', False)
        # Obtaining the member 'splev' of a type (line 310)
        splev_60178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 15), fitpack_60177, 'splev')
        # Calling splev(args, kwargs) (line 310)
        splev_call_result_60187 = invoke(stypy.reporting.localization.Localization(__file__, 310, 15), splev_60178, *[x_60179, _eval_args_60181], **kwargs_60186)
        
        # Assigning a type to the variable 'stypy_return_type' (line 310)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 310, 8), 'stypy_return_type', splev_call_result_60187)
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 271)
        stypy_return_type_60188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60188)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_60188


    @norecursion
    def get_knots(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_knots'
        module_type_store = module_type_store.open_function_context('get_knots', 312, 4, False)
        # Assigning a type to the variable 'self' (line 313)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 313, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.get_knots')
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_param_names_list', [])
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.get_knots.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.get_knots', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_knots', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_knots(...)' code ##################

        str_60189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, (-1)), 'str', ' Return positions of interior knots of the spline.\n\n        Internally, the knot vector contains ``2*k`` additional boundary knots.\n        ')
        
        # Assigning a Attribute to a Name (line 317):
        
        # Assigning a Attribute to a Name (line 317):
        # Getting the type of 'self' (line 317)
        self_60190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 15), 'self')
        # Obtaining the member '_data' of a type (line 317)
        _data_60191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 15), self_60190, '_data')
        # Assigning a type to the variable 'data' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'data', _data_60191)
        
        # Assigning a Tuple to a Tuple (line 318):
        
        # Assigning a Subscript to a Name (line 318):
        
        # Obtaining the type of the subscript
        int_60192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 19), 'int')
        # Getting the type of 'data' (line 318)
        data_60193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 14), 'data')
        # Obtaining the member '__getitem__' of a type (line 318)
        getitem___60194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 14), data_60193, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 318)
        subscript_call_result_60195 = invoke(stypy.reporting.localization.Localization(__file__, 318, 14), getitem___60194, int_60192)
        
        # Assigning a type to the variable 'tuple_assignment_59535' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'tuple_assignment_59535', subscript_call_result_60195)
        
        # Assigning a Subscript to a Name (line 318):
        
        # Obtaining the type of the subscript
        int_60196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 27), 'int')
        # Getting the type of 'data' (line 318)
        data_60197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 22), 'data')
        # Obtaining the member '__getitem__' of a type (line 318)
        getitem___60198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 22), data_60197, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 318)
        subscript_call_result_60199 = invoke(stypy.reporting.localization.Localization(__file__, 318, 22), getitem___60198, int_60196)
        
        # Assigning a type to the variable 'tuple_assignment_59536' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'tuple_assignment_59536', subscript_call_result_60199)
        
        # Assigning a Name to a Name (line 318):
        # Getting the type of 'tuple_assignment_59535' (line 318)
        tuple_assignment_59535_60200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'tuple_assignment_59535')
        # Assigning a type to the variable 'k' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'k', tuple_assignment_59535_60200)
        
        # Assigning a Name to a Name (line 318):
        # Getting the type of 'tuple_assignment_59536' (line 318)
        tuple_assignment_59536_60201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'tuple_assignment_59536')
        # Assigning a type to the variable 'n' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 10), 'n', tuple_assignment_59536_60201)
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 319)
        k_60202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 23), 'k')
        # Getting the type of 'n' (line 319)
        n_60203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 25), 'n')
        # Getting the type of 'k' (line 319)
        k_60204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 27), 'k')
        # Applying the binary operator '-' (line 319)
        result_sub_60205 = python_operator(stypy.reporting.localization.Localization(__file__, 319, 25), '-', n_60203, k_60204)
        
        slice_60206 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 319, 15), k_60202, result_sub_60205, None)
        
        # Obtaining the type of the subscript
        int_60207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 20), 'int')
        # Getting the type of 'data' (line 319)
        data_60208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 15), 'data')
        # Obtaining the member '__getitem__' of a type (line 319)
        getitem___60209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 15), data_60208, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 319)
        subscript_call_result_60210 = invoke(stypy.reporting.localization.Localization(__file__, 319, 15), getitem___60209, int_60207)
        
        # Obtaining the member '__getitem__' of a type (line 319)
        getitem___60211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 15), subscript_call_result_60210, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 319)
        subscript_call_result_60212 = invoke(stypy.reporting.localization.Localization(__file__, 319, 15), getitem___60211, slice_60206)
        
        # Assigning a type to the variable 'stypy_return_type' (line 319)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 8), 'stypy_return_type', subscript_call_result_60212)
        
        # ################# End of 'get_knots(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_knots' in the type store
        # Getting the type of 'stypy_return_type' (line 312)
        stypy_return_type_60213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60213)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_knots'
        return stypy_return_type_60213


    @norecursion
    def get_coeffs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_coeffs'
        module_type_store = module_type_store.open_function_context('get_coeffs', 321, 4, False)
        # Assigning a type to the variable 'self' (line 322)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.get_coeffs')
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_param_names_list', [])
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.get_coeffs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.get_coeffs', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_coeffs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_coeffs(...)' code ##################

        str_60214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 8), 'str', 'Return spline coefficients.')
        
        # Assigning a Attribute to a Name (line 323):
        
        # Assigning a Attribute to a Name (line 323):
        # Getting the type of 'self' (line 323)
        self_60215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 15), 'self')
        # Obtaining the member '_data' of a type (line 323)
        _data_60216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 15), self_60215, '_data')
        # Assigning a type to the variable 'data' (line 323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 323, 8), 'data', _data_60216)
        
        # Assigning a Tuple to a Tuple (line 324):
        
        # Assigning a Subscript to a Name (line 324):
        
        # Obtaining the type of the subscript
        int_60217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 19), 'int')
        # Getting the type of 'data' (line 324)
        data_60218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 14), 'data')
        # Obtaining the member '__getitem__' of a type (line 324)
        getitem___60219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 14), data_60218, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 324)
        subscript_call_result_60220 = invoke(stypy.reporting.localization.Localization(__file__, 324, 14), getitem___60219, int_60217)
        
        # Assigning a type to the variable 'tuple_assignment_59537' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 8), 'tuple_assignment_59537', subscript_call_result_60220)
        
        # Assigning a Subscript to a Name (line 324):
        
        # Obtaining the type of the subscript
        int_60221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 27), 'int')
        # Getting the type of 'data' (line 324)
        data_60222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 22), 'data')
        # Obtaining the member '__getitem__' of a type (line 324)
        getitem___60223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 22), data_60222, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 324)
        subscript_call_result_60224 = invoke(stypy.reporting.localization.Localization(__file__, 324, 22), getitem___60223, int_60221)
        
        # Assigning a type to the variable 'tuple_assignment_59538' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 8), 'tuple_assignment_59538', subscript_call_result_60224)
        
        # Assigning a Name to a Name (line 324):
        # Getting the type of 'tuple_assignment_59537' (line 324)
        tuple_assignment_59537_60225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 8), 'tuple_assignment_59537')
        # Assigning a type to the variable 'k' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 8), 'k', tuple_assignment_59537_60225)
        
        # Assigning a Name to a Name (line 324):
        # Getting the type of 'tuple_assignment_59538' (line 324)
        tuple_assignment_59538_60226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 8), 'tuple_assignment_59538')
        # Assigning a type to the variable 'n' (line 324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 10), 'n', tuple_assignment_59538_60226)
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 325)
        n_60227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 24), 'n')
        # Getting the type of 'k' (line 325)
        k_60228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 26), 'k')
        # Applying the binary operator '-' (line 325)
        result_sub_60229 = python_operator(stypy.reporting.localization.Localization(__file__, 325, 24), '-', n_60227, k_60228)
        
        int_60230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 28), 'int')
        # Applying the binary operator '-' (line 325)
        result_sub_60231 = python_operator(stypy.reporting.localization.Localization(__file__, 325, 27), '-', result_sub_60229, int_60230)
        
        slice_60232 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 325, 15), None, result_sub_60231, None)
        
        # Obtaining the type of the subscript
        int_60233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 20), 'int')
        # Getting the type of 'data' (line 325)
        data_60234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 15), 'data')
        # Obtaining the member '__getitem__' of a type (line 325)
        getitem___60235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 15), data_60234, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 325)
        subscript_call_result_60236 = invoke(stypy.reporting.localization.Localization(__file__, 325, 15), getitem___60235, int_60233)
        
        # Obtaining the member '__getitem__' of a type (line 325)
        getitem___60237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 15), subscript_call_result_60236, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 325)
        subscript_call_result_60238 = invoke(stypy.reporting.localization.Localization(__file__, 325, 15), getitem___60237, slice_60232)
        
        # Assigning a type to the variable 'stypy_return_type' (line 325)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 325, 8), 'stypy_return_type', subscript_call_result_60238)
        
        # ################# End of 'get_coeffs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_coeffs' in the type store
        # Getting the type of 'stypy_return_type' (line 321)
        stypy_return_type_60239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60239)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_coeffs'
        return stypy_return_type_60239


    @norecursion
    def get_residual(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_residual'
        module_type_store = module_type_store.open_function_context('get_residual', 327, 4, False)
        # Assigning a type to the variable 'self' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.get_residual')
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_param_names_list', [])
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.get_residual.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.get_residual', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_residual', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_residual(...)' code ##################

        str_60240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, (-1)), 'str', 'Return weighted sum of squared residuals of the spline approximation.\n\n           This is equivalent to::\n\n                sum((w[i] * (y[i]-spl(x[i])))**2, axis=0)\n\n        ')
        
        # Obtaining the type of the subscript
        int_60241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 26), 'int')
        # Getting the type of 'self' (line 335)
        self_60242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 15), 'self')
        # Obtaining the member '_data' of a type (line 335)
        _data_60243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 15), self_60242, '_data')
        # Obtaining the member '__getitem__' of a type (line 335)
        getitem___60244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 15), _data_60243, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 335)
        subscript_call_result_60245 = invoke(stypy.reporting.localization.Localization(__file__, 335, 15), getitem___60244, int_60241)
        
        # Assigning a type to the variable 'stypy_return_type' (line 335)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 8), 'stypy_return_type', subscript_call_result_60245)
        
        # ################# End of 'get_residual(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_residual' in the type store
        # Getting the type of 'stypy_return_type' (line 327)
        stypy_return_type_60246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60246)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_residual'
        return stypy_return_type_60246


    @norecursion
    def integral(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'integral'
        module_type_store = module_type_store.open_function_context('integral', 337, 4, False)
        # Assigning a type to the variable 'self' (line 338)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.integral.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.integral.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.integral.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.integral.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.integral')
        UnivariateSpline.integral.__dict__.__setitem__('stypy_param_names_list', ['a', 'b'])
        UnivariateSpline.integral.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.integral.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.integral.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.integral.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.integral.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.integral.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.integral', ['a', 'b'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'integral', localization, ['a', 'b'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'integral(...)' code ##################

        str_60247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, (-1)), 'str', ' Return definite integral of the spline between two given points.\n\n        Parameters\n        ----------\n        a : float\n            Lower limit of integration.\n        b : float\n            Upper limit of integration.\n\n        Returns\n        -------\n        integral : float\n            The value of the definite integral of the spline between limits.\n\n        Examples\n        --------\n        >>> from scipy.interpolate import UnivariateSpline\n        >>> x = np.linspace(0, 3, 11)\n        >>> y = x**2\n        >>> spl = UnivariateSpline(x, y)\n        >>> spl.integral(0, 3)\n        9.0\n\n        which agrees with :math:`\\int x^2 dx = x^3 / 3` between the limits\n        of 0 and 3.\n\n        A caveat is that this routine assumes the spline to be zero outside of\n        the data limits:\n\n        >>> spl.integral(-1, 4)\n        9.0\n        >>> spl.integral(-1, 0)\n        0.0\n\n        ')
        
        # Call to splint(...): (line 373)
        # Getting the type of 'self' (line 373)
        self_60250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 33), 'self', False)
        # Obtaining the member '_eval_args' of a type (line 373)
        _eval_args_60251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 33), self_60250, '_eval_args')
        
        # Obtaining an instance of the builtin type 'tuple' (line 373)
        tuple_60252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 373)
        # Adding element type (line 373)
        # Getting the type of 'a' (line 373)
        a_60253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 50), 'a', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 373, 50), tuple_60252, a_60253)
        # Adding element type (line 373)
        # Getting the type of 'b' (line 373)
        b_60254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 52), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 373, 50), tuple_60252, b_60254)
        
        # Applying the binary operator '+' (line 373)
        result_add_60255 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 33), '+', _eval_args_60251, tuple_60252)
        
        # Processing the call keyword arguments (line 373)
        kwargs_60256 = {}
        # Getting the type of 'dfitpack' (line 373)
        dfitpack_60248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 15), 'dfitpack', False)
        # Obtaining the member 'splint' of a type (line 373)
        splint_60249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 15), dfitpack_60248, 'splint')
        # Calling splint(args, kwargs) (line 373)
        splint_call_result_60257 = invoke(stypy.reporting.localization.Localization(__file__, 373, 15), splint_60249, *[result_add_60255], **kwargs_60256)
        
        # Assigning a type to the variable 'stypy_return_type' (line 373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'stypy_return_type', splint_call_result_60257)
        
        # ################# End of 'integral(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'integral' in the type store
        # Getting the type of 'stypy_return_type' (line 337)
        stypy_return_type_60258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60258)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'integral'
        return stypy_return_type_60258


    @norecursion
    def derivatives(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'derivatives'
        module_type_store = module_type_store.open_function_context('derivatives', 375, 4, False)
        # Assigning a type to the variable 'self' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.derivatives')
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_param_names_list', ['x'])
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.derivatives.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.derivatives', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'derivatives', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'derivatives(...)' code ##################

        str_60259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, (-1)), 'str', ' Return all derivatives of the spline at the point x.\n\n        Parameters\n        ----------\n        x : float\n            The point to evaluate the derivatives at.\n\n        Returns\n        -------\n        der : ndarray, shape(k+1,)\n            Derivatives of the orders 0 to k.\n\n        Examples\n        --------\n        >>> from scipy.interpolate import UnivariateSpline\n        >>> x = np.linspace(0, 3, 11)\n        >>> y = x**2\n        >>> spl = UnivariateSpline(x, y)\n        >>> spl.derivatives(1.5)\n        array([2.25, 3.0, 2.0, 0])\n\n        ')
        
        # Assigning a Call to a Tuple (line 398):
        
        # Assigning a Subscript to a Name (line 398):
        
        # Obtaining the type of the subscript
        int_60260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 8), 'int')
        
        # Call to spalde(...): (line 398)
        # Getting the type of 'self' (line 398)
        self_60263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 34), 'self', False)
        # Obtaining the member '_eval_args' of a type (line 398)
        _eval_args_60264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 34), self_60263, '_eval_args')
        
        # Obtaining an instance of the builtin type 'tuple' (line 398)
        tuple_60265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 398)
        # Adding element type (line 398)
        # Getting the type of 'x' (line 398)
        x_60266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 51), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 398, 51), tuple_60265, x_60266)
        
        # Applying the binary operator '+' (line 398)
        result_add_60267 = python_operator(stypy.reporting.localization.Localization(__file__, 398, 34), '+', _eval_args_60264, tuple_60265)
        
        # Processing the call keyword arguments (line 398)
        kwargs_60268 = {}
        # Getting the type of 'dfitpack' (line 398)
        dfitpack_60261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 16), 'dfitpack', False)
        # Obtaining the member 'spalde' of a type (line 398)
        spalde_60262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 16), dfitpack_60261, 'spalde')
        # Calling spalde(args, kwargs) (line 398)
        spalde_call_result_60269 = invoke(stypy.reporting.localization.Localization(__file__, 398, 16), spalde_60262, *[result_add_60267], **kwargs_60268)
        
        # Obtaining the member '__getitem__' of a type (line 398)
        getitem___60270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 8), spalde_call_result_60269, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 398)
        subscript_call_result_60271 = invoke(stypy.reporting.localization.Localization(__file__, 398, 8), getitem___60270, int_60260)
        
        # Assigning a type to the variable 'tuple_var_assignment_59539' (line 398)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 398, 8), 'tuple_var_assignment_59539', subscript_call_result_60271)
        
        # Assigning a Subscript to a Name (line 398):
        
        # Obtaining the type of the subscript
        int_60272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 8), 'int')
        
        # Call to spalde(...): (line 398)
        # Getting the type of 'self' (line 398)
        self_60275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 34), 'self', False)
        # Obtaining the member '_eval_args' of a type (line 398)
        _eval_args_60276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 34), self_60275, '_eval_args')
        
        # Obtaining an instance of the builtin type 'tuple' (line 398)
        tuple_60277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 398)
        # Adding element type (line 398)
        # Getting the type of 'x' (line 398)
        x_60278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 51), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 398, 51), tuple_60277, x_60278)
        
        # Applying the binary operator '+' (line 398)
        result_add_60279 = python_operator(stypy.reporting.localization.Localization(__file__, 398, 34), '+', _eval_args_60276, tuple_60277)
        
        # Processing the call keyword arguments (line 398)
        kwargs_60280 = {}
        # Getting the type of 'dfitpack' (line 398)
        dfitpack_60273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 16), 'dfitpack', False)
        # Obtaining the member 'spalde' of a type (line 398)
        spalde_60274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 16), dfitpack_60273, 'spalde')
        # Calling spalde(args, kwargs) (line 398)
        spalde_call_result_60281 = invoke(stypy.reporting.localization.Localization(__file__, 398, 16), spalde_60274, *[result_add_60279], **kwargs_60280)
        
        # Obtaining the member '__getitem__' of a type (line 398)
        getitem___60282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 8), spalde_call_result_60281, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 398)
        subscript_call_result_60283 = invoke(stypy.reporting.localization.Localization(__file__, 398, 8), getitem___60282, int_60272)
        
        # Assigning a type to the variable 'tuple_var_assignment_59540' (line 398)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 398, 8), 'tuple_var_assignment_59540', subscript_call_result_60283)
        
        # Assigning a Name to a Name (line 398):
        # Getting the type of 'tuple_var_assignment_59539' (line 398)
        tuple_var_assignment_59539_60284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 8), 'tuple_var_assignment_59539')
        # Assigning a type to the variable 'd' (line 398)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 398, 8), 'd', tuple_var_assignment_59539_60284)
        
        # Assigning a Name to a Name (line 398):
        # Getting the type of 'tuple_var_assignment_59540' (line 398)
        tuple_var_assignment_59540_60285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 8), 'tuple_var_assignment_59540')
        # Assigning a type to the variable 'ier' (line 398)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 398, 10), 'ier', tuple_var_assignment_59540_60285)
        
        
        
        # Getting the type of 'ier' (line 399)
        ier_60286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 15), 'ier')
        int_60287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 22), 'int')
        # Applying the binary operator '==' (line 399)
        result_eq_60288 = python_operator(stypy.reporting.localization.Localization(__file__, 399, 15), '==', ier_60286, int_60287)
        
        # Applying the 'not' unary operator (line 399)
        result_not__60289 = python_operator(stypy.reporting.localization.Localization(__file__, 399, 11), 'not', result_eq_60288)
        
        # Testing the type of an if condition (line 399)
        if_condition_60290 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 399, 8), result_not__60289)
        # Assigning a type to the variable 'if_condition_60290' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 8), 'if_condition_60290', if_condition_60290)
        # SSA begins for if statement (line 399)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 400)
        # Processing the call arguments (line 400)
        str_60292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 29), 'str', 'Error code returned by spalde: %s')
        # Getting the type of 'ier' (line 400)
        ier_60293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 67), 'ier', False)
        # Applying the binary operator '%' (line 400)
        result_mod_60294 = python_operator(stypy.reporting.localization.Localization(__file__, 400, 29), '%', str_60292, ier_60293)
        
        # Processing the call keyword arguments (line 400)
        kwargs_60295 = {}
        # Getting the type of 'ValueError' (line 400)
        ValueError_60291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 400)
        ValueError_call_result_60296 = invoke(stypy.reporting.localization.Localization(__file__, 400, 18), ValueError_60291, *[result_mod_60294], **kwargs_60295)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 400, 12), ValueError_call_result_60296, 'raise parameter', BaseException)
        # SSA join for if statement (line 399)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'd' (line 401)
        d_60297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 15), 'd')
        # Assigning a type to the variable 'stypy_return_type' (line 401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'stypy_return_type', d_60297)
        
        # ################# End of 'derivatives(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'derivatives' in the type store
        # Getting the type of 'stypy_return_type' (line 375)
        stypy_return_type_60298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60298)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'derivatives'
        return stypy_return_type_60298


    @norecursion
    def roots(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'roots'
        module_type_store = module_type_store.open_function_context('roots', 403, 4, False)
        # Assigning a type to the variable 'self' (line 404)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.roots.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.roots.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.roots.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.roots.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.roots')
        UnivariateSpline.roots.__dict__.__setitem__('stypy_param_names_list', [])
        UnivariateSpline.roots.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.roots.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.roots.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.roots.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.roots.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.roots.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.roots', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'roots', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'roots(...)' code ##################

        str_60299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, (-1)), 'str', ' Return the zeros of the spline.\n\n        Restriction: only cubic splines are supported by fitpack.\n        ')
        
        # Assigning a Subscript to a Name (line 408):
        
        # Assigning a Subscript to a Name (line 408):
        
        # Obtaining the type of the subscript
        int_60300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 23), 'int')
        # Getting the type of 'self' (line 408)
        self_60301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 12), 'self')
        # Obtaining the member '_data' of a type (line 408)
        _data_60302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 12), self_60301, '_data')
        # Obtaining the member '__getitem__' of a type (line 408)
        getitem___60303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 12), _data_60302, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 408)
        subscript_call_result_60304 = invoke(stypy.reporting.localization.Localization(__file__, 408, 12), getitem___60303, int_60300)
        
        # Assigning a type to the variable 'k' (line 408)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 408, 8), 'k', subscript_call_result_60304)
        
        
        # Getting the type of 'k' (line 409)
        k_60305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 11), 'k')
        int_60306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 16), 'int')
        # Applying the binary operator '==' (line 409)
        result_eq_60307 = python_operator(stypy.reporting.localization.Localization(__file__, 409, 11), '==', k_60305, int_60306)
        
        # Testing the type of an if condition (line 409)
        if_condition_60308 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 409, 8), result_eq_60307)
        # Assigning a type to the variable 'if_condition_60308' (line 409)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 8), 'if_condition_60308', if_condition_60308)
        # SSA begins for if statement (line 409)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 410):
        
        # Assigning a Subscript to a Name (line 410):
        
        # Obtaining the type of the subscript
        int_60309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 12), 'int')
        
        # Call to sproot(...): (line 410)
        
        # Obtaining the type of the subscript
        int_60312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 56), 'int')
        slice_60313 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 410, 39), None, int_60312, None)
        # Getting the type of 'self' (line 410)
        self_60314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 39), 'self', False)
        # Obtaining the member '_eval_args' of a type (line 410)
        _eval_args_60315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 39), self_60314, '_eval_args')
        # Obtaining the member '__getitem__' of a type (line 410)
        getitem___60316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 39), _eval_args_60315, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 410)
        subscript_call_result_60317 = invoke(stypy.reporting.localization.Localization(__file__, 410, 39), getitem___60316, slice_60313)
        
        # Processing the call keyword arguments (line 410)
        kwargs_60318 = {}
        # Getting the type of 'dfitpack' (line 410)
        dfitpack_60310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 22), 'dfitpack', False)
        # Obtaining the member 'sproot' of a type (line 410)
        sproot_60311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 22), dfitpack_60310, 'sproot')
        # Calling sproot(args, kwargs) (line 410)
        sproot_call_result_60319 = invoke(stypy.reporting.localization.Localization(__file__, 410, 22), sproot_60311, *[subscript_call_result_60317], **kwargs_60318)
        
        # Obtaining the member '__getitem__' of a type (line 410)
        getitem___60320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 12), sproot_call_result_60319, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 410)
        subscript_call_result_60321 = invoke(stypy.reporting.localization.Localization(__file__, 410, 12), getitem___60320, int_60309)
        
        # Assigning a type to the variable 'tuple_var_assignment_59541' (line 410)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'tuple_var_assignment_59541', subscript_call_result_60321)
        
        # Assigning a Subscript to a Name (line 410):
        
        # Obtaining the type of the subscript
        int_60322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 12), 'int')
        
        # Call to sproot(...): (line 410)
        
        # Obtaining the type of the subscript
        int_60325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 56), 'int')
        slice_60326 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 410, 39), None, int_60325, None)
        # Getting the type of 'self' (line 410)
        self_60327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 39), 'self', False)
        # Obtaining the member '_eval_args' of a type (line 410)
        _eval_args_60328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 39), self_60327, '_eval_args')
        # Obtaining the member '__getitem__' of a type (line 410)
        getitem___60329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 39), _eval_args_60328, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 410)
        subscript_call_result_60330 = invoke(stypy.reporting.localization.Localization(__file__, 410, 39), getitem___60329, slice_60326)
        
        # Processing the call keyword arguments (line 410)
        kwargs_60331 = {}
        # Getting the type of 'dfitpack' (line 410)
        dfitpack_60323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 22), 'dfitpack', False)
        # Obtaining the member 'sproot' of a type (line 410)
        sproot_60324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 22), dfitpack_60323, 'sproot')
        # Calling sproot(args, kwargs) (line 410)
        sproot_call_result_60332 = invoke(stypy.reporting.localization.Localization(__file__, 410, 22), sproot_60324, *[subscript_call_result_60330], **kwargs_60331)
        
        # Obtaining the member '__getitem__' of a type (line 410)
        getitem___60333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 12), sproot_call_result_60332, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 410)
        subscript_call_result_60334 = invoke(stypy.reporting.localization.Localization(__file__, 410, 12), getitem___60333, int_60322)
        
        # Assigning a type to the variable 'tuple_var_assignment_59542' (line 410)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'tuple_var_assignment_59542', subscript_call_result_60334)
        
        # Assigning a Subscript to a Name (line 410):
        
        # Obtaining the type of the subscript
        int_60335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 12), 'int')
        
        # Call to sproot(...): (line 410)
        
        # Obtaining the type of the subscript
        int_60338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 56), 'int')
        slice_60339 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 410, 39), None, int_60338, None)
        # Getting the type of 'self' (line 410)
        self_60340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 39), 'self', False)
        # Obtaining the member '_eval_args' of a type (line 410)
        _eval_args_60341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 39), self_60340, '_eval_args')
        # Obtaining the member '__getitem__' of a type (line 410)
        getitem___60342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 39), _eval_args_60341, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 410)
        subscript_call_result_60343 = invoke(stypy.reporting.localization.Localization(__file__, 410, 39), getitem___60342, slice_60339)
        
        # Processing the call keyword arguments (line 410)
        kwargs_60344 = {}
        # Getting the type of 'dfitpack' (line 410)
        dfitpack_60336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 22), 'dfitpack', False)
        # Obtaining the member 'sproot' of a type (line 410)
        sproot_60337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 22), dfitpack_60336, 'sproot')
        # Calling sproot(args, kwargs) (line 410)
        sproot_call_result_60345 = invoke(stypy.reporting.localization.Localization(__file__, 410, 22), sproot_60337, *[subscript_call_result_60343], **kwargs_60344)
        
        # Obtaining the member '__getitem__' of a type (line 410)
        getitem___60346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 12), sproot_call_result_60345, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 410)
        subscript_call_result_60347 = invoke(stypy.reporting.localization.Localization(__file__, 410, 12), getitem___60346, int_60335)
        
        # Assigning a type to the variable 'tuple_var_assignment_59543' (line 410)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'tuple_var_assignment_59543', subscript_call_result_60347)
        
        # Assigning a Name to a Name (line 410):
        # Getting the type of 'tuple_var_assignment_59541' (line 410)
        tuple_var_assignment_59541_60348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'tuple_var_assignment_59541')
        # Assigning a type to the variable 'z' (line 410)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'z', tuple_var_assignment_59541_60348)
        
        # Assigning a Name to a Name (line 410):
        # Getting the type of 'tuple_var_assignment_59542' (line 410)
        tuple_var_assignment_59542_60349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'tuple_var_assignment_59542')
        # Assigning a type to the variable 'm' (line 410)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 14), 'm', tuple_var_assignment_59542_60349)
        
        # Assigning a Name to a Name (line 410):
        # Getting the type of 'tuple_var_assignment_59543' (line 410)
        tuple_var_assignment_59543_60350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'tuple_var_assignment_59543')
        # Assigning a type to the variable 'ier' (line 410)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 16), 'ier', tuple_var_assignment_59543_60350)
        
        
        
        # Getting the type of 'ier' (line 411)
        ier_60351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 19), 'ier')
        int_60352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 26), 'int')
        # Applying the binary operator '==' (line 411)
        result_eq_60353 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 19), '==', ier_60351, int_60352)
        
        # Applying the 'not' unary operator (line 411)
        result_not__60354 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 15), 'not', result_eq_60353)
        
        # Testing the type of an if condition (line 411)
        if_condition_60355 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 411, 12), result_not__60354)
        # Assigning a type to the variable 'if_condition_60355' (line 411)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 12), 'if_condition_60355', if_condition_60355)
        # SSA begins for if statement (line 411)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 412)
        # Processing the call arguments (line 412)
        str_60357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 33), 'str', 'Error code returned by spalde: %s')
        # Getting the type of 'ier' (line 412)
        ier_60358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 71), 'ier', False)
        # Applying the binary operator '%' (line 412)
        result_mod_60359 = python_operator(stypy.reporting.localization.Localization(__file__, 412, 33), '%', str_60357, ier_60358)
        
        # Processing the call keyword arguments (line 412)
        kwargs_60360 = {}
        # Getting the type of 'ValueError' (line 412)
        ValueError_60356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 412)
        ValueError_call_result_60361 = invoke(stypy.reporting.localization.Localization(__file__, 412, 22), ValueError_60356, *[result_mod_60359], **kwargs_60360)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 412, 16), ValueError_call_result_60361, 'raise parameter', BaseException)
        # SSA join for if statement (line 411)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'm' (line 413)
        m_60362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 22), 'm')
        slice_60363 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 413, 19), None, m_60362, None)
        # Getting the type of 'z' (line 413)
        z_60364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 19), 'z')
        # Obtaining the member '__getitem__' of a type (line 413)
        getitem___60365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 413, 19), z_60364, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 413)
        subscript_call_result_60366 = invoke(stypy.reporting.localization.Localization(__file__, 413, 19), getitem___60365, slice_60363)
        
        # Assigning a type to the variable 'stypy_return_type' (line 413)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 413, 12), 'stypy_return_type', subscript_call_result_60366)
        # SSA join for if statement (line 409)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to NotImplementedError(...): (line 414)
        # Processing the call arguments (line 414)
        str_60368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 34), 'str', 'finding roots unsupported for non-cubic splines')
        # Processing the call keyword arguments (line 414)
        kwargs_60369 = {}
        # Getting the type of 'NotImplementedError' (line 414)
        NotImplementedError_60367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 14), 'NotImplementedError', False)
        # Calling NotImplementedError(args, kwargs) (line 414)
        NotImplementedError_call_result_60370 = invoke(stypy.reporting.localization.Localization(__file__, 414, 14), NotImplementedError_60367, *[str_60368], **kwargs_60369)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 414, 8), NotImplementedError_call_result_60370, 'raise parameter', BaseException)
        
        # ################# End of 'roots(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'roots' in the type store
        # Getting the type of 'stypy_return_type' (line 403)
        stypy_return_type_60371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60371)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'roots'
        return stypy_return_type_60371


    @norecursion
    def derivative(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_60372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 417, 27), 'int')
        defaults = [int_60372]
        # Create a new context for function 'derivative'
        module_type_store = module_type_store.open_function_context('derivative', 417, 4, False)
        # Assigning a type to the variable 'self' (line 418)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 418, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.derivative')
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_param_names_list', ['n'])
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.derivative.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.derivative', ['n'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'derivative', localization, ['n'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'derivative(...)' code ##################

        str_60373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, (-1)), 'str', "\n        Construct a new spline representing the derivative of this spline.\n\n        Parameters\n        ----------\n        n : int, optional\n            Order of derivative to evaluate. Default: 1\n\n        Returns\n        -------\n        spline : UnivariateSpline\n            Spline of order k2=k-n representing the derivative of this\n            spline.\n\n        See Also\n        --------\n        splder, antiderivative\n\n        Notes\n        -----\n\n        .. versionadded:: 0.13.0\n\n        Examples\n        --------\n        This can be used for finding maxima of a curve:\n\n        >>> from scipy.interpolate import UnivariateSpline\n        >>> x = np.linspace(0, 10, 70)\n        >>> y = np.sin(x)\n        >>> spl = UnivariateSpline(x, y, k=4, s=0)\n\n        Now, differentiate the spline and find the zeros of the\n        derivative. (NB: `sproot` only works for order 3 splines, so we\n        fit an order 4 spline):\n\n        >>> spl.derivative().roots() / np.pi\n        array([ 0.50000001,  1.5       ,  2.49999998])\n\n        This agrees well with roots :math:`\\pi/2 + n\\pi` of\n        :math:`\\cos(x) = \\sin'(x)`.\n\n        ")
        
        # Assigning a Call to a Name (line 461):
        
        # Assigning a Call to a Name (line 461):
        
        # Call to splder(...): (line 461)
        # Processing the call arguments (line 461)
        # Getting the type of 'self' (line 461)
        self_60376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 29), 'self', False)
        # Obtaining the member '_eval_args' of a type (line 461)
        _eval_args_60377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 29), self_60376, '_eval_args')
        # Getting the type of 'n' (line 461)
        n_60378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 46), 'n', False)
        # Processing the call keyword arguments (line 461)
        kwargs_60379 = {}
        # Getting the type of 'fitpack' (line 461)
        fitpack_60374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 14), 'fitpack', False)
        # Obtaining the member 'splder' of a type (line 461)
        splder_60375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 14), fitpack_60374, 'splder')
        # Calling splder(args, kwargs) (line 461)
        splder_call_result_60380 = invoke(stypy.reporting.localization.Localization(__file__, 461, 14), splder_60375, *[_eval_args_60377, n_60378], **kwargs_60379)
        
        # Assigning a type to the variable 'tck' (line 461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 8), 'tck', splder_call_result_60380)
        
        # Call to _from_tck(...): (line 462)
        # Processing the call arguments (line 462)
        # Getting the type of 'tck' (line 462)
        tck_60383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 42), 'tck', False)
        # Getting the type of 'self' (line 462)
        self_60384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 47), 'self', False)
        # Obtaining the member 'ext' of a type (line 462)
        ext_60385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 47), self_60384, 'ext')
        # Processing the call keyword arguments (line 462)
        kwargs_60386 = {}
        # Getting the type of 'UnivariateSpline' (line 462)
        UnivariateSpline_60381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 15), 'UnivariateSpline', False)
        # Obtaining the member '_from_tck' of a type (line 462)
        _from_tck_60382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 15), UnivariateSpline_60381, '_from_tck')
        # Calling _from_tck(args, kwargs) (line 462)
        _from_tck_call_result_60387 = invoke(stypy.reporting.localization.Localization(__file__, 462, 15), _from_tck_60382, *[tck_60383, ext_60385], **kwargs_60386)
        
        # Assigning a type to the variable 'stypy_return_type' (line 462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 8), 'stypy_return_type', _from_tck_call_result_60387)
        
        # ################# End of 'derivative(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'derivative' in the type store
        # Getting the type of 'stypy_return_type' (line 417)
        stypy_return_type_60388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60388)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'derivative'
        return stypy_return_type_60388


    @norecursion
    def antiderivative(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_60389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 31), 'int')
        defaults = [int_60389]
        # Create a new context for function 'antiderivative'
        module_type_store = module_type_store.open_function_context('antiderivative', 464, 4, False)
        # Assigning a type to the variable 'self' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_localization', localization)
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_type_store', module_type_store)
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_function_name', 'UnivariateSpline.antiderivative')
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_param_names_list', ['n'])
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_varargs_param_name', None)
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_kwargs_param_name', None)
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_call_defaults', defaults)
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_call_varargs', varargs)
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        UnivariateSpline.antiderivative.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'UnivariateSpline.antiderivative', ['n'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'antiderivative', localization, ['n'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'antiderivative(...)' code ##################

        str_60390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, (-1)), 'str', '\n        Construct a new spline representing the antiderivative of this spline.\n\n        Parameters\n        ----------\n        n : int, optional\n            Order of antiderivative to evaluate. Default: 1\n\n        Returns\n        -------\n        spline : UnivariateSpline\n            Spline of order k2=k+n representing the antiderivative of this\n            spline.\n\n        Notes\n        -----\n\n        .. versionadded:: 0.13.0\n\n        See Also\n        --------\n        splantider, derivative\n\n        Examples\n        --------\n        >>> from scipy.interpolate import UnivariateSpline\n        >>> x = np.linspace(0, np.pi/2, 70)\n        >>> y = 1 / np.sqrt(1 - 0.8*np.sin(x)**2)\n        >>> spl = UnivariateSpline(x, y, s=0)\n\n        The derivative is the inverse operation of the antiderivative,\n        although some floating point error accumulates:\n\n        >>> spl(1.7), spl.antiderivative().derivative()(1.7)\n        (array(2.1565429877197317), array(2.1565429877201865))\n\n        Antiderivative can be used to evaluate definite integrals:\n\n        >>> ispl = spl.antiderivative()\n        >>> ispl(np.pi/2) - ispl(0)\n        2.2572053588768486\n\n        This is indeed an approximation to the complete elliptic integral\n        :math:`K(m) = \\int_0^{\\pi/2} [1 - m\\sin^2 x]^{-1/2} dx`:\n\n        >>> from scipy.special import ellipk\n        >>> ellipk(0.8)\n        2.2572053268208538\n\n        ')
        
        # Assigning a Call to a Name (line 515):
        
        # Assigning a Call to a Name (line 515):
        
        # Call to splantider(...): (line 515)
        # Processing the call arguments (line 515)
        # Getting the type of 'self' (line 515)
        self_60393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 33), 'self', False)
        # Obtaining the member '_eval_args' of a type (line 515)
        _eval_args_60394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 33), self_60393, '_eval_args')
        # Getting the type of 'n' (line 515)
        n_60395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 50), 'n', False)
        # Processing the call keyword arguments (line 515)
        kwargs_60396 = {}
        # Getting the type of 'fitpack' (line 515)
        fitpack_60391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 14), 'fitpack', False)
        # Obtaining the member 'splantider' of a type (line 515)
        splantider_60392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 14), fitpack_60391, 'splantider')
        # Calling splantider(args, kwargs) (line 515)
        splantider_call_result_60397 = invoke(stypy.reporting.localization.Localization(__file__, 515, 14), splantider_60392, *[_eval_args_60394, n_60395], **kwargs_60396)
        
        # Assigning a type to the variable 'tck' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'tck', splantider_call_result_60397)
        
        # Call to _from_tck(...): (line 516)
        # Processing the call arguments (line 516)
        # Getting the type of 'tck' (line 516)
        tck_60400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 42), 'tck', False)
        # Getting the type of 'self' (line 516)
        self_60401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 47), 'self', False)
        # Obtaining the member 'ext' of a type (line 516)
        ext_60402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 47), self_60401, 'ext')
        # Processing the call keyword arguments (line 516)
        kwargs_60403 = {}
        # Getting the type of 'UnivariateSpline' (line 516)
        UnivariateSpline_60398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 15), 'UnivariateSpline', False)
        # Obtaining the member '_from_tck' of a type (line 516)
        _from_tck_60399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 15), UnivariateSpline_60398, '_from_tck')
        # Calling _from_tck(args, kwargs) (line 516)
        _from_tck_call_result_60404 = invoke(stypy.reporting.localization.Localization(__file__, 516, 15), _from_tck_60399, *[tck_60400, ext_60402], **kwargs_60403)
        
        # Assigning a type to the variable 'stypy_return_type' (line 516)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 516, 8), 'stypy_return_type', _from_tck_call_result_60404)
        
        # ################# End of 'antiderivative(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'antiderivative' in the type store
        # Getting the type of 'stypy_return_type' (line 464)
        stypy_return_type_60405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60405)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'antiderivative'
        return stypy_return_type_60405


# Assigning a type to the variable 'UnivariateSpline' (line 70)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 70, 0), 'UnivariateSpline', UnivariateSpline)
# Declaration of the 'InterpolatedUnivariateSpline' class
# Getting the type of 'UnivariateSpline' (line 519)
UnivariateSpline_60406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 35), 'UnivariateSpline')

class InterpolatedUnivariateSpline(UnivariateSpline_60406, ):
    str_60407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, (-1)), 'str', "\n    One-dimensional interpolating spline for a given set of data points.\n\n    Fits a spline y = spl(x) of degree `k` to the provided `x`, `y` data. Spline\n    function passes through all provided points. Equivalent to\n    `UnivariateSpline` with  s=0.\n\n    Parameters\n    ----------\n    x : (N,) array_like\n        Input dimension of data points -- must be increasing\n    y : (N,) array_like\n        input dimension of data points\n    w : (N,) array_like, optional\n        Weights for spline fitting.  Must be positive.  If None (default),\n        weights are all equal.\n    bbox : (2,) array_like, optional\n        2-sequence specifying the boundary of the approximation interval. If\n        None (default), ``bbox=[x[0], x[-1]]``.\n    k : int, optional\n        Degree of the smoothing spline.  Must be 1 <= `k` <= 5.\n    ext : int or str, optional\n        Controls the extrapolation mode for elements\n        not in the interval defined by the knot sequence.\n\n        * if ext=0 or 'extrapolate', return the extrapolated value.\n        * if ext=1 or 'zeros', return 0\n        * if ext=2 or 'raise', raise a ValueError\n        * if ext=3 of 'const', return the boundary value.\n\n        The default value is 0.\n\n    check_finite : bool, optional\n        Whether to check that the input arrays contain only finite numbers.\n        Disabling may give a performance gain, but may result in problems\n        (crashes, non-termination or non-sensical results) if the inputs\n        do contain infinities or NaNs.\n        Default is False.\n\n    See Also\n    --------\n    UnivariateSpline : Superclass -- allows knots to be selected by a\n        smoothing condition\n    LSQUnivariateSpline : spline for which knots are user-selected\n    splrep : An older, non object-oriented wrapping of FITPACK\n    splev, sproot, splint, spalde\n    BivariateSpline : A similar class for two-dimensional spline interpolation\n\n    Notes\n    -----\n    The number of data points must be larger than the spline degree `k`.\n\n    Examples\n    --------\n    >>> import matplotlib.pyplot as plt\n    >>> from scipy.interpolate import InterpolatedUnivariateSpline\n    >>> x = np.linspace(-3, 3, 50)\n    >>> y = np.exp(-x**2) + 0.1 * np.random.randn(50)\n    >>> spl = InterpolatedUnivariateSpline(x, y)\n    >>> plt.plot(x, y, 'ro', ms=5)\n    >>> xs = np.linspace(-3, 3, 1000)\n    >>> plt.plot(xs, spl(xs), 'g', lw=3, alpha=0.7)\n    >>> plt.show()\n\n    Notice that the ``spl(x)`` interpolates `y`:\n\n    >>> spl.get_residual()\n    0.0\n\n    ")

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 590)
        None_60408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 31), 'None')
        
        # Obtaining an instance of the builtin type 'list' (line 590)
        list_60409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 590)
        # Adding element type (line 590)
        # Getting the type of 'None' (line 590)
        None_60410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 43), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 590, 42), list_60409, None_60410)
        
        int_60411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 49), 'int')
        # Applying the binary operator '*' (line 590)
        result_mul_60412 = python_operator(stypy.reporting.localization.Localization(__file__, 590, 42), '*', list_60409, int_60411)
        
        int_60413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 54), 'int')
        int_60414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 21), 'int')
        # Getting the type of 'False' (line 591)
        False_60415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 37), 'False')
        defaults = [None_60408, result_mul_60412, int_60413, int_60414, False_60415]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 590, 4, False)
        # Assigning a type to the variable 'self' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'InterpolatedUnivariateSpline.__init__', ['x', 'y', 'w', 'bbox', 'k', 'ext', 'check_finite'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['x', 'y', 'w', 'bbox', 'k', 'ext', 'check_finite'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Getting the type of 'check_finite' (line 593)
        check_finite_60416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 11), 'check_finite')
        # Testing the type of an if condition (line 593)
        if_condition_60417 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 593, 8), check_finite_60416)
        # Assigning a type to the variable 'if_condition_60417' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'if_condition_60417', if_condition_60417)
        # SSA begins for if statement (line 593)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a IfExp to a Name (line 594):
        
        # Assigning a IfExp to a Name (line 594):
        
        
        # Getting the type of 'w' (line 594)
        w_60418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 47), 'w')
        # Getting the type of 'None' (line 594)
        None_60419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 56), 'None')
        # Applying the binary operator 'isnot' (line 594)
        result_is_not_60420 = python_operator(stypy.reporting.localization.Localization(__file__, 594, 47), 'isnot', w_60418, None_60419)
        
        # Testing the type of an if expression (line 594)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 594, 23), result_is_not_60420)
        # SSA begins for if expression (line 594)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to all(...): (line 594)
        # Processing the call keyword arguments (line 594)
        kwargs_60427 = {}
        
        # Call to isfinite(...): (line 594)
        # Processing the call arguments (line 594)
        # Getting the type of 'w' (line 594)
        w_60423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 35), 'w', False)
        # Processing the call keyword arguments (line 594)
        kwargs_60424 = {}
        # Getting the type of 'np' (line 594)
        np_60421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 23), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 594)
        isfinite_60422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 23), np_60421, 'isfinite')
        # Calling isfinite(args, kwargs) (line 594)
        isfinite_call_result_60425 = invoke(stypy.reporting.localization.Localization(__file__, 594, 23), isfinite_60422, *[w_60423], **kwargs_60424)
        
        # Obtaining the member 'all' of a type (line 594)
        all_60426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 23), isfinite_call_result_60425, 'all')
        # Calling all(args, kwargs) (line 594)
        all_call_result_60428 = invoke(stypy.reporting.localization.Localization(__file__, 594, 23), all_60426, *[], **kwargs_60427)
        
        # SSA branch for the else part of an if expression (line 594)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'True' (line 594)
        True_60429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 66), 'True')
        # SSA join for if expression (line 594)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_60430 = union_type.UnionType.add(all_call_result_60428, True_60429)
        
        # Assigning a type to the variable 'w_finite' (line 594)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 12), 'w_finite', if_exp_60430)
        
        
        # Evaluating a boolean operation
        
        
        # Call to all(...): (line 595)
        # Processing the call keyword arguments (line 595)
        kwargs_60437 = {}
        
        # Call to isfinite(...): (line 595)
        # Processing the call arguments (line 595)
        # Getting the type of 'x' (line 595)
        x_60433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 32), 'x', False)
        # Processing the call keyword arguments (line 595)
        kwargs_60434 = {}
        # Getting the type of 'np' (line 595)
        np_60431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 20), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 595)
        isfinite_60432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 20), np_60431, 'isfinite')
        # Calling isfinite(args, kwargs) (line 595)
        isfinite_call_result_60435 = invoke(stypy.reporting.localization.Localization(__file__, 595, 20), isfinite_60432, *[x_60433], **kwargs_60434)
        
        # Obtaining the member 'all' of a type (line 595)
        all_60436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 20), isfinite_call_result_60435, 'all')
        # Calling all(args, kwargs) (line 595)
        all_call_result_60438 = invoke(stypy.reporting.localization.Localization(__file__, 595, 20), all_60436, *[], **kwargs_60437)
        
        # Applying the 'not' unary operator (line 595)
        result_not__60439 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 16), 'not', all_call_result_60438)
        
        
        
        # Call to all(...): (line 595)
        # Processing the call keyword arguments (line 595)
        kwargs_60446 = {}
        
        # Call to isfinite(...): (line 595)
        # Processing the call arguments (line 595)
        # Getting the type of 'y' (line 595)
        y_60442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 60), 'y', False)
        # Processing the call keyword arguments (line 595)
        kwargs_60443 = {}
        # Getting the type of 'np' (line 595)
        np_60440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 48), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 595)
        isfinite_60441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 48), np_60440, 'isfinite')
        # Calling isfinite(args, kwargs) (line 595)
        isfinite_call_result_60444 = invoke(stypy.reporting.localization.Localization(__file__, 595, 48), isfinite_60441, *[y_60442], **kwargs_60443)
        
        # Obtaining the member 'all' of a type (line 595)
        all_60445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 48), isfinite_call_result_60444, 'all')
        # Calling all(args, kwargs) (line 595)
        all_call_result_60447 = invoke(stypy.reporting.localization.Localization(__file__, 595, 48), all_60445, *[], **kwargs_60446)
        
        # Applying the 'not' unary operator (line 595)
        result_not__60448 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 44), 'not', all_call_result_60447)
        
        # Applying the binary operator 'or' (line 595)
        result_or_keyword_60449 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 16), 'or', result_not__60439, result_not__60448)
        
        # Getting the type of 'w_finite' (line 596)
        w_finite_60450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 24), 'w_finite')
        # Applying the 'not' unary operator (line 596)
        result_not__60451 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 20), 'not', w_finite_60450)
        
        # Applying the binary operator 'or' (line 595)
        result_or_keyword_60452 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 16), 'or', result_or_keyword_60449, result_not__60451)
        
        # Testing the type of an if condition (line 595)
        if_condition_60453 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 595, 12), result_or_keyword_60452)
        # Assigning a type to the variable 'if_condition_60453' (line 595)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 12), 'if_condition_60453', if_condition_60453)
        # SSA begins for if statement (line 595)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 597)
        # Processing the call arguments (line 597)
        str_60455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 33), 'str', 'Input must not contain NaNs or infs.')
        # Processing the call keyword arguments (line 597)
        kwargs_60456 = {}
        # Getting the type of 'ValueError' (line 597)
        ValueError_60454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 597)
        ValueError_call_result_60457 = invoke(stypy.reporting.localization.Localization(__file__, 597, 22), ValueError_60454, *[str_60455], **kwargs_60456)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 597, 16), ValueError_call_result_60457, 'raise parameter', BaseException)
        # SSA join for if statement (line 595)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 593)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to all(...): (line 598)
        # Processing the call arguments (line 598)
        
        
        # Call to diff(...): (line 598)
        # Processing the call arguments (line 598)
        # Getting the type of 'x' (line 598)
        x_60460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 24), 'x', False)
        # Processing the call keyword arguments (line 598)
        kwargs_60461 = {}
        # Getting the type of 'diff' (line 598)
        diff_60459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 19), 'diff', False)
        # Calling diff(args, kwargs) (line 598)
        diff_call_result_60462 = invoke(stypy.reporting.localization.Localization(__file__, 598, 19), diff_60459, *[x_60460], **kwargs_60461)
        
        float_60463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 29), 'float')
        # Applying the binary operator '>' (line 598)
        result_gt_60464 = python_operator(stypy.reporting.localization.Localization(__file__, 598, 19), '>', diff_call_result_60462, float_60463)
        
        # Processing the call keyword arguments (line 598)
        kwargs_60465 = {}
        # Getting the type of 'all' (line 598)
        all_60458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 15), 'all', False)
        # Calling all(args, kwargs) (line 598)
        all_call_result_60466 = invoke(stypy.reporting.localization.Localization(__file__, 598, 15), all_60458, *[result_gt_60464], **kwargs_60465)
        
        # Applying the 'not' unary operator (line 598)
        result_not__60467 = python_operator(stypy.reporting.localization.Localization(__file__, 598, 11), 'not', all_call_result_60466)
        
        # Testing the type of an if condition (line 598)
        if_condition_60468 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 598, 8), result_not__60467)
        # Assigning a type to the variable 'if_condition_60468' (line 598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'if_condition_60468', if_condition_60468)
        # SSA begins for if statement (line 598)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 599)
        # Processing the call arguments (line 599)
        str_60470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 29), 'str', 'x must be strictly increasing')
        # Processing the call keyword arguments (line 599)
        kwargs_60471 = {}
        # Getting the type of 'ValueError' (line 599)
        ValueError_60469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 599)
        ValueError_call_result_60472 = invoke(stypy.reporting.localization.Localization(__file__, 599, 18), ValueError_60469, *[str_60470], **kwargs_60471)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 599, 12), ValueError_call_result_60472, 'raise parameter', BaseException)
        # SSA join for if statement (line 598)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 602):
        
        # Assigning a Call to a Attribute (line 602):
        
        # Call to fpcurf0(...): (line 602)
        # Processing the call arguments (line 602)
        # Getting the type of 'x' (line 602)
        x_60475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 38), 'x', False)
        # Getting the type of 'y' (line 602)
        y_60476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 40), 'y', False)
        # Getting the type of 'k' (line 602)
        k_60477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 42), 'k', False)
        # Processing the call keyword arguments (line 602)
        # Getting the type of 'w' (line 602)
        w_60478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 46), 'w', False)
        keyword_60479 = w_60478
        
        # Obtaining the type of the subscript
        int_60480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 46), 'int')
        # Getting the type of 'bbox' (line 603)
        bbox_60481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 41), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 603)
        getitem___60482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 41), bbox_60481, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 603)
        subscript_call_result_60483 = invoke(stypy.reporting.localization.Localization(__file__, 603, 41), getitem___60482, int_60480)
        
        keyword_60484 = subscript_call_result_60483
        
        # Obtaining the type of the subscript
        int_60485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 57), 'int')
        # Getting the type of 'bbox' (line 603)
        bbox_60486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 52), 'bbox', False)
        # Obtaining the member '__getitem__' of a type (line 603)
        getitem___60487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 52), bbox_60486, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 603)
        subscript_call_result_60488 = invoke(stypy.reporting.localization.Localization(__file__, 603, 52), getitem___60487, int_60485)
        
        keyword_60489 = subscript_call_result_60488
        int_60490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 62), 'int')
        keyword_60491 = int_60490
        kwargs_60492 = {'xb': keyword_60484, 's': keyword_60491, 'w': keyword_60479, 'xe': keyword_60489}
        # Getting the type of 'dfitpack' (line 602)
        dfitpack_60473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 21), 'dfitpack', False)
        # Obtaining the member 'fpcurf0' of a type (line 602)
        fpcurf0_60474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 21), dfitpack_60473, 'fpcurf0')
        # Calling fpcurf0(args, kwargs) (line 602)
        fpcurf0_call_result_60493 = invoke(stypy.reporting.localization.Localization(__file__, 602, 21), fpcurf0_60474, *[x_60475, y_60476, k_60477], **kwargs_60492)
        
        # Getting the type of 'self' (line 602)
        self_60494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 8), 'self')
        # Setting the type of the member '_data' of a type (line 602)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 8), self_60494, '_data', fpcurf0_call_result_60493)
        
        # Call to _reset_class(...): (line 604)
        # Processing the call keyword arguments (line 604)
        kwargs_60497 = {}
        # Getting the type of 'self' (line 604)
        self_60495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'self', False)
        # Obtaining the member '_reset_class' of a type (line 604)
        _reset_class_60496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 8), self_60495, '_reset_class')
        # Calling _reset_class(args, kwargs) (line 604)
        _reset_class_call_result_60498 = invoke(stypy.reporting.localization.Localization(__file__, 604, 8), _reset_class_60496, *[], **kwargs_60497)
        
        
        
        # SSA begins for try-except statement (line 606)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Subscript to a Attribute (line 607):
        
        # Assigning a Subscript to a Attribute (line 607):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ext' (line 607)
        ext_60499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 37), 'ext')
        # Getting the type of '_extrap_modes' (line 607)
        _extrap_modes_60500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 23), '_extrap_modes')
        # Obtaining the member '__getitem__' of a type (line 607)
        getitem___60501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 23), _extrap_modes_60500, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 607)
        subscript_call_result_60502 = invoke(stypy.reporting.localization.Localization(__file__, 607, 23), getitem___60501, ext_60499)
        
        # Getting the type of 'self' (line 607)
        self_60503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 12), 'self')
        # Setting the type of the member 'ext' of a type (line 607)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 12), self_60503, 'ext', subscript_call_result_60502)
        # SSA branch for the except part of a try statement (line 606)
        # SSA branch for the except 'KeyError' branch of a try statement (line 606)
        module_type_store.open_ssa_branch('except')
        
        # Call to ValueError(...): (line 609)
        # Processing the call arguments (line 609)
        str_60505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 29), 'str', 'Unknown extrapolation mode %s.')
        # Getting the type of 'ext' (line 609)
        ext_60506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 64), 'ext', False)
        # Applying the binary operator '%' (line 609)
        result_mod_60507 = python_operator(stypy.reporting.localization.Localization(__file__, 609, 29), '%', str_60505, ext_60506)
        
        # Processing the call keyword arguments (line 609)
        kwargs_60508 = {}
        # Getting the type of 'ValueError' (line 609)
        ValueError_60504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 609)
        ValueError_call_result_60509 = invoke(stypy.reporting.localization.Localization(__file__, 609, 18), ValueError_60504, *[result_mod_60507], **kwargs_60508)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 609, 12), ValueError_call_result_60509, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 606)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'InterpolatedUnivariateSpline' (line 519)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 519, 0), 'InterpolatedUnivariateSpline', InterpolatedUnivariateSpline)

# Assigning a Str to a Name (line 612):

# Assigning a Str to a Name (line 612):
str_60510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, (-1)), 'str', 'The input parameters have been rejected by fpchec. This means that at least one of the following conditions is violated:\n\n1) k+1 <= n-k-1 <= m\n2) t(1) <= t(2) <= ... <= t(k+1)\n   t(n-k) <= t(n-k+1) <= ... <= t(n)\n3) t(k+1) < t(k+2) < ... < t(n-k)\n4) t(k+1) <= x(i) <= t(n-k)\n5) The conditions specified by Schoenberg and Whitney must hold\n   for at least one subset of data points, i.e., there must be a\n   subset of data points y(j) such that\n       t(j) < y(j) < t(j+k+1), j=1,2,...,n-k-1\n')
# Assigning a type to the variable '_fpchec_error_string' (line 612)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 0), '_fpchec_error_string', str_60510)
# Declaration of the 'LSQUnivariateSpline' class
# Getting the type of 'UnivariateSpline' (line 627)
UnivariateSpline_60511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 26), 'UnivariateSpline')

class LSQUnivariateSpline(UnivariateSpline_60511, ):
    str_60512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, (-1)), 'str', "\n    One-dimensional spline with explicit internal knots.\n\n    Fits a spline y = spl(x) of degree `k` to the provided `x`, `y` data.  `t`\n    specifies the internal knots of the spline\n\n    Parameters\n    ----------\n    x : (N,) array_like\n        Input dimension of data points -- must be increasing\n    y : (N,) array_like\n        Input dimension of data points\n    t : (M,) array_like\n        interior knots of the spline.  Must be in ascending order and::\n\n            bbox[0] < t[0] < ... < t[-1] < bbox[-1]\n\n    w : (N,) array_like, optional\n        weights for spline fitting.  Must be positive.  If None (default),\n        weights are all equal.\n    bbox : (2,) array_like, optional\n        2-sequence specifying the boundary of the approximation interval. If\n        None (default), ``bbox = [x[0], x[-1]]``.\n    k : int, optional\n        Degree of the smoothing spline.  Must be 1 <= `k` <= 5.\n        Default is k=3, a cubic spline.\n    ext : int or str, optional\n        Controls the extrapolation mode for elements\n        not in the interval defined by the knot sequence.\n\n        * if ext=0 or 'extrapolate', return the extrapolated value.\n        * if ext=1 or 'zeros', return 0\n        * if ext=2 or 'raise', raise a ValueError\n        * if ext=3 of 'const', return the boundary value.\n\n        The default value is 0.\n\n    check_finite : bool, optional\n        Whether to check that the input arrays contain only finite numbers.\n        Disabling may give a performance gain, but may result in problems\n        (crashes, non-termination or non-sensical results) if the inputs\n        do contain infinities or NaNs.\n        Default is False.\n\n    Raises\n    ------\n    ValueError\n        If the interior knots do not satisfy the Schoenberg-Whitney conditions\n\n    See Also\n    --------\n    UnivariateSpline : Superclass -- knots are specified by setting a\n        smoothing condition\n    InterpolatedUnivariateSpline : spline passing through all points\n    splrep : An older, non object-oriented wrapping of FITPACK\n    splev, sproot, splint, spalde\n    BivariateSpline : A similar class for two-dimensional spline interpolation\n\n    Notes\n    -----\n    The number of data points must be larger than the spline degree `k`.\n\n    Knots `t` must satisfy the Schoenberg-Whitney conditions,\n    i.e., there must be a subset of data points ``x[j]`` such that\n    ``t[j] < x[j] < t[j+k+1]``, for ``j=0, 1,...,n-k-2``.\n\n    Examples\n    --------\n    >>> from scipy.interpolate import LSQUnivariateSpline, UnivariateSpline\n    >>> import matplotlib.pyplot as plt\n    >>> x = np.linspace(-3, 3, 50)\n    >>> y = np.exp(-x**2) + 0.1 * np.random.randn(50)\n\n    Fit a smoothing spline with a pre-defined internal knots:\n\n    >>> t = [-1, 0, 1]\n    >>> spl = LSQUnivariateSpline(x, y, t)\n\n    >>> xs = np.linspace(-3, 3, 1000)\n    >>> plt.plot(x, y, 'ro', ms=5)\n    >>> plt.plot(xs, spl(xs), 'g-', lw=3)\n    >>> plt.show()\n\n    Check the knot vector:\n\n    >>> spl.get_knots()\n    array([-3., -1., 0., 1., 3.])\n\n    Constructing lsq spline using the knots from another spline:\n\n    >>> x = np.arange(10)\n    >>> s = UnivariateSpline(x, x, s=0)\n    >>> s.get_knots()\n    array([ 0.,  2.,  3.,  4.,  5.,  6.,  7.,  9.])\n    >>> knt = s.get_knots()\n    >>> s1 = LSQUnivariateSpline(x, x, knt[1:-1])    # Chop 1st and last knot\n    >>> s1.get_knots()\n    array([ 0.,  2.,  3.,  4.,  5.,  6.,  7.,  9.])\n\n    ")

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 729)
        None_60513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 34), 'None')
        
        # Obtaining an instance of the builtin type 'list' (line 729)
        list_60514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 729)
        # Adding element type (line 729)
        # Getting the type of 'None' (line 729)
        None_60515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 46), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 45), list_60514, None_60515)
        
        int_60516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 52), 'int')
        # Applying the binary operator '*' (line 729)
        result_mul_60517 = python_operator(stypy.reporting.localization.Localization(__file__, 729, 45), '*', list_60514, int_60516)
        
        int_60518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 57), 'int')
        int_60519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 21), 'int')
        # Getting the type of 'False' (line 730)
        False_60520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 37), 'False')
        defaults = [None_60513, result_mul_60517, int_60518, int_60519, False_60520]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 729, 4, False)
        # Assigning a type to the variable 'self' (line 730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'LSQUnivariateSpline.__init__', ['x', 'y', 't', 'w', 'bbox', 'k', 'ext', 'check_finite'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['x', 'y', 't', 'w', 'bbox', 'k', 'ext', 'check_finite'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Getting the type of 'check_finite' (line 732)
        check_finite_60521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 11), 'check_finite')
        # Testing the type of an if condition (line 732)
        if_condition_60522 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 732, 8), check_finite_60521)
        # Assigning a type to the variable 'if_condition_60522' (line 732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 732, 8), 'if_condition_60522', if_condition_60522)
        # SSA begins for if statement (line 732)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a IfExp to a Name (line 733):
        
        # Assigning a IfExp to a Name (line 733):
        
        
        # Getting the type of 'w' (line 733)
        w_60523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 47), 'w')
        # Getting the type of 'None' (line 733)
        None_60524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 56), 'None')
        # Applying the binary operator 'isnot' (line 733)
        result_is_not_60525 = python_operator(stypy.reporting.localization.Localization(__file__, 733, 47), 'isnot', w_60523, None_60524)
        
        # Testing the type of an if expression (line 733)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 733, 23), result_is_not_60525)
        # SSA begins for if expression (line 733)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to all(...): (line 733)
        # Processing the call keyword arguments (line 733)
        kwargs_60532 = {}
        
        # Call to isfinite(...): (line 733)
        # Processing the call arguments (line 733)
        # Getting the type of 'w' (line 733)
        w_60528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 35), 'w', False)
        # Processing the call keyword arguments (line 733)
        kwargs_60529 = {}
        # Getting the type of 'np' (line 733)
        np_60526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 23), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 733)
        isfinite_60527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 23), np_60526, 'isfinite')
        # Calling isfinite(args, kwargs) (line 733)
        isfinite_call_result_60530 = invoke(stypy.reporting.localization.Localization(__file__, 733, 23), isfinite_60527, *[w_60528], **kwargs_60529)
        
        # Obtaining the member 'all' of a type (line 733)
        all_60531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 23), isfinite_call_result_60530, 'all')
        # Calling all(args, kwargs) (line 733)
        all_call_result_60533 = invoke(stypy.reporting.localization.Localization(__file__, 733, 23), all_60531, *[], **kwargs_60532)
        
        # SSA branch for the else part of an if expression (line 733)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'True' (line 733)
        True_60534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 66), 'True')
        # SSA join for if expression (line 733)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_60535 = union_type.UnionType.add(all_call_result_60533, True_60534)
        
        # Assigning a type to the variable 'w_finite' (line 733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 12), 'w_finite', if_exp_60535)
        
        
        # Evaluating a boolean operation
        
        
        # Call to all(...): (line 734)
        # Processing the call keyword arguments (line 734)
        kwargs_60542 = {}
        
        # Call to isfinite(...): (line 734)
        # Processing the call arguments (line 734)
        # Getting the type of 'x' (line 734)
        x_60538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 32), 'x', False)
        # Processing the call keyword arguments (line 734)
        kwargs_60539 = {}
        # Getting the type of 'np' (line 734)
        np_60536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 20), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 734)
        isfinite_60537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 20), np_60536, 'isfinite')
        # Calling isfinite(args, kwargs) (line 734)
        isfinite_call_result_60540 = invoke(stypy.reporting.localization.Localization(__file__, 734, 20), isfinite_60537, *[x_60538], **kwargs_60539)
        
        # Obtaining the member 'all' of a type (line 734)
        all_60541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 20), isfinite_call_result_60540, 'all')
        # Calling all(args, kwargs) (line 734)
        all_call_result_60543 = invoke(stypy.reporting.localization.Localization(__file__, 734, 20), all_60541, *[], **kwargs_60542)
        
        # Applying the 'not' unary operator (line 734)
        result_not__60544 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 16), 'not', all_call_result_60543)
        
        
        
        # Call to all(...): (line 734)
        # Processing the call keyword arguments (line 734)
        kwargs_60551 = {}
        
        # Call to isfinite(...): (line 734)
        # Processing the call arguments (line 734)
        # Getting the type of 'y' (line 734)
        y_60547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 60), 'y', False)
        # Processing the call keyword arguments (line 734)
        kwargs_60548 = {}
        # Getting the type of 'np' (line 734)
        np_60545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 48), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 734)
        isfinite_60546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 48), np_60545, 'isfinite')
        # Calling isfinite(args, kwargs) (line 734)
        isfinite_call_result_60549 = invoke(stypy.reporting.localization.Localization(__file__, 734, 48), isfinite_60546, *[y_60547], **kwargs_60548)
        
        # Obtaining the member 'all' of a type (line 734)
        all_60550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 48), isfinite_call_result_60549, 'all')
        # Calling all(args, kwargs) (line 734)
        all_call_result_60552 = invoke(stypy.reporting.localization.Localization(__file__, 734, 48), all_60550, *[], **kwargs_60551)
        
        # Applying the 'not' unary operator (line 734)
        result_not__60553 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 44), 'not', all_call_result_60552)
        
        # Applying the binary operator 'or' (line 734)
        result_or_keyword_60554 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 16), 'or', result_not__60544, result_not__60553)
        
        # Getting the type of 'w_finite' (line 735)
        w_finite_60555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 24), 'w_finite')
        # Applying the 'not' unary operator (line 735)
        result_not__60556 = python_operator(stypy.reporting.localization.Localization(__file__, 735, 20), 'not', w_finite_60555)
        
        # Applying the binary operator 'or' (line 734)
        result_or_keyword_60557 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 16), 'or', result_or_keyword_60554, result_not__60556)
        
        
        # Call to all(...): (line 735)
        # Processing the call keyword arguments (line 735)
        kwargs_60564 = {}
        
        # Call to isfinite(...): (line 735)
        # Processing the call arguments (line 735)
        # Getting the type of 't' (line 735)
        t_60560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 52), 't', False)
        # Processing the call keyword arguments (line 735)
        kwargs_60561 = {}
        # Getting the type of 'np' (line 735)
        np_60558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 40), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 735)
        isfinite_60559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 40), np_60558, 'isfinite')
        # Calling isfinite(args, kwargs) (line 735)
        isfinite_call_result_60562 = invoke(stypy.reporting.localization.Localization(__file__, 735, 40), isfinite_60559, *[t_60560], **kwargs_60561)
        
        # Obtaining the member 'all' of a type (line 735)
        all_60563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 40), isfinite_call_result_60562, 'all')
        # Calling all(args, kwargs) (line 735)
        all_call_result_60565 = invoke(stypy.reporting.localization.Localization(__file__, 735, 40), all_60563, *[], **kwargs_60564)
        
        # Applying the 'not' unary operator (line 735)
        result_not__60566 = python_operator(stypy.reporting.localization.Localization(__file__, 735, 36), 'not', all_call_result_60565)
        
        # Applying the binary operator 'or' (line 734)
        result_or_keyword_60567 = python_operator(stypy.reporting.localization.Localization(__file__, 734, 16), 'or', result_or_keyword_60557, result_not__60566)
        
        # Testing the type of an if condition (line 734)
        if_condition_60568 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 734, 12), result_or_keyword_60567)
        # Assigning a type to the variable 'if_condition_60568' (line 734)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 734, 12), 'if_condition_60568', if_condition_60568)
        # SSA begins for if statement (line 734)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 736)
        # Processing the call arguments (line 736)
        str_60570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 33), 'str', 'Input(s) must not contain NaNs or infs.')
        # Processing the call keyword arguments (line 736)
        kwargs_60571 = {}
        # Getting the type of 'ValueError' (line 736)
        ValueError_60569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 736)
        ValueError_call_result_60572 = invoke(stypy.reporting.localization.Localization(__file__, 736, 22), ValueError_60569, *[str_60570], **kwargs_60571)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 736, 16), ValueError_call_result_60572, 'raise parameter', BaseException)
        # SSA join for if statement (line 734)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 732)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to all(...): (line 737)
        # Processing the call arguments (line 737)
        
        
        # Call to diff(...): (line 737)
        # Processing the call arguments (line 737)
        # Getting the type of 'x' (line 737)
        x_60575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 24), 'x', False)
        # Processing the call keyword arguments (line 737)
        kwargs_60576 = {}
        # Getting the type of 'diff' (line 737)
        diff_60574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 19), 'diff', False)
        # Calling diff(args, kwargs) (line 737)
        diff_call_result_60577 = invoke(stypy.reporting.localization.Localization(__file__, 737, 19), diff_60574, *[x_60575], **kwargs_60576)
        
        float_60578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 737, 29), 'float')
        # Applying the binary operator '>' (line 737)
        result_gt_60579 = python_operator(stypy.reporting.localization.Localization(__file__, 737, 19), '>', diff_call_result_60577, float_60578)
        
        # Processing the call keyword arguments (line 737)
        kwargs_60580 = {}
        # Getting the type of 'all' (line 737)
        all_60573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 15), 'all', False)
        # Calling all(args, kwargs) (line 737)
        all_call_result_60581 = invoke(stypy.reporting.localization.Localization(__file__, 737, 15), all_60573, *[result_gt_60579], **kwargs_60580)
        
        # Applying the 'not' unary operator (line 737)
        result_not__60582 = python_operator(stypy.reporting.localization.Localization(__file__, 737, 11), 'not', all_call_result_60581)
        
        # Testing the type of an if condition (line 737)
        if_condition_60583 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 737, 8), result_not__60582)
        # Assigning a type to the variable 'if_condition_60583' (line 737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 737, 8), 'if_condition_60583', if_condition_60583)
        # SSA begins for if statement (line 737)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 738)
        # Processing the call arguments (line 738)
        str_60585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 29), 'str', 'x must be strictly increasing')
        # Processing the call keyword arguments (line 738)
        kwargs_60586 = {}
        # Getting the type of 'ValueError' (line 738)
        ValueError_60584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 738)
        ValueError_call_result_60587 = invoke(stypy.reporting.localization.Localization(__file__, 738, 18), ValueError_60584, *[str_60585], **kwargs_60586)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 738, 12), ValueError_call_result_60587, 'raise parameter', BaseException)
        # SSA join for if statement (line 737)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Name (line 741):
        
        # Assigning a Subscript to a Name (line 741):
        
        # Obtaining the type of the subscript
        int_60588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 18), 'int')
        # Getting the type of 'bbox' (line 741)
        bbox_60589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 13), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 741)
        getitem___60590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 13), bbox_60589, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 741)
        subscript_call_result_60591 = invoke(stypy.reporting.localization.Localization(__file__, 741, 13), getitem___60590, int_60588)
        
        # Assigning a type to the variable 'xb' (line 741)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 741, 8), 'xb', subscript_call_result_60591)
        
        # Assigning a Subscript to a Name (line 742):
        
        # Assigning a Subscript to a Name (line 742):
        
        # Obtaining the type of the subscript
        int_60592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 18), 'int')
        # Getting the type of 'bbox' (line 742)
        bbox_60593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 13), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 742)
        getitem___60594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 13), bbox_60593, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 742)
        subscript_call_result_60595 = invoke(stypy.reporting.localization.Localization(__file__, 742, 13), getitem___60594, int_60592)
        
        # Assigning a type to the variable 'xe' (line 742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 8), 'xe', subscript_call_result_60595)
        
        # Type idiom detected: calculating its left and rigth part (line 743)
        # Getting the type of 'xb' (line 743)
        xb_60596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 11), 'xb')
        # Getting the type of 'None' (line 743)
        None_60597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 17), 'None')
        
        (may_be_60598, more_types_in_union_60599) = may_be_none(xb_60596, None_60597)

        if may_be_60598:

            if more_types_in_union_60599:
                # Runtime conditional SSA (line 743)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Subscript to a Name (line 744):
            
            # Assigning a Subscript to a Name (line 744):
            
            # Obtaining the type of the subscript
            int_60600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 19), 'int')
            # Getting the type of 'x' (line 744)
            x_60601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 17), 'x')
            # Obtaining the member '__getitem__' of a type (line 744)
            getitem___60602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 744, 17), x_60601, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 744)
            subscript_call_result_60603 = invoke(stypy.reporting.localization.Localization(__file__, 744, 17), getitem___60602, int_60600)
            
            # Assigning a type to the variable 'xb' (line 744)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 744, 12), 'xb', subscript_call_result_60603)

            if more_types_in_union_60599:
                # SSA join for if statement (line 743)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 745)
        # Getting the type of 'xe' (line 745)
        xe_60604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 11), 'xe')
        # Getting the type of 'None' (line 745)
        None_60605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 17), 'None')
        
        (may_be_60606, more_types_in_union_60607) = may_be_none(xe_60604, None_60605)

        if may_be_60606:

            if more_types_in_union_60607:
                # Runtime conditional SSA (line 745)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Subscript to a Name (line 746):
            
            # Assigning a Subscript to a Name (line 746):
            
            # Obtaining the type of the subscript
            int_60608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 19), 'int')
            # Getting the type of 'x' (line 746)
            x_60609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 17), 'x')
            # Obtaining the member '__getitem__' of a type (line 746)
            getitem___60610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 17), x_60609, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 746)
            subscript_call_result_60611 = invoke(stypy.reporting.localization.Localization(__file__, 746, 17), getitem___60610, int_60608)
            
            # Assigning a type to the variable 'xe' (line 746)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 746, 12), 'xe', subscript_call_result_60611)

            if more_types_in_union_60607:
                # SSA join for if statement (line 745)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 747):
        
        # Assigning a Call to a Name (line 747):
        
        # Call to concatenate(...): (line 747)
        # Processing the call arguments (line 747)
        
        # Obtaining an instance of the builtin type 'tuple' (line 747)
        tuple_60613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 747)
        # Adding element type (line 747)
        
        # Obtaining an instance of the builtin type 'list' (line 747)
        list_60614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 747)
        # Adding element type (line 747)
        # Getting the type of 'xb' (line 747)
        xb_60615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 26), 'xb', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 25), list_60614, xb_60615)
        
        # Getting the type of 'k' (line 747)
        k_60616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 31), 'k', False)
        int_60617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 33), 'int')
        # Applying the binary operator '+' (line 747)
        result_add_60618 = python_operator(stypy.reporting.localization.Localization(__file__, 747, 31), '+', k_60616, int_60617)
        
        # Applying the binary operator '*' (line 747)
        result_mul_60619 = python_operator(stypy.reporting.localization.Localization(__file__, 747, 25), '*', list_60614, result_add_60618)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 25), tuple_60613, result_mul_60619)
        # Adding element type (line 747)
        # Getting the type of 't' (line 747)
        t_60620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 37), 't', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 25), tuple_60613, t_60620)
        # Adding element type (line 747)
        
        # Obtaining an instance of the builtin type 'list' (line 747)
        list_60621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 747)
        # Adding element type (line 747)
        # Getting the type of 'xe' (line 747)
        xe_60622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 41), 'xe', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 40), list_60621, xe_60622)
        
        # Getting the type of 'k' (line 747)
        k_60623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 46), 'k', False)
        int_60624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 48), 'int')
        # Applying the binary operator '+' (line 747)
        result_add_60625 = python_operator(stypy.reporting.localization.Localization(__file__, 747, 46), '+', k_60623, int_60624)
        
        # Applying the binary operator '*' (line 747)
        result_mul_60626 = python_operator(stypy.reporting.localization.Localization(__file__, 747, 40), '*', list_60621, result_add_60625)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 25), tuple_60613, result_mul_60626)
        
        # Processing the call keyword arguments (line 747)
        kwargs_60627 = {}
        # Getting the type of 'concatenate' (line 747)
        concatenate_60612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 12), 'concatenate', False)
        # Calling concatenate(args, kwargs) (line 747)
        concatenate_call_result_60628 = invoke(stypy.reporting.localization.Localization(__file__, 747, 12), concatenate_60612, *[tuple_60613], **kwargs_60627)
        
        # Assigning a type to the variable 't' (line 747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 't', concatenate_call_result_60628)
        
        # Assigning a Call to a Name (line 748):
        
        # Assigning a Call to a Name (line 748):
        
        # Call to len(...): (line 748)
        # Processing the call arguments (line 748)
        # Getting the type of 't' (line 748)
        t_60630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 16), 't', False)
        # Processing the call keyword arguments (line 748)
        kwargs_60631 = {}
        # Getting the type of 'len' (line 748)
        len_60629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 12), 'len', False)
        # Calling len(args, kwargs) (line 748)
        len_call_result_60632 = invoke(stypy.reporting.localization.Localization(__file__, 748, 12), len_60629, *[t_60630], **kwargs_60631)
        
        # Assigning a type to the variable 'n' (line 748)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 8), 'n', len_call_result_60632)
        
        
        
        # Call to alltrue(...): (line 749)
        # Processing the call arguments (line 749)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 749)
        k_60634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 25), 'k', False)
        int_60635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 27), 'int')
        # Applying the binary operator '+' (line 749)
        result_add_60636 = python_operator(stypy.reporting.localization.Localization(__file__, 749, 25), '+', k_60634, int_60635)
        
        # Getting the type of 'n' (line 749)
        n_60637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 29), 'n', False)
        # Getting the type of 'k' (line 749)
        k_60638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 31), 'k', False)
        # Applying the binary operator '-' (line 749)
        result_sub_60639 = python_operator(stypy.reporting.localization.Localization(__file__, 749, 29), '-', n_60637, k_60638)
        
        slice_60640 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 749, 23), result_add_60636, result_sub_60639, None)
        # Getting the type of 't' (line 749)
        t_60641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 23), 't', False)
        # Obtaining the member '__getitem__' of a type (line 749)
        getitem___60642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 23), t_60641, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 749)
        subscript_call_result_60643 = invoke(stypy.reporting.localization.Localization(__file__, 749, 23), getitem___60642, slice_60640)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 749)
        k_60644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 36), 'k', False)
        # Getting the type of 'n' (line 749)
        n_60645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 38), 'n', False)
        # Getting the type of 'k' (line 749)
        k_60646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 40), 'k', False)
        # Applying the binary operator '-' (line 749)
        result_sub_60647 = python_operator(stypy.reporting.localization.Localization(__file__, 749, 38), '-', n_60645, k_60646)
        
        int_60648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 42), 'int')
        # Applying the binary operator '-' (line 749)
        result_sub_60649 = python_operator(stypy.reporting.localization.Localization(__file__, 749, 41), '-', result_sub_60647, int_60648)
        
        slice_60650 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 749, 34), k_60644, result_sub_60649, None)
        # Getting the type of 't' (line 749)
        t_60651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 34), 't', False)
        # Obtaining the member '__getitem__' of a type (line 749)
        getitem___60652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 34), t_60651, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 749)
        subscript_call_result_60653 = invoke(stypy.reporting.localization.Localization(__file__, 749, 34), getitem___60652, slice_60650)
        
        # Applying the binary operator '-' (line 749)
        result_sub_60654 = python_operator(stypy.reporting.localization.Localization(__file__, 749, 23), '-', subscript_call_result_60643, subscript_call_result_60653)
        
        int_60655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 47), 'int')
        # Applying the binary operator '>' (line 749)
        result_gt_60656 = python_operator(stypy.reporting.localization.Localization(__file__, 749, 23), '>', result_sub_60654, int_60655)
        
        # Processing the call keyword arguments (line 749)
        int_60657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 55), 'int')
        keyword_60658 = int_60657
        kwargs_60659 = {'axis': keyword_60658}
        # Getting the type of 'alltrue' (line 749)
        alltrue_60633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 15), 'alltrue', False)
        # Calling alltrue(args, kwargs) (line 749)
        alltrue_call_result_60660 = invoke(stypy.reporting.localization.Localization(__file__, 749, 15), alltrue_60633, *[result_gt_60656], **kwargs_60659)
        
        # Applying the 'not' unary operator (line 749)
        result_not__60661 = python_operator(stypy.reporting.localization.Localization(__file__, 749, 11), 'not', alltrue_call_result_60660)
        
        # Testing the type of an if condition (line 749)
        if_condition_60662 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 749, 8), result_not__60661)
        # Assigning a type to the variable 'if_condition_60662' (line 749)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 749, 8), 'if_condition_60662', if_condition_60662)
        # SSA begins for if statement (line 749)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 750)
        # Processing the call arguments (line 750)
        str_60664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 29), 'str', 'Interior knots t must satisfy Schoenberg-Whitney conditions')
        # Processing the call keyword arguments (line 750)
        kwargs_60665 = {}
        # Getting the type of 'ValueError' (line 750)
        ValueError_60663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 750)
        ValueError_call_result_60666 = invoke(stypy.reporting.localization.Localization(__file__, 750, 18), ValueError_60663, *[str_60664], **kwargs_60665)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 750, 12), ValueError_call_result_60666, 'raise parameter', BaseException)
        # SSA join for if statement (line 749)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        
        # Call to fpchec(...): (line 752)
        # Processing the call arguments (line 752)
        # Getting the type of 'x' (line 752)
        x_60669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 31), 'x', False)
        # Getting the type of 't' (line 752)
        t_60670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 34), 't', False)
        # Getting the type of 'k' (line 752)
        k_60671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 37), 'k', False)
        # Processing the call keyword arguments (line 752)
        kwargs_60672 = {}
        # Getting the type of 'dfitpack' (line 752)
        dfitpack_60667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 15), 'dfitpack', False)
        # Obtaining the member 'fpchec' of a type (line 752)
        fpchec_60668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 15), dfitpack_60667, 'fpchec')
        # Calling fpchec(args, kwargs) (line 752)
        fpchec_call_result_60673 = invoke(stypy.reporting.localization.Localization(__file__, 752, 15), fpchec_60668, *[x_60669, t_60670, k_60671], **kwargs_60672)
        
        int_60674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 43), 'int')
        # Applying the binary operator '==' (line 752)
        result_eq_60675 = python_operator(stypy.reporting.localization.Localization(__file__, 752, 15), '==', fpchec_call_result_60673, int_60674)
        
        # Applying the 'not' unary operator (line 752)
        result_not__60676 = python_operator(stypy.reporting.localization.Localization(__file__, 752, 11), 'not', result_eq_60675)
        
        # Testing the type of an if condition (line 752)
        if_condition_60677 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 752, 8), result_not__60676)
        # Assigning a type to the variable 'if_condition_60677' (line 752)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 8), 'if_condition_60677', if_condition_60677)
        # SSA begins for if statement (line 752)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 753)
        # Processing the call arguments (line 753)
        # Getting the type of '_fpchec_error_string' (line 753)
        _fpchec_error_string_60679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 29), '_fpchec_error_string', False)
        # Processing the call keyword arguments (line 753)
        kwargs_60680 = {}
        # Getting the type of 'ValueError' (line 753)
        ValueError_60678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 753)
        ValueError_call_result_60681 = invoke(stypy.reporting.localization.Localization(__file__, 753, 18), ValueError_60678, *[_fpchec_error_string_60679], **kwargs_60680)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 753, 12), ValueError_call_result_60681, 'raise parameter', BaseException)
        # SSA join for if statement (line 752)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 754):
        
        # Assigning a Call to a Name (line 754):
        
        # Call to fpcurfm1(...): (line 754)
        # Processing the call arguments (line 754)
        # Getting the type of 'x' (line 754)
        x_60684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 33), 'x', False)
        # Getting the type of 'y' (line 754)
        y_60685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 36), 'y', False)
        # Getting the type of 'k' (line 754)
        k_60686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 39), 'k', False)
        # Getting the type of 't' (line 754)
        t_60687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 42), 't', False)
        # Processing the call keyword arguments (line 754)
        # Getting the type of 'w' (line 754)
        w_60688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 47), 'w', False)
        keyword_60689 = w_60688
        # Getting the type of 'xb' (line 754)
        xb_60690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 53), 'xb', False)
        keyword_60691 = xb_60690
        # Getting the type of 'xe' (line 754)
        xe_60692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 60), 'xe', False)
        keyword_60693 = xe_60692
        kwargs_60694 = {'xb': keyword_60691, 'w': keyword_60689, 'xe': keyword_60693}
        # Getting the type of 'dfitpack' (line 754)
        dfitpack_60682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 15), 'dfitpack', False)
        # Obtaining the member 'fpcurfm1' of a type (line 754)
        fpcurfm1_60683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 15), dfitpack_60682, 'fpcurfm1')
        # Calling fpcurfm1(args, kwargs) (line 754)
        fpcurfm1_call_result_60695 = invoke(stypy.reporting.localization.Localization(__file__, 754, 15), fpcurfm1_60683, *[x_60684, y_60685, k_60686, t_60687], **kwargs_60694)
        
        # Assigning a type to the variable 'data' (line 754)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), 'data', fpcurfm1_call_result_60695)
        
        # Assigning a BinOp to a Attribute (line 755):
        
        # Assigning a BinOp to a Attribute (line 755):
        
        # Obtaining the type of the subscript
        int_60696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 755, 27), 'int')
        slice_60697 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 755, 21), None, int_60696, None)
        # Getting the type of 'data' (line 755)
        data_60698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 21), 'data')
        # Obtaining the member '__getitem__' of a type (line 755)
        getitem___60699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 755, 21), data_60698, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 755)
        subscript_call_result_60700 = invoke(stypy.reporting.localization.Localization(__file__, 755, 21), getitem___60699, slice_60697)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 755)
        tuple_60701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 755, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 755)
        # Adding element type (line 755)
        # Getting the type of 'None' (line 755)
        None_60702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 34), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 755, 34), tuple_60701, None_60702)
        # Adding element type (line 755)
        # Getting the type of 'None' (line 755)
        None_60703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 40), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 755, 34), tuple_60701, None_60703)
        # Adding element type (line 755)
        
        # Obtaining the type of the subscript
        int_60704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 755, 51), 'int')
        # Getting the type of 'data' (line 755)
        data_60705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 46), 'data')
        # Obtaining the member '__getitem__' of a type (line 755)
        getitem___60706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 755, 46), data_60705, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 755)
        subscript_call_result_60707 = invoke(stypy.reporting.localization.Localization(__file__, 755, 46), getitem___60706, int_60704)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 755, 34), tuple_60701, subscript_call_result_60707)
        
        # Applying the binary operator '+' (line 755)
        result_add_60708 = python_operator(stypy.reporting.localization.Localization(__file__, 755, 21), '+', subscript_call_result_60700, tuple_60701)
        
        # Getting the type of 'self' (line 755)
        self_60709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 8), 'self')
        # Setting the type of the member '_data' of a type (line 755)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 755, 8), self_60709, '_data', result_add_60708)
        
        # Call to _reset_class(...): (line 756)
        # Processing the call keyword arguments (line 756)
        kwargs_60712 = {}
        # Getting the type of 'self' (line 756)
        self_60710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 8), 'self', False)
        # Obtaining the member '_reset_class' of a type (line 756)
        _reset_class_60711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 756, 8), self_60710, '_reset_class')
        # Calling _reset_class(args, kwargs) (line 756)
        _reset_class_call_result_60713 = invoke(stypy.reporting.localization.Localization(__file__, 756, 8), _reset_class_60711, *[], **kwargs_60712)
        
        
        
        # SSA begins for try-except statement (line 758)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Subscript to a Attribute (line 759):
        
        # Assigning a Subscript to a Attribute (line 759):
        
        # Obtaining the type of the subscript
        # Getting the type of 'ext' (line 759)
        ext_60714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 37), 'ext')
        # Getting the type of '_extrap_modes' (line 759)
        _extrap_modes_60715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 23), '_extrap_modes')
        # Obtaining the member '__getitem__' of a type (line 759)
        getitem___60716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 23), _extrap_modes_60715, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 759)
        subscript_call_result_60717 = invoke(stypy.reporting.localization.Localization(__file__, 759, 23), getitem___60716, ext_60714)
        
        # Getting the type of 'self' (line 759)
        self_60718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 12), 'self')
        # Setting the type of the member 'ext' of a type (line 759)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 12), self_60718, 'ext', subscript_call_result_60717)
        # SSA branch for the except part of a try statement (line 758)
        # SSA branch for the except 'KeyError' branch of a try statement (line 758)
        module_type_store.open_ssa_branch('except')
        
        # Call to ValueError(...): (line 761)
        # Processing the call arguments (line 761)
        str_60720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 29), 'str', 'Unknown extrapolation mode %s.')
        # Getting the type of 'ext' (line 761)
        ext_60721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 64), 'ext', False)
        # Applying the binary operator '%' (line 761)
        result_mod_60722 = python_operator(stypy.reporting.localization.Localization(__file__, 761, 29), '%', str_60720, ext_60721)
        
        # Processing the call keyword arguments (line 761)
        kwargs_60723 = {}
        # Getting the type of 'ValueError' (line 761)
        ValueError_60719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 761)
        ValueError_call_result_60724 = invoke(stypy.reporting.localization.Localization(__file__, 761, 18), ValueError_60719, *[result_mod_60722], **kwargs_60723)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 761, 12), ValueError_call_result_60724, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 758)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'LSQUnivariateSpline' (line 627)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 0), 'LSQUnivariateSpline', LSQUnivariateSpline)
# Declaration of the '_BivariateSplineBase' class

class _BivariateSplineBase(object, ):
    str_60725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 778, (-1)), 'str', ' Base class for Bivariate spline s(x,y) interpolation on the rectangle\n    [xb,xe] x [yb, ye] calculated from a given set of data points\n    (x,y,z).\n\n    See Also\n    --------\n    bisplrep, bisplev : an older wrapping of FITPACK\n    BivariateSpline :\n        implementation of bivariate spline interpolation on a plane grid\n    SphereBivariateSpline :\n        implementation of bivariate spline interpolation on a spherical grid\n    ')

    @norecursion
    def get_residual(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_residual'
        module_type_store = module_type_store.open_function_context('get_residual', 780, 4, False)
        # Assigning a type to the variable 'self' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_localization', localization)
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_type_store', module_type_store)
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_function_name', '_BivariateSplineBase.get_residual')
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_param_names_list', [])
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_varargs_param_name', None)
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_call_defaults', defaults)
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_call_varargs', varargs)
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _BivariateSplineBase.get_residual.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_BivariateSplineBase.get_residual', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_residual', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_residual(...)' code ##################

        str_60726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, (-1)), 'str', ' Return weighted sum of squared residuals of the spline\n        approximation: sum ((w[i]*(z[i]-s(x[i],y[i])))**2,axis=0)\n        ')
        # Getting the type of 'self' (line 784)
        self_60727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 15), 'self')
        # Obtaining the member 'fp' of a type (line 784)
        fp_60728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 784, 15), self_60727, 'fp')
        # Assigning a type to the variable 'stypy_return_type' (line 784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 784, 8), 'stypy_return_type', fp_60728)
        
        # ################# End of 'get_residual(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_residual' in the type store
        # Getting the type of 'stypy_return_type' (line 780)
        stypy_return_type_60729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60729)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_residual'
        return stypy_return_type_60729


    @norecursion
    def get_knots(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_knots'
        module_type_store = module_type_store.open_function_context('get_knots', 786, 4, False)
        # Assigning a type to the variable 'self' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_localization', localization)
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_type_store', module_type_store)
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_function_name', '_BivariateSplineBase.get_knots')
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_param_names_list', [])
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_varargs_param_name', None)
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_call_defaults', defaults)
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_call_varargs', varargs)
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _BivariateSplineBase.get_knots.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_BivariateSplineBase.get_knots', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_knots', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_knots(...)' code ##################

        str_60730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, (-1)), 'str', ' Return a tuple (tx,ty) where tx,ty contain knots positions\n        of the spline with respect to x-, y-variable, respectively.\n        The position of interior and additional knots are given as\n        t[k+1:-k-1] and t[:k+1]=b, t[-k-1:]=e, respectively.\n        ')
        
        # Obtaining the type of the subscript
        int_60731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 25), 'int')
        slice_60732 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 792, 15), None, int_60731, None)
        # Getting the type of 'self' (line 792)
        self_60733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 15), 'self')
        # Obtaining the member 'tck' of a type (line 792)
        tck_60734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 792, 15), self_60733, 'tck')
        # Obtaining the member '__getitem__' of a type (line 792)
        getitem___60735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 792, 15), tck_60734, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 792)
        subscript_call_result_60736 = invoke(stypy.reporting.localization.Localization(__file__, 792, 15), getitem___60735, slice_60732)
        
        # Assigning a type to the variable 'stypy_return_type' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'stypy_return_type', subscript_call_result_60736)
        
        # ################# End of 'get_knots(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_knots' in the type store
        # Getting the type of 'stypy_return_type' (line 786)
        stypy_return_type_60737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60737)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_knots'
        return stypy_return_type_60737


    @norecursion
    def get_coeffs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'get_coeffs'
        module_type_store = module_type_store.open_function_context('get_coeffs', 794, 4, False)
        # Assigning a type to the variable 'self' (line 795)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_localization', localization)
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_type_store', module_type_store)
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_function_name', '_BivariateSplineBase.get_coeffs')
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_param_names_list', [])
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_varargs_param_name', None)
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_call_defaults', defaults)
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_call_varargs', varargs)
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _BivariateSplineBase.get_coeffs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_BivariateSplineBase.get_coeffs', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'get_coeffs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'get_coeffs(...)' code ##################

        str_60738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 8), 'str', ' Return spline coefficients.')
        
        # Obtaining the type of the subscript
        int_60739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 796, 24), 'int')
        # Getting the type of 'self' (line 796)
        self_60740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 15), 'self')
        # Obtaining the member 'tck' of a type (line 796)
        tck_60741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 15), self_60740, 'tck')
        # Obtaining the member '__getitem__' of a type (line 796)
        getitem___60742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 15), tck_60741, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 796)
        subscript_call_result_60743 = invoke(stypy.reporting.localization.Localization(__file__, 796, 15), getitem___60742, int_60739)
        
        # Assigning a type to the variable 'stypy_return_type' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 8), 'stypy_return_type', subscript_call_result_60743)
        
        # ################# End of 'get_coeffs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'get_coeffs' in the type store
        # Getting the type of 'stypy_return_type' (line 794)
        stypy_return_type_60744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_60744)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'get_coeffs'
        return stypy_return_type_60744


    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_60745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 32), 'int')
        int_60746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 38), 'int')
        # Getting the type of 'True' (line 798)
        True_60747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 46), 'True')
        defaults = [int_60745, int_60746, True_60747]
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 798, 4, False)
        # Assigning a type to the variable 'self' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_localization', localization)
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_function_name', '_BivariateSplineBase.__call__')
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_param_names_list', ['x', 'y', 'dx', 'dy', 'grid'])
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        _BivariateSplineBase.__call__.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_BivariateSplineBase.__call__', ['x', 'y', 'dx', 'dy', 'grid'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, ['x', 'y', 'dx', 'dy', 'grid'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        str_60748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, (-1)), 'str', '\n        Evaluate the spline or its derivatives at given positions.\n\n        Parameters\n        ----------\n        x, y : array_like\n            Input coordinates.\n\n            If `grid` is False, evaluate the spline at points ``(x[i],\n            y[i]), i=0, ..., len(x)-1``.  Standard Numpy broadcasting\n            is obeyed.\n\n            If `grid` is True: evaluate spline at the grid points\n            defined by the coordinate arrays x, y. The arrays must be\n            sorted to increasing order.\n        dx : int\n            Order of x-derivative\n\n            .. versionadded:: 0.14.0\n        dy : int\n            Order of y-derivative\n\n            .. versionadded:: 0.14.0\n        grid : bool\n            Whether to evaluate the results on a grid spanned by the\n            input arrays, or at points specified by the input arrays.\n\n            .. versionadded:: 0.14.0\n\n        ')
        
        # Assigning a Call to a Name (line 829):
        
        # Assigning a Call to a Name (line 829):
        
        # Call to asarray(...): (line 829)
        # Processing the call arguments (line 829)
        # Getting the type of 'x' (line 829)
        x_60751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 23), 'x', False)
        # Processing the call keyword arguments (line 829)
        kwargs_60752 = {}
        # Getting the type of 'np' (line 829)
        np_60749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 829)
        asarray_60750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 12), np_60749, 'asarray')
        # Calling asarray(args, kwargs) (line 829)
        asarray_call_result_60753 = invoke(stypy.reporting.localization.Localization(__file__, 829, 12), asarray_60750, *[x_60751], **kwargs_60752)
        
        # Assigning a type to the variable 'x' (line 829)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 829, 8), 'x', asarray_call_result_60753)
        
        # Assigning a Call to a Name (line 830):
        
        # Assigning a Call to a Name (line 830):
        
        # Call to asarray(...): (line 830)
        # Processing the call arguments (line 830)
        # Getting the type of 'y' (line 830)
        y_60756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 23), 'y', False)
        # Processing the call keyword arguments (line 830)
        kwargs_60757 = {}
        # Getting the type of 'np' (line 830)
        np_60754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 830)
        asarray_60755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 12), np_60754, 'asarray')
        # Calling asarray(args, kwargs) (line 830)
        asarray_call_result_60758 = invoke(stypy.reporting.localization.Localization(__file__, 830, 12), asarray_60755, *[y_60756], **kwargs_60757)
        
        # Assigning a type to the variable 'y' (line 830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 830, 8), 'y', asarray_call_result_60758)
        
        # Assigning a Subscript to a Tuple (line 832):
        
        # Assigning a Subscript to a Name (line 832):
        
        # Obtaining the type of the subscript
        int_60759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 8), 'int')
        
        # Obtaining the type of the subscript
        int_60760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 30), 'int')
        slice_60761 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 832, 20), None, int_60760, None)
        # Getting the type of 'self' (line 832)
        self_60762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 20), 'self')
        # Obtaining the member 'tck' of a type (line 832)
        tck_60763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 20), self_60762, 'tck')
        # Obtaining the member '__getitem__' of a type (line 832)
        getitem___60764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 20), tck_60763, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 832)
        subscript_call_result_60765 = invoke(stypy.reporting.localization.Localization(__file__, 832, 20), getitem___60764, slice_60761)
        
        # Obtaining the member '__getitem__' of a type (line 832)
        getitem___60766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 8), subscript_call_result_60765, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 832)
        subscript_call_result_60767 = invoke(stypy.reporting.localization.Localization(__file__, 832, 8), getitem___60766, int_60759)
        
        # Assigning a type to the variable 'tuple_var_assignment_59544' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'tuple_var_assignment_59544', subscript_call_result_60767)
        
        # Assigning a Subscript to a Name (line 832):
        
        # Obtaining the type of the subscript
        int_60768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 8), 'int')
        
        # Obtaining the type of the subscript
        int_60769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 30), 'int')
        slice_60770 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 832, 20), None, int_60769, None)
        # Getting the type of 'self' (line 832)
        self_60771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 20), 'self')
        # Obtaining the member 'tck' of a type (line 832)
        tck_60772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 20), self_60771, 'tck')
        # Obtaining the member '__getitem__' of a type (line 832)
        getitem___60773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 20), tck_60772, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 832)
        subscript_call_result_60774 = invoke(stypy.reporting.localization.Localization(__file__, 832, 20), getitem___60773, slice_60770)
        
        # Obtaining the member '__getitem__' of a type (line 832)
        getitem___60775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 8), subscript_call_result_60774, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 832)
        subscript_call_result_60776 = invoke(stypy.reporting.localization.Localization(__file__, 832, 8), getitem___60775, int_60768)
        
        # Assigning a type to the variable 'tuple_var_assignment_59545' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'tuple_var_assignment_59545', subscript_call_result_60776)
        
        # Assigning a Subscript to a Name (line 832):
        
        # Obtaining the type of the subscript
        int_60777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 8), 'int')
        
        # Obtaining the type of the subscript
        int_60778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 30), 'int')
        slice_60779 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 832, 20), None, int_60778, None)
        # Getting the type of 'self' (line 832)
        self_60780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 20), 'self')
        # Obtaining the member 'tck' of a type (line 832)
        tck_60781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 20), self_60780, 'tck')
        # Obtaining the member '__getitem__' of a type (line 832)
        getitem___60782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 20), tck_60781, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 832)
        subscript_call_result_60783 = invoke(stypy.reporting.localization.Localization(__file__, 832, 20), getitem___60782, slice_60779)
        
        # Obtaining the member '__getitem__' of a type (line 832)
        getitem___60784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 8), subscript_call_result_60783, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 832)
        subscript_call_result_60785 = invoke(stypy.reporting.localization.Localization(__file__, 832, 8), getitem___60784, int_60777)
        
        # Assigning a type to the variable 'tuple_var_assignment_59546' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'tuple_var_assignment_59546', subscript_call_result_60785)
        
        # Assigning a Name to a Name (line 832):
        # Getting the type of 'tuple_var_assignment_59544' (line 832)
        tuple_var_assignment_59544_60786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'tuple_var_assignment_59544')
        # Assigning a type to the variable 'tx' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'tx', tuple_var_assignment_59544_60786)
        
        # Assigning a Name to a Name (line 832):
        # Getting the type of 'tuple_var_assignment_59545' (line 832)
        tuple_var_assignment_59545_60787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'tuple_var_assignment_59545')
        # Assigning a type to the variable 'ty' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 12), 'ty', tuple_var_assignment_59545_60787)
        
        # Assigning a Name to a Name (line 832):
        # Getting the type of 'tuple_var_assignment_59546' (line 832)
        tuple_var_assignment_59546_60788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'tuple_var_assignment_59546')
        # Assigning a type to the variable 'c' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 16), 'c', tuple_var_assignment_59546_60788)
        
        # Assigning a Attribute to a Tuple (line 833):
        
        # Assigning a Subscript to a Name (line 833):
        
        # Obtaining the type of the subscript
        int_60789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 8), 'int')
        # Getting the type of 'self' (line 833)
        self_60790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 17), 'self')
        # Obtaining the member 'degrees' of a type (line 833)
        degrees_60791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 17), self_60790, 'degrees')
        # Obtaining the member '__getitem__' of a type (line 833)
        getitem___60792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 8), degrees_60791, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
        subscript_call_result_60793 = invoke(stypy.reporting.localization.Localization(__file__, 833, 8), getitem___60792, int_60789)
        
        # Assigning a type to the variable 'tuple_var_assignment_59547' (line 833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'tuple_var_assignment_59547', subscript_call_result_60793)
        
        # Assigning a Subscript to a Name (line 833):
        
        # Obtaining the type of the subscript
        int_60794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 8), 'int')
        # Getting the type of 'self' (line 833)
        self_60795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 17), 'self')
        # Obtaining the member 'degrees' of a type (line 833)
        degrees_60796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 17), self_60795, 'degrees')
        # Obtaining the member '__getitem__' of a type (line 833)
        getitem___60797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 8), degrees_60796, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
        subscript_call_result_60798 = invoke(stypy.reporting.localization.Localization(__file__, 833, 8), getitem___60797, int_60794)
        
        # Assigning a type to the variable 'tuple_var_assignment_59548' (line 833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'tuple_var_assignment_59548', subscript_call_result_60798)
        
        # Assigning a Name to a Name (line 833):
        # Getting the type of 'tuple_var_assignment_59547' (line 833)
        tuple_var_assignment_59547_60799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'tuple_var_assignment_59547')
        # Assigning a type to the variable 'kx' (line 833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'kx', tuple_var_assignment_59547_60799)
        
        # Assigning a Name to a Name (line 833):
        # Getting the type of 'tuple_var_assignment_59548' (line 833)
        tuple_var_assignment_59548_60800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'tuple_var_assignment_59548')
        # Assigning a type to the variable 'ky' (line 833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 12), 'ky', tuple_var_assignment_59548_60800)
        
        # Getting the type of 'grid' (line 834)
        grid_60801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 11), 'grid')
        # Testing the type of an if condition (line 834)
        if_condition_60802 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 834, 8), grid_60801)
        # Assigning a type to the variable 'if_condition_60802' (line 834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 8), 'if_condition_60802', if_condition_60802)
        # SSA begins for if statement (line 834)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'x' (line 835)
        x_60803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 15), 'x')
        # Obtaining the member 'size' of a type (line 835)
        size_60804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 15), x_60803, 'size')
        int_60805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 25), 'int')
        # Applying the binary operator '==' (line 835)
        result_eq_60806 = python_operator(stypy.reporting.localization.Localization(__file__, 835, 15), '==', size_60804, int_60805)
        
        
        # Getting the type of 'y' (line 835)
        y_60807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 30), 'y')
        # Obtaining the member 'size' of a type (line 835)
        size_60808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 30), y_60807, 'size')
        int_60809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 40), 'int')
        # Applying the binary operator '==' (line 835)
        result_eq_60810 = python_operator(stypy.reporting.localization.Localization(__file__, 835, 30), '==', size_60808, int_60809)
        
        # Applying the binary operator 'or' (line 835)
        result_or_keyword_60811 = python_operator(stypy.reporting.localization.Localization(__file__, 835, 15), 'or', result_eq_60806, result_eq_60810)
        
        # Testing the type of an if condition (line 835)
        if_condition_60812 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 835, 12), result_or_keyword_60811)
        # Assigning a type to the variable 'if_condition_60812' (line 835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 12), 'if_condition_60812', if_condition_60812)
        # SSA begins for if statement (line 835)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to zeros(...): (line 836)
        # Processing the call arguments (line 836)
        
        # Obtaining an instance of the builtin type 'tuple' (line 836)
        tuple_60815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 836)
        # Adding element type (line 836)
        # Getting the type of 'x' (line 836)
        x_60816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 33), 'x', False)
        # Obtaining the member 'size' of a type (line 836)
        size_60817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 33), x_60816, 'size')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 836, 33), tuple_60815, size_60817)
        # Adding element type (line 836)
        # Getting the type of 'y' (line 836)
        y_60818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 41), 'y', False)
        # Obtaining the member 'size' of a type (line 836)
        size_60819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 41), y_60818, 'size')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 836, 33), tuple_60815, size_60819)
        
        # Processing the call keyword arguments (line 836)
        
        # Obtaining the type of the subscript
        int_60820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 65), 'int')
        # Getting the type of 'self' (line 836)
        self_60821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 56), 'self', False)
        # Obtaining the member 'tck' of a type (line 836)
        tck_60822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 56), self_60821, 'tck')
        # Obtaining the member '__getitem__' of a type (line 836)
        getitem___60823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 56), tck_60822, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 836)
        subscript_call_result_60824 = invoke(stypy.reporting.localization.Localization(__file__, 836, 56), getitem___60823, int_60820)
        
        # Obtaining the member 'dtype' of a type (line 836)
        dtype_60825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 56), subscript_call_result_60824, 'dtype')
        keyword_60826 = dtype_60825
        kwargs_60827 = {'dtype': keyword_60826}
        # Getting the type of 'np' (line 836)
        np_60813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 23), 'np', False)
        # Obtaining the member 'zeros' of a type (line 836)
        zeros_60814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 23), np_60813, 'zeros')
        # Calling zeros(args, kwargs) (line 836)
        zeros_call_result_60828 = invoke(stypy.reporting.localization.Localization(__file__, 836, 23), zeros_60814, *[tuple_60815], **kwargs_60827)
        
        # Assigning a type to the variable 'stypy_return_type' (line 836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 16), 'stypy_return_type', zeros_call_result_60828)
        # SSA join for if statement (line 835)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        # Getting the type of 'dx' (line 838)
        dx_60829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 15), 'dx')
        # Getting the type of 'dy' (line 838)
        dy_60830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 21), 'dy')
        # Applying the binary operator 'or' (line 838)
        result_or_keyword_60831 = python_operator(stypy.reporting.localization.Localization(__file__, 838, 15), 'or', dx_60829, dy_60830)
        
        # Testing the type of an if condition (line 838)
        if_condition_60832 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 838, 12), result_or_keyword_60831)
        # Assigning a type to the variable 'if_condition_60832' (line 838)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 12), 'if_condition_60832', if_condition_60832)
        # SSA begins for if statement (line 838)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 839):
        
        # Assigning a Subscript to a Name (line 839):
        
        # Obtaining the type of the subscript
        int_60833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 16), 'int')
        
        # Call to parder(...): (line 839)
        # Processing the call arguments (line 839)
        # Getting the type of 'tx' (line 839)
        tx_60836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 40), 'tx', False)
        # Getting the type of 'ty' (line 839)
        ty_60837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 43), 'ty', False)
        # Getting the type of 'c' (line 839)
        c_60838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 46), 'c', False)
        # Getting the type of 'kx' (line 839)
        kx_60839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 48), 'kx', False)
        # Getting the type of 'ky' (line 839)
        ky_60840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 51), 'ky', False)
        # Getting the type of 'dx' (line 839)
        dx_60841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 54), 'dx', False)
        # Getting the type of 'dy' (line 839)
        dy_60842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 57), 'dy', False)
        # Getting the type of 'x' (line 839)
        x_60843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 60), 'x', False)
        # Getting the type of 'y' (line 839)
        y_60844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 62), 'y', False)
        # Processing the call keyword arguments (line 839)
        kwargs_60845 = {}
        # Getting the type of 'dfitpack' (line 839)
        dfitpack_60834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 24), 'dfitpack', False)
        # Obtaining the member 'parder' of a type (line 839)
        parder_60835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 24), dfitpack_60834, 'parder')
        # Calling parder(args, kwargs) (line 839)
        parder_call_result_60846 = invoke(stypy.reporting.localization.Localization(__file__, 839, 24), parder_60835, *[tx_60836, ty_60837, c_60838, kx_60839, ky_60840, dx_60841, dy_60842, x_60843, y_60844], **kwargs_60845)
        
        # Obtaining the member '__getitem__' of a type (line 839)
        getitem___60847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 16), parder_call_result_60846, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 839)
        subscript_call_result_60848 = invoke(stypy.reporting.localization.Localization(__file__, 839, 16), getitem___60847, int_60833)
        
        # Assigning a type to the variable 'tuple_var_assignment_59549' (line 839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 16), 'tuple_var_assignment_59549', subscript_call_result_60848)
        
        # Assigning a Subscript to a Name (line 839):
        
        # Obtaining the type of the subscript
        int_60849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 16), 'int')
        
        # Call to parder(...): (line 839)
        # Processing the call arguments (line 839)
        # Getting the type of 'tx' (line 839)
        tx_60852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 40), 'tx', False)
        # Getting the type of 'ty' (line 839)
        ty_60853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 43), 'ty', False)
        # Getting the type of 'c' (line 839)
        c_60854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 46), 'c', False)
        # Getting the type of 'kx' (line 839)
        kx_60855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 48), 'kx', False)
        # Getting the type of 'ky' (line 839)
        ky_60856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 51), 'ky', False)
        # Getting the type of 'dx' (line 839)
        dx_60857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 54), 'dx', False)
        # Getting the type of 'dy' (line 839)
        dy_60858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 57), 'dy', False)
        # Getting the type of 'x' (line 839)
        x_60859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 60), 'x', False)
        # Getting the type of 'y' (line 839)
        y_60860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 62), 'y', False)
        # Processing the call keyword arguments (line 839)
        kwargs_60861 = {}
        # Getting the type of 'dfitpack' (line 839)
        dfitpack_60850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 24), 'dfitpack', False)
        # Obtaining the member 'parder' of a type (line 839)
        parder_60851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 24), dfitpack_60850, 'parder')
        # Calling parder(args, kwargs) (line 839)
        parder_call_result_60862 = invoke(stypy.reporting.localization.Localization(__file__, 839, 24), parder_60851, *[tx_60852, ty_60853, c_60854, kx_60855, ky_60856, dx_60857, dy_60858, x_60859, y_60860], **kwargs_60861)
        
        # Obtaining the member '__getitem__' of a type (line 839)
        getitem___60863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 16), parder_call_result_60862, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 839)
        subscript_call_result_60864 = invoke(stypy.reporting.localization.Localization(__file__, 839, 16), getitem___60863, int_60849)
        
        # Assigning a type to the variable 'tuple_var_assignment_59550' (line 839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 16), 'tuple_var_assignment_59550', subscript_call_result_60864)
        
        # Assigning a Name to a Name (line 839):
        # Getting the type of 'tuple_var_assignment_59549' (line 839)
        tuple_var_assignment_59549_60865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 16), 'tuple_var_assignment_59549')
        # Assigning a type to the variable 'z' (line 839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 16), 'z', tuple_var_assignment_59549_60865)
        
        # Assigning a Name to a Name (line 839):
        # Getting the type of 'tuple_var_assignment_59550' (line 839)
        tuple_var_assignment_59550_60866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 16), 'tuple_var_assignment_59550')
        # Assigning a type to the variable 'ier' (line 839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 18), 'ier', tuple_var_assignment_59550_60866)
        
        
        
        # Getting the type of 'ier' (line 840)
        ier_60867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 23), 'ier')
        int_60868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 30), 'int')
        # Applying the binary operator '==' (line 840)
        result_eq_60869 = python_operator(stypy.reporting.localization.Localization(__file__, 840, 23), '==', ier_60867, int_60868)
        
        # Applying the 'not' unary operator (line 840)
        result_not__60870 = python_operator(stypy.reporting.localization.Localization(__file__, 840, 19), 'not', result_eq_60869)
        
        # Testing the type of an if condition (line 840)
        if_condition_60871 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 840, 16), result_not__60870)
        # Assigning a type to the variable 'if_condition_60871' (line 840)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 840, 16), 'if_condition_60871', if_condition_60871)
        # SSA begins for if statement (line 840)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 841)
        # Processing the call arguments (line 841)
        str_60873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 37), 'str', 'Error code returned by parder: %s')
        # Getting the type of 'ier' (line 841)
        ier_60874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 75), 'ier', False)
        # Applying the binary operator '%' (line 841)
        result_mod_60875 = python_operator(stypy.reporting.localization.Localization(__file__, 841, 37), '%', str_60873, ier_60874)
        
        # Processing the call keyword arguments (line 841)
        kwargs_60876 = {}
        # Getting the type of 'ValueError' (line 841)
        ValueError_60872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 26), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 841)
        ValueError_call_result_60877 = invoke(stypy.reporting.localization.Localization(__file__, 841, 26), ValueError_60872, *[result_mod_60875], **kwargs_60876)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 841, 20), ValueError_call_result_60877, 'raise parameter', BaseException)
        # SSA join for if statement (line 840)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 838)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 843):
        
        # Assigning a Subscript to a Name (line 843):
        
        # Obtaining the type of the subscript
        int_60878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 16), 'int')
        
        # Call to bispev(...): (line 843)
        # Processing the call arguments (line 843)
        # Getting the type of 'tx' (line 843)
        tx_60881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 40), 'tx', False)
        # Getting the type of 'ty' (line 843)
        ty_60882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 43), 'ty', False)
        # Getting the type of 'c' (line 843)
        c_60883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 46), 'c', False)
        # Getting the type of 'kx' (line 843)
        kx_60884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 48), 'kx', False)
        # Getting the type of 'ky' (line 843)
        ky_60885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 51), 'ky', False)
        # Getting the type of 'x' (line 843)
        x_60886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 54), 'x', False)
        # Getting the type of 'y' (line 843)
        y_60887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 56), 'y', False)
        # Processing the call keyword arguments (line 843)
        kwargs_60888 = {}
        # Getting the type of 'dfitpack' (line 843)
        dfitpack_60879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 24), 'dfitpack', False)
        # Obtaining the member 'bispev' of a type (line 843)
        bispev_60880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 24), dfitpack_60879, 'bispev')
        # Calling bispev(args, kwargs) (line 843)
        bispev_call_result_60889 = invoke(stypy.reporting.localization.Localization(__file__, 843, 24), bispev_60880, *[tx_60881, ty_60882, c_60883, kx_60884, ky_60885, x_60886, y_60887], **kwargs_60888)
        
        # Obtaining the member '__getitem__' of a type (line 843)
        getitem___60890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 16), bispev_call_result_60889, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 843)
        subscript_call_result_60891 = invoke(stypy.reporting.localization.Localization(__file__, 843, 16), getitem___60890, int_60878)
        
        # Assigning a type to the variable 'tuple_var_assignment_59551' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'tuple_var_assignment_59551', subscript_call_result_60891)
        
        # Assigning a Subscript to a Name (line 843):
        
        # Obtaining the type of the subscript
        int_60892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 16), 'int')
        
        # Call to bispev(...): (line 843)
        # Processing the call arguments (line 843)
        # Getting the type of 'tx' (line 843)
        tx_60895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 40), 'tx', False)
        # Getting the type of 'ty' (line 843)
        ty_60896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 43), 'ty', False)
        # Getting the type of 'c' (line 843)
        c_60897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 46), 'c', False)
        # Getting the type of 'kx' (line 843)
        kx_60898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 48), 'kx', False)
        # Getting the type of 'ky' (line 843)
        ky_60899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 51), 'ky', False)
        # Getting the type of 'x' (line 843)
        x_60900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 54), 'x', False)
        # Getting the type of 'y' (line 843)
        y_60901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 56), 'y', False)
        # Processing the call keyword arguments (line 843)
        kwargs_60902 = {}
        # Getting the type of 'dfitpack' (line 843)
        dfitpack_60893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 24), 'dfitpack', False)
        # Obtaining the member 'bispev' of a type (line 843)
        bispev_60894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 24), dfitpack_60893, 'bispev')
        # Calling bispev(args, kwargs) (line 843)
        bispev_call_result_60903 = invoke(stypy.reporting.localization.Localization(__file__, 843, 24), bispev_60894, *[tx_60895, ty_60896, c_60897, kx_60898, ky_60899, x_60900, y_60901], **kwargs_60902)
        
        # Obtaining the member '__getitem__' of a type (line 843)
        getitem___60904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 16), bispev_call_result_60903, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 843)
        subscript_call_result_60905 = invoke(stypy.reporting.localization.Localization(__file__, 843, 16), getitem___60904, int_60892)
        
        # Assigning a type to the variable 'tuple_var_assignment_59552' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'tuple_var_assignment_59552', subscript_call_result_60905)
        
        # Assigning a Name to a Name (line 843):
        # Getting the type of 'tuple_var_assignment_59551' (line 843)
        tuple_var_assignment_59551_60906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'tuple_var_assignment_59551')
        # Assigning a type to the variable 'z' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'z', tuple_var_assignment_59551_60906)
        
        # Assigning a Name to a Name (line 843):
        # Getting the type of 'tuple_var_assignment_59552' (line 843)
        tuple_var_assignment_59552_60907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 16), 'tuple_var_assignment_59552')
        # Assigning a type to the variable 'ier' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 18), 'ier', tuple_var_assignment_59552_60907)
        
        
        
        # Getting the type of 'ier' (line 844)
        ier_60908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 23), 'ier')
        int_60909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 30), 'int')
        # Applying the binary operator '==' (line 844)
        result_eq_60910 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 23), '==', ier_60908, int_60909)
        
        # Applying the 'not' unary operator (line 844)
        result_not__60911 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 19), 'not', result_eq_60910)
        
        # Testing the type of an if condition (line 844)
        if_condition_60912 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 16), result_not__60911)
        # Assigning a type to the variable 'if_condition_60912' (line 844)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 16), 'if_condition_60912', if_condition_60912)
        # SSA begins for if statement (line 844)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 845)
        # Processing the call arguments (line 845)
        str_60914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 37), 'str', 'Error code returned by bispev: %s')
        # Getting the type of 'ier' (line 845)
        ier_60915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 75), 'ier', False)
        # Applying the binary operator '%' (line 845)
        result_mod_60916 = python_operator(stypy.reporting.localization.Localization(__file__, 845, 37), '%', str_60914, ier_60915)
        
        # Processing the call keyword arguments (line 845)
        kwargs_60917 = {}
        # Getting the type of 'ValueError' (line 845)
        ValueError_60913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 26), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 845)
        ValueError_call_result_60918 = invoke(stypy.reporting.localization.Localization(__file__, 845, 26), ValueError_60913, *[result_mod_60916], **kwargs_60917)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 845, 20), ValueError_call_result_60918, 'raise parameter', BaseException)
        # SSA join for if statement (line 844)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 838)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 834)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'x' (line 848)
        x_60919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 15), 'x')
        # Obtaining the member 'shape' of a type (line 848)
        shape_60920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 15), x_60919, 'shape')
        # Getting the type of 'y' (line 848)
        y_60921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 26), 'y')
        # Obtaining the member 'shape' of a type (line 848)
        shape_60922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 26), y_60921, 'shape')
        # Applying the binary operator '!=' (line 848)
        result_ne_60923 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 15), '!=', shape_60920, shape_60922)
        
        # Testing the type of an if condition (line 848)
        if_condition_60924 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 848, 12), result_ne_60923)
        # Assigning a type to the variable 'if_condition_60924' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'if_condition_60924', if_condition_60924)
        # SSA begins for if statement (line 848)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 849):
        
        # Assigning a Subscript to a Name (line 849):
        
        # Obtaining the type of the subscript
        int_60925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 16), 'int')
        
        # Call to broadcast_arrays(...): (line 849)
        # Processing the call arguments (line 849)
        # Getting the type of 'x' (line 849)
        x_60928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 43), 'x', False)
        # Getting the type of 'y' (line 849)
        y_60929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 46), 'y', False)
        # Processing the call keyword arguments (line 849)
        kwargs_60930 = {}
        # Getting the type of 'np' (line 849)
        np_60926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 23), 'np', False)
        # Obtaining the member 'broadcast_arrays' of a type (line 849)
        broadcast_arrays_60927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 23), np_60926, 'broadcast_arrays')
        # Calling broadcast_arrays(args, kwargs) (line 849)
        broadcast_arrays_call_result_60931 = invoke(stypy.reporting.localization.Localization(__file__, 849, 23), broadcast_arrays_60927, *[x_60928, y_60929], **kwargs_60930)
        
        # Obtaining the member '__getitem__' of a type (line 849)
        getitem___60932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 16), broadcast_arrays_call_result_60931, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 849)
        subscript_call_result_60933 = invoke(stypy.reporting.localization.Localization(__file__, 849, 16), getitem___60932, int_60925)
        
        # Assigning a type to the variable 'tuple_var_assignment_59553' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'tuple_var_assignment_59553', subscript_call_result_60933)
        
        # Assigning a Subscript to a Name (line 849):
        
        # Obtaining the type of the subscript
        int_60934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 16), 'int')
        
        # Call to broadcast_arrays(...): (line 849)
        # Processing the call arguments (line 849)
        # Getting the type of 'x' (line 849)
        x_60937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 43), 'x', False)
        # Getting the type of 'y' (line 849)
        y_60938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 46), 'y', False)
        # Processing the call keyword arguments (line 849)
        kwargs_60939 = {}
        # Getting the type of 'np' (line 849)
        np_60935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 23), 'np', False)
        # Obtaining the member 'broadcast_arrays' of a type (line 849)
        broadcast_arrays_60936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 23), np_60935, 'broadcast_arrays')
        # Calling broadcast_arrays(args, kwargs) (line 849)
        broadcast_arrays_call_result_60940 = invoke(stypy.reporting.localization.Localization(__file__, 849, 23), broadcast_arrays_60936, *[x_60937, y_60938], **kwargs_60939)
        
        # Obtaining the member '__getitem__' of a type (line 849)
        getitem___60941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 16), broadcast_arrays_call_result_60940, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 849)
        subscript_call_result_60942 = invoke(stypy.reporting.localization.Localization(__file__, 849, 16), getitem___60941, int_60934)
        
        # Assigning a type to the variable 'tuple_var_assignment_59554' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'tuple_var_assignment_59554', subscript_call_result_60942)
        
        # Assigning a Name to a Name (line 849):
        # Getting the type of 'tuple_var_assignment_59553' (line 849)
        tuple_var_assignment_59553_60943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'tuple_var_assignment_59553')
        # Assigning a type to the variable 'x' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'x', tuple_var_assignment_59553_60943)
        
        # Assigning a Name to a Name (line 849):
        # Getting the type of 'tuple_var_assignment_59554' (line 849)
        tuple_var_assignment_59554_60944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 16), 'tuple_var_assignment_59554')
        # Assigning a type to the variable 'y' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 19), 'y', tuple_var_assignment_59554_60944)
        # SSA join for if statement (line 848)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Attribute to a Name (line 851):
        
        # Assigning a Attribute to a Name (line 851):
        # Getting the type of 'x' (line 851)
        x_60945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 20), 'x')
        # Obtaining the member 'shape' of a type (line 851)
        shape_60946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 20), x_60945, 'shape')
        # Assigning a type to the variable 'shape' (line 851)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 12), 'shape', shape_60946)
        
        # Assigning a Call to a Name (line 852):
        
        # Assigning a Call to a Name (line 852):
        
        # Call to ravel(...): (line 852)
        # Processing the call keyword arguments (line 852)
        kwargs_60949 = {}
        # Getting the type of 'x' (line 852)
        x_60947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 16), 'x', False)
        # Obtaining the member 'ravel' of a type (line 852)
        ravel_60948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 16), x_60947, 'ravel')
        # Calling ravel(args, kwargs) (line 852)
        ravel_call_result_60950 = invoke(stypy.reporting.localization.Localization(__file__, 852, 16), ravel_60948, *[], **kwargs_60949)
        
        # Assigning a type to the variable 'x' (line 852)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 12), 'x', ravel_call_result_60950)
        
        # Assigning a Call to a Name (line 853):
        
        # Assigning a Call to a Name (line 853):
        
        # Call to ravel(...): (line 853)
        # Processing the call keyword arguments (line 853)
        kwargs_60953 = {}
        # Getting the type of 'y' (line 853)
        y_60951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 16), 'y', False)
        # Obtaining the member 'ravel' of a type (line 853)
        ravel_60952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 16), y_60951, 'ravel')
        # Calling ravel(args, kwargs) (line 853)
        ravel_call_result_60954 = invoke(stypy.reporting.localization.Localization(__file__, 853, 16), ravel_60952, *[], **kwargs_60953)
        
        # Assigning a type to the variable 'y' (line 853)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 853, 12), 'y', ravel_call_result_60954)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'x' (line 855)
        x_60955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 15), 'x')
        # Obtaining the member 'size' of a type (line 855)
        size_60956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 15), x_60955, 'size')
        int_60957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 25), 'int')
        # Applying the binary operator '==' (line 855)
        result_eq_60958 = python_operator(stypy.reporting.localization.Localization(__file__, 855, 15), '==', size_60956, int_60957)
        
        
        # Getting the type of 'y' (line 855)
        y_60959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 30), 'y')
        # Obtaining the member 'size' of a type (line 855)
        size_60960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 30), y_60959, 'size')
        int_60961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 40), 'int')
        # Applying the binary operator '==' (line 855)
        result_eq_60962 = python_operator(stypy.reporting.localization.Localization(__file__, 855, 30), '==', size_60960, int_60961)
        
        # Applying the binary operator 'or' (line 855)
        result_or_keyword_60963 = python_operator(stypy.reporting.localization.Localization(__file__, 855, 15), 'or', result_eq_60958, result_eq_60962)
        
        # Testing the type of an if condition (line 855)
        if_condition_60964 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 855, 12), result_or_keyword_60963)
        # Assigning a type to the variable 'if_condition_60964' (line 855)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 12), 'if_condition_60964', if_condition_60964)
        # SSA begins for if statement (line 855)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to zeros(...): (line 856)
        # Processing the call arguments (line 856)
        # Getting the type of 'shape' (line 856)
        shape_60967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 32), 'shape', False)
        # Processing the call keyword arguments (line 856)
        
        # Obtaining the type of the subscript
        int_60968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 54), 'int')
        # Getting the type of 'self' (line 856)
        self_60969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 45), 'self', False)
        # Obtaining the member 'tck' of a type (line 856)
        tck_60970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 45), self_60969, 'tck')
        # Obtaining the member '__getitem__' of a type (line 856)
        getitem___60971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 45), tck_60970, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 856)
        subscript_call_result_60972 = invoke(stypy.reporting.localization.Localization(__file__, 856, 45), getitem___60971, int_60968)
        
        # Obtaining the member 'dtype' of a type (line 856)
        dtype_60973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 45), subscript_call_result_60972, 'dtype')
        keyword_60974 = dtype_60973
        kwargs_60975 = {'dtype': keyword_60974}
        # Getting the type of 'np' (line 856)
        np_60965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 23), 'np', False)
        # Obtaining the member 'zeros' of a type (line 856)
        zeros_60966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 23), np_60965, 'zeros')
        # Calling zeros(args, kwargs) (line 856)
        zeros_call_result_60976 = invoke(stypy.reporting.localization.Localization(__file__, 856, 23), zeros_60966, *[shape_60967], **kwargs_60975)
        
        # Assigning a type to the variable 'stypy_return_type' (line 856)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 856, 16), 'stypy_return_type', zeros_call_result_60976)
        # SSA join for if statement (line 855)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        # Getting the type of 'dx' (line 858)
        dx_60977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 15), 'dx')
        # Getting the type of 'dy' (line 858)
        dy_60978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 21), 'dy')
        # Applying the binary operator 'or' (line 858)
        result_or_keyword_60979 = python_operator(stypy.reporting.localization.Localization(__file__, 858, 15), 'or', dx_60977, dy_60978)
        
        # Testing the type of an if condition (line 858)
        if_condition_60980 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 858, 12), result_or_keyword_60979)
        # Assigning a type to the variable 'if_condition_60980' (line 858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 858, 12), 'if_condition_60980', if_condition_60980)
        # SSA begins for if statement (line 858)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 859):
        
        # Assigning a Subscript to a Name (line 859):
        
        # Obtaining the type of the subscript
        int_60981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 16), 'int')
        
        # Call to pardeu(...): (line 859)
        # Processing the call arguments (line 859)
        # Getting the type of 'tx' (line 859)
        tx_60984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 40), 'tx', False)
        # Getting the type of 'ty' (line 859)
        ty_60985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 43), 'ty', False)
        # Getting the type of 'c' (line 859)
        c_60986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 46), 'c', False)
        # Getting the type of 'kx' (line 859)
        kx_60987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 48), 'kx', False)
        # Getting the type of 'ky' (line 859)
        ky_60988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 51), 'ky', False)
        # Getting the type of 'dx' (line 859)
        dx_60989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 54), 'dx', False)
        # Getting the type of 'dy' (line 859)
        dy_60990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 57), 'dy', False)
        # Getting the type of 'x' (line 859)
        x_60991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 60), 'x', False)
        # Getting the type of 'y' (line 859)
        y_60992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 62), 'y', False)
        # Processing the call keyword arguments (line 859)
        kwargs_60993 = {}
        # Getting the type of 'dfitpack' (line 859)
        dfitpack_60982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 24), 'dfitpack', False)
        # Obtaining the member 'pardeu' of a type (line 859)
        pardeu_60983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 24), dfitpack_60982, 'pardeu')
        # Calling pardeu(args, kwargs) (line 859)
        pardeu_call_result_60994 = invoke(stypy.reporting.localization.Localization(__file__, 859, 24), pardeu_60983, *[tx_60984, ty_60985, c_60986, kx_60987, ky_60988, dx_60989, dy_60990, x_60991, y_60992], **kwargs_60993)
        
        # Obtaining the member '__getitem__' of a type (line 859)
        getitem___60995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 16), pardeu_call_result_60994, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 859)
        subscript_call_result_60996 = invoke(stypy.reporting.localization.Localization(__file__, 859, 16), getitem___60995, int_60981)
        
        # Assigning a type to the variable 'tuple_var_assignment_59555' (line 859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 16), 'tuple_var_assignment_59555', subscript_call_result_60996)
        
        # Assigning a Subscript to a Name (line 859):
        
        # Obtaining the type of the subscript
        int_60997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 16), 'int')
        
        # Call to pardeu(...): (line 859)
        # Processing the call arguments (line 859)
        # Getting the type of 'tx' (line 859)
        tx_61000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 40), 'tx', False)
        # Getting the type of 'ty' (line 859)
        ty_61001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 43), 'ty', False)
        # Getting the type of 'c' (line 859)
        c_61002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 46), 'c', False)
        # Getting the type of 'kx' (line 859)
        kx_61003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 48), 'kx', False)
        # Getting the type of 'ky' (line 859)
        ky_61004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 51), 'ky', False)
        # Getting the type of 'dx' (line 859)
        dx_61005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 54), 'dx', False)
        # Getting the type of 'dy' (line 859)
        dy_61006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 57), 'dy', False)
        # Getting the type of 'x' (line 859)
        x_61007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 60), 'x', False)
        # Getting the type of 'y' (line 859)
        y_61008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 62), 'y', False)
        # Processing the call keyword arguments (line 859)
        kwargs_61009 = {}
        # Getting the type of 'dfitpack' (line 859)
        dfitpack_60998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 24), 'dfitpack', False)
        # Obtaining the member 'pardeu' of a type (line 859)
        pardeu_60999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 24), dfitpack_60998, 'pardeu')
        # Calling pardeu(args, kwargs) (line 859)
        pardeu_call_result_61010 = invoke(stypy.reporting.localization.Localization(__file__, 859, 24), pardeu_60999, *[tx_61000, ty_61001, c_61002, kx_61003, ky_61004, dx_61005, dy_61006, x_61007, y_61008], **kwargs_61009)
        
        # Obtaining the member '__getitem__' of a type (line 859)
        getitem___61011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 16), pardeu_call_result_61010, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 859)
        subscript_call_result_61012 = invoke(stypy.reporting.localization.Localization(__file__, 859, 16), getitem___61011, int_60997)
        
        # Assigning a type to the variable 'tuple_var_assignment_59556' (line 859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 16), 'tuple_var_assignment_59556', subscript_call_result_61012)
        
        # Assigning a Name to a Name (line 859):
        # Getting the type of 'tuple_var_assignment_59555' (line 859)
        tuple_var_assignment_59555_61013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 16), 'tuple_var_assignment_59555')
        # Assigning a type to the variable 'z' (line 859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 16), 'z', tuple_var_assignment_59555_61013)
        
        # Assigning a Name to a Name (line 859):
        # Getting the type of 'tuple_var_assignment_59556' (line 859)
        tuple_var_assignment_59556_61014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 16), 'tuple_var_assignment_59556')
        # Assigning a type to the variable 'ier' (line 859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 18), 'ier', tuple_var_assignment_59556_61014)
        
        
        
        # Getting the type of 'ier' (line 860)
        ier_61015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 23), 'ier')
        int_61016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 30), 'int')
        # Applying the binary operator '==' (line 860)
        result_eq_61017 = python_operator(stypy.reporting.localization.Localization(__file__, 860, 23), '==', ier_61015, int_61016)
        
        # Applying the 'not' unary operator (line 860)
        result_not__61018 = python_operator(stypy.reporting.localization.Localization(__file__, 860, 19), 'not', result_eq_61017)
        
        # Testing the type of an if condition (line 860)
        if_condition_61019 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 860, 16), result_not__61018)
        # Assigning a type to the variable 'if_condition_61019' (line 860)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 860, 16), 'if_condition_61019', if_condition_61019)
        # SSA begins for if statement (line 860)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 861)
        # Processing the call arguments (line 861)
        str_61021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 37), 'str', 'Error code returned by pardeu: %s')
        # Getting the type of 'ier' (line 861)
        ier_61022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 75), 'ier', False)
        # Applying the binary operator '%' (line 861)
        result_mod_61023 = python_operator(stypy.reporting.localization.Localization(__file__, 861, 37), '%', str_61021, ier_61022)
        
        # Processing the call keyword arguments (line 861)
        kwargs_61024 = {}
        # Getting the type of 'ValueError' (line 861)
        ValueError_61020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 26), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 861)
        ValueError_call_result_61025 = invoke(stypy.reporting.localization.Localization(__file__, 861, 26), ValueError_61020, *[result_mod_61023], **kwargs_61024)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 861, 20), ValueError_call_result_61025, 'raise parameter', BaseException)
        # SSA join for if statement (line 860)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 858)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 863):
        
        # Assigning a Subscript to a Name (line 863):
        
        # Obtaining the type of the subscript
        int_61026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 16), 'int')
        
        # Call to bispeu(...): (line 863)
        # Processing the call arguments (line 863)
        # Getting the type of 'tx' (line 863)
        tx_61029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 40), 'tx', False)
        # Getting the type of 'ty' (line 863)
        ty_61030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 43), 'ty', False)
        # Getting the type of 'c' (line 863)
        c_61031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 46), 'c', False)
        # Getting the type of 'kx' (line 863)
        kx_61032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 48), 'kx', False)
        # Getting the type of 'ky' (line 863)
        ky_61033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 51), 'ky', False)
        # Getting the type of 'x' (line 863)
        x_61034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 54), 'x', False)
        # Getting the type of 'y' (line 863)
        y_61035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 56), 'y', False)
        # Processing the call keyword arguments (line 863)
        kwargs_61036 = {}
        # Getting the type of 'dfitpack' (line 863)
        dfitpack_61027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 24), 'dfitpack', False)
        # Obtaining the member 'bispeu' of a type (line 863)
        bispeu_61028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 24), dfitpack_61027, 'bispeu')
        # Calling bispeu(args, kwargs) (line 863)
        bispeu_call_result_61037 = invoke(stypy.reporting.localization.Localization(__file__, 863, 24), bispeu_61028, *[tx_61029, ty_61030, c_61031, kx_61032, ky_61033, x_61034, y_61035], **kwargs_61036)
        
        # Obtaining the member '__getitem__' of a type (line 863)
        getitem___61038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 16), bispeu_call_result_61037, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 863)
        subscript_call_result_61039 = invoke(stypy.reporting.localization.Localization(__file__, 863, 16), getitem___61038, int_61026)
        
        # Assigning a type to the variable 'tuple_var_assignment_59557' (line 863)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'tuple_var_assignment_59557', subscript_call_result_61039)
        
        # Assigning a Subscript to a Name (line 863):
        
        # Obtaining the type of the subscript
        int_61040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 16), 'int')
        
        # Call to bispeu(...): (line 863)
        # Processing the call arguments (line 863)
        # Getting the type of 'tx' (line 863)
        tx_61043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 40), 'tx', False)
        # Getting the type of 'ty' (line 863)
        ty_61044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 43), 'ty', False)
        # Getting the type of 'c' (line 863)
        c_61045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 46), 'c', False)
        # Getting the type of 'kx' (line 863)
        kx_61046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 48), 'kx', False)
        # Getting the type of 'ky' (line 863)
        ky_61047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 51), 'ky', False)
        # Getting the type of 'x' (line 863)
        x_61048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 54), 'x', False)
        # Getting the type of 'y' (line 863)
        y_61049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 56), 'y', False)
        # Processing the call keyword arguments (line 863)
        kwargs_61050 = {}
        # Getting the type of 'dfitpack' (line 863)
        dfitpack_61041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 24), 'dfitpack', False)
        # Obtaining the member 'bispeu' of a type (line 863)
        bispeu_61042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 24), dfitpack_61041, 'bispeu')
        # Calling bispeu(args, kwargs) (line 863)
        bispeu_call_result_61051 = invoke(stypy.reporting.localization.Localization(__file__, 863, 24), bispeu_61042, *[tx_61043, ty_61044, c_61045, kx_61046, ky_61047, x_61048, y_61049], **kwargs_61050)
        
        # Obtaining the member '__getitem__' of a type (line 863)
        getitem___61052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 16), bispeu_call_result_61051, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 863)
        subscript_call_result_61053 = invoke(stypy.reporting.localization.Localization(__file__, 863, 16), getitem___61052, int_61040)
        
        # Assigning a type to the variable 'tuple_var_assignment_59558' (line 863)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'tuple_var_assignment_59558', subscript_call_result_61053)
        
        # Assigning a Name to a Name (line 863):
        # Getting the type of 'tuple_var_assignment_59557' (line 863)
        tuple_var_assignment_59557_61054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'tuple_var_assignment_59557')
        # Assigning a type to the variable 'z' (line 863)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'z', tuple_var_assignment_59557_61054)
        
        # Assigning a Name to a Name (line 863):
        # Getting the type of 'tuple_var_assignment_59558' (line 863)
        tuple_var_assignment_59558_61055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'tuple_var_assignment_59558')
        # Assigning a type to the variable 'ier' (line 863)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 18), 'ier', tuple_var_assignment_59558_61055)
        
        
        
        # Getting the type of 'ier' (line 864)
        ier_61056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 23), 'ier')
        int_61057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 30), 'int')
        # Applying the binary operator '==' (line 864)
        result_eq_61058 = python_operator(stypy.reporting.localization.Localization(__file__, 864, 23), '==', ier_61056, int_61057)
        
        # Applying the 'not' unary operator (line 864)
        result_not__61059 = python_operator(stypy.reporting.localization.Localization(__file__, 864, 19), 'not', result_eq_61058)
        
        # Testing the type of an if condition (line 864)
        if_condition_61060 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 864, 16), result_not__61059)
        # Assigning a type to the variable 'if_condition_61060' (line 864)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 864, 16), 'if_condition_61060', if_condition_61060)
        # SSA begins for if statement (line 864)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 865)
        # Processing the call arguments (line 865)
        str_61062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 37), 'str', 'Error code returned by bispeu: %s')
        # Getting the type of 'ier' (line 865)
        ier_61063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 75), 'ier', False)
        # Applying the binary operator '%' (line 865)
        result_mod_61064 = python_operator(stypy.reporting.localization.Localization(__file__, 865, 37), '%', str_61062, ier_61063)
        
        # Processing the call keyword arguments (line 865)
        kwargs_61065 = {}
        # Getting the type of 'ValueError' (line 865)
        ValueError_61061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 26), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 865)
        ValueError_call_result_61066 = invoke(stypy.reporting.localization.Localization(__file__, 865, 26), ValueError_61061, *[result_mod_61064], **kwargs_61065)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 865, 20), ValueError_call_result_61066, 'raise parameter', BaseException)
        # SSA join for if statement (line 864)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 858)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 867):
        
        # Assigning a Call to a Name (line 867):
        
        # Call to reshape(...): (line 867)
        # Processing the call arguments (line 867)
        # Getting the type of 'shape' (line 867)
        shape_61069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 26), 'shape', False)
        # Processing the call keyword arguments (line 867)
        kwargs_61070 = {}
        # Getting the type of 'z' (line 867)
        z_61067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 16), 'z', False)
        # Obtaining the member 'reshape' of a type (line 867)
        reshape_61068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 16), z_61067, 'reshape')
        # Calling reshape(args, kwargs) (line 867)
        reshape_call_result_61071 = invoke(stypy.reporting.localization.Localization(__file__, 867, 16), reshape_61068, *[shape_61069], **kwargs_61070)
        
        # Assigning a type to the variable 'z' (line 867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 12), 'z', reshape_call_result_61071)
        # SSA join for if statement (line 834)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'z' (line 868)
        z_61072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 15), 'z')
        # Assigning a type to the variable 'stypy_return_type' (line 868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 868, 8), 'stypy_return_type', z_61072)
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 798)
        stypy_return_type_61073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_61073)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_61073


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 766, 0, False)
        # Assigning a type to the variable 'self' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, '_BivariateSplineBase.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable '_BivariateSplineBase' (line 766)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 0), '_BivariateSplineBase', _BivariateSplineBase)

# Assigning a Dict to a Name (line 871):

# Assigning a Dict to a Name (line 871):

# Obtaining an instance of the builtin type 'dict' (line 871)
dict_61074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 19), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 871)
# Adding element type (key, value) (line 871)
int_61075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 20), 'int')
str_61076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, (-1)), 'str', '\nThe required storage space exceeds the available storage space: nxest\nor nyest too small, or s too small.\nThe weighted least-squares spline corresponds to the current set of\nknots.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 19), dict_61074, (int_61075, str_61076))
# Adding element type (key, value) (line 871)
int_61077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 20), 'int')
str_61078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 880, (-1)), 'str', '\nA theoretically impossible result was found during the iteration\nprocess for finding a smoothing spline with fp = s: s too small or\nbadly chosen eps.\nWeighted sum of squared residuals does not satisfy abs(fp-s)/s < tol.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 19), dict_61074, (int_61077, str_61078))
# Adding element type (key, value) (line 871)
int_61079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 881, 20), 'int')
str_61080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 885, (-1)), 'str', '\nthe maximal number of iterations maxit (set to 20 by the program)\nallowed for finding a smoothing spline with fp=s has been reached:\ns too small.\nWeighted sum of squared residuals does not satisfy abs(fp-s)/s < tol.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 19), dict_61074, (int_61079, str_61080))
# Adding element type (key, value) (line 871)
int_61081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 20), 'int')
str_61082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, (-1)), 'str', '\nNo more knots can be added because the number of b-spline coefficients\n(nx-kx-1)*(ny-ky-1) already exceeds the number of data points m:\neither s or m too small.\nThe weighted least-squares spline corresponds to the current set of\nknots.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 19), dict_61074, (int_61081, str_61082))
# Adding element type (key, value) (line 871)
int_61083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 20), 'int')
str_61084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, (-1)), 'str', '\nNo more knots can be added because the additional knot would (quasi)\ncoincide with an old one: s too small or too large a weight to an\ninaccurate data point.\nThe weighted least-squares spline corresponds to the current set of\nknots.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 19), dict_61074, (int_61083, str_61084))
# Adding element type (key, value) (line 871)
int_61085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 20), 'int')
str_61086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 904, (-1)), 'str', '\nError on entry, no approximation returned. The following conditions\nmust hold:\nxb<=x[i]<=xe, yb<=y[i]<=ye, w[i]>0, i=0..m-1\nIf iopt==-1, then\n  xb<tx[kx+1]<tx[kx+2]<...<tx[nx-kx-2]<xe\n  yb<ty[ky+1]<ty[ky+2]<...<ty[ny-ky-2]<ye')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 19), dict_61074, (int_61085, str_61086))
# Adding element type (key, value) (line 871)
int_61087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 20), 'int')
str_61088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, (-1)), 'str', '\nThe coefficients of the spline returned have been computed as the\nminimal norm least-squares solution of a (numerically) rank deficient\nsystem (deficiency=%i). If deficiency is large, the results may be\ninaccurate. Deficiency may strongly depend on the value of eps.')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 19), dict_61074, (int_61087, str_61088))

# Assigning a type to the variable '_surfit_messages' (line 871)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 0), '_surfit_messages', dict_61074)
# Declaration of the 'BivariateSpline' class
# Getting the type of '_BivariateSplineBase' (line 913)
_BivariateSplineBase_61089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 22), '_BivariateSplineBase')

class BivariateSpline(_BivariateSplineBase_61089, ):
    str_61090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, (-1)), 'str', '\n    Base class for bivariate splines.\n\n    This describes a spline ``s(x, y)`` of degrees ``kx`` and ``ky`` on\n    the rectangle ``[xb, xe] * [yb, ye]`` calculated from a given set\n    of data points ``(x, y, z)``.\n\n    This class is meant to be subclassed, not instantiated directly.\n    To construct these splines, call either `SmoothBivariateSpline` or\n    `LSQBivariateSpline`.\n\n    See Also\n    --------\n    UnivariateSpline : a similar class for univariate spline interpolation\n    SmoothBivariateSpline :\n        to create a BivariateSpline through the given points\n    LSQBivariateSpline :\n        to create a BivariateSpline using weighted least-squares fitting\n    SphereBivariateSpline :\n        bivariate spline interpolation in spherical cooridinates\n    bisplrep : older wrapping of FITPACK\n    bisplev : older wrapping of FITPACK\n\n    ')

    @norecursion
    def _from_tck(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_from_tck'
        module_type_store = module_type_store.open_function_context('_from_tck', 939, 4, False)
        # Assigning a type to the variable 'self' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_localization', localization)
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_type_store', module_type_store)
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_function_name', 'BivariateSpline._from_tck')
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_param_names_list', ['tck'])
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_varargs_param_name', None)
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_kwargs_param_name', None)
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_call_defaults', defaults)
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_call_varargs', varargs)
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        BivariateSpline._from_tck.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'BivariateSpline._from_tck', ['tck'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_from_tck', localization, ['tck'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_from_tck(...)' code ##################

        str_61091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 8), 'str', 'Construct a spline object from given tck and degree')
        
        # Assigning a Call to a Name (line 942):
        
        # Assigning a Call to a Name (line 942):
        
        # Call to __new__(...): (line 942)
        # Processing the call arguments (line 942)
        # Getting the type of 'cls' (line 942)
        cls_61094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 27), 'cls', False)
        # Processing the call keyword arguments (line 942)
        kwargs_61095 = {}
        # Getting the type of 'cls' (line 942)
        cls_61092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 15), 'cls', False)
        # Obtaining the member '__new__' of a type (line 942)
        new___61093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 942, 15), cls_61092, '__new__')
        # Calling __new__(args, kwargs) (line 942)
        new___call_result_61096 = invoke(stypy.reporting.localization.Localization(__file__, 942, 15), new___61093, *[cls_61094], **kwargs_61095)
        
        # Assigning a type to the variable 'self' (line 942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 942, 8), 'self', new___call_result_61096)
        
        
        
        # Call to len(...): (line 943)
        # Processing the call arguments (line 943)
        # Getting the type of 'tck' (line 943)
        tck_61098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 15), 'tck', False)
        # Processing the call keyword arguments (line 943)
        kwargs_61099 = {}
        # Getting the type of 'len' (line 943)
        len_61097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 11), 'len', False)
        # Calling len(args, kwargs) (line 943)
        len_call_result_61100 = invoke(stypy.reporting.localization.Localization(__file__, 943, 11), len_61097, *[tck_61098], **kwargs_61099)
        
        int_61101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 23), 'int')
        # Applying the binary operator '!=' (line 943)
        result_ne_61102 = python_operator(stypy.reporting.localization.Localization(__file__, 943, 11), '!=', len_call_result_61100, int_61101)
        
        # Testing the type of an if condition (line 943)
        if_condition_61103 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 943, 8), result_ne_61102)
        # Assigning a type to the variable 'if_condition_61103' (line 943)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 943, 8), 'if_condition_61103', if_condition_61103)
        # SSA begins for if statement (line 943)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 944)
        # Processing the call arguments (line 944)
        str_61105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 29), 'str', 'tck should be a 5 element tuple of tx, ty, c, kx, ky')
        # Processing the call keyword arguments (line 944)
        kwargs_61106 = {}
        # Getting the type of 'ValueError' (line 944)
        ValueError_61104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 944)
        ValueError_call_result_61107 = invoke(stypy.reporting.localization.Localization(__file__, 944, 18), ValueError_61104, *[str_61105], **kwargs_61106)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 944, 12), ValueError_call_result_61107, 'raise parameter', BaseException)
        # SSA join for if statement (line 943)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Attribute (line 945):
        
        # Assigning a Subscript to a Attribute (line 945):
        
        # Obtaining the type of the subscript
        int_61108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 24), 'int')
        slice_61109 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 945, 19), None, int_61108, None)
        # Getting the type of 'tck' (line 945)
        tck_61110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 19), 'tck')
        # Obtaining the member '__getitem__' of a type (line 945)
        getitem___61111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 945, 19), tck_61110, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 945)
        subscript_call_result_61112 = invoke(stypy.reporting.localization.Localization(__file__, 945, 19), getitem___61111, slice_61109)
        
        # Getting the type of 'self' (line 945)
        self_61113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 8), 'self')
        # Setting the type of the member 'tck' of a type (line 945)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 945, 8), self_61113, 'tck', subscript_call_result_61112)
        
        # Assigning a Subscript to a Attribute (line 946):
        
        # Assigning a Subscript to a Attribute (line 946):
        
        # Obtaining the type of the subscript
        int_61114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 27), 'int')
        slice_61115 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 946, 23), int_61114, None, None)
        # Getting the type of 'tck' (line 946)
        tck_61116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 23), 'tck')
        # Obtaining the member '__getitem__' of a type (line 946)
        getitem___61117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 946, 23), tck_61116, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 946)
        subscript_call_result_61118 = invoke(stypy.reporting.localization.Localization(__file__, 946, 23), getitem___61117, slice_61115)
        
        # Getting the type of 'self' (line 946)
        self_61119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'self')
        # Setting the type of the member 'degrees' of a type (line 946)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 946, 8), self_61119, 'degrees', subscript_call_result_61118)
        # Getting the type of 'self' (line 947)
        self_61120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 15), 'self')
        # Assigning a type to the variable 'stypy_return_type' (line 947)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 8), 'stypy_return_type', self_61120)
        
        # ################# End of '_from_tck(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_from_tck' in the type store
        # Getting the type of 'stypy_return_type' (line 939)
        stypy_return_type_61121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_61121)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_from_tck'
        return stypy_return_type_61121


    @norecursion
    def ev(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_61122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 28), 'int')
        int_61123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 34), 'int')
        defaults = [int_61122, int_61123]
        # Create a new context for function 'ev'
        module_type_store = module_type_store.open_function_context('ev', 949, 4, False)
        # Assigning a type to the variable 'self' (line 950)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 950, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        BivariateSpline.ev.__dict__.__setitem__('stypy_localization', localization)
        BivariateSpline.ev.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        BivariateSpline.ev.__dict__.__setitem__('stypy_type_store', module_type_store)
        BivariateSpline.ev.__dict__.__setitem__('stypy_function_name', 'BivariateSpline.ev')
        BivariateSpline.ev.__dict__.__setitem__('stypy_param_names_list', ['xi', 'yi', 'dx', 'dy'])
        BivariateSpline.ev.__dict__.__setitem__('stypy_varargs_param_name', None)
        BivariateSpline.ev.__dict__.__setitem__('stypy_kwargs_param_name', None)
        BivariateSpline.ev.__dict__.__setitem__('stypy_call_defaults', defaults)
        BivariateSpline.ev.__dict__.__setitem__('stypy_call_varargs', varargs)
        BivariateSpline.ev.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        BivariateSpline.ev.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'BivariateSpline.ev', ['xi', 'yi', 'dx', 'dy'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'ev', localization, ['xi', 'yi', 'dx', 'dy'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'ev(...)' code ##################

        str_61124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, (-1)), 'str', '\n        Evaluate the spline at points\n\n        Returns the interpolated value at ``(xi[i], yi[i]),\n        i=0,...,len(xi)-1``.\n\n        Parameters\n        ----------\n        xi, yi : array_like\n            Input coordinates. Standard Numpy broadcasting is obeyed.\n        dx : int, optional\n            Order of x-derivative\n\n            .. versionadded:: 0.14.0\n        dy : int, optional\n            Order of y-derivative\n\n            .. versionadded:: 0.14.0\n        ')
        
        # Call to __call__(...): (line 969)
        # Processing the call arguments (line 969)
        # Getting the type of 'xi' (line 969)
        xi_61127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 29), 'xi', False)
        # Getting the type of 'yi' (line 969)
        yi_61128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 33), 'yi', False)
        # Processing the call keyword arguments (line 969)
        # Getting the type of 'dx' (line 969)
        dx_61129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 40), 'dx', False)
        keyword_61130 = dx_61129
        # Getting the type of 'dy' (line 969)
        dy_61131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 47), 'dy', False)
        keyword_61132 = dy_61131
        # Getting the type of 'False' (line 969)
        False_61133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 56), 'False', False)
        keyword_61134 = False_61133
        kwargs_61135 = {'grid': keyword_61134, 'dx': keyword_61130, 'dy': keyword_61132}
        # Getting the type of 'self' (line 969)
        self_61125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 15), 'self', False)
        # Obtaining the member '__call__' of a type (line 969)
        call___61126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 969, 15), self_61125, '__call__')
        # Calling __call__(args, kwargs) (line 969)
        call___call_result_61136 = invoke(stypy.reporting.localization.Localization(__file__, 969, 15), call___61126, *[xi_61127, yi_61128], **kwargs_61135)
        
        # Assigning a type to the variable 'stypy_return_type' (line 969)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 969, 8), 'stypy_return_type', call___call_result_61136)
        
        # ################# End of 'ev(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'ev' in the type store
        # Getting the type of 'stypy_return_type' (line 949)
        stypy_return_type_61137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_61137)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'ev'
        return stypy_return_type_61137


    @norecursion
    def integral(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'integral'
        module_type_store = module_type_store.open_function_context('integral', 971, 4, False)
        # Assigning a type to the variable 'self' (line 972)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 972, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        BivariateSpline.integral.__dict__.__setitem__('stypy_localization', localization)
        BivariateSpline.integral.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        BivariateSpline.integral.__dict__.__setitem__('stypy_type_store', module_type_store)
        BivariateSpline.integral.__dict__.__setitem__('stypy_function_name', 'BivariateSpline.integral')
        BivariateSpline.integral.__dict__.__setitem__('stypy_param_names_list', ['xa', 'xb', 'ya', 'yb'])
        BivariateSpline.integral.__dict__.__setitem__('stypy_varargs_param_name', None)
        BivariateSpline.integral.__dict__.__setitem__('stypy_kwargs_param_name', None)
        BivariateSpline.integral.__dict__.__setitem__('stypy_call_defaults', defaults)
        BivariateSpline.integral.__dict__.__setitem__('stypy_call_varargs', varargs)
        BivariateSpline.integral.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        BivariateSpline.integral.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'BivariateSpline.integral', ['xa', 'xb', 'ya', 'yb'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'integral', localization, ['xa', 'xb', 'ya', 'yb'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'integral(...)' code ##################

        str_61138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 987, (-1)), 'str', '\n        Evaluate the integral of the spline over area [xa,xb] x [ya,yb].\n\n        Parameters\n        ----------\n        xa, xb : float\n            The end-points of the x integration interval.\n        ya, yb : float\n            The end-points of the y integration interval.\n\n        Returns\n        -------\n        integ : float\n            The value of the resulting integral.\n\n        ')
        
        # Assigning a Subscript to a Tuple (line 988):
        
        # Assigning a Subscript to a Name (line 988):
        
        # Obtaining the type of the subscript
        int_61139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 8), 'int')
        
        # Obtaining the type of the subscript
        int_61140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 28), 'int')
        slice_61141 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 988, 18), None, int_61140, None)
        # Getting the type of 'self' (line 988)
        self_61142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 18), 'self')
        # Obtaining the member 'tck' of a type (line 988)
        tck_61143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 18), self_61142, 'tck')
        # Obtaining the member '__getitem__' of a type (line 988)
        getitem___61144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 18), tck_61143, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 988)
        subscript_call_result_61145 = invoke(stypy.reporting.localization.Localization(__file__, 988, 18), getitem___61144, slice_61141)
        
        # Obtaining the member '__getitem__' of a type (line 988)
        getitem___61146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 8), subscript_call_result_61145, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 988)
        subscript_call_result_61147 = invoke(stypy.reporting.localization.Localization(__file__, 988, 8), getitem___61146, int_61139)
        
        # Assigning a type to the variable 'tuple_var_assignment_59559' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'tuple_var_assignment_59559', subscript_call_result_61147)
        
        # Assigning a Subscript to a Name (line 988):
        
        # Obtaining the type of the subscript
        int_61148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 8), 'int')
        
        # Obtaining the type of the subscript
        int_61149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 28), 'int')
        slice_61150 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 988, 18), None, int_61149, None)
        # Getting the type of 'self' (line 988)
        self_61151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 18), 'self')
        # Obtaining the member 'tck' of a type (line 988)
        tck_61152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 18), self_61151, 'tck')
        # Obtaining the member '__getitem__' of a type (line 988)
        getitem___61153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 18), tck_61152, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 988)
        subscript_call_result_61154 = invoke(stypy.reporting.localization.Localization(__file__, 988, 18), getitem___61153, slice_61150)
        
        # Obtaining the member '__getitem__' of a type (line 988)
        getitem___61155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 8), subscript_call_result_61154, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 988)
        subscript_call_result_61156 = invoke(stypy.reporting.localization.Localization(__file__, 988, 8), getitem___61155, int_61148)
        
        # Assigning a type to the variable 'tuple_var_assignment_59560' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'tuple_var_assignment_59560', subscript_call_result_61156)
        
        # Assigning a Subscript to a Name (line 988):
        
        # Obtaining the type of the subscript
        int_61157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 8), 'int')
        
        # Obtaining the type of the subscript
        int_61158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 28), 'int')
        slice_61159 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 988, 18), None, int_61158, None)
        # Getting the type of 'self' (line 988)
        self_61160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 18), 'self')
        # Obtaining the member 'tck' of a type (line 988)
        tck_61161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 18), self_61160, 'tck')
        # Obtaining the member '__getitem__' of a type (line 988)
        getitem___61162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 18), tck_61161, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 988)
        subscript_call_result_61163 = invoke(stypy.reporting.localization.Localization(__file__, 988, 18), getitem___61162, slice_61159)
        
        # Obtaining the member '__getitem__' of a type (line 988)
        getitem___61164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 8), subscript_call_result_61163, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 988)
        subscript_call_result_61165 = invoke(stypy.reporting.localization.Localization(__file__, 988, 8), getitem___61164, int_61157)
        
        # Assigning a type to the variable 'tuple_var_assignment_59561' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'tuple_var_assignment_59561', subscript_call_result_61165)
        
        # Assigning a Name to a Name (line 988):
        # Getting the type of 'tuple_var_assignment_59559' (line 988)
        tuple_var_assignment_59559_61166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'tuple_var_assignment_59559')
        # Assigning a type to the variable 'tx' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'tx', tuple_var_assignment_59559_61166)
        
        # Assigning a Name to a Name (line 988):
        # Getting the type of 'tuple_var_assignment_59560' (line 988)
        tuple_var_assignment_59560_61167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'tuple_var_assignment_59560')
        # Assigning a type to the variable 'ty' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 11), 'ty', tuple_var_assignment_59560_61167)
        
        # Assigning a Name to a Name (line 988):
        # Getting the type of 'tuple_var_assignment_59561' (line 988)
        tuple_var_assignment_59561_61168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'tuple_var_assignment_59561')
        # Assigning a type to the variable 'c' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 14), 'c', tuple_var_assignment_59561_61168)
        
        # Assigning a Attribute to a Tuple (line 989):
        
        # Assigning a Subscript to a Name (line 989):
        
        # Obtaining the type of the subscript
        int_61169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 8), 'int')
        # Getting the type of 'self' (line 989)
        self_61170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 16), 'self')
        # Obtaining the member 'degrees' of a type (line 989)
        degrees_61171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 16), self_61170, 'degrees')
        # Obtaining the member '__getitem__' of a type (line 989)
        getitem___61172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 8), degrees_61171, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 989)
        subscript_call_result_61173 = invoke(stypy.reporting.localization.Localization(__file__, 989, 8), getitem___61172, int_61169)
        
        # Assigning a type to the variable 'tuple_var_assignment_59562' (line 989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'tuple_var_assignment_59562', subscript_call_result_61173)
        
        # Assigning a Subscript to a Name (line 989):
        
        # Obtaining the type of the subscript
        int_61174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 8), 'int')
        # Getting the type of 'self' (line 989)
        self_61175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 16), 'self')
        # Obtaining the member 'degrees' of a type (line 989)
        degrees_61176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 16), self_61175, 'degrees')
        # Obtaining the member '__getitem__' of a type (line 989)
        getitem___61177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 8), degrees_61176, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 989)
        subscript_call_result_61178 = invoke(stypy.reporting.localization.Localization(__file__, 989, 8), getitem___61177, int_61174)
        
        # Assigning a type to the variable 'tuple_var_assignment_59563' (line 989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'tuple_var_assignment_59563', subscript_call_result_61178)
        
        # Assigning a Name to a Name (line 989):
        # Getting the type of 'tuple_var_assignment_59562' (line 989)
        tuple_var_assignment_59562_61179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'tuple_var_assignment_59562')
        # Assigning a type to the variable 'kx' (line 989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'kx', tuple_var_assignment_59562_61179)
        
        # Assigning a Name to a Name (line 989):
        # Getting the type of 'tuple_var_assignment_59563' (line 989)
        tuple_var_assignment_59563_61180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'tuple_var_assignment_59563')
        # Assigning a type to the variable 'ky' (line 989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 11), 'ky', tuple_var_assignment_59563_61180)
        
        # Call to dblint(...): (line 990)
        # Processing the call arguments (line 990)
        # Getting the type of 'tx' (line 990)
        tx_61183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 31), 'tx', False)
        # Getting the type of 'ty' (line 990)
        ty_61184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 34), 'ty', False)
        # Getting the type of 'c' (line 990)
        c_61185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 37), 'c', False)
        # Getting the type of 'kx' (line 990)
        kx_61186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 39), 'kx', False)
        # Getting the type of 'ky' (line 990)
        ky_61187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 42), 'ky', False)
        # Getting the type of 'xa' (line 990)
        xa_61188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 45), 'xa', False)
        # Getting the type of 'xb' (line 990)
        xb_61189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 48), 'xb', False)
        # Getting the type of 'ya' (line 990)
        ya_61190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 51), 'ya', False)
        # Getting the type of 'yb' (line 990)
        yb_61191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 54), 'yb', False)
        # Processing the call keyword arguments (line 990)
        kwargs_61192 = {}
        # Getting the type of 'dfitpack' (line 990)
        dfitpack_61181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 990, 15), 'dfitpack', False)
        # Obtaining the member 'dblint' of a type (line 990)
        dblint_61182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 990, 15), dfitpack_61181, 'dblint')
        # Calling dblint(args, kwargs) (line 990)
        dblint_call_result_61193 = invoke(stypy.reporting.localization.Localization(__file__, 990, 15), dblint_61182, *[tx_61183, ty_61184, c_61185, kx_61186, ky_61187, xa_61188, xb_61189, ya_61190, yb_61191], **kwargs_61192)
        
        # Assigning a type to the variable 'stypy_return_type' (line 990)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 990, 8), 'stypy_return_type', dblint_call_result_61193)
        
        # ################# End of 'integral(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'integral' in the type store
        # Getting the type of 'stypy_return_type' (line 971)
        stypy_return_type_61194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_61194)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'integral'
        return stypy_return_type_61194


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 913, 0, False)
        # Assigning a type to the variable 'self' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'BivariateSpline.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'BivariateSpline' (line 913)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 0), 'BivariateSpline', BivariateSpline)
# Declaration of the 'SmoothBivariateSpline' class
# Getting the type of 'BivariateSpline' (line 993)
BivariateSpline_61195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 28), 'BivariateSpline')

class SmoothBivariateSpline(BivariateSpline_61195, ):
    str_61196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1030, (-1)), 'str', '\n    Smooth bivariate spline approximation.\n\n    Parameters\n    ----------\n    x, y, z : array_like\n        1-D sequences of data points (order is not important).\n    w : array_like, optional\n        Positive 1-D sequence of weights, of same length as `x`, `y` and `z`.\n    bbox : array_like, optional\n        Sequence of length 4 specifying the boundary of the rectangular\n        approximation domain.  By default,\n        ``bbox=[min(x,tx),max(x,tx), min(y,ty),max(y,ty)]``.\n    kx, ky : ints, optional\n        Degrees of the bivariate spline. Default is 3.\n    s : float, optional\n        Positive smoothing factor defined for estimation condition:\n        ``sum((w[i]*(z[i]-s(x[i], y[i])))**2, axis=0) <= s``\n        Default ``s=len(w)`` which should be a good value if ``1/w[i]`` is an\n        estimate of the standard deviation of ``z[i]``.\n    eps : float, optional\n        A threshold for determining the effective rank of an over-determined\n        linear system of equations. `eps` should have a value between 0 and 1,\n        the default is 1e-16.\n\n    See Also\n    --------\n    bisplrep : an older wrapping of FITPACK\n    bisplev : an older wrapping of FITPACK\n    UnivariateSpline : a similar class for univariate spline interpolation\n    LSQUnivariateSpline : to create a BivariateSpline using weighted\n\n    Notes\n    -----\n    The length of `x`, `y` and `z` should be at least ``(kx+1) * (ky+1)``.\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1032)
        None_61197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 34), 'None')
        
        # Obtaining an instance of the builtin type 'list' (line 1032)
        list_61198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1032)
        # Adding element type (line 1032)
        # Getting the type of 'None' (line 1032)
        None_61199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 46), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1032, 45), list_61198, None_61199)
        
        int_61200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 54), 'int')
        # Applying the binary operator '*' (line 1032)
        result_mul_61201 = python_operator(stypy.reporting.localization.Localization(__file__, 1032, 45), '*', list_61198, int_61200)
        
        int_61202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 60), 'int')
        int_61203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 66), 'int')
        # Getting the type of 'None' (line 1032)
        None_61204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 71), 'None')
        # Getting the type of 'None' (line 1033)
        None_61205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 21), 'None')
        defaults = [None_61197, result_mul_61201, int_61202, int_61203, None_61204, None_61205]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1032, 4, False)
        # Assigning a type to the variable 'self' (line 1033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1033, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SmoothBivariateSpline.__init__', ['x', 'y', 'z', 'w', 'bbox', 'kx', 'ky', 's', 'eps'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['x', 'y', 'z', 'w', 'bbox', 'kx', 'ky', 's', 'eps'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Tuple (line 1034):
        
        # Assigning a Subscript to a Name (line 1034):
        
        # Obtaining the type of the subscript
        int_61206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 8), 'int')
        # Getting the type of 'bbox' (line 1034)
        bbox_61207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1034)
        getitem___61208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 8), bbox_61207, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1034)
        subscript_call_result_61209 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 8), getitem___61208, int_61206)
        
        # Assigning a type to the variable 'tuple_var_assignment_59564' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'tuple_var_assignment_59564', subscript_call_result_61209)
        
        # Assigning a Subscript to a Name (line 1034):
        
        # Obtaining the type of the subscript
        int_61210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 8), 'int')
        # Getting the type of 'bbox' (line 1034)
        bbox_61211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1034)
        getitem___61212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 8), bbox_61211, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1034)
        subscript_call_result_61213 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 8), getitem___61212, int_61210)
        
        # Assigning a type to the variable 'tuple_var_assignment_59565' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'tuple_var_assignment_59565', subscript_call_result_61213)
        
        # Assigning a Subscript to a Name (line 1034):
        
        # Obtaining the type of the subscript
        int_61214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 8), 'int')
        # Getting the type of 'bbox' (line 1034)
        bbox_61215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1034)
        getitem___61216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 8), bbox_61215, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1034)
        subscript_call_result_61217 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 8), getitem___61216, int_61214)
        
        # Assigning a type to the variable 'tuple_var_assignment_59566' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'tuple_var_assignment_59566', subscript_call_result_61217)
        
        # Assigning a Subscript to a Name (line 1034):
        
        # Obtaining the type of the subscript
        int_61218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 8), 'int')
        # Getting the type of 'bbox' (line 1034)
        bbox_61219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1034)
        getitem___61220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 8), bbox_61219, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1034)
        subscript_call_result_61221 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 8), getitem___61220, int_61218)
        
        # Assigning a type to the variable 'tuple_var_assignment_59567' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'tuple_var_assignment_59567', subscript_call_result_61221)
        
        # Assigning a Name to a Name (line 1034):
        # Getting the type of 'tuple_var_assignment_59564' (line 1034)
        tuple_var_assignment_59564_61222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'tuple_var_assignment_59564')
        # Assigning a type to the variable 'xb' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'xb', tuple_var_assignment_59564_61222)
        
        # Assigning a Name to a Name (line 1034):
        # Getting the type of 'tuple_var_assignment_59565' (line 1034)
        tuple_var_assignment_59565_61223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'tuple_var_assignment_59565')
        # Assigning a type to the variable 'xe' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 11), 'xe', tuple_var_assignment_59565_61223)
        
        # Assigning a Name to a Name (line 1034):
        # Getting the type of 'tuple_var_assignment_59566' (line 1034)
        tuple_var_assignment_59566_61224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'tuple_var_assignment_59566')
        # Assigning a type to the variable 'yb' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 14), 'yb', tuple_var_assignment_59566_61224)
        
        # Assigning a Name to a Name (line 1034):
        # Getting the type of 'tuple_var_assignment_59567' (line 1034)
        tuple_var_assignment_59567_61225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'tuple_var_assignment_59567')
        # Assigning a type to the variable 'ye' (line 1034)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 17), 'ye', tuple_var_assignment_59567_61225)
        
        # Assigning a Call to a Tuple (line 1035):
        
        # Assigning a Subscript to a Name (line 1035):
        
        # Obtaining the type of the subscript
        int_61226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'int')
        
        # Call to surfit_smth(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'x' (line 1035)
        x_61229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 57), 'x', False)
        # Getting the type of 'y' (line 1035)
        y_61230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 59), 'y', False)
        # Getting the type of 'z' (line 1035)
        z_61231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 61), 'z', False)
        # Getting the type of 'w' (line 1035)
        w_61232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 63), 'w', False)
        # Getting the type of 'xb' (line 1036)
        xb_61233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 57), 'xb', False)
        # Getting the type of 'xe' (line 1036)
        xe_61234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 60), 'xe', False)
        # Getting the type of 'yb' (line 1036)
        yb_61235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 63), 'yb', False)
        # Getting the type of 'ye' (line 1036)
        ye_61236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 66), 'ye', False)
        # Getting the type of 'kx' (line 1037)
        kx_61237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 57), 'kx', False)
        # Getting the type of 'ky' (line 1037)
        ky_61238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 60), 'ky', False)
        # Processing the call keyword arguments (line 1035)
        # Getting the type of 's' (line 1037)
        s_61239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 65), 's', False)
        keyword_61240 = s_61239
        # Getting the type of 'eps' (line 1038)
        eps_61241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 61), 'eps', False)
        keyword_61242 = eps_61241
        int_61243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 71), 'int')
        keyword_61244 = int_61243
        kwargs_61245 = {'lwrk2': keyword_61244, 's': keyword_61240, 'eps': keyword_61242}
        # Getting the type of 'dfitpack' (line 1035)
        dfitpack_61227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 36), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1035)
        surfit_smth_61228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 36), dfitpack_61227, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1035)
        surfit_smth_call_result_61246 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 36), surfit_smth_61228, *[x_61229, y_61230, z_61231, w_61232, xb_61233, xe_61234, yb_61235, ye_61236, kx_61237, ky_61238], **kwargs_61245)
        
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___61247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 8), surfit_smth_call_result_61246, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
        subscript_call_result_61248 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), getitem___61247, int_61226)
        
        # Assigning a type to the variable 'tuple_var_assignment_59568' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59568', subscript_call_result_61248)
        
        # Assigning a Subscript to a Name (line 1035):
        
        # Obtaining the type of the subscript
        int_61249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'int')
        
        # Call to surfit_smth(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'x' (line 1035)
        x_61252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 57), 'x', False)
        # Getting the type of 'y' (line 1035)
        y_61253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 59), 'y', False)
        # Getting the type of 'z' (line 1035)
        z_61254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 61), 'z', False)
        # Getting the type of 'w' (line 1035)
        w_61255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 63), 'w', False)
        # Getting the type of 'xb' (line 1036)
        xb_61256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 57), 'xb', False)
        # Getting the type of 'xe' (line 1036)
        xe_61257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 60), 'xe', False)
        # Getting the type of 'yb' (line 1036)
        yb_61258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 63), 'yb', False)
        # Getting the type of 'ye' (line 1036)
        ye_61259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 66), 'ye', False)
        # Getting the type of 'kx' (line 1037)
        kx_61260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 57), 'kx', False)
        # Getting the type of 'ky' (line 1037)
        ky_61261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 60), 'ky', False)
        # Processing the call keyword arguments (line 1035)
        # Getting the type of 's' (line 1037)
        s_61262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 65), 's', False)
        keyword_61263 = s_61262
        # Getting the type of 'eps' (line 1038)
        eps_61264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 61), 'eps', False)
        keyword_61265 = eps_61264
        int_61266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 71), 'int')
        keyword_61267 = int_61266
        kwargs_61268 = {'lwrk2': keyword_61267, 's': keyword_61263, 'eps': keyword_61265}
        # Getting the type of 'dfitpack' (line 1035)
        dfitpack_61250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 36), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1035)
        surfit_smth_61251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 36), dfitpack_61250, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1035)
        surfit_smth_call_result_61269 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 36), surfit_smth_61251, *[x_61252, y_61253, z_61254, w_61255, xb_61256, xe_61257, yb_61258, ye_61259, kx_61260, ky_61261], **kwargs_61268)
        
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___61270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 8), surfit_smth_call_result_61269, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
        subscript_call_result_61271 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), getitem___61270, int_61249)
        
        # Assigning a type to the variable 'tuple_var_assignment_59569' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59569', subscript_call_result_61271)
        
        # Assigning a Subscript to a Name (line 1035):
        
        # Obtaining the type of the subscript
        int_61272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'int')
        
        # Call to surfit_smth(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'x' (line 1035)
        x_61275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 57), 'x', False)
        # Getting the type of 'y' (line 1035)
        y_61276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 59), 'y', False)
        # Getting the type of 'z' (line 1035)
        z_61277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 61), 'z', False)
        # Getting the type of 'w' (line 1035)
        w_61278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 63), 'w', False)
        # Getting the type of 'xb' (line 1036)
        xb_61279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 57), 'xb', False)
        # Getting the type of 'xe' (line 1036)
        xe_61280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 60), 'xe', False)
        # Getting the type of 'yb' (line 1036)
        yb_61281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 63), 'yb', False)
        # Getting the type of 'ye' (line 1036)
        ye_61282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 66), 'ye', False)
        # Getting the type of 'kx' (line 1037)
        kx_61283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 57), 'kx', False)
        # Getting the type of 'ky' (line 1037)
        ky_61284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 60), 'ky', False)
        # Processing the call keyword arguments (line 1035)
        # Getting the type of 's' (line 1037)
        s_61285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 65), 's', False)
        keyword_61286 = s_61285
        # Getting the type of 'eps' (line 1038)
        eps_61287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 61), 'eps', False)
        keyword_61288 = eps_61287
        int_61289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 71), 'int')
        keyword_61290 = int_61289
        kwargs_61291 = {'lwrk2': keyword_61290, 's': keyword_61286, 'eps': keyword_61288}
        # Getting the type of 'dfitpack' (line 1035)
        dfitpack_61273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 36), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1035)
        surfit_smth_61274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 36), dfitpack_61273, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1035)
        surfit_smth_call_result_61292 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 36), surfit_smth_61274, *[x_61275, y_61276, z_61277, w_61278, xb_61279, xe_61280, yb_61281, ye_61282, kx_61283, ky_61284], **kwargs_61291)
        
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___61293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 8), surfit_smth_call_result_61292, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
        subscript_call_result_61294 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), getitem___61293, int_61272)
        
        # Assigning a type to the variable 'tuple_var_assignment_59570' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59570', subscript_call_result_61294)
        
        # Assigning a Subscript to a Name (line 1035):
        
        # Obtaining the type of the subscript
        int_61295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'int')
        
        # Call to surfit_smth(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'x' (line 1035)
        x_61298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 57), 'x', False)
        # Getting the type of 'y' (line 1035)
        y_61299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 59), 'y', False)
        # Getting the type of 'z' (line 1035)
        z_61300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 61), 'z', False)
        # Getting the type of 'w' (line 1035)
        w_61301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 63), 'w', False)
        # Getting the type of 'xb' (line 1036)
        xb_61302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 57), 'xb', False)
        # Getting the type of 'xe' (line 1036)
        xe_61303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 60), 'xe', False)
        # Getting the type of 'yb' (line 1036)
        yb_61304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 63), 'yb', False)
        # Getting the type of 'ye' (line 1036)
        ye_61305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 66), 'ye', False)
        # Getting the type of 'kx' (line 1037)
        kx_61306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 57), 'kx', False)
        # Getting the type of 'ky' (line 1037)
        ky_61307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 60), 'ky', False)
        # Processing the call keyword arguments (line 1035)
        # Getting the type of 's' (line 1037)
        s_61308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 65), 's', False)
        keyword_61309 = s_61308
        # Getting the type of 'eps' (line 1038)
        eps_61310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 61), 'eps', False)
        keyword_61311 = eps_61310
        int_61312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 71), 'int')
        keyword_61313 = int_61312
        kwargs_61314 = {'lwrk2': keyword_61313, 's': keyword_61309, 'eps': keyword_61311}
        # Getting the type of 'dfitpack' (line 1035)
        dfitpack_61296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 36), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1035)
        surfit_smth_61297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 36), dfitpack_61296, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1035)
        surfit_smth_call_result_61315 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 36), surfit_smth_61297, *[x_61298, y_61299, z_61300, w_61301, xb_61302, xe_61303, yb_61304, ye_61305, kx_61306, ky_61307], **kwargs_61314)
        
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___61316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 8), surfit_smth_call_result_61315, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
        subscript_call_result_61317 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), getitem___61316, int_61295)
        
        # Assigning a type to the variable 'tuple_var_assignment_59571' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59571', subscript_call_result_61317)
        
        # Assigning a Subscript to a Name (line 1035):
        
        # Obtaining the type of the subscript
        int_61318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'int')
        
        # Call to surfit_smth(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'x' (line 1035)
        x_61321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 57), 'x', False)
        # Getting the type of 'y' (line 1035)
        y_61322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 59), 'y', False)
        # Getting the type of 'z' (line 1035)
        z_61323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 61), 'z', False)
        # Getting the type of 'w' (line 1035)
        w_61324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 63), 'w', False)
        # Getting the type of 'xb' (line 1036)
        xb_61325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 57), 'xb', False)
        # Getting the type of 'xe' (line 1036)
        xe_61326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 60), 'xe', False)
        # Getting the type of 'yb' (line 1036)
        yb_61327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 63), 'yb', False)
        # Getting the type of 'ye' (line 1036)
        ye_61328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 66), 'ye', False)
        # Getting the type of 'kx' (line 1037)
        kx_61329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 57), 'kx', False)
        # Getting the type of 'ky' (line 1037)
        ky_61330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 60), 'ky', False)
        # Processing the call keyword arguments (line 1035)
        # Getting the type of 's' (line 1037)
        s_61331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 65), 's', False)
        keyword_61332 = s_61331
        # Getting the type of 'eps' (line 1038)
        eps_61333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 61), 'eps', False)
        keyword_61334 = eps_61333
        int_61335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 71), 'int')
        keyword_61336 = int_61335
        kwargs_61337 = {'lwrk2': keyword_61336, 's': keyword_61332, 'eps': keyword_61334}
        # Getting the type of 'dfitpack' (line 1035)
        dfitpack_61319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 36), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1035)
        surfit_smth_61320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 36), dfitpack_61319, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1035)
        surfit_smth_call_result_61338 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 36), surfit_smth_61320, *[x_61321, y_61322, z_61323, w_61324, xb_61325, xe_61326, yb_61327, ye_61328, kx_61329, ky_61330], **kwargs_61337)
        
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___61339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 8), surfit_smth_call_result_61338, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
        subscript_call_result_61340 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), getitem___61339, int_61318)
        
        # Assigning a type to the variable 'tuple_var_assignment_59572' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59572', subscript_call_result_61340)
        
        # Assigning a Subscript to a Name (line 1035):
        
        # Obtaining the type of the subscript
        int_61341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'int')
        
        # Call to surfit_smth(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'x' (line 1035)
        x_61344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 57), 'x', False)
        # Getting the type of 'y' (line 1035)
        y_61345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 59), 'y', False)
        # Getting the type of 'z' (line 1035)
        z_61346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 61), 'z', False)
        # Getting the type of 'w' (line 1035)
        w_61347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 63), 'w', False)
        # Getting the type of 'xb' (line 1036)
        xb_61348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 57), 'xb', False)
        # Getting the type of 'xe' (line 1036)
        xe_61349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 60), 'xe', False)
        # Getting the type of 'yb' (line 1036)
        yb_61350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 63), 'yb', False)
        # Getting the type of 'ye' (line 1036)
        ye_61351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 66), 'ye', False)
        # Getting the type of 'kx' (line 1037)
        kx_61352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 57), 'kx', False)
        # Getting the type of 'ky' (line 1037)
        ky_61353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 60), 'ky', False)
        # Processing the call keyword arguments (line 1035)
        # Getting the type of 's' (line 1037)
        s_61354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 65), 's', False)
        keyword_61355 = s_61354
        # Getting the type of 'eps' (line 1038)
        eps_61356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 61), 'eps', False)
        keyword_61357 = eps_61356
        int_61358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 71), 'int')
        keyword_61359 = int_61358
        kwargs_61360 = {'lwrk2': keyword_61359, 's': keyword_61355, 'eps': keyword_61357}
        # Getting the type of 'dfitpack' (line 1035)
        dfitpack_61342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 36), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1035)
        surfit_smth_61343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 36), dfitpack_61342, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1035)
        surfit_smth_call_result_61361 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 36), surfit_smth_61343, *[x_61344, y_61345, z_61346, w_61347, xb_61348, xe_61349, yb_61350, ye_61351, kx_61352, ky_61353], **kwargs_61360)
        
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___61362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 8), surfit_smth_call_result_61361, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
        subscript_call_result_61363 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), getitem___61362, int_61341)
        
        # Assigning a type to the variable 'tuple_var_assignment_59573' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59573', subscript_call_result_61363)
        
        # Assigning a Subscript to a Name (line 1035):
        
        # Obtaining the type of the subscript
        int_61364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'int')
        
        # Call to surfit_smth(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'x' (line 1035)
        x_61367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 57), 'x', False)
        # Getting the type of 'y' (line 1035)
        y_61368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 59), 'y', False)
        # Getting the type of 'z' (line 1035)
        z_61369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 61), 'z', False)
        # Getting the type of 'w' (line 1035)
        w_61370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 63), 'w', False)
        # Getting the type of 'xb' (line 1036)
        xb_61371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 57), 'xb', False)
        # Getting the type of 'xe' (line 1036)
        xe_61372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 60), 'xe', False)
        # Getting the type of 'yb' (line 1036)
        yb_61373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 63), 'yb', False)
        # Getting the type of 'ye' (line 1036)
        ye_61374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 66), 'ye', False)
        # Getting the type of 'kx' (line 1037)
        kx_61375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 57), 'kx', False)
        # Getting the type of 'ky' (line 1037)
        ky_61376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 60), 'ky', False)
        # Processing the call keyword arguments (line 1035)
        # Getting the type of 's' (line 1037)
        s_61377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 65), 's', False)
        keyword_61378 = s_61377
        # Getting the type of 'eps' (line 1038)
        eps_61379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 61), 'eps', False)
        keyword_61380 = eps_61379
        int_61381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 71), 'int')
        keyword_61382 = int_61381
        kwargs_61383 = {'lwrk2': keyword_61382, 's': keyword_61378, 'eps': keyword_61380}
        # Getting the type of 'dfitpack' (line 1035)
        dfitpack_61365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 36), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1035)
        surfit_smth_61366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 36), dfitpack_61365, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1035)
        surfit_smth_call_result_61384 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 36), surfit_smth_61366, *[x_61367, y_61368, z_61369, w_61370, xb_61371, xe_61372, yb_61373, ye_61374, kx_61375, ky_61376], **kwargs_61383)
        
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___61385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 8), surfit_smth_call_result_61384, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
        subscript_call_result_61386 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), getitem___61385, int_61364)
        
        # Assigning a type to the variable 'tuple_var_assignment_59574' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59574', subscript_call_result_61386)
        
        # Assigning a Subscript to a Name (line 1035):
        
        # Obtaining the type of the subscript
        int_61387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'int')
        
        # Call to surfit_smth(...): (line 1035)
        # Processing the call arguments (line 1035)
        # Getting the type of 'x' (line 1035)
        x_61390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 57), 'x', False)
        # Getting the type of 'y' (line 1035)
        y_61391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 59), 'y', False)
        # Getting the type of 'z' (line 1035)
        z_61392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 61), 'z', False)
        # Getting the type of 'w' (line 1035)
        w_61393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 63), 'w', False)
        # Getting the type of 'xb' (line 1036)
        xb_61394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 57), 'xb', False)
        # Getting the type of 'xe' (line 1036)
        xe_61395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 60), 'xe', False)
        # Getting the type of 'yb' (line 1036)
        yb_61396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 63), 'yb', False)
        # Getting the type of 'ye' (line 1036)
        ye_61397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 66), 'ye', False)
        # Getting the type of 'kx' (line 1037)
        kx_61398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 57), 'kx', False)
        # Getting the type of 'ky' (line 1037)
        ky_61399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 60), 'ky', False)
        # Processing the call keyword arguments (line 1035)
        # Getting the type of 's' (line 1037)
        s_61400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 65), 's', False)
        keyword_61401 = s_61400
        # Getting the type of 'eps' (line 1038)
        eps_61402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 61), 'eps', False)
        keyword_61403 = eps_61402
        int_61404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 71), 'int')
        keyword_61405 = int_61404
        kwargs_61406 = {'lwrk2': keyword_61405, 's': keyword_61401, 'eps': keyword_61403}
        # Getting the type of 'dfitpack' (line 1035)
        dfitpack_61388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 36), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1035)
        surfit_smth_61389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 36), dfitpack_61388, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1035)
        surfit_smth_call_result_61407 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 36), surfit_smth_61389, *[x_61390, y_61391, z_61392, w_61393, xb_61394, xe_61395, yb_61396, ye_61397, kx_61398, ky_61399], **kwargs_61406)
        
        # Obtaining the member '__getitem__' of a type (line 1035)
        getitem___61408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 8), surfit_smth_call_result_61407, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
        subscript_call_result_61409 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), getitem___61408, int_61387)
        
        # Assigning a type to the variable 'tuple_var_assignment_59575' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59575', subscript_call_result_61409)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'tuple_var_assignment_59568' (line 1035)
        tuple_var_assignment_59568_61410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59568')
        # Assigning a type to the variable 'nx' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'nx', tuple_var_assignment_59568_61410)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'tuple_var_assignment_59569' (line 1035)
        tuple_var_assignment_59569_61411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59569')
        # Assigning a type to the variable 'tx' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 11), 'tx', tuple_var_assignment_59569_61411)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'tuple_var_assignment_59570' (line 1035)
        tuple_var_assignment_59570_61412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59570')
        # Assigning a type to the variable 'ny' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 14), 'ny', tuple_var_assignment_59570_61412)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'tuple_var_assignment_59571' (line 1035)
        tuple_var_assignment_59571_61413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59571')
        # Assigning a type to the variable 'ty' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 17), 'ty', tuple_var_assignment_59571_61413)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'tuple_var_assignment_59572' (line 1035)
        tuple_var_assignment_59572_61414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59572')
        # Assigning a type to the variable 'c' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 20), 'c', tuple_var_assignment_59572_61414)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'tuple_var_assignment_59573' (line 1035)
        tuple_var_assignment_59573_61415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59573')
        # Assigning a type to the variable 'fp' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 22), 'fp', tuple_var_assignment_59573_61415)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'tuple_var_assignment_59574' (line 1035)
        tuple_var_assignment_59574_61416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59574')
        # Assigning a type to the variable 'wrk1' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 25), 'wrk1', tuple_var_assignment_59574_61416)
        
        # Assigning a Name to a Name (line 1035):
        # Getting the type of 'tuple_var_assignment_59575' (line 1035)
        tuple_var_assignment_59575_61417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_59575')
        # Assigning a type to the variable 'ier' (line 1035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 30), 'ier', tuple_var_assignment_59575_61417)
        
        
        # Getting the type of 'ier' (line 1039)
        ier_61418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 11), 'ier')
        int_61419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1039, 17), 'int')
        # Applying the binary operator '>' (line 1039)
        result_gt_61420 = python_operator(stypy.reporting.localization.Localization(__file__, 1039, 11), '>', ier_61418, int_61419)
        
        # Testing the type of an if condition (line 1039)
        if_condition_61421 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1039, 8), result_gt_61420)
        # Assigning a type to the variable 'if_condition_61421' (line 1039)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1039, 8), 'if_condition_61421', if_condition_61421)
        # SSA begins for if statement (line 1039)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 1040):
        
        # Assigning a Subscript to a Name (line 1040):
        
        # Obtaining the type of the subscript
        int_61422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 12), 'int')
        
        # Call to surfit_smth(...): (line 1040)
        # Processing the call arguments (line 1040)
        # Getting the type of 'x' (line 1040)
        x_61425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 61), 'x', False)
        # Getting the type of 'y' (line 1040)
        y_61426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 63), 'y', False)
        # Getting the type of 'z' (line 1040)
        z_61427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 65), 'z', False)
        # Getting the type of 'w' (line 1040)
        w_61428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 67), 'w', False)
        # Getting the type of 'xb' (line 1041)
        xb_61429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 57), 'xb', False)
        # Getting the type of 'xe' (line 1041)
        xe_61430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 60), 'xe', False)
        # Getting the type of 'yb' (line 1041)
        yb_61431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 63), 'yb', False)
        # Getting the type of 'ye' (line 1041)
        ye_61432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 66), 'ye', False)
        # Getting the type of 'kx' (line 1042)
        kx_61433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 57), 'kx', False)
        # Getting the type of 'ky' (line 1042)
        ky_61434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 60), 'ky', False)
        # Processing the call keyword arguments (line 1040)
        # Getting the type of 's' (line 1042)
        s_61435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 65), 's', False)
        keyword_61436 = s_61435
        # Getting the type of 'eps' (line 1043)
        eps_61437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 61), 'eps', False)
        keyword_61438 = eps_61437
        # Getting the type of 'ier' (line 1043)
        ier_61439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 71), 'ier', False)
        keyword_61440 = ier_61439
        kwargs_61441 = {'lwrk2': keyword_61440, 's': keyword_61436, 'eps': keyword_61438}
        # Getting the type of 'dfitpack' (line 1040)
        dfitpack_61423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1040)
        surfit_smth_61424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 40), dfitpack_61423, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1040)
        surfit_smth_call_result_61442 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 40), surfit_smth_61424, *[x_61425, y_61426, z_61427, w_61428, xb_61429, xe_61430, yb_61431, ye_61432, kx_61433, ky_61434], **kwargs_61441)
        
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___61443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), surfit_smth_call_result_61442, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_61444 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 12), getitem___61443, int_61422)
        
        # Assigning a type to the variable 'tuple_var_assignment_59576' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59576', subscript_call_result_61444)
        
        # Assigning a Subscript to a Name (line 1040):
        
        # Obtaining the type of the subscript
        int_61445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 12), 'int')
        
        # Call to surfit_smth(...): (line 1040)
        # Processing the call arguments (line 1040)
        # Getting the type of 'x' (line 1040)
        x_61448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 61), 'x', False)
        # Getting the type of 'y' (line 1040)
        y_61449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 63), 'y', False)
        # Getting the type of 'z' (line 1040)
        z_61450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 65), 'z', False)
        # Getting the type of 'w' (line 1040)
        w_61451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 67), 'w', False)
        # Getting the type of 'xb' (line 1041)
        xb_61452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 57), 'xb', False)
        # Getting the type of 'xe' (line 1041)
        xe_61453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 60), 'xe', False)
        # Getting the type of 'yb' (line 1041)
        yb_61454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 63), 'yb', False)
        # Getting the type of 'ye' (line 1041)
        ye_61455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 66), 'ye', False)
        # Getting the type of 'kx' (line 1042)
        kx_61456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 57), 'kx', False)
        # Getting the type of 'ky' (line 1042)
        ky_61457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 60), 'ky', False)
        # Processing the call keyword arguments (line 1040)
        # Getting the type of 's' (line 1042)
        s_61458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 65), 's', False)
        keyword_61459 = s_61458
        # Getting the type of 'eps' (line 1043)
        eps_61460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 61), 'eps', False)
        keyword_61461 = eps_61460
        # Getting the type of 'ier' (line 1043)
        ier_61462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 71), 'ier', False)
        keyword_61463 = ier_61462
        kwargs_61464 = {'lwrk2': keyword_61463, 's': keyword_61459, 'eps': keyword_61461}
        # Getting the type of 'dfitpack' (line 1040)
        dfitpack_61446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1040)
        surfit_smth_61447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 40), dfitpack_61446, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1040)
        surfit_smth_call_result_61465 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 40), surfit_smth_61447, *[x_61448, y_61449, z_61450, w_61451, xb_61452, xe_61453, yb_61454, ye_61455, kx_61456, ky_61457], **kwargs_61464)
        
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___61466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), surfit_smth_call_result_61465, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_61467 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 12), getitem___61466, int_61445)
        
        # Assigning a type to the variable 'tuple_var_assignment_59577' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59577', subscript_call_result_61467)
        
        # Assigning a Subscript to a Name (line 1040):
        
        # Obtaining the type of the subscript
        int_61468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 12), 'int')
        
        # Call to surfit_smth(...): (line 1040)
        # Processing the call arguments (line 1040)
        # Getting the type of 'x' (line 1040)
        x_61471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 61), 'x', False)
        # Getting the type of 'y' (line 1040)
        y_61472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 63), 'y', False)
        # Getting the type of 'z' (line 1040)
        z_61473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 65), 'z', False)
        # Getting the type of 'w' (line 1040)
        w_61474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 67), 'w', False)
        # Getting the type of 'xb' (line 1041)
        xb_61475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 57), 'xb', False)
        # Getting the type of 'xe' (line 1041)
        xe_61476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 60), 'xe', False)
        # Getting the type of 'yb' (line 1041)
        yb_61477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 63), 'yb', False)
        # Getting the type of 'ye' (line 1041)
        ye_61478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 66), 'ye', False)
        # Getting the type of 'kx' (line 1042)
        kx_61479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 57), 'kx', False)
        # Getting the type of 'ky' (line 1042)
        ky_61480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 60), 'ky', False)
        # Processing the call keyword arguments (line 1040)
        # Getting the type of 's' (line 1042)
        s_61481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 65), 's', False)
        keyword_61482 = s_61481
        # Getting the type of 'eps' (line 1043)
        eps_61483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 61), 'eps', False)
        keyword_61484 = eps_61483
        # Getting the type of 'ier' (line 1043)
        ier_61485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 71), 'ier', False)
        keyword_61486 = ier_61485
        kwargs_61487 = {'lwrk2': keyword_61486, 's': keyword_61482, 'eps': keyword_61484}
        # Getting the type of 'dfitpack' (line 1040)
        dfitpack_61469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1040)
        surfit_smth_61470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 40), dfitpack_61469, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1040)
        surfit_smth_call_result_61488 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 40), surfit_smth_61470, *[x_61471, y_61472, z_61473, w_61474, xb_61475, xe_61476, yb_61477, ye_61478, kx_61479, ky_61480], **kwargs_61487)
        
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___61489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), surfit_smth_call_result_61488, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_61490 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 12), getitem___61489, int_61468)
        
        # Assigning a type to the variable 'tuple_var_assignment_59578' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59578', subscript_call_result_61490)
        
        # Assigning a Subscript to a Name (line 1040):
        
        # Obtaining the type of the subscript
        int_61491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 12), 'int')
        
        # Call to surfit_smth(...): (line 1040)
        # Processing the call arguments (line 1040)
        # Getting the type of 'x' (line 1040)
        x_61494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 61), 'x', False)
        # Getting the type of 'y' (line 1040)
        y_61495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 63), 'y', False)
        # Getting the type of 'z' (line 1040)
        z_61496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 65), 'z', False)
        # Getting the type of 'w' (line 1040)
        w_61497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 67), 'w', False)
        # Getting the type of 'xb' (line 1041)
        xb_61498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 57), 'xb', False)
        # Getting the type of 'xe' (line 1041)
        xe_61499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 60), 'xe', False)
        # Getting the type of 'yb' (line 1041)
        yb_61500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 63), 'yb', False)
        # Getting the type of 'ye' (line 1041)
        ye_61501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 66), 'ye', False)
        # Getting the type of 'kx' (line 1042)
        kx_61502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 57), 'kx', False)
        # Getting the type of 'ky' (line 1042)
        ky_61503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 60), 'ky', False)
        # Processing the call keyword arguments (line 1040)
        # Getting the type of 's' (line 1042)
        s_61504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 65), 's', False)
        keyword_61505 = s_61504
        # Getting the type of 'eps' (line 1043)
        eps_61506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 61), 'eps', False)
        keyword_61507 = eps_61506
        # Getting the type of 'ier' (line 1043)
        ier_61508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 71), 'ier', False)
        keyword_61509 = ier_61508
        kwargs_61510 = {'lwrk2': keyword_61509, 's': keyword_61505, 'eps': keyword_61507}
        # Getting the type of 'dfitpack' (line 1040)
        dfitpack_61492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1040)
        surfit_smth_61493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 40), dfitpack_61492, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1040)
        surfit_smth_call_result_61511 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 40), surfit_smth_61493, *[x_61494, y_61495, z_61496, w_61497, xb_61498, xe_61499, yb_61500, ye_61501, kx_61502, ky_61503], **kwargs_61510)
        
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___61512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), surfit_smth_call_result_61511, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_61513 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 12), getitem___61512, int_61491)
        
        # Assigning a type to the variable 'tuple_var_assignment_59579' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59579', subscript_call_result_61513)
        
        # Assigning a Subscript to a Name (line 1040):
        
        # Obtaining the type of the subscript
        int_61514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 12), 'int')
        
        # Call to surfit_smth(...): (line 1040)
        # Processing the call arguments (line 1040)
        # Getting the type of 'x' (line 1040)
        x_61517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 61), 'x', False)
        # Getting the type of 'y' (line 1040)
        y_61518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 63), 'y', False)
        # Getting the type of 'z' (line 1040)
        z_61519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 65), 'z', False)
        # Getting the type of 'w' (line 1040)
        w_61520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 67), 'w', False)
        # Getting the type of 'xb' (line 1041)
        xb_61521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 57), 'xb', False)
        # Getting the type of 'xe' (line 1041)
        xe_61522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 60), 'xe', False)
        # Getting the type of 'yb' (line 1041)
        yb_61523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 63), 'yb', False)
        # Getting the type of 'ye' (line 1041)
        ye_61524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 66), 'ye', False)
        # Getting the type of 'kx' (line 1042)
        kx_61525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 57), 'kx', False)
        # Getting the type of 'ky' (line 1042)
        ky_61526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 60), 'ky', False)
        # Processing the call keyword arguments (line 1040)
        # Getting the type of 's' (line 1042)
        s_61527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 65), 's', False)
        keyword_61528 = s_61527
        # Getting the type of 'eps' (line 1043)
        eps_61529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 61), 'eps', False)
        keyword_61530 = eps_61529
        # Getting the type of 'ier' (line 1043)
        ier_61531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 71), 'ier', False)
        keyword_61532 = ier_61531
        kwargs_61533 = {'lwrk2': keyword_61532, 's': keyword_61528, 'eps': keyword_61530}
        # Getting the type of 'dfitpack' (line 1040)
        dfitpack_61515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1040)
        surfit_smth_61516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 40), dfitpack_61515, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1040)
        surfit_smth_call_result_61534 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 40), surfit_smth_61516, *[x_61517, y_61518, z_61519, w_61520, xb_61521, xe_61522, yb_61523, ye_61524, kx_61525, ky_61526], **kwargs_61533)
        
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___61535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), surfit_smth_call_result_61534, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_61536 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 12), getitem___61535, int_61514)
        
        # Assigning a type to the variable 'tuple_var_assignment_59580' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59580', subscript_call_result_61536)
        
        # Assigning a Subscript to a Name (line 1040):
        
        # Obtaining the type of the subscript
        int_61537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 12), 'int')
        
        # Call to surfit_smth(...): (line 1040)
        # Processing the call arguments (line 1040)
        # Getting the type of 'x' (line 1040)
        x_61540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 61), 'x', False)
        # Getting the type of 'y' (line 1040)
        y_61541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 63), 'y', False)
        # Getting the type of 'z' (line 1040)
        z_61542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 65), 'z', False)
        # Getting the type of 'w' (line 1040)
        w_61543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 67), 'w', False)
        # Getting the type of 'xb' (line 1041)
        xb_61544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 57), 'xb', False)
        # Getting the type of 'xe' (line 1041)
        xe_61545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 60), 'xe', False)
        # Getting the type of 'yb' (line 1041)
        yb_61546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 63), 'yb', False)
        # Getting the type of 'ye' (line 1041)
        ye_61547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 66), 'ye', False)
        # Getting the type of 'kx' (line 1042)
        kx_61548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 57), 'kx', False)
        # Getting the type of 'ky' (line 1042)
        ky_61549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 60), 'ky', False)
        # Processing the call keyword arguments (line 1040)
        # Getting the type of 's' (line 1042)
        s_61550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 65), 's', False)
        keyword_61551 = s_61550
        # Getting the type of 'eps' (line 1043)
        eps_61552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 61), 'eps', False)
        keyword_61553 = eps_61552
        # Getting the type of 'ier' (line 1043)
        ier_61554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 71), 'ier', False)
        keyword_61555 = ier_61554
        kwargs_61556 = {'lwrk2': keyword_61555, 's': keyword_61551, 'eps': keyword_61553}
        # Getting the type of 'dfitpack' (line 1040)
        dfitpack_61538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1040)
        surfit_smth_61539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 40), dfitpack_61538, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1040)
        surfit_smth_call_result_61557 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 40), surfit_smth_61539, *[x_61540, y_61541, z_61542, w_61543, xb_61544, xe_61545, yb_61546, ye_61547, kx_61548, ky_61549], **kwargs_61556)
        
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___61558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), surfit_smth_call_result_61557, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_61559 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 12), getitem___61558, int_61537)
        
        # Assigning a type to the variable 'tuple_var_assignment_59581' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59581', subscript_call_result_61559)
        
        # Assigning a Subscript to a Name (line 1040):
        
        # Obtaining the type of the subscript
        int_61560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 12), 'int')
        
        # Call to surfit_smth(...): (line 1040)
        # Processing the call arguments (line 1040)
        # Getting the type of 'x' (line 1040)
        x_61563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 61), 'x', False)
        # Getting the type of 'y' (line 1040)
        y_61564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 63), 'y', False)
        # Getting the type of 'z' (line 1040)
        z_61565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 65), 'z', False)
        # Getting the type of 'w' (line 1040)
        w_61566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 67), 'w', False)
        # Getting the type of 'xb' (line 1041)
        xb_61567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 57), 'xb', False)
        # Getting the type of 'xe' (line 1041)
        xe_61568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 60), 'xe', False)
        # Getting the type of 'yb' (line 1041)
        yb_61569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 63), 'yb', False)
        # Getting the type of 'ye' (line 1041)
        ye_61570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 66), 'ye', False)
        # Getting the type of 'kx' (line 1042)
        kx_61571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 57), 'kx', False)
        # Getting the type of 'ky' (line 1042)
        ky_61572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 60), 'ky', False)
        # Processing the call keyword arguments (line 1040)
        # Getting the type of 's' (line 1042)
        s_61573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 65), 's', False)
        keyword_61574 = s_61573
        # Getting the type of 'eps' (line 1043)
        eps_61575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 61), 'eps', False)
        keyword_61576 = eps_61575
        # Getting the type of 'ier' (line 1043)
        ier_61577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 71), 'ier', False)
        keyword_61578 = ier_61577
        kwargs_61579 = {'lwrk2': keyword_61578, 's': keyword_61574, 'eps': keyword_61576}
        # Getting the type of 'dfitpack' (line 1040)
        dfitpack_61561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1040)
        surfit_smth_61562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 40), dfitpack_61561, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1040)
        surfit_smth_call_result_61580 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 40), surfit_smth_61562, *[x_61563, y_61564, z_61565, w_61566, xb_61567, xe_61568, yb_61569, ye_61570, kx_61571, ky_61572], **kwargs_61579)
        
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___61581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), surfit_smth_call_result_61580, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_61582 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 12), getitem___61581, int_61560)
        
        # Assigning a type to the variable 'tuple_var_assignment_59582' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59582', subscript_call_result_61582)
        
        # Assigning a Subscript to a Name (line 1040):
        
        # Obtaining the type of the subscript
        int_61583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 12), 'int')
        
        # Call to surfit_smth(...): (line 1040)
        # Processing the call arguments (line 1040)
        # Getting the type of 'x' (line 1040)
        x_61586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 61), 'x', False)
        # Getting the type of 'y' (line 1040)
        y_61587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 63), 'y', False)
        # Getting the type of 'z' (line 1040)
        z_61588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 65), 'z', False)
        # Getting the type of 'w' (line 1040)
        w_61589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 67), 'w', False)
        # Getting the type of 'xb' (line 1041)
        xb_61590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 57), 'xb', False)
        # Getting the type of 'xe' (line 1041)
        xe_61591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 60), 'xe', False)
        # Getting the type of 'yb' (line 1041)
        yb_61592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 63), 'yb', False)
        # Getting the type of 'ye' (line 1041)
        ye_61593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 66), 'ye', False)
        # Getting the type of 'kx' (line 1042)
        kx_61594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 57), 'kx', False)
        # Getting the type of 'ky' (line 1042)
        ky_61595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 60), 'ky', False)
        # Processing the call keyword arguments (line 1040)
        # Getting the type of 's' (line 1042)
        s_61596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 65), 's', False)
        keyword_61597 = s_61596
        # Getting the type of 'eps' (line 1043)
        eps_61598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 61), 'eps', False)
        keyword_61599 = eps_61598
        # Getting the type of 'ier' (line 1043)
        ier_61600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 71), 'ier', False)
        keyword_61601 = ier_61600
        kwargs_61602 = {'lwrk2': keyword_61601, 's': keyword_61597, 'eps': keyword_61599}
        # Getting the type of 'dfitpack' (line 1040)
        dfitpack_61584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 40), 'dfitpack', False)
        # Obtaining the member 'surfit_smth' of a type (line 1040)
        surfit_smth_61585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 40), dfitpack_61584, 'surfit_smth')
        # Calling surfit_smth(args, kwargs) (line 1040)
        surfit_smth_call_result_61603 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 40), surfit_smth_61585, *[x_61586, y_61587, z_61588, w_61589, xb_61590, xe_61591, yb_61592, ye_61593, kx_61594, ky_61595], **kwargs_61602)
        
        # Obtaining the member '__getitem__' of a type (line 1040)
        getitem___61604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 12), surfit_smth_call_result_61603, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1040)
        subscript_call_result_61605 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 12), getitem___61604, int_61583)
        
        # Assigning a type to the variable 'tuple_var_assignment_59583' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59583', subscript_call_result_61605)
        
        # Assigning a Name to a Name (line 1040):
        # Getting the type of 'tuple_var_assignment_59576' (line 1040)
        tuple_var_assignment_59576_61606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59576')
        # Assigning a type to the variable 'nx' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'nx', tuple_var_assignment_59576_61606)
        
        # Assigning a Name to a Name (line 1040):
        # Getting the type of 'tuple_var_assignment_59577' (line 1040)
        tuple_var_assignment_59577_61607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59577')
        # Assigning a type to the variable 'tx' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 15), 'tx', tuple_var_assignment_59577_61607)
        
        # Assigning a Name to a Name (line 1040):
        # Getting the type of 'tuple_var_assignment_59578' (line 1040)
        tuple_var_assignment_59578_61608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59578')
        # Assigning a type to the variable 'ny' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 18), 'ny', tuple_var_assignment_59578_61608)
        
        # Assigning a Name to a Name (line 1040):
        # Getting the type of 'tuple_var_assignment_59579' (line 1040)
        tuple_var_assignment_59579_61609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59579')
        # Assigning a type to the variable 'ty' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 21), 'ty', tuple_var_assignment_59579_61609)
        
        # Assigning a Name to a Name (line 1040):
        # Getting the type of 'tuple_var_assignment_59580' (line 1040)
        tuple_var_assignment_59580_61610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59580')
        # Assigning a type to the variable 'c' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 24), 'c', tuple_var_assignment_59580_61610)
        
        # Assigning a Name to a Name (line 1040):
        # Getting the type of 'tuple_var_assignment_59581' (line 1040)
        tuple_var_assignment_59581_61611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59581')
        # Assigning a type to the variable 'fp' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 26), 'fp', tuple_var_assignment_59581_61611)
        
        # Assigning a Name to a Name (line 1040):
        # Getting the type of 'tuple_var_assignment_59582' (line 1040)
        tuple_var_assignment_59582_61612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59582')
        # Assigning a type to the variable 'wrk1' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 29), 'wrk1', tuple_var_assignment_59582_61612)
        
        # Assigning a Name to a Name (line 1040):
        # Getting the type of 'tuple_var_assignment_59583' (line 1040)
        tuple_var_assignment_59583_61613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 12), 'tuple_var_assignment_59583')
        # Assigning a type to the variable 'ier' (line 1040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 34), 'ier', tuple_var_assignment_59583_61613)
        # SSA join for if statement (line 1039)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'ier' (line 1044)
        ier_61614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 11), 'ier')
        
        # Obtaining an instance of the builtin type 'list' (line 1044)
        list_61615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1044)
        # Adding element type (line 1044)
        int_61616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1044, 18), list_61615, int_61616)
        # Adding element type (line 1044)
        int_61617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1044, 18), list_61615, int_61617)
        # Adding element type (line 1044)
        int_61618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1044, 18), list_61615, int_61618)
        
        # Applying the binary operator 'in' (line 1044)
        result_contains_61619 = python_operator(stypy.reporting.localization.Localization(__file__, 1044, 11), 'in', ier_61614, list_61615)
        
        # Testing the type of an if condition (line 1044)
        if_condition_61620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1044, 8), result_contains_61619)
        # Assigning a type to the variable 'if_condition_61620' (line 1044)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1044, 8), 'if_condition_61620', if_condition_61620)
        # SSA begins for if statement (line 1044)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        pass
        # SSA branch for the else part of an if statement (line 1044)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1047):
        
        # Assigning a Call to a Name (line 1047):
        
        # Call to get(...): (line 1047)
        # Processing the call arguments (line 1047)
        # Getting the type of 'ier' (line 1047)
        ier_61623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 43), 'ier', False)
        str_61624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 47), 'str', 'ier=%s')
        # Getting the type of 'ier' (line 1047)
        ier_61625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 59), 'ier', False)
        # Applying the binary operator '%' (line 1047)
        result_mod_61626 = python_operator(stypy.reporting.localization.Localization(__file__, 1047, 47), '%', str_61624, ier_61625)
        
        # Processing the call keyword arguments (line 1047)
        kwargs_61627 = {}
        # Getting the type of '_surfit_messages' (line 1047)
        _surfit_messages_61621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 22), '_surfit_messages', False)
        # Obtaining the member 'get' of a type (line 1047)
        get_61622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1047, 22), _surfit_messages_61621, 'get')
        # Calling get(args, kwargs) (line 1047)
        get_call_result_61628 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 22), get_61622, *[ier_61623, result_mod_61626], **kwargs_61627)
        
        # Assigning a type to the variable 'message' (line 1047)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1047, 12), 'message', get_call_result_61628)
        
        # Call to warn(...): (line 1048)
        # Processing the call arguments (line 1048)
        # Getting the type of 'message' (line 1048)
        message_61631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 26), 'message', False)
        # Processing the call keyword arguments (line 1048)
        kwargs_61632 = {}
        # Getting the type of 'warnings' (line 1048)
        warnings_61629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 12), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 1048)
        warn_61630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1048, 12), warnings_61629, 'warn')
        # Calling warn(args, kwargs) (line 1048)
        warn_call_result_61633 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 12), warn_61630, *[message_61631], **kwargs_61632)
        
        # SSA join for if statement (line 1044)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1050):
        
        # Assigning a Name to a Attribute (line 1050):
        # Getting the type of 'fp' (line 1050)
        fp_61634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 18), 'fp')
        # Getting the type of 'self' (line 1050)
        self_61635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 8), 'self')
        # Setting the type of the member 'fp' of a type (line 1050)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1050, 8), self_61635, 'fp', fp_61634)
        
        # Assigning a Tuple to a Attribute (line 1051):
        
        # Assigning a Tuple to a Attribute (line 1051):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1051)
        tuple_61636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1051)
        # Adding element type (line 1051)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nx' (line 1051)
        nx_61637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 23), 'nx')
        slice_61638 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1051, 19), None, nx_61637, None)
        # Getting the type of 'tx' (line 1051)
        tx_61639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 19), 'tx')
        # Obtaining the member '__getitem__' of a type (line 1051)
        getitem___61640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 19), tx_61639, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1051)
        subscript_call_result_61641 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 19), getitem___61640, slice_61638)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 19), tuple_61636, subscript_call_result_61641)
        # Adding element type (line 1051)
        
        # Obtaining the type of the subscript
        # Getting the type of 'ny' (line 1051)
        ny_61642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 31), 'ny')
        slice_61643 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1051, 27), None, ny_61642, None)
        # Getting the type of 'ty' (line 1051)
        ty_61644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 27), 'ty')
        # Obtaining the member '__getitem__' of a type (line 1051)
        getitem___61645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 27), ty_61644, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1051)
        subscript_call_result_61646 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 27), getitem___61645, slice_61643)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 19), tuple_61636, subscript_call_result_61646)
        # Adding element type (line 1051)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nx' (line 1051)
        nx_61647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 39), 'nx')
        # Getting the type of 'kx' (line 1051)
        kx_61648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 42), 'kx')
        # Applying the binary operator '-' (line 1051)
        result_sub_61649 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 39), '-', nx_61647, kx_61648)
        
        int_61650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 45), 'int')
        # Applying the binary operator '-' (line 1051)
        result_sub_61651 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 44), '-', result_sub_61649, int_61650)
        
        # Getting the type of 'ny' (line 1051)
        ny_61652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 49), 'ny')
        # Getting the type of 'ky' (line 1051)
        ky_61653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 52), 'ky')
        # Applying the binary operator '-' (line 1051)
        result_sub_61654 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 49), '-', ny_61652, ky_61653)
        
        int_61655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 55), 'int')
        # Applying the binary operator '-' (line 1051)
        result_sub_61656 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 54), '-', result_sub_61654, int_61655)
        
        # Applying the binary operator '*' (line 1051)
        result_mul_61657 = python_operator(stypy.reporting.localization.Localization(__file__, 1051, 38), '*', result_sub_61651, result_sub_61656)
        
        slice_61658 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1051, 35), None, result_mul_61657, None)
        # Getting the type of 'c' (line 1051)
        c_61659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 35), 'c')
        # Obtaining the member '__getitem__' of a type (line 1051)
        getitem___61660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 35), c_61659, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1051)
        subscript_call_result_61661 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 35), getitem___61660, slice_61658)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1051, 19), tuple_61636, subscript_call_result_61661)
        
        # Getting the type of 'self' (line 1051)
        self_61662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 8), 'self')
        # Setting the type of the member 'tck' of a type (line 1051)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 8), self_61662, 'tck', tuple_61636)
        
        # Assigning a Tuple to a Attribute (line 1052):
        
        # Assigning a Tuple to a Attribute (line 1052):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1052)
        tuple_61663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1052, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1052)
        # Adding element type (line 1052)
        # Getting the type of 'kx' (line 1052)
        kx_61664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 23), 'kx')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1052, 23), tuple_61663, kx_61664)
        # Adding element type (line 1052)
        # Getting the type of 'ky' (line 1052)
        ky_61665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 26), 'ky')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1052, 23), tuple_61663, ky_61665)
        
        # Getting the type of 'self' (line 1052)
        self_61666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 8), 'self')
        # Setting the type of the member 'degrees' of a type (line 1052)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1052, 8), self_61666, 'degrees', tuple_61663)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'SmoothBivariateSpline' (line 993)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 0), 'SmoothBivariateSpline', SmoothBivariateSpline)
# Declaration of the 'LSQBivariateSpline' class
# Getting the type of 'BivariateSpline' (line 1055)
BivariateSpline_61667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 25), 'BivariateSpline')

class LSQBivariateSpline(BivariateSpline_61667, ):
    str_61668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, (-1)), 'str', '\n    Weighted least-squares bivariate spline approximation.\n\n    Parameters\n    ----------\n    x, y, z : array_like\n        1-D sequences of data points (order is not important).\n    tx, ty : array_like\n        Strictly ordered 1-D sequences of knots coordinates.\n    w : array_like, optional\n        Positive 1-D array of weights, of the same length as `x`, `y` and `z`.\n    bbox : (4,) array_like, optional\n        Sequence of length 4 specifying the boundary of the rectangular\n        approximation domain.  By default,\n        ``bbox=[min(x,tx),max(x,tx), min(y,ty),max(y,ty)]``.\n    kx, ky : ints, optional\n        Degrees of the bivariate spline. Default is 3.\n    eps : float, optional\n        A threshold for determining the effective rank of an over-determined\n        linear system of equations. `eps` should have a value between 0 and 1,\n        the default is 1e-16.\n\n    See Also\n    --------\n    bisplrep : an older wrapping of FITPACK\n    bisplev : an older wrapping of FITPACK\n    UnivariateSpline : a similar class for univariate spline interpolation\n    SmoothBivariateSpline : create a smoothing BivariateSpline\n\n    Notes\n    -----\n    The length of `x`, `y` and `z` should be at least ``(kx+1) * (ky+1)``.\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1091)
        None_61669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 42), 'None')
        
        # Obtaining an instance of the builtin type 'list' (line 1091)
        list_61670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1091)
        # Adding element type (line 1091)
        # Getting the type of 'None' (line 1091)
        None_61671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1091, 54), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1091, 53), list_61670, None_61671)
        
        int_61672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 60), 'int')
        # Applying the binary operator '*' (line 1091)
        result_mul_61673 = python_operator(stypy.reporting.localization.Localization(__file__, 1091, 53), '*', list_61670, int_61672)
        
        int_61674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 66), 'int')
        int_61675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1091, 72), 'int')
        # Getting the type of 'None' (line 1092)
        None_61676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 21), 'None')
        defaults = [None_61669, result_mul_61673, int_61674, int_61675, None_61676]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1091, 4, False)
        # Assigning a type to the variable 'self' (line 1092)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1092, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'LSQBivariateSpline.__init__', ['x', 'y', 'z', 'tx', 'ty', 'w', 'bbox', 'kx', 'ky', 'eps'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['x', 'y', 'z', 'tx', 'ty', 'w', 'bbox', 'kx', 'ky', 'eps'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a BinOp to a Name (line 1093):
        
        # Assigning a BinOp to a Name (line 1093):
        int_61677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1093, 13), 'int')
        # Getting the type of 'kx' (line 1093)
        kx_61678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 15), 'kx')
        # Applying the binary operator '*' (line 1093)
        result_mul_61679 = python_operator(stypy.reporting.localization.Localization(__file__, 1093, 13), '*', int_61677, kx_61678)
        
        int_61680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1093, 18), 'int')
        # Applying the binary operator '+' (line 1093)
        result_add_61681 = python_operator(stypy.reporting.localization.Localization(__file__, 1093, 13), '+', result_mul_61679, int_61680)
        
        
        # Call to len(...): (line 1093)
        # Processing the call arguments (line 1093)
        # Getting the type of 'tx' (line 1093)
        tx_61683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 24), 'tx', False)
        # Processing the call keyword arguments (line 1093)
        kwargs_61684 = {}
        # Getting the type of 'len' (line 1093)
        len_61682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1093, 20), 'len', False)
        # Calling len(args, kwargs) (line 1093)
        len_call_result_61685 = invoke(stypy.reporting.localization.Localization(__file__, 1093, 20), len_61682, *[tx_61683], **kwargs_61684)
        
        # Applying the binary operator '+' (line 1093)
        result_add_61686 = python_operator(stypy.reporting.localization.Localization(__file__, 1093, 19), '+', result_add_61681, len_call_result_61685)
        
        # Assigning a type to the variable 'nx' (line 1093)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1093, 8), 'nx', result_add_61686)
        
        # Assigning a BinOp to a Name (line 1094):
        
        # Assigning a BinOp to a Name (line 1094):
        int_61687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1094, 13), 'int')
        # Getting the type of 'ky' (line 1094)
        ky_61688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 15), 'ky')
        # Applying the binary operator '*' (line 1094)
        result_mul_61689 = python_operator(stypy.reporting.localization.Localization(__file__, 1094, 13), '*', int_61687, ky_61688)
        
        int_61690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1094, 18), 'int')
        # Applying the binary operator '+' (line 1094)
        result_add_61691 = python_operator(stypy.reporting.localization.Localization(__file__, 1094, 13), '+', result_mul_61689, int_61690)
        
        
        # Call to len(...): (line 1094)
        # Processing the call arguments (line 1094)
        # Getting the type of 'ty' (line 1094)
        ty_61693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 24), 'ty', False)
        # Processing the call keyword arguments (line 1094)
        kwargs_61694 = {}
        # Getting the type of 'len' (line 1094)
        len_61692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 20), 'len', False)
        # Calling len(args, kwargs) (line 1094)
        len_call_result_61695 = invoke(stypy.reporting.localization.Localization(__file__, 1094, 20), len_61692, *[ty_61693], **kwargs_61694)
        
        # Applying the binary operator '+' (line 1094)
        result_add_61696 = python_operator(stypy.reporting.localization.Localization(__file__, 1094, 19), '+', result_add_61691, len_call_result_61695)
        
        # Assigning a type to the variable 'ny' (line 1094)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1094, 8), 'ny', result_add_61696)
        
        # Assigning a Call to a Name (line 1095):
        
        # Assigning a Call to a Name (line 1095):
        
        # Call to zeros(...): (line 1095)
        # Processing the call arguments (line 1095)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1095)
        tuple_61698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1095, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1095)
        # Adding element type (line 1095)
        # Getting the type of 'nx' (line 1095)
        nx_61699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 21), 'nx', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1095, 21), tuple_61698, nx_61699)
        
        # Getting the type of 'float' (line 1095)
        float_61700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 26), 'float', False)
        # Processing the call keyword arguments (line 1095)
        kwargs_61701 = {}
        # Getting the type of 'zeros' (line 1095)
        zeros_61697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 14), 'zeros', False)
        # Calling zeros(args, kwargs) (line 1095)
        zeros_call_result_61702 = invoke(stypy.reporting.localization.Localization(__file__, 1095, 14), zeros_61697, *[tuple_61698, float_61700], **kwargs_61701)
        
        # Assigning a type to the variable 'tx1' (line 1095)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1095, 8), 'tx1', zeros_call_result_61702)
        
        # Assigning a Call to a Name (line 1096):
        
        # Assigning a Call to a Name (line 1096):
        
        # Call to zeros(...): (line 1096)
        # Processing the call arguments (line 1096)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1096)
        tuple_61704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1096, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1096)
        # Adding element type (line 1096)
        # Getting the type of 'ny' (line 1096)
        ny_61705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 21), 'ny', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1096, 21), tuple_61704, ny_61705)
        
        # Getting the type of 'float' (line 1096)
        float_61706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 26), 'float', False)
        # Processing the call keyword arguments (line 1096)
        kwargs_61707 = {}
        # Getting the type of 'zeros' (line 1096)
        zeros_61703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1096, 14), 'zeros', False)
        # Calling zeros(args, kwargs) (line 1096)
        zeros_call_result_61708 = invoke(stypy.reporting.localization.Localization(__file__, 1096, 14), zeros_61703, *[tuple_61704, float_61706], **kwargs_61707)
        
        # Assigning a type to the variable 'ty1' (line 1096)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1096, 8), 'ty1', zeros_call_result_61708)
        
        # Assigning a Name to a Subscript (line 1097):
        
        # Assigning a Name to a Subscript (line 1097):
        # Getting the type of 'tx' (line 1097)
        tx_61709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 28), 'tx')
        # Getting the type of 'tx1' (line 1097)
        tx1_61710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 8), 'tx1')
        # Getting the type of 'kx' (line 1097)
        kx_61711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 12), 'kx')
        int_61712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 15), 'int')
        # Applying the binary operator '+' (line 1097)
        result_add_61713 = python_operator(stypy.reporting.localization.Localization(__file__, 1097, 12), '+', kx_61711, int_61712)
        
        # Getting the type of 'nx' (line 1097)
        nx_61714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 17), 'nx')
        # Getting the type of 'kx' (line 1097)
        kx_61715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1097, 20), 'kx')
        # Applying the binary operator '-' (line 1097)
        result_sub_61716 = python_operator(stypy.reporting.localization.Localization(__file__, 1097, 17), '-', nx_61714, kx_61715)
        
        int_61717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1097, 23), 'int')
        # Applying the binary operator '-' (line 1097)
        result_sub_61718 = python_operator(stypy.reporting.localization.Localization(__file__, 1097, 22), '-', result_sub_61716, int_61717)
        
        slice_61719 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1097, 8), result_add_61713, result_sub_61718, None)
        # Storing an element on a container (line 1097)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1097, 8), tx1_61710, (slice_61719, tx_61709))
        
        # Assigning a Name to a Subscript (line 1098):
        
        # Assigning a Name to a Subscript (line 1098):
        # Getting the type of 'ty' (line 1098)
        ty_61720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 28), 'ty')
        # Getting the type of 'ty1' (line 1098)
        ty1_61721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 8), 'ty1')
        # Getting the type of 'ky' (line 1098)
        ky_61722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 12), 'ky')
        int_61723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, 15), 'int')
        # Applying the binary operator '+' (line 1098)
        result_add_61724 = python_operator(stypy.reporting.localization.Localization(__file__, 1098, 12), '+', ky_61722, int_61723)
        
        # Getting the type of 'ny' (line 1098)
        ny_61725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 17), 'ny')
        # Getting the type of 'ky' (line 1098)
        ky_61726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 20), 'ky')
        # Applying the binary operator '-' (line 1098)
        result_sub_61727 = python_operator(stypy.reporting.localization.Localization(__file__, 1098, 17), '-', ny_61725, ky_61726)
        
        int_61728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, 23), 'int')
        # Applying the binary operator '-' (line 1098)
        result_sub_61729 = python_operator(stypy.reporting.localization.Localization(__file__, 1098, 22), '-', result_sub_61727, int_61728)
        
        slice_61730 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1098, 8), result_add_61724, result_sub_61729, None)
        # Storing an element on a container (line 1098)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1098, 8), ty1_61721, (slice_61730, ty_61720))
        
        # Assigning a Name to a Tuple (line 1100):
        
        # Assigning a Subscript to a Name (line 1100):
        
        # Obtaining the type of the subscript
        int_61731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 8), 'int')
        # Getting the type of 'bbox' (line 1100)
        bbox_61732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1100)
        getitem___61733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1100, 8), bbox_61732, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1100)
        subscript_call_result_61734 = invoke(stypy.reporting.localization.Localization(__file__, 1100, 8), getitem___61733, int_61731)
        
        # Assigning a type to the variable 'tuple_var_assignment_59584' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'tuple_var_assignment_59584', subscript_call_result_61734)
        
        # Assigning a Subscript to a Name (line 1100):
        
        # Obtaining the type of the subscript
        int_61735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 8), 'int')
        # Getting the type of 'bbox' (line 1100)
        bbox_61736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1100)
        getitem___61737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1100, 8), bbox_61736, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1100)
        subscript_call_result_61738 = invoke(stypy.reporting.localization.Localization(__file__, 1100, 8), getitem___61737, int_61735)
        
        # Assigning a type to the variable 'tuple_var_assignment_59585' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'tuple_var_assignment_59585', subscript_call_result_61738)
        
        # Assigning a Subscript to a Name (line 1100):
        
        # Obtaining the type of the subscript
        int_61739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 8), 'int')
        # Getting the type of 'bbox' (line 1100)
        bbox_61740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1100)
        getitem___61741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1100, 8), bbox_61740, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1100)
        subscript_call_result_61742 = invoke(stypy.reporting.localization.Localization(__file__, 1100, 8), getitem___61741, int_61739)
        
        # Assigning a type to the variable 'tuple_var_assignment_59586' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'tuple_var_assignment_59586', subscript_call_result_61742)
        
        # Assigning a Subscript to a Name (line 1100):
        
        # Obtaining the type of the subscript
        int_61743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1100, 8), 'int')
        # Getting the type of 'bbox' (line 1100)
        bbox_61744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 22), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1100)
        getitem___61745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1100, 8), bbox_61744, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1100)
        subscript_call_result_61746 = invoke(stypy.reporting.localization.Localization(__file__, 1100, 8), getitem___61745, int_61743)
        
        # Assigning a type to the variable 'tuple_var_assignment_59587' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'tuple_var_assignment_59587', subscript_call_result_61746)
        
        # Assigning a Name to a Name (line 1100):
        # Getting the type of 'tuple_var_assignment_59584' (line 1100)
        tuple_var_assignment_59584_61747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'tuple_var_assignment_59584')
        # Assigning a type to the variable 'xb' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'xb', tuple_var_assignment_59584_61747)
        
        # Assigning a Name to a Name (line 1100):
        # Getting the type of 'tuple_var_assignment_59585' (line 1100)
        tuple_var_assignment_59585_61748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'tuple_var_assignment_59585')
        # Assigning a type to the variable 'xe' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 11), 'xe', tuple_var_assignment_59585_61748)
        
        # Assigning a Name to a Name (line 1100):
        # Getting the type of 'tuple_var_assignment_59586' (line 1100)
        tuple_var_assignment_59586_61749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'tuple_var_assignment_59586')
        # Assigning a type to the variable 'yb' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 14), 'yb', tuple_var_assignment_59586_61749)
        
        # Assigning a Name to a Name (line 1100):
        # Getting the type of 'tuple_var_assignment_59587' (line 1100)
        tuple_var_assignment_59587_61750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1100, 8), 'tuple_var_assignment_59587')
        # Assigning a type to the variable 'ye' (line 1100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1100, 17), 'ye', tuple_var_assignment_59587_61750)
        
        # Assigning a Call to a Tuple (line 1101):
        
        # Assigning a Subscript to a Name (line 1101):
        
        # Obtaining the type of the subscript
        int_61751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 8), 'int')
        
        # Call to surfit_lsq(...): (line 1101)
        # Processing the call arguments (line 1101)
        # Getting the type of 'x' (line 1101)
        x_61754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 47), 'x', False)
        # Getting the type of 'y' (line 1101)
        y_61755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 49), 'y', False)
        # Getting the type of 'z' (line 1101)
        z_61756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 51), 'z', False)
        # Getting the type of 'tx1' (line 1101)
        tx1_61757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 53), 'tx1', False)
        # Getting the type of 'ty1' (line 1101)
        ty1_61758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 57), 'ty1', False)
        # Getting the type of 'w' (line 1101)
        w_61759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 61), 'w', False)
        # Getting the type of 'xb' (line 1102)
        xb_61760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 47), 'xb', False)
        # Getting the type of 'xe' (line 1102)
        xe_61761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 50), 'xe', False)
        # Getting the type of 'yb' (line 1102)
        yb_61762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 53), 'yb', False)
        # Getting the type of 'ye' (line 1102)
        ye_61763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 56), 'ye', False)
        # Getting the type of 'kx' (line 1103)
        kx_61764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 47), 'kx', False)
        # Getting the type of 'ky' (line 1103)
        ky_61765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 50), 'ky', False)
        # Getting the type of 'eps' (line 1103)
        eps_61766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 53), 'eps', False)
        # Processing the call keyword arguments (line 1101)
        int_61767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 63), 'int')
        keyword_61768 = int_61767
        kwargs_61769 = {'lwrk2': keyword_61768}
        # Getting the type of 'dfitpack' (line 1101)
        dfitpack_61752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 27), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1101)
        surfit_lsq_61753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 27), dfitpack_61752, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1101)
        surfit_lsq_call_result_61770 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 27), surfit_lsq_61753, *[x_61754, y_61755, z_61756, tx1_61757, ty1_61758, w_61759, xb_61760, xe_61761, yb_61762, ye_61763, kx_61764, ky_61765, eps_61766], **kwargs_61769)
        
        # Obtaining the member '__getitem__' of a type (line 1101)
        getitem___61771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 8), surfit_lsq_call_result_61770, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1101)
        subscript_call_result_61772 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 8), getitem___61771, int_61751)
        
        # Assigning a type to the variable 'tuple_var_assignment_59588' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59588', subscript_call_result_61772)
        
        # Assigning a Subscript to a Name (line 1101):
        
        # Obtaining the type of the subscript
        int_61773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 8), 'int')
        
        # Call to surfit_lsq(...): (line 1101)
        # Processing the call arguments (line 1101)
        # Getting the type of 'x' (line 1101)
        x_61776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 47), 'x', False)
        # Getting the type of 'y' (line 1101)
        y_61777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 49), 'y', False)
        # Getting the type of 'z' (line 1101)
        z_61778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 51), 'z', False)
        # Getting the type of 'tx1' (line 1101)
        tx1_61779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 53), 'tx1', False)
        # Getting the type of 'ty1' (line 1101)
        ty1_61780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 57), 'ty1', False)
        # Getting the type of 'w' (line 1101)
        w_61781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 61), 'w', False)
        # Getting the type of 'xb' (line 1102)
        xb_61782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 47), 'xb', False)
        # Getting the type of 'xe' (line 1102)
        xe_61783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 50), 'xe', False)
        # Getting the type of 'yb' (line 1102)
        yb_61784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 53), 'yb', False)
        # Getting the type of 'ye' (line 1102)
        ye_61785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 56), 'ye', False)
        # Getting the type of 'kx' (line 1103)
        kx_61786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 47), 'kx', False)
        # Getting the type of 'ky' (line 1103)
        ky_61787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 50), 'ky', False)
        # Getting the type of 'eps' (line 1103)
        eps_61788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 53), 'eps', False)
        # Processing the call keyword arguments (line 1101)
        int_61789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 63), 'int')
        keyword_61790 = int_61789
        kwargs_61791 = {'lwrk2': keyword_61790}
        # Getting the type of 'dfitpack' (line 1101)
        dfitpack_61774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 27), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1101)
        surfit_lsq_61775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 27), dfitpack_61774, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1101)
        surfit_lsq_call_result_61792 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 27), surfit_lsq_61775, *[x_61776, y_61777, z_61778, tx1_61779, ty1_61780, w_61781, xb_61782, xe_61783, yb_61784, ye_61785, kx_61786, ky_61787, eps_61788], **kwargs_61791)
        
        # Obtaining the member '__getitem__' of a type (line 1101)
        getitem___61793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 8), surfit_lsq_call_result_61792, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1101)
        subscript_call_result_61794 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 8), getitem___61793, int_61773)
        
        # Assigning a type to the variable 'tuple_var_assignment_59589' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59589', subscript_call_result_61794)
        
        # Assigning a Subscript to a Name (line 1101):
        
        # Obtaining the type of the subscript
        int_61795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 8), 'int')
        
        # Call to surfit_lsq(...): (line 1101)
        # Processing the call arguments (line 1101)
        # Getting the type of 'x' (line 1101)
        x_61798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 47), 'x', False)
        # Getting the type of 'y' (line 1101)
        y_61799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 49), 'y', False)
        # Getting the type of 'z' (line 1101)
        z_61800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 51), 'z', False)
        # Getting the type of 'tx1' (line 1101)
        tx1_61801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 53), 'tx1', False)
        # Getting the type of 'ty1' (line 1101)
        ty1_61802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 57), 'ty1', False)
        # Getting the type of 'w' (line 1101)
        w_61803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 61), 'w', False)
        # Getting the type of 'xb' (line 1102)
        xb_61804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 47), 'xb', False)
        # Getting the type of 'xe' (line 1102)
        xe_61805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 50), 'xe', False)
        # Getting the type of 'yb' (line 1102)
        yb_61806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 53), 'yb', False)
        # Getting the type of 'ye' (line 1102)
        ye_61807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 56), 'ye', False)
        # Getting the type of 'kx' (line 1103)
        kx_61808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 47), 'kx', False)
        # Getting the type of 'ky' (line 1103)
        ky_61809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 50), 'ky', False)
        # Getting the type of 'eps' (line 1103)
        eps_61810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 53), 'eps', False)
        # Processing the call keyword arguments (line 1101)
        int_61811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 63), 'int')
        keyword_61812 = int_61811
        kwargs_61813 = {'lwrk2': keyword_61812}
        # Getting the type of 'dfitpack' (line 1101)
        dfitpack_61796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 27), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1101)
        surfit_lsq_61797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 27), dfitpack_61796, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1101)
        surfit_lsq_call_result_61814 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 27), surfit_lsq_61797, *[x_61798, y_61799, z_61800, tx1_61801, ty1_61802, w_61803, xb_61804, xe_61805, yb_61806, ye_61807, kx_61808, ky_61809, eps_61810], **kwargs_61813)
        
        # Obtaining the member '__getitem__' of a type (line 1101)
        getitem___61815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 8), surfit_lsq_call_result_61814, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1101)
        subscript_call_result_61816 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 8), getitem___61815, int_61795)
        
        # Assigning a type to the variable 'tuple_var_assignment_59590' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59590', subscript_call_result_61816)
        
        # Assigning a Subscript to a Name (line 1101):
        
        # Obtaining the type of the subscript
        int_61817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 8), 'int')
        
        # Call to surfit_lsq(...): (line 1101)
        # Processing the call arguments (line 1101)
        # Getting the type of 'x' (line 1101)
        x_61820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 47), 'x', False)
        # Getting the type of 'y' (line 1101)
        y_61821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 49), 'y', False)
        # Getting the type of 'z' (line 1101)
        z_61822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 51), 'z', False)
        # Getting the type of 'tx1' (line 1101)
        tx1_61823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 53), 'tx1', False)
        # Getting the type of 'ty1' (line 1101)
        ty1_61824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 57), 'ty1', False)
        # Getting the type of 'w' (line 1101)
        w_61825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 61), 'w', False)
        # Getting the type of 'xb' (line 1102)
        xb_61826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 47), 'xb', False)
        # Getting the type of 'xe' (line 1102)
        xe_61827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 50), 'xe', False)
        # Getting the type of 'yb' (line 1102)
        yb_61828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 53), 'yb', False)
        # Getting the type of 'ye' (line 1102)
        ye_61829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 56), 'ye', False)
        # Getting the type of 'kx' (line 1103)
        kx_61830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 47), 'kx', False)
        # Getting the type of 'ky' (line 1103)
        ky_61831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 50), 'ky', False)
        # Getting the type of 'eps' (line 1103)
        eps_61832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 53), 'eps', False)
        # Processing the call keyword arguments (line 1101)
        int_61833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 63), 'int')
        keyword_61834 = int_61833
        kwargs_61835 = {'lwrk2': keyword_61834}
        # Getting the type of 'dfitpack' (line 1101)
        dfitpack_61818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 27), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1101)
        surfit_lsq_61819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 27), dfitpack_61818, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1101)
        surfit_lsq_call_result_61836 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 27), surfit_lsq_61819, *[x_61820, y_61821, z_61822, tx1_61823, ty1_61824, w_61825, xb_61826, xe_61827, yb_61828, ye_61829, kx_61830, ky_61831, eps_61832], **kwargs_61835)
        
        # Obtaining the member '__getitem__' of a type (line 1101)
        getitem___61837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 8), surfit_lsq_call_result_61836, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1101)
        subscript_call_result_61838 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 8), getitem___61837, int_61817)
        
        # Assigning a type to the variable 'tuple_var_assignment_59591' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59591', subscript_call_result_61838)
        
        # Assigning a Subscript to a Name (line 1101):
        
        # Obtaining the type of the subscript
        int_61839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1101, 8), 'int')
        
        # Call to surfit_lsq(...): (line 1101)
        # Processing the call arguments (line 1101)
        # Getting the type of 'x' (line 1101)
        x_61842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 47), 'x', False)
        # Getting the type of 'y' (line 1101)
        y_61843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 49), 'y', False)
        # Getting the type of 'z' (line 1101)
        z_61844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 51), 'z', False)
        # Getting the type of 'tx1' (line 1101)
        tx1_61845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 53), 'tx1', False)
        # Getting the type of 'ty1' (line 1101)
        ty1_61846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 57), 'ty1', False)
        # Getting the type of 'w' (line 1101)
        w_61847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 61), 'w', False)
        # Getting the type of 'xb' (line 1102)
        xb_61848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 47), 'xb', False)
        # Getting the type of 'xe' (line 1102)
        xe_61849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 50), 'xe', False)
        # Getting the type of 'yb' (line 1102)
        yb_61850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 53), 'yb', False)
        # Getting the type of 'ye' (line 1102)
        ye_61851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1102, 56), 'ye', False)
        # Getting the type of 'kx' (line 1103)
        kx_61852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 47), 'kx', False)
        # Getting the type of 'ky' (line 1103)
        ky_61853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 50), 'ky', False)
        # Getting the type of 'eps' (line 1103)
        eps_61854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 53), 'eps', False)
        # Processing the call keyword arguments (line 1101)
        int_61855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1103, 63), 'int')
        keyword_61856 = int_61855
        kwargs_61857 = {'lwrk2': keyword_61856}
        # Getting the type of 'dfitpack' (line 1101)
        dfitpack_61840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 27), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1101)
        surfit_lsq_61841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 27), dfitpack_61840, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1101)
        surfit_lsq_call_result_61858 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 27), surfit_lsq_61841, *[x_61842, y_61843, z_61844, tx1_61845, ty1_61846, w_61847, xb_61848, xe_61849, yb_61850, ye_61851, kx_61852, ky_61853, eps_61854], **kwargs_61857)
        
        # Obtaining the member '__getitem__' of a type (line 1101)
        getitem___61859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1101, 8), surfit_lsq_call_result_61858, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1101)
        subscript_call_result_61860 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 8), getitem___61859, int_61839)
        
        # Assigning a type to the variable 'tuple_var_assignment_59592' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59592', subscript_call_result_61860)
        
        # Assigning a Name to a Name (line 1101):
        # Getting the type of 'tuple_var_assignment_59588' (line 1101)
        tuple_var_assignment_59588_61861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59588')
        # Assigning a type to the variable 'tx1' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tx1', tuple_var_assignment_59588_61861)
        
        # Assigning a Name to a Name (line 1101):
        # Getting the type of 'tuple_var_assignment_59589' (line 1101)
        tuple_var_assignment_59589_61862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59589')
        # Assigning a type to the variable 'ty1' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 12), 'ty1', tuple_var_assignment_59589_61862)
        
        # Assigning a Name to a Name (line 1101):
        # Getting the type of 'tuple_var_assignment_59590' (line 1101)
        tuple_var_assignment_59590_61863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59590')
        # Assigning a type to the variable 'c' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 16), 'c', tuple_var_assignment_59590_61863)
        
        # Assigning a Name to a Name (line 1101):
        # Getting the type of 'tuple_var_assignment_59591' (line 1101)
        tuple_var_assignment_59591_61864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59591')
        # Assigning a type to the variable 'fp' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 18), 'fp', tuple_var_assignment_59591_61864)
        
        # Assigning a Name to a Name (line 1101):
        # Getting the type of 'tuple_var_assignment_59592' (line 1101)
        tuple_var_assignment_59592_61865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'tuple_var_assignment_59592')
        # Assigning a type to the variable 'ier' (line 1101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1101, 21), 'ier', tuple_var_assignment_59592_61865)
        
        
        # Getting the type of 'ier' (line 1104)
        ier_61866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1104, 11), 'ier')
        int_61867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1104, 17), 'int')
        # Applying the binary operator '>' (line 1104)
        result_gt_61868 = python_operator(stypy.reporting.localization.Localization(__file__, 1104, 11), '>', ier_61866, int_61867)
        
        # Testing the type of an if condition (line 1104)
        if_condition_61869 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1104, 8), result_gt_61868)
        # Assigning a type to the variable 'if_condition_61869' (line 1104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1104, 8), 'if_condition_61869', if_condition_61869)
        # SSA begins for if statement (line 1104)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 1105):
        
        # Assigning a Subscript to a Name (line 1105):
        
        # Obtaining the type of the subscript
        int_61870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1105, 12), 'int')
        
        # Call to surfit_lsq(...): (line 1105)
        # Processing the call arguments (line 1105)
        # Getting the type of 'x' (line 1105)
        x_61873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 51), 'x', False)
        # Getting the type of 'y' (line 1105)
        y_61874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 53), 'y', False)
        # Getting the type of 'z' (line 1105)
        z_61875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 55), 'z', False)
        # Getting the type of 'tx1' (line 1105)
        tx1_61876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 57), 'tx1', False)
        # Getting the type of 'ty1' (line 1105)
        ty1_61877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 61), 'ty1', False)
        # Getting the type of 'w' (line 1105)
        w_61878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 65), 'w', False)
        # Getting the type of 'xb' (line 1106)
        xb_61879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 51), 'xb', False)
        # Getting the type of 'xe' (line 1106)
        xe_61880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 54), 'xe', False)
        # Getting the type of 'yb' (line 1106)
        yb_61881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 57), 'yb', False)
        # Getting the type of 'ye' (line 1106)
        ye_61882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 60), 'ye', False)
        # Getting the type of 'kx' (line 1107)
        kx_61883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 51), 'kx', False)
        # Getting the type of 'ky' (line 1107)
        ky_61884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 54), 'ky', False)
        # Getting the type of 'eps' (line 1107)
        eps_61885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 57), 'eps', False)
        # Processing the call keyword arguments (line 1105)
        # Getting the type of 'ier' (line 1107)
        ier_61886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 67), 'ier', False)
        keyword_61887 = ier_61886
        kwargs_61888 = {'lwrk2': keyword_61887}
        # Getting the type of 'dfitpack' (line 1105)
        dfitpack_61871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 31), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1105)
        surfit_lsq_61872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 31), dfitpack_61871, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1105)
        surfit_lsq_call_result_61889 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 31), surfit_lsq_61872, *[x_61873, y_61874, z_61875, tx1_61876, ty1_61877, w_61878, xb_61879, xe_61880, yb_61881, ye_61882, kx_61883, ky_61884, eps_61885], **kwargs_61888)
        
        # Obtaining the member '__getitem__' of a type (line 1105)
        getitem___61890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 12), surfit_lsq_call_result_61889, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1105)
        subscript_call_result_61891 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 12), getitem___61890, int_61870)
        
        # Assigning a type to the variable 'tuple_var_assignment_59593' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59593', subscript_call_result_61891)
        
        # Assigning a Subscript to a Name (line 1105):
        
        # Obtaining the type of the subscript
        int_61892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1105, 12), 'int')
        
        # Call to surfit_lsq(...): (line 1105)
        # Processing the call arguments (line 1105)
        # Getting the type of 'x' (line 1105)
        x_61895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 51), 'x', False)
        # Getting the type of 'y' (line 1105)
        y_61896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 53), 'y', False)
        # Getting the type of 'z' (line 1105)
        z_61897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 55), 'z', False)
        # Getting the type of 'tx1' (line 1105)
        tx1_61898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 57), 'tx1', False)
        # Getting the type of 'ty1' (line 1105)
        ty1_61899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 61), 'ty1', False)
        # Getting the type of 'w' (line 1105)
        w_61900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 65), 'w', False)
        # Getting the type of 'xb' (line 1106)
        xb_61901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 51), 'xb', False)
        # Getting the type of 'xe' (line 1106)
        xe_61902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 54), 'xe', False)
        # Getting the type of 'yb' (line 1106)
        yb_61903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 57), 'yb', False)
        # Getting the type of 'ye' (line 1106)
        ye_61904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 60), 'ye', False)
        # Getting the type of 'kx' (line 1107)
        kx_61905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 51), 'kx', False)
        # Getting the type of 'ky' (line 1107)
        ky_61906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 54), 'ky', False)
        # Getting the type of 'eps' (line 1107)
        eps_61907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 57), 'eps', False)
        # Processing the call keyword arguments (line 1105)
        # Getting the type of 'ier' (line 1107)
        ier_61908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 67), 'ier', False)
        keyword_61909 = ier_61908
        kwargs_61910 = {'lwrk2': keyword_61909}
        # Getting the type of 'dfitpack' (line 1105)
        dfitpack_61893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 31), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1105)
        surfit_lsq_61894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 31), dfitpack_61893, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1105)
        surfit_lsq_call_result_61911 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 31), surfit_lsq_61894, *[x_61895, y_61896, z_61897, tx1_61898, ty1_61899, w_61900, xb_61901, xe_61902, yb_61903, ye_61904, kx_61905, ky_61906, eps_61907], **kwargs_61910)
        
        # Obtaining the member '__getitem__' of a type (line 1105)
        getitem___61912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 12), surfit_lsq_call_result_61911, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1105)
        subscript_call_result_61913 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 12), getitem___61912, int_61892)
        
        # Assigning a type to the variable 'tuple_var_assignment_59594' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59594', subscript_call_result_61913)
        
        # Assigning a Subscript to a Name (line 1105):
        
        # Obtaining the type of the subscript
        int_61914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1105, 12), 'int')
        
        # Call to surfit_lsq(...): (line 1105)
        # Processing the call arguments (line 1105)
        # Getting the type of 'x' (line 1105)
        x_61917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 51), 'x', False)
        # Getting the type of 'y' (line 1105)
        y_61918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 53), 'y', False)
        # Getting the type of 'z' (line 1105)
        z_61919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 55), 'z', False)
        # Getting the type of 'tx1' (line 1105)
        tx1_61920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 57), 'tx1', False)
        # Getting the type of 'ty1' (line 1105)
        ty1_61921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 61), 'ty1', False)
        # Getting the type of 'w' (line 1105)
        w_61922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 65), 'w', False)
        # Getting the type of 'xb' (line 1106)
        xb_61923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 51), 'xb', False)
        # Getting the type of 'xe' (line 1106)
        xe_61924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 54), 'xe', False)
        # Getting the type of 'yb' (line 1106)
        yb_61925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 57), 'yb', False)
        # Getting the type of 'ye' (line 1106)
        ye_61926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 60), 'ye', False)
        # Getting the type of 'kx' (line 1107)
        kx_61927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 51), 'kx', False)
        # Getting the type of 'ky' (line 1107)
        ky_61928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 54), 'ky', False)
        # Getting the type of 'eps' (line 1107)
        eps_61929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 57), 'eps', False)
        # Processing the call keyword arguments (line 1105)
        # Getting the type of 'ier' (line 1107)
        ier_61930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 67), 'ier', False)
        keyword_61931 = ier_61930
        kwargs_61932 = {'lwrk2': keyword_61931}
        # Getting the type of 'dfitpack' (line 1105)
        dfitpack_61915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 31), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1105)
        surfit_lsq_61916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 31), dfitpack_61915, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1105)
        surfit_lsq_call_result_61933 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 31), surfit_lsq_61916, *[x_61917, y_61918, z_61919, tx1_61920, ty1_61921, w_61922, xb_61923, xe_61924, yb_61925, ye_61926, kx_61927, ky_61928, eps_61929], **kwargs_61932)
        
        # Obtaining the member '__getitem__' of a type (line 1105)
        getitem___61934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 12), surfit_lsq_call_result_61933, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1105)
        subscript_call_result_61935 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 12), getitem___61934, int_61914)
        
        # Assigning a type to the variable 'tuple_var_assignment_59595' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59595', subscript_call_result_61935)
        
        # Assigning a Subscript to a Name (line 1105):
        
        # Obtaining the type of the subscript
        int_61936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1105, 12), 'int')
        
        # Call to surfit_lsq(...): (line 1105)
        # Processing the call arguments (line 1105)
        # Getting the type of 'x' (line 1105)
        x_61939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 51), 'x', False)
        # Getting the type of 'y' (line 1105)
        y_61940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 53), 'y', False)
        # Getting the type of 'z' (line 1105)
        z_61941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 55), 'z', False)
        # Getting the type of 'tx1' (line 1105)
        tx1_61942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 57), 'tx1', False)
        # Getting the type of 'ty1' (line 1105)
        ty1_61943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 61), 'ty1', False)
        # Getting the type of 'w' (line 1105)
        w_61944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 65), 'w', False)
        # Getting the type of 'xb' (line 1106)
        xb_61945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 51), 'xb', False)
        # Getting the type of 'xe' (line 1106)
        xe_61946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 54), 'xe', False)
        # Getting the type of 'yb' (line 1106)
        yb_61947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 57), 'yb', False)
        # Getting the type of 'ye' (line 1106)
        ye_61948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 60), 'ye', False)
        # Getting the type of 'kx' (line 1107)
        kx_61949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 51), 'kx', False)
        # Getting the type of 'ky' (line 1107)
        ky_61950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 54), 'ky', False)
        # Getting the type of 'eps' (line 1107)
        eps_61951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 57), 'eps', False)
        # Processing the call keyword arguments (line 1105)
        # Getting the type of 'ier' (line 1107)
        ier_61952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 67), 'ier', False)
        keyword_61953 = ier_61952
        kwargs_61954 = {'lwrk2': keyword_61953}
        # Getting the type of 'dfitpack' (line 1105)
        dfitpack_61937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 31), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1105)
        surfit_lsq_61938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 31), dfitpack_61937, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1105)
        surfit_lsq_call_result_61955 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 31), surfit_lsq_61938, *[x_61939, y_61940, z_61941, tx1_61942, ty1_61943, w_61944, xb_61945, xe_61946, yb_61947, ye_61948, kx_61949, ky_61950, eps_61951], **kwargs_61954)
        
        # Obtaining the member '__getitem__' of a type (line 1105)
        getitem___61956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 12), surfit_lsq_call_result_61955, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1105)
        subscript_call_result_61957 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 12), getitem___61956, int_61936)
        
        # Assigning a type to the variable 'tuple_var_assignment_59596' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59596', subscript_call_result_61957)
        
        # Assigning a Subscript to a Name (line 1105):
        
        # Obtaining the type of the subscript
        int_61958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1105, 12), 'int')
        
        # Call to surfit_lsq(...): (line 1105)
        # Processing the call arguments (line 1105)
        # Getting the type of 'x' (line 1105)
        x_61961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 51), 'x', False)
        # Getting the type of 'y' (line 1105)
        y_61962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 53), 'y', False)
        # Getting the type of 'z' (line 1105)
        z_61963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 55), 'z', False)
        # Getting the type of 'tx1' (line 1105)
        tx1_61964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 57), 'tx1', False)
        # Getting the type of 'ty1' (line 1105)
        ty1_61965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 61), 'ty1', False)
        # Getting the type of 'w' (line 1105)
        w_61966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 65), 'w', False)
        # Getting the type of 'xb' (line 1106)
        xb_61967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 51), 'xb', False)
        # Getting the type of 'xe' (line 1106)
        xe_61968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 54), 'xe', False)
        # Getting the type of 'yb' (line 1106)
        yb_61969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 57), 'yb', False)
        # Getting the type of 'ye' (line 1106)
        ye_61970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 60), 'ye', False)
        # Getting the type of 'kx' (line 1107)
        kx_61971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 51), 'kx', False)
        # Getting the type of 'ky' (line 1107)
        ky_61972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 54), 'ky', False)
        # Getting the type of 'eps' (line 1107)
        eps_61973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 57), 'eps', False)
        # Processing the call keyword arguments (line 1105)
        # Getting the type of 'ier' (line 1107)
        ier_61974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1107, 67), 'ier', False)
        keyword_61975 = ier_61974
        kwargs_61976 = {'lwrk2': keyword_61975}
        # Getting the type of 'dfitpack' (line 1105)
        dfitpack_61959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 31), 'dfitpack', False)
        # Obtaining the member 'surfit_lsq' of a type (line 1105)
        surfit_lsq_61960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 31), dfitpack_61959, 'surfit_lsq')
        # Calling surfit_lsq(args, kwargs) (line 1105)
        surfit_lsq_call_result_61977 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 31), surfit_lsq_61960, *[x_61961, y_61962, z_61963, tx1_61964, ty1_61965, w_61966, xb_61967, xe_61968, yb_61969, ye_61970, kx_61971, ky_61972, eps_61973], **kwargs_61976)
        
        # Obtaining the member '__getitem__' of a type (line 1105)
        getitem___61978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1105, 12), surfit_lsq_call_result_61977, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1105)
        subscript_call_result_61979 = invoke(stypy.reporting.localization.Localization(__file__, 1105, 12), getitem___61978, int_61958)
        
        # Assigning a type to the variable 'tuple_var_assignment_59597' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59597', subscript_call_result_61979)
        
        # Assigning a Name to a Name (line 1105):
        # Getting the type of 'tuple_var_assignment_59593' (line 1105)
        tuple_var_assignment_59593_61980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59593')
        # Assigning a type to the variable 'tx1' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tx1', tuple_var_assignment_59593_61980)
        
        # Assigning a Name to a Name (line 1105):
        # Getting the type of 'tuple_var_assignment_59594' (line 1105)
        tuple_var_assignment_59594_61981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59594')
        # Assigning a type to the variable 'ty1' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 16), 'ty1', tuple_var_assignment_59594_61981)
        
        # Assigning a Name to a Name (line 1105):
        # Getting the type of 'tuple_var_assignment_59595' (line 1105)
        tuple_var_assignment_59595_61982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59595')
        # Assigning a type to the variable 'c' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 20), 'c', tuple_var_assignment_59595_61982)
        
        # Assigning a Name to a Name (line 1105):
        # Getting the type of 'tuple_var_assignment_59596' (line 1105)
        tuple_var_assignment_59596_61983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59596')
        # Assigning a type to the variable 'fp' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 22), 'fp', tuple_var_assignment_59596_61983)
        
        # Assigning a Name to a Name (line 1105):
        # Getting the type of 'tuple_var_assignment_59597' (line 1105)
        tuple_var_assignment_59597_61984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 12), 'tuple_var_assignment_59597')
        # Assigning a type to the variable 'ier' (line 1105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1105, 25), 'ier', tuple_var_assignment_59597_61984)
        # SSA join for if statement (line 1104)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'ier' (line 1108)
        ier_61985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1108, 11), 'ier')
        
        # Obtaining an instance of the builtin type 'list' (line 1108)
        list_61986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1108, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1108)
        # Adding element type (line 1108)
        int_61987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1108, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1108, 18), list_61986, int_61987)
        # Adding element type (line 1108)
        int_61988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1108, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1108, 18), list_61986, int_61988)
        # Adding element type (line 1108)
        int_61989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1108, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1108, 18), list_61986, int_61989)
        
        # Applying the binary operator 'in' (line 1108)
        result_contains_61990 = python_operator(stypy.reporting.localization.Localization(__file__, 1108, 11), 'in', ier_61985, list_61986)
        
        # Testing the type of an if condition (line 1108)
        if_condition_61991 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1108, 8), result_contains_61990)
        # Assigning a type to the variable 'if_condition_61991' (line 1108)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1108, 8), 'if_condition_61991', if_condition_61991)
        # SSA begins for if statement (line 1108)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        pass
        # SSA branch for the else part of an if statement (line 1108)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'ier' (line 1111)
        ier_61992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1111, 15), 'ier')
        int_61993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1111, 21), 'int')
        # Applying the binary operator '<' (line 1111)
        result_lt_61994 = python_operator(stypy.reporting.localization.Localization(__file__, 1111, 15), '<', ier_61992, int_61993)
        
        # Testing the type of an if condition (line 1111)
        if_condition_61995 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1111, 12), result_lt_61994)
        # Assigning a type to the variable 'if_condition_61995' (line 1111)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1111, 12), 'if_condition_61995', if_condition_61995)
        # SSA begins for if statement (line 1111)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 1112):
        
        # Assigning a BinOp to a Name (line 1112):
        # Getting the type of 'nx' (line 1112)
        nx_61996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 30), 'nx')
        # Getting the type of 'kx' (line 1112)
        kx_61997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 33), 'kx')
        # Applying the binary operator '-' (line 1112)
        result_sub_61998 = python_operator(stypy.reporting.localization.Localization(__file__, 1112, 30), '-', nx_61996, kx_61997)
        
        int_61999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 36), 'int')
        # Applying the binary operator '-' (line 1112)
        result_sub_62000 = python_operator(stypy.reporting.localization.Localization(__file__, 1112, 35), '-', result_sub_61998, int_61999)
        
        # Getting the type of 'ny' (line 1112)
        ny_62001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 40), 'ny')
        # Getting the type of 'ky' (line 1112)
        ky_62002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 43), 'ky')
        # Applying the binary operator '-' (line 1112)
        result_sub_62003 = python_operator(stypy.reporting.localization.Localization(__file__, 1112, 40), '-', ny_62001, ky_62002)
        
        int_62004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 46), 'int')
        # Applying the binary operator '-' (line 1112)
        result_sub_62005 = python_operator(stypy.reporting.localization.Localization(__file__, 1112, 45), '-', result_sub_62003, int_62004)
        
        # Applying the binary operator '*' (line 1112)
        result_mul_62006 = python_operator(stypy.reporting.localization.Localization(__file__, 1112, 29), '*', result_sub_62000, result_sub_62005)
        
        # Getting the type of 'ier' (line 1112)
        ier_62007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 49), 'ier')
        # Applying the binary operator '+' (line 1112)
        result_add_62008 = python_operator(stypy.reporting.localization.Localization(__file__, 1112, 29), '+', result_mul_62006, ier_62007)
        
        # Assigning a type to the variable 'deficiency' (line 1112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 16), 'deficiency', result_add_62008)
        
        # Assigning a BinOp to a Name (line 1113):
        
        # Assigning a BinOp to a Name (line 1113):
        
        # Call to get(...): (line 1113)
        # Processing the call arguments (line 1113)
        int_62011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1113, 47), 'int')
        # Processing the call keyword arguments (line 1113)
        kwargs_62012 = {}
        # Getting the type of '_surfit_messages' (line 1113)
        _surfit_messages_62009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 26), '_surfit_messages', False)
        # Obtaining the member 'get' of a type (line 1113)
        get_62010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1113, 26), _surfit_messages_62009, 'get')
        # Calling get(args, kwargs) (line 1113)
        get_call_result_62013 = invoke(stypy.reporting.localization.Localization(__file__, 1113, 26), get_62010, *[int_62011], **kwargs_62012)
        
        # Getting the type of 'deficiency' (line 1113)
        deficiency_62014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 54), 'deficiency')
        # Applying the binary operator '%' (line 1113)
        result_mod_62015 = python_operator(stypy.reporting.localization.Localization(__file__, 1113, 26), '%', get_call_result_62013, deficiency_62014)
        
        # Assigning a type to the variable 'message' (line 1113)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1113, 16), 'message', result_mod_62015)
        # SSA branch for the else part of an if statement (line 1111)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 1115):
        
        # Assigning a Call to a Name (line 1115):
        
        # Call to get(...): (line 1115)
        # Processing the call arguments (line 1115)
        # Getting the type of 'ier' (line 1115)
        ier_62018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 47), 'ier', False)
        str_62019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1115, 52), 'str', 'ier=%s')
        # Getting the type of 'ier' (line 1115)
        ier_62020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 64), 'ier', False)
        # Applying the binary operator '%' (line 1115)
        result_mod_62021 = python_operator(stypy.reporting.localization.Localization(__file__, 1115, 52), '%', str_62019, ier_62020)
        
        # Processing the call keyword arguments (line 1115)
        kwargs_62022 = {}
        # Getting the type of '_surfit_messages' (line 1115)
        _surfit_messages_62016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 26), '_surfit_messages', False)
        # Obtaining the member 'get' of a type (line 1115)
        get_62017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1115, 26), _surfit_messages_62016, 'get')
        # Calling get(args, kwargs) (line 1115)
        get_call_result_62023 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 26), get_62017, *[ier_62018, result_mod_62021], **kwargs_62022)
        
        # Assigning a type to the variable 'message' (line 1115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1115, 16), 'message', get_call_result_62023)
        # SSA join for if statement (line 1111)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to warn(...): (line 1116)
        # Processing the call arguments (line 1116)
        # Getting the type of 'message' (line 1116)
        message_62026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 26), 'message', False)
        # Processing the call keyword arguments (line 1116)
        kwargs_62027 = {}
        # Getting the type of 'warnings' (line 1116)
        warnings_62024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 12), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 1116)
        warn_62025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 12), warnings_62024, 'warn')
        # Calling warn(args, kwargs) (line 1116)
        warn_call_result_62028 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 12), warn_62025, *[message_62026], **kwargs_62027)
        
        # SSA join for if statement (line 1108)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1117):
        
        # Assigning a Name to a Attribute (line 1117):
        # Getting the type of 'fp' (line 1117)
        fp_62029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 18), 'fp')
        # Getting the type of 'self' (line 1117)
        self_62030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 8), 'self')
        # Setting the type of the member 'fp' of a type (line 1117)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1117, 8), self_62030, 'fp', fp_62029)
        
        # Assigning a Tuple to a Attribute (line 1118):
        
        # Assigning a Tuple to a Attribute (line 1118):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1118)
        tuple_62031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1118, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1118)
        # Adding element type (line 1118)
        # Getting the type of 'tx1' (line 1118)
        tx1_62032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 19), 'tx1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1118, 19), tuple_62031, tx1_62032)
        # Adding element type (line 1118)
        # Getting the type of 'ty1' (line 1118)
        ty1_62033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 24), 'ty1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1118, 19), tuple_62031, ty1_62033)
        # Adding element type (line 1118)
        # Getting the type of 'c' (line 1118)
        c_62034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 29), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1118, 19), tuple_62031, c_62034)
        
        # Getting the type of 'self' (line 1118)
        self_62035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 8), 'self')
        # Setting the type of the member 'tck' of a type (line 1118)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1118, 8), self_62035, 'tck', tuple_62031)
        
        # Assigning a Tuple to a Attribute (line 1119):
        
        # Assigning a Tuple to a Attribute (line 1119):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1119)
        tuple_62036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1119, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1119)
        # Adding element type (line 1119)
        # Getting the type of 'kx' (line 1119)
        kx_62037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 23), 'kx')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1119, 23), tuple_62036, kx_62037)
        # Adding element type (line 1119)
        # Getting the type of 'ky' (line 1119)
        ky_62038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 27), 'ky')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1119, 23), tuple_62036, ky_62038)
        
        # Getting the type of 'self' (line 1119)
        self_62039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 8), 'self')
        # Setting the type of the member 'degrees' of a type (line 1119)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1119, 8), self_62039, 'degrees', tuple_62036)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'LSQBivariateSpline' (line 1055)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1055, 0), 'LSQBivariateSpline', LSQBivariateSpline)
# Declaration of the 'RectBivariateSpline' class
# Getting the type of 'BivariateSpline' (line 1122)
BivariateSpline_62040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 26), 'BivariateSpline')

class RectBivariateSpline(BivariateSpline_62040, ):
    str_62041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1152, (-1)), 'str', '\n    Bivariate spline approximation over a rectangular mesh.\n\n    Can be used for both smoothing and interpolating data.\n\n    Parameters\n    ----------\n    x,y : array_like\n        1-D arrays of coordinates in strictly ascending order.\n    z : array_like\n        2-D array of data with shape (x.size,y.size).\n    bbox : array_like, optional\n        Sequence of length 4 specifying the boundary of the rectangular\n        approximation domain.  By default,\n        ``bbox=[min(x,tx),max(x,tx), min(y,ty),max(y,ty)]``.\n    kx, ky : ints, optional\n        Degrees of the bivariate spline. Default is 3.\n    s : float, optional\n        Positive smoothing factor defined for estimation condition:\n        ``sum((w[i]*(z[i]-s(x[i], y[i])))**2, axis=0) <= s``\n        Default is ``s=0``, which is for interpolation.\n\n    See Also\n    --------\n    SmoothBivariateSpline : a smoothing bivariate spline for scattered data\n    bisplrep : an older wrapping of FITPACK\n    bisplev : an older wrapping of FITPACK\n    UnivariateSpline : a similar class for univariate spline interpolation\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        
        # Obtaining an instance of the builtin type 'list' (line 1154)
        list_62042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1154, 37), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1154)
        # Adding element type (line 1154)
        # Getting the type of 'None' (line 1154)
        None_62043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1154, 38), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1154, 37), list_62042, None_62043)
        
        int_62044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1154, 46), 'int')
        # Applying the binary operator '*' (line 1154)
        result_mul_62045 = python_operator(stypy.reporting.localization.Localization(__file__, 1154, 37), '*', list_62042, int_62044)
        
        int_62046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1154, 52), 'int')
        int_62047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1154, 58), 'int')
        int_62048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1154, 63), 'int')
        defaults = [result_mul_62045, int_62046, int_62047, int_62048]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1154, 4, False)
        # Assigning a type to the variable 'self' (line 1155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1155, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RectBivariateSpline.__init__', ['x', 'y', 'z', 'bbox', 'kx', 'ky', 's'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['x', 'y', 'z', 'bbox', 'kx', 'ky', 's'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Tuple to a Tuple (line 1155):
        
        # Assigning a Call to a Name (line 1155):
        
        # Call to ravel(...): (line 1155)
        # Processing the call arguments (line 1155)
        # Getting the type of 'x' (line 1155)
        x_62050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 21), 'x', False)
        # Processing the call keyword arguments (line 1155)
        kwargs_62051 = {}
        # Getting the type of 'ravel' (line 1155)
        ravel_62049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 15), 'ravel', False)
        # Calling ravel(args, kwargs) (line 1155)
        ravel_call_result_62052 = invoke(stypy.reporting.localization.Localization(__file__, 1155, 15), ravel_62049, *[x_62050], **kwargs_62051)
        
        # Assigning a type to the variable 'tuple_assignment_59598' (line 1155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1155, 8), 'tuple_assignment_59598', ravel_call_result_62052)
        
        # Assigning a Call to a Name (line 1155):
        
        # Call to ravel(...): (line 1155)
        # Processing the call arguments (line 1155)
        # Getting the type of 'y' (line 1155)
        y_62054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 31), 'y', False)
        # Processing the call keyword arguments (line 1155)
        kwargs_62055 = {}
        # Getting the type of 'ravel' (line 1155)
        ravel_62053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 25), 'ravel', False)
        # Calling ravel(args, kwargs) (line 1155)
        ravel_call_result_62056 = invoke(stypy.reporting.localization.Localization(__file__, 1155, 25), ravel_62053, *[y_62054], **kwargs_62055)
        
        # Assigning a type to the variable 'tuple_assignment_59599' (line 1155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1155, 8), 'tuple_assignment_59599', ravel_call_result_62056)
        
        # Assigning a Name to a Name (line 1155):
        # Getting the type of 'tuple_assignment_59598' (line 1155)
        tuple_assignment_59598_62057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 8), 'tuple_assignment_59598')
        # Assigning a type to the variable 'x' (line 1155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1155, 8), 'x', tuple_assignment_59598_62057)
        
        # Assigning a Name to a Name (line 1155):
        # Getting the type of 'tuple_assignment_59599' (line 1155)
        tuple_assignment_59599_62058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 8), 'tuple_assignment_59599')
        # Assigning a type to the variable 'y' (line 1155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1155, 11), 'y', tuple_assignment_59599_62058)
        
        
        
        # Call to all(...): (line 1156)
        # Processing the call arguments (line 1156)
        
        
        # Call to diff(...): (line 1156)
        # Processing the call arguments (line 1156)
        # Getting the type of 'x' (line 1156)
        x_62061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 24), 'x', False)
        # Processing the call keyword arguments (line 1156)
        kwargs_62062 = {}
        # Getting the type of 'diff' (line 1156)
        diff_62060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 19), 'diff', False)
        # Calling diff(args, kwargs) (line 1156)
        diff_call_result_62063 = invoke(stypy.reporting.localization.Localization(__file__, 1156, 19), diff_62060, *[x_62061], **kwargs_62062)
        
        float_62064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1156, 29), 'float')
        # Applying the binary operator '>' (line 1156)
        result_gt_62065 = python_operator(stypy.reporting.localization.Localization(__file__, 1156, 19), '>', diff_call_result_62063, float_62064)
        
        # Processing the call keyword arguments (line 1156)
        kwargs_62066 = {}
        # Getting the type of 'all' (line 1156)
        all_62059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1156, 15), 'all', False)
        # Calling all(args, kwargs) (line 1156)
        all_call_result_62067 = invoke(stypy.reporting.localization.Localization(__file__, 1156, 15), all_62059, *[result_gt_62065], **kwargs_62066)
        
        # Applying the 'not' unary operator (line 1156)
        result_not__62068 = python_operator(stypy.reporting.localization.Localization(__file__, 1156, 11), 'not', all_call_result_62067)
        
        # Testing the type of an if condition (line 1156)
        if_condition_62069 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1156, 8), result_not__62068)
        # Assigning a type to the variable 'if_condition_62069' (line 1156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1156, 8), 'if_condition_62069', if_condition_62069)
        # SSA begins for if statement (line 1156)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1157)
        # Processing the call arguments (line 1157)
        str_62071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 29), 'str', 'x must be strictly increasing')
        # Processing the call keyword arguments (line 1157)
        kwargs_62072 = {}
        # Getting the type of 'ValueError' (line 1157)
        ValueError_62070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1157)
        ValueError_call_result_62073 = invoke(stypy.reporting.localization.Localization(__file__, 1157, 18), ValueError_62070, *[str_62071], **kwargs_62072)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1157, 12), ValueError_call_result_62073, 'raise parameter', BaseException)
        # SSA join for if statement (line 1156)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to all(...): (line 1158)
        # Processing the call arguments (line 1158)
        
        
        # Call to diff(...): (line 1158)
        # Processing the call arguments (line 1158)
        # Getting the type of 'y' (line 1158)
        y_62076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 24), 'y', False)
        # Processing the call keyword arguments (line 1158)
        kwargs_62077 = {}
        # Getting the type of 'diff' (line 1158)
        diff_62075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 19), 'diff', False)
        # Calling diff(args, kwargs) (line 1158)
        diff_call_result_62078 = invoke(stypy.reporting.localization.Localization(__file__, 1158, 19), diff_62075, *[y_62076], **kwargs_62077)
        
        float_62079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1158, 29), 'float')
        # Applying the binary operator '>' (line 1158)
        result_gt_62080 = python_operator(stypy.reporting.localization.Localization(__file__, 1158, 19), '>', diff_call_result_62078, float_62079)
        
        # Processing the call keyword arguments (line 1158)
        kwargs_62081 = {}
        # Getting the type of 'all' (line 1158)
        all_62074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 15), 'all', False)
        # Calling all(args, kwargs) (line 1158)
        all_call_result_62082 = invoke(stypy.reporting.localization.Localization(__file__, 1158, 15), all_62074, *[result_gt_62080], **kwargs_62081)
        
        # Applying the 'not' unary operator (line 1158)
        result_not__62083 = python_operator(stypy.reporting.localization.Localization(__file__, 1158, 11), 'not', all_call_result_62082)
        
        # Testing the type of an if condition (line 1158)
        if_condition_62084 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1158, 8), result_not__62083)
        # Assigning a type to the variable 'if_condition_62084' (line 1158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1158, 8), 'if_condition_62084', if_condition_62084)
        # SSA begins for if statement (line 1158)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1159)
        # Processing the call arguments (line 1159)
        str_62086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1159, 29), 'str', 'y must be strictly increasing')
        # Processing the call keyword arguments (line 1159)
        kwargs_62087 = {}
        # Getting the type of 'ValueError' (line 1159)
        ValueError_62085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1159, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1159)
        ValueError_call_result_62088 = invoke(stypy.reporting.localization.Localization(__file__, 1159, 18), ValueError_62085, *[str_62086], **kwargs_62087)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1159, 12), ValueError_call_result_62088, 'raise parameter', BaseException)
        # SSA join for if statement (line 1158)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Evaluating a boolean operation
        
        
        # Call to min(...): (line 1160)
        # Processing the call keyword arguments (line 1160)
        kwargs_62091 = {}
        # Getting the type of 'x' (line 1160)
        x_62089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 17), 'x', False)
        # Obtaining the member 'min' of a type (line 1160)
        min_62090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1160, 17), x_62089, 'min')
        # Calling min(args, kwargs) (line 1160)
        min_call_result_62092 = invoke(stypy.reporting.localization.Localization(__file__, 1160, 17), min_62090, *[], **kwargs_62091)
        
        
        # Obtaining the type of the subscript
        int_62093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1160, 30), 'int')
        # Getting the type of 'x' (line 1160)
        x_62094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 28), 'x')
        # Obtaining the member '__getitem__' of a type (line 1160)
        getitem___62095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1160, 28), x_62094, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1160)
        subscript_call_result_62096 = invoke(stypy.reporting.localization.Localization(__file__, 1160, 28), getitem___62095, int_62093)
        
        # Applying the binary operator '==' (line 1160)
        result_eq_62097 = python_operator(stypy.reporting.localization.Localization(__file__, 1160, 17), '==', min_call_result_62092, subscript_call_result_62096)
        
        
        
        # Call to max(...): (line 1160)
        # Processing the call keyword arguments (line 1160)
        kwargs_62100 = {}
        # Getting the type of 'x' (line 1160)
        x_62098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 39), 'x', False)
        # Obtaining the member 'max' of a type (line 1160)
        max_62099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1160, 39), x_62098, 'max')
        # Calling max(args, kwargs) (line 1160)
        max_call_result_62101 = invoke(stypy.reporting.localization.Localization(__file__, 1160, 39), max_62099, *[], **kwargs_62100)
        
        
        # Obtaining the type of the subscript
        int_62102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1160, 52), 'int')
        # Getting the type of 'x' (line 1160)
        x_62103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 50), 'x')
        # Obtaining the member '__getitem__' of a type (line 1160)
        getitem___62104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1160, 50), x_62103, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1160)
        subscript_call_result_62105 = invoke(stypy.reporting.localization.Localization(__file__, 1160, 50), getitem___62104, int_62102)
        
        # Applying the binary operator '==' (line 1160)
        result_eq_62106 = python_operator(stypy.reporting.localization.Localization(__file__, 1160, 39), '==', max_call_result_62101, subscript_call_result_62105)
        
        # Applying the binary operator 'and' (line 1160)
        result_and_keyword_62107 = python_operator(stypy.reporting.localization.Localization(__file__, 1160, 16), 'and', result_eq_62097, result_eq_62106)
        
        # Applying the 'not' unary operator (line 1160)
        result_not__62108 = python_operator(stypy.reporting.localization.Localization(__file__, 1160, 11), 'not', result_and_keyword_62107)
        
        # Testing the type of an if condition (line 1160)
        if_condition_62109 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1160, 8), result_not__62108)
        # Assigning a type to the variable 'if_condition_62109' (line 1160)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1160, 8), 'if_condition_62109', if_condition_62109)
        # SSA begins for if statement (line 1160)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1161)
        # Processing the call arguments (line 1161)
        str_62111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1161, 29), 'str', 'x must be strictly ascending')
        # Processing the call keyword arguments (line 1161)
        kwargs_62112 = {}
        # Getting the type of 'ValueError' (line 1161)
        ValueError_62110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1161)
        ValueError_call_result_62113 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 18), ValueError_62110, *[str_62111], **kwargs_62112)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1161, 12), ValueError_call_result_62113, 'raise parameter', BaseException)
        # SSA join for if statement (line 1160)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Evaluating a boolean operation
        
        
        # Call to min(...): (line 1162)
        # Processing the call keyword arguments (line 1162)
        kwargs_62116 = {}
        # Getting the type of 'y' (line 1162)
        y_62114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 17), 'y', False)
        # Obtaining the member 'min' of a type (line 1162)
        min_62115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1162, 17), y_62114, 'min')
        # Calling min(args, kwargs) (line 1162)
        min_call_result_62117 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 17), min_62115, *[], **kwargs_62116)
        
        
        # Obtaining the type of the subscript
        int_62118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1162, 30), 'int')
        # Getting the type of 'y' (line 1162)
        y_62119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 28), 'y')
        # Obtaining the member '__getitem__' of a type (line 1162)
        getitem___62120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1162, 28), y_62119, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1162)
        subscript_call_result_62121 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 28), getitem___62120, int_62118)
        
        # Applying the binary operator '==' (line 1162)
        result_eq_62122 = python_operator(stypy.reporting.localization.Localization(__file__, 1162, 17), '==', min_call_result_62117, subscript_call_result_62121)
        
        
        
        # Call to max(...): (line 1162)
        # Processing the call keyword arguments (line 1162)
        kwargs_62125 = {}
        # Getting the type of 'y' (line 1162)
        y_62123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 39), 'y', False)
        # Obtaining the member 'max' of a type (line 1162)
        max_62124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1162, 39), y_62123, 'max')
        # Calling max(args, kwargs) (line 1162)
        max_call_result_62126 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 39), max_62124, *[], **kwargs_62125)
        
        
        # Obtaining the type of the subscript
        int_62127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1162, 52), 'int')
        # Getting the type of 'y' (line 1162)
        y_62128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 50), 'y')
        # Obtaining the member '__getitem__' of a type (line 1162)
        getitem___62129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1162, 50), y_62128, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1162)
        subscript_call_result_62130 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 50), getitem___62129, int_62127)
        
        # Applying the binary operator '==' (line 1162)
        result_eq_62131 = python_operator(stypy.reporting.localization.Localization(__file__, 1162, 39), '==', max_call_result_62126, subscript_call_result_62130)
        
        # Applying the binary operator 'and' (line 1162)
        result_and_keyword_62132 = python_operator(stypy.reporting.localization.Localization(__file__, 1162, 16), 'and', result_eq_62122, result_eq_62131)
        
        # Applying the 'not' unary operator (line 1162)
        result_not__62133 = python_operator(stypy.reporting.localization.Localization(__file__, 1162, 11), 'not', result_and_keyword_62132)
        
        # Testing the type of an if condition (line 1162)
        if_condition_62134 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1162, 8), result_not__62133)
        # Assigning a type to the variable 'if_condition_62134' (line 1162)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1162, 8), 'if_condition_62134', if_condition_62134)
        # SSA begins for if statement (line 1162)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1163)
        # Processing the call arguments (line 1163)
        str_62136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1163, 29), 'str', 'y must be strictly ascending')
        # Processing the call keyword arguments (line 1163)
        kwargs_62137 = {}
        # Getting the type of 'ValueError' (line 1163)
        ValueError_62135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1163)
        ValueError_call_result_62138 = invoke(stypy.reporting.localization.Localization(__file__, 1163, 18), ValueError_62135, *[str_62136], **kwargs_62137)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1163, 12), ValueError_call_result_62138, 'raise parameter', BaseException)
        # SSA join for if statement (line 1162)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Getting the type of 'x' (line 1164)
        x_62139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 15), 'x')
        # Obtaining the member 'size' of a type (line 1164)
        size_62140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1164, 15), x_62139, 'size')
        
        # Obtaining the type of the subscript
        int_62141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1164, 33), 'int')
        # Getting the type of 'z' (line 1164)
        z_62142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 25), 'z')
        # Obtaining the member 'shape' of a type (line 1164)
        shape_62143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1164, 25), z_62142, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1164)
        getitem___62144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1164, 25), shape_62143, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1164)
        subscript_call_result_62145 = invoke(stypy.reporting.localization.Localization(__file__, 1164, 25), getitem___62144, int_62141)
        
        # Applying the binary operator '==' (line 1164)
        result_eq_62146 = python_operator(stypy.reporting.localization.Localization(__file__, 1164, 15), '==', size_62140, subscript_call_result_62145)
        
        # Applying the 'not' unary operator (line 1164)
        result_not__62147 = python_operator(stypy.reporting.localization.Localization(__file__, 1164, 11), 'not', result_eq_62146)
        
        # Testing the type of an if condition (line 1164)
        if_condition_62148 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1164, 8), result_not__62147)
        # Assigning a type to the variable 'if_condition_62148' (line 1164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1164, 8), 'if_condition_62148', if_condition_62148)
        # SSA begins for if statement (line 1164)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1165)
        # Processing the call arguments (line 1165)
        str_62150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1165, 29), 'str', 'x dimension of z must have same number of elements as x')
        # Processing the call keyword arguments (line 1165)
        kwargs_62151 = {}
        # Getting the type of 'ValueError' (line 1165)
        ValueError_62149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1165)
        ValueError_call_result_62152 = invoke(stypy.reporting.localization.Localization(__file__, 1165, 18), ValueError_62149, *[str_62150], **kwargs_62151)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1165, 12), ValueError_call_result_62152, 'raise parameter', BaseException)
        # SSA join for if statement (line 1164)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Getting the type of 'y' (line 1167)
        y_62153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 15), 'y')
        # Obtaining the member 'size' of a type (line 1167)
        size_62154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 15), y_62153, 'size')
        
        # Obtaining the type of the subscript
        int_62155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1167, 33), 'int')
        # Getting the type of 'z' (line 1167)
        z_62156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 25), 'z')
        # Obtaining the member 'shape' of a type (line 1167)
        shape_62157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 25), z_62156, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1167)
        getitem___62158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 25), shape_62157, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1167)
        subscript_call_result_62159 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 25), getitem___62158, int_62155)
        
        # Applying the binary operator '==' (line 1167)
        result_eq_62160 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 15), '==', size_62154, subscript_call_result_62159)
        
        # Applying the 'not' unary operator (line 1167)
        result_not__62161 = python_operator(stypy.reporting.localization.Localization(__file__, 1167, 11), 'not', result_eq_62160)
        
        # Testing the type of an if condition (line 1167)
        if_condition_62162 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1167, 8), result_not__62161)
        # Assigning a type to the variable 'if_condition_62162' (line 1167)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1167, 8), 'if_condition_62162', if_condition_62162)
        # SSA begins for if statement (line 1167)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1168)
        # Processing the call arguments (line 1168)
        str_62164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1168, 29), 'str', 'y dimension of z must have same number of elements as y')
        # Processing the call keyword arguments (line 1168)
        kwargs_62165 = {}
        # Getting the type of 'ValueError' (line 1168)
        ValueError_62163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1168)
        ValueError_call_result_62166 = invoke(stypy.reporting.localization.Localization(__file__, 1168, 18), ValueError_62163, *[str_62164], **kwargs_62165)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1168, 12), ValueError_call_result_62166, 'raise parameter', BaseException)
        # SSA join for if statement (line 1167)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1170):
        
        # Assigning a Call to a Name (line 1170):
        
        # Call to ravel(...): (line 1170)
        # Processing the call arguments (line 1170)
        # Getting the type of 'z' (line 1170)
        z_62168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 18), 'z', False)
        # Processing the call keyword arguments (line 1170)
        kwargs_62169 = {}
        # Getting the type of 'ravel' (line 1170)
        ravel_62167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1170, 12), 'ravel', False)
        # Calling ravel(args, kwargs) (line 1170)
        ravel_call_result_62170 = invoke(stypy.reporting.localization.Localization(__file__, 1170, 12), ravel_62167, *[z_62168], **kwargs_62169)
        
        # Assigning a type to the variable 'z' (line 1170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1170, 8), 'z', ravel_call_result_62170)
        
        # Assigning a Name to a Tuple (line 1171):
        
        # Assigning a Subscript to a Name (line 1171):
        
        # Obtaining the type of the subscript
        int_62171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 8), 'int')
        # Getting the type of 'bbox' (line 1171)
        bbox_62172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 25), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1171)
        getitem___62173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 8), bbox_62172, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
        subscript_call_result_62174 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 8), getitem___62173, int_62171)
        
        # Assigning a type to the variable 'tuple_var_assignment_59600' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_59600', subscript_call_result_62174)
        
        # Assigning a Subscript to a Name (line 1171):
        
        # Obtaining the type of the subscript
        int_62175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 8), 'int')
        # Getting the type of 'bbox' (line 1171)
        bbox_62176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 25), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1171)
        getitem___62177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 8), bbox_62176, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
        subscript_call_result_62178 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 8), getitem___62177, int_62175)
        
        # Assigning a type to the variable 'tuple_var_assignment_59601' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_59601', subscript_call_result_62178)
        
        # Assigning a Subscript to a Name (line 1171):
        
        # Obtaining the type of the subscript
        int_62179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 8), 'int')
        # Getting the type of 'bbox' (line 1171)
        bbox_62180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 25), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1171)
        getitem___62181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 8), bbox_62180, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
        subscript_call_result_62182 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 8), getitem___62181, int_62179)
        
        # Assigning a type to the variable 'tuple_var_assignment_59602' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_59602', subscript_call_result_62182)
        
        # Assigning a Subscript to a Name (line 1171):
        
        # Obtaining the type of the subscript
        int_62183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1171, 8), 'int')
        # Getting the type of 'bbox' (line 1171)
        bbox_62184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 25), 'bbox')
        # Obtaining the member '__getitem__' of a type (line 1171)
        getitem___62185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 8), bbox_62184, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1171)
        subscript_call_result_62186 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 8), getitem___62185, int_62183)
        
        # Assigning a type to the variable 'tuple_var_assignment_59603' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_59603', subscript_call_result_62186)
        
        # Assigning a Name to a Name (line 1171):
        # Getting the type of 'tuple_var_assignment_59600' (line 1171)
        tuple_var_assignment_59600_62187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_59600')
        # Assigning a type to the variable 'xb' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'xb', tuple_var_assignment_59600_62187)
        
        # Assigning a Name to a Name (line 1171):
        # Getting the type of 'tuple_var_assignment_59601' (line 1171)
        tuple_var_assignment_59601_62188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_59601')
        # Assigning a type to the variable 'xe' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 12), 'xe', tuple_var_assignment_59601_62188)
        
        # Assigning a Name to a Name (line 1171):
        # Getting the type of 'tuple_var_assignment_59602' (line 1171)
        tuple_var_assignment_59602_62189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_59602')
        # Assigning a type to the variable 'yb' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 16), 'yb', tuple_var_assignment_59602_62189)
        
        # Assigning a Name to a Name (line 1171):
        # Getting the type of 'tuple_var_assignment_59603' (line 1171)
        tuple_var_assignment_59603_62190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 8), 'tuple_var_assignment_59603')
        # Assigning a type to the variable 'ye' (line 1171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1171, 20), 'ye', tuple_var_assignment_59603_62190)
        
        # Assigning a Call to a Tuple (line 1172):
        
        # Assigning a Subscript to a Name (line 1172):
        
        # Obtaining the type of the subscript
        int_62191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 8), 'int')
        
        # Call to regrid_smth(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'x' (line 1172)
        x_62194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 58), 'x', False)
        # Getting the type of 'y' (line 1172)
        y_62195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 61), 'y', False)
        # Getting the type of 'z' (line 1172)
        z_62196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'z', False)
        # Getting the type of 'xb' (line 1172)
        xb_62197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 67), 'xb', False)
        # Getting the type of 'xe' (line 1172)
        xe_62198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 71), 'xe', False)
        # Getting the type of 'yb' (line 1172)
        yb_62199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 75), 'yb', False)
        # Getting the type of 'ye' (line 1173)
        ye_62200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 58), 'ye', False)
        # Getting the type of 'kx' (line 1173)
        kx_62201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 62), 'kx', False)
        # Getting the type of 'ky' (line 1173)
        ky_62202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 66), 'ky', False)
        # Getting the type of 's' (line 1173)
        s_62203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 70), 's', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_62204 = {}
        # Getting the type of 'dfitpack' (line 1172)
        dfitpack_62192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth' of a type (line 1172)
        regrid_smth_62193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 37), dfitpack_62192, 'regrid_smth')
        # Calling regrid_smth(args, kwargs) (line 1172)
        regrid_smth_call_result_62205 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 37), regrid_smth_62193, *[x_62194, y_62195, z_62196, xb_62197, xe_62198, yb_62199, ye_62200, kx_62201, ky_62202, s_62203], **kwargs_62204)
        
        # Obtaining the member '__getitem__' of a type (line 1172)
        getitem___62206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 8), regrid_smth_call_result_62205, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1172)
        subscript_call_result_62207 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 8), getitem___62206, int_62191)
        
        # Assigning a type to the variable 'tuple_var_assignment_59604' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59604', subscript_call_result_62207)
        
        # Assigning a Subscript to a Name (line 1172):
        
        # Obtaining the type of the subscript
        int_62208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 8), 'int')
        
        # Call to regrid_smth(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'x' (line 1172)
        x_62211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 58), 'x', False)
        # Getting the type of 'y' (line 1172)
        y_62212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 61), 'y', False)
        # Getting the type of 'z' (line 1172)
        z_62213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'z', False)
        # Getting the type of 'xb' (line 1172)
        xb_62214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 67), 'xb', False)
        # Getting the type of 'xe' (line 1172)
        xe_62215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 71), 'xe', False)
        # Getting the type of 'yb' (line 1172)
        yb_62216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 75), 'yb', False)
        # Getting the type of 'ye' (line 1173)
        ye_62217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 58), 'ye', False)
        # Getting the type of 'kx' (line 1173)
        kx_62218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 62), 'kx', False)
        # Getting the type of 'ky' (line 1173)
        ky_62219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 66), 'ky', False)
        # Getting the type of 's' (line 1173)
        s_62220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 70), 's', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_62221 = {}
        # Getting the type of 'dfitpack' (line 1172)
        dfitpack_62209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth' of a type (line 1172)
        regrid_smth_62210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 37), dfitpack_62209, 'regrid_smth')
        # Calling regrid_smth(args, kwargs) (line 1172)
        regrid_smth_call_result_62222 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 37), regrid_smth_62210, *[x_62211, y_62212, z_62213, xb_62214, xe_62215, yb_62216, ye_62217, kx_62218, ky_62219, s_62220], **kwargs_62221)
        
        # Obtaining the member '__getitem__' of a type (line 1172)
        getitem___62223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 8), regrid_smth_call_result_62222, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1172)
        subscript_call_result_62224 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 8), getitem___62223, int_62208)
        
        # Assigning a type to the variable 'tuple_var_assignment_59605' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59605', subscript_call_result_62224)
        
        # Assigning a Subscript to a Name (line 1172):
        
        # Obtaining the type of the subscript
        int_62225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 8), 'int')
        
        # Call to regrid_smth(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'x' (line 1172)
        x_62228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 58), 'x', False)
        # Getting the type of 'y' (line 1172)
        y_62229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 61), 'y', False)
        # Getting the type of 'z' (line 1172)
        z_62230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'z', False)
        # Getting the type of 'xb' (line 1172)
        xb_62231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 67), 'xb', False)
        # Getting the type of 'xe' (line 1172)
        xe_62232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 71), 'xe', False)
        # Getting the type of 'yb' (line 1172)
        yb_62233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 75), 'yb', False)
        # Getting the type of 'ye' (line 1173)
        ye_62234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 58), 'ye', False)
        # Getting the type of 'kx' (line 1173)
        kx_62235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 62), 'kx', False)
        # Getting the type of 'ky' (line 1173)
        ky_62236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 66), 'ky', False)
        # Getting the type of 's' (line 1173)
        s_62237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 70), 's', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_62238 = {}
        # Getting the type of 'dfitpack' (line 1172)
        dfitpack_62226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth' of a type (line 1172)
        regrid_smth_62227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 37), dfitpack_62226, 'regrid_smth')
        # Calling regrid_smth(args, kwargs) (line 1172)
        regrid_smth_call_result_62239 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 37), regrid_smth_62227, *[x_62228, y_62229, z_62230, xb_62231, xe_62232, yb_62233, ye_62234, kx_62235, ky_62236, s_62237], **kwargs_62238)
        
        # Obtaining the member '__getitem__' of a type (line 1172)
        getitem___62240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 8), regrid_smth_call_result_62239, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1172)
        subscript_call_result_62241 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 8), getitem___62240, int_62225)
        
        # Assigning a type to the variable 'tuple_var_assignment_59606' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59606', subscript_call_result_62241)
        
        # Assigning a Subscript to a Name (line 1172):
        
        # Obtaining the type of the subscript
        int_62242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 8), 'int')
        
        # Call to regrid_smth(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'x' (line 1172)
        x_62245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 58), 'x', False)
        # Getting the type of 'y' (line 1172)
        y_62246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 61), 'y', False)
        # Getting the type of 'z' (line 1172)
        z_62247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'z', False)
        # Getting the type of 'xb' (line 1172)
        xb_62248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 67), 'xb', False)
        # Getting the type of 'xe' (line 1172)
        xe_62249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 71), 'xe', False)
        # Getting the type of 'yb' (line 1172)
        yb_62250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 75), 'yb', False)
        # Getting the type of 'ye' (line 1173)
        ye_62251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 58), 'ye', False)
        # Getting the type of 'kx' (line 1173)
        kx_62252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 62), 'kx', False)
        # Getting the type of 'ky' (line 1173)
        ky_62253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 66), 'ky', False)
        # Getting the type of 's' (line 1173)
        s_62254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 70), 's', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_62255 = {}
        # Getting the type of 'dfitpack' (line 1172)
        dfitpack_62243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth' of a type (line 1172)
        regrid_smth_62244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 37), dfitpack_62243, 'regrid_smth')
        # Calling regrid_smth(args, kwargs) (line 1172)
        regrid_smth_call_result_62256 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 37), regrid_smth_62244, *[x_62245, y_62246, z_62247, xb_62248, xe_62249, yb_62250, ye_62251, kx_62252, ky_62253, s_62254], **kwargs_62255)
        
        # Obtaining the member '__getitem__' of a type (line 1172)
        getitem___62257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 8), regrid_smth_call_result_62256, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1172)
        subscript_call_result_62258 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 8), getitem___62257, int_62242)
        
        # Assigning a type to the variable 'tuple_var_assignment_59607' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59607', subscript_call_result_62258)
        
        # Assigning a Subscript to a Name (line 1172):
        
        # Obtaining the type of the subscript
        int_62259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 8), 'int')
        
        # Call to regrid_smth(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'x' (line 1172)
        x_62262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 58), 'x', False)
        # Getting the type of 'y' (line 1172)
        y_62263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 61), 'y', False)
        # Getting the type of 'z' (line 1172)
        z_62264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'z', False)
        # Getting the type of 'xb' (line 1172)
        xb_62265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 67), 'xb', False)
        # Getting the type of 'xe' (line 1172)
        xe_62266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 71), 'xe', False)
        # Getting the type of 'yb' (line 1172)
        yb_62267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 75), 'yb', False)
        # Getting the type of 'ye' (line 1173)
        ye_62268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 58), 'ye', False)
        # Getting the type of 'kx' (line 1173)
        kx_62269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 62), 'kx', False)
        # Getting the type of 'ky' (line 1173)
        ky_62270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 66), 'ky', False)
        # Getting the type of 's' (line 1173)
        s_62271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 70), 's', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_62272 = {}
        # Getting the type of 'dfitpack' (line 1172)
        dfitpack_62260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth' of a type (line 1172)
        regrid_smth_62261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 37), dfitpack_62260, 'regrid_smth')
        # Calling regrid_smth(args, kwargs) (line 1172)
        regrid_smth_call_result_62273 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 37), regrid_smth_62261, *[x_62262, y_62263, z_62264, xb_62265, xe_62266, yb_62267, ye_62268, kx_62269, ky_62270, s_62271], **kwargs_62272)
        
        # Obtaining the member '__getitem__' of a type (line 1172)
        getitem___62274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 8), regrid_smth_call_result_62273, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1172)
        subscript_call_result_62275 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 8), getitem___62274, int_62259)
        
        # Assigning a type to the variable 'tuple_var_assignment_59608' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59608', subscript_call_result_62275)
        
        # Assigning a Subscript to a Name (line 1172):
        
        # Obtaining the type of the subscript
        int_62276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 8), 'int')
        
        # Call to regrid_smth(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'x' (line 1172)
        x_62279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 58), 'x', False)
        # Getting the type of 'y' (line 1172)
        y_62280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 61), 'y', False)
        # Getting the type of 'z' (line 1172)
        z_62281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'z', False)
        # Getting the type of 'xb' (line 1172)
        xb_62282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 67), 'xb', False)
        # Getting the type of 'xe' (line 1172)
        xe_62283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 71), 'xe', False)
        # Getting the type of 'yb' (line 1172)
        yb_62284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 75), 'yb', False)
        # Getting the type of 'ye' (line 1173)
        ye_62285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 58), 'ye', False)
        # Getting the type of 'kx' (line 1173)
        kx_62286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 62), 'kx', False)
        # Getting the type of 'ky' (line 1173)
        ky_62287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 66), 'ky', False)
        # Getting the type of 's' (line 1173)
        s_62288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 70), 's', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_62289 = {}
        # Getting the type of 'dfitpack' (line 1172)
        dfitpack_62277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth' of a type (line 1172)
        regrid_smth_62278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 37), dfitpack_62277, 'regrid_smth')
        # Calling regrid_smth(args, kwargs) (line 1172)
        regrid_smth_call_result_62290 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 37), regrid_smth_62278, *[x_62279, y_62280, z_62281, xb_62282, xe_62283, yb_62284, ye_62285, kx_62286, ky_62287, s_62288], **kwargs_62289)
        
        # Obtaining the member '__getitem__' of a type (line 1172)
        getitem___62291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 8), regrid_smth_call_result_62290, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1172)
        subscript_call_result_62292 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 8), getitem___62291, int_62276)
        
        # Assigning a type to the variable 'tuple_var_assignment_59609' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59609', subscript_call_result_62292)
        
        # Assigning a Subscript to a Name (line 1172):
        
        # Obtaining the type of the subscript
        int_62293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1172, 8), 'int')
        
        # Call to regrid_smth(...): (line 1172)
        # Processing the call arguments (line 1172)
        # Getting the type of 'x' (line 1172)
        x_62296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 58), 'x', False)
        # Getting the type of 'y' (line 1172)
        y_62297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 61), 'y', False)
        # Getting the type of 'z' (line 1172)
        z_62298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 64), 'z', False)
        # Getting the type of 'xb' (line 1172)
        xb_62299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 67), 'xb', False)
        # Getting the type of 'xe' (line 1172)
        xe_62300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 71), 'xe', False)
        # Getting the type of 'yb' (line 1172)
        yb_62301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 75), 'yb', False)
        # Getting the type of 'ye' (line 1173)
        ye_62302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 58), 'ye', False)
        # Getting the type of 'kx' (line 1173)
        kx_62303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 62), 'kx', False)
        # Getting the type of 'ky' (line 1173)
        ky_62304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 66), 'ky', False)
        # Getting the type of 's' (line 1173)
        s_62305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1173, 70), 's', False)
        # Processing the call keyword arguments (line 1172)
        kwargs_62306 = {}
        # Getting the type of 'dfitpack' (line 1172)
        dfitpack_62294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth' of a type (line 1172)
        regrid_smth_62295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 37), dfitpack_62294, 'regrid_smth')
        # Calling regrid_smth(args, kwargs) (line 1172)
        regrid_smth_call_result_62307 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 37), regrid_smth_62295, *[x_62296, y_62297, z_62298, xb_62299, xe_62300, yb_62301, ye_62302, kx_62303, ky_62304, s_62305], **kwargs_62306)
        
        # Obtaining the member '__getitem__' of a type (line 1172)
        getitem___62308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1172, 8), regrid_smth_call_result_62307, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1172)
        subscript_call_result_62309 = invoke(stypy.reporting.localization.Localization(__file__, 1172, 8), getitem___62308, int_62293)
        
        # Assigning a type to the variable 'tuple_var_assignment_59610' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59610', subscript_call_result_62309)
        
        # Assigning a Name to a Name (line 1172):
        # Getting the type of 'tuple_var_assignment_59604' (line 1172)
        tuple_var_assignment_59604_62310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59604')
        # Assigning a type to the variable 'nx' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'nx', tuple_var_assignment_59604_62310)
        
        # Assigning a Name to a Name (line 1172):
        # Getting the type of 'tuple_var_assignment_59605' (line 1172)
        tuple_var_assignment_59605_62311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59605')
        # Assigning a type to the variable 'tx' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 12), 'tx', tuple_var_assignment_59605_62311)
        
        # Assigning a Name to a Name (line 1172):
        # Getting the type of 'tuple_var_assignment_59606' (line 1172)
        tuple_var_assignment_59606_62312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59606')
        # Assigning a type to the variable 'ny' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 16), 'ny', tuple_var_assignment_59606_62312)
        
        # Assigning a Name to a Name (line 1172):
        # Getting the type of 'tuple_var_assignment_59607' (line 1172)
        tuple_var_assignment_59607_62313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59607')
        # Assigning a type to the variable 'ty' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 20), 'ty', tuple_var_assignment_59607_62313)
        
        # Assigning a Name to a Name (line 1172):
        # Getting the type of 'tuple_var_assignment_59608' (line 1172)
        tuple_var_assignment_59608_62314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59608')
        # Assigning a type to the variable 'c' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 24), 'c', tuple_var_assignment_59608_62314)
        
        # Assigning a Name to a Name (line 1172):
        # Getting the type of 'tuple_var_assignment_59609' (line 1172)
        tuple_var_assignment_59609_62315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59609')
        # Assigning a type to the variable 'fp' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 27), 'fp', tuple_var_assignment_59609_62315)
        
        # Assigning a Name to a Name (line 1172):
        # Getting the type of 'tuple_var_assignment_59610' (line 1172)
        tuple_var_assignment_59610_62316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1172, 8), 'tuple_var_assignment_59610')
        # Assigning a type to the variable 'ier' (line 1172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1172, 31), 'ier', tuple_var_assignment_59610_62316)
        
        
        # Getting the type of 'ier' (line 1175)
        ier_62317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1175, 11), 'ier')
        
        # Obtaining an instance of the builtin type 'list' (line 1175)
        list_62318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1175, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1175)
        # Adding element type (line 1175)
        int_62319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1175, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1175, 22), list_62318, int_62319)
        # Adding element type (line 1175)
        int_62320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1175, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1175, 22), list_62318, int_62320)
        # Adding element type (line 1175)
        int_62321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1175, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1175, 22), list_62318, int_62321)
        
        # Applying the binary operator 'notin' (line 1175)
        result_contains_62322 = python_operator(stypy.reporting.localization.Localization(__file__, 1175, 11), 'notin', ier_62317, list_62318)
        
        # Testing the type of an if condition (line 1175)
        if_condition_62323 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1175, 8), result_contains_62322)
        # Assigning a type to the variable 'if_condition_62323' (line 1175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1175, 8), 'if_condition_62323', if_condition_62323)
        # SSA begins for if statement (line 1175)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1176):
        
        # Assigning a Call to a Name (line 1176):
        
        # Call to get(...): (line 1176)
        # Processing the call arguments (line 1176)
        # Getting the type of 'ier' (line 1176)
        ier_62326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 39), 'ier', False)
        str_62327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1176, 44), 'str', 'ier=%s')
        # Getting the type of 'ier' (line 1176)
        ier_62328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 56), 'ier', False)
        # Applying the binary operator '%' (line 1176)
        result_mod_62329 = python_operator(stypy.reporting.localization.Localization(__file__, 1176, 44), '%', str_62327, ier_62328)
        
        # Processing the call keyword arguments (line 1176)
        kwargs_62330 = {}
        # Getting the type of '_surfit_messages' (line 1176)
        _surfit_messages_62324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1176, 18), '_surfit_messages', False)
        # Obtaining the member 'get' of a type (line 1176)
        get_62325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1176, 18), _surfit_messages_62324, 'get')
        # Calling get(args, kwargs) (line 1176)
        get_call_result_62331 = invoke(stypy.reporting.localization.Localization(__file__, 1176, 18), get_62325, *[ier_62326, result_mod_62329], **kwargs_62330)
        
        # Assigning a type to the variable 'msg' (line 1176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1176, 12), 'msg', get_call_result_62331)
        
        # Call to ValueError(...): (line 1177)
        # Processing the call arguments (line 1177)
        # Getting the type of 'msg' (line 1177)
        msg_62333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1177, 29), 'msg', False)
        # Processing the call keyword arguments (line 1177)
        kwargs_62334 = {}
        # Getting the type of 'ValueError' (line 1177)
        ValueError_62332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1177, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1177)
        ValueError_call_result_62335 = invoke(stypy.reporting.localization.Localization(__file__, 1177, 18), ValueError_62332, *[msg_62333], **kwargs_62334)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1177, 12), ValueError_call_result_62335, 'raise parameter', BaseException)
        # SSA join for if statement (line 1175)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1179):
        
        # Assigning a Name to a Attribute (line 1179):
        # Getting the type of 'fp' (line 1179)
        fp_62336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 18), 'fp')
        # Getting the type of 'self' (line 1179)
        self_62337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1179, 8), 'self')
        # Setting the type of the member 'fp' of a type (line 1179)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1179, 8), self_62337, 'fp', fp_62336)
        
        # Assigning a Tuple to a Attribute (line 1180):
        
        # Assigning a Tuple to a Attribute (line 1180):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1180)
        tuple_62338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1180, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1180)
        # Adding element type (line 1180)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nx' (line 1180)
        nx_62339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 23), 'nx')
        slice_62340 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1180, 19), None, nx_62339, None)
        # Getting the type of 'tx' (line 1180)
        tx_62341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 19), 'tx')
        # Obtaining the member '__getitem__' of a type (line 1180)
        getitem___62342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1180, 19), tx_62341, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1180)
        subscript_call_result_62343 = invoke(stypy.reporting.localization.Localization(__file__, 1180, 19), getitem___62342, slice_62340)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1180, 19), tuple_62338, subscript_call_result_62343)
        # Adding element type (line 1180)
        
        # Obtaining the type of the subscript
        # Getting the type of 'ny' (line 1180)
        ny_62344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 32), 'ny')
        slice_62345 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1180, 28), None, ny_62344, None)
        # Getting the type of 'ty' (line 1180)
        ty_62346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 28), 'ty')
        # Obtaining the member '__getitem__' of a type (line 1180)
        getitem___62347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1180, 28), ty_62346, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1180)
        subscript_call_result_62348 = invoke(stypy.reporting.localization.Localization(__file__, 1180, 28), getitem___62347, slice_62345)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1180, 19), tuple_62338, subscript_call_result_62348)
        # Adding element type (line 1180)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nx' (line 1180)
        nx_62349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 41), 'nx')
        # Getting the type of 'kx' (line 1180)
        kx_62350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 46), 'kx')
        # Applying the binary operator '-' (line 1180)
        result_sub_62351 = python_operator(stypy.reporting.localization.Localization(__file__, 1180, 41), '-', nx_62349, kx_62350)
        
        int_62352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1180, 51), 'int')
        # Applying the binary operator '-' (line 1180)
        result_sub_62353 = python_operator(stypy.reporting.localization.Localization(__file__, 1180, 49), '-', result_sub_62351, int_62352)
        
        # Getting the type of 'ny' (line 1180)
        ny_62354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 57), 'ny')
        # Getting the type of 'ky' (line 1180)
        ky_62355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 62), 'ky')
        # Applying the binary operator '-' (line 1180)
        result_sub_62356 = python_operator(stypy.reporting.localization.Localization(__file__, 1180, 57), '-', ny_62354, ky_62355)
        
        int_62357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1180, 67), 'int')
        # Applying the binary operator '-' (line 1180)
        result_sub_62358 = python_operator(stypy.reporting.localization.Localization(__file__, 1180, 65), '-', result_sub_62356, int_62357)
        
        # Applying the binary operator '*' (line 1180)
        result_mul_62359 = python_operator(stypy.reporting.localization.Localization(__file__, 1180, 40), '*', result_sub_62353, result_sub_62358)
        
        slice_62360 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1180, 37), None, result_mul_62359, None)
        # Getting the type of 'c' (line 1180)
        c_62361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 37), 'c')
        # Obtaining the member '__getitem__' of a type (line 1180)
        getitem___62362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1180, 37), c_62361, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1180)
        subscript_call_result_62363 = invoke(stypy.reporting.localization.Localization(__file__, 1180, 37), getitem___62362, slice_62360)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1180, 19), tuple_62338, subscript_call_result_62363)
        
        # Getting the type of 'self' (line 1180)
        self_62364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1180, 8), 'self')
        # Setting the type of the member 'tck' of a type (line 1180)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1180, 8), self_62364, 'tck', tuple_62338)
        
        # Assigning a Tuple to a Attribute (line 1181):
        
        # Assigning a Tuple to a Attribute (line 1181):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1181)
        tuple_62365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1181, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1181)
        # Adding element type (line 1181)
        # Getting the type of 'kx' (line 1181)
        kx_62366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 23), 'kx')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 23), tuple_62365, kx_62366)
        # Adding element type (line 1181)
        # Getting the type of 'ky' (line 1181)
        ky_62367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 27), 'ky')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1181, 23), tuple_62365, ky_62367)
        
        # Getting the type of 'self' (line 1181)
        self_62368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1181, 8), 'self')
        # Setting the type of the member 'degrees' of a type (line 1181)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1181, 8), self_62368, 'degrees', tuple_62365)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'RectBivariateSpline' (line 1122)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1122, 0), 'RectBivariateSpline', RectBivariateSpline)

# Assigning a Call to a Name (line 1184):

# Assigning a Call to a Name (line 1184):

# Call to copy(...): (line 1184)
# Processing the call keyword arguments (line 1184)
kwargs_62371 = {}
# Getting the type of '_surfit_messages' (line 1184)
_surfit_messages_62369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1184, 22), '_surfit_messages', False)
# Obtaining the member 'copy' of a type (line 1184)
copy_62370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1184, 22), _surfit_messages_62369, 'copy')
# Calling copy(args, kwargs) (line 1184)
copy_call_result_62372 = invoke(stypy.reporting.localization.Localization(__file__, 1184, 22), copy_62370, *[], **kwargs_62371)

# Assigning a type to the variable '_spherefit_messages' (line 1184)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1184, 0), '_spherefit_messages', copy_call_result_62372)

# Assigning a Str to a Subscript (line 1185):

# Assigning a Str to a Subscript (line 1185):
str_62373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1198, (-1)), 'str', '\nERROR. On entry, the input data are controlled on validity. The following\n       restrictions must be satisfied:\n            -1<=iopt<=1,  m>=2, ntest>=8 ,npest >=8, 0<eps<1,\n            0<=teta(i)<=pi, 0<=phi(i)<=2*pi, w(i)>0, i=1,...,m\n            lwrk1 >= 185+52*v+10*u+14*u*v+8*(u-1)*v**2+8*m\n            kwrk >= m+(ntest-7)*(npest-7)\n            if iopt=-1: 8<=nt<=ntest , 9<=np<=npest\n                        0<tt(5)<tt(6)<...<tt(nt-4)<pi\n                        0<tp(5)<tp(6)<...<tp(np-4)<2*pi\n            if iopt>=0: s>=0\n            if one of these conditions is found to be violated,control\n            is immediately repassed to the calling program. in that\n            case there is no approximation returned.')
# Getting the type of '_spherefit_messages' (line 1185)
_spherefit_messages_62374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1185, 0), '_spherefit_messages')
int_62375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1185, 20), 'int')
# Storing an element on a container (line 1185)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1185, 0), _spherefit_messages_62374, (int_62375, str_62373))

# Assigning a Str to a Subscript (line 1199):

# Assigning a Str to a Subscript (line 1199):
str_62376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1205, (-1)), 'str', '\nWARNING. The coefficients of the spline returned have been computed as the\n         minimal norm least-squares solution of a (numerically) rank\n         deficient system (deficiency=%i, rank=%i). Especially if the rank\n         deficiency, which is computed by 6+(nt-8)*(np-7)+ier, is large,\n         the results may be inaccurate. They could also seriously depend on\n         the value of eps.')
# Getting the type of '_spherefit_messages' (line 1199)
_spherefit_messages_62377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1199, 0), '_spherefit_messages')
int_62378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1199, 20), 'int')
# Storing an element on a container (line 1199)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1199, 0), _spherefit_messages_62377, (int_62378, str_62376))
# Declaration of the 'SphereBivariateSpline' class
# Getting the type of '_BivariateSplineBase' (line 1208)
_BivariateSplineBase_62379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1208, 28), '_BivariateSplineBase')

class SphereBivariateSpline(_BivariateSplineBase_62379, ):
    str_62380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1223, (-1)), 'str', '\n    Bivariate spline s(x,y) of degrees 3 on a sphere, calculated from a\n    given set of data points (theta,phi,r).\n\n    .. versionadded:: 0.11.0\n\n    See Also\n    --------\n    bisplrep, bisplev : an older wrapping of FITPACK\n    UnivariateSpline : a similar class for univariate spline interpolation\n    SmoothUnivariateSpline :\n        to create a BivariateSpline through the given points\n    LSQUnivariateSpline :\n        to create a BivariateSpline using weighted least-squares fitting\n    ')

    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_62381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 42), 'int')
        int_62382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1225, 50), 'int')
        # Getting the type of 'True' (line 1225)
        True_62383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 58), 'True')
        defaults = [int_62381, int_62382, True_62383]
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 1225, 4, False)
        # Assigning a type to the variable 'self' (line 1226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1226, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_localization', localization)
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_function_name', 'SphereBivariateSpline.__call__')
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_param_names_list', ['theta', 'phi', 'dtheta', 'dphi', 'grid'])
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        SphereBivariateSpline.__call__.__dict__.__setitem__('stypy_declared_arg_number', 6)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SphereBivariateSpline.__call__', ['theta', 'phi', 'dtheta', 'dphi', 'grid'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, ['theta', 'phi', 'dtheta', 'dphi', 'grid'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        str_62384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1255, (-1)), 'str', '\n        Evaluate the spline or its derivatives at given positions.\n\n        Parameters\n        ----------\n        theta, phi : array_like\n            Input coordinates.\n\n            If `grid` is False, evaluate the spline at points\n            ``(theta[i], phi[i]), i=0, ..., len(x)-1``.  Standard\n            Numpy broadcasting is obeyed.\n\n            If `grid` is True: evaluate spline at the grid points\n            defined by the coordinate arrays theta, phi. The arrays\n            must be sorted to increasing order.\n        dtheta : int, optional\n            Order of theta-derivative\n\n            .. versionadded:: 0.14.0\n        dphi : int\n            Order of phi-derivative\n\n            .. versionadded:: 0.14.0\n        grid : bool\n            Whether to evaluate the results on a grid spanned by the\n            input arrays, or at points specified by the input arrays.\n\n            .. versionadded:: 0.14.0\n\n        ')
        
        # Assigning a Call to a Name (line 1256):
        
        # Assigning a Call to a Name (line 1256):
        
        # Call to asarray(...): (line 1256)
        # Processing the call arguments (line 1256)
        # Getting the type of 'theta' (line 1256)
        theta_62387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 27), 'theta', False)
        # Processing the call keyword arguments (line 1256)
        kwargs_62388 = {}
        # Getting the type of 'np' (line 1256)
        np_62385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1256, 16), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1256)
        asarray_62386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1256, 16), np_62385, 'asarray')
        # Calling asarray(args, kwargs) (line 1256)
        asarray_call_result_62389 = invoke(stypy.reporting.localization.Localization(__file__, 1256, 16), asarray_62386, *[theta_62387], **kwargs_62388)
        
        # Assigning a type to the variable 'theta' (line 1256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1256, 8), 'theta', asarray_call_result_62389)
        
        # Assigning a Call to a Name (line 1257):
        
        # Assigning a Call to a Name (line 1257):
        
        # Call to asarray(...): (line 1257)
        # Processing the call arguments (line 1257)
        # Getting the type of 'phi' (line 1257)
        phi_62392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 25), 'phi', False)
        # Processing the call keyword arguments (line 1257)
        kwargs_62393 = {}
        # Getting the type of 'np' (line 1257)
        np_62390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1257, 14), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1257)
        asarray_62391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1257, 14), np_62390, 'asarray')
        # Calling asarray(args, kwargs) (line 1257)
        asarray_call_result_62394 = invoke(stypy.reporting.localization.Localization(__file__, 1257, 14), asarray_62391, *[phi_62392], **kwargs_62393)
        
        # Assigning a type to the variable 'phi' (line 1257)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1257, 8), 'phi', asarray_call_result_62394)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'theta' (line 1259)
        theta_62395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 11), 'theta')
        # Obtaining the member 'size' of a type (line 1259)
        size_62396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1259, 11), theta_62395, 'size')
        int_62397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1259, 24), 'int')
        # Applying the binary operator '>' (line 1259)
        result_gt_62398 = python_operator(stypy.reporting.localization.Localization(__file__, 1259, 11), '>', size_62396, int_62397)
        
        
        # Evaluating a boolean operation
        
        
        # Call to min(...): (line 1259)
        # Processing the call keyword arguments (line 1259)
        kwargs_62401 = {}
        # Getting the type of 'theta' (line 1259)
        theta_62399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 31), 'theta', False)
        # Obtaining the member 'min' of a type (line 1259)
        min_62400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1259, 31), theta_62399, 'min')
        # Calling min(args, kwargs) (line 1259)
        min_call_result_62402 = invoke(stypy.reporting.localization.Localization(__file__, 1259, 31), min_62400, *[], **kwargs_62401)
        
        float_62403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1259, 45), 'float')
        # Applying the binary operator '<' (line 1259)
        result_lt_62404 = python_operator(stypy.reporting.localization.Localization(__file__, 1259, 31), '<', min_call_result_62402, float_62403)
        
        
        
        # Call to max(...): (line 1259)
        # Processing the call keyword arguments (line 1259)
        kwargs_62407 = {}
        # Getting the type of 'theta' (line 1259)
        theta_62405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 51), 'theta', False)
        # Obtaining the member 'max' of a type (line 1259)
        max_62406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1259, 51), theta_62405, 'max')
        # Calling max(args, kwargs) (line 1259)
        max_call_result_62408 = invoke(stypy.reporting.localization.Localization(__file__, 1259, 51), max_62406, *[], **kwargs_62407)
        
        # Getting the type of 'np' (line 1259)
        np_62409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1259, 65), 'np')
        # Obtaining the member 'pi' of a type (line 1259)
        pi_62410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1259, 65), np_62409, 'pi')
        # Applying the binary operator '>' (line 1259)
        result_gt_62411 = python_operator(stypy.reporting.localization.Localization(__file__, 1259, 51), '>', max_call_result_62408, pi_62410)
        
        # Applying the binary operator 'or' (line 1259)
        result_or_keyword_62412 = python_operator(stypy.reporting.localization.Localization(__file__, 1259, 31), 'or', result_lt_62404, result_gt_62411)
        
        # Applying the binary operator 'and' (line 1259)
        result_and_keyword_62413 = python_operator(stypy.reporting.localization.Localization(__file__, 1259, 11), 'and', result_gt_62398, result_or_keyword_62412)
        
        # Testing the type of an if condition (line 1259)
        if_condition_62414 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1259, 8), result_and_keyword_62413)
        # Assigning a type to the variable 'if_condition_62414' (line 1259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1259, 8), 'if_condition_62414', if_condition_62414)
        # SSA begins for if statement (line 1259)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1260)
        # Processing the call arguments (line 1260)
        str_62416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1260, 29), 'str', 'requested theta out of bounds.')
        # Processing the call keyword arguments (line 1260)
        kwargs_62417 = {}
        # Getting the type of 'ValueError' (line 1260)
        ValueError_62415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1260, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1260)
        ValueError_call_result_62418 = invoke(stypy.reporting.localization.Localization(__file__, 1260, 18), ValueError_62415, *[str_62416], **kwargs_62417)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1260, 12), ValueError_call_result_62418, 'raise parameter', BaseException)
        # SSA join for if statement (line 1259)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'phi' (line 1261)
        phi_62419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 11), 'phi')
        # Obtaining the member 'size' of a type (line 1261)
        size_62420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1261, 11), phi_62419, 'size')
        int_62421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 22), 'int')
        # Applying the binary operator '>' (line 1261)
        result_gt_62422 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 11), '>', size_62420, int_62421)
        
        
        # Evaluating a boolean operation
        
        
        # Call to min(...): (line 1261)
        # Processing the call keyword arguments (line 1261)
        kwargs_62425 = {}
        # Getting the type of 'phi' (line 1261)
        phi_62423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 29), 'phi', False)
        # Obtaining the member 'min' of a type (line 1261)
        min_62424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1261, 29), phi_62423, 'min')
        # Calling min(args, kwargs) (line 1261)
        min_call_result_62426 = invoke(stypy.reporting.localization.Localization(__file__, 1261, 29), min_62424, *[], **kwargs_62425)
        
        float_62427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 41), 'float')
        # Applying the binary operator '<' (line 1261)
        result_lt_62428 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 29), '<', min_call_result_62426, float_62427)
        
        
        
        # Call to max(...): (line 1261)
        # Processing the call keyword arguments (line 1261)
        kwargs_62431 = {}
        # Getting the type of 'phi' (line 1261)
        phi_62429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 47), 'phi', False)
        # Obtaining the member 'max' of a type (line 1261)
        max_62430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1261, 47), phi_62429, 'max')
        # Calling max(args, kwargs) (line 1261)
        max_call_result_62432 = invoke(stypy.reporting.localization.Localization(__file__, 1261, 47), max_62430, *[], **kwargs_62431)
        
        float_62433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1261, 59), 'float')
        # Getting the type of 'np' (line 1261)
        np_62434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1261, 64), 'np')
        # Obtaining the member 'pi' of a type (line 1261)
        pi_62435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1261, 64), np_62434, 'pi')
        # Applying the binary operator '*' (line 1261)
        result_mul_62436 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 59), '*', float_62433, pi_62435)
        
        # Applying the binary operator '>' (line 1261)
        result_gt_62437 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 47), '>', max_call_result_62432, result_mul_62436)
        
        # Applying the binary operator 'or' (line 1261)
        result_or_keyword_62438 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 29), 'or', result_lt_62428, result_gt_62437)
        
        # Applying the binary operator 'and' (line 1261)
        result_and_keyword_62439 = python_operator(stypy.reporting.localization.Localization(__file__, 1261, 11), 'and', result_gt_62422, result_or_keyword_62438)
        
        # Testing the type of an if condition (line 1261)
        if_condition_62440 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1261, 8), result_and_keyword_62439)
        # Assigning a type to the variable 'if_condition_62440' (line 1261)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1261, 8), 'if_condition_62440', if_condition_62440)
        # SSA begins for if statement (line 1261)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1262)
        # Processing the call arguments (line 1262)
        str_62442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1262, 29), 'str', 'requested phi out of bounds.')
        # Processing the call keyword arguments (line 1262)
        kwargs_62443 = {}
        # Getting the type of 'ValueError' (line 1262)
        ValueError_62441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1262, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1262)
        ValueError_call_result_62444 = invoke(stypy.reporting.localization.Localization(__file__, 1262, 18), ValueError_62441, *[str_62442], **kwargs_62443)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1262, 12), ValueError_call_result_62444, 'raise parameter', BaseException)
        # SSA join for if statement (line 1261)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to __call__(...): (line 1264)
        # Processing the call arguments (line 1264)
        # Getting the type of 'self' (line 1264)
        self_62447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 45), 'self', False)
        # Getting the type of 'theta' (line 1264)
        theta_62448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 51), 'theta', False)
        # Getting the type of 'phi' (line 1264)
        phi_62449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 58), 'phi', False)
        # Processing the call keyword arguments (line 1264)
        # Getting the type of 'dtheta' (line 1265)
        dtheta_62450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 48), 'dtheta', False)
        keyword_62451 = dtheta_62450
        # Getting the type of 'dphi' (line 1265)
        dphi_62452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 59), 'dphi', False)
        keyword_62453 = dphi_62452
        # Getting the type of 'grid' (line 1265)
        grid_62454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1265, 70), 'grid', False)
        keyword_62455 = grid_62454
        kwargs_62456 = {'grid': keyword_62455, 'dx': keyword_62451, 'dy': keyword_62453}
        # Getting the type of '_BivariateSplineBase' (line 1264)
        _BivariateSplineBase_62445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1264, 15), '_BivariateSplineBase', False)
        # Obtaining the member '__call__' of a type (line 1264)
        call___62446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1264, 15), _BivariateSplineBase_62445, '__call__')
        # Calling __call__(args, kwargs) (line 1264)
        call___call_result_62457 = invoke(stypy.reporting.localization.Localization(__file__, 1264, 15), call___62446, *[self_62447, theta_62448, phi_62449], **kwargs_62456)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1264, 8), 'stypy_return_type', call___call_result_62457)
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 1225)
        stypy_return_type_62458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1225, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_62458)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_62458


    @norecursion
    def ev(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_62459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 36), 'int')
        int_62460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 44), 'int')
        defaults = [int_62459, int_62460]
        # Create a new context for function 'ev'
        module_type_store = module_type_store.open_function_context('ev', 1267, 4, False)
        # Assigning a type to the variable 'self' (line 1268)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1268, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_localization', localization)
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_type_store', module_type_store)
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_function_name', 'SphereBivariateSpline.ev')
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_param_names_list', ['theta', 'phi', 'dtheta', 'dphi'])
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_varargs_param_name', None)
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_kwargs_param_name', None)
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_call_defaults', defaults)
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_call_varargs', varargs)
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        SphereBivariateSpline.ev.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SphereBivariateSpline.ev', ['theta', 'phi', 'dtheta', 'dphi'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'ev', localization, ['theta', 'phi', 'dtheta', 'dphi'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'ev(...)' code ##################

        str_62461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1286, (-1)), 'str', '\n        Evaluate the spline at points\n\n        Returns the interpolated value at ``(theta[i], phi[i]),\n        i=0,...,len(theta)-1``.\n\n        Parameters\n        ----------\n        theta, phi : array_like\n            Input coordinates. Standard Numpy broadcasting is obeyed.\n        dtheta : int, optional\n            Order of theta-derivative\n\n            .. versionadded:: 0.14.0\n        dphi : int, optional\n            Order of phi-derivative\n\n            .. versionadded:: 0.14.0\n        ')
        
        # Call to __call__(...): (line 1287)
        # Processing the call arguments (line 1287)
        # Getting the type of 'theta' (line 1287)
        theta_62464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 29), 'theta', False)
        # Getting the type of 'phi' (line 1287)
        phi_62465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 36), 'phi', False)
        # Processing the call keyword arguments (line 1287)
        # Getting the type of 'dtheta' (line 1287)
        dtheta_62466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 48), 'dtheta', False)
        keyword_62467 = dtheta_62466
        # Getting the type of 'dphi' (line 1287)
        dphi_62468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 61), 'dphi', False)
        keyword_62469 = dphi_62468
        # Getting the type of 'False' (line 1287)
        False_62470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 72), 'False', False)
        keyword_62471 = False_62470
        kwargs_62472 = {'dphi': keyword_62469, 'grid': keyword_62471, 'dtheta': keyword_62467}
        # Getting the type of 'self' (line 1287)
        self_62462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1287, 15), 'self', False)
        # Obtaining the member '__call__' of a type (line 1287)
        call___62463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1287, 15), self_62462, '__call__')
        # Calling __call__(args, kwargs) (line 1287)
        call___call_result_62473 = invoke(stypy.reporting.localization.Localization(__file__, 1287, 15), call___62463, *[theta_62464, phi_62465], **kwargs_62472)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1287, 8), 'stypy_return_type', call___call_result_62473)
        
        # ################# End of 'ev(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'ev' in the type store
        # Getting the type of 'stypy_return_type' (line 1267)
        stypy_return_type_62474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_62474)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'ev'
        return stypy_return_type_62474


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1208, 0, False)
        # Assigning a type to the variable 'self' (line 1209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1209, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SphereBivariateSpline.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'SphereBivariateSpline' (line 1208)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1208, 0), 'SphereBivariateSpline', SphereBivariateSpline)
# Declaration of the 'SmoothSphereBivariateSpline' class
# Getting the type of 'SphereBivariateSpline' (line 1290)
SphereBivariateSpline_62475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1290, 34), 'SphereBivariateSpline')

class SmoothSphereBivariateSpline(SphereBivariateSpline_62475, ):
    str_62476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1365, (-1)), 'str', "\n    Smooth bivariate spline approximation in spherical coordinates.\n\n    .. versionadded:: 0.11.0\n\n    Parameters\n    ----------\n    theta, phi, r : array_like\n        1-D sequences of data points (order is not important). Coordinates\n        must be given in radians. Theta must lie within the interval (0, pi),\n        and phi must lie within the interval (0, 2pi).\n    w : array_like, optional\n        Positive 1-D sequence of weights.\n    s : float, optional\n        Positive smoothing factor defined for estimation condition:\n        ``sum((w(i)*(r(i) - s(theta(i), phi(i))))**2, axis=0) <= s``\n        Default ``s=len(w)`` which should be a good value if 1/w[i] is an\n        estimate of the standard deviation of r[i].\n    eps : float, optional\n        A threshold for determining the effective rank of an over-determined\n        linear system of equations. `eps` should have a value between 0 and 1,\n        the default is 1e-16.\n\n    Notes\n    -----\n    For more information, see the FITPACK_ site about this function.\n\n    .. _FITPACK: http://www.netlib.org/dierckx/sphere.f\n\n    Examples\n    --------\n    Suppose we have global data on a coarse grid (the input data does not\n    have to be on a grid):\n\n    >>> theta = np.linspace(0., np.pi, 7)\n    >>> phi = np.linspace(0., 2*np.pi, 9)\n    >>> data = np.empty((theta.shape[0], phi.shape[0]))\n    >>> data[:,0], data[0,:], data[-1,:] = 0., 0., 0.\n    >>> data[1:-1,1], data[1:-1,-1] = 1., 1.\n    >>> data[1,1:-1], data[-2,1:-1] = 1., 1.\n    >>> data[2:-2,2], data[2:-2,-2] = 2., 2.\n    >>> data[2,2:-2], data[-3,2:-2] = 2., 2.\n    >>> data[3,3:-2] = 3.\n    >>> data = np.roll(data, 4, 1)\n\n    We need to set up the interpolator object\n\n    >>> lats, lons = np.meshgrid(theta, phi)\n    >>> from scipy.interpolate import SmoothSphereBivariateSpline\n    >>> lut = SmoothSphereBivariateSpline(lats.ravel(), lons.ravel(),\n    ...                                   data.T.ravel(), s=3.5)\n\n    As a first test, we'll see what the algorithm returns when run on the\n    input coordinates\n\n    >>> data_orig = lut(theta, phi)\n\n    Finally we interpolate the data to a finer grid\n\n    >>> fine_lats = np.linspace(0., np.pi, 70)\n    >>> fine_lons = np.linspace(0., 2 * np.pi, 90)\n\n    >>> data_smth = lut(fine_lats, fine_lons)\n\n    >>> import matplotlib.pyplot as plt\n    >>> fig = plt.figure()\n    >>> ax1 = fig.add_subplot(131)\n    >>> ax1.imshow(data, interpolation='nearest')\n    >>> ax2 = fig.add_subplot(132)\n    >>> ax2.imshow(data_orig, interpolation='nearest')\n    >>> ax3 = fig.add_subplot(133)\n    >>> ax3.imshow(data_smth, interpolation='nearest')\n    >>> plt.show()\n\n    ")

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1367)
        None_62477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1367, 40), 'None')
        float_62478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 48), 'float')
        float_62479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1367, 56), 'float')
        defaults = [None_62477, float_62478, float_62479]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1367, 4, False)
        # Assigning a type to the variable 'self' (line 1368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1368, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'SmoothSphereBivariateSpline.__init__', ['theta', 'phi', 'r', 'w', 's', 'eps'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['theta', 'phi', 'r', 'w', 's', 'eps'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Call to issubclass_(...): (line 1368)
        # Processing the call arguments (line 1368)
        # Getting the type of 'w' (line 1368)
        w_62482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 26), 'w', False)
        # Getting the type of 'float' (line 1368)
        float_62483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 29), 'float', False)
        # Processing the call keyword arguments (line 1368)
        kwargs_62484 = {}
        # Getting the type of 'np' (line 1368)
        np_62480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1368, 11), 'np', False)
        # Obtaining the member 'issubclass_' of a type (line 1368)
        issubclass__62481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1368, 11), np_62480, 'issubclass_')
        # Calling issubclass_(args, kwargs) (line 1368)
        issubclass__call_result_62485 = invoke(stypy.reporting.localization.Localization(__file__, 1368, 11), issubclass__62481, *[w_62482, float_62483], **kwargs_62484)
        
        # Testing the type of an if condition (line 1368)
        if_condition_62486 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1368, 8), issubclass__call_result_62485)
        # Assigning a type to the variable 'if_condition_62486' (line 1368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1368, 8), 'if_condition_62486', if_condition_62486)
        # SSA begins for if statement (line 1368)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 1369):
        
        # Assigning a BinOp to a Name (line 1369):
        
        # Call to ones(...): (line 1369)
        # Processing the call arguments (line 1369)
        
        # Call to len(...): (line 1369)
        # Processing the call arguments (line 1369)
        # Getting the type of 'theta' (line 1369)
        theta_62489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 25), 'theta', False)
        # Processing the call keyword arguments (line 1369)
        kwargs_62490 = {}
        # Getting the type of 'len' (line 1369)
        len_62488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 21), 'len', False)
        # Calling len(args, kwargs) (line 1369)
        len_call_result_62491 = invoke(stypy.reporting.localization.Localization(__file__, 1369, 21), len_62488, *[theta_62489], **kwargs_62490)
        
        # Processing the call keyword arguments (line 1369)
        kwargs_62492 = {}
        # Getting the type of 'ones' (line 1369)
        ones_62487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 16), 'ones', False)
        # Calling ones(args, kwargs) (line 1369)
        ones_call_result_62493 = invoke(stypy.reporting.localization.Localization(__file__, 1369, 16), ones_62487, *[len_call_result_62491], **kwargs_62492)
        
        # Getting the type of 'w' (line 1369)
        w_62494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1369, 35), 'w')
        # Applying the binary operator '*' (line 1369)
        result_mul_62495 = python_operator(stypy.reporting.localization.Localization(__file__, 1369, 16), '*', ones_call_result_62493, w_62494)
        
        # Assigning a type to the variable 'w' (line 1369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1369, 12), 'w', result_mul_62495)
        # SSA join for if statement (line 1368)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 1370):
        
        # Assigning a Subscript to a Name (line 1370):
        
        # Obtaining the type of the subscript
        int_62496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 8), 'int')
        
        # Call to spherfit_smth(...): (line 1370)
        # Processing the call arguments (line 1370)
        # Getting the type of 'theta' (line 1370)
        theta_62499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 64), 'theta', False)
        # Getting the type of 'phi' (line 1370)
        phi_62500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 71), 'phi', False)
        # Getting the type of 'r' (line 1371)
        r_62501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 64), 'r', False)
        # Processing the call keyword arguments (line 1370)
        # Getting the type of 'w' (line 1371)
        w_62502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 69), 'w', False)
        keyword_62503 = w_62502
        # Getting the type of 's' (line 1371)
        s_62504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 74), 's', False)
        keyword_62505 = s_62504
        # Getting the type of 'eps' (line 1372)
        eps_62506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 68), 'eps', False)
        keyword_62507 = eps_62506
        kwargs_62508 = {'s': keyword_62505, 'eps': keyword_62507, 'w': keyword_62503}
        # Getting the type of 'dfitpack' (line 1370)
        dfitpack_62497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 41), 'dfitpack', False)
        # Obtaining the member 'spherfit_smth' of a type (line 1370)
        spherfit_smth_62498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 41), dfitpack_62497, 'spherfit_smth')
        # Calling spherfit_smth(args, kwargs) (line 1370)
        spherfit_smth_call_result_62509 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 41), spherfit_smth_62498, *[theta_62499, phi_62500, r_62501], **kwargs_62508)
        
        # Obtaining the member '__getitem__' of a type (line 1370)
        getitem___62510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 8), spherfit_smth_call_result_62509, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1370)
        subscript_call_result_62511 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 8), getitem___62510, int_62496)
        
        # Assigning a type to the variable 'tuple_var_assignment_59611' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59611', subscript_call_result_62511)
        
        # Assigning a Subscript to a Name (line 1370):
        
        # Obtaining the type of the subscript
        int_62512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 8), 'int')
        
        # Call to spherfit_smth(...): (line 1370)
        # Processing the call arguments (line 1370)
        # Getting the type of 'theta' (line 1370)
        theta_62515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 64), 'theta', False)
        # Getting the type of 'phi' (line 1370)
        phi_62516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 71), 'phi', False)
        # Getting the type of 'r' (line 1371)
        r_62517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 64), 'r', False)
        # Processing the call keyword arguments (line 1370)
        # Getting the type of 'w' (line 1371)
        w_62518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 69), 'w', False)
        keyword_62519 = w_62518
        # Getting the type of 's' (line 1371)
        s_62520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 74), 's', False)
        keyword_62521 = s_62520
        # Getting the type of 'eps' (line 1372)
        eps_62522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 68), 'eps', False)
        keyword_62523 = eps_62522
        kwargs_62524 = {'s': keyword_62521, 'eps': keyword_62523, 'w': keyword_62519}
        # Getting the type of 'dfitpack' (line 1370)
        dfitpack_62513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 41), 'dfitpack', False)
        # Obtaining the member 'spherfit_smth' of a type (line 1370)
        spherfit_smth_62514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 41), dfitpack_62513, 'spherfit_smth')
        # Calling spherfit_smth(args, kwargs) (line 1370)
        spherfit_smth_call_result_62525 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 41), spherfit_smth_62514, *[theta_62515, phi_62516, r_62517], **kwargs_62524)
        
        # Obtaining the member '__getitem__' of a type (line 1370)
        getitem___62526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 8), spherfit_smth_call_result_62525, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1370)
        subscript_call_result_62527 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 8), getitem___62526, int_62512)
        
        # Assigning a type to the variable 'tuple_var_assignment_59612' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59612', subscript_call_result_62527)
        
        # Assigning a Subscript to a Name (line 1370):
        
        # Obtaining the type of the subscript
        int_62528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 8), 'int')
        
        # Call to spherfit_smth(...): (line 1370)
        # Processing the call arguments (line 1370)
        # Getting the type of 'theta' (line 1370)
        theta_62531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 64), 'theta', False)
        # Getting the type of 'phi' (line 1370)
        phi_62532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 71), 'phi', False)
        # Getting the type of 'r' (line 1371)
        r_62533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 64), 'r', False)
        # Processing the call keyword arguments (line 1370)
        # Getting the type of 'w' (line 1371)
        w_62534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 69), 'w', False)
        keyword_62535 = w_62534
        # Getting the type of 's' (line 1371)
        s_62536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 74), 's', False)
        keyword_62537 = s_62536
        # Getting the type of 'eps' (line 1372)
        eps_62538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 68), 'eps', False)
        keyword_62539 = eps_62538
        kwargs_62540 = {'s': keyword_62537, 'eps': keyword_62539, 'w': keyword_62535}
        # Getting the type of 'dfitpack' (line 1370)
        dfitpack_62529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 41), 'dfitpack', False)
        # Obtaining the member 'spherfit_smth' of a type (line 1370)
        spherfit_smth_62530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 41), dfitpack_62529, 'spherfit_smth')
        # Calling spherfit_smth(args, kwargs) (line 1370)
        spherfit_smth_call_result_62541 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 41), spherfit_smth_62530, *[theta_62531, phi_62532, r_62533], **kwargs_62540)
        
        # Obtaining the member '__getitem__' of a type (line 1370)
        getitem___62542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 8), spherfit_smth_call_result_62541, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1370)
        subscript_call_result_62543 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 8), getitem___62542, int_62528)
        
        # Assigning a type to the variable 'tuple_var_assignment_59613' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59613', subscript_call_result_62543)
        
        # Assigning a Subscript to a Name (line 1370):
        
        # Obtaining the type of the subscript
        int_62544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 8), 'int')
        
        # Call to spherfit_smth(...): (line 1370)
        # Processing the call arguments (line 1370)
        # Getting the type of 'theta' (line 1370)
        theta_62547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 64), 'theta', False)
        # Getting the type of 'phi' (line 1370)
        phi_62548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 71), 'phi', False)
        # Getting the type of 'r' (line 1371)
        r_62549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 64), 'r', False)
        # Processing the call keyword arguments (line 1370)
        # Getting the type of 'w' (line 1371)
        w_62550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 69), 'w', False)
        keyword_62551 = w_62550
        # Getting the type of 's' (line 1371)
        s_62552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 74), 's', False)
        keyword_62553 = s_62552
        # Getting the type of 'eps' (line 1372)
        eps_62554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 68), 'eps', False)
        keyword_62555 = eps_62554
        kwargs_62556 = {'s': keyword_62553, 'eps': keyword_62555, 'w': keyword_62551}
        # Getting the type of 'dfitpack' (line 1370)
        dfitpack_62545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 41), 'dfitpack', False)
        # Obtaining the member 'spherfit_smth' of a type (line 1370)
        spherfit_smth_62546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 41), dfitpack_62545, 'spherfit_smth')
        # Calling spherfit_smth(args, kwargs) (line 1370)
        spherfit_smth_call_result_62557 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 41), spherfit_smth_62546, *[theta_62547, phi_62548, r_62549], **kwargs_62556)
        
        # Obtaining the member '__getitem__' of a type (line 1370)
        getitem___62558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 8), spherfit_smth_call_result_62557, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1370)
        subscript_call_result_62559 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 8), getitem___62558, int_62544)
        
        # Assigning a type to the variable 'tuple_var_assignment_59614' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59614', subscript_call_result_62559)
        
        # Assigning a Subscript to a Name (line 1370):
        
        # Obtaining the type of the subscript
        int_62560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 8), 'int')
        
        # Call to spherfit_smth(...): (line 1370)
        # Processing the call arguments (line 1370)
        # Getting the type of 'theta' (line 1370)
        theta_62563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 64), 'theta', False)
        # Getting the type of 'phi' (line 1370)
        phi_62564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 71), 'phi', False)
        # Getting the type of 'r' (line 1371)
        r_62565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 64), 'r', False)
        # Processing the call keyword arguments (line 1370)
        # Getting the type of 'w' (line 1371)
        w_62566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 69), 'w', False)
        keyword_62567 = w_62566
        # Getting the type of 's' (line 1371)
        s_62568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 74), 's', False)
        keyword_62569 = s_62568
        # Getting the type of 'eps' (line 1372)
        eps_62570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 68), 'eps', False)
        keyword_62571 = eps_62570
        kwargs_62572 = {'s': keyword_62569, 'eps': keyword_62571, 'w': keyword_62567}
        # Getting the type of 'dfitpack' (line 1370)
        dfitpack_62561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 41), 'dfitpack', False)
        # Obtaining the member 'spherfit_smth' of a type (line 1370)
        spherfit_smth_62562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 41), dfitpack_62561, 'spherfit_smth')
        # Calling spherfit_smth(args, kwargs) (line 1370)
        spherfit_smth_call_result_62573 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 41), spherfit_smth_62562, *[theta_62563, phi_62564, r_62565], **kwargs_62572)
        
        # Obtaining the member '__getitem__' of a type (line 1370)
        getitem___62574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 8), spherfit_smth_call_result_62573, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1370)
        subscript_call_result_62575 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 8), getitem___62574, int_62560)
        
        # Assigning a type to the variable 'tuple_var_assignment_59615' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59615', subscript_call_result_62575)
        
        # Assigning a Subscript to a Name (line 1370):
        
        # Obtaining the type of the subscript
        int_62576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 8), 'int')
        
        # Call to spherfit_smth(...): (line 1370)
        # Processing the call arguments (line 1370)
        # Getting the type of 'theta' (line 1370)
        theta_62579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 64), 'theta', False)
        # Getting the type of 'phi' (line 1370)
        phi_62580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 71), 'phi', False)
        # Getting the type of 'r' (line 1371)
        r_62581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 64), 'r', False)
        # Processing the call keyword arguments (line 1370)
        # Getting the type of 'w' (line 1371)
        w_62582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 69), 'w', False)
        keyword_62583 = w_62582
        # Getting the type of 's' (line 1371)
        s_62584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 74), 's', False)
        keyword_62585 = s_62584
        # Getting the type of 'eps' (line 1372)
        eps_62586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 68), 'eps', False)
        keyword_62587 = eps_62586
        kwargs_62588 = {'s': keyword_62585, 'eps': keyword_62587, 'w': keyword_62583}
        # Getting the type of 'dfitpack' (line 1370)
        dfitpack_62577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 41), 'dfitpack', False)
        # Obtaining the member 'spherfit_smth' of a type (line 1370)
        spherfit_smth_62578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 41), dfitpack_62577, 'spherfit_smth')
        # Calling spherfit_smth(args, kwargs) (line 1370)
        spherfit_smth_call_result_62589 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 41), spherfit_smth_62578, *[theta_62579, phi_62580, r_62581], **kwargs_62588)
        
        # Obtaining the member '__getitem__' of a type (line 1370)
        getitem___62590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 8), spherfit_smth_call_result_62589, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1370)
        subscript_call_result_62591 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 8), getitem___62590, int_62576)
        
        # Assigning a type to the variable 'tuple_var_assignment_59616' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59616', subscript_call_result_62591)
        
        # Assigning a Subscript to a Name (line 1370):
        
        # Obtaining the type of the subscript
        int_62592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1370, 8), 'int')
        
        # Call to spherfit_smth(...): (line 1370)
        # Processing the call arguments (line 1370)
        # Getting the type of 'theta' (line 1370)
        theta_62595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 64), 'theta', False)
        # Getting the type of 'phi' (line 1370)
        phi_62596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 71), 'phi', False)
        # Getting the type of 'r' (line 1371)
        r_62597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 64), 'r', False)
        # Processing the call keyword arguments (line 1370)
        # Getting the type of 'w' (line 1371)
        w_62598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 69), 'w', False)
        keyword_62599 = w_62598
        # Getting the type of 's' (line 1371)
        s_62600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1371, 74), 's', False)
        keyword_62601 = s_62600
        # Getting the type of 'eps' (line 1372)
        eps_62602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1372, 68), 'eps', False)
        keyword_62603 = eps_62602
        kwargs_62604 = {'s': keyword_62601, 'eps': keyword_62603, 'w': keyword_62599}
        # Getting the type of 'dfitpack' (line 1370)
        dfitpack_62593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 41), 'dfitpack', False)
        # Obtaining the member 'spherfit_smth' of a type (line 1370)
        spherfit_smth_62594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 41), dfitpack_62593, 'spherfit_smth')
        # Calling spherfit_smth(args, kwargs) (line 1370)
        spherfit_smth_call_result_62605 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 41), spherfit_smth_62594, *[theta_62595, phi_62596, r_62597], **kwargs_62604)
        
        # Obtaining the member '__getitem__' of a type (line 1370)
        getitem___62606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1370, 8), spherfit_smth_call_result_62605, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1370)
        subscript_call_result_62607 = invoke(stypy.reporting.localization.Localization(__file__, 1370, 8), getitem___62606, int_62592)
        
        # Assigning a type to the variable 'tuple_var_assignment_59617' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59617', subscript_call_result_62607)
        
        # Assigning a Name to a Name (line 1370):
        # Getting the type of 'tuple_var_assignment_59611' (line 1370)
        tuple_var_assignment_59611_62608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59611')
        # Assigning a type to the variable 'nt_' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'nt_', tuple_var_assignment_59611_62608)
        
        # Assigning a Name to a Name (line 1370):
        # Getting the type of 'tuple_var_assignment_59612' (line 1370)
        tuple_var_assignment_59612_62609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59612')
        # Assigning a type to the variable 'tt_' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 13), 'tt_', tuple_var_assignment_59612_62609)
        
        # Assigning a Name to a Name (line 1370):
        # Getting the type of 'tuple_var_assignment_59613' (line 1370)
        tuple_var_assignment_59613_62610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59613')
        # Assigning a type to the variable 'np_' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 18), 'np_', tuple_var_assignment_59613_62610)
        
        # Assigning a Name to a Name (line 1370):
        # Getting the type of 'tuple_var_assignment_59614' (line 1370)
        tuple_var_assignment_59614_62611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59614')
        # Assigning a type to the variable 'tp_' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 23), 'tp_', tuple_var_assignment_59614_62611)
        
        # Assigning a Name to a Name (line 1370):
        # Getting the type of 'tuple_var_assignment_59615' (line 1370)
        tuple_var_assignment_59615_62612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59615')
        # Assigning a type to the variable 'c' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 28), 'c', tuple_var_assignment_59615_62612)
        
        # Assigning a Name to a Name (line 1370):
        # Getting the type of 'tuple_var_assignment_59616' (line 1370)
        tuple_var_assignment_59616_62613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59616')
        # Assigning a type to the variable 'fp' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 31), 'fp', tuple_var_assignment_59616_62613)
        
        # Assigning a Name to a Name (line 1370):
        # Getting the type of 'tuple_var_assignment_59617' (line 1370)
        tuple_var_assignment_59617_62614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1370, 8), 'tuple_var_assignment_59617')
        # Assigning a type to the variable 'ier' (line 1370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1370, 35), 'ier', tuple_var_assignment_59617_62614)
        
        
        # Getting the type of 'ier' (line 1373)
        ier_62615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1373, 11), 'ier')
        
        # Obtaining an instance of the builtin type 'list' (line 1373)
        list_62616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1373)
        # Adding element type (line 1373)
        int_62617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1373, 22), list_62616, int_62617)
        # Adding element type (line 1373)
        int_62618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1373, 22), list_62616, int_62618)
        # Adding element type (line 1373)
        int_62619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1373, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1373, 22), list_62616, int_62619)
        
        # Applying the binary operator 'notin' (line 1373)
        result_contains_62620 = python_operator(stypy.reporting.localization.Localization(__file__, 1373, 11), 'notin', ier_62615, list_62616)
        
        # Testing the type of an if condition (line 1373)
        if_condition_62621 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1373, 8), result_contains_62620)
        # Assigning a type to the variable 'if_condition_62621' (line 1373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1373, 8), 'if_condition_62621', if_condition_62621)
        # SSA begins for if statement (line 1373)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1374):
        
        # Assigning a Call to a Name (line 1374):
        
        # Call to get(...): (line 1374)
        # Processing the call arguments (line 1374)
        # Getting the type of 'ier' (line 1374)
        ier_62624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 46), 'ier', False)
        str_62625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1374, 51), 'str', 'ier=%s')
        # Getting the type of 'ier' (line 1374)
        ier_62626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 63), 'ier', False)
        # Applying the binary operator '%' (line 1374)
        result_mod_62627 = python_operator(stypy.reporting.localization.Localization(__file__, 1374, 51), '%', str_62625, ier_62626)
        
        # Processing the call keyword arguments (line 1374)
        kwargs_62628 = {}
        # Getting the type of '_spherefit_messages' (line 1374)
        _spherefit_messages_62622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1374, 22), '_spherefit_messages', False)
        # Obtaining the member 'get' of a type (line 1374)
        get_62623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1374, 22), _spherefit_messages_62622, 'get')
        # Calling get(args, kwargs) (line 1374)
        get_call_result_62629 = invoke(stypy.reporting.localization.Localization(__file__, 1374, 22), get_62623, *[ier_62624, result_mod_62627], **kwargs_62628)
        
        # Assigning a type to the variable 'message' (line 1374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1374, 12), 'message', get_call_result_62629)
        
        # Call to ValueError(...): (line 1375)
        # Processing the call arguments (line 1375)
        # Getting the type of 'message' (line 1375)
        message_62631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 29), 'message', False)
        # Processing the call keyword arguments (line 1375)
        kwargs_62632 = {}
        # Getting the type of 'ValueError' (line 1375)
        ValueError_62630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1375, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1375)
        ValueError_call_result_62633 = invoke(stypy.reporting.localization.Localization(__file__, 1375, 18), ValueError_62630, *[message_62631], **kwargs_62632)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1375, 12), ValueError_call_result_62633, 'raise parameter', BaseException)
        # SSA join for if statement (line 1373)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1377):
        
        # Assigning a Name to a Attribute (line 1377):
        # Getting the type of 'fp' (line 1377)
        fp_62634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1377, 18), 'fp')
        # Getting the type of 'self' (line 1377)
        self_62635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1377, 8), 'self')
        # Setting the type of the member 'fp' of a type (line 1377)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1377, 8), self_62635, 'fp', fp_62634)
        
        # Assigning a Tuple to a Attribute (line 1378):
        
        # Assigning a Tuple to a Attribute (line 1378):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1378)
        tuple_62636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1378)
        # Adding element type (line 1378)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nt_' (line 1378)
        nt__62637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 24), 'nt_')
        slice_62638 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1378, 19), None, nt__62637, None)
        # Getting the type of 'tt_' (line 1378)
        tt__62639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 19), 'tt_')
        # Obtaining the member '__getitem__' of a type (line 1378)
        getitem___62640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 19), tt__62639, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1378)
        subscript_call_result_62641 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 19), getitem___62640, slice_62638)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1378, 19), tuple_62636, subscript_call_result_62641)
        # Adding element type (line 1378)
        
        # Obtaining the type of the subscript
        # Getting the type of 'np_' (line 1378)
        np__62642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 35), 'np_')
        slice_62643 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1378, 30), None, np__62642, None)
        # Getting the type of 'tp_' (line 1378)
        tp__62644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 30), 'tp_')
        # Obtaining the member '__getitem__' of a type (line 1378)
        getitem___62645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 30), tp__62644, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1378)
        subscript_call_result_62646 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 30), getitem___62645, slice_62643)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1378, 19), tuple_62636, subscript_call_result_62646)
        # Adding element type (line 1378)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nt_' (line 1378)
        nt__62647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 45), 'nt_')
        int_62648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 51), 'int')
        # Applying the binary operator '-' (line 1378)
        result_sub_62649 = python_operator(stypy.reporting.localization.Localization(__file__, 1378, 45), '-', nt__62647, int_62648)
        
        # Getting the type of 'np_' (line 1378)
        np__62650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 57), 'np_')
        int_62651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1378, 63), 'int')
        # Applying the binary operator '-' (line 1378)
        result_sub_62652 = python_operator(stypy.reporting.localization.Localization(__file__, 1378, 57), '-', np__62650, int_62651)
        
        # Applying the binary operator '*' (line 1378)
        result_mul_62653 = python_operator(stypy.reporting.localization.Localization(__file__, 1378, 44), '*', result_sub_62649, result_sub_62652)
        
        slice_62654 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1378, 41), None, result_mul_62653, None)
        # Getting the type of 'c' (line 1378)
        c_62655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 41), 'c')
        # Obtaining the member '__getitem__' of a type (line 1378)
        getitem___62656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 41), c_62655, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1378)
        subscript_call_result_62657 = invoke(stypy.reporting.localization.Localization(__file__, 1378, 41), getitem___62656, slice_62654)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1378, 19), tuple_62636, subscript_call_result_62657)
        
        # Getting the type of 'self' (line 1378)
        self_62658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1378, 8), 'self')
        # Setting the type of the member 'tck' of a type (line 1378)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1378, 8), self_62658, 'tck', tuple_62636)
        
        # Assigning a Tuple to a Attribute (line 1379):
        
        # Assigning a Tuple to a Attribute (line 1379):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1379)
        tuple_62659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1379, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1379)
        # Adding element type (line 1379)
        int_62660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1379, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1379, 24), tuple_62659, int_62660)
        # Adding element type (line 1379)
        int_62661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1379, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1379, 24), tuple_62659, int_62661)
        
        # Getting the type of 'self' (line 1379)
        self_62662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1379, 8), 'self')
        # Setting the type of the member 'degrees' of a type (line 1379)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1379, 8), self_62662, 'degrees', tuple_62659)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'SmoothSphereBivariateSpline' (line 1290)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1290, 0), 'SmoothSphereBivariateSpline', SmoothSphereBivariateSpline)
# Declaration of the 'LSQSphereBivariateSpline' class
# Getting the type of 'SphereBivariateSpline' (line 1382)
SphereBivariateSpline_62663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1382, 31), 'SphereBivariateSpline')

class LSQSphereBivariateSpline(SphereBivariateSpline_62663, ):
    str_62664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1463, (-1)), 'str', "\n    Weighted least-squares bivariate spline approximation in spherical\n    coordinates.\n\n    .. versionadded:: 0.11.0\n\n    Parameters\n    ----------\n    theta, phi, r : array_like\n        1-D sequences of data points (order is not important). Coordinates\n        must be given in radians. Theta must lie within the interval (0, pi),\n        and phi must lie within the interval (0, 2pi).\n    tt, tp : array_like\n        Strictly ordered 1-D sequences of knots coordinates.\n        Coordinates must satisfy ``0 < tt[i] < pi``, ``0 < tp[i] < 2*pi``.\n    w : array_like, optional\n        Positive 1-D sequence of weights, of the same length as `theta`, `phi`\n        and `r`.\n    eps : float, optional\n        A threshold for determining the effective rank of an over-determined\n        linear system of equations. `eps` should have a value between 0 and 1,\n        the default is 1e-16.\n\n    Notes\n    -----\n    For more information, see the FITPACK_ site about this function.\n\n    .. _FITPACK: http://www.netlib.org/dierckx/sphere.f\n\n    Examples\n    --------\n    Suppose we have global data on a coarse grid (the input data does not\n    have to be on a grid):\n\n    >>> theta = np.linspace(0., np.pi, 7)\n    >>> phi = np.linspace(0., 2*np.pi, 9)\n    >>> data = np.empty((theta.shape[0], phi.shape[0]))\n    >>> data[:,0], data[0,:], data[-1,:] = 0., 0., 0.\n    >>> data[1:-1,1], data[1:-1,-1] = 1., 1.\n    >>> data[1,1:-1], data[-2,1:-1] = 1., 1.\n    >>> data[2:-2,2], data[2:-2,-2] = 2., 2.\n    >>> data[2,2:-2], data[-3,2:-2] = 2., 2.\n    >>> data[3,3:-2] = 3.\n    >>> data = np.roll(data, 4, 1)\n\n    We need to set up the interpolator object. Here, we must also specify the\n    coordinates of the knots to use.\n\n    >>> lats, lons = np.meshgrid(theta, phi)\n    >>> knotst, knotsp = theta.copy(), phi.copy()\n    >>> knotst[0] += .0001\n    >>> knotst[-1] -= .0001\n    >>> knotsp[0] += .0001\n    >>> knotsp[-1] -= .0001\n    >>> from scipy.interpolate import LSQSphereBivariateSpline\n    >>> lut = LSQSphereBivariateSpline(lats.ravel(), lons.ravel(),\n    ...                                data.T.ravel(), knotst, knotsp)\n\n    As a first test, we'll see what the algorithm returns when run on the\n    input coordinates\n\n    >>> data_orig = lut(theta, phi)\n\n    Finally we interpolate the data to a finer grid\n\n    >>> fine_lats = np.linspace(0., np.pi, 70)\n    >>> fine_lons = np.linspace(0., 2*np.pi, 90)\n\n    >>> data_lsq = lut(fine_lats, fine_lons)\n\n    >>> import matplotlib.pyplot as plt\n    >>> fig = plt.figure()\n    >>> ax1 = fig.add_subplot(131)\n    >>> ax1.imshow(data, interpolation='nearest')\n    >>> ax2 = fig.add_subplot(132)\n    >>> ax2.imshow(data_orig, interpolation='nearest')\n    >>> ax3 = fig.add_subplot(133)\n    >>> ax3.imshow(data_lsq, interpolation='nearest')\n    >>> plt.show()\n\n    ")

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 1465)
        None_62665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1465, 48), 'None')
        float_62666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1465, 58), 'float')
        defaults = [None_62665, float_62666]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1465, 4, False)
        # Assigning a type to the variable 'self' (line 1466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1466, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'LSQSphereBivariateSpline.__init__', ['theta', 'phi', 'r', 'tt', 'tp', 'w', 'eps'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['theta', 'phi', 'r', 'tt', 'tp', 'w', 'eps'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        
        # Call to issubclass_(...): (line 1466)
        # Processing the call arguments (line 1466)
        # Getting the type of 'w' (line 1466)
        w_62669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 26), 'w', False)
        # Getting the type of 'float' (line 1466)
        float_62670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 29), 'float', False)
        # Processing the call keyword arguments (line 1466)
        kwargs_62671 = {}
        # Getting the type of 'np' (line 1466)
        np_62667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1466, 11), 'np', False)
        # Obtaining the member 'issubclass_' of a type (line 1466)
        issubclass__62668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1466, 11), np_62667, 'issubclass_')
        # Calling issubclass_(args, kwargs) (line 1466)
        issubclass__call_result_62672 = invoke(stypy.reporting.localization.Localization(__file__, 1466, 11), issubclass__62668, *[w_62669, float_62670], **kwargs_62671)
        
        # Testing the type of an if condition (line 1466)
        if_condition_62673 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1466, 8), issubclass__call_result_62672)
        # Assigning a type to the variable 'if_condition_62673' (line 1466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1466, 8), 'if_condition_62673', if_condition_62673)
        # SSA begins for if statement (line 1466)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 1467):
        
        # Assigning a BinOp to a Name (line 1467):
        
        # Call to ones(...): (line 1467)
        # Processing the call arguments (line 1467)
        
        # Call to len(...): (line 1467)
        # Processing the call arguments (line 1467)
        # Getting the type of 'theta' (line 1467)
        theta_62676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 25), 'theta', False)
        # Processing the call keyword arguments (line 1467)
        kwargs_62677 = {}
        # Getting the type of 'len' (line 1467)
        len_62675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 21), 'len', False)
        # Calling len(args, kwargs) (line 1467)
        len_call_result_62678 = invoke(stypy.reporting.localization.Localization(__file__, 1467, 21), len_62675, *[theta_62676], **kwargs_62677)
        
        # Processing the call keyword arguments (line 1467)
        kwargs_62679 = {}
        # Getting the type of 'ones' (line 1467)
        ones_62674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 16), 'ones', False)
        # Calling ones(args, kwargs) (line 1467)
        ones_call_result_62680 = invoke(stypy.reporting.localization.Localization(__file__, 1467, 16), ones_62674, *[len_call_result_62678], **kwargs_62679)
        
        # Getting the type of 'w' (line 1467)
        w_62681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1467, 35), 'w')
        # Applying the binary operator '*' (line 1467)
        result_mul_62682 = python_operator(stypy.reporting.localization.Localization(__file__, 1467, 16), '*', ones_call_result_62680, w_62681)
        
        # Assigning a type to the variable 'w' (line 1467)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1467, 12), 'w', result_mul_62682)
        # SSA join for if statement (line 1466)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Tuple to a Tuple (line 1468):
        
        # Assigning a BinOp to a Name (line 1468):
        int_62683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1468, 19), 'int')
        
        # Call to len(...): (line 1468)
        # Processing the call arguments (line 1468)
        # Getting the type of 'tt' (line 1468)
        tt_62685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 27), 'tt', False)
        # Processing the call keyword arguments (line 1468)
        kwargs_62686 = {}
        # Getting the type of 'len' (line 1468)
        len_62684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 23), 'len', False)
        # Calling len(args, kwargs) (line 1468)
        len_call_result_62687 = invoke(stypy.reporting.localization.Localization(__file__, 1468, 23), len_62684, *[tt_62685], **kwargs_62686)
        
        # Applying the binary operator '+' (line 1468)
        result_add_62688 = python_operator(stypy.reporting.localization.Localization(__file__, 1468, 19), '+', int_62683, len_call_result_62687)
        
        # Assigning a type to the variable 'tuple_assignment_59618' (line 1468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1468, 8), 'tuple_assignment_59618', result_add_62688)
        
        # Assigning a BinOp to a Name (line 1468):
        int_62689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1468, 32), 'int')
        
        # Call to len(...): (line 1468)
        # Processing the call arguments (line 1468)
        # Getting the type of 'tp' (line 1468)
        tp_62691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 40), 'tp', False)
        # Processing the call keyword arguments (line 1468)
        kwargs_62692 = {}
        # Getting the type of 'len' (line 1468)
        len_62690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 36), 'len', False)
        # Calling len(args, kwargs) (line 1468)
        len_call_result_62693 = invoke(stypy.reporting.localization.Localization(__file__, 1468, 36), len_62690, *[tp_62691], **kwargs_62692)
        
        # Applying the binary operator '+' (line 1468)
        result_add_62694 = python_operator(stypy.reporting.localization.Localization(__file__, 1468, 32), '+', int_62689, len_call_result_62693)
        
        # Assigning a type to the variable 'tuple_assignment_59619' (line 1468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1468, 8), 'tuple_assignment_59619', result_add_62694)
        
        # Assigning a Name to a Name (line 1468):
        # Getting the type of 'tuple_assignment_59618' (line 1468)
        tuple_assignment_59618_62695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 8), 'tuple_assignment_59618')
        # Assigning a type to the variable 'nt_' (line 1468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1468, 8), 'nt_', tuple_assignment_59618_62695)
        
        # Assigning a Name to a Name (line 1468):
        # Getting the type of 'tuple_assignment_59619' (line 1468)
        tuple_assignment_59619_62696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1468, 8), 'tuple_assignment_59619')
        # Assigning a type to the variable 'np_' (line 1468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1468, 13), 'np_', tuple_assignment_59619_62696)
        
        # Assigning a Tuple to a Tuple (line 1469):
        
        # Assigning a Call to a Name (line 1469):
        
        # Call to zeros(...): (line 1469)
        # Processing the call arguments (line 1469)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1469)
        tuple_62698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1469, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1469)
        # Adding element type (line 1469)
        # Getting the type of 'nt_' (line 1469)
        nt__62699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 26), 'nt_', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1469, 26), tuple_62698, nt__62699)
        
        # Getting the type of 'float' (line 1469)
        float_62700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 33), 'float', False)
        # Processing the call keyword arguments (line 1469)
        kwargs_62701 = {}
        # Getting the type of 'zeros' (line 1469)
        zeros_62697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 19), 'zeros', False)
        # Calling zeros(args, kwargs) (line 1469)
        zeros_call_result_62702 = invoke(stypy.reporting.localization.Localization(__file__, 1469, 19), zeros_62697, *[tuple_62698, float_62700], **kwargs_62701)
        
        # Assigning a type to the variable 'tuple_assignment_59620' (line 1469)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1469, 8), 'tuple_assignment_59620', zeros_call_result_62702)
        
        # Assigning a Call to a Name (line 1469):
        
        # Call to zeros(...): (line 1469)
        # Processing the call arguments (line 1469)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1469)
        tuple_62704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1469, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1469)
        # Adding element type (line 1469)
        # Getting the type of 'np_' (line 1469)
        np__62705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 48), 'np_', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1469, 48), tuple_62704, np__62705)
        
        # Getting the type of 'float' (line 1469)
        float_62706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 55), 'float', False)
        # Processing the call keyword arguments (line 1469)
        kwargs_62707 = {}
        # Getting the type of 'zeros' (line 1469)
        zeros_62703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 41), 'zeros', False)
        # Calling zeros(args, kwargs) (line 1469)
        zeros_call_result_62708 = invoke(stypy.reporting.localization.Localization(__file__, 1469, 41), zeros_62703, *[tuple_62704, float_62706], **kwargs_62707)
        
        # Assigning a type to the variable 'tuple_assignment_59621' (line 1469)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1469, 8), 'tuple_assignment_59621', zeros_call_result_62708)
        
        # Assigning a Name to a Name (line 1469):
        # Getting the type of 'tuple_assignment_59620' (line 1469)
        tuple_assignment_59620_62709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 8), 'tuple_assignment_59620')
        # Assigning a type to the variable 'tt_' (line 1469)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1469, 8), 'tt_', tuple_assignment_59620_62709)
        
        # Assigning a Name to a Name (line 1469):
        # Getting the type of 'tuple_assignment_59621' (line 1469)
        tuple_assignment_59621_62710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1469, 8), 'tuple_assignment_59621')
        # Assigning a type to the variable 'tp_' (line 1469)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1469, 13), 'tp_', tuple_assignment_59621_62710)
        
        # Assigning a Tuple to a Tuple (line 1470):
        
        # Assigning a Name to a Name (line 1470):
        # Getting the type of 'tt' (line 1470)
        tt_62711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 31), 'tt')
        # Assigning a type to the variable 'tuple_assignment_59622' (line 1470)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 8), 'tuple_assignment_59622', tt_62711)
        
        # Assigning a Name to a Name (line 1470):
        # Getting the type of 'tp' (line 1470)
        tp_62712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 35), 'tp')
        # Assigning a type to the variable 'tuple_assignment_59623' (line 1470)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1470, 8), 'tuple_assignment_59623', tp_62712)
        
        # Assigning a Name to a Subscript (line 1470):
        # Getting the type of 'tuple_assignment_59622' (line 1470)
        tuple_assignment_59622_62713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 8), 'tuple_assignment_59622')
        # Getting the type of 'tt_' (line 1470)
        tt__62714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 8), 'tt_')
        int_62715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1470, 12), 'int')
        int_62716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1470, 14), 'int')
        slice_62717 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1470, 8), int_62715, int_62716, None)
        # Storing an element on a container (line 1470)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1470, 8), tt__62714, (slice_62717, tuple_assignment_59622_62713))
        
        # Assigning a Name to a Subscript (line 1470):
        # Getting the type of 'tuple_assignment_59623' (line 1470)
        tuple_assignment_59623_62718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 8), 'tuple_assignment_59623')
        # Getting the type of 'tp_' (line 1470)
        tp__62719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1470, 19), 'tp_')
        int_62720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1470, 23), 'int')
        int_62721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1470, 25), 'int')
        slice_62722 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1470, 19), int_62720, int_62721, None)
        # Storing an element on a container (line 1470)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1470, 19), tp__62719, (slice_62722, tuple_assignment_59623_62718))
        
        # Assigning a Tuple to a Tuple (line 1471):
        
        # Assigning a Attribute to a Name (line 1471):
        # Getting the type of 'np' (line 1471)
        np_62723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 29), 'np')
        # Obtaining the member 'pi' of a type (line 1471)
        pi_62724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 29), np_62723, 'pi')
        # Assigning a type to the variable 'tuple_assignment_59624' (line 1471)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1471, 8), 'tuple_assignment_59624', pi_62724)
        
        # Assigning a BinOp to a Name (line 1471):
        float_62725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1471, 36), 'float')
        # Getting the type of 'np' (line 1471)
        np_62726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 41), 'np')
        # Obtaining the member 'pi' of a type (line 1471)
        pi_62727 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1471, 41), np_62726, 'pi')
        # Applying the binary operator '*' (line 1471)
        result_mul_62728 = python_operator(stypy.reporting.localization.Localization(__file__, 1471, 36), '*', float_62725, pi_62727)
        
        # Assigning a type to the variable 'tuple_assignment_59625' (line 1471)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1471, 8), 'tuple_assignment_59625', result_mul_62728)
        
        # Assigning a Name to a Subscript (line 1471):
        # Getting the type of 'tuple_assignment_59624' (line 1471)
        tuple_assignment_59624_62729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 8), 'tuple_assignment_59624')
        # Getting the type of 'tt_' (line 1471)
        tt__62730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 8), 'tt_')
        int_62731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1471, 12), 'int')
        slice_62732 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1471, 8), int_62731, None, None)
        # Storing an element on a container (line 1471)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1471, 8), tt__62730, (slice_62732, tuple_assignment_59624_62729))
        
        # Assigning a Name to a Subscript (line 1471):
        # Getting the type of 'tuple_assignment_59625' (line 1471)
        tuple_assignment_59625_62733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 8), 'tuple_assignment_59625')
        # Getting the type of 'tp_' (line 1471)
        tp__62734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1471, 18), 'tp_')
        int_62735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1471, 22), 'int')
        slice_62736 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1471, 18), int_62735, None, None)
        # Storing an element on a container (line 1471)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1471, 18), tp__62734, (slice_62736, tuple_assignment_59625_62733))
        
        # Assigning a Call to a Tuple (line 1472):
        
        # Assigning a Subscript to a Name (line 1472):
        
        # Obtaining the type of the subscript
        int_62737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1472, 8), 'int')
        
        # Call to spherfit_lsq(...): (line 1472)
        # Processing the call arguments (line 1472)
        # Getting the type of 'theta' (line 1472)
        theta_62740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 53), 'theta', False)
        # Getting the type of 'phi' (line 1472)
        phi_62741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 60), 'phi', False)
        # Getting the type of 'r' (line 1472)
        r_62742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 65), 'r', False)
        # Getting the type of 'tt_' (line 1472)
        tt__62743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 68), 'tt_', False)
        # Getting the type of 'tp_' (line 1472)
        tp__62744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 73), 'tp_', False)
        # Processing the call keyword arguments (line 1472)
        # Getting the type of 'w' (line 1473)
        w_62745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 55), 'w', False)
        keyword_62746 = w_62745
        # Getting the type of 'eps' (line 1473)
        eps_62747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 62), 'eps', False)
        keyword_62748 = eps_62747
        kwargs_62749 = {'eps': keyword_62748, 'w': keyword_62746}
        # Getting the type of 'dfitpack' (line 1472)
        dfitpack_62738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 31), 'dfitpack', False)
        # Obtaining the member 'spherfit_lsq' of a type (line 1472)
        spherfit_lsq_62739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 31), dfitpack_62738, 'spherfit_lsq')
        # Calling spherfit_lsq(args, kwargs) (line 1472)
        spherfit_lsq_call_result_62750 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 31), spherfit_lsq_62739, *[theta_62740, phi_62741, r_62742, tt__62743, tp__62744], **kwargs_62749)
        
        # Obtaining the member '__getitem__' of a type (line 1472)
        getitem___62751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 8), spherfit_lsq_call_result_62750, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1472)
        subscript_call_result_62752 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 8), getitem___62751, int_62737)
        
        # Assigning a type to the variable 'tuple_var_assignment_59626' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59626', subscript_call_result_62752)
        
        # Assigning a Subscript to a Name (line 1472):
        
        # Obtaining the type of the subscript
        int_62753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1472, 8), 'int')
        
        # Call to spherfit_lsq(...): (line 1472)
        # Processing the call arguments (line 1472)
        # Getting the type of 'theta' (line 1472)
        theta_62756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 53), 'theta', False)
        # Getting the type of 'phi' (line 1472)
        phi_62757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 60), 'phi', False)
        # Getting the type of 'r' (line 1472)
        r_62758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 65), 'r', False)
        # Getting the type of 'tt_' (line 1472)
        tt__62759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 68), 'tt_', False)
        # Getting the type of 'tp_' (line 1472)
        tp__62760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 73), 'tp_', False)
        # Processing the call keyword arguments (line 1472)
        # Getting the type of 'w' (line 1473)
        w_62761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 55), 'w', False)
        keyword_62762 = w_62761
        # Getting the type of 'eps' (line 1473)
        eps_62763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 62), 'eps', False)
        keyword_62764 = eps_62763
        kwargs_62765 = {'eps': keyword_62764, 'w': keyword_62762}
        # Getting the type of 'dfitpack' (line 1472)
        dfitpack_62754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 31), 'dfitpack', False)
        # Obtaining the member 'spherfit_lsq' of a type (line 1472)
        spherfit_lsq_62755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 31), dfitpack_62754, 'spherfit_lsq')
        # Calling spherfit_lsq(args, kwargs) (line 1472)
        spherfit_lsq_call_result_62766 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 31), spherfit_lsq_62755, *[theta_62756, phi_62757, r_62758, tt__62759, tp__62760], **kwargs_62765)
        
        # Obtaining the member '__getitem__' of a type (line 1472)
        getitem___62767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 8), spherfit_lsq_call_result_62766, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1472)
        subscript_call_result_62768 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 8), getitem___62767, int_62753)
        
        # Assigning a type to the variable 'tuple_var_assignment_59627' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59627', subscript_call_result_62768)
        
        # Assigning a Subscript to a Name (line 1472):
        
        # Obtaining the type of the subscript
        int_62769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1472, 8), 'int')
        
        # Call to spherfit_lsq(...): (line 1472)
        # Processing the call arguments (line 1472)
        # Getting the type of 'theta' (line 1472)
        theta_62772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 53), 'theta', False)
        # Getting the type of 'phi' (line 1472)
        phi_62773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 60), 'phi', False)
        # Getting the type of 'r' (line 1472)
        r_62774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 65), 'r', False)
        # Getting the type of 'tt_' (line 1472)
        tt__62775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 68), 'tt_', False)
        # Getting the type of 'tp_' (line 1472)
        tp__62776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 73), 'tp_', False)
        # Processing the call keyword arguments (line 1472)
        # Getting the type of 'w' (line 1473)
        w_62777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 55), 'w', False)
        keyword_62778 = w_62777
        # Getting the type of 'eps' (line 1473)
        eps_62779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 62), 'eps', False)
        keyword_62780 = eps_62779
        kwargs_62781 = {'eps': keyword_62780, 'w': keyword_62778}
        # Getting the type of 'dfitpack' (line 1472)
        dfitpack_62770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 31), 'dfitpack', False)
        # Obtaining the member 'spherfit_lsq' of a type (line 1472)
        spherfit_lsq_62771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 31), dfitpack_62770, 'spherfit_lsq')
        # Calling spherfit_lsq(args, kwargs) (line 1472)
        spherfit_lsq_call_result_62782 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 31), spherfit_lsq_62771, *[theta_62772, phi_62773, r_62774, tt__62775, tp__62776], **kwargs_62781)
        
        # Obtaining the member '__getitem__' of a type (line 1472)
        getitem___62783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 8), spherfit_lsq_call_result_62782, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1472)
        subscript_call_result_62784 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 8), getitem___62783, int_62769)
        
        # Assigning a type to the variable 'tuple_var_assignment_59628' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59628', subscript_call_result_62784)
        
        # Assigning a Subscript to a Name (line 1472):
        
        # Obtaining the type of the subscript
        int_62785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1472, 8), 'int')
        
        # Call to spherfit_lsq(...): (line 1472)
        # Processing the call arguments (line 1472)
        # Getting the type of 'theta' (line 1472)
        theta_62788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 53), 'theta', False)
        # Getting the type of 'phi' (line 1472)
        phi_62789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 60), 'phi', False)
        # Getting the type of 'r' (line 1472)
        r_62790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 65), 'r', False)
        # Getting the type of 'tt_' (line 1472)
        tt__62791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 68), 'tt_', False)
        # Getting the type of 'tp_' (line 1472)
        tp__62792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 73), 'tp_', False)
        # Processing the call keyword arguments (line 1472)
        # Getting the type of 'w' (line 1473)
        w_62793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 55), 'w', False)
        keyword_62794 = w_62793
        # Getting the type of 'eps' (line 1473)
        eps_62795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 62), 'eps', False)
        keyword_62796 = eps_62795
        kwargs_62797 = {'eps': keyword_62796, 'w': keyword_62794}
        # Getting the type of 'dfitpack' (line 1472)
        dfitpack_62786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 31), 'dfitpack', False)
        # Obtaining the member 'spherfit_lsq' of a type (line 1472)
        spherfit_lsq_62787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 31), dfitpack_62786, 'spherfit_lsq')
        # Calling spherfit_lsq(args, kwargs) (line 1472)
        spherfit_lsq_call_result_62798 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 31), spherfit_lsq_62787, *[theta_62788, phi_62789, r_62790, tt__62791, tp__62792], **kwargs_62797)
        
        # Obtaining the member '__getitem__' of a type (line 1472)
        getitem___62799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 8), spherfit_lsq_call_result_62798, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1472)
        subscript_call_result_62800 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 8), getitem___62799, int_62785)
        
        # Assigning a type to the variable 'tuple_var_assignment_59629' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59629', subscript_call_result_62800)
        
        # Assigning a Subscript to a Name (line 1472):
        
        # Obtaining the type of the subscript
        int_62801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1472, 8), 'int')
        
        # Call to spherfit_lsq(...): (line 1472)
        # Processing the call arguments (line 1472)
        # Getting the type of 'theta' (line 1472)
        theta_62804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 53), 'theta', False)
        # Getting the type of 'phi' (line 1472)
        phi_62805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 60), 'phi', False)
        # Getting the type of 'r' (line 1472)
        r_62806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 65), 'r', False)
        # Getting the type of 'tt_' (line 1472)
        tt__62807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 68), 'tt_', False)
        # Getting the type of 'tp_' (line 1472)
        tp__62808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 73), 'tp_', False)
        # Processing the call keyword arguments (line 1472)
        # Getting the type of 'w' (line 1473)
        w_62809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 55), 'w', False)
        keyword_62810 = w_62809
        # Getting the type of 'eps' (line 1473)
        eps_62811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1473, 62), 'eps', False)
        keyword_62812 = eps_62811
        kwargs_62813 = {'eps': keyword_62812, 'w': keyword_62810}
        # Getting the type of 'dfitpack' (line 1472)
        dfitpack_62802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 31), 'dfitpack', False)
        # Obtaining the member 'spherfit_lsq' of a type (line 1472)
        spherfit_lsq_62803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 31), dfitpack_62802, 'spherfit_lsq')
        # Calling spherfit_lsq(args, kwargs) (line 1472)
        spherfit_lsq_call_result_62814 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 31), spherfit_lsq_62803, *[theta_62804, phi_62805, r_62806, tt__62807, tp__62808], **kwargs_62813)
        
        # Obtaining the member '__getitem__' of a type (line 1472)
        getitem___62815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1472, 8), spherfit_lsq_call_result_62814, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1472)
        subscript_call_result_62816 = invoke(stypy.reporting.localization.Localization(__file__, 1472, 8), getitem___62815, int_62801)
        
        # Assigning a type to the variable 'tuple_var_assignment_59630' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59630', subscript_call_result_62816)
        
        # Assigning a Name to a Name (line 1472):
        # Getting the type of 'tuple_var_assignment_59626' (line 1472)
        tuple_var_assignment_59626_62817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59626')
        # Assigning a type to the variable 'tt_' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tt_', tuple_var_assignment_59626_62817)
        
        # Assigning a Name to a Name (line 1472):
        # Getting the type of 'tuple_var_assignment_59627' (line 1472)
        tuple_var_assignment_59627_62818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59627')
        # Assigning a type to the variable 'tp_' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 13), 'tp_', tuple_var_assignment_59627_62818)
        
        # Assigning a Name to a Name (line 1472):
        # Getting the type of 'tuple_var_assignment_59628' (line 1472)
        tuple_var_assignment_59628_62819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59628')
        # Assigning a type to the variable 'c' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 18), 'c', tuple_var_assignment_59628_62819)
        
        # Assigning a Name to a Name (line 1472):
        # Getting the type of 'tuple_var_assignment_59629' (line 1472)
        tuple_var_assignment_59629_62820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59629')
        # Assigning a type to the variable 'fp' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 21), 'fp', tuple_var_assignment_59629_62820)
        
        # Assigning a Name to a Name (line 1472):
        # Getting the type of 'tuple_var_assignment_59630' (line 1472)
        tuple_var_assignment_59630_62821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1472, 8), 'tuple_var_assignment_59630')
        # Assigning a type to the variable 'ier' (line 1472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1472, 25), 'ier', tuple_var_assignment_59630_62821)
        
        
        # Getting the type of 'ier' (line 1474)
        ier_62822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1474, 11), 'ier')
        int_62823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1474, 17), 'int')
        # Applying the binary operator '<' (line 1474)
        result_lt_62824 = python_operator(stypy.reporting.localization.Localization(__file__, 1474, 11), '<', ier_62822, int_62823)
        
        # Testing the type of an if condition (line 1474)
        if_condition_62825 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1474, 8), result_lt_62824)
        # Assigning a type to the variable 'if_condition_62825' (line 1474)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1474, 8), 'if_condition_62825', if_condition_62825)
        # SSA begins for if statement (line 1474)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 1475):
        
        # Assigning a BinOp to a Name (line 1475):
        int_62826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1475, 25), 'int')
        # Getting the type of 'nt_' (line 1475)
        nt__62827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1475, 30), 'nt_')
        int_62828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1475, 36), 'int')
        # Applying the binary operator '-' (line 1475)
        result_sub_62829 = python_operator(stypy.reporting.localization.Localization(__file__, 1475, 30), '-', nt__62827, int_62828)
        
        # Getting the type of 'np_' (line 1475)
        np__62830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1475, 42), 'np_')
        int_62831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1475, 48), 'int')
        # Applying the binary operator '-' (line 1475)
        result_sub_62832 = python_operator(stypy.reporting.localization.Localization(__file__, 1475, 42), '-', np__62830, int_62831)
        
        # Applying the binary operator '*' (line 1475)
        result_mul_62833 = python_operator(stypy.reporting.localization.Localization(__file__, 1475, 29), '*', result_sub_62829, result_sub_62832)
        
        # Applying the binary operator '+' (line 1475)
        result_add_62834 = python_operator(stypy.reporting.localization.Localization(__file__, 1475, 25), '+', int_62826, result_mul_62833)
        
        # Getting the type of 'ier' (line 1475)
        ier_62835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1475, 53), 'ier')
        # Applying the binary operator '+' (line 1475)
        result_add_62836 = python_operator(stypy.reporting.localization.Localization(__file__, 1475, 51), '+', result_add_62834, ier_62835)
        
        # Assigning a type to the variable 'deficiency' (line 1475)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1475, 12), 'deficiency', result_add_62836)
        
        # Assigning a BinOp to a Name (line 1476):
        
        # Assigning a BinOp to a Name (line 1476):
        
        # Call to get(...): (line 1476)
        # Processing the call arguments (line 1476)
        int_62839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1476, 46), 'int')
        # Processing the call keyword arguments (line 1476)
        kwargs_62840 = {}
        # Getting the type of '_spherefit_messages' (line 1476)
        _spherefit_messages_62837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 22), '_spherefit_messages', False)
        # Obtaining the member 'get' of a type (line 1476)
        get_62838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1476, 22), _spherefit_messages_62837, 'get')
        # Calling get(args, kwargs) (line 1476)
        get_call_result_62841 = invoke(stypy.reporting.localization.Localization(__file__, 1476, 22), get_62838, *[int_62839], **kwargs_62840)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1476)
        tuple_62842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1476, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1476)
        # Adding element type (line 1476)
        # Getting the type of 'deficiency' (line 1476)
        deficiency_62843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 53), 'deficiency')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1476, 53), tuple_62842, deficiency_62843)
        # Adding element type (line 1476)
        
        # Getting the type of 'ier' (line 1476)
        ier_62844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1476, 66), 'ier')
        # Applying the 'usub' unary operator (line 1476)
        result___neg___62845 = python_operator(stypy.reporting.localization.Localization(__file__, 1476, 65), 'usub', ier_62844)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1476, 53), tuple_62842, result___neg___62845)
        
        # Applying the binary operator '%' (line 1476)
        result_mod_62846 = python_operator(stypy.reporting.localization.Localization(__file__, 1476, 22), '%', get_call_result_62841, tuple_62842)
        
        # Assigning a type to the variable 'message' (line 1476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1476, 12), 'message', result_mod_62846)
        
        # Call to warn(...): (line 1477)
        # Processing the call arguments (line 1477)
        # Getting the type of 'message' (line 1477)
        message_62849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1477, 26), 'message', False)
        # Processing the call keyword arguments (line 1477)
        kwargs_62850 = {}
        # Getting the type of 'warnings' (line 1477)
        warnings_62847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1477, 12), 'warnings', False)
        # Obtaining the member 'warn' of a type (line 1477)
        warn_62848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1477, 12), warnings_62847, 'warn')
        # Calling warn(args, kwargs) (line 1477)
        warn_call_result_62851 = invoke(stypy.reporting.localization.Localization(__file__, 1477, 12), warn_62848, *[message_62849], **kwargs_62850)
        
        # SSA branch for the else part of an if statement (line 1474)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'ier' (line 1478)
        ier_62852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1478, 13), 'ier')
        
        # Obtaining an instance of the builtin type 'list' (line 1478)
        list_62853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1478, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1478)
        # Adding element type (line 1478)
        int_62854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1478, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1478, 24), list_62853, int_62854)
        # Adding element type (line 1478)
        int_62855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1478, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1478, 24), list_62853, int_62855)
        # Adding element type (line 1478)
        int_62856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1478, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1478, 24), list_62853, int_62856)
        
        # Applying the binary operator 'notin' (line 1478)
        result_contains_62857 = python_operator(stypy.reporting.localization.Localization(__file__, 1478, 13), 'notin', ier_62852, list_62853)
        
        # Testing the type of an if condition (line 1478)
        if_condition_62858 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1478, 13), result_contains_62857)
        # Assigning a type to the variable 'if_condition_62858' (line 1478)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1478, 13), 'if_condition_62858', if_condition_62858)
        # SSA begins for if statement (line 1478)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1479):
        
        # Assigning a Call to a Name (line 1479):
        
        # Call to get(...): (line 1479)
        # Processing the call arguments (line 1479)
        # Getting the type of 'ier' (line 1479)
        ier_62861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1479, 46), 'ier', False)
        str_62862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1479, 51), 'str', 'ier=%s')
        # Getting the type of 'ier' (line 1479)
        ier_62863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1479, 63), 'ier', False)
        # Applying the binary operator '%' (line 1479)
        result_mod_62864 = python_operator(stypy.reporting.localization.Localization(__file__, 1479, 51), '%', str_62862, ier_62863)
        
        # Processing the call keyword arguments (line 1479)
        kwargs_62865 = {}
        # Getting the type of '_spherefit_messages' (line 1479)
        _spherefit_messages_62859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1479, 22), '_spherefit_messages', False)
        # Obtaining the member 'get' of a type (line 1479)
        get_62860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1479, 22), _spherefit_messages_62859, 'get')
        # Calling get(args, kwargs) (line 1479)
        get_call_result_62866 = invoke(stypy.reporting.localization.Localization(__file__, 1479, 22), get_62860, *[ier_62861, result_mod_62864], **kwargs_62865)
        
        # Assigning a type to the variable 'message' (line 1479)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1479, 12), 'message', get_call_result_62866)
        
        # Call to ValueError(...): (line 1480)
        # Processing the call arguments (line 1480)
        # Getting the type of 'message' (line 1480)
        message_62868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 29), 'message', False)
        # Processing the call keyword arguments (line 1480)
        kwargs_62869 = {}
        # Getting the type of 'ValueError' (line 1480)
        ValueError_62867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1480, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1480)
        ValueError_call_result_62870 = invoke(stypy.reporting.localization.Localization(__file__, 1480, 18), ValueError_62867, *[message_62868], **kwargs_62869)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1480, 12), ValueError_call_result_62870, 'raise parameter', BaseException)
        # SSA join for if statement (line 1478)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1474)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1482):
        
        # Assigning a Name to a Attribute (line 1482):
        # Getting the type of 'fp' (line 1482)
        fp_62871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1482, 18), 'fp')
        # Getting the type of 'self' (line 1482)
        self_62872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1482, 8), 'self')
        # Setting the type of the member 'fp' of a type (line 1482)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1482, 8), self_62872, 'fp', fp_62871)
        
        # Assigning a Tuple to a Attribute (line 1483):
        
        # Assigning a Tuple to a Attribute (line 1483):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1483)
        tuple_62873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1483, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1483)
        # Adding element type (line 1483)
        # Getting the type of 'tt_' (line 1483)
        tt__62874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 19), 'tt_')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1483, 19), tuple_62873, tt__62874)
        # Adding element type (line 1483)
        # Getting the type of 'tp_' (line 1483)
        tp__62875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 24), 'tp_')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1483, 19), tuple_62873, tp__62875)
        # Adding element type (line 1483)
        # Getting the type of 'c' (line 1483)
        c_62876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 29), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1483, 19), tuple_62873, c_62876)
        
        # Getting the type of 'self' (line 1483)
        self_62877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1483, 8), 'self')
        # Setting the type of the member 'tck' of a type (line 1483)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1483, 8), self_62877, 'tck', tuple_62873)
        
        # Assigning a Tuple to a Attribute (line 1484):
        
        # Assigning a Tuple to a Attribute (line 1484):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1484)
        tuple_62878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1484, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1484)
        # Adding element type (line 1484)
        int_62879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1484, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1484, 24), tuple_62878, int_62879)
        # Adding element type (line 1484)
        int_62880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1484, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1484, 24), tuple_62878, int_62880)
        
        # Getting the type of 'self' (line 1484)
        self_62881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1484, 8), 'self')
        # Setting the type of the member 'degrees' of a type (line 1484)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1484, 8), self_62881, 'degrees', tuple_62878)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'LSQSphereBivariateSpline' (line 1382)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1382, 0), 'LSQSphereBivariateSpline', LSQSphereBivariateSpline)

# Assigning a Call to a Name (line 1487):

# Assigning a Call to a Name (line 1487):

# Call to copy(...): (line 1487)
# Processing the call keyword arguments (line 1487)
kwargs_62884 = {}
# Getting the type of '_surfit_messages' (line 1487)
_surfit_messages_62882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 18), '_surfit_messages', False)
# Obtaining the member 'copy' of a type (line 1487)
copy_62883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1487, 18), _surfit_messages_62882, 'copy')
# Calling copy(args, kwargs) (line 1487)
copy_call_result_62885 = invoke(stypy.reporting.localization.Localization(__file__, 1487, 18), copy_62883, *[], **kwargs_62884)

# Assigning a type to the variable '_spfit_messages' (line 1487)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1487, 0), '_spfit_messages', copy_call_result_62885)

# Assigning a Str to a Subscript (line 1488):

# Assigning a Str to a Subscript (line 1488):
str_62886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1513, (-1)), 'str', '\nERROR: on entry, the input data are controlled on validity\n       the following restrictions must be satisfied.\n          -1<=iopt(1)<=1, 0<=iopt(2)<=1, 0<=iopt(3)<=1,\n          -1<=ider(1)<=1, 0<=ider(2)<=1, ider(2)=0 if iopt(2)=0.\n          -1<=ider(3)<=1, 0<=ider(4)<=1, ider(4)=0 if iopt(3)=0.\n          mu >= mumin (see above), mv >= 4, nuest >=8, nvest >= 8,\n          kwrk>=5+mu+mv+nuest+nvest,\n          lwrk >= 12+nuest*(mv+nvest+3)+nvest*24+4*mu+8*mv+max(nuest,mv+nvest)\n          0< u(i-1)<u(i)< pi,i=2,..,mu,\n          -pi<=v(1)< pi, v(1)<v(i-1)<v(i)<v(1)+2*pi, i=3,...,mv\n          if iopt(1)=-1: 8<=nu<=min(nuest,mu+6+iopt(2)+iopt(3))\n                         0<tu(5)<tu(6)<...<tu(nu-4)< pi\n                         8<=nv<=min(nvest,mv+7)\n                         v(1)<tv(5)<tv(6)<...<tv(nv-4)<v(1)+2*pi\n                         the schoenberg-whitney conditions, i.e. there must be\n                         subset of grid co-ordinates uu(p) and vv(q) such that\n                            tu(p) < uu(p) < tu(p+4) ,p=1,...,nu-4\n                            (iopt(2)=1 and iopt(3)=1 also count for a uu-value\n                            tv(q) < vv(q) < tv(q+4) ,q=1,...,nv-4\n                            (vv(q) is either a value v(j) or v(j)+2*pi)\n          if iopt(1)>=0: s>=0\n          if s=0: nuest>=mu+6+iopt(2)+iopt(3), nvest>=mv+7\n       if one of these conditions is found to be violated,control is\n       immediately repassed to the calling program. in that case there is no\n       approximation returned.')
# Getting the type of '_spfit_messages' (line 1488)
_spfit_messages_62887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 0), '_spfit_messages')
int_62888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1488, 16), 'int')
# Storing an element on a container (line 1488)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1488, 0), _spfit_messages_62887, (int_62888, str_62886))
# Declaration of the 'RectSphereBivariateSpline' class
# Getting the type of 'SphereBivariateSpline' (line 1516)
SphereBivariateSpline_62889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1516, 32), 'SphereBivariateSpline')

class RectSphereBivariateSpline(SphereBivariateSpline_62889, ):
    str_62890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1646, (-1)), 'str', '\n    Bivariate spline approximation over a rectangular mesh on a sphere.\n\n    Can be used for smoothing data.\n\n    .. versionadded:: 0.11.0\n\n    Parameters\n    ----------\n    u : array_like\n        1-D array of latitude coordinates in strictly ascending order.\n        Coordinates must be given in radians and lie within the interval\n        (0, pi).\n    v : array_like\n        1-D array of longitude coordinates in strictly ascending order.\n        Coordinates must be given in radians. First element (v[0]) must lie\n        within the interval [-pi, pi). Last element (v[-1]) must satisfy\n        v[-1] <= v[0] + 2*pi.\n    r : array_like\n        2-D array of data with shape ``(u.size, v.size)``.\n    s : float, optional\n        Positive smoothing factor defined for estimation condition\n        (``s=0`` is for interpolation).\n    pole_continuity : bool or (bool, bool), optional\n        Order of continuity at the poles ``u=0`` (``pole_continuity[0]``) and\n        ``u=pi`` (``pole_continuity[1]``).  The order of continuity at the pole\n        will be 1 or 0 when this is True or False, respectively.\n        Defaults to False.\n    pole_values : float or (float, float), optional\n        Data values at the poles ``u=0`` and ``u=pi``.  Either the whole\n        parameter or each individual element can be None.  Defaults to None.\n    pole_exact : bool or (bool, bool), optional\n        Data value exactness at the poles ``u=0`` and ``u=pi``.  If True, the\n        value is considered to be the right function value, and it will be\n        fitted exactly. If False, the value will be considered to be a data\n        value just like the other data values.  Defaults to False.\n    pole_flat : bool or (bool, bool), optional\n        For the poles at ``u=0`` and ``u=pi``, specify whether or not the\n        approximation has vanishing derivatives.  Defaults to False.\n\n    See Also\n    --------\n    RectBivariateSpline : bivariate spline approximation over a rectangular\n        mesh\n\n    Notes\n    -----\n    Currently, only the smoothing spline approximation (``iopt[0] = 0`` and\n    ``iopt[0] = 1`` in the FITPACK routine) is supported.  The exact\n    least-squares spline approximation is not implemented yet.\n\n    When actually performing the interpolation, the requested `v` values must\n    lie within the same length 2pi interval that the original `v` values were\n    chosen from.\n\n    For more information, see the FITPACK_ site about this function.\n\n    .. _FITPACK: http://www.netlib.org/dierckx/spgrid.f\n\n    Examples\n    --------\n    Suppose we have global data on a coarse grid\n\n    >>> lats = np.linspace(10, 170, 9) * np.pi / 180.\n    >>> lons = np.linspace(0, 350, 18) * np.pi / 180.\n    >>> data = np.dot(np.atleast_2d(90. - np.linspace(-80., 80., 18)).T,\n    ...               np.atleast_2d(180. - np.abs(np.linspace(0., 350., 9)))).T\n\n    We want to interpolate it to a global one-degree grid\n\n    >>> new_lats = np.linspace(1, 180, 180) * np.pi / 180\n    >>> new_lons = np.linspace(1, 360, 360) * np.pi / 180\n    >>> new_lats, new_lons = np.meshgrid(new_lats, new_lons)\n\n    We need to set up the interpolator object\n\n    >>> from scipy.interpolate import RectSphereBivariateSpline\n    >>> lut = RectSphereBivariateSpline(lats, lons, data)\n\n    Finally we interpolate the data.  The `RectSphereBivariateSpline` object\n    only takes 1-D arrays as input, therefore we need to do some reshaping.\n\n    >>> data_interp = lut.ev(new_lats.ravel(),\n    ...                      new_lons.ravel()).reshape((360, 180)).T\n\n    Looking at the original and the interpolated data, one can see that the\n    interpolant reproduces the original data very well:\n\n    >>> import matplotlib.pyplot as plt\n    >>> fig = plt.figure()\n    >>> ax1 = fig.add_subplot(211)\n    >>> ax1.imshow(data, interpolation=\'nearest\')\n    >>> ax2 = fig.add_subplot(212)\n    >>> ax2.imshow(data_interp, interpolation=\'nearest\')\n    >>> plt.show()\n\n    Chosing the optimal value of ``s`` can be a delicate task. Recommended\n    values for ``s`` depend on the accuracy of the data values.  If the user\n    has an idea of the statistical errors on the data, she can also find a\n    proper estimate for ``s``. By assuming that, if she specifies the\n    right ``s``, the interpolator will use a spline ``f(u,v)`` which exactly\n    reproduces the function underlying the data, she can evaluate\n    ``sum((r(i,j)-s(u(i),v(j)))**2)`` to find a good estimate for this ``s``.\n    For example, if she knows that the statistical errors on her\n    ``r(i,j)``-values are not greater than 0.1, she may expect that a good\n    ``s`` should have a value not larger than ``u.size * v.size * (0.1)**2``.\n\n    If nothing is known about the statistical error in ``r(i,j)``, ``s`` must\n    be determined by trial and error.  The best is then to start with a very\n    large value of ``s`` (to determine the least-squares polynomial and the\n    corresponding upper bound ``fp0`` for ``s``) and then to progressively\n    decrease the value of ``s`` (say by a factor 10 in the beginning, i.e.\n    ``s = fp0 / 10, fp0 / 100, ...``  and more carefully as the approximation\n    shows more detail) to obtain closer fits.\n\n    The interpolation results for different values of ``s`` give some insight\n    into this process:\n\n    >>> fig2 = plt.figure()\n    >>> s = [3e9, 2e9, 1e9, 1e8]\n    >>> for ii in range(len(s)):\n    ...     lut = RectSphereBivariateSpline(lats, lons, data, s=s[ii])\n    ...     data_interp = lut.ev(new_lats.ravel(),\n    ...                          new_lons.ravel()).reshape((360, 180)).T\n    ...     ax = fig2.add_subplot(2, 2, ii+1)\n    ...     ax.imshow(data_interp, interpolation=\'nearest\')\n    ...     ax.set_title("s = %g" % s[ii])\n    >>> plt.show()\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        float_62891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 34), 'float')
        # Getting the type of 'False' (line 1648)
        False_62892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 54), 'False')
        # Getting the type of 'None' (line 1648)
        None_62893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 73), 'None')
        # Getting the type of 'False' (line 1649)
        False_62894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 28), 'False')
        # Getting the type of 'False' (line 1649)
        False_62895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 45), 'False')
        defaults = [float_62891, False_62892, None_62893, False_62894, False_62895]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1648, 4, False)
        # Assigning a type to the variable 'self' (line 1649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'RectSphereBivariateSpline.__init__', ['u', 'v', 'r', 's', 'pole_continuity', 'pole_values', 'pole_exact', 'pole_flat'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['u', 'v', 'r', 's', 'pole_continuity', 'pole_values', 'pole_exact', 'pole_flat'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Call to a Name (line 1650):
        
        # Assigning a Call to a Name (line 1650):
        
        # Call to array(...): (line 1650)
        # Processing the call arguments (line 1650)
        
        # Obtaining an instance of the builtin type 'list' (line 1650)
        list_62898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1650, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1650)
        # Adding element type (line 1650)
        int_62899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1650, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1650, 24), list_62898, int_62899)
        # Adding element type (line 1650)
        int_62900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1650, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1650, 24), list_62898, int_62900)
        # Adding element type (line 1650)
        int_62901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1650, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1650, 24), list_62898, int_62901)
        
        # Processing the call keyword arguments (line 1650)
        # Getting the type of 'int' (line 1650)
        int_62902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 41), 'int', False)
        keyword_62903 = int_62902
        kwargs_62904 = {'dtype': keyword_62903}
        # Getting the type of 'np' (line 1650)
        np_62896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 15), 'np', False)
        # Obtaining the member 'array' of a type (line 1650)
        array_62897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1650, 15), np_62896, 'array')
        # Calling array(args, kwargs) (line 1650)
        array_call_result_62905 = invoke(stypy.reporting.localization.Localization(__file__, 1650, 15), array_62897, *[list_62898], **kwargs_62904)
        
        # Assigning a type to the variable 'iopt' (line 1650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1650, 8), 'iopt', array_call_result_62905)
        
        # Assigning a Call to a Name (line 1651):
        
        # Assigning a Call to a Name (line 1651):
        
        # Call to array(...): (line 1651)
        # Processing the call arguments (line 1651)
        
        # Obtaining an instance of the builtin type 'list' (line 1651)
        list_62908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1651, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1651)
        # Adding element type (line 1651)
        int_62909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1651, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1651, 24), list_62908, int_62909)
        # Adding element type (line 1651)
        int_62910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1651, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1651, 24), list_62908, int_62910)
        # Adding element type (line 1651)
        int_62911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1651, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1651, 24), list_62908, int_62911)
        # Adding element type (line 1651)
        int_62912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1651, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1651, 24), list_62908, int_62912)
        
        # Processing the call keyword arguments (line 1651)
        # Getting the type of 'int' (line 1651)
        int_62913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1651, 46), 'int', False)
        keyword_62914 = int_62913
        kwargs_62915 = {'dtype': keyword_62914}
        # Getting the type of 'np' (line 1651)
        np_62906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1651, 15), 'np', False)
        # Obtaining the member 'array' of a type (line 1651)
        array_62907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1651, 15), np_62906, 'array')
        # Calling array(args, kwargs) (line 1651)
        array_call_result_62916 = invoke(stypy.reporting.localization.Localization(__file__, 1651, 15), array_62907, *[list_62908], **kwargs_62915)
        
        # Assigning a type to the variable 'ider' (line 1651)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1651, 8), 'ider', array_call_result_62916)
        
        # Type idiom detected: calculating its left and rigth part (line 1652)
        # Getting the type of 'pole_values' (line 1652)
        pole_values_62917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 11), 'pole_values')
        # Getting the type of 'None' (line 1652)
        None_62918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 26), 'None')
        
        (may_be_62919, more_types_in_union_62920) = may_be_none(pole_values_62917, None_62918)

        if may_be_62919:

            if more_types_in_union_62920:
                # Runtime conditional SSA (line 1652)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Tuple to a Name (line 1653):
            
            # Assigning a Tuple to a Name (line 1653):
            
            # Obtaining an instance of the builtin type 'tuple' (line 1653)
            tuple_62921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1653, 27), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1653)
            # Adding element type (line 1653)
            # Getting the type of 'None' (line 1653)
            None_62922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 27), 'None')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1653, 27), tuple_62921, None_62922)
            # Adding element type (line 1653)
            # Getting the type of 'None' (line 1653)
            None_62923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 33), 'None')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1653, 27), tuple_62921, None_62923)
            
            # Assigning a type to the variable 'pole_values' (line 1653)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1653, 12), 'pole_values', tuple_62921)

            if more_types_in_union_62920:
                # Runtime conditional SSA for else branch (line 1652)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_62919) or more_types_in_union_62920):
            
            
            # Call to isinstance(...): (line 1654)
            # Processing the call arguments (line 1654)
            # Getting the type of 'pole_values' (line 1654)
            pole_values_62925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 24), 'pole_values', False)
            
            # Obtaining an instance of the builtin type 'tuple' (line 1654)
            tuple_62926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1654, 38), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1654)
            # Adding element type (line 1654)
            # Getting the type of 'float' (line 1654)
            float_62927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 38), 'float', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1654, 38), tuple_62926, float_62927)
            # Adding element type (line 1654)
            # Getting the type of 'np' (line 1654)
            np_62928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 45), 'np', False)
            # Obtaining the member 'float32' of a type (line 1654)
            float32_62929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1654, 45), np_62928, 'float32')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1654, 38), tuple_62926, float32_62929)
            # Adding element type (line 1654)
            # Getting the type of 'np' (line 1654)
            np_62930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 57), 'np', False)
            # Obtaining the member 'float64' of a type (line 1654)
            float64_62931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1654, 57), np_62930, 'float64')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1654, 38), tuple_62926, float64_62931)
            
            # Processing the call keyword arguments (line 1654)
            kwargs_62932 = {}
            # Getting the type of 'isinstance' (line 1654)
            isinstance_62924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 13), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 1654)
            isinstance_call_result_62933 = invoke(stypy.reporting.localization.Localization(__file__, 1654, 13), isinstance_62924, *[pole_values_62925, tuple_62926], **kwargs_62932)
            
            # Testing the type of an if condition (line 1654)
            if_condition_62934 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1654, 13), isinstance_call_result_62933)
            # Assigning a type to the variable 'if_condition_62934' (line 1654)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1654, 13), 'if_condition_62934', if_condition_62934)
            # SSA begins for if statement (line 1654)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Tuple to a Name (line 1655):
            
            # Assigning a Tuple to a Name (line 1655):
            
            # Obtaining an instance of the builtin type 'tuple' (line 1655)
            tuple_62935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1655, 27), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1655)
            # Adding element type (line 1655)
            # Getting the type of 'pole_values' (line 1655)
            pole_values_62936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 27), 'pole_values')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1655, 27), tuple_62935, pole_values_62936)
            # Adding element type (line 1655)
            # Getting the type of 'pole_values' (line 1655)
            pole_values_62937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 40), 'pole_values')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1655, 27), tuple_62935, pole_values_62937)
            
            # Assigning a type to the variable 'pole_values' (line 1655)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1655, 12), 'pole_values', tuple_62935)
            # SSA join for if statement (line 1654)
            module_type_store = module_type_store.join_ssa_context()
            

            if (may_be_62919 and more_types_in_union_62920):
                # SSA join for if statement (line 1652)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1656)
        # Getting the type of 'bool' (line 1656)
        bool_62938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 39), 'bool')
        # Getting the type of 'pole_continuity' (line 1656)
        pole_continuity_62939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 22), 'pole_continuity')
        
        (may_be_62940, more_types_in_union_62941) = may_be_subtype(bool_62938, pole_continuity_62939)

        if may_be_62940:

            if more_types_in_union_62941:
                # Runtime conditional SSA (line 1656)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'pole_continuity' (line 1656)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'pole_continuity', remove_not_subtype_from_union(pole_continuity_62939, bool))
            
            # Assigning a Tuple to a Name (line 1657):
            
            # Assigning a Tuple to a Name (line 1657):
            
            # Obtaining an instance of the builtin type 'tuple' (line 1657)
            tuple_62942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1657, 31), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1657)
            # Adding element type (line 1657)
            # Getting the type of 'pole_continuity' (line 1657)
            pole_continuity_62943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1657, 31), 'pole_continuity')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1657, 31), tuple_62942, pole_continuity_62943)
            # Adding element type (line 1657)
            # Getting the type of 'pole_continuity' (line 1657)
            pole_continuity_62944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1657, 48), 'pole_continuity')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1657, 31), tuple_62942, pole_continuity_62944)
            
            # Assigning a type to the variable 'pole_continuity' (line 1657)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1657, 12), 'pole_continuity', tuple_62942)

            if more_types_in_union_62941:
                # SSA join for if statement (line 1656)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1658)
        # Getting the type of 'bool' (line 1658)
        bool_62945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 34), 'bool')
        # Getting the type of 'pole_exact' (line 1658)
        pole_exact_62946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 22), 'pole_exact')
        
        (may_be_62947, more_types_in_union_62948) = may_be_subtype(bool_62945, pole_exact_62946)

        if may_be_62947:

            if more_types_in_union_62948:
                # Runtime conditional SSA (line 1658)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'pole_exact' (line 1658)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1658, 8), 'pole_exact', remove_not_subtype_from_union(pole_exact_62946, bool))
            
            # Assigning a Tuple to a Name (line 1659):
            
            # Assigning a Tuple to a Name (line 1659):
            
            # Obtaining an instance of the builtin type 'tuple' (line 1659)
            tuple_62949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1659, 26), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1659)
            # Adding element type (line 1659)
            # Getting the type of 'pole_exact' (line 1659)
            pole_exact_62950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 26), 'pole_exact')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1659, 26), tuple_62949, pole_exact_62950)
            # Adding element type (line 1659)
            # Getting the type of 'pole_exact' (line 1659)
            pole_exact_62951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 38), 'pole_exact')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1659, 26), tuple_62949, pole_exact_62951)
            
            # Assigning a type to the variable 'pole_exact' (line 1659)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1659, 12), 'pole_exact', tuple_62949)

            if more_types_in_union_62948:
                # SSA join for if statement (line 1658)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1660)
        # Getting the type of 'bool' (line 1660)
        bool_62952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 33), 'bool')
        # Getting the type of 'pole_flat' (line 1660)
        pole_flat_62953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 22), 'pole_flat')
        
        (may_be_62954, more_types_in_union_62955) = may_be_subtype(bool_62952, pole_flat_62953)

        if may_be_62954:

            if more_types_in_union_62955:
                # Runtime conditional SSA (line 1660)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'pole_flat' (line 1660)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1660, 8), 'pole_flat', remove_not_subtype_from_union(pole_flat_62953, bool))
            
            # Assigning a Tuple to a Name (line 1661):
            
            # Assigning a Tuple to a Name (line 1661):
            
            # Obtaining an instance of the builtin type 'tuple' (line 1661)
            tuple_62956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1661, 25), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 1661)
            # Adding element type (line 1661)
            # Getting the type of 'pole_flat' (line 1661)
            pole_flat_62957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 25), 'pole_flat')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1661, 25), tuple_62956, pole_flat_62957)
            # Adding element type (line 1661)
            # Getting the type of 'pole_flat' (line 1661)
            pole_flat_62958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 36), 'pole_flat')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1661, 25), tuple_62956, pole_flat_62958)
            
            # Assigning a type to the variable 'pole_flat' (line 1661)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1661, 12), 'pole_flat', tuple_62956)

            if more_types_in_union_62955:
                # SSA join for if statement (line 1660)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Tuple (line 1663):
        
        # Assigning a Subscript to a Name (line 1663):
        
        # Obtaining the type of the subscript
        int_62959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 8), 'int')
        # Getting the type of 'pole_values' (line 1663)
        pole_values_62960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 17), 'pole_values')
        # Obtaining the member '__getitem__' of a type (line 1663)
        getitem___62961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1663, 8), pole_values_62960, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1663)
        subscript_call_result_62962 = invoke(stypy.reporting.localization.Localization(__file__, 1663, 8), getitem___62961, int_62959)
        
        # Assigning a type to the variable 'tuple_var_assignment_59631' (line 1663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1663, 8), 'tuple_var_assignment_59631', subscript_call_result_62962)
        
        # Assigning a Subscript to a Name (line 1663):
        
        # Obtaining the type of the subscript
        int_62963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 8), 'int')
        # Getting the type of 'pole_values' (line 1663)
        pole_values_62964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 17), 'pole_values')
        # Obtaining the member '__getitem__' of a type (line 1663)
        getitem___62965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1663, 8), pole_values_62964, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1663)
        subscript_call_result_62966 = invoke(stypy.reporting.localization.Localization(__file__, 1663, 8), getitem___62965, int_62963)
        
        # Assigning a type to the variable 'tuple_var_assignment_59632' (line 1663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1663, 8), 'tuple_var_assignment_59632', subscript_call_result_62966)
        
        # Assigning a Name to a Name (line 1663):
        # Getting the type of 'tuple_var_assignment_59631' (line 1663)
        tuple_var_assignment_59631_62967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 8), 'tuple_var_assignment_59631')
        # Assigning a type to the variable 'r0' (line 1663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1663, 8), 'r0', tuple_var_assignment_59631_62967)
        
        # Assigning a Name to a Name (line 1663):
        # Getting the type of 'tuple_var_assignment_59632' (line 1663)
        tuple_var_assignment_59632_62968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 8), 'tuple_var_assignment_59632')
        # Assigning a type to the variable 'r1' (line 1663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1663, 12), 'r1', tuple_var_assignment_59632_62968)
        
        # Assigning a Name to a Subscript (line 1664):
        
        # Assigning a Name to a Subscript (line 1664):
        # Getting the type of 'pole_continuity' (line 1664)
        pole_continuity_62969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 19), 'pole_continuity')
        # Getting the type of 'iopt' (line 1664)
        iopt_62970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 8), 'iopt')
        int_62971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1664, 13), 'int')
        slice_62972 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1664, 8), int_62971, None, None)
        # Storing an element on a container (line 1664)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1664, 8), iopt_62970, (slice_62972, pole_continuity_62969))
        
        # Type idiom detected: calculating its left and rigth part (line 1665)
        # Getting the type of 'r0' (line 1665)
        r0_62973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 11), 'r0')
        # Getting the type of 'None' (line 1665)
        None_62974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1665, 17), 'None')
        
        (may_be_62975, more_types_in_union_62976) = may_be_none(r0_62973, None_62974)

        if may_be_62975:

            if more_types_in_union_62976:
                # Runtime conditional SSA (line 1665)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Num to a Subscript (line 1666):
            
            # Assigning a Num to a Subscript (line 1666):
            int_62977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1666, 22), 'int')
            # Getting the type of 'ider' (line 1666)
            ider_62978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1666, 12), 'ider')
            int_62979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1666, 17), 'int')
            # Storing an element on a container (line 1666)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1666, 12), ider_62978, (int_62979, int_62977))

            if more_types_in_union_62976:
                # Runtime conditional SSA for else branch (line 1665)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_62975) or more_types_in_union_62976):
            
            # Assigning a Subscript to a Subscript (line 1668):
            
            # Assigning a Subscript to a Subscript (line 1668):
            
            # Obtaining the type of the subscript
            int_62980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1668, 33), 'int')
            # Getting the type of 'pole_exact' (line 1668)
            pole_exact_62981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1668, 22), 'pole_exact')
            # Obtaining the member '__getitem__' of a type (line 1668)
            getitem___62982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1668, 22), pole_exact_62981, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1668)
            subscript_call_result_62983 = invoke(stypy.reporting.localization.Localization(__file__, 1668, 22), getitem___62982, int_62980)
            
            # Getting the type of 'ider' (line 1668)
            ider_62984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1668, 12), 'ider')
            int_62985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1668, 17), 'int')
            # Storing an element on a container (line 1668)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1668, 12), ider_62984, (int_62985, subscript_call_result_62983))

            if (may_be_62975 and more_types_in_union_62976):
                # SSA join for if statement (line 1665)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1670)
        # Getting the type of 'r1' (line 1670)
        r1_62986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1670, 11), 'r1')
        # Getting the type of 'None' (line 1670)
        None_62987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1670, 17), 'None')
        
        (may_be_62988, more_types_in_union_62989) = may_be_none(r1_62986, None_62987)

        if may_be_62988:

            if more_types_in_union_62989:
                # Runtime conditional SSA (line 1670)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Num to a Subscript (line 1671):
            
            # Assigning a Num to a Subscript (line 1671):
            int_62990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1671, 22), 'int')
            # Getting the type of 'ider' (line 1671)
            ider_62991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1671, 12), 'ider')
            int_62992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1671, 17), 'int')
            # Storing an element on a container (line 1671)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1671, 12), ider_62991, (int_62992, int_62990))

            if more_types_in_union_62989:
                # Runtime conditional SSA for else branch (line 1670)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_62988) or more_types_in_union_62989):
            
            # Assigning a Subscript to a Subscript (line 1673):
            
            # Assigning a Subscript to a Subscript (line 1673):
            
            # Obtaining the type of the subscript
            int_62993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1673, 33), 'int')
            # Getting the type of 'pole_exact' (line 1673)
            pole_exact_62994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1673, 22), 'pole_exact')
            # Obtaining the member '__getitem__' of a type (line 1673)
            getitem___62995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1673, 22), pole_exact_62994, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1673)
            subscript_call_result_62996 = invoke(stypy.reporting.localization.Localization(__file__, 1673, 22), getitem___62995, int_62993)
            
            # Getting the type of 'ider' (line 1673)
            ider_62997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1673, 12), 'ider')
            int_62998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1673, 17), 'int')
            # Storing an element on a container (line 1673)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1673, 12), ider_62997, (int_62998, subscript_call_result_62996))

            if (may_be_62988 and more_types_in_union_62989):
                # SSA join for if statement (line 1670)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Tuple (line 1675):
        
        # Assigning a Subscript to a Name (line 1675):
        
        # Obtaining the type of the subscript
        int_62999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 8), 'int')
        # Getting the type of 'pole_flat' (line 1675)
        pole_flat_63000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1675, 27), 'pole_flat')
        # Obtaining the member '__getitem__' of a type (line 1675)
        getitem___63001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1675, 8), pole_flat_63000, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1675)
        subscript_call_result_63002 = invoke(stypy.reporting.localization.Localization(__file__, 1675, 8), getitem___63001, int_62999)
        
        # Assigning a type to the variable 'tuple_var_assignment_59633' (line 1675)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1675, 8), 'tuple_var_assignment_59633', subscript_call_result_63002)
        
        # Assigning a Subscript to a Name (line 1675):
        
        # Obtaining the type of the subscript
        int_63003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 8), 'int')
        # Getting the type of 'pole_flat' (line 1675)
        pole_flat_63004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1675, 27), 'pole_flat')
        # Obtaining the member '__getitem__' of a type (line 1675)
        getitem___63005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1675, 8), pole_flat_63004, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1675)
        subscript_call_result_63006 = invoke(stypy.reporting.localization.Localization(__file__, 1675, 8), getitem___63005, int_63003)
        
        # Assigning a type to the variable 'tuple_var_assignment_59634' (line 1675)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1675, 8), 'tuple_var_assignment_59634', subscript_call_result_63006)
        
        # Assigning a Name to a Subscript (line 1675):
        # Getting the type of 'tuple_var_assignment_59633' (line 1675)
        tuple_var_assignment_59633_63007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1675, 8), 'tuple_var_assignment_59633')
        # Getting the type of 'ider' (line 1675)
        ider_63008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1675, 8), 'ider')
        int_63009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 13), 'int')
        # Storing an element on a container (line 1675)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1675, 8), ider_63008, (int_63009, tuple_var_assignment_59633_63007))
        
        # Assigning a Name to a Subscript (line 1675):
        # Getting the type of 'tuple_var_assignment_59634' (line 1675)
        tuple_var_assignment_59634_63010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1675, 8), 'tuple_var_assignment_59634')
        # Getting the type of 'ider' (line 1675)
        ider_63011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1675, 17), 'ider')
        int_63012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1675, 22), 'int')
        # Storing an element on a container (line 1675)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1675, 17), ider_63011, (int_63012, tuple_var_assignment_59634_63010))
        
        # Assigning a Tuple to a Tuple (line 1677):
        
        # Assigning a Call to a Name (line 1677):
        
        # Call to ravel(...): (line 1677)
        # Processing the call arguments (line 1677)
        # Getting the type of 'u' (line 1677)
        u_63015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 24), 'u', False)
        # Processing the call keyword arguments (line 1677)
        kwargs_63016 = {}
        # Getting the type of 'np' (line 1677)
        np_63013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 15), 'np', False)
        # Obtaining the member 'ravel' of a type (line 1677)
        ravel_63014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1677, 15), np_63013, 'ravel')
        # Calling ravel(args, kwargs) (line 1677)
        ravel_call_result_63017 = invoke(stypy.reporting.localization.Localization(__file__, 1677, 15), ravel_63014, *[u_63015], **kwargs_63016)
        
        # Assigning a type to the variable 'tuple_assignment_59635' (line 1677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1677, 8), 'tuple_assignment_59635', ravel_call_result_63017)
        
        # Assigning a Call to a Name (line 1677):
        
        # Call to ravel(...): (line 1677)
        # Processing the call arguments (line 1677)
        # Getting the type of 'v' (line 1677)
        v_63020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 37), 'v', False)
        # Processing the call keyword arguments (line 1677)
        kwargs_63021 = {}
        # Getting the type of 'np' (line 1677)
        np_63018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 28), 'np', False)
        # Obtaining the member 'ravel' of a type (line 1677)
        ravel_63019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1677, 28), np_63018, 'ravel')
        # Calling ravel(args, kwargs) (line 1677)
        ravel_call_result_63022 = invoke(stypy.reporting.localization.Localization(__file__, 1677, 28), ravel_63019, *[v_63020], **kwargs_63021)
        
        # Assigning a type to the variable 'tuple_assignment_59636' (line 1677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1677, 8), 'tuple_assignment_59636', ravel_call_result_63022)
        
        # Assigning a Name to a Name (line 1677):
        # Getting the type of 'tuple_assignment_59635' (line 1677)
        tuple_assignment_59635_63023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 8), 'tuple_assignment_59635')
        # Assigning a type to the variable 'u' (line 1677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1677, 8), 'u', tuple_assignment_59635_63023)
        
        # Assigning a Name to a Name (line 1677):
        # Getting the type of 'tuple_assignment_59636' (line 1677)
        tuple_assignment_59636_63024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1677, 8), 'tuple_assignment_59636')
        # Assigning a type to the variable 'v' (line 1677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1677, 11), 'v', tuple_assignment_59636_63024)
        
        
        
        # Call to all(...): (line 1678)
        # Processing the call arguments (line 1678)
        
        
        # Call to diff(...): (line 1678)
        # Processing the call arguments (line 1678)
        # Getting the type of 'u' (line 1678)
        u_63029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1678, 30), 'u', False)
        # Processing the call keyword arguments (line 1678)
        kwargs_63030 = {}
        # Getting the type of 'np' (line 1678)
        np_63027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1678, 22), 'np', False)
        # Obtaining the member 'diff' of a type (line 1678)
        diff_63028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1678, 22), np_63027, 'diff')
        # Calling diff(args, kwargs) (line 1678)
        diff_call_result_63031 = invoke(stypy.reporting.localization.Localization(__file__, 1678, 22), diff_63028, *[u_63029], **kwargs_63030)
        
        float_63032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1678, 35), 'float')
        # Applying the binary operator '>' (line 1678)
        result_gt_63033 = python_operator(stypy.reporting.localization.Localization(__file__, 1678, 22), '>', diff_call_result_63031, float_63032)
        
        # Processing the call keyword arguments (line 1678)
        kwargs_63034 = {}
        # Getting the type of 'np' (line 1678)
        np_63025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1678, 15), 'np', False)
        # Obtaining the member 'all' of a type (line 1678)
        all_63026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1678, 15), np_63025, 'all')
        # Calling all(args, kwargs) (line 1678)
        all_call_result_63035 = invoke(stypy.reporting.localization.Localization(__file__, 1678, 15), all_63026, *[result_gt_63033], **kwargs_63034)
        
        # Applying the 'not' unary operator (line 1678)
        result_not__63036 = python_operator(stypy.reporting.localization.Localization(__file__, 1678, 11), 'not', all_call_result_63035)
        
        # Testing the type of an if condition (line 1678)
        if_condition_63037 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1678, 8), result_not__63036)
        # Assigning a type to the variable 'if_condition_63037' (line 1678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1678, 8), 'if_condition_63037', if_condition_63037)
        # SSA begins for if statement (line 1678)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1679)
        # Processing the call arguments (line 1679)
        str_63039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1679, 29), 'str', 'u must be strictly increasing')
        # Processing the call keyword arguments (line 1679)
        kwargs_63040 = {}
        # Getting the type of 'ValueError' (line 1679)
        ValueError_63038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1679, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1679)
        ValueError_call_result_63041 = invoke(stypy.reporting.localization.Localization(__file__, 1679, 18), ValueError_63038, *[str_63039], **kwargs_63040)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1679, 12), ValueError_call_result_63041, 'raise parameter', BaseException)
        # SSA join for if statement (line 1678)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to all(...): (line 1680)
        # Processing the call arguments (line 1680)
        
        
        # Call to diff(...): (line 1680)
        # Processing the call arguments (line 1680)
        # Getting the type of 'v' (line 1680)
        v_63046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1680, 30), 'v', False)
        # Processing the call keyword arguments (line 1680)
        kwargs_63047 = {}
        # Getting the type of 'np' (line 1680)
        np_63044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1680, 22), 'np', False)
        # Obtaining the member 'diff' of a type (line 1680)
        diff_63045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1680, 22), np_63044, 'diff')
        # Calling diff(args, kwargs) (line 1680)
        diff_call_result_63048 = invoke(stypy.reporting.localization.Localization(__file__, 1680, 22), diff_63045, *[v_63046], **kwargs_63047)
        
        float_63049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1680, 35), 'float')
        # Applying the binary operator '>' (line 1680)
        result_gt_63050 = python_operator(stypy.reporting.localization.Localization(__file__, 1680, 22), '>', diff_call_result_63048, float_63049)
        
        # Processing the call keyword arguments (line 1680)
        kwargs_63051 = {}
        # Getting the type of 'np' (line 1680)
        np_63042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1680, 15), 'np', False)
        # Obtaining the member 'all' of a type (line 1680)
        all_63043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1680, 15), np_63042, 'all')
        # Calling all(args, kwargs) (line 1680)
        all_call_result_63052 = invoke(stypy.reporting.localization.Localization(__file__, 1680, 15), all_63043, *[result_gt_63050], **kwargs_63051)
        
        # Applying the 'not' unary operator (line 1680)
        result_not__63053 = python_operator(stypy.reporting.localization.Localization(__file__, 1680, 11), 'not', all_call_result_63052)
        
        # Testing the type of an if condition (line 1680)
        if_condition_63054 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1680, 8), result_not__63053)
        # Assigning a type to the variable 'if_condition_63054' (line 1680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1680, 8), 'if_condition_63054', if_condition_63054)
        # SSA begins for if statement (line 1680)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1681)
        # Processing the call arguments (line 1681)
        str_63056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1681, 29), 'str', 'v must be strictly increasing')
        # Processing the call keyword arguments (line 1681)
        kwargs_63057 = {}
        # Getting the type of 'ValueError' (line 1681)
        ValueError_63055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1681, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1681)
        ValueError_call_result_63058 = invoke(stypy.reporting.localization.Localization(__file__, 1681, 18), ValueError_63055, *[str_63056], **kwargs_63057)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1681, 12), ValueError_call_result_63058, 'raise parameter', BaseException)
        # SSA join for if statement (line 1680)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Getting the type of 'u' (line 1683)
        u_63059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 15), 'u')
        # Obtaining the member 'size' of a type (line 1683)
        size_63060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1683, 15), u_63059, 'size')
        
        # Obtaining the type of the subscript
        int_63061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1683, 33), 'int')
        # Getting the type of 'r' (line 1683)
        r_63062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1683, 25), 'r')
        # Obtaining the member 'shape' of a type (line 1683)
        shape_63063 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1683, 25), r_63062, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1683)
        getitem___63064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1683, 25), shape_63063, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1683)
        subscript_call_result_63065 = invoke(stypy.reporting.localization.Localization(__file__, 1683, 25), getitem___63064, int_63061)
        
        # Applying the binary operator '==' (line 1683)
        result_eq_63066 = python_operator(stypy.reporting.localization.Localization(__file__, 1683, 15), '==', size_63060, subscript_call_result_63065)
        
        # Applying the 'not' unary operator (line 1683)
        result_not__63067 = python_operator(stypy.reporting.localization.Localization(__file__, 1683, 11), 'not', result_eq_63066)
        
        # Testing the type of an if condition (line 1683)
        if_condition_63068 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1683, 8), result_not__63067)
        # Assigning a type to the variable 'if_condition_63068' (line 1683)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1683, 8), 'if_condition_63068', if_condition_63068)
        # SSA begins for if statement (line 1683)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1684)
        # Processing the call arguments (line 1684)
        str_63070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1684, 29), 'str', 'u dimension of r must have same number of elements as u')
        # Processing the call keyword arguments (line 1684)
        kwargs_63071 = {}
        # Getting the type of 'ValueError' (line 1684)
        ValueError_63069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1684, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1684)
        ValueError_call_result_63072 = invoke(stypy.reporting.localization.Localization(__file__, 1684, 18), ValueError_63069, *[str_63070], **kwargs_63071)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1684, 12), ValueError_call_result_63072, 'raise parameter', BaseException)
        # SSA join for if statement (line 1683)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Getting the type of 'v' (line 1686)
        v_63073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 15), 'v')
        # Obtaining the member 'size' of a type (line 1686)
        size_63074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1686, 15), v_63073, 'size')
        
        # Obtaining the type of the subscript
        int_63075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1686, 33), 'int')
        # Getting the type of 'r' (line 1686)
        r_63076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1686, 25), 'r')
        # Obtaining the member 'shape' of a type (line 1686)
        shape_63077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1686, 25), r_63076, 'shape')
        # Obtaining the member '__getitem__' of a type (line 1686)
        getitem___63078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1686, 25), shape_63077, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1686)
        subscript_call_result_63079 = invoke(stypy.reporting.localization.Localization(__file__, 1686, 25), getitem___63078, int_63075)
        
        # Applying the binary operator '==' (line 1686)
        result_eq_63080 = python_operator(stypy.reporting.localization.Localization(__file__, 1686, 15), '==', size_63074, subscript_call_result_63079)
        
        # Applying the 'not' unary operator (line 1686)
        result_not__63081 = python_operator(stypy.reporting.localization.Localization(__file__, 1686, 11), 'not', result_eq_63080)
        
        # Testing the type of an if condition (line 1686)
        if_condition_63082 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1686, 8), result_not__63081)
        # Assigning a type to the variable 'if_condition_63082' (line 1686)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1686, 8), 'if_condition_63082', if_condition_63082)
        # SSA begins for if statement (line 1686)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1687)
        # Processing the call arguments (line 1687)
        str_63084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1687, 29), 'str', 'v dimension of r must have same number of elements as v')
        # Processing the call keyword arguments (line 1687)
        kwargs_63085 = {}
        # Getting the type of 'ValueError' (line 1687)
        ValueError_63083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1687, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1687)
        ValueError_call_result_63086 = invoke(stypy.reporting.localization.Localization(__file__, 1687, 18), ValueError_63083, *[str_63084], **kwargs_63085)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1687, 12), ValueError_call_result_63086, 'raise parameter', BaseException)
        # SSA join for if statement (line 1686)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        int_63087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1690, 27), 'int')
        # Getting the type of 'pole_continuity' (line 1690)
        pole_continuity_63088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 11), 'pole_continuity')
        # Obtaining the member '__getitem__' of a type (line 1690)
        getitem___63089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 11), pole_continuity_63088, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1690)
        subscript_call_result_63090 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 11), getitem___63089, int_63087)
        
        # Getting the type of 'False' (line 1690)
        False_63091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 33), 'False')
        # Applying the binary operator 'is' (line 1690)
        result_is__63092 = python_operator(stypy.reporting.localization.Localization(__file__, 1690, 11), 'is', subscript_call_result_63090, False_63091)
        
        
        
        # Obtaining the type of the subscript
        int_63093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1690, 53), 'int')
        # Getting the type of 'pole_flat' (line 1690)
        pole_flat_63094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 43), 'pole_flat')
        # Obtaining the member '__getitem__' of a type (line 1690)
        getitem___63095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 43), pole_flat_63094, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1690)
        subscript_call_result_63096 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 43), getitem___63095, int_63093)
        
        # Getting the type of 'True' (line 1690)
        True_63097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 59), 'True')
        # Applying the binary operator 'is' (line 1690)
        result_is__63098 = python_operator(stypy.reporting.localization.Localization(__file__, 1690, 43), 'is', subscript_call_result_63096, True_63097)
        
        # Applying the binary operator 'and' (line 1690)
        result_and_keyword_63099 = python_operator(stypy.reporting.localization.Localization(__file__, 1690, 11), 'and', result_is__63092, result_is__63098)
        
        # Testing the type of an if condition (line 1690)
        if_condition_63100 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1690, 8), result_and_keyword_63099)
        # Assigning a type to the variable 'if_condition_63100' (line 1690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 8), 'if_condition_63100', if_condition_63100)
        # SSA begins for if statement (line 1690)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1691)
        # Processing the call arguments (line 1691)
        str_63102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 29), 'str', 'if pole_continuity is False, so must be pole_flat')
        # Processing the call keyword arguments (line 1691)
        kwargs_63103 = {}
        # Getting the type of 'ValueError' (line 1691)
        ValueError_63101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1691)
        ValueError_call_result_63104 = invoke(stypy.reporting.localization.Localization(__file__, 1691, 18), ValueError_63101, *[str_63102], **kwargs_63103)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1691, 12), ValueError_call_result_63104, 'raise parameter', BaseException)
        # SSA join for if statement (line 1690)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        int_63105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1693, 27), 'int')
        # Getting the type of 'pole_continuity' (line 1693)
        pole_continuity_63106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 11), 'pole_continuity')
        # Obtaining the member '__getitem__' of a type (line 1693)
        getitem___63107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 11), pole_continuity_63106, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1693)
        subscript_call_result_63108 = invoke(stypy.reporting.localization.Localization(__file__, 1693, 11), getitem___63107, int_63105)
        
        # Getting the type of 'False' (line 1693)
        False_63109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 33), 'False')
        # Applying the binary operator 'is' (line 1693)
        result_is__63110 = python_operator(stypy.reporting.localization.Localization(__file__, 1693, 11), 'is', subscript_call_result_63108, False_63109)
        
        
        
        # Obtaining the type of the subscript
        int_63111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1693, 53), 'int')
        # Getting the type of 'pole_flat' (line 1693)
        pole_flat_63112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 43), 'pole_flat')
        # Obtaining the member '__getitem__' of a type (line 1693)
        getitem___63113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 43), pole_flat_63112, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1693)
        subscript_call_result_63114 = invoke(stypy.reporting.localization.Localization(__file__, 1693, 43), getitem___63113, int_63111)
        
        # Getting the type of 'True' (line 1693)
        True_63115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 59), 'True')
        # Applying the binary operator 'is' (line 1693)
        result_is__63116 = python_operator(stypy.reporting.localization.Localization(__file__, 1693, 43), 'is', subscript_call_result_63114, True_63115)
        
        # Applying the binary operator 'and' (line 1693)
        result_and_keyword_63117 = python_operator(stypy.reporting.localization.Localization(__file__, 1693, 11), 'and', result_is__63110, result_is__63116)
        
        # Testing the type of an if condition (line 1693)
        if_condition_63118 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1693, 8), result_and_keyword_63117)
        # Assigning a type to the variable 'if_condition_63118' (line 1693)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1693, 8), 'if_condition_63118', if_condition_63118)
        # SSA begins for if statement (line 1693)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1694)
        # Processing the call arguments (line 1694)
        str_63120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1694, 29), 'str', 'if pole_continuity is False, so must be pole_flat')
        # Processing the call keyword arguments (line 1694)
        kwargs_63121 = {}
        # Getting the type of 'ValueError' (line 1694)
        ValueError_63119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1694)
        ValueError_call_result_63122 = invoke(stypy.reporting.localization.Localization(__file__, 1694, 18), ValueError_63119, *[str_63120], **kwargs_63121)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1694, 12), ValueError_call_result_63122, 'raise parameter', BaseException)
        # SSA join for if statement (line 1693)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1697):
        
        # Assigning a Call to a Name (line 1697):
        
        # Call to ravel(...): (line 1697)
        # Processing the call arguments (line 1697)
        # Getting the type of 'r' (line 1697)
        r_63125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 21), 'r', False)
        # Processing the call keyword arguments (line 1697)
        kwargs_63126 = {}
        # Getting the type of 'np' (line 1697)
        np_63123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 12), 'np', False)
        # Obtaining the member 'ravel' of a type (line 1697)
        ravel_63124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1697, 12), np_63123, 'ravel')
        # Calling ravel(args, kwargs) (line 1697)
        ravel_call_result_63127 = invoke(stypy.reporting.localization.Localization(__file__, 1697, 12), ravel_63124, *[r_63125], **kwargs_63126)
        
        # Assigning a type to the variable 'r' (line 1697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1697, 8), 'r', ravel_call_result_63127)
        
        # Assigning a Call to a Tuple (line 1698):
        
        # Assigning a Subscript to a Name (line 1698):
        
        # Obtaining the type of the subscript
        int_63128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 8), 'int')
        
        # Call to regrid_smth_spher(...): (line 1698)
        # Processing the call arguments (line 1698)
        # Getting the type of 'iopt' (line 1698)
        iopt_63131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 64), 'iopt', False)
        # Getting the type of 'ider' (line 1698)
        ider_63132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 70), 'ider', False)
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63135 = {}
        # Getting the type of 'u' (line 1699)
        u_63133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 39), 'u', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 39), u_63133, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63136 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 39), copy_63134, *[], **kwargs_63135)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63139 = {}
        # Getting the type of 'v' (line 1699)
        v_63137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 49), 'v', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 49), v_63137, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63140 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 49), copy_63138, *[], **kwargs_63139)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63143 = {}
        # Getting the type of 'r' (line 1699)
        r_63141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 59), 'r', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 59), r_63141, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63144 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 59), copy_63142, *[], **kwargs_63143)
        
        # Getting the type of 'r0' (line 1699)
        r0_63145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 69), 'r0', False)
        # Getting the type of 'r1' (line 1699)
        r1_63146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 73), 'r1', False)
        # Getting the type of 's' (line 1699)
        s_63147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 77), 's', False)
        # Processing the call keyword arguments (line 1698)
        kwargs_63148 = {}
        # Getting the type of 'dfitpack' (line 1698)
        dfitpack_63129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth_spher' of a type (line 1698)
        regrid_smth_spher_63130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 37), dfitpack_63129, 'regrid_smth_spher')
        # Calling regrid_smth_spher(args, kwargs) (line 1698)
        regrid_smth_spher_call_result_63149 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 37), regrid_smth_spher_63130, *[iopt_63131, ider_63132, copy_call_result_63136, copy_call_result_63140, copy_call_result_63144, r0_63145, r1_63146, s_63147], **kwargs_63148)
        
        # Obtaining the member '__getitem__' of a type (line 1698)
        getitem___63150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 8), regrid_smth_spher_call_result_63149, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1698)
        subscript_call_result_63151 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 8), getitem___63150, int_63128)
        
        # Assigning a type to the variable 'tuple_var_assignment_59637' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59637', subscript_call_result_63151)
        
        # Assigning a Subscript to a Name (line 1698):
        
        # Obtaining the type of the subscript
        int_63152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 8), 'int')
        
        # Call to regrid_smth_spher(...): (line 1698)
        # Processing the call arguments (line 1698)
        # Getting the type of 'iopt' (line 1698)
        iopt_63155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 64), 'iopt', False)
        # Getting the type of 'ider' (line 1698)
        ider_63156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 70), 'ider', False)
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63159 = {}
        # Getting the type of 'u' (line 1699)
        u_63157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 39), 'u', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 39), u_63157, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63160 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 39), copy_63158, *[], **kwargs_63159)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63163 = {}
        # Getting the type of 'v' (line 1699)
        v_63161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 49), 'v', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 49), v_63161, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63164 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 49), copy_63162, *[], **kwargs_63163)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63167 = {}
        # Getting the type of 'r' (line 1699)
        r_63165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 59), 'r', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 59), r_63165, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63168 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 59), copy_63166, *[], **kwargs_63167)
        
        # Getting the type of 'r0' (line 1699)
        r0_63169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 69), 'r0', False)
        # Getting the type of 'r1' (line 1699)
        r1_63170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 73), 'r1', False)
        # Getting the type of 's' (line 1699)
        s_63171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 77), 's', False)
        # Processing the call keyword arguments (line 1698)
        kwargs_63172 = {}
        # Getting the type of 'dfitpack' (line 1698)
        dfitpack_63153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth_spher' of a type (line 1698)
        regrid_smth_spher_63154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 37), dfitpack_63153, 'regrid_smth_spher')
        # Calling regrid_smth_spher(args, kwargs) (line 1698)
        regrid_smth_spher_call_result_63173 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 37), regrid_smth_spher_63154, *[iopt_63155, ider_63156, copy_call_result_63160, copy_call_result_63164, copy_call_result_63168, r0_63169, r1_63170, s_63171], **kwargs_63172)
        
        # Obtaining the member '__getitem__' of a type (line 1698)
        getitem___63174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 8), regrid_smth_spher_call_result_63173, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1698)
        subscript_call_result_63175 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 8), getitem___63174, int_63152)
        
        # Assigning a type to the variable 'tuple_var_assignment_59638' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59638', subscript_call_result_63175)
        
        # Assigning a Subscript to a Name (line 1698):
        
        # Obtaining the type of the subscript
        int_63176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 8), 'int')
        
        # Call to regrid_smth_spher(...): (line 1698)
        # Processing the call arguments (line 1698)
        # Getting the type of 'iopt' (line 1698)
        iopt_63179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 64), 'iopt', False)
        # Getting the type of 'ider' (line 1698)
        ider_63180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 70), 'ider', False)
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63183 = {}
        # Getting the type of 'u' (line 1699)
        u_63181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 39), 'u', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 39), u_63181, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63184 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 39), copy_63182, *[], **kwargs_63183)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63187 = {}
        # Getting the type of 'v' (line 1699)
        v_63185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 49), 'v', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 49), v_63185, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63188 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 49), copy_63186, *[], **kwargs_63187)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63191 = {}
        # Getting the type of 'r' (line 1699)
        r_63189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 59), 'r', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 59), r_63189, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63192 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 59), copy_63190, *[], **kwargs_63191)
        
        # Getting the type of 'r0' (line 1699)
        r0_63193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 69), 'r0', False)
        # Getting the type of 'r1' (line 1699)
        r1_63194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 73), 'r1', False)
        # Getting the type of 's' (line 1699)
        s_63195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 77), 's', False)
        # Processing the call keyword arguments (line 1698)
        kwargs_63196 = {}
        # Getting the type of 'dfitpack' (line 1698)
        dfitpack_63177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth_spher' of a type (line 1698)
        regrid_smth_spher_63178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 37), dfitpack_63177, 'regrid_smth_spher')
        # Calling regrid_smth_spher(args, kwargs) (line 1698)
        regrid_smth_spher_call_result_63197 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 37), regrid_smth_spher_63178, *[iopt_63179, ider_63180, copy_call_result_63184, copy_call_result_63188, copy_call_result_63192, r0_63193, r1_63194, s_63195], **kwargs_63196)
        
        # Obtaining the member '__getitem__' of a type (line 1698)
        getitem___63198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 8), regrid_smth_spher_call_result_63197, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1698)
        subscript_call_result_63199 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 8), getitem___63198, int_63176)
        
        # Assigning a type to the variable 'tuple_var_assignment_59639' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59639', subscript_call_result_63199)
        
        # Assigning a Subscript to a Name (line 1698):
        
        # Obtaining the type of the subscript
        int_63200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 8), 'int')
        
        # Call to regrid_smth_spher(...): (line 1698)
        # Processing the call arguments (line 1698)
        # Getting the type of 'iopt' (line 1698)
        iopt_63203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 64), 'iopt', False)
        # Getting the type of 'ider' (line 1698)
        ider_63204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 70), 'ider', False)
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63207 = {}
        # Getting the type of 'u' (line 1699)
        u_63205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 39), 'u', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 39), u_63205, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63208 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 39), copy_63206, *[], **kwargs_63207)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63211 = {}
        # Getting the type of 'v' (line 1699)
        v_63209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 49), 'v', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 49), v_63209, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63212 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 49), copy_63210, *[], **kwargs_63211)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63215 = {}
        # Getting the type of 'r' (line 1699)
        r_63213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 59), 'r', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 59), r_63213, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63216 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 59), copy_63214, *[], **kwargs_63215)
        
        # Getting the type of 'r0' (line 1699)
        r0_63217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 69), 'r0', False)
        # Getting the type of 'r1' (line 1699)
        r1_63218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 73), 'r1', False)
        # Getting the type of 's' (line 1699)
        s_63219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 77), 's', False)
        # Processing the call keyword arguments (line 1698)
        kwargs_63220 = {}
        # Getting the type of 'dfitpack' (line 1698)
        dfitpack_63201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth_spher' of a type (line 1698)
        regrid_smth_spher_63202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 37), dfitpack_63201, 'regrid_smth_spher')
        # Calling regrid_smth_spher(args, kwargs) (line 1698)
        regrid_smth_spher_call_result_63221 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 37), regrid_smth_spher_63202, *[iopt_63203, ider_63204, copy_call_result_63208, copy_call_result_63212, copy_call_result_63216, r0_63217, r1_63218, s_63219], **kwargs_63220)
        
        # Obtaining the member '__getitem__' of a type (line 1698)
        getitem___63222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 8), regrid_smth_spher_call_result_63221, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1698)
        subscript_call_result_63223 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 8), getitem___63222, int_63200)
        
        # Assigning a type to the variable 'tuple_var_assignment_59640' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59640', subscript_call_result_63223)
        
        # Assigning a Subscript to a Name (line 1698):
        
        # Obtaining the type of the subscript
        int_63224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 8), 'int')
        
        # Call to regrid_smth_spher(...): (line 1698)
        # Processing the call arguments (line 1698)
        # Getting the type of 'iopt' (line 1698)
        iopt_63227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 64), 'iopt', False)
        # Getting the type of 'ider' (line 1698)
        ider_63228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 70), 'ider', False)
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63231 = {}
        # Getting the type of 'u' (line 1699)
        u_63229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 39), 'u', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 39), u_63229, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63232 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 39), copy_63230, *[], **kwargs_63231)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63235 = {}
        # Getting the type of 'v' (line 1699)
        v_63233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 49), 'v', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 49), v_63233, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63236 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 49), copy_63234, *[], **kwargs_63235)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63239 = {}
        # Getting the type of 'r' (line 1699)
        r_63237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 59), 'r', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 59), r_63237, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63240 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 59), copy_63238, *[], **kwargs_63239)
        
        # Getting the type of 'r0' (line 1699)
        r0_63241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 69), 'r0', False)
        # Getting the type of 'r1' (line 1699)
        r1_63242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 73), 'r1', False)
        # Getting the type of 's' (line 1699)
        s_63243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 77), 's', False)
        # Processing the call keyword arguments (line 1698)
        kwargs_63244 = {}
        # Getting the type of 'dfitpack' (line 1698)
        dfitpack_63225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth_spher' of a type (line 1698)
        regrid_smth_spher_63226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 37), dfitpack_63225, 'regrid_smth_spher')
        # Calling regrid_smth_spher(args, kwargs) (line 1698)
        regrid_smth_spher_call_result_63245 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 37), regrid_smth_spher_63226, *[iopt_63227, ider_63228, copy_call_result_63232, copy_call_result_63236, copy_call_result_63240, r0_63241, r1_63242, s_63243], **kwargs_63244)
        
        # Obtaining the member '__getitem__' of a type (line 1698)
        getitem___63246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 8), regrid_smth_spher_call_result_63245, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1698)
        subscript_call_result_63247 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 8), getitem___63246, int_63224)
        
        # Assigning a type to the variable 'tuple_var_assignment_59641' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59641', subscript_call_result_63247)
        
        # Assigning a Subscript to a Name (line 1698):
        
        # Obtaining the type of the subscript
        int_63248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 8), 'int')
        
        # Call to regrid_smth_spher(...): (line 1698)
        # Processing the call arguments (line 1698)
        # Getting the type of 'iopt' (line 1698)
        iopt_63251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 64), 'iopt', False)
        # Getting the type of 'ider' (line 1698)
        ider_63252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 70), 'ider', False)
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63255 = {}
        # Getting the type of 'u' (line 1699)
        u_63253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 39), 'u', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 39), u_63253, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63256 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 39), copy_63254, *[], **kwargs_63255)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63259 = {}
        # Getting the type of 'v' (line 1699)
        v_63257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 49), 'v', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 49), v_63257, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63260 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 49), copy_63258, *[], **kwargs_63259)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63263 = {}
        # Getting the type of 'r' (line 1699)
        r_63261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 59), 'r', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 59), r_63261, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63264 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 59), copy_63262, *[], **kwargs_63263)
        
        # Getting the type of 'r0' (line 1699)
        r0_63265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 69), 'r0', False)
        # Getting the type of 'r1' (line 1699)
        r1_63266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 73), 'r1', False)
        # Getting the type of 's' (line 1699)
        s_63267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 77), 's', False)
        # Processing the call keyword arguments (line 1698)
        kwargs_63268 = {}
        # Getting the type of 'dfitpack' (line 1698)
        dfitpack_63249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth_spher' of a type (line 1698)
        regrid_smth_spher_63250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 37), dfitpack_63249, 'regrid_smth_spher')
        # Calling regrid_smth_spher(args, kwargs) (line 1698)
        regrid_smth_spher_call_result_63269 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 37), regrid_smth_spher_63250, *[iopt_63251, ider_63252, copy_call_result_63256, copy_call_result_63260, copy_call_result_63264, r0_63265, r1_63266, s_63267], **kwargs_63268)
        
        # Obtaining the member '__getitem__' of a type (line 1698)
        getitem___63270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 8), regrid_smth_spher_call_result_63269, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1698)
        subscript_call_result_63271 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 8), getitem___63270, int_63248)
        
        # Assigning a type to the variable 'tuple_var_assignment_59642' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59642', subscript_call_result_63271)
        
        # Assigning a Subscript to a Name (line 1698):
        
        # Obtaining the type of the subscript
        int_63272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1698, 8), 'int')
        
        # Call to regrid_smth_spher(...): (line 1698)
        # Processing the call arguments (line 1698)
        # Getting the type of 'iopt' (line 1698)
        iopt_63275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 64), 'iopt', False)
        # Getting the type of 'ider' (line 1698)
        ider_63276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 70), 'ider', False)
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63279 = {}
        # Getting the type of 'u' (line 1699)
        u_63277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 39), 'u', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 39), u_63277, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63280 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 39), copy_63278, *[], **kwargs_63279)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63283 = {}
        # Getting the type of 'v' (line 1699)
        v_63281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 49), 'v', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 49), v_63281, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63284 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 49), copy_63282, *[], **kwargs_63283)
        
        
        # Call to copy(...): (line 1699)
        # Processing the call keyword arguments (line 1699)
        kwargs_63287 = {}
        # Getting the type of 'r' (line 1699)
        r_63285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 59), 'r', False)
        # Obtaining the member 'copy' of a type (line 1699)
        copy_63286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 59), r_63285, 'copy')
        # Calling copy(args, kwargs) (line 1699)
        copy_call_result_63288 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 59), copy_63286, *[], **kwargs_63287)
        
        # Getting the type of 'r0' (line 1699)
        r0_63289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 69), 'r0', False)
        # Getting the type of 'r1' (line 1699)
        r1_63290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 73), 'r1', False)
        # Getting the type of 's' (line 1699)
        s_63291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 77), 's', False)
        # Processing the call keyword arguments (line 1698)
        kwargs_63292 = {}
        # Getting the type of 'dfitpack' (line 1698)
        dfitpack_63273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 37), 'dfitpack', False)
        # Obtaining the member 'regrid_smth_spher' of a type (line 1698)
        regrid_smth_spher_63274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 37), dfitpack_63273, 'regrid_smth_spher')
        # Calling regrid_smth_spher(args, kwargs) (line 1698)
        regrid_smth_spher_call_result_63293 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 37), regrid_smth_spher_63274, *[iopt_63275, ider_63276, copy_call_result_63280, copy_call_result_63284, copy_call_result_63288, r0_63289, r1_63290, s_63291], **kwargs_63292)
        
        # Obtaining the member '__getitem__' of a type (line 1698)
        getitem___63294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1698, 8), regrid_smth_spher_call_result_63293, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1698)
        subscript_call_result_63295 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 8), getitem___63294, int_63272)
        
        # Assigning a type to the variable 'tuple_var_assignment_59643' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59643', subscript_call_result_63295)
        
        # Assigning a Name to a Name (line 1698):
        # Getting the type of 'tuple_var_assignment_59637' (line 1698)
        tuple_var_assignment_59637_63296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59637')
        # Assigning a type to the variable 'nu' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'nu', tuple_var_assignment_59637_63296)
        
        # Assigning a Name to a Name (line 1698):
        # Getting the type of 'tuple_var_assignment_59638' (line 1698)
        tuple_var_assignment_59638_63297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59638')
        # Assigning a type to the variable 'tu' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 12), 'tu', tuple_var_assignment_59638_63297)
        
        # Assigning a Name to a Name (line 1698):
        # Getting the type of 'tuple_var_assignment_59639' (line 1698)
        tuple_var_assignment_59639_63298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59639')
        # Assigning a type to the variable 'nv' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 16), 'nv', tuple_var_assignment_59639_63298)
        
        # Assigning a Name to a Name (line 1698):
        # Getting the type of 'tuple_var_assignment_59640' (line 1698)
        tuple_var_assignment_59640_63299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59640')
        # Assigning a type to the variable 'tv' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 20), 'tv', tuple_var_assignment_59640_63299)
        
        # Assigning a Name to a Name (line 1698):
        # Getting the type of 'tuple_var_assignment_59641' (line 1698)
        tuple_var_assignment_59641_63300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59641')
        # Assigning a type to the variable 'c' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 24), 'c', tuple_var_assignment_59641_63300)
        
        # Assigning a Name to a Name (line 1698):
        # Getting the type of 'tuple_var_assignment_59642' (line 1698)
        tuple_var_assignment_59642_63301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59642')
        # Assigning a type to the variable 'fp' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 27), 'fp', tuple_var_assignment_59642_63301)
        
        # Assigning a Name to a Name (line 1698):
        # Getting the type of 'tuple_var_assignment_59643' (line 1698)
        tuple_var_assignment_59643_63302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'tuple_var_assignment_59643')
        # Assigning a type to the variable 'ier' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 31), 'ier', tuple_var_assignment_59643_63302)
        
        
        # Getting the type of 'ier' (line 1701)
        ier_63303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1701, 11), 'ier')
        
        # Obtaining an instance of the builtin type 'list' (line 1701)
        list_63304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1701, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1701)
        # Adding element type (line 1701)
        int_63305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1701, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1701, 22), list_63304, int_63305)
        # Adding element type (line 1701)
        int_63306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1701, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1701, 22), list_63304, int_63306)
        # Adding element type (line 1701)
        int_63307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1701, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1701, 22), list_63304, int_63307)
        
        # Applying the binary operator 'notin' (line 1701)
        result_contains_63308 = python_operator(stypy.reporting.localization.Localization(__file__, 1701, 11), 'notin', ier_63303, list_63304)
        
        # Testing the type of an if condition (line 1701)
        if_condition_63309 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1701, 8), result_contains_63308)
        # Assigning a type to the variable 'if_condition_63309' (line 1701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1701, 8), 'if_condition_63309', if_condition_63309)
        # SSA begins for if statement (line 1701)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1702):
        
        # Assigning a Call to a Name (line 1702):
        
        # Call to get(...): (line 1702)
        # Processing the call arguments (line 1702)
        # Getting the type of 'ier' (line 1702)
        ier_63312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 38), 'ier', False)
        str_63313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1702, 43), 'str', 'ier=%s')
        # Getting the type of 'ier' (line 1702)
        ier_63314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 55), 'ier', False)
        # Applying the binary operator '%' (line 1702)
        result_mod_63315 = python_operator(stypy.reporting.localization.Localization(__file__, 1702, 43), '%', str_63313, ier_63314)
        
        # Processing the call keyword arguments (line 1702)
        kwargs_63316 = {}
        # Getting the type of '_spfit_messages' (line 1702)
        _spfit_messages_63310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 18), '_spfit_messages', False)
        # Obtaining the member 'get' of a type (line 1702)
        get_63311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1702, 18), _spfit_messages_63310, 'get')
        # Calling get(args, kwargs) (line 1702)
        get_call_result_63317 = invoke(stypy.reporting.localization.Localization(__file__, 1702, 18), get_63311, *[ier_63312, result_mod_63315], **kwargs_63316)
        
        # Assigning a type to the variable 'msg' (line 1702)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1702, 12), 'msg', get_call_result_63317)
        
        # Call to ValueError(...): (line 1703)
        # Processing the call arguments (line 1703)
        # Getting the type of 'msg' (line 1703)
        msg_63319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 29), 'msg', False)
        # Processing the call keyword arguments (line 1703)
        kwargs_63320 = {}
        # Getting the type of 'ValueError' (line 1703)
        ValueError_63318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1703)
        ValueError_call_result_63321 = invoke(stypy.reporting.localization.Localization(__file__, 1703, 18), ValueError_63318, *[msg_63319], **kwargs_63320)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1703, 12), ValueError_call_result_63321, 'raise parameter', BaseException)
        # SSA join for if statement (line 1701)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Attribute (line 1705):
        
        # Assigning a Name to a Attribute (line 1705):
        # Getting the type of 'fp' (line 1705)
        fp_63322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 18), 'fp')
        # Getting the type of 'self' (line 1705)
        self_63323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 8), 'self')
        # Setting the type of the member 'fp' of a type (line 1705)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1705, 8), self_63323, 'fp', fp_63322)
        
        # Assigning a Tuple to a Attribute (line 1706):
        
        # Assigning a Tuple to a Attribute (line 1706):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1706)
        tuple_63324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1706, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1706)
        # Adding element type (line 1706)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nu' (line 1706)
        nu_63325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 23), 'nu')
        slice_63326 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1706, 19), None, nu_63325, None)
        # Getting the type of 'tu' (line 1706)
        tu_63327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 19), 'tu')
        # Obtaining the member '__getitem__' of a type (line 1706)
        getitem___63328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1706, 19), tu_63327, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1706)
        subscript_call_result_63329 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 19), getitem___63328, slice_63326)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1706, 19), tuple_63324, subscript_call_result_63329)
        # Adding element type (line 1706)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nv' (line 1706)
        nv_63330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 32), 'nv')
        slice_63331 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1706, 28), None, nv_63330, None)
        # Getting the type of 'tv' (line 1706)
        tv_63332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 28), 'tv')
        # Obtaining the member '__getitem__' of a type (line 1706)
        getitem___63333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1706, 28), tv_63332, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1706)
        subscript_call_result_63334 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 28), getitem___63333, slice_63331)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1706, 19), tuple_63324, subscript_call_result_63334)
        # Adding element type (line 1706)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nu' (line 1706)
        nu_63335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 41), 'nu')
        int_63336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1706, 46), 'int')
        # Applying the binary operator '-' (line 1706)
        result_sub_63337 = python_operator(stypy.reporting.localization.Localization(__file__, 1706, 41), '-', nu_63335, int_63336)
        
        # Getting the type of 'nv' (line 1706)
        nv_63338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 52), 'nv')
        int_63339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1706, 55), 'int')
        # Applying the binary operator '-' (line 1706)
        result_sub_63340 = python_operator(stypy.reporting.localization.Localization(__file__, 1706, 52), '-', nv_63338, int_63339)
        
        # Applying the binary operator '*' (line 1706)
        result_mul_63341 = python_operator(stypy.reporting.localization.Localization(__file__, 1706, 40), '*', result_sub_63337, result_sub_63340)
        
        slice_63342 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1706, 37), None, result_mul_63341, None)
        # Getting the type of 'c' (line 1706)
        c_63343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 37), 'c')
        # Obtaining the member '__getitem__' of a type (line 1706)
        getitem___63344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1706, 37), c_63343, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1706)
        subscript_call_result_63345 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 37), getitem___63344, slice_63342)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1706, 19), tuple_63324, subscript_call_result_63345)
        
        # Getting the type of 'self' (line 1706)
        self_63346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 8), 'self')
        # Setting the type of the member 'tck' of a type (line 1706)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1706, 8), self_63346, 'tck', tuple_63324)
        
        # Assigning a Tuple to a Attribute (line 1707):
        
        # Assigning a Tuple to a Attribute (line 1707):
        
        # Obtaining an instance of the builtin type 'tuple' (line 1707)
        tuple_63347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1707)
        # Adding element type (line 1707)
        int_63348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1707, 24), tuple_63347, int_63348)
        # Adding element type (line 1707)
        int_63349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1707, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1707, 24), tuple_63347, int_63349)
        
        # Getting the type of 'self' (line 1707)
        self_63350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 8), 'self')
        # Setting the type of the member 'degrees' of a type (line 1707)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1707, 8), self_63350, 'degrees', tuple_63347)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'RectSphereBivariateSpline' (line 1516)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1516, 0), 'RectSphereBivariateSpline', RectSphereBivariateSpline)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
