
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''
2: Unit tests for optimization routines from minpack.py.
3: '''
4: from __future__ import division, print_function, absolute_import
5: 
6: from numpy.testing import (assert_, assert_almost_equal, assert_array_equal,
7:         assert_array_almost_equal, assert_allclose)
8: from pytest import raises as assert_raises
9: import numpy as np
10: from numpy import array, float64, matrix
11: 
12: from scipy import optimize
13: from scipy.special import lambertw
14: from scipy.optimize.minpack import leastsq, curve_fit, fixed_point
15: from scipy._lib._numpy_compat import _assert_warns, suppress_warnings
16: from scipy.optimize import OptimizeWarning
17: 
18: 
19: class ReturnShape(object):
20:     '''This class exists to create a callable that does not have a '__name__' attribute.
21: 
22:     __init__ takes the argument 'shape', which should be a tuple of ints.  When an instance
23:     it called with a single argument 'x', it returns numpy.ones(shape).
24:     '''
25:     def __init__(self, shape):
26:         self.shape = shape
27: 
28:     def __call__(self, x):
29:         return np.ones(self.shape)
30: 
31: 
32: def dummy_func(x, shape):
33:     '''A function that returns an array of ones of the given shape.
34:     `x` is ignored.
35:     '''
36:     return np.ones(shape)
37: 
38: # Function and jacobian for tests of solvers for systems of nonlinear
39: # equations
40: 
41: 
42: def pressure_network(flow_rates, Qtot, k):
43:     '''Evaluate non-linear equation system representing
44:     the pressures and flows in a system of n parallel pipes::
45: 
46:         f_i = P_i - P_0, for i = 1..n
47:         f_0 = sum(Q_i) - Qtot
48: 
49:     Where Q_i is the flow rate in pipe i and P_i the pressure in that pipe.
50:     Pressure is modeled as a P=kQ**2 where k is a valve coefficient and
51:     Q is the flow rate.
52: 
53:     Parameters
54:     ----------
55:     flow_rates : float
56:         A 1D array of n flow rates [kg/s].
57:     k : float
58:         A 1D array of n valve coefficients [1/kg m].
59:     Qtot : float
60:         A scalar, the total input flow rate [kg/s].
61: 
62:     Returns
63:     -------
64:     F : float
65:         A 1D array, F[i] == f_i.
66: 
67:     '''
68:     P = k * flow_rates**2
69:     F = np.hstack((P[1:] - P[0], flow_rates.sum() - Qtot))
70:     return F
71: 
72: 
73: def pressure_network_jacobian(flow_rates, Qtot, k):
74:     '''Return the jacobian of the equation system F(flow_rates)
75:     computed by `pressure_network` with respect to
76:     *flow_rates*. See `pressure_network` for the detailed
77:     description of parrameters.
78: 
79:     Returns
80:     -------
81:     jac : float
82:         *n* by *n* matrix ``df_i/dQ_i`` where ``n = len(flow_rates)``
83:         and *f_i* and *Q_i* are described in the doc for `pressure_network`
84:     '''
85:     n = len(flow_rates)
86:     pdiff = np.diag(flow_rates[1:] * 2 * k[1:] - 2 * flow_rates[0] * k[0])
87: 
88:     jac = np.empty((n, n))
89:     jac[:n-1, :n-1] = pdiff * 0
90:     jac[:n-1, n-1] = 0
91:     jac[n-1, :] = np.ones(n)
92: 
93:     return jac
94: 
95: 
96: def pressure_network_fun_and_grad(flow_rates, Qtot, k):
97:     return (pressure_network(flow_rates, Qtot, k),
98:             pressure_network_jacobian(flow_rates, Qtot, k))
99: 
100: 
101: class TestFSolve(object):
102:     def test_pressure_network_no_gradient(self):
103:         # fsolve without gradient, equal pipes -> equal flows.
104:         k = np.ones(4) * 0.5
105:         Qtot = 4
106:         initial_guess = array([2., 0., 2., 0.])
107:         final_flows, info, ier, mesg = optimize.fsolve(
108:             pressure_network, initial_guess, args=(Qtot, k),
109:             full_output=True)
110:         assert_array_almost_equal(final_flows, np.ones(4))
111:         assert_(ier == 1, mesg)
112: 
113:     def test_pressure_network_with_gradient(self):
114:         # fsolve with gradient, equal pipes -> equal flows
115:         k = np.ones(4) * 0.5
116:         Qtot = 4
117:         initial_guess = array([2., 0., 2., 0.])
118:         final_flows = optimize.fsolve(
119:             pressure_network, initial_guess, args=(Qtot, k),
120:             fprime=pressure_network_jacobian)
121:         assert_array_almost_equal(final_flows, np.ones(4))
122: 
123:     def test_wrong_shape_func_callable(self):
124:         func = ReturnShape(1)
125:         # x0 is a list of two elements, but func will return an array with
126:         # length 1, so this should result in a TypeError.
127:         x0 = [1.5, 2.0]
128:         assert_raises(TypeError, optimize.fsolve, func, x0)
129: 
130:     def test_wrong_shape_func_function(self):
131:         # x0 is a list of two elements, but func will return an array with
132:         # length 1, so this should result in a TypeError.
133:         x0 = [1.5, 2.0]
134:         assert_raises(TypeError, optimize.fsolve, dummy_func, x0, args=((1,),))
135: 
136:     def test_wrong_shape_fprime_callable(self):
137:         func = ReturnShape(1)
138:         deriv_func = ReturnShape((2,2))
139:         assert_raises(TypeError, optimize.fsolve, func, x0=[0,1], fprime=deriv_func)
140: 
141:     def test_wrong_shape_fprime_function(self):
142:         func = lambda x: dummy_func(x, (2,))
143:         deriv_func = lambda x: dummy_func(x, (3,3))
144:         assert_raises(TypeError, optimize.fsolve, func, x0=[0,1], fprime=deriv_func)
145: 
146:     def test_float32(self):
147:         func = lambda x: np.array([x[0] - 100, x[1] - 1000], dtype=np.float32)**2
148:         p = optimize.fsolve(func, np.array([1, 1], np.float32))
149:         assert_allclose(func(p), [0, 0], atol=1e-3)
150: 
151: 
152: class TestRootHybr(object):
153:     def test_pressure_network_no_gradient(self):
154:         # root/hybr without gradient, equal pipes -> equal flows
155:         k = np.ones(4) * 0.5
156:         Qtot = 4
157:         initial_guess = array([2., 0., 2., 0.])
158:         final_flows = optimize.root(pressure_network, initial_guess,
159:                                     method='hybr', args=(Qtot, k)).x
160:         assert_array_almost_equal(final_flows, np.ones(4))
161: 
162:     def test_pressure_network_with_gradient(self):
163:         # root/hybr with gradient, equal pipes -> equal flows
164:         k = np.ones(4) * 0.5
165:         Qtot = 4
166:         initial_guess = matrix([2., 0., 2., 0.])
167:         final_flows = optimize.root(pressure_network, initial_guess,
168:                                     args=(Qtot, k), method='hybr',
169:                                     jac=pressure_network_jacobian).x
170:         assert_array_almost_equal(final_flows, np.ones(4))
171: 
172:     def test_pressure_network_with_gradient_combined(self):
173:         # root/hybr with gradient and function combined, equal pipes -> equal
174:         # flows
175:         k = np.ones(4) * 0.5
176:         Qtot = 4
177:         initial_guess = array([2., 0., 2., 0.])
178:         final_flows = optimize.root(pressure_network_fun_and_grad,
179:                                     initial_guess, args=(Qtot, k),
180:                                     method='hybr', jac=True).x
181:         assert_array_almost_equal(final_flows, np.ones(4))
182: 
183: 
184: class TestRootLM(object):
185:     def test_pressure_network_no_gradient(self):
186:         # root/lm without gradient, equal pipes -> equal flows
187:         k = np.ones(4) * 0.5
188:         Qtot = 4
189:         initial_guess = array([2., 0., 2., 0.])
190:         final_flows = optimize.root(pressure_network, initial_guess,
191:                                     method='lm', args=(Qtot, k)).x
192:         assert_array_almost_equal(final_flows, np.ones(4))
193: 
194: 
195: class TestLeastSq(object):
196:     def setup_method(self):
197:         x = np.linspace(0, 10, 40)
198:         a,b,c = 3.1, 42, -304.2
199:         self.x = x
200:         self.abc = a,b,c
201:         y_true = a*x**2 + b*x + c
202:         np.random.seed(0)
203:         self.y_meas = y_true + 0.01*np.random.standard_normal(y_true.shape)
204: 
205:     def residuals(self, p, y, x):
206:         a,b,c = p
207:         err = y-(a*x**2 + b*x + c)
208:         return err
209: 
210:     def test_basic(self):
211:         p0 = array([0,0,0])
212:         params_fit, ier = leastsq(self.residuals, p0,
213:                                   args=(self.y_meas, self.x))
214:         assert_(ier in (1,2,3,4), 'solution not found (ier=%d)' % ier)
215:         # low precision due to random
216:         assert_array_almost_equal(params_fit, self.abc, decimal=2)
217: 
218:     def test_full_output(self):
219:         p0 = matrix([0,0,0])
220:         full_output = leastsq(self.residuals, p0,
221:                               args=(self.y_meas, self.x),
222:                               full_output=True)
223:         params_fit, cov_x, infodict, mesg, ier = full_output
224:         assert_(ier in (1,2,3,4), 'solution not found: %s' % mesg)
225: 
226:     def test_input_untouched(self):
227:         p0 = array([0,0,0],dtype=float64)
228:         p0_copy = array(p0, copy=True)
229:         full_output = leastsq(self.residuals, p0,
230:                               args=(self.y_meas, self.x),
231:                               full_output=True)
232:         params_fit, cov_x, infodict, mesg, ier = full_output
233:         assert_(ier in (1,2,3,4), 'solution not found: %s' % mesg)
234:         assert_array_equal(p0, p0_copy)
235: 
236:     def test_wrong_shape_func_callable(self):
237:         func = ReturnShape(1)
238:         # x0 is a list of two elements, but func will return an array with
239:         # length 1, so this should result in a TypeError.
240:         x0 = [1.5, 2.0]
241:         assert_raises(TypeError, optimize.leastsq, func, x0)
242: 
243:     def test_wrong_shape_func_function(self):
244:         # x0 is a list of two elements, but func will return an array with
245:         # length 1, so this should result in a TypeError.
246:         x0 = [1.5, 2.0]
247:         assert_raises(TypeError, optimize.leastsq, dummy_func, x0, args=((1,),))
248: 
249:     def test_wrong_shape_Dfun_callable(self):
250:         func = ReturnShape(1)
251:         deriv_func = ReturnShape((2,2))
252:         assert_raises(TypeError, optimize.leastsq, func, x0=[0,1], Dfun=deriv_func)
253: 
254:     def test_wrong_shape_Dfun_function(self):
255:         func = lambda x: dummy_func(x, (2,))
256:         deriv_func = lambda x: dummy_func(x, (3,3))
257:         assert_raises(TypeError, optimize.leastsq, func, x0=[0,1], Dfun=deriv_func)
258: 
259:     def test_float32(self):
260:         # Regression test for gh-1447
261:         def func(p,x,y):
262:             q = p[0]*np.exp(-(x-p[1])**2/(2.0*p[2]**2))+p[3]
263:             return q - y
264: 
265:         x = np.array([1.475,1.429,1.409,1.419,1.455,1.519,1.472, 1.368,1.286,
266:                        1.231], dtype=np.float32)
267:         y = np.array([0.0168,0.0193,0.0211,0.0202,0.0171,0.0151,0.0185,0.0258,
268:                       0.034,0.0396], dtype=np.float32)
269:         p0 = np.array([1.0,1.0,1.0,1.0])
270:         p1, success = optimize.leastsq(func, p0, args=(x,y))
271: 
272:         assert_(success in [1,2,3,4])
273:         assert_((func(p1,x,y)**2).sum() < 1e-4 * (func(p0,x,y)**2).sum())
274: 
275: 
276: class TestCurveFit(object):
277:     def setup_method(self):
278:         self.y = array([1.0, 3.2, 9.5, 13.7])
279:         self.x = array([1.0, 2.0, 3.0, 4.0])
280: 
281:     def test_one_argument(self):
282:         def func(x,a):
283:             return x**a
284:         popt, pcov = curve_fit(func, self.x, self.y)
285:         assert_(len(popt) == 1)
286:         assert_(pcov.shape == (1,1))
287:         assert_almost_equal(popt[0], 1.9149, decimal=4)
288:         assert_almost_equal(pcov[0,0], 0.0016, decimal=4)
289: 
290:         # Test if we get the same with full_output. Regression test for #1415.
291:         res = curve_fit(func, self.x, self.y, full_output=1)
292:         (popt2, pcov2, infodict, errmsg, ier) = res
293:         assert_array_almost_equal(popt, popt2)
294: 
295:     def test_two_argument(self):
296:         def func(x, a, b):
297:             return b*x**a
298:         popt, pcov = curve_fit(func, self.x, self.y)
299:         assert_(len(popt) == 2)
300:         assert_(pcov.shape == (2,2))
301:         assert_array_almost_equal(popt, [1.7989, 1.1642], decimal=4)
302:         assert_array_almost_equal(pcov, [[0.0852, -0.1260], [-0.1260, 0.1912]],
303:                                   decimal=4)
304: 
305:     def test_func_is_classmethod(self):
306:         class test_self(object):
307:             '''This class tests if curve_fit passes the correct number of
308:                arguments when the model function is a class instance method.
309:             '''
310:             def func(self, x, a, b):
311:                 return b * x**a
312: 
313:         test_self_inst = test_self()
314:         popt, pcov = curve_fit(test_self_inst.func, self.x, self.y)
315:         assert_(pcov.shape == (2,2))
316:         assert_array_almost_equal(popt, [1.7989, 1.1642], decimal=4)
317:         assert_array_almost_equal(pcov, [[0.0852, -0.1260], [-0.1260, 0.1912]],
318:                                   decimal=4)
319: 
320:     def test_regression_2639(self):
321:         # This test fails if epsfcn in leastsq is too large.
322:         x = [574.14200000000005, 574.154, 574.16499999999996,
323:              574.17700000000002, 574.18799999999999, 574.19899999999996,
324:              574.21100000000001, 574.22199999999998, 574.23400000000004,
325:              574.245]
326:         y = [859.0, 997.0, 1699.0, 2604.0, 2013.0, 1964.0, 2435.0,
327:              1550.0, 949.0, 841.0]
328:         guess = [574.1861428571428, 574.2155714285715, 1302.0, 1302.0,
329:                  0.0035019999999983615, 859.0]
330:         good = [5.74177150e+02, 5.74209188e+02, 1.74187044e+03, 1.58646166e+03,
331:                 1.0068462e-02, 8.57450661e+02]
332: 
333:         def f_double_gauss(x, x0, x1, A0, A1, sigma, c):
334:             return (A0*np.exp(-(x-x0)**2/(2.*sigma**2))
335:                     + A1*np.exp(-(x-x1)**2/(2.*sigma**2)) + c)
336:         popt, pcov = curve_fit(f_double_gauss, x, y, guess, maxfev=10000)
337:         assert_allclose(popt, good, rtol=1e-5)
338: 
339:     def test_pcov(self):
340:         xdata = np.array([0, 1, 2, 3, 4, 5])
341:         ydata = np.array([1, 1, 5, 7, 8, 12])
342:         sigma = np.array([1, 2, 1, 2, 1, 2])
343: 
344:         def f(x, a, b):
345:             return a*x + b
346: 
347:         for method in ['lm', 'trf', 'dogbox']:
348:             popt, pcov = curve_fit(f, xdata, ydata, p0=[2, 0], sigma=sigma,
349:                                    method=method)
350:             perr_scaled = np.sqrt(np.diag(pcov))
351:             assert_allclose(perr_scaled, [0.20659803, 0.57204404], rtol=1e-3)
352: 
353:             popt, pcov = curve_fit(f, xdata, ydata, p0=[2, 0], sigma=3*sigma,
354:                                    method=method)
355:             perr_scaled = np.sqrt(np.diag(pcov))
356:             assert_allclose(perr_scaled, [0.20659803, 0.57204404], rtol=1e-3)
357: 
358:             popt, pcov = curve_fit(f, xdata, ydata, p0=[2, 0], sigma=sigma,
359:                                    absolute_sigma=True, method=method)
360:             perr = np.sqrt(np.diag(pcov))
361:             assert_allclose(perr, [0.30714756, 0.85045308], rtol=1e-3)
362: 
363:             popt, pcov = curve_fit(f, xdata, ydata, p0=[2, 0], sigma=3*sigma,
364:                                    absolute_sigma=True, method=method)
365:             perr = np.sqrt(np.diag(pcov))
366:             assert_allclose(perr, [3*0.30714756, 3*0.85045308], rtol=1e-3)
367: 
368:         # infinite variances
369: 
370:         def f_flat(x, a, b):
371:             return a*x
372: 
373:         pcov_expected = np.array([np.inf]*4).reshape(2, 2)
374: 
375:         with suppress_warnings() as sup:
376:             sup.filter(OptimizeWarning,
377:                        "Covariance of the parameters could not be estimated")
378:             popt, pcov = curve_fit(f_flat, xdata, ydata, p0=[2, 0], sigma=sigma)
379:             popt1, pcov1 = curve_fit(f, xdata[:2], ydata[:2], p0=[2, 0])
380: 
381:         assert_(pcov.shape == (2, 2))
382:         assert_array_equal(pcov, pcov_expected)
383: 
384:         assert_(pcov1.shape == (2, 2))
385:         assert_array_equal(pcov1, pcov_expected)
386: 
387:     def test_array_like(self):
388:         # Test sequence input.  Regression test for gh-3037.
389:         def f_linear(x, a, b):
390:             return a*x + b
391: 
392:         x = [1, 2, 3, 4]
393:         y = [3, 5, 7, 9]
394:         assert_allclose(curve_fit(f_linear, x, y)[0], [2, 1], atol=1e-10)
395: 
396:     def test_indeterminate_covariance(self):
397:         # Test that a warning is returned when pcov is indeterminate
398:         xdata = np.array([1, 2, 3, 4, 5, 6])
399:         ydata = np.array([1, 2, 3, 4, 5.5, 6])
400:         _assert_warns(OptimizeWarning, curve_fit,
401:                       lambda x, a, b: a*x, xdata, ydata)
402: 
403:     def test_NaN_handling(self):
404:         # Test for correct handling of NaNs in input data: gh-3422
405: 
406:         # create input with NaNs
407:         xdata = np.array([1, np.nan, 3])
408:         ydata = np.array([1, 2, 3])
409: 
410:         assert_raises(ValueError, curve_fit,
411:                       lambda x, a, b: a*x + b, xdata, ydata)
412:         assert_raises(ValueError, curve_fit,
413:                       lambda x, a, b: a*x + b, ydata, xdata)
414: 
415:         assert_raises(ValueError, curve_fit, lambda x, a, b: a*x + b,
416:                       xdata, ydata, **{"check_finite": True})
417: 
418:     def test_method_argument(self):
419:         def f(x, a, b):
420:             return a * np.exp(-b*x)
421: 
422:         xdata = np.linspace(0, 1, 11)
423:         ydata = f(xdata, 2., 2.)
424: 
425:         for method in ['trf', 'dogbox', 'lm', None]:
426:             popt, pcov = curve_fit(f, xdata, ydata, method=method)
427:             assert_allclose(popt, [2., 2.])
428: 
429:         assert_raises(ValueError, curve_fit, f, xdata, ydata, method='unknown')
430: 
431:     def test_bounds(self):
432:         def f(x, a, b):
433:             return a * np.exp(-b*x)
434: 
435:         xdata = np.linspace(0, 1, 11)
436:         ydata = f(xdata, 2., 2.)
437: 
438:         # The minimum w/out bounds is at [2., 2.],
439:         # and with bounds it's at [1.5, smth].
440:         bounds = ([1., 0], [1.5, 3.])
441:         for method in [None, 'trf', 'dogbox']:
442:             popt, pcov = curve_fit(f, xdata, ydata, bounds=bounds,
443:                                    method=method)
444:             assert_allclose(popt[0], 1.5)
445: 
446:         # With bounds, the starting estimate is feasible.
447:         popt, pcov = curve_fit(f, xdata, ydata, method='trf',
448:                                bounds=([0., 0], [0.6, np.inf]))
449:         assert_allclose(popt[0], 0.6)
450: 
451:         # method='lm' doesn't support bounds.
452:         assert_raises(ValueError, curve_fit, f, xdata, ydata, bounds=bounds,
453:                       method='lm')
454: 
455:     def test_bounds_p0(self):
456:         # This test is for issue #5719. The problem was that an initial guess
457:         # was ignored when 'trf' or 'dogbox' methods were invoked.
458:         def f(x, a):
459:             return np.sin(x + a)
460: 
461:         xdata = np.linspace(-2*np.pi, 2*np.pi, 40)
462:         ydata = np.sin(xdata)
463:         bounds = (-3 * np.pi, 3 * np.pi)
464:         for method in ['trf', 'dogbox']:
465:             popt_1, _ = curve_fit(f, xdata, ydata, p0=2.1*np.pi)
466:             popt_2, _ = curve_fit(f, xdata, ydata, p0=2.1*np.pi,
467:                                   bounds=bounds, method=method)
468: 
469:             # If the initial guess is ignored, then popt_2 would be close 0.
470:             assert_allclose(popt_1, popt_2)
471: 
472:     def test_jac(self):
473:         # Test that Jacobian callable is handled correctly and
474:         # weighted if sigma is provided.
475:         def f(x, a, b):
476:             return a * np.exp(-b*x)
477: 
478:         def jac(x, a, b):
479:             e = np.exp(-b*x)
480:             return np.vstack((e, -a * x * e)).T
481: 
482:         xdata = np.linspace(0, 1, 11)
483:         ydata = f(xdata, 2., 2.)
484: 
485:         # Test numerical options for least_squares backend.
486:         for method in ['trf', 'dogbox']:
487:             for scheme in ['2-point', '3-point', 'cs']:
488:                 popt, pcov = curve_fit(f, xdata, ydata, jac=scheme,
489:                                        method=method)
490:                 assert_allclose(popt, [2, 2])
491: 
492:         # Test the analytic option.
493:         for method in ['lm', 'trf', 'dogbox']:
494:             popt, pcov = curve_fit(f, xdata, ydata, method=method, jac=jac)
495:             assert_allclose(popt, [2, 2])
496: 
497:         # Now add an outlier and provide sigma.
498:         ydata[5] = 100
499:         sigma = np.ones(xdata.shape[0])
500:         sigma[5] = 200
501:         for method in ['lm', 'trf', 'dogbox']:
502:             popt, pcov = curve_fit(f, xdata, ydata, sigma=sigma, method=method,
503:                                    jac=jac)
504:             # Still the optimization process is influenced somehow,
505:             # have to set rtol=1e-3.
506:             assert_allclose(popt, [2, 2], rtol=1e-3)
507: 
508:     def test_maxfev_and_bounds(self):
509:         # gh-6340: with no bounds, curve_fit accepts parameter maxfev (via leastsq)
510:         # but with bounds, the parameter is `max_nfev` (via least_squares)
511:         x = np.arange(0, 10)
512:         y = 2*x
513:         popt1, _ = curve_fit(lambda x,p: p*x, x, y, bounds=(0, 3), maxfev=100)
514:         popt2, _ = curve_fit(lambda x,p: p*x, x, y, bounds=(0, 3), max_nfev=100)
515: 
516:         assert_allclose(popt1, 2, atol=1e-14)
517:         assert_allclose(popt2, 2, atol=1e-14)
518: 
519:     def test_curvefit_simplecovariance(self):
520: 
521:         def func(x, a, b):
522:             return a * np.exp(-b*x)
523: 
524:         def jac(x, a, b):
525:             e = np.exp(-b*x)
526:             return np.vstack((e, -a * x * e)).T
527: 
528:         np.random.seed(0)
529:         xdata = np.linspace(0, 4, 50)
530:         y = func(xdata, 2.5, 1.3)
531:         ydata = y + 0.2 * np.random.normal(size=len(xdata))
532: 
533:         sigma = np.zeros(len(xdata)) + 0.2
534:         covar = np.diag(sigma**2)
535: 
536:         for jac1, jac2 in [(jac, jac), (None, None)]:
537:             for absolute_sigma in [False, True]:
538:                 popt1, pcov1 = curve_fit(func, xdata, ydata, sigma=sigma,
539:                         jac=jac1, absolute_sigma=absolute_sigma)
540:                 popt2, pcov2 = curve_fit(func, xdata, ydata, sigma=covar,
541:                         jac=jac2, absolute_sigma=absolute_sigma)
542: 
543:                 assert_allclose(popt1, popt2, atol=1e-14)
544:                 assert_allclose(pcov1, pcov2, atol=1e-14)
545: 
546:     def test_curvefit_covariance(self):
547: 
548:         def funcp(x, a, b):
549:             rotn = np.array([[1./np.sqrt(2), -1./np.sqrt(2), 0], [1./np.sqrt(2), 1./np.sqrt(2), 0], [0, 0, 1.0]])
550:             return rotn.dot(a * np.exp(-b*x))
551: 
552:         def jacp(x, a, b):
553:             rotn = np.array([[1./np.sqrt(2), -1./np.sqrt(2), 0], [1./np.sqrt(2), 1./np.sqrt(2), 0], [0, 0, 1.0]])
554:             e = np.exp(-b*x)
555:             return rotn.dot(np.vstack((e, -a * x * e)).T)
556: 
557:         def func(x, a, b):
558:             return a * np.exp(-b*x)
559: 
560:         def jac(x, a, b):
561:             e = np.exp(-b*x)
562:             return np.vstack((e, -a * x * e)).T
563: 
564:         np.random.seed(0)
565:         xdata = np.arange(1, 4)
566:         y = func(xdata, 2.5, 1.0)
567:         ydata = y + 0.2 * np.random.normal(size=len(xdata))
568:         sigma = np.zeros(len(xdata)) + 0.2
569:         covar = np.diag(sigma**2)
570:         # Get a rotation matrix, and obtain ydatap = R ydata
571:         # Chisq = ydata^T C^{-1} ydata
572:         #       = ydata^T R^T R C^{-1} R^T R ydata
573:         #       = ydatap^T Cp^{-1} ydatap
574:         # Cp^{-1} = R C^{-1} R^T
575:         # Cp      = R C R^T, since R^-1 = R^T
576:         rotn = np.array([[1./np.sqrt(2), -1./np.sqrt(2), 0], [1./np.sqrt(2), 1./np.sqrt(2), 0], [0, 0, 1.0]])
577:         ydatap = rotn.dot(ydata)
578:         covarp = rotn.dot(covar).dot(rotn.T)
579: 
580:         for jac1, jac2 in [(jac, jacp), (None, None)]:
581:             for absolute_sigma in [False, True]:
582:                 popt1, pcov1 = curve_fit(func, xdata, ydata, sigma=sigma,
583:                         jac=jac1, absolute_sigma=absolute_sigma)
584:                 popt2, pcov2 = curve_fit(funcp, xdata, ydatap, sigma=covarp,
585:                         jac=jac2, absolute_sigma=absolute_sigma)
586: 
587:                 assert_allclose(popt1, popt2, atol=1e-14)
588:                 assert_allclose(pcov1, pcov2, atol=1e-14)
589: 
590: 
591: class TestFixedPoint(object):
592: 
593:     def test_scalar_trivial(self):
594:         # f(x) = 2x; fixed point should be x=0
595:         def func(x):
596:             return 2.0*x
597:         x0 = 1.0
598:         x = fixed_point(func, x0)
599:         assert_almost_equal(x, 0.0)
600: 
601:     def test_scalar_basic1(self):
602:         # f(x) = x**2; x0=1.05; fixed point should be x=1
603:         def func(x):
604:             return x**2
605:         x0 = 1.05
606:         x = fixed_point(func, x0)
607:         assert_almost_equal(x, 1.0)
608: 
609:     def test_scalar_basic2(self):
610:         # f(x) = x**0.5; x0=1.05; fixed point should be x=1
611:         def func(x):
612:             return x**0.5
613:         x0 = 1.05
614:         x = fixed_point(func, x0)
615:         assert_almost_equal(x, 1.0)
616: 
617:     def test_array_trivial(self):
618:         def func(x):
619:             return 2.0*x
620:         x0 = [0.3, 0.15]
621:         olderr = np.seterr(all='ignore')
622:         try:
623:             x = fixed_point(func, x0)
624:         finally:
625:             np.seterr(**olderr)
626:         assert_almost_equal(x, [0.0, 0.0])
627: 
628:     def test_array_basic1(self):
629:         # f(x) = c * x**2; fixed point should be x=1/c
630:         def func(x, c):
631:             return c * x**2
632:         c = array([0.75, 1.0, 1.25])
633:         x0 = [1.1, 1.15, 0.9]
634:         olderr = np.seterr(all='ignore')
635:         try:
636:             x = fixed_point(func, x0, args=(c,))
637:         finally:
638:             np.seterr(**olderr)
639:         assert_almost_equal(x, 1.0/c)
640: 
641:     def test_array_basic2(self):
642:         # f(x) = c * x**0.5; fixed point should be x=c**2
643:         def func(x, c):
644:             return c * x**0.5
645:         c = array([0.75, 1.0, 1.25])
646:         x0 = [0.8, 1.1, 1.1]
647:         x = fixed_point(func, x0, args=(c,))
648:         assert_almost_equal(x, c**2)
649: 
650:     def test_lambertw(self):
651:         # python-list/2010-December/594592.html
652:         xxroot = fixed_point(lambda xx: np.exp(-2.0*xx)/2.0, 1.0,
653:                 args=(), xtol=1e-12, maxiter=500)
654:         assert_allclose(xxroot, np.exp(-2.0*xxroot)/2.0)
655:         assert_allclose(xxroot, lambertw(1)/2)
656: 
657:     def test_no_acceleration(self):
658:         # github issue 5460
659:         ks = 2
660:         kl = 6
661:         m = 1.3
662:         n0 = 1.001
663:         i0 = ((m-1)/m)*(kl/ks/m)**(1/(m-1))
664: 
665:         def func(n):
666:             return np.log(kl/ks/n) / np.log((i0*n/(n - 1))) + 1
667: 
668:         n = fixed_point(func, n0, method='iteration')
669:         assert_allclose(n, m)
670: 
671: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_218062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3, (-1)), 'str', '\nUnit tests for optimization routines from minpack.py.\n')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 6, 0))

# 'from numpy.testing import assert_, assert_almost_equal, assert_array_equal, assert_array_almost_equal, assert_allclose' statement (line 6)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/optimize/tests/')
import_218063 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'numpy.testing')

if (type(import_218063) is not StypyTypeError):

    if (import_218063 != 'pyd_module'):
        __import__(import_218063)
        sys_modules_218064 = sys.modules[import_218063]
        import_from_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'numpy.testing', sys_modules_218064.module_type_store, module_type_store, ['assert_', 'assert_almost_equal', 'assert_array_equal', 'assert_array_almost_equal', 'assert_allclose'])
        nest_module(stypy.reporting.localization.Localization(__file__, 6, 0), __file__, sys_modules_218064, sys_modules_218064.module_type_store, module_type_store)
    else:
        from numpy.testing import assert_, assert_almost_equal, assert_array_equal, assert_array_almost_equal, assert_allclose

        import_from_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'numpy.testing', None, module_type_store, ['assert_', 'assert_almost_equal', 'assert_array_equal', 'assert_array_almost_equal', 'assert_allclose'], [assert_, assert_almost_equal, assert_array_equal, assert_array_almost_equal, assert_allclose])

else:
    # Assigning a type to the variable 'numpy.testing' (line 6)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 6, 0), 'numpy.testing', import_218063)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/optimize/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 8, 0))

# 'from pytest import assert_raises' statement (line 8)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/optimize/tests/')
import_218065 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'pytest')

if (type(import_218065) is not StypyTypeError):

    if (import_218065 != 'pyd_module'):
        __import__(import_218065)
        sys_modules_218066 = sys.modules[import_218065]
        import_from_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'pytest', sys_modules_218066.module_type_store, module_type_store, ['raises'])
        nest_module(stypy.reporting.localization.Localization(__file__, 8, 0), __file__, sys_modules_218066, sys_modules_218066.module_type_store, module_type_store)
    else:
        from pytest import raises as assert_raises

        import_from_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'pytest', None, module_type_store, ['raises'], [assert_raises])

else:
    # Assigning a type to the variable 'pytest' (line 8)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 8, 0), 'pytest', import_218065)

# Adding an alias
module_type_store.add_alias('assert_raises', 'raises')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/optimize/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 9, 0))

# 'import numpy' statement (line 9)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/optimize/tests/')
import_218067 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'numpy')

if (type(import_218067) is not StypyTypeError):

    if (import_218067 != 'pyd_module'):
        __import__(import_218067)
        sys_modules_218068 = sys.modules[import_218067]
        import_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'np', sys_modules_218068.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 9, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 9)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 9, 0), 'numpy', import_218067)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/optimize/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 10, 0))

# 'from numpy import array, float64, matrix' statement (line 10)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/optimize/tests/')
import_218069 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'numpy')

if (type(import_218069) is not StypyTypeError):

    if (import_218069 != 'pyd_module'):
        __import__(import_218069)
        sys_modules_218070 = sys.modules[import_218069]
        import_from_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'numpy', sys_modules_218070.module_type_store, module_type_store, ['array', 'float64', 'matrix'])
        nest_module(stypy.reporting.localization.Localization(__file__, 10, 0), __file__, sys_modules_218070, sys_modules_218070.module_type_store, module_type_store)
    else:
        from numpy import array, float64, matrix

        import_from_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'numpy', None, module_type_store, ['array', 'float64', 'matrix'], [array, float64, matrix])

else:
    # Assigning a type to the variable 'numpy' (line 10)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 10, 0), 'numpy', import_218069)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/optimize/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 12, 0))

# 'from scipy import optimize' statement (line 12)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/optimize/tests/')
import_218071 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'scipy')

if (type(import_218071) is not StypyTypeError):

    if (import_218071 != 'pyd_module'):
        __import__(import_218071)
        sys_modules_218072 = sys.modules[import_218071]
        import_from_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'scipy', sys_modules_218072.module_type_store, module_type_store, ['optimize'])
        nest_module(stypy.reporting.localization.Localization(__file__, 12, 0), __file__, sys_modules_218072, sys_modules_218072.module_type_store, module_type_store)
    else:
        from scipy import optimize

        import_from_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'scipy', None, module_type_store, ['optimize'], [optimize])

else:
    # Assigning a type to the variable 'scipy' (line 12)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 12, 0), 'scipy', import_218071)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/optimize/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 13, 0))

# 'from scipy.special import lambertw' statement (line 13)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/optimize/tests/')
import_218073 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'scipy.special')

if (type(import_218073) is not StypyTypeError):

    if (import_218073 != 'pyd_module'):
        __import__(import_218073)
        sys_modules_218074 = sys.modules[import_218073]
        import_from_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'scipy.special', sys_modules_218074.module_type_store, module_type_store, ['lambertw'])
        nest_module(stypy.reporting.localization.Localization(__file__, 13, 0), __file__, sys_modules_218074, sys_modules_218074.module_type_store, module_type_store)
    else:
        from scipy.special import lambertw

        import_from_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'scipy.special', None, module_type_store, ['lambertw'], [lambertw])

else:
    # Assigning a type to the variable 'scipy.special' (line 13)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 13, 0), 'scipy.special', import_218073)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/optimize/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 14, 0))

# 'from scipy.optimize.minpack import leastsq, curve_fit, fixed_point' statement (line 14)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/optimize/tests/')
import_218075 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'scipy.optimize.minpack')

if (type(import_218075) is not StypyTypeError):

    if (import_218075 != 'pyd_module'):
        __import__(import_218075)
        sys_modules_218076 = sys.modules[import_218075]
        import_from_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'scipy.optimize.minpack', sys_modules_218076.module_type_store, module_type_store, ['leastsq', 'curve_fit', 'fixed_point'])
        nest_module(stypy.reporting.localization.Localization(__file__, 14, 0), __file__, sys_modules_218076, sys_modules_218076.module_type_store, module_type_store)
    else:
        from scipy.optimize.minpack import leastsq, curve_fit, fixed_point

        import_from_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'scipy.optimize.minpack', None, module_type_store, ['leastsq', 'curve_fit', 'fixed_point'], [leastsq, curve_fit, fixed_point])

else:
    # Assigning a type to the variable 'scipy.optimize.minpack' (line 14)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 14, 0), 'scipy.optimize.minpack', import_218075)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/optimize/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 15, 0))

# 'from scipy._lib._numpy_compat import _assert_warns, suppress_warnings' statement (line 15)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/optimize/tests/')
import_218077 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'scipy._lib._numpy_compat')

if (type(import_218077) is not StypyTypeError):

    if (import_218077 != 'pyd_module'):
        __import__(import_218077)
        sys_modules_218078 = sys.modules[import_218077]
        import_from_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'scipy._lib._numpy_compat', sys_modules_218078.module_type_store, module_type_store, ['_assert_warns', 'suppress_warnings'])
        nest_module(stypy.reporting.localization.Localization(__file__, 15, 0), __file__, sys_modules_218078, sys_modules_218078.module_type_store, module_type_store)
    else:
        from scipy._lib._numpy_compat import _assert_warns, suppress_warnings

        import_from_module(stypy.reporting.localization.Localization(__file__, 15, 0), 'scipy._lib._numpy_compat', None, module_type_store, ['_assert_warns', 'suppress_warnings'], [_assert_warns, suppress_warnings])

else:
    # Assigning a type to the variable 'scipy._lib._numpy_compat' (line 15)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 15, 0), 'scipy._lib._numpy_compat', import_218077)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/optimize/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 16, 0))

# 'from scipy.optimize import OptimizeWarning' statement (line 16)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/optimize/tests/')
import_218079 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.optimize')

if (type(import_218079) is not StypyTypeError):

    if (import_218079 != 'pyd_module'):
        __import__(import_218079)
        sys_modules_218080 = sys.modules[import_218079]
        import_from_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.optimize', sys_modules_218080.module_type_store, module_type_store, ['OptimizeWarning'])
        nest_module(stypy.reporting.localization.Localization(__file__, 16, 0), __file__, sys_modules_218080, sys_modules_218080.module_type_store, module_type_store)
    else:
        from scipy.optimize import OptimizeWarning

        import_from_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.optimize', None, module_type_store, ['OptimizeWarning'], [OptimizeWarning])

else:
    # Assigning a type to the variable 'scipy.optimize' (line 16)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.optimize', import_218079)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/optimize/tests/')

# Declaration of the 'ReturnShape' class

class ReturnShape(object, ):
    str_218081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, (-1)), 'str', "This class exists to create a callable that does not have a '__name__' attribute.\n\n    __init__ takes the argument 'shape', which should be a tuple of ints.  When an instance\n    it called with a single argument 'x', it returns numpy.ones(shape).\n    ")

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 25, 4, False)
        # Assigning a type to the variable 'self' (line 26)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ReturnShape.__init__', ['shape'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['shape'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 26):
        
        # Assigning a Name to a Attribute (line 26):
        # Getting the type of 'shape' (line 26)
        shape_218082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 21), 'shape')
        # Getting the type of 'self' (line 26)
        self_218083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 8), 'self')
        # Setting the type of the member 'shape' of a type (line 26)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 26, 8), self_218083, 'shape', shape_218082)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 28, 4, False)
        # Assigning a type to the variable 'self' (line 29)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ReturnShape.__call__.__dict__.__setitem__('stypy_localization', localization)
        ReturnShape.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ReturnShape.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        ReturnShape.__call__.__dict__.__setitem__('stypy_function_name', 'ReturnShape.__call__')
        ReturnShape.__call__.__dict__.__setitem__('stypy_param_names_list', ['x'])
        ReturnShape.__call__.__dict__.__setitem__('stypy_varargs_param_name', None)
        ReturnShape.__call__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ReturnShape.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        ReturnShape.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        ReturnShape.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ReturnShape.__call__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ReturnShape.__call__', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        
        # Call to ones(...): (line 29)
        # Processing the call arguments (line 29)
        # Getting the type of 'self' (line 29)
        self_218086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 29, 23), 'self', False)
        # Obtaining the member 'shape' of a type (line 29)
        shape_218087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 29, 23), self_218086, 'shape')
        # Processing the call keyword arguments (line 29)
        kwargs_218088 = {}
        # Getting the type of 'np' (line 29)
        np_218084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 29, 15), 'np', False)
        # Obtaining the member 'ones' of a type (line 29)
        ones_218085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 29, 15), np_218084, 'ones')
        # Calling ones(args, kwargs) (line 29)
        ones_call_result_218089 = invoke(stypy.reporting.localization.Localization(__file__, 29, 15), ones_218085, *[shape_218087], **kwargs_218088)
        
        # Assigning a type to the variable 'stypy_return_type' (line 29)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 29, 8), 'stypy_return_type', ones_call_result_218089)
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 28)
        stypy_return_type_218090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218090)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_218090


# Assigning a type to the variable 'ReturnShape' (line 19)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'ReturnShape', ReturnShape)

@norecursion
def dummy_func(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'dummy_func'
    module_type_store = module_type_store.open_function_context('dummy_func', 32, 0, False)
    
    # Passed parameters checking function
    dummy_func.stypy_localization = localization
    dummy_func.stypy_type_of_self = None
    dummy_func.stypy_type_store = module_type_store
    dummy_func.stypy_function_name = 'dummy_func'
    dummy_func.stypy_param_names_list = ['x', 'shape']
    dummy_func.stypy_varargs_param_name = None
    dummy_func.stypy_kwargs_param_name = None
    dummy_func.stypy_call_defaults = defaults
    dummy_func.stypy_call_varargs = varargs
    dummy_func.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'dummy_func', ['x', 'shape'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'dummy_func', localization, ['x', 'shape'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'dummy_func(...)' code ##################

    str_218091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 35, (-1)), 'str', 'A function that returns an array of ones of the given shape.\n    `x` is ignored.\n    ')
    
    # Call to ones(...): (line 36)
    # Processing the call arguments (line 36)
    # Getting the type of 'shape' (line 36)
    shape_218094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 19), 'shape', False)
    # Processing the call keyword arguments (line 36)
    kwargs_218095 = {}
    # Getting the type of 'np' (line 36)
    np_218092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 11), 'np', False)
    # Obtaining the member 'ones' of a type (line 36)
    ones_218093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 36, 11), np_218092, 'ones')
    # Calling ones(args, kwargs) (line 36)
    ones_call_result_218096 = invoke(stypy.reporting.localization.Localization(__file__, 36, 11), ones_218093, *[shape_218094], **kwargs_218095)
    
    # Assigning a type to the variable 'stypy_return_type' (line 36)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 4), 'stypy_return_type', ones_call_result_218096)
    
    # ################# End of 'dummy_func(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'dummy_func' in the type store
    # Getting the type of 'stypy_return_type' (line 32)
    stypy_return_type_218097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 32, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_218097)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'dummy_func'
    return stypy_return_type_218097

# Assigning a type to the variable 'dummy_func' (line 32)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 32, 0), 'dummy_func', dummy_func)

@norecursion
def pressure_network(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'pressure_network'
    module_type_store = module_type_store.open_function_context('pressure_network', 42, 0, False)
    
    # Passed parameters checking function
    pressure_network.stypy_localization = localization
    pressure_network.stypy_type_of_self = None
    pressure_network.stypy_type_store = module_type_store
    pressure_network.stypy_function_name = 'pressure_network'
    pressure_network.stypy_param_names_list = ['flow_rates', 'Qtot', 'k']
    pressure_network.stypy_varargs_param_name = None
    pressure_network.stypy_kwargs_param_name = None
    pressure_network.stypy_call_defaults = defaults
    pressure_network.stypy_call_varargs = varargs
    pressure_network.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'pressure_network', ['flow_rates', 'Qtot', 'k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'pressure_network', localization, ['flow_rates', 'Qtot', 'k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'pressure_network(...)' code ##################

    str_218098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 67, (-1)), 'str', 'Evaluate non-linear equation system representing\n    the pressures and flows in a system of n parallel pipes::\n\n        f_i = P_i - P_0, for i = 1..n\n        f_0 = sum(Q_i) - Qtot\n\n    Where Q_i is the flow rate in pipe i and P_i the pressure in that pipe.\n    Pressure is modeled as a P=kQ**2 where k is a valve coefficient and\n    Q is the flow rate.\n\n    Parameters\n    ----------\n    flow_rates : float\n        A 1D array of n flow rates [kg/s].\n    k : float\n        A 1D array of n valve coefficients [1/kg m].\n    Qtot : float\n        A scalar, the total input flow rate [kg/s].\n\n    Returns\n    -------\n    F : float\n        A 1D array, F[i] == f_i.\n\n    ')
    
    # Assigning a BinOp to a Name (line 68):
    
    # Assigning a BinOp to a Name (line 68):
    # Getting the type of 'k' (line 68)
    k_218099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 8), 'k')
    # Getting the type of 'flow_rates' (line 68)
    flow_rates_218100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 12), 'flow_rates')
    int_218101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 68, 24), 'int')
    # Applying the binary operator '**' (line 68)
    result_pow_218102 = python_operator(stypy.reporting.localization.Localization(__file__, 68, 12), '**', flow_rates_218100, int_218101)
    
    # Applying the binary operator '*' (line 68)
    result_mul_218103 = python_operator(stypy.reporting.localization.Localization(__file__, 68, 8), '*', k_218099, result_pow_218102)
    
    # Assigning a type to the variable 'P' (line 68)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 4), 'P', result_mul_218103)
    
    # Assigning a Call to a Name (line 69):
    
    # Assigning a Call to a Name (line 69):
    
    # Call to hstack(...): (line 69)
    # Processing the call arguments (line 69)
    
    # Obtaining an instance of the builtin type 'tuple' (line 69)
    tuple_218106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 69, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 69)
    # Adding element type (line 69)
    
    # Obtaining the type of the subscript
    int_218107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 69, 21), 'int')
    slice_218108 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 69, 19), int_218107, None, None)
    # Getting the type of 'P' (line 69)
    P_218109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 19), 'P', False)
    # Obtaining the member '__getitem__' of a type (line 69)
    getitem___218110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 69, 19), P_218109, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 69)
    subscript_call_result_218111 = invoke(stypy.reporting.localization.Localization(__file__, 69, 19), getitem___218110, slice_218108)
    
    
    # Obtaining the type of the subscript
    int_218112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 69, 29), 'int')
    # Getting the type of 'P' (line 69)
    P_218113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 27), 'P', False)
    # Obtaining the member '__getitem__' of a type (line 69)
    getitem___218114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 69, 27), P_218113, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 69)
    subscript_call_result_218115 = invoke(stypy.reporting.localization.Localization(__file__, 69, 27), getitem___218114, int_218112)
    
    # Applying the binary operator '-' (line 69)
    result_sub_218116 = python_operator(stypy.reporting.localization.Localization(__file__, 69, 19), '-', subscript_call_result_218111, subscript_call_result_218115)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 69, 19), tuple_218106, result_sub_218116)
    # Adding element type (line 69)
    
    # Call to sum(...): (line 69)
    # Processing the call keyword arguments (line 69)
    kwargs_218119 = {}
    # Getting the type of 'flow_rates' (line 69)
    flow_rates_218117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 33), 'flow_rates', False)
    # Obtaining the member 'sum' of a type (line 69)
    sum_218118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 69, 33), flow_rates_218117, 'sum')
    # Calling sum(args, kwargs) (line 69)
    sum_call_result_218120 = invoke(stypy.reporting.localization.Localization(__file__, 69, 33), sum_218118, *[], **kwargs_218119)
    
    # Getting the type of 'Qtot' (line 69)
    Qtot_218121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 52), 'Qtot', False)
    # Applying the binary operator '-' (line 69)
    result_sub_218122 = python_operator(stypy.reporting.localization.Localization(__file__, 69, 33), '-', sum_call_result_218120, Qtot_218121)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 69, 19), tuple_218106, result_sub_218122)
    
    # Processing the call keyword arguments (line 69)
    kwargs_218123 = {}
    # Getting the type of 'np' (line 69)
    np_218104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 69, 8), 'np', False)
    # Obtaining the member 'hstack' of a type (line 69)
    hstack_218105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 69, 8), np_218104, 'hstack')
    # Calling hstack(args, kwargs) (line 69)
    hstack_call_result_218124 = invoke(stypy.reporting.localization.Localization(__file__, 69, 8), hstack_218105, *[tuple_218106], **kwargs_218123)
    
    # Assigning a type to the variable 'F' (line 69)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 69, 4), 'F', hstack_call_result_218124)
    # Getting the type of 'F' (line 70)
    F_218125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 11), 'F')
    # Assigning a type to the variable 'stypy_return_type' (line 70)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 70, 4), 'stypy_return_type', F_218125)
    
    # ################# End of 'pressure_network(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'pressure_network' in the type store
    # Getting the type of 'stypy_return_type' (line 42)
    stypy_return_type_218126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_218126)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'pressure_network'
    return stypy_return_type_218126

# Assigning a type to the variable 'pressure_network' (line 42)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 0), 'pressure_network', pressure_network)

@norecursion
def pressure_network_jacobian(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'pressure_network_jacobian'
    module_type_store = module_type_store.open_function_context('pressure_network_jacobian', 73, 0, False)
    
    # Passed parameters checking function
    pressure_network_jacobian.stypy_localization = localization
    pressure_network_jacobian.stypy_type_of_self = None
    pressure_network_jacobian.stypy_type_store = module_type_store
    pressure_network_jacobian.stypy_function_name = 'pressure_network_jacobian'
    pressure_network_jacobian.stypy_param_names_list = ['flow_rates', 'Qtot', 'k']
    pressure_network_jacobian.stypy_varargs_param_name = None
    pressure_network_jacobian.stypy_kwargs_param_name = None
    pressure_network_jacobian.stypy_call_defaults = defaults
    pressure_network_jacobian.stypy_call_varargs = varargs
    pressure_network_jacobian.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'pressure_network_jacobian', ['flow_rates', 'Qtot', 'k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'pressure_network_jacobian', localization, ['flow_rates', 'Qtot', 'k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'pressure_network_jacobian(...)' code ##################

    str_218127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, (-1)), 'str', 'Return the jacobian of the equation system F(flow_rates)\n    computed by `pressure_network` with respect to\n    *flow_rates*. See `pressure_network` for the detailed\n    description of parrameters.\n\n    Returns\n    -------\n    jac : float\n        *n* by *n* matrix ``df_i/dQ_i`` where ``n = len(flow_rates)``\n        and *f_i* and *Q_i* are described in the doc for `pressure_network`\n    ')
    
    # Assigning a Call to a Name (line 85):
    
    # Assigning a Call to a Name (line 85):
    
    # Call to len(...): (line 85)
    # Processing the call arguments (line 85)
    # Getting the type of 'flow_rates' (line 85)
    flow_rates_218129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 12), 'flow_rates', False)
    # Processing the call keyword arguments (line 85)
    kwargs_218130 = {}
    # Getting the type of 'len' (line 85)
    len_218128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 8), 'len', False)
    # Calling len(args, kwargs) (line 85)
    len_call_result_218131 = invoke(stypy.reporting.localization.Localization(__file__, 85, 8), len_218128, *[flow_rates_218129], **kwargs_218130)
    
    # Assigning a type to the variable 'n' (line 85)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 4), 'n', len_call_result_218131)
    
    # Assigning a Call to a Name (line 86):
    
    # Assigning a Call to a Name (line 86):
    
    # Call to diag(...): (line 86)
    # Processing the call arguments (line 86)
    
    # Obtaining the type of the subscript
    int_218134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 31), 'int')
    slice_218135 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 86, 20), int_218134, None, None)
    # Getting the type of 'flow_rates' (line 86)
    flow_rates_218136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 20), 'flow_rates', False)
    # Obtaining the member '__getitem__' of a type (line 86)
    getitem___218137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 20), flow_rates_218136, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 86)
    subscript_call_result_218138 = invoke(stypy.reporting.localization.Localization(__file__, 86, 20), getitem___218137, slice_218135)
    
    int_218139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 37), 'int')
    # Applying the binary operator '*' (line 86)
    result_mul_218140 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 20), '*', subscript_call_result_218138, int_218139)
    
    
    # Obtaining the type of the subscript
    int_218141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 43), 'int')
    slice_218142 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 86, 41), int_218141, None, None)
    # Getting the type of 'k' (line 86)
    k_218143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 41), 'k', False)
    # Obtaining the member '__getitem__' of a type (line 86)
    getitem___218144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 41), k_218143, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 86)
    subscript_call_result_218145 = invoke(stypy.reporting.localization.Localization(__file__, 86, 41), getitem___218144, slice_218142)
    
    # Applying the binary operator '*' (line 86)
    result_mul_218146 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 39), '*', result_mul_218140, subscript_call_result_218145)
    
    int_218147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 49), 'int')
    
    # Obtaining the type of the subscript
    int_218148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 64), 'int')
    # Getting the type of 'flow_rates' (line 86)
    flow_rates_218149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 53), 'flow_rates', False)
    # Obtaining the member '__getitem__' of a type (line 86)
    getitem___218150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 53), flow_rates_218149, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 86)
    subscript_call_result_218151 = invoke(stypy.reporting.localization.Localization(__file__, 86, 53), getitem___218150, int_218148)
    
    # Applying the binary operator '*' (line 86)
    result_mul_218152 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 49), '*', int_218147, subscript_call_result_218151)
    
    
    # Obtaining the type of the subscript
    int_218153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 71), 'int')
    # Getting the type of 'k' (line 86)
    k_218154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 69), 'k', False)
    # Obtaining the member '__getitem__' of a type (line 86)
    getitem___218155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 69), k_218154, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 86)
    subscript_call_result_218156 = invoke(stypy.reporting.localization.Localization(__file__, 86, 69), getitem___218155, int_218153)
    
    # Applying the binary operator '*' (line 86)
    result_mul_218157 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 67), '*', result_mul_218152, subscript_call_result_218156)
    
    # Applying the binary operator '-' (line 86)
    result_sub_218158 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 20), '-', result_mul_218146, result_mul_218157)
    
    # Processing the call keyword arguments (line 86)
    kwargs_218159 = {}
    # Getting the type of 'np' (line 86)
    np_218132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 12), 'np', False)
    # Obtaining the member 'diag' of a type (line 86)
    diag_218133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 12), np_218132, 'diag')
    # Calling diag(args, kwargs) (line 86)
    diag_call_result_218160 = invoke(stypy.reporting.localization.Localization(__file__, 86, 12), diag_218133, *[result_sub_218158], **kwargs_218159)
    
    # Assigning a type to the variable 'pdiff' (line 86)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 4), 'pdiff', diag_call_result_218160)
    
    # Assigning a Call to a Name (line 88):
    
    # Assigning a Call to a Name (line 88):
    
    # Call to empty(...): (line 88)
    # Processing the call arguments (line 88)
    
    # Obtaining an instance of the builtin type 'tuple' (line 88)
    tuple_218163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 88)
    # Adding element type (line 88)
    # Getting the type of 'n' (line 88)
    n_218164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 20), 'n', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 88, 20), tuple_218163, n_218164)
    # Adding element type (line 88)
    # Getting the type of 'n' (line 88)
    n_218165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 23), 'n', False)
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 88, 20), tuple_218163, n_218165)
    
    # Processing the call keyword arguments (line 88)
    kwargs_218166 = {}
    # Getting the type of 'np' (line 88)
    np_218161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 10), 'np', False)
    # Obtaining the member 'empty' of a type (line 88)
    empty_218162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 88, 10), np_218161, 'empty')
    # Calling empty(args, kwargs) (line 88)
    empty_call_result_218167 = invoke(stypy.reporting.localization.Localization(__file__, 88, 10), empty_218162, *[tuple_218163], **kwargs_218166)
    
    # Assigning a type to the variable 'jac' (line 88)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 4), 'jac', empty_call_result_218167)
    
    # Assigning a BinOp to a Subscript (line 89):
    
    # Assigning a BinOp to a Subscript (line 89):
    # Getting the type of 'pdiff' (line 89)
    pdiff_218168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 22), 'pdiff')
    int_218169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 30), 'int')
    # Applying the binary operator '*' (line 89)
    result_mul_218170 = python_operator(stypy.reporting.localization.Localization(__file__, 89, 22), '*', pdiff_218168, int_218169)
    
    # Getting the type of 'jac' (line 89)
    jac_218171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 4), 'jac')
    # Getting the type of 'n' (line 89)
    n_218172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 9), 'n')
    int_218173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 11), 'int')
    # Applying the binary operator '-' (line 89)
    result_sub_218174 = python_operator(stypy.reporting.localization.Localization(__file__, 89, 9), '-', n_218172, int_218173)
    
    slice_218175 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 89, 4), None, result_sub_218174, None)
    # Getting the type of 'n' (line 89)
    n_218176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 15), 'n')
    int_218177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 17), 'int')
    # Applying the binary operator '-' (line 89)
    result_sub_218178 = python_operator(stypy.reporting.localization.Localization(__file__, 89, 15), '-', n_218176, int_218177)
    
    slice_218179 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 89, 4), None, result_sub_218178, None)
    # Storing an element on a container (line 89)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 89, 4), jac_218171, ((slice_218175, slice_218179), result_mul_218170))
    
    # Assigning a Num to a Subscript (line 90):
    
    # Assigning a Num to a Subscript (line 90):
    int_218180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 21), 'int')
    # Getting the type of 'jac' (line 90)
    jac_218181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 4), 'jac')
    # Getting the type of 'n' (line 90)
    n_218182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 9), 'n')
    int_218183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 11), 'int')
    # Applying the binary operator '-' (line 90)
    result_sub_218184 = python_operator(stypy.reporting.localization.Localization(__file__, 90, 9), '-', n_218182, int_218183)
    
    slice_218185 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 90, 4), None, result_sub_218184, None)
    # Getting the type of 'n' (line 90)
    n_218186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 14), 'n')
    int_218187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 16), 'int')
    # Applying the binary operator '-' (line 90)
    result_sub_218188 = python_operator(stypy.reporting.localization.Localization(__file__, 90, 14), '-', n_218186, int_218187)
    
    # Storing an element on a container (line 90)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 90, 4), jac_218181, ((slice_218185, result_sub_218188), int_218180))
    
    # Assigning a Call to a Subscript (line 91):
    
    # Assigning a Call to a Subscript (line 91):
    
    # Call to ones(...): (line 91)
    # Processing the call arguments (line 91)
    # Getting the type of 'n' (line 91)
    n_218191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 26), 'n', False)
    # Processing the call keyword arguments (line 91)
    kwargs_218192 = {}
    # Getting the type of 'np' (line 91)
    np_218189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 18), 'np', False)
    # Obtaining the member 'ones' of a type (line 91)
    ones_218190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 91, 18), np_218189, 'ones')
    # Calling ones(args, kwargs) (line 91)
    ones_call_result_218193 = invoke(stypy.reporting.localization.Localization(__file__, 91, 18), ones_218190, *[n_218191], **kwargs_218192)
    
    # Getting the type of 'jac' (line 91)
    jac_218194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 4), 'jac')
    # Getting the type of 'n' (line 91)
    n_218195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'n')
    int_218196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, 10), 'int')
    # Applying the binary operator '-' (line 91)
    result_sub_218197 = python_operator(stypy.reporting.localization.Localization(__file__, 91, 8), '-', n_218195, int_218196)
    
    slice_218198 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 91, 4), None, None, None)
    # Storing an element on a container (line 91)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 4), jac_218194, ((result_sub_218197, slice_218198), ones_call_result_218193))
    # Getting the type of 'jac' (line 93)
    jac_218199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 11), 'jac')
    # Assigning a type to the variable 'stypy_return_type' (line 93)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 4), 'stypy_return_type', jac_218199)
    
    # ################# End of 'pressure_network_jacobian(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'pressure_network_jacobian' in the type store
    # Getting the type of 'stypy_return_type' (line 73)
    stypy_return_type_218200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_218200)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'pressure_network_jacobian'
    return stypy_return_type_218200

# Assigning a type to the variable 'pressure_network_jacobian' (line 73)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 73, 0), 'pressure_network_jacobian', pressure_network_jacobian)

@norecursion
def pressure_network_fun_and_grad(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'pressure_network_fun_and_grad'
    module_type_store = module_type_store.open_function_context('pressure_network_fun_and_grad', 96, 0, False)
    
    # Passed parameters checking function
    pressure_network_fun_and_grad.stypy_localization = localization
    pressure_network_fun_and_grad.stypy_type_of_self = None
    pressure_network_fun_and_grad.stypy_type_store = module_type_store
    pressure_network_fun_and_grad.stypy_function_name = 'pressure_network_fun_and_grad'
    pressure_network_fun_and_grad.stypy_param_names_list = ['flow_rates', 'Qtot', 'k']
    pressure_network_fun_and_grad.stypy_varargs_param_name = None
    pressure_network_fun_and_grad.stypy_kwargs_param_name = None
    pressure_network_fun_and_grad.stypy_call_defaults = defaults
    pressure_network_fun_and_grad.stypy_call_varargs = varargs
    pressure_network_fun_and_grad.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'pressure_network_fun_and_grad', ['flow_rates', 'Qtot', 'k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'pressure_network_fun_and_grad', localization, ['flow_rates', 'Qtot', 'k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'pressure_network_fun_and_grad(...)' code ##################

    
    # Obtaining an instance of the builtin type 'tuple' (line 97)
    tuple_218201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 12), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 97)
    # Adding element type (line 97)
    
    # Call to pressure_network(...): (line 97)
    # Processing the call arguments (line 97)
    # Getting the type of 'flow_rates' (line 97)
    flow_rates_218203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 29), 'flow_rates', False)
    # Getting the type of 'Qtot' (line 97)
    Qtot_218204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 41), 'Qtot', False)
    # Getting the type of 'k' (line 97)
    k_218205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 47), 'k', False)
    # Processing the call keyword arguments (line 97)
    kwargs_218206 = {}
    # Getting the type of 'pressure_network' (line 97)
    pressure_network_218202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 12), 'pressure_network', False)
    # Calling pressure_network(args, kwargs) (line 97)
    pressure_network_call_result_218207 = invoke(stypy.reporting.localization.Localization(__file__, 97, 12), pressure_network_218202, *[flow_rates_218203, Qtot_218204, k_218205], **kwargs_218206)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 97, 12), tuple_218201, pressure_network_call_result_218207)
    # Adding element type (line 97)
    
    # Call to pressure_network_jacobian(...): (line 98)
    # Processing the call arguments (line 98)
    # Getting the type of 'flow_rates' (line 98)
    flow_rates_218209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 38), 'flow_rates', False)
    # Getting the type of 'Qtot' (line 98)
    Qtot_218210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 50), 'Qtot', False)
    # Getting the type of 'k' (line 98)
    k_218211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 56), 'k', False)
    # Processing the call keyword arguments (line 98)
    kwargs_218212 = {}
    # Getting the type of 'pressure_network_jacobian' (line 98)
    pressure_network_jacobian_218208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 12), 'pressure_network_jacobian', False)
    # Calling pressure_network_jacobian(args, kwargs) (line 98)
    pressure_network_jacobian_call_result_218213 = invoke(stypy.reporting.localization.Localization(__file__, 98, 12), pressure_network_jacobian_218208, *[flow_rates_218209, Qtot_218210, k_218211], **kwargs_218212)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 97, 12), tuple_218201, pressure_network_jacobian_call_result_218213)
    
    # Assigning a type to the variable 'stypy_return_type' (line 97)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 4), 'stypy_return_type', tuple_218201)
    
    # ################# End of 'pressure_network_fun_and_grad(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'pressure_network_fun_and_grad' in the type store
    # Getting the type of 'stypy_return_type' (line 96)
    stypy_return_type_218214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_218214)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'pressure_network_fun_and_grad'
    return stypy_return_type_218214

# Assigning a type to the variable 'pressure_network_fun_and_grad' (line 96)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 0), 'pressure_network_fun_and_grad', pressure_network_fun_and_grad)
# Declaration of the 'TestFSolve' class

class TestFSolve(object, ):

    @norecursion
    def test_pressure_network_no_gradient(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pressure_network_no_gradient'
        module_type_store = module_type_store.open_function_context('test_pressure_network_no_gradient', 102, 4, False)
        # Assigning a type to the variable 'self' (line 103)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_localization', localization)
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_function_name', 'TestFSolve.test_pressure_network_no_gradient')
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_param_names_list', [])
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFSolve.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFSolve.test_pressure_network_no_gradient', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pressure_network_no_gradient', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pressure_network_no_gradient(...)' code ##################

        
        # Assigning a BinOp to a Name (line 104):
        
        # Assigning a BinOp to a Name (line 104):
        
        # Call to ones(...): (line 104)
        # Processing the call arguments (line 104)
        int_218217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 20), 'int')
        # Processing the call keyword arguments (line 104)
        kwargs_218218 = {}
        # Getting the type of 'np' (line 104)
        np_218215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 12), 'np', False)
        # Obtaining the member 'ones' of a type (line 104)
        ones_218216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 12), np_218215, 'ones')
        # Calling ones(args, kwargs) (line 104)
        ones_call_result_218219 = invoke(stypy.reporting.localization.Localization(__file__, 104, 12), ones_218216, *[int_218217], **kwargs_218218)
        
        float_218220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 25), 'float')
        # Applying the binary operator '*' (line 104)
        result_mul_218221 = python_operator(stypy.reporting.localization.Localization(__file__, 104, 12), '*', ones_call_result_218219, float_218220)
        
        # Assigning a type to the variable 'k' (line 104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 8), 'k', result_mul_218221)
        
        # Assigning a Num to a Name (line 105):
        
        # Assigning a Num to a Name (line 105):
        int_218222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 15), 'int')
        # Assigning a type to the variable 'Qtot' (line 105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 105, 8), 'Qtot', int_218222)
        
        # Assigning a Call to a Name (line 106):
        
        # Assigning a Call to a Name (line 106):
        
        # Call to array(...): (line 106)
        # Processing the call arguments (line 106)
        
        # Obtaining an instance of the builtin type 'list' (line 106)
        list_218224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 106)
        # Adding element type (line 106)
        float_218225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 30), list_218224, float_218225)
        # Adding element type (line 106)
        float_218226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 35), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 30), list_218224, float_218226)
        # Adding element type (line 106)
        float_218227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 30), list_218224, float_218227)
        # Adding element type (line 106)
        float_218228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 106, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 106, 30), list_218224, float_218228)
        
        # Processing the call keyword arguments (line 106)
        kwargs_218229 = {}
        # Getting the type of 'array' (line 106)
        array_218223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 24), 'array', False)
        # Calling array(args, kwargs) (line 106)
        array_call_result_218230 = invoke(stypy.reporting.localization.Localization(__file__, 106, 24), array_218223, *[list_218224], **kwargs_218229)
        
        # Assigning a type to the variable 'initial_guess' (line 106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 8), 'initial_guess', array_call_result_218230)
        
        # Assigning a Call to a Tuple (line 107):
        
        # Assigning a Subscript to a Name (line 107):
        
        # Obtaining the type of the subscript
        int_218231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 8), 'int')
        
        # Call to fsolve(...): (line 107)
        # Processing the call arguments (line 107)
        # Getting the type of 'pressure_network' (line 108)
        pressure_network_218234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'pressure_network', False)
        # Getting the type of 'initial_guess' (line 108)
        initial_guess_218235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 30), 'initial_guess', False)
        # Processing the call keyword arguments (line 107)
        
        # Obtaining an instance of the builtin type 'tuple' (line 108)
        tuple_218236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 108)
        # Adding element type (line 108)
        # Getting the type of 'Qtot' (line 108)
        Qtot_218237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 51), 'Qtot', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 51), tuple_218236, Qtot_218237)
        # Adding element type (line 108)
        # Getting the type of 'k' (line 108)
        k_218238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 57), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 51), tuple_218236, k_218238)
        
        keyword_218239 = tuple_218236
        # Getting the type of 'True' (line 109)
        True_218240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 24), 'True', False)
        keyword_218241 = True_218240
        kwargs_218242 = {'args': keyword_218239, 'full_output': keyword_218241}
        # Getting the type of 'optimize' (line 107)
        optimize_218232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 39), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 107)
        fsolve_218233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 39), optimize_218232, 'fsolve')
        # Calling fsolve(args, kwargs) (line 107)
        fsolve_call_result_218243 = invoke(stypy.reporting.localization.Localization(__file__, 107, 39), fsolve_218233, *[pressure_network_218234, initial_guess_218235], **kwargs_218242)
        
        # Obtaining the member '__getitem__' of a type (line 107)
        getitem___218244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 8), fsolve_call_result_218243, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 107)
        subscript_call_result_218245 = invoke(stypy.reporting.localization.Localization(__file__, 107, 8), getitem___218244, int_218231)
        
        # Assigning a type to the variable 'tuple_var_assignment_217985' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'tuple_var_assignment_217985', subscript_call_result_218245)
        
        # Assigning a Subscript to a Name (line 107):
        
        # Obtaining the type of the subscript
        int_218246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 8), 'int')
        
        # Call to fsolve(...): (line 107)
        # Processing the call arguments (line 107)
        # Getting the type of 'pressure_network' (line 108)
        pressure_network_218249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'pressure_network', False)
        # Getting the type of 'initial_guess' (line 108)
        initial_guess_218250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 30), 'initial_guess', False)
        # Processing the call keyword arguments (line 107)
        
        # Obtaining an instance of the builtin type 'tuple' (line 108)
        tuple_218251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 108)
        # Adding element type (line 108)
        # Getting the type of 'Qtot' (line 108)
        Qtot_218252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 51), 'Qtot', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 51), tuple_218251, Qtot_218252)
        # Adding element type (line 108)
        # Getting the type of 'k' (line 108)
        k_218253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 57), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 51), tuple_218251, k_218253)
        
        keyword_218254 = tuple_218251
        # Getting the type of 'True' (line 109)
        True_218255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 24), 'True', False)
        keyword_218256 = True_218255
        kwargs_218257 = {'args': keyword_218254, 'full_output': keyword_218256}
        # Getting the type of 'optimize' (line 107)
        optimize_218247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 39), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 107)
        fsolve_218248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 39), optimize_218247, 'fsolve')
        # Calling fsolve(args, kwargs) (line 107)
        fsolve_call_result_218258 = invoke(stypy.reporting.localization.Localization(__file__, 107, 39), fsolve_218248, *[pressure_network_218249, initial_guess_218250], **kwargs_218257)
        
        # Obtaining the member '__getitem__' of a type (line 107)
        getitem___218259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 8), fsolve_call_result_218258, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 107)
        subscript_call_result_218260 = invoke(stypy.reporting.localization.Localization(__file__, 107, 8), getitem___218259, int_218246)
        
        # Assigning a type to the variable 'tuple_var_assignment_217986' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'tuple_var_assignment_217986', subscript_call_result_218260)
        
        # Assigning a Subscript to a Name (line 107):
        
        # Obtaining the type of the subscript
        int_218261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 8), 'int')
        
        # Call to fsolve(...): (line 107)
        # Processing the call arguments (line 107)
        # Getting the type of 'pressure_network' (line 108)
        pressure_network_218264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'pressure_network', False)
        # Getting the type of 'initial_guess' (line 108)
        initial_guess_218265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 30), 'initial_guess', False)
        # Processing the call keyword arguments (line 107)
        
        # Obtaining an instance of the builtin type 'tuple' (line 108)
        tuple_218266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 108)
        # Adding element type (line 108)
        # Getting the type of 'Qtot' (line 108)
        Qtot_218267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 51), 'Qtot', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 51), tuple_218266, Qtot_218267)
        # Adding element type (line 108)
        # Getting the type of 'k' (line 108)
        k_218268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 57), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 51), tuple_218266, k_218268)
        
        keyword_218269 = tuple_218266
        # Getting the type of 'True' (line 109)
        True_218270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 24), 'True', False)
        keyword_218271 = True_218270
        kwargs_218272 = {'args': keyword_218269, 'full_output': keyword_218271}
        # Getting the type of 'optimize' (line 107)
        optimize_218262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 39), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 107)
        fsolve_218263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 39), optimize_218262, 'fsolve')
        # Calling fsolve(args, kwargs) (line 107)
        fsolve_call_result_218273 = invoke(stypy.reporting.localization.Localization(__file__, 107, 39), fsolve_218263, *[pressure_network_218264, initial_guess_218265], **kwargs_218272)
        
        # Obtaining the member '__getitem__' of a type (line 107)
        getitem___218274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 8), fsolve_call_result_218273, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 107)
        subscript_call_result_218275 = invoke(stypy.reporting.localization.Localization(__file__, 107, 8), getitem___218274, int_218261)
        
        # Assigning a type to the variable 'tuple_var_assignment_217987' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'tuple_var_assignment_217987', subscript_call_result_218275)
        
        # Assigning a Subscript to a Name (line 107):
        
        # Obtaining the type of the subscript
        int_218276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 8), 'int')
        
        # Call to fsolve(...): (line 107)
        # Processing the call arguments (line 107)
        # Getting the type of 'pressure_network' (line 108)
        pressure_network_218279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'pressure_network', False)
        # Getting the type of 'initial_guess' (line 108)
        initial_guess_218280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 30), 'initial_guess', False)
        # Processing the call keyword arguments (line 107)
        
        # Obtaining an instance of the builtin type 'tuple' (line 108)
        tuple_218281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 108, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 108)
        # Adding element type (line 108)
        # Getting the type of 'Qtot' (line 108)
        Qtot_218282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 51), 'Qtot', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 51), tuple_218281, Qtot_218282)
        # Adding element type (line 108)
        # Getting the type of 'k' (line 108)
        k_218283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 57), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 108, 51), tuple_218281, k_218283)
        
        keyword_218284 = tuple_218281
        # Getting the type of 'True' (line 109)
        True_218285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 24), 'True', False)
        keyword_218286 = True_218285
        kwargs_218287 = {'args': keyword_218284, 'full_output': keyword_218286}
        # Getting the type of 'optimize' (line 107)
        optimize_218277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 39), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 107)
        fsolve_218278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 39), optimize_218277, 'fsolve')
        # Calling fsolve(args, kwargs) (line 107)
        fsolve_call_result_218288 = invoke(stypy.reporting.localization.Localization(__file__, 107, 39), fsolve_218278, *[pressure_network_218279, initial_guess_218280], **kwargs_218287)
        
        # Obtaining the member '__getitem__' of a type (line 107)
        getitem___218289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 8), fsolve_call_result_218288, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 107)
        subscript_call_result_218290 = invoke(stypy.reporting.localization.Localization(__file__, 107, 8), getitem___218289, int_218276)
        
        # Assigning a type to the variable 'tuple_var_assignment_217988' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'tuple_var_assignment_217988', subscript_call_result_218290)
        
        # Assigning a Name to a Name (line 107):
        # Getting the type of 'tuple_var_assignment_217985' (line 107)
        tuple_var_assignment_217985_218291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'tuple_var_assignment_217985')
        # Assigning a type to the variable 'final_flows' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'final_flows', tuple_var_assignment_217985_218291)
        
        # Assigning a Name to a Name (line 107):
        # Getting the type of 'tuple_var_assignment_217986' (line 107)
        tuple_var_assignment_217986_218292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'tuple_var_assignment_217986')
        # Assigning a type to the variable 'info' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 21), 'info', tuple_var_assignment_217986_218292)
        
        # Assigning a Name to a Name (line 107):
        # Getting the type of 'tuple_var_assignment_217987' (line 107)
        tuple_var_assignment_217987_218293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'tuple_var_assignment_217987')
        # Assigning a type to the variable 'ier' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 27), 'ier', tuple_var_assignment_217987_218293)
        
        # Assigning a Name to a Name (line 107):
        # Getting the type of 'tuple_var_assignment_217988' (line 107)
        tuple_var_assignment_217988_218294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'tuple_var_assignment_217988')
        # Assigning a type to the variable 'mesg' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 32), 'mesg', tuple_var_assignment_217988_218294)
        
        # Call to assert_array_almost_equal(...): (line 110)
        # Processing the call arguments (line 110)
        # Getting the type of 'final_flows' (line 110)
        final_flows_218296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 34), 'final_flows', False)
        
        # Call to ones(...): (line 110)
        # Processing the call arguments (line 110)
        int_218299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 55), 'int')
        # Processing the call keyword arguments (line 110)
        kwargs_218300 = {}
        # Getting the type of 'np' (line 110)
        np_218297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 47), 'np', False)
        # Obtaining the member 'ones' of a type (line 110)
        ones_218298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 47), np_218297, 'ones')
        # Calling ones(args, kwargs) (line 110)
        ones_call_result_218301 = invoke(stypy.reporting.localization.Localization(__file__, 110, 47), ones_218298, *[int_218299], **kwargs_218300)
        
        # Processing the call keyword arguments (line 110)
        kwargs_218302 = {}
        # Getting the type of 'assert_array_almost_equal' (line 110)
        assert_array_almost_equal_218295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 110)
        assert_array_almost_equal_call_result_218303 = invoke(stypy.reporting.localization.Localization(__file__, 110, 8), assert_array_almost_equal_218295, *[final_flows_218296, ones_call_result_218301], **kwargs_218302)
        
        
        # Call to assert_(...): (line 111)
        # Processing the call arguments (line 111)
        
        # Getting the type of 'ier' (line 111)
        ier_218305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 16), 'ier', False)
        int_218306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 23), 'int')
        # Applying the binary operator '==' (line 111)
        result_eq_218307 = python_operator(stypy.reporting.localization.Localization(__file__, 111, 16), '==', ier_218305, int_218306)
        
        # Getting the type of 'mesg' (line 111)
        mesg_218308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 26), 'mesg', False)
        # Processing the call keyword arguments (line 111)
        kwargs_218309 = {}
        # Getting the type of 'assert_' (line 111)
        assert__218304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 111)
        assert__call_result_218310 = invoke(stypy.reporting.localization.Localization(__file__, 111, 8), assert__218304, *[result_eq_218307, mesg_218308], **kwargs_218309)
        
        
        # ################# End of 'test_pressure_network_no_gradient(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pressure_network_no_gradient' in the type store
        # Getting the type of 'stypy_return_type' (line 102)
        stypy_return_type_218311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218311)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pressure_network_no_gradient'
        return stypy_return_type_218311


    @norecursion
    def test_pressure_network_with_gradient(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pressure_network_with_gradient'
        module_type_store = module_type_store.open_function_context('test_pressure_network_with_gradient', 113, 4, False)
        # Assigning a type to the variable 'self' (line 114)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 114, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_localization', localization)
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_function_name', 'TestFSolve.test_pressure_network_with_gradient')
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_param_names_list', [])
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFSolve.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFSolve.test_pressure_network_with_gradient', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pressure_network_with_gradient', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pressure_network_with_gradient(...)' code ##################

        
        # Assigning a BinOp to a Name (line 115):
        
        # Assigning a BinOp to a Name (line 115):
        
        # Call to ones(...): (line 115)
        # Processing the call arguments (line 115)
        int_218314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 20), 'int')
        # Processing the call keyword arguments (line 115)
        kwargs_218315 = {}
        # Getting the type of 'np' (line 115)
        np_218312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 12), 'np', False)
        # Obtaining the member 'ones' of a type (line 115)
        ones_218313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 12), np_218312, 'ones')
        # Calling ones(args, kwargs) (line 115)
        ones_call_result_218316 = invoke(stypy.reporting.localization.Localization(__file__, 115, 12), ones_218313, *[int_218314], **kwargs_218315)
        
        float_218317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 25), 'float')
        # Applying the binary operator '*' (line 115)
        result_mul_218318 = python_operator(stypy.reporting.localization.Localization(__file__, 115, 12), '*', ones_call_result_218316, float_218317)
        
        # Assigning a type to the variable 'k' (line 115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 8), 'k', result_mul_218318)
        
        # Assigning a Num to a Name (line 116):
        
        # Assigning a Num to a Name (line 116):
        int_218319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 15), 'int')
        # Assigning a type to the variable 'Qtot' (line 116)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 116, 8), 'Qtot', int_218319)
        
        # Assigning a Call to a Name (line 117):
        
        # Assigning a Call to a Name (line 117):
        
        # Call to array(...): (line 117)
        # Processing the call arguments (line 117)
        
        # Obtaining an instance of the builtin type 'list' (line 117)
        list_218321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 117)
        # Adding element type (line 117)
        float_218322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 117, 30), list_218321, float_218322)
        # Adding element type (line 117)
        float_218323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 35), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 117, 30), list_218321, float_218323)
        # Adding element type (line 117)
        float_218324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 117, 30), list_218321, float_218324)
        # Adding element type (line 117)
        float_218325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 117, 30), list_218321, float_218325)
        
        # Processing the call keyword arguments (line 117)
        kwargs_218326 = {}
        # Getting the type of 'array' (line 117)
        array_218320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 24), 'array', False)
        # Calling array(args, kwargs) (line 117)
        array_call_result_218327 = invoke(stypy.reporting.localization.Localization(__file__, 117, 24), array_218320, *[list_218321], **kwargs_218326)
        
        # Assigning a type to the variable 'initial_guess' (line 117)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 8), 'initial_guess', array_call_result_218327)
        
        # Assigning a Call to a Name (line 118):
        
        # Assigning a Call to a Name (line 118):
        
        # Call to fsolve(...): (line 118)
        # Processing the call arguments (line 118)
        # Getting the type of 'pressure_network' (line 119)
        pressure_network_218330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 12), 'pressure_network', False)
        # Getting the type of 'initial_guess' (line 119)
        initial_guess_218331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 30), 'initial_guess', False)
        # Processing the call keyword arguments (line 118)
        
        # Obtaining an instance of the builtin type 'tuple' (line 119)
        tuple_218332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 51), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 119)
        # Adding element type (line 119)
        # Getting the type of 'Qtot' (line 119)
        Qtot_218333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 51), 'Qtot', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 51), tuple_218332, Qtot_218333)
        # Adding element type (line 119)
        # Getting the type of 'k' (line 119)
        k_218334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 57), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 51), tuple_218332, k_218334)
        
        keyword_218335 = tuple_218332
        # Getting the type of 'pressure_network_jacobian' (line 120)
        pressure_network_jacobian_218336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 19), 'pressure_network_jacobian', False)
        keyword_218337 = pressure_network_jacobian_218336
        kwargs_218338 = {'args': keyword_218335, 'fprime': keyword_218337}
        # Getting the type of 'optimize' (line 118)
        optimize_218328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 22), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 118)
        fsolve_218329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 118, 22), optimize_218328, 'fsolve')
        # Calling fsolve(args, kwargs) (line 118)
        fsolve_call_result_218339 = invoke(stypy.reporting.localization.Localization(__file__, 118, 22), fsolve_218329, *[pressure_network_218330, initial_guess_218331], **kwargs_218338)
        
        # Assigning a type to the variable 'final_flows' (line 118)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 118, 8), 'final_flows', fsolve_call_result_218339)
        
        # Call to assert_array_almost_equal(...): (line 121)
        # Processing the call arguments (line 121)
        # Getting the type of 'final_flows' (line 121)
        final_flows_218341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 34), 'final_flows', False)
        
        # Call to ones(...): (line 121)
        # Processing the call arguments (line 121)
        int_218344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 55), 'int')
        # Processing the call keyword arguments (line 121)
        kwargs_218345 = {}
        # Getting the type of 'np' (line 121)
        np_218342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 47), 'np', False)
        # Obtaining the member 'ones' of a type (line 121)
        ones_218343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 47), np_218342, 'ones')
        # Calling ones(args, kwargs) (line 121)
        ones_call_result_218346 = invoke(stypy.reporting.localization.Localization(__file__, 121, 47), ones_218343, *[int_218344], **kwargs_218345)
        
        # Processing the call keyword arguments (line 121)
        kwargs_218347 = {}
        # Getting the type of 'assert_array_almost_equal' (line 121)
        assert_array_almost_equal_218340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 121)
        assert_array_almost_equal_call_result_218348 = invoke(stypy.reporting.localization.Localization(__file__, 121, 8), assert_array_almost_equal_218340, *[final_flows_218341, ones_call_result_218346], **kwargs_218347)
        
        
        # ################# End of 'test_pressure_network_with_gradient(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pressure_network_with_gradient' in the type store
        # Getting the type of 'stypy_return_type' (line 113)
        stypy_return_type_218349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218349)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pressure_network_with_gradient'
        return stypy_return_type_218349


    @norecursion
    def test_wrong_shape_func_callable(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrong_shape_func_callable'
        module_type_store = module_type_store.open_function_context('test_wrong_shape_func_callable', 123, 4, False)
        # Assigning a type to the variable 'self' (line 124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_localization', localization)
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_function_name', 'TestFSolve.test_wrong_shape_func_callable')
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_param_names_list', [])
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFSolve.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFSolve.test_wrong_shape_func_callable', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrong_shape_func_callable', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrong_shape_func_callable(...)' code ##################

        
        # Assigning a Call to a Name (line 124):
        
        # Assigning a Call to a Name (line 124):
        
        # Call to ReturnShape(...): (line 124)
        # Processing the call arguments (line 124)
        int_218351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 27), 'int')
        # Processing the call keyword arguments (line 124)
        kwargs_218352 = {}
        # Getting the type of 'ReturnShape' (line 124)
        ReturnShape_218350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 15), 'ReturnShape', False)
        # Calling ReturnShape(args, kwargs) (line 124)
        ReturnShape_call_result_218353 = invoke(stypy.reporting.localization.Localization(__file__, 124, 15), ReturnShape_218350, *[int_218351], **kwargs_218352)
        
        # Assigning a type to the variable 'func' (line 124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 8), 'func', ReturnShape_call_result_218353)
        
        # Assigning a List to a Name (line 127):
        
        # Assigning a List to a Name (line 127):
        
        # Obtaining an instance of the builtin type 'list' (line 127)
        list_218354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 127)
        # Adding element type (line 127)
        float_218355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 14), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 13), list_218354, float_218355)
        # Adding element type (line 127)
        float_218356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 13), list_218354, float_218356)
        
        # Assigning a type to the variable 'x0' (line 127)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 127, 8), 'x0', list_218354)
        
        # Call to assert_raises(...): (line 128)
        # Processing the call arguments (line 128)
        # Getting the type of 'TypeError' (line 128)
        TypeError_218358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 22), 'TypeError', False)
        # Getting the type of 'optimize' (line 128)
        optimize_218359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 33), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 128)
        fsolve_218360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 128, 33), optimize_218359, 'fsolve')
        # Getting the type of 'func' (line 128)
        func_218361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 50), 'func', False)
        # Getting the type of 'x0' (line 128)
        x0_218362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 56), 'x0', False)
        # Processing the call keyword arguments (line 128)
        kwargs_218363 = {}
        # Getting the type of 'assert_raises' (line 128)
        assert_raises_218357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 128)
        assert_raises_call_result_218364 = invoke(stypy.reporting.localization.Localization(__file__, 128, 8), assert_raises_218357, *[TypeError_218358, fsolve_218360, func_218361, x0_218362], **kwargs_218363)
        
        
        # ################# End of 'test_wrong_shape_func_callable(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrong_shape_func_callable' in the type store
        # Getting the type of 'stypy_return_type' (line 123)
        stypy_return_type_218365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218365)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrong_shape_func_callable'
        return stypy_return_type_218365


    @norecursion
    def test_wrong_shape_func_function(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrong_shape_func_function'
        module_type_store = module_type_store.open_function_context('test_wrong_shape_func_function', 130, 4, False)
        # Assigning a type to the variable 'self' (line 131)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 131, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_localization', localization)
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_function_name', 'TestFSolve.test_wrong_shape_func_function')
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_param_names_list', [])
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFSolve.test_wrong_shape_func_function.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFSolve.test_wrong_shape_func_function', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrong_shape_func_function', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrong_shape_func_function(...)' code ##################

        
        # Assigning a List to a Name (line 133):
        
        # Assigning a List to a Name (line 133):
        
        # Obtaining an instance of the builtin type 'list' (line 133)
        list_218366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 133)
        # Adding element type (line 133)
        float_218367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 14), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 13), list_218366, float_218367)
        # Adding element type (line 133)
        float_218368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 13), list_218366, float_218368)
        
        # Assigning a type to the variable 'x0' (line 133)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 133, 8), 'x0', list_218366)
        
        # Call to assert_raises(...): (line 134)
        # Processing the call arguments (line 134)
        # Getting the type of 'TypeError' (line 134)
        TypeError_218370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 22), 'TypeError', False)
        # Getting the type of 'optimize' (line 134)
        optimize_218371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 33), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 134)
        fsolve_218372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 33), optimize_218371, 'fsolve')
        # Getting the type of 'dummy_func' (line 134)
        dummy_func_218373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 50), 'dummy_func', False)
        # Getting the type of 'x0' (line 134)
        x0_218374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 62), 'x0', False)
        # Processing the call keyword arguments (line 134)
        
        # Obtaining an instance of the builtin type 'tuple' (line 134)
        tuple_218375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 72), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 134)
        # Adding element type (line 134)
        
        # Obtaining an instance of the builtin type 'tuple' (line 134)
        tuple_218376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 73), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 134)
        # Adding element type (line 134)
        int_218377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 73), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 73), tuple_218376, int_218377)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 72), tuple_218375, tuple_218376)
        
        keyword_218378 = tuple_218375
        kwargs_218379 = {'args': keyword_218378}
        # Getting the type of 'assert_raises' (line 134)
        assert_raises_218369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 134)
        assert_raises_call_result_218380 = invoke(stypy.reporting.localization.Localization(__file__, 134, 8), assert_raises_218369, *[TypeError_218370, fsolve_218372, dummy_func_218373, x0_218374], **kwargs_218379)
        
        
        # ################# End of 'test_wrong_shape_func_function(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrong_shape_func_function' in the type store
        # Getting the type of 'stypy_return_type' (line 130)
        stypy_return_type_218381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218381)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrong_shape_func_function'
        return stypy_return_type_218381


    @norecursion
    def test_wrong_shape_fprime_callable(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrong_shape_fprime_callable'
        module_type_store = module_type_store.open_function_context('test_wrong_shape_fprime_callable', 136, 4, False)
        # Assigning a type to the variable 'self' (line 137)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 137, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_localization', localization)
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_function_name', 'TestFSolve.test_wrong_shape_fprime_callable')
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_param_names_list', [])
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFSolve.test_wrong_shape_fprime_callable.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFSolve.test_wrong_shape_fprime_callable', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrong_shape_fprime_callable', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrong_shape_fprime_callable(...)' code ##################

        
        # Assigning a Call to a Name (line 137):
        
        # Assigning a Call to a Name (line 137):
        
        # Call to ReturnShape(...): (line 137)
        # Processing the call arguments (line 137)
        int_218383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 27), 'int')
        # Processing the call keyword arguments (line 137)
        kwargs_218384 = {}
        # Getting the type of 'ReturnShape' (line 137)
        ReturnShape_218382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 15), 'ReturnShape', False)
        # Calling ReturnShape(args, kwargs) (line 137)
        ReturnShape_call_result_218385 = invoke(stypy.reporting.localization.Localization(__file__, 137, 15), ReturnShape_218382, *[int_218383], **kwargs_218384)
        
        # Assigning a type to the variable 'func' (line 137)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 137, 8), 'func', ReturnShape_call_result_218385)
        
        # Assigning a Call to a Name (line 138):
        
        # Assigning a Call to a Name (line 138):
        
        # Call to ReturnShape(...): (line 138)
        # Processing the call arguments (line 138)
        
        # Obtaining an instance of the builtin type 'tuple' (line 138)
        tuple_218387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 138)
        # Adding element type (line 138)
        int_218388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 34), tuple_218387, int_218388)
        # Adding element type (line 138)
        int_218389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 34), tuple_218387, int_218389)
        
        # Processing the call keyword arguments (line 138)
        kwargs_218390 = {}
        # Getting the type of 'ReturnShape' (line 138)
        ReturnShape_218386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 21), 'ReturnShape', False)
        # Calling ReturnShape(args, kwargs) (line 138)
        ReturnShape_call_result_218391 = invoke(stypy.reporting.localization.Localization(__file__, 138, 21), ReturnShape_218386, *[tuple_218387], **kwargs_218390)
        
        # Assigning a type to the variable 'deriv_func' (line 138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 8), 'deriv_func', ReturnShape_call_result_218391)
        
        # Call to assert_raises(...): (line 139)
        # Processing the call arguments (line 139)
        # Getting the type of 'TypeError' (line 139)
        TypeError_218393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 22), 'TypeError', False)
        # Getting the type of 'optimize' (line 139)
        optimize_218394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 33), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 139)
        fsolve_218395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 139, 33), optimize_218394, 'fsolve')
        # Getting the type of 'func' (line 139)
        func_218396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 50), 'func', False)
        # Processing the call keyword arguments (line 139)
        
        # Obtaining an instance of the builtin type 'list' (line 139)
        list_218397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 139)
        # Adding element type (line 139)
        int_218398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 59), list_218397, int_218398)
        # Adding element type (line 139)
        int_218399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 59), list_218397, int_218399)
        
        keyword_218400 = list_218397
        # Getting the type of 'deriv_func' (line 139)
        deriv_func_218401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 73), 'deriv_func', False)
        keyword_218402 = deriv_func_218401
        kwargs_218403 = {'x0': keyword_218400, 'fprime': keyword_218402}
        # Getting the type of 'assert_raises' (line 139)
        assert_raises_218392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 139)
        assert_raises_call_result_218404 = invoke(stypy.reporting.localization.Localization(__file__, 139, 8), assert_raises_218392, *[TypeError_218393, fsolve_218395, func_218396], **kwargs_218403)
        
        
        # ################# End of 'test_wrong_shape_fprime_callable(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrong_shape_fprime_callable' in the type store
        # Getting the type of 'stypy_return_type' (line 136)
        stypy_return_type_218405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218405)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrong_shape_fprime_callable'
        return stypy_return_type_218405


    @norecursion
    def test_wrong_shape_fprime_function(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrong_shape_fprime_function'
        module_type_store = module_type_store.open_function_context('test_wrong_shape_fprime_function', 141, 4, False)
        # Assigning a type to the variable 'self' (line 142)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 142, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_localization', localization)
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_function_name', 'TestFSolve.test_wrong_shape_fprime_function')
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_param_names_list', [])
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFSolve.test_wrong_shape_fprime_function.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFSolve.test_wrong_shape_fprime_function', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrong_shape_fprime_function', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrong_shape_fprime_function(...)' code ##################

        
        # Assigning a Lambda to a Name (line 142):
        
        # Assigning a Lambda to a Name (line 142):

        @norecursion
        def _stypy_temp_lambda_73(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_73'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_73', 142, 15, True)
            # Passed parameters checking function
            _stypy_temp_lambda_73.stypy_localization = localization
            _stypy_temp_lambda_73.stypy_type_of_self = None
            _stypy_temp_lambda_73.stypy_type_store = module_type_store
            _stypy_temp_lambda_73.stypy_function_name = '_stypy_temp_lambda_73'
            _stypy_temp_lambda_73.stypy_param_names_list = ['x']
            _stypy_temp_lambda_73.stypy_varargs_param_name = None
            _stypy_temp_lambda_73.stypy_kwargs_param_name = None
            _stypy_temp_lambda_73.stypy_call_defaults = defaults
            _stypy_temp_lambda_73.stypy_call_varargs = varargs
            _stypy_temp_lambda_73.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_73', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_73', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to dummy_func(...): (line 142)
            # Processing the call arguments (line 142)
            # Getting the type of 'x' (line 142)
            x_218407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 36), 'x', False)
            
            # Obtaining an instance of the builtin type 'tuple' (line 142)
            tuple_218408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 40), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 142)
            # Adding element type (line 142)
            int_218409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 40), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 40), tuple_218408, int_218409)
            
            # Processing the call keyword arguments (line 142)
            kwargs_218410 = {}
            # Getting the type of 'dummy_func' (line 142)
            dummy_func_218406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 25), 'dummy_func', False)
            # Calling dummy_func(args, kwargs) (line 142)
            dummy_func_call_result_218411 = invoke(stypy.reporting.localization.Localization(__file__, 142, 25), dummy_func_218406, *[x_218407, tuple_218408], **kwargs_218410)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 142)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 142, 15), 'stypy_return_type', dummy_func_call_result_218411)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_73' in the type store
            # Getting the type of 'stypy_return_type' (line 142)
            stypy_return_type_218412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 15), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_218412)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_73'
            return stypy_return_type_218412

        # Assigning a type to the variable '_stypy_temp_lambda_73' (line 142)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 142, 15), '_stypy_temp_lambda_73', _stypy_temp_lambda_73)
        # Getting the type of '_stypy_temp_lambda_73' (line 142)
        _stypy_temp_lambda_73_218413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 15), '_stypy_temp_lambda_73')
        # Assigning a type to the variable 'func' (line 142)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 142, 8), 'func', _stypy_temp_lambda_73_218413)
        
        # Assigning a Lambda to a Name (line 143):
        
        # Assigning a Lambda to a Name (line 143):

        @norecursion
        def _stypy_temp_lambda_74(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_74'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_74', 143, 21, True)
            # Passed parameters checking function
            _stypy_temp_lambda_74.stypy_localization = localization
            _stypy_temp_lambda_74.stypy_type_of_self = None
            _stypy_temp_lambda_74.stypy_type_store = module_type_store
            _stypy_temp_lambda_74.stypy_function_name = '_stypy_temp_lambda_74'
            _stypy_temp_lambda_74.stypy_param_names_list = ['x']
            _stypy_temp_lambda_74.stypy_varargs_param_name = None
            _stypy_temp_lambda_74.stypy_kwargs_param_name = None
            _stypy_temp_lambda_74.stypy_call_defaults = defaults
            _stypy_temp_lambda_74.stypy_call_varargs = varargs
            _stypy_temp_lambda_74.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_74', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_74', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to dummy_func(...): (line 143)
            # Processing the call arguments (line 143)
            # Getting the type of 'x' (line 143)
            x_218415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 42), 'x', False)
            
            # Obtaining an instance of the builtin type 'tuple' (line 143)
            tuple_218416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 46), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 143)
            # Adding element type (line 143)
            int_218417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 46), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 46), tuple_218416, int_218417)
            # Adding element type (line 143)
            int_218418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, 48), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 143, 46), tuple_218416, int_218418)
            
            # Processing the call keyword arguments (line 143)
            kwargs_218419 = {}
            # Getting the type of 'dummy_func' (line 143)
            dummy_func_218414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 31), 'dummy_func', False)
            # Calling dummy_func(args, kwargs) (line 143)
            dummy_func_call_result_218420 = invoke(stypy.reporting.localization.Localization(__file__, 143, 31), dummy_func_218414, *[x_218415, tuple_218416], **kwargs_218419)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 143)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 21), 'stypy_return_type', dummy_func_call_result_218420)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_74' in the type store
            # Getting the type of 'stypy_return_type' (line 143)
            stypy_return_type_218421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 21), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_218421)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_74'
            return stypy_return_type_218421

        # Assigning a type to the variable '_stypy_temp_lambda_74' (line 143)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 21), '_stypy_temp_lambda_74', _stypy_temp_lambda_74)
        # Getting the type of '_stypy_temp_lambda_74' (line 143)
        _stypy_temp_lambda_74_218422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 21), '_stypy_temp_lambda_74')
        # Assigning a type to the variable 'deriv_func' (line 143)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 8), 'deriv_func', _stypy_temp_lambda_74_218422)
        
        # Call to assert_raises(...): (line 144)
        # Processing the call arguments (line 144)
        # Getting the type of 'TypeError' (line 144)
        TypeError_218424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 22), 'TypeError', False)
        # Getting the type of 'optimize' (line 144)
        optimize_218425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 33), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 144)
        fsolve_218426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 33), optimize_218425, 'fsolve')
        # Getting the type of 'func' (line 144)
        func_218427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 50), 'func', False)
        # Processing the call keyword arguments (line 144)
        
        # Obtaining an instance of the builtin type 'list' (line 144)
        list_218428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 144)
        # Adding element type (line 144)
        int_218429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 59), list_218428, int_218429)
        # Adding element type (line 144)
        int_218430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 59), list_218428, int_218430)
        
        keyword_218431 = list_218428
        # Getting the type of 'deriv_func' (line 144)
        deriv_func_218432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 73), 'deriv_func', False)
        keyword_218433 = deriv_func_218432
        kwargs_218434 = {'x0': keyword_218431, 'fprime': keyword_218433}
        # Getting the type of 'assert_raises' (line 144)
        assert_raises_218423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 144)
        assert_raises_call_result_218435 = invoke(stypy.reporting.localization.Localization(__file__, 144, 8), assert_raises_218423, *[TypeError_218424, fsolve_218426, func_218427], **kwargs_218434)
        
        
        # ################# End of 'test_wrong_shape_fprime_function(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrong_shape_fprime_function' in the type store
        # Getting the type of 'stypy_return_type' (line 141)
        stypy_return_type_218436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218436)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrong_shape_fprime_function'
        return stypy_return_type_218436


    @norecursion
    def test_float32(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_float32'
        module_type_store = module_type_store.open_function_context('test_float32', 146, 4, False)
        # Assigning a type to the variable 'self' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFSolve.test_float32.__dict__.__setitem__('stypy_localization', localization)
        TestFSolve.test_float32.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFSolve.test_float32.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFSolve.test_float32.__dict__.__setitem__('stypy_function_name', 'TestFSolve.test_float32')
        TestFSolve.test_float32.__dict__.__setitem__('stypy_param_names_list', [])
        TestFSolve.test_float32.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFSolve.test_float32.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFSolve.test_float32.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFSolve.test_float32.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFSolve.test_float32.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFSolve.test_float32.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFSolve.test_float32', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_float32', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_float32(...)' code ##################

        
        # Assigning a Lambda to a Name (line 147):
        
        # Assigning a Lambda to a Name (line 147):

        @norecursion
        def _stypy_temp_lambda_75(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_75'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_75', 147, 15, True)
            # Passed parameters checking function
            _stypy_temp_lambda_75.stypy_localization = localization
            _stypy_temp_lambda_75.stypy_type_of_self = None
            _stypy_temp_lambda_75.stypy_type_store = module_type_store
            _stypy_temp_lambda_75.stypy_function_name = '_stypy_temp_lambda_75'
            _stypy_temp_lambda_75.stypy_param_names_list = ['x']
            _stypy_temp_lambda_75.stypy_varargs_param_name = None
            _stypy_temp_lambda_75.stypy_kwargs_param_name = None
            _stypy_temp_lambda_75.stypy_call_defaults = defaults
            _stypy_temp_lambda_75.stypy_call_varargs = varargs
            _stypy_temp_lambda_75.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_75', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_75', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to array(...): (line 147)
            # Processing the call arguments (line 147)
            
            # Obtaining an instance of the builtin type 'list' (line 147)
            list_218439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 34), 'list')
            # Adding type elements to the builtin type 'list' instance (line 147)
            # Adding element type (line 147)
            
            # Obtaining the type of the subscript
            int_218440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 37), 'int')
            # Getting the type of 'x' (line 147)
            x_218441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 35), 'x', False)
            # Obtaining the member '__getitem__' of a type (line 147)
            getitem___218442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 35), x_218441, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 147)
            subscript_call_result_218443 = invoke(stypy.reporting.localization.Localization(__file__, 147, 35), getitem___218442, int_218440)
            
            int_218444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 42), 'int')
            # Applying the binary operator '-' (line 147)
            result_sub_218445 = python_operator(stypy.reporting.localization.Localization(__file__, 147, 35), '-', subscript_call_result_218443, int_218444)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 147, 34), list_218439, result_sub_218445)
            # Adding element type (line 147)
            
            # Obtaining the type of the subscript
            int_218446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 49), 'int')
            # Getting the type of 'x' (line 147)
            x_218447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 47), 'x', False)
            # Obtaining the member '__getitem__' of a type (line 147)
            getitem___218448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 47), x_218447, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 147)
            subscript_call_result_218449 = invoke(stypy.reporting.localization.Localization(__file__, 147, 47), getitem___218448, int_218446)
            
            int_218450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 54), 'int')
            # Applying the binary operator '-' (line 147)
            result_sub_218451 = python_operator(stypy.reporting.localization.Localization(__file__, 147, 47), '-', subscript_call_result_218449, int_218450)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 147, 34), list_218439, result_sub_218451)
            
            # Processing the call keyword arguments (line 147)
            # Getting the type of 'np' (line 147)
            np_218452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 67), 'np', False)
            # Obtaining the member 'float32' of a type (line 147)
            float32_218453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 67), np_218452, 'float32')
            keyword_218454 = float32_218453
            kwargs_218455 = {'dtype': keyword_218454}
            # Getting the type of 'np' (line 147)
            np_218437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 25), 'np', False)
            # Obtaining the member 'array' of a type (line 147)
            array_218438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 25), np_218437, 'array')
            # Calling array(args, kwargs) (line 147)
            array_call_result_218456 = invoke(stypy.reporting.localization.Localization(__file__, 147, 25), array_218438, *[list_218439], **kwargs_218455)
            
            int_218457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 80), 'int')
            # Applying the binary operator '**' (line 147)
            result_pow_218458 = python_operator(stypy.reporting.localization.Localization(__file__, 147, 25), '**', array_call_result_218456, int_218457)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 147)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 15), 'stypy_return_type', result_pow_218458)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_75' in the type store
            # Getting the type of 'stypy_return_type' (line 147)
            stypy_return_type_218459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 15), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_218459)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_75'
            return stypy_return_type_218459

        # Assigning a type to the variable '_stypy_temp_lambda_75' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 15), '_stypy_temp_lambda_75', _stypy_temp_lambda_75)
        # Getting the type of '_stypy_temp_lambda_75' (line 147)
        _stypy_temp_lambda_75_218460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 15), '_stypy_temp_lambda_75')
        # Assigning a type to the variable 'func' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 8), 'func', _stypy_temp_lambda_75_218460)
        
        # Assigning a Call to a Name (line 148):
        
        # Assigning a Call to a Name (line 148):
        
        # Call to fsolve(...): (line 148)
        # Processing the call arguments (line 148)
        # Getting the type of 'func' (line 148)
        func_218463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 28), 'func', False)
        
        # Call to array(...): (line 148)
        # Processing the call arguments (line 148)
        
        # Obtaining an instance of the builtin type 'list' (line 148)
        list_218466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 148)
        # Adding element type (line 148)
        int_218467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 43), list_218466, int_218467)
        # Adding element type (line 148)
        int_218468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 43), list_218466, int_218468)
        
        # Getting the type of 'np' (line 148)
        np_218469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 51), 'np', False)
        # Obtaining the member 'float32' of a type (line 148)
        float32_218470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 51), np_218469, 'float32')
        # Processing the call keyword arguments (line 148)
        kwargs_218471 = {}
        # Getting the type of 'np' (line 148)
        np_218464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 34), 'np', False)
        # Obtaining the member 'array' of a type (line 148)
        array_218465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 34), np_218464, 'array')
        # Calling array(args, kwargs) (line 148)
        array_call_result_218472 = invoke(stypy.reporting.localization.Localization(__file__, 148, 34), array_218465, *[list_218466, float32_218470], **kwargs_218471)
        
        # Processing the call keyword arguments (line 148)
        kwargs_218473 = {}
        # Getting the type of 'optimize' (line 148)
        optimize_218461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 12), 'optimize', False)
        # Obtaining the member 'fsolve' of a type (line 148)
        fsolve_218462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 12), optimize_218461, 'fsolve')
        # Calling fsolve(args, kwargs) (line 148)
        fsolve_call_result_218474 = invoke(stypy.reporting.localization.Localization(__file__, 148, 12), fsolve_218462, *[func_218463, array_call_result_218472], **kwargs_218473)
        
        # Assigning a type to the variable 'p' (line 148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 148, 8), 'p', fsolve_call_result_218474)
        
        # Call to assert_allclose(...): (line 149)
        # Processing the call arguments (line 149)
        
        # Call to func(...): (line 149)
        # Processing the call arguments (line 149)
        # Getting the type of 'p' (line 149)
        p_218477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 29), 'p', False)
        # Processing the call keyword arguments (line 149)
        kwargs_218478 = {}
        # Getting the type of 'func' (line 149)
        func_218476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 24), 'func', False)
        # Calling func(args, kwargs) (line 149)
        func_call_result_218479 = invoke(stypy.reporting.localization.Localization(__file__, 149, 24), func_218476, *[p_218477], **kwargs_218478)
        
        
        # Obtaining an instance of the builtin type 'list' (line 149)
        list_218480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 149)
        # Adding element type (line 149)
        int_218481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 33), list_218480, int_218481)
        # Adding element type (line 149)
        int_218482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 33), list_218480, int_218482)
        
        # Processing the call keyword arguments (line 149)
        float_218483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 46), 'float')
        keyword_218484 = float_218483
        kwargs_218485 = {'atol': keyword_218484}
        # Getting the type of 'assert_allclose' (line 149)
        assert_allclose_218475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 149)
        assert_allclose_call_result_218486 = invoke(stypy.reporting.localization.Localization(__file__, 149, 8), assert_allclose_218475, *[func_call_result_218479, list_218480], **kwargs_218485)
        
        
        # ################# End of 'test_float32(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_float32' in the type store
        # Getting the type of 'stypy_return_type' (line 146)
        stypy_return_type_218487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218487)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_float32'
        return stypy_return_type_218487


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 101, 0, False)
        # Assigning a type to the variable 'self' (line 102)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFSolve.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestFSolve' (line 101)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 0), 'TestFSolve', TestFSolve)
# Declaration of the 'TestRootHybr' class

class TestRootHybr(object, ):

    @norecursion
    def test_pressure_network_no_gradient(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pressure_network_no_gradient'
        module_type_store = module_type_store.open_function_context('test_pressure_network_no_gradient', 153, 4, False)
        # Assigning a type to the variable 'self' (line 154)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 154, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_localization', localization)
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_function_name', 'TestRootHybr.test_pressure_network_no_gradient')
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_param_names_list', [])
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestRootHybr.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRootHybr.test_pressure_network_no_gradient', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pressure_network_no_gradient', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pressure_network_no_gradient(...)' code ##################

        
        # Assigning a BinOp to a Name (line 155):
        
        # Assigning a BinOp to a Name (line 155):
        
        # Call to ones(...): (line 155)
        # Processing the call arguments (line 155)
        int_218490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, 20), 'int')
        # Processing the call keyword arguments (line 155)
        kwargs_218491 = {}
        # Getting the type of 'np' (line 155)
        np_218488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'np', False)
        # Obtaining the member 'ones' of a type (line 155)
        ones_218489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 12), np_218488, 'ones')
        # Calling ones(args, kwargs) (line 155)
        ones_call_result_218492 = invoke(stypy.reporting.localization.Localization(__file__, 155, 12), ones_218489, *[int_218490], **kwargs_218491)
        
        float_218493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, 25), 'float')
        # Applying the binary operator '*' (line 155)
        result_mul_218494 = python_operator(stypy.reporting.localization.Localization(__file__, 155, 12), '*', ones_call_result_218492, float_218493)
        
        # Assigning a type to the variable 'k' (line 155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 155, 8), 'k', result_mul_218494)
        
        # Assigning a Num to a Name (line 156):
        
        # Assigning a Num to a Name (line 156):
        int_218495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 15), 'int')
        # Assigning a type to the variable 'Qtot' (line 156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 8), 'Qtot', int_218495)
        
        # Assigning a Call to a Name (line 157):
        
        # Assigning a Call to a Name (line 157):
        
        # Call to array(...): (line 157)
        # Processing the call arguments (line 157)
        
        # Obtaining an instance of the builtin type 'list' (line 157)
        list_218497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 157)
        # Adding element type (line 157)
        float_218498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 30), list_218497, float_218498)
        # Adding element type (line 157)
        float_218499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 35), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 30), list_218497, float_218499)
        # Adding element type (line 157)
        float_218500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 30), list_218497, float_218500)
        # Adding element type (line 157)
        float_218501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 30), list_218497, float_218501)
        
        # Processing the call keyword arguments (line 157)
        kwargs_218502 = {}
        # Getting the type of 'array' (line 157)
        array_218496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 24), 'array', False)
        # Calling array(args, kwargs) (line 157)
        array_call_result_218503 = invoke(stypy.reporting.localization.Localization(__file__, 157, 24), array_218496, *[list_218497], **kwargs_218502)
        
        # Assigning a type to the variable 'initial_guess' (line 157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 8), 'initial_guess', array_call_result_218503)
        
        # Assigning a Attribute to a Name (line 158):
        
        # Assigning a Attribute to a Name (line 158):
        
        # Call to root(...): (line 158)
        # Processing the call arguments (line 158)
        # Getting the type of 'pressure_network' (line 158)
        pressure_network_218506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 36), 'pressure_network', False)
        # Getting the type of 'initial_guess' (line 158)
        initial_guess_218507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 54), 'initial_guess', False)
        # Processing the call keyword arguments (line 158)
        str_218508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 43), 'str', 'hybr')
        keyword_218509 = str_218508
        
        # Obtaining an instance of the builtin type 'tuple' (line 159)
        tuple_218510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 57), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 159)
        # Adding element type (line 159)
        # Getting the type of 'Qtot' (line 159)
        Qtot_218511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 57), 'Qtot', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 159, 57), tuple_218510, Qtot_218511)
        # Adding element type (line 159)
        # Getting the type of 'k' (line 159)
        k_218512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 63), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 159, 57), tuple_218510, k_218512)
        
        keyword_218513 = tuple_218510
        kwargs_218514 = {'args': keyword_218513, 'method': keyword_218509}
        # Getting the type of 'optimize' (line 158)
        optimize_218504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 22), 'optimize', False)
        # Obtaining the member 'root' of a type (line 158)
        root_218505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 158, 22), optimize_218504, 'root')
        # Calling root(args, kwargs) (line 158)
        root_call_result_218515 = invoke(stypy.reporting.localization.Localization(__file__, 158, 22), root_218505, *[pressure_network_218506, initial_guess_218507], **kwargs_218514)
        
        # Obtaining the member 'x' of a type (line 158)
        x_218516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 158, 22), root_call_result_218515, 'x')
        # Assigning a type to the variable 'final_flows' (line 158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 158, 8), 'final_flows', x_218516)
        
        # Call to assert_array_almost_equal(...): (line 160)
        # Processing the call arguments (line 160)
        # Getting the type of 'final_flows' (line 160)
        final_flows_218518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 34), 'final_flows', False)
        
        # Call to ones(...): (line 160)
        # Processing the call arguments (line 160)
        int_218521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 55), 'int')
        # Processing the call keyword arguments (line 160)
        kwargs_218522 = {}
        # Getting the type of 'np' (line 160)
        np_218519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 47), 'np', False)
        # Obtaining the member 'ones' of a type (line 160)
        ones_218520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 160, 47), np_218519, 'ones')
        # Calling ones(args, kwargs) (line 160)
        ones_call_result_218523 = invoke(stypy.reporting.localization.Localization(__file__, 160, 47), ones_218520, *[int_218521], **kwargs_218522)
        
        # Processing the call keyword arguments (line 160)
        kwargs_218524 = {}
        # Getting the type of 'assert_array_almost_equal' (line 160)
        assert_array_almost_equal_218517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 160)
        assert_array_almost_equal_call_result_218525 = invoke(stypy.reporting.localization.Localization(__file__, 160, 8), assert_array_almost_equal_218517, *[final_flows_218518, ones_call_result_218523], **kwargs_218524)
        
        
        # ################# End of 'test_pressure_network_no_gradient(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pressure_network_no_gradient' in the type store
        # Getting the type of 'stypy_return_type' (line 153)
        stypy_return_type_218526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218526)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pressure_network_no_gradient'
        return stypy_return_type_218526


    @norecursion
    def test_pressure_network_with_gradient(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pressure_network_with_gradient'
        module_type_store = module_type_store.open_function_context('test_pressure_network_with_gradient', 162, 4, False)
        # Assigning a type to the variable 'self' (line 163)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 163, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_localization', localization)
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_function_name', 'TestRootHybr.test_pressure_network_with_gradient')
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_param_names_list', [])
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestRootHybr.test_pressure_network_with_gradient.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRootHybr.test_pressure_network_with_gradient', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pressure_network_with_gradient', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pressure_network_with_gradient(...)' code ##################

        
        # Assigning a BinOp to a Name (line 164):
        
        # Assigning a BinOp to a Name (line 164):
        
        # Call to ones(...): (line 164)
        # Processing the call arguments (line 164)
        int_218529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 20), 'int')
        # Processing the call keyword arguments (line 164)
        kwargs_218530 = {}
        # Getting the type of 'np' (line 164)
        np_218527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 12), 'np', False)
        # Obtaining the member 'ones' of a type (line 164)
        ones_218528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 164, 12), np_218527, 'ones')
        # Calling ones(args, kwargs) (line 164)
        ones_call_result_218531 = invoke(stypy.reporting.localization.Localization(__file__, 164, 12), ones_218528, *[int_218529], **kwargs_218530)
        
        float_218532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, 25), 'float')
        # Applying the binary operator '*' (line 164)
        result_mul_218533 = python_operator(stypy.reporting.localization.Localization(__file__, 164, 12), '*', ones_call_result_218531, float_218532)
        
        # Assigning a type to the variable 'k' (line 164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 164, 8), 'k', result_mul_218533)
        
        # Assigning a Num to a Name (line 165):
        
        # Assigning a Num to a Name (line 165):
        int_218534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 15), 'int')
        # Assigning a type to the variable 'Qtot' (line 165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 8), 'Qtot', int_218534)
        
        # Assigning a Call to a Name (line 166):
        
        # Assigning a Call to a Name (line 166):
        
        # Call to matrix(...): (line 166)
        # Processing the call arguments (line 166)
        
        # Obtaining an instance of the builtin type 'list' (line 166)
        list_218536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 166)
        # Adding element type (line 166)
        float_218537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 166, 31), list_218536, float_218537)
        # Adding element type (line 166)
        float_218538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 166, 31), list_218536, float_218538)
        # Adding element type (line 166)
        float_218539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 166, 31), list_218536, float_218539)
        # Adding element type (line 166)
        float_218540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 166, 31), list_218536, float_218540)
        
        # Processing the call keyword arguments (line 166)
        kwargs_218541 = {}
        # Getting the type of 'matrix' (line 166)
        matrix_218535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 24), 'matrix', False)
        # Calling matrix(args, kwargs) (line 166)
        matrix_call_result_218542 = invoke(stypy.reporting.localization.Localization(__file__, 166, 24), matrix_218535, *[list_218536], **kwargs_218541)
        
        # Assigning a type to the variable 'initial_guess' (line 166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 166, 8), 'initial_guess', matrix_call_result_218542)
        
        # Assigning a Attribute to a Name (line 167):
        
        # Assigning a Attribute to a Name (line 167):
        
        # Call to root(...): (line 167)
        # Processing the call arguments (line 167)
        # Getting the type of 'pressure_network' (line 167)
        pressure_network_218545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 36), 'pressure_network', False)
        # Getting the type of 'initial_guess' (line 167)
        initial_guess_218546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 54), 'initial_guess', False)
        # Processing the call keyword arguments (line 167)
        
        # Obtaining an instance of the builtin type 'tuple' (line 168)
        tuple_218547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 168)
        # Adding element type (line 168)
        # Getting the type of 'Qtot' (line 168)
        Qtot_218548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 42), 'Qtot', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 168, 42), tuple_218547, Qtot_218548)
        # Adding element type (line 168)
        # Getting the type of 'k' (line 168)
        k_218549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 48), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 168, 42), tuple_218547, k_218549)
        
        keyword_218550 = tuple_218547
        str_218551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, 59), 'str', 'hybr')
        keyword_218552 = str_218551
        # Getting the type of 'pressure_network_jacobian' (line 169)
        pressure_network_jacobian_218553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 40), 'pressure_network_jacobian', False)
        keyword_218554 = pressure_network_jacobian_218553
        kwargs_218555 = {'args': keyword_218550, 'method': keyword_218552, 'jac': keyword_218554}
        # Getting the type of 'optimize' (line 167)
        optimize_218543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 22), 'optimize', False)
        # Obtaining the member 'root' of a type (line 167)
        root_218544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 22), optimize_218543, 'root')
        # Calling root(args, kwargs) (line 167)
        root_call_result_218556 = invoke(stypy.reporting.localization.Localization(__file__, 167, 22), root_218544, *[pressure_network_218545, initial_guess_218546], **kwargs_218555)
        
        # Obtaining the member 'x' of a type (line 167)
        x_218557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 22), root_call_result_218556, 'x')
        # Assigning a type to the variable 'final_flows' (line 167)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 167, 8), 'final_flows', x_218557)
        
        # Call to assert_array_almost_equal(...): (line 170)
        # Processing the call arguments (line 170)
        # Getting the type of 'final_flows' (line 170)
        final_flows_218559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 34), 'final_flows', False)
        
        # Call to ones(...): (line 170)
        # Processing the call arguments (line 170)
        int_218562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 55), 'int')
        # Processing the call keyword arguments (line 170)
        kwargs_218563 = {}
        # Getting the type of 'np' (line 170)
        np_218560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 47), 'np', False)
        # Obtaining the member 'ones' of a type (line 170)
        ones_218561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 170, 47), np_218560, 'ones')
        # Calling ones(args, kwargs) (line 170)
        ones_call_result_218564 = invoke(stypy.reporting.localization.Localization(__file__, 170, 47), ones_218561, *[int_218562], **kwargs_218563)
        
        # Processing the call keyword arguments (line 170)
        kwargs_218565 = {}
        # Getting the type of 'assert_array_almost_equal' (line 170)
        assert_array_almost_equal_218558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 170)
        assert_array_almost_equal_call_result_218566 = invoke(stypy.reporting.localization.Localization(__file__, 170, 8), assert_array_almost_equal_218558, *[final_flows_218559, ones_call_result_218564], **kwargs_218565)
        
        
        # ################# End of 'test_pressure_network_with_gradient(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pressure_network_with_gradient' in the type store
        # Getting the type of 'stypy_return_type' (line 162)
        stypy_return_type_218567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218567)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pressure_network_with_gradient'
        return stypy_return_type_218567


    @norecursion
    def test_pressure_network_with_gradient_combined(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pressure_network_with_gradient_combined'
        module_type_store = module_type_store.open_function_context('test_pressure_network_with_gradient_combined', 172, 4, False)
        # Assigning a type to the variable 'self' (line 173)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 173, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_localization', localization)
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_function_name', 'TestRootHybr.test_pressure_network_with_gradient_combined')
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_param_names_list', [])
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestRootHybr.test_pressure_network_with_gradient_combined.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRootHybr.test_pressure_network_with_gradient_combined', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pressure_network_with_gradient_combined', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pressure_network_with_gradient_combined(...)' code ##################

        
        # Assigning a BinOp to a Name (line 175):
        
        # Assigning a BinOp to a Name (line 175):
        
        # Call to ones(...): (line 175)
        # Processing the call arguments (line 175)
        int_218570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 20), 'int')
        # Processing the call keyword arguments (line 175)
        kwargs_218571 = {}
        # Getting the type of 'np' (line 175)
        np_218568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 12), 'np', False)
        # Obtaining the member 'ones' of a type (line 175)
        ones_218569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 175, 12), np_218568, 'ones')
        # Calling ones(args, kwargs) (line 175)
        ones_call_result_218572 = invoke(stypy.reporting.localization.Localization(__file__, 175, 12), ones_218569, *[int_218570], **kwargs_218571)
        
        float_218573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 25), 'float')
        # Applying the binary operator '*' (line 175)
        result_mul_218574 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 12), '*', ones_call_result_218572, float_218573)
        
        # Assigning a type to the variable 'k' (line 175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 8), 'k', result_mul_218574)
        
        # Assigning a Num to a Name (line 176):
        
        # Assigning a Num to a Name (line 176):
        int_218575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 176, 15), 'int')
        # Assigning a type to the variable 'Qtot' (line 176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 176, 8), 'Qtot', int_218575)
        
        # Assigning a Call to a Name (line 177):
        
        # Assigning a Call to a Name (line 177):
        
        # Call to array(...): (line 177)
        # Processing the call arguments (line 177)
        
        # Obtaining an instance of the builtin type 'list' (line 177)
        list_218577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 177)
        # Adding element type (line 177)
        float_218578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 30), list_218577, float_218578)
        # Adding element type (line 177)
        float_218579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 35), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 30), list_218577, float_218579)
        # Adding element type (line 177)
        float_218580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 30), list_218577, float_218580)
        # Adding element type (line 177)
        float_218581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 30), list_218577, float_218581)
        
        # Processing the call keyword arguments (line 177)
        kwargs_218582 = {}
        # Getting the type of 'array' (line 177)
        array_218576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 24), 'array', False)
        # Calling array(args, kwargs) (line 177)
        array_call_result_218583 = invoke(stypy.reporting.localization.Localization(__file__, 177, 24), array_218576, *[list_218577], **kwargs_218582)
        
        # Assigning a type to the variable 'initial_guess' (line 177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 8), 'initial_guess', array_call_result_218583)
        
        # Assigning a Attribute to a Name (line 178):
        
        # Assigning a Attribute to a Name (line 178):
        
        # Call to root(...): (line 178)
        # Processing the call arguments (line 178)
        # Getting the type of 'pressure_network_fun_and_grad' (line 178)
        pressure_network_fun_and_grad_218586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 36), 'pressure_network_fun_and_grad', False)
        # Getting the type of 'initial_guess' (line 179)
        initial_guess_218587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 36), 'initial_guess', False)
        # Processing the call keyword arguments (line 178)
        
        # Obtaining an instance of the builtin type 'tuple' (line 179)
        tuple_218588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 57), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 179)
        # Adding element type (line 179)
        # Getting the type of 'Qtot' (line 179)
        Qtot_218589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 57), 'Qtot', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 57), tuple_218588, Qtot_218589)
        # Adding element type (line 179)
        # Getting the type of 'k' (line 179)
        k_218590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 63), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 57), tuple_218588, k_218590)
        
        keyword_218591 = tuple_218588
        str_218592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 43), 'str', 'hybr')
        keyword_218593 = str_218592
        # Getting the type of 'True' (line 180)
        True_218594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 55), 'True', False)
        keyword_218595 = True_218594
        kwargs_218596 = {'args': keyword_218591, 'method': keyword_218593, 'jac': keyword_218595}
        # Getting the type of 'optimize' (line 178)
        optimize_218584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 22), 'optimize', False)
        # Obtaining the member 'root' of a type (line 178)
        root_218585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 22), optimize_218584, 'root')
        # Calling root(args, kwargs) (line 178)
        root_call_result_218597 = invoke(stypy.reporting.localization.Localization(__file__, 178, 22), root_218585, *[pressure_network_fun_and_grad_218586, initial_guess_218587], **kwargs_218596)
        
        # Obtaining the member 'x' of a type (line 178)
        x_218598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 22), root_call_result_218597, 'x')
        # Assigning a type to the variable 'final_flows' (line 178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 8), 'final_flows', x_218598)
        
        # Call to assert_array_almost_equal(...): (line 181)
        # Processing the call arguments (line 181)
        # Getting the type of 'final_flows' (line 181)
        final_flows_218600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 34), 'final_flows', False)
        
        # Call to ones(...): (line 181)
        # Processing the call arguments (line 181)
        int_218603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 55), 'int')
        # Processing the call keyword arguments (line 181)
        kwargs_218604 = {}
        # Getting the type of 'np' (line 181)
        np_218601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 47), 'np', False)
        # Obtaining the member 'ones' of a type (line 181)
        ones_218602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 181, 47), np_218601, 'ones')
        # Calling ones(args, kwargs) (line 181)
        ones_call_result_218605 = invoke(stypy.reporting.localization.Localization(__file__, 181, 47), ones_218602, *[int_218603], **kwargs_218604)
        
        # Processing the call keyword arguments (line 181)
        kwargs_218606 = {}
        # Getting the type of 'assert_array_almost_equal' (line 181)
        assert_array_almost_equal_218599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 181)
        assert_array_almost_equal_call_result_218607 = invoke(stypy.reporting.localization.Localization(__file__, 181, 8), assert_array_almost_equal_218599, *[final_flows_218600, ones_call_result_218605], **kwargs_218606)
        
        
        # ################# End of 'test_pressure_network_with_gradient_combined(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pressure_network_with_gradient_combined' in the type store
        # Getting the type of 'stypy_return_type' (line 172)
        stypy_return_type_218608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218608)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pressure_network_with_gradient_combined'
        return stypy_return_type_218608


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 152, 0, False)
        # Assigning a type to the variable 'self' (line 153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRootHybr.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestRootHybr' (line 152)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 152, 0), 'TestRootHybr', TestRootHybr)
# Declaration of the 'TestRootLM' class

class TestRootLM(object, ):

    @norecursion
    def test_pressure_network_no_gradient(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pressure_network_no_gradient'
        module_type_store = module_type_store.open_function_context('test_pressure_network_no_gradient', 185, 4, False)
        # Assigning a type to the variable 'self' (line 186)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_localization', localization)
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_function_name', 'TestRootLM.test_pressure_network_no_gradient')
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_param_names_list', [])
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestRootLM.test_pressure_network_no_gradient.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRootLM.test_pressure_network_no_gradient', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pressure_network_no_gradient', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pressure_network_no_gradient(...)' code ##################

        
        # Assigning a BinOp to a Name (line 187):
        
        # Assigning a BinOp to a Name (line 187):
        
        # Call to ones(...): (line 187)
        # Processing the call arguments (line 187)
        int_218611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 20), 'int')
        # Processing the call keyword arguments (line 187)
        kwargs_218612 = {}
        # Getting the type of 'np' (line 187)
        np_218609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 12), 'np', False)
        # Obtaining the member 'ones' of a type (line 187)
        ones_218610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 12), np_218609, 'ones')
        # Calling ones(args, kwargs) (line 187)
        ones_call_result_218613 = invoke(stypy.reporting.localization.Localization(__file__, 187, 12), ones_218610, *[int_218611], **kwargs_218612)
        
        float_218614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 25), 'float')
        # Applying the binary operator '*' (line 187)
        result_mul_218615 = python_operator(stypy.reporting.localization.Localization(__file__, 187, 12), '*', ones_call_result_218613, float_218614)
        
        # Assigning a type to the variable 'k' (line 187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 8), 'k', result_mul_218615)
        
        # Assigning a Num to a Name (line 188):
        
        # Assigning a Num to a Name (line 188):
        int_218616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 15), 'int')
        # Assigning a type to the variable 'Qtot' (line 188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 8), 'Qtot', int_218616)
        
        # Assigning a Call to a Name (line 189):
        
        # Assigning a Call to a Name (line 189):
        
        # Call to array(...): (line 189)
        # Processing the call arguments (line 189)
        
        # Obtaining an instance of the builtin type 'list' (line 189)
        list_218618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 189)
        # Adding element type (line 189)
        float_218619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 30), list_218618, float_218619)
        # Adding element type (line 189)
        float_218620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 35), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 30), list_218618, float_218620)
        # Adding element type (line 189)
        float_218621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 30), list_218618, float_218621)
        # Adding element type (line 189)
        float_218622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 30), list_218618, float_218622)
        
        # Processing the call keyword arguments (line 189)
        kwargs_218623 = {}
        # Getting the type of 'array' (line 189)
        array_218617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 24), 'array', False)
        # Calling array(args, kwargs) (line 189)
        array_call_result_218624 = invoke(stypy.reporting.localization.Localization(__file__, 189, 24), array_218617, *[list_218618], **kwargs_218623)
        
        # Assigning a type to the variable 'initial_guess' (line 189)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'initial_guess', array_call_result_218624)
        
        # Assigning a Attribute to a Name (line 190):
        
        # Assigning a Attribute to a Name (line 190):
        
        # Call to root(...): (line 190)
        # Processing the call arguments (line 190)
        # Getting the type of 'pressure_network' (line 190)
        pressure_network_218627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 36), 'pressure_network', False)
        # Getting the type of 'initial_guess' (line 190)
        initial_guess_218628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 54), 'initial_guess', False)
        # Processing the call keyword arguments (line 190)
        str_218629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 43), 'str', 'lm')
        keyword_218630 = str_218629
        
        # Obtaining an instance of the builtin type 'tuple' (line 191)
        tuple_218631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 55), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 191)
        # Adding element type (line 191)
        # Getting the type of 'Qtot' (line 191)
        Qtot_218632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 55), 'Qtot', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 191, 55), tuple_218631, Qtot_218632)
        # Adding element type (line 191)
        # Getting the type of 'k' (line 191)
        k_218633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 61), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 191, 55), tuple_218631, k_218633)
        
        keyword_218634 = tuple_218631
        kwargs_218635 = {'args': keyword_218634, 'method': keyword_218630}
        # Getting the type of 'optimize' (line 190)
        optimize_218625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 22), 'optimize', False)
        # Obtaining the member 'root' of a type (line 190)
        root_218626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 22), optimize_218625, 'root')
        # Calling root(args, kwargs) (line 190)
        root_call_result_218636 = invoke(stypy.reporting.localization.Localization(__file__, 190, 22), root_218626, *[pressure_network_218627, initial_guess_218628], **kwargs_218635)
        
        # Obtaining the member 'x' of a type (line 190)
        x_218637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 22), root_call_result_218636, 'x')
        # Assigning a type to the variable 'final_flows' (line 190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'final_flows', x_218637)
        
        # Call to assert_array_almost_equal(...): (line 192)
        # Processing the call arguments (line 192)
        # Getting the type of 'final_flows' (line 192)
        final_flows_218639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 34), 'final_flows', False)
        
        # Call to ones(...): (line 192)
        # Processing the call arguments (line 192)
        int_218642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 55), 'int')
        # Processing the call keyword arguments (line 192)
        kwargs_218643 = {}
        # Getting the type of 'np' (line 192)
        np_218640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 47), 'np', False)
        # Obtaining the member 'ones' of a type (line 192)
        ones_218641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 47), np_218640, 'ones')
        # Calling ones(args, kwargs) (line 192)
        ones_call_result_218644 = invoke(stypy.reporting.localization.Localization(__file__, 192, 47), ones_218641, *[int_218642], **kwargs_218643)
        
        # Processing the call keyword arguments (line 192)
        kwargs_218645 = {}
        # Getting the type of 'assert_array_almost_equal' (line 192)
        assert_array_almost_equal_218638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 192)
        assert_array_almost_equal_call_result_218646 = invoke(stypy.reporting.localization.Localization(__file__, 192, 8), assert_array_almost_equal_218638, *[final_flows_218639, ones_call_result_218644], **kwargs_218645)
        
        
        # ################# End of 'test_pressure_network_no_gradient(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pressure_network_no_gradient' in the type store
        # Getting the type of 'stypy_return_type' (line 185)
        stypy_return_type_218647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218647)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pressure_network_no_gradient'
        return stypy_return_type_218647


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 184, 0, False)
        # Assigning a type to the variable 'self' (line 185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestRootLM.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestRootLM' (line 184)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 0), 'TestRootLM', TestRootLM)
# Declaration of the 'TestLeastSq' class

class TestLeastSq(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 196, 4, False)
        # Assigning a type to the variable 'self' (line 197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.setup_method')
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Call to a Name (line 197):
        
        # Assigning a Call to a Name (line 197):
        
        # Call to linspace(...): (line 197)
        # Processing the call arguments (line 197)
        int_218650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 24), 'int')
        int_218651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 27), 'int')
        int_218652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 31), 'int')
        # Processing the call keyword arguments (line 197)
        kwargs_218653 = {}
        # Getting the type of 'np' (line 197)
        np_218648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 12), 'np', False)
        # Obtaining the member 'linspace' of a type (line 197)
        linspace_218649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 12), np_218648, 'linspace')
        # Calling linspace(args, kwargs) (line 197)
        linspace_call_result_218654 = invoke(stypy.reporting.localization.Localization(__file__, 197, 12), linspace_218649, *[int_218650, int_218651, int_218652], **kwargs_218653)
        
        # Assigning a type to the variable 'x' (line 197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'x', linspace_call_result_218654)
        
        # Assigning a Tuple to a Tuple (line 198):
        
        # Assigning a Num to a Name (line 198):
        float_218655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 16), 'float')
        # Assigning a type to the variable 'tuple_assignment_217989' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'tuple_assignment_217989', float_218655)
        
        # Assigning a Num to a Name (line 198):
        int_218656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 21), 'int')
        # Assigning a type to the variable 'tuple_assignment_217990' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'tuple_assignment_217990', int_218656)
        
        # Assigning a Num to a Name (line 198):
        float_218657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 25), 'float')
        # Assigning a type to the variable 'tuple_assignment_217991' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'tuple_assignment_217991', float_218657)
        
        # Assigning a Name to a Name (line 198):
        # Getting the type of 'tuple_assignment_217989' (line 198)
        tuple_assignment_217989_218658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'tuple_assignment_217989')
        # Assigning a type to the variable 'a' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'a', tuple_assignment_217989_218658)
        
        # Assigning a Name to a Name (line 198):
        # Getting the type of 'tuple_assignment_217990' (line 198)
        tuple_assignment_217990_218659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'tuple_assignment_217990')
        # Assigning a type to the variable 'b' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 10), 'b', tuple_assignment_217990_218659)
        
        # Assigning a Name to a Name (line 198):
        # Getting the type of 'tuple_assignment_217991' (line 198)
        tuple_assignment_217991_218660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'tuple_assignment_217991')
        # Assigning a type to the variable 'c' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 12), 'c', tuple_assignment_217991_218660)
        
        # Assigning a Name to a Attribute (line 199):
        
        # Assigning a Name to a Attribute (line 199):
        # Getting the type of 'x' (line 199)
        x_218661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 17), 'x')
        # Getting the type of 'self' (line 199)
        self_218662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'self')
        # Setting the type of the member 'x' of a type (line 199)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 8), self_218662, 'x', x_218661)
        
        # Assigning a Tuple to a Attribute (line 200):
        
        # Assigning a Tuple to a Attribute (line 200):
        
        # Obtaining an instance of the builtin type 'tuple' (line 200)
        tuple_218663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 200, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 200)
        # Adding element type (line 200)
        # Getting the type of 'a' (line 200)
        a_218664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 19), 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 200, 19), tuple_218663, a_218664)
        # Adding element type (line 200)
        # Getting the type of 'b' (line 200)
        b_218665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 21), 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 200, 19), tuple_218663, b_218665)
        # Adding element type (line 200)
        # Getting the type of 'c' (line 200)
        c_218666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 23), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 200, 19), tuple_218663, c_218666)
        
        # Getting the type of 'self' (line 200)
        self_218667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 8), 'self')
        # Setting the type of the member 'abc' of a type (line 200)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 200, 8), self_218667, 'abc', tuple_218663)
        
        # Assigning a BinOp to a Name (line 201):
        
        # Assigning a BinOp to a Name (line 201):
        # Getting the type of 'a' (line 201)
        a_218668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 17), 'a')
        # Getting the type of 'x' (line 201)
        x_218669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 19), 'x')
        int_218670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 22), 'int')
        # Applying the binary operator '**' (line 201)
        result_pow_218671 = python_operator(stypy.reporting.localization.Localization(__file__, 201, 19), '**', x_218669, int_218670)
        
        # Applying the binary operator '*' (line 201)
        result_mul_218672 = python_operator(stypy.reporting.localization.Localization(__file__, 201, 17), '*', a_218668, result_pow_218671)
        
        # Getting the type of 'b' (line 201)
        b_218673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 26), 'b')
        # Getting the type of 'x' (line 201)
        x_218674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 28), 'x')
        # Applying the binary operator '*' (line 201)
        result_mul_218675 = python_operator(stypy.reporting.localization.Localization(__file__, 201, 26), '*', b_218673, x_218674)
        
        # Applying the binary operator '+' (line 201)
        result_add_218676 = python_operator(stypy.reporting.localization.Localization(__file__, 201, 17), '+', result_mul_218672, result_mul_218675)
        
        # Getting the type of 'c' (line 201)
        c_218677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 32), 'c')
        # Applying the binary operator '+' (line 201)
        result_add_218678 = python_operator(stypy.reporting.localization.Localization(__file__, 201, 30), '+', result_add_218676, c_218677)
        
        # Assigning a type to the variable 'y_true' (line 201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 8), 'y_true', result_add_218678)
        
        # Call to seed(...): (line 202)
        # Processing the call arguments (line 202)
        int_218682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 23), 'int')
        # Processing the call keyword arguments (line 202)
        kwargs_218683 = {}
        # Getting the type of 'np' (line 202)
        np_218679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 202)
        random_218680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 202, 8), np_218679, 'random')
        # Obtaining the member 'seed' of a type (line 202)
        seed_218681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 202, 8), random_218680, 'seed')
        # Calling seed(args, kwargs) (line 202)
        seed_call_result_218684 = invoke(stypy.reporting.localization.Localization(__file__, 202, 8), seed_218681, *[int_218682], **kwargs_218683)
        
        
        # Assigning a BinOp to a Attribute (line 203):
        
        # Assigning a BinOp to a Attribute (line 203):
        # Getting the type of 'y_true' (line 203)
        y_true_218685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 22), 'y_true')
        float_218686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 31), 'float')
        
        # Call to standard_normal(...): (line 203)
        # Processing the call arguments (line 203)
        # Getting the type of 'y_true' (line 203)
        y_true_218690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 62), 'y_true', False)
        # Obtaining the member 'shape' of a type (line 203)
        shape_218691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 62), y_true_218690, 'shape')
        # Processing the call keyword arguments (line 203)
        kwargs_218692 = {}
        # Getting the type of 'np' (line 203)
        np_218687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 36), 'np', False)
        # Obtaining the member 'random' of a type (line 203)
        random_218688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 36), np_218687, 'random')
        # Obtaining the member 'standard_normal' of a type (line 203)
        standard_normal_218689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 36), random_218688, 'standard_normal')
        # Calling standard_normal(args, kwargs) (line 203)
        standard_normal_call_result_218693 = invoke(stypy.reporting.localization.Localization(__file__, 203, 36), standard_normal_218689, *[shape_218691], **kwargs_218692)
        
        # Applying the binary operator '*' (line 203)
        result_mul_218694 = python_operator(stypy.reporting.localization.Localization(__file__, 203, 31), '*', float_218686, standard_normal_call_result_218693)
        
        # Applying the binary operator '+' (line 203)
        result_add_218695 = python_operator(stypy.reporting.localization.Localization(__file__, 203, 22), '+', y_true_218685, result_mul_218694)
        
        # Getting the type of 'self' (line 203)
        self_218696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 8), 'self')
        # Setting the type of the member 'y_meas' of a type (line 203)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 8), self_218696, 'y_meas', result_add_218695)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 196)
        stypy_return_type_218697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218697)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_218697


    @norecursion
    def residuals(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'residuals'
        module_type_store = module_type_store.open_function_context('residuals', 205, 4, False)
        # Assigning a type to the variable 'self' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.residuals.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.residuals.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.residuals.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.residuals.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.residuals')
        TestLeastSq.residuals.__dict__.__setitem__('stypy_param_names_list', ['p', 'y', 'x'])
        TestLeastSq.residuals.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.residuals.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.residuals.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.residuals.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.residuals.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.residuals.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.residuals', ['p', 'y', 'x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'residuals', localization, ['p', 'y', 'x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'residuals(...)' code ##################

        
        # Assigning a Name to a Tuple (line 206):
        
        # Assigning a Subscript to a Name (line 206):
        
        # Obtaining the type of the subscript
        int_218698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 8), 'int')
        # Getting the type of 'p' (line 206)
        p_218699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 16), 'p')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___218700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 8), p_218699, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_218701 = invoke(stypy.reporting.localization.Localization(__file__, 206, 8), getitem___218700, int_218698)
        
        # Assigning a type to the variable 'tuple_var_assignment_217992' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_var_assignment_217992', subscript_call_result_218701)
        
        # Assigning a Subscript to a Name (line 206):
        
        # Obtaining the type of the subscript
        int_218702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 8), 'int')
        # Getting the type of 'p' (line 206)
        p_218703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 16), 'p')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___218704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 8), p_218703, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_218705 = invoke(stypy.reporting.localization.Localization(__file__, 206, 8), getitem___218704, int_218702)
        
        # Assigning a type to the variable 'tuple_var_assignment_217993' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_var_assignment_217993', subscript_call_result_218705)
        
        # Assigning a Subscript to a Name (line 206):
        
        # Obtaining the type of the subscript
        int_218706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 8), 'int')
        # Getting the type of 'p' (line 206)
        p_218707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 16), 'p')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___218708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 8), p_218707, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_218709 = invoke(stypy.reporting.localization.Localization(__file__, 206, 8), getitem___218708, int_218706)
        
        # Assigning a type to the variable 'tuple_var_assignment_217994' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_var_assignment_217994', subscript_call_result_218709)
        
        # Assigning a Name to a Name (line 206):
        # Getting the type of 'tuple_var_assignment_217992' (line 206)
        tuple_var_assignment_217992_218710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_var_assignment_217992')
        # Assigning a type to the variable 'a' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'a', tuple_var_assignment_217992_218710)
        
        # Assigning a Name to a Name (line 206):
        # Getting the type of 'tuple_var_assignment_217993' (line 206)
        tuple_var_assignment_217993_218711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_var_assignment_217993')
        # Assigning a type to the variable 'b' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 10), 'b', tuple_var_assignment_217993_218711)
        
        # Assigning a Name to a Name (line 206):
        # Getting the type of 'tuple_var_assignment_217994' (line 206)
        tuple_var_assignment_217994_218712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'tuple_var_assignment_217994')
        # Assigning a type to the variable 'c' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 12), 'c', tuple_var_assignment_217994_218712)
        
        # Assigning a BinOp to a Name (line 207):
        
        # Assigning a BinOp to a Name (line 207):
        # Getting the type of 'y' (line 207)
        y_218713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 14), 'y')
        # Getting the type of 'a' (line 207)
        a_218714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 17), 'a')
        # Getting the type of 'x' (line 207)
        x_218715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 19), 'x')
        int_218716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 22), 'int')
        # Applying the binary operator '**' (line 207)
        result_pow_218717 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 19), '**', x_218715, int_218716)
        
        # Applying the binary operator '*' (line 207)
        result_mul_218718 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 17), '*', a_218714, result_pow_218717)
        
        # Getting the type of 'b' (line 207)
        b_218719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 26), 'b')
        # Getting the type of 'x' (line 207)
        x_218720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 28), 'x')
        # Applying the binary operator '*' (line 207)
        result_mul_218721 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 26), '*', b_218719, x_218720)
        
        # Applying the binary operator '+' (line 207)
        result_add_218722 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 17), '+', result_mul_218718, result_mul_218721)
        
        # Getting the type of 'c' (line 207)
        c_218723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 32), 'c')
        # Applying the binary operator '+' (line 207)
        result_add_218724 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 30), '+', result_add_218722, c_218723)
        
        # Applying the binary operator '-' (line 207)
        result_sub_218725 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 14), '-', y_218713, result_add_218724)
        
        # Assigning a type to the variable 'err' (line 207)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'err', result_sub_218725)
        # Getting the type of 'err' (line 208)
        err_218726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 15), 'err')
        # Assigning a type to the variable 'stypy_return_type' (line 208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 8), 'stypy_return_type', err_218726)
        
        # ################# End of 'residuals(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'residuals' in the type store
        # Getting the type of 'stypy_return_type' (line 205)
        stypy_return_type_218727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218727)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'residuals'
        return stypy_return_type_218727


    @norecursion
    def test_basic(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_basic'
        module_type_store = module_type_store.open_function_context('test_basic', 210, 4, False)
        # Assigning a type to the variable 'self' (line 211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.test_basic')
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.test_basic.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.test_basic', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_basic', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_basic(...)' code ##################

        
        # Assigning a Call to a Name (line 211):
        
        # Assigning a Call to a Name (line 211):
        
        # Call to array(...): (line 211)
        # Processing the call arguments (line 211)
        
        # Obtaining an instance of the builtin type 'list' (line 211)
        list_218729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 211)
        # Adding element type (line 211)
        int_218730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 19), list_218729, int_218730)
        # Adding element type (line 211)
        int_218731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 19), list_218729, int_218731)
        # Adding element type (line 211)
        int_218732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 19), list_218729, int_218732)
        
        # Processing the call keyword arguments (line 211)
        kwargs_218733 = {}
        # Getting the type of 'array' (line 211)
        array_218728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 13), 'array', False)
        # Calling array(args, kwargs) (line 211)
        array_call_result_218734 = invoke(stypy.reporting.localization.Localization(__file__, 211, 13), array_218728, *[list_218729], **kwargs_218733)
        
        # Assigning a type to the variable 'p0' (line 211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 8), 'p0', array_call_result_218734)
        
        # Assigning a Call to a Tuple (line 212):
        
        # Assigning a Subscript to a Name (line 212):
        
        # Obtaining the type of the subscript
        int_218735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 8), 'int')
        
        # Call to leastsq(...): (line 212)
        # Processing the call arguments (line 212)
        # Getting the type of 'self' (line 212)
        self_218737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 34), 'self', False)
        # Obtaining the member 'residuals' of a type (line 212)
        residuals_218738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 34), self_218737, 'residuals')
        # Getting the type of 'p0' (line 212)
        p0_218739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 50), 'p0', False)
        # Processing the call keyword arguments (line 212)
        
        # Obtaining an instance of the builtin type 'tuple' (line 213)
        tuple_218740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 213)
        # Adding element type (line 213)
        # Getting the type of 'self' (line 213)
        self_218741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 40), 'self', False)
        # Obtaining the member 'y_meas' of a type (line 213)
        y_meas_218742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 40), self_218741, 'y_meas')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 40), tuple_218740, y_meas_218742)
        # Adding element type (line 213)
        # Getting the type of 'self' (line 213)
        self_218743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 53), 'self', False)
        # Obtaining the member 'x' of a type (line 213)
        x_218744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 53), self_218743, 'x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 40), tuple_218740, x_218744)
        
        keyword_218745 = tuple_218740
        kwargs_218746 = {'args': keyword_218745}
        # Getting the type of 'leastsq' (line 212)
        leastsq_218736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 26), 'leastsq', False)
        # Calling leastsq(args, kwargs) (line 212)
        leastsq_call_result_218747 = invoke(stypy.reporting.localization.Localization(__file__, 212, 26), leastsq_218736, *[residuals_218738, p0_218739], **kwargs_218746)
        
        # Obtaining the member '__getitem__' of a type (line 212)
        getitem___218748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 8), leastsq_call_result_218747, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 212)
        subscript_call_result_218749 = invoke(stypy.reporting.localization.Localization(__file__, 212, 8), getitem___218748, int_218735)
        
        # Assigning a type to the variable 'tuple_var_assignment_217995' (line 212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 8), 'tuple_var_assignment_217995', subscript_call_result_218749)
        
        # Assigning a Subscript to a Name (line 212):
        
        # Obtaining the type of the subscript
        int_218750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 212, 8), 'int')
        
        # Call to leastsq(...): (line 212)
        # Processing the call arguments (line 212)
        # Getting the type of 'self' (line 212)
        self_218752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 34), 'self', False)
        # Obtaining the member 'residuals' of a type (line 212)
        residuals_218753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 34), self_218752, 'residuals')
        # Getting the type of 'p0' (line 212)
        p0_218754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 50), 'p0', False)
        # Processing the call keyword arguments (line 212)
        
        # Obtaining an instance of the builtin type 'tuple' (line 213)
        tuple_218755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 213)
        # Adding element type (line 213)
        # Getting the type of 'self' (line 213)
        self_218756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 40), 'self', False)
        # Obtaining the member 'y_meas' of a type (line 213)
        y_meas_218757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 40), self_218756, 'y_meas')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 40), tuple_218755, y_meas_218757)
        # Adding element type (line 213)
        # Getting the type of 'self' (line 213)
        self_218758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 53), 'self', False)
        # Obtaining the member 'x' of a type (line 213)
        x_218759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 53), self_218758, 'x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 213, 40), tuple_218755, x_218759)
        
        keyword_218760 = tuple_218755
        kwargs_218761 = {'args': keyword_218760}
        # Getting the type of 'leastsq' (line 212)
        leastsq_218751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 26), 'leastsq', False)
        # Calling leastsq(args, kwargs) (line 212)
        leastsq_call_result_218762 = invoke(stypy.reporting.localization.Localization(__file__, 212, 26), leastsq_218751, *[residuals_218753, p0_218754], **kwargs_218761)
        
        # Obtaining the member '__getitem__' of a type (line 212)
        getitem___218763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 212, 8), leastsq_call_result_218762, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 212)
        subscript_call_result_218764 = invoke(stypy.reporting.localization.Localization(__file__, 212, 8), getitem___218763, int_218750)
        
        # Assigning a type to the variable 'tuple_var_assignment_217996' (line 212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 8), 'tuple_var_assignment_217996', subscript_call_result_218764)
        
        # Assigning a Name to a Name (line 212):
        # Getting the type of 'tuple_var_assignment_217995' (line 212)
        tuple_var_assignment_217995_218765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 8), 'tuple_var_assignment_217995')
        # Assigning a type to the variable 'params_fit' (line 212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 8), 'params_fit', tuple_var_assignment_217995_218765)
        
        # Assigning a Name to a Name (line 212):
        # Getting the type of 'tuple_var_assignment_217996' (line 212)
        tuple_var_assignment_217996_218766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 8), 'tuple_var_assignment_217996')
        # Assigning a type to the variable 'ier' (line 212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 20), 'ier', tuple_var_assignment_217996_218766)
        
        # Call to assert_(...): (line 214)
        # Processing the call arguments (line 214)
        
        # Getting the type of 'ier' (line 214)
        ier_218768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 16), 'ier', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 214)
        tuple_218769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 214)
        # Adding element type (line 214)
        int_218770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 214, 24), tuple_218769, int_218770)
        # Adding element type (line 214)
        int_218771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 214, 24), tuple_218769, int_218771)
        # Adding element type (line 214)
        int_218772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 214, 24), tuple_218769, int_218772)
        # Adding element type (line 214)
        int_218773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 214, 24), tuple_218769, int_218773)
        
        # Applying the binary operator 'in' (line 214)
        result_contains_218774 = python_operator(stypy.reporting.localization.Localization(__file__, 214, 16), 'in', ier_218768, tuple_218769)
        
        str_218775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 34), 'str', 'solution not found (ier=%d)')
        # Getting the type of 'ier' (line 214)
        ier_218776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 66), 'ier', False)
        # Applying the binary operator '%' (line 214)
        result_mod_218777 = python_operator(stypy.reporting.localization.Localization(__file__, 214, 34), '%', str_218775, ier_218776)
        
        # Processing the call keyword arguments (line 214)
        kwargs_218778 = {}
        # Getting the type of 'assert_' (line 214)
        assert__218767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 214)
        assert__call_result_218779 = invoke(stypy.reporting.localization.Localization(__file__, 214, 8), assert__218767, *[result_contains_218774, result_mod_218777], **kwargs_218778)
        
        
        # Call to assert_array_almost_equal(...): (line 216)
        # Processing the call arguments (line 216)
        # Getting the type of 'params_fit' (line 216)
        params_fit_218781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 34), 'params_fit', False)
        # Getting the type of 'self' (line 216)
        self_218782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 46), 'self', False)
        # Obtaining the member 'abc' of a type (line 216)
        abc_218783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 46), self_218782, 'abc')
        # Processing the call keyword arguments (line 216)
        int_218784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 64), 'int')
        keyword_218785 = int_218784
        kwargs_218786 = {'decimal': keyword_218785}
        # Getting the type of 'assert_array_almost_equal' (line 216)
        assert_array_almost_equal_218780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 216)
        assert_array_almost_equal_call_result_218787 = invoke(stypy.reporting.localization.Localization(__file__, 216, 8), assert_array_almost_equal_218780, *[params_fit_218781, abc_218783], **kwargs_218786)
        
        
        # ################# End of 'test_basic(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_basic' in the type store
        # Getting the type of 'stypy_return_type' (line 210)
        stypy_return_type_218788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218788)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_basic'
        return stypy_return_type_218788


    @norecursion
    def test_full_output(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_full_output'
        module_type_store = module_type_store.open_function_context('test_full_output', 218, 4, False)
        # Assigning a type to the variable 'self' (line 219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.test_full_output')
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.test_full_output.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.test_full_output', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_full_output', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_full_output(...)' code ##################

        
        # Assigning a Call to a Name (line 219):
        
        # Assigning a Call to a Name (line 219):
        
        # Call to matrix(...): (line 219)
        # Processing the call arguments (line 219)
        
        # Obtaining an instance of the builtin type 'list' (line 219)
        list_218790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 219)
        # Adding element type (line 219)
        int_218791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 20), list_218790, int_218791)
        # Adding element type (line 219)
        int_218792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 20), list_218790, int_218792)
        # Adding element type (line 219)
        int_218793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 20), list_218790, int_218793)
        
        # Processing the call keyword arguments (line 219)
        kwargs_218794 = {}
        # Getting the type of 'matrix' (line 219)
        matrix_218789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 13), 'matrix', False)
        # Calling matrix(args, kwargs) (line 219)
        matrix_call_result_218795 = invoke(stypy.reporting.localization.Localization(__file__, 219, 13), matrix_218789, *[list_218790], **kwargs_218794)
        
        # Assigning a type to the variable 'p0' (line 219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'p0', matrix_call_result_218795)
        
        # Assigning a Call to a Name (line 220):
        
        # Assigning a Call to a Name (line 220):
        
        # Call to leastsq(...): (line 220)
        # Processing the call arguments (line 220)
        # Getting the type of 'self' (line 220)
        self_218797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 30), 'self', False)
        # Obtaining the member 'residuals' of a type (line 220)
        residuals_218798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 30), self_218797, 'residuals')
        # Getting the type of 'p0' (line 220)
        p0_218799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 46), 'p0', False)
        # Processing the call keyword arguments (line 220)
        
        # Obtaining an instance of the builtin type 'tuple' (line 221)
        tuple_218800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 221)
        # Adding element type (line 221)
        # Getting the type of 'self' (line 221)
        self_218801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 36), 'self', False)
        # Obtaining the member 'y_meas' of a type (line 221)
        y_meas_218802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 36), self_218801, 'y_meas')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 36), tuple_218800, y_meas_218802)
        # Adding element type (line 221)
        # Getting the type of 'self' (line 221)
        self_218803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 49), 'self', False)
        # Obtaining the member 'x' of a type (line 221)
        x_218804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 49), self_218803, 'x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 36), tuple_218800, x_218804)
        
        keyword_218805 = tuple_218800
        # Getting the type of 'True' (line 222)
        True_218806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 42), 'True', False)
        keyword_218807 = True_218806
        kwargs_218808 = {'args': keyword_218805, 'full_output': keyword_218807}
        # Getting the type of 'leastsq' (line 220)
        leastsq_218796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 22), 'leastsq', False)
        # Calling leastsq(args, kwargs) (line 220)
        leastsq_call_result_218809 = invoke(stypy.reporting.localization.Localization(__file__, 220, 22), leastsq_218796, *[residuals_218798, p0_218799], **kwargs_218808)
        
        # Assigning a type to the variable 'full_output' (line 220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'full_output', leastsq_call_result_218809)
        
        # Assigning a Name to a Tuple (line 223):
        
        # Assigning a Subscript to a Name (line 223):
        
        # Obtaining the type of the subscript
        int_218810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 8), 'int')
        # Getting the type of 'full_output' (line 223)
        full_output_218811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 223)
        getitem___218812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 8), full_output_218811, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 223)
        subscript_call_result_218813 = invoke(stypy.reporting.localization.Localization(__file__, 223, 8), getitem___218812, int_218810)
        
        # Assigning a type to the variable 'tuple_var_assignment_217997' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_217997', subscript_call_result_218813)
        
        # Assigning a Subscript to a Name (line 223):
        
        # Obtaining the type of the subscript
        int_218814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 8), 'int')
        # Getting the type of 'full_output' (line 223)
        full_output_218815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 223)
        getitem___218816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 8), full_output_218815, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 223)
        subscript_call_result_218817 = invoke(stypy.reporting.localization.Localization(__file__, 223, 8), getitem___218816, int_218814)
        
        # Assigning a type to the variable 'tuple_var_assignment_217998' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_217998', subscript_call_result_218817)
        
        # Assigning a Subscript to a Name (line 223):
        
        # Obtaining the type of the subscript
        int_218818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 8), 'int')
        # Getting the type of 'full_output' (line 223)
        full_output_218819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 223)
        getitem___218820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 8), full_output_218819, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 223)
        subscript_call_result_218821 = invoke(stypy.reporting.localization.Localization(__file__, 223, 8), getitem___218820, int_218818)
        
        # Assigning a type to the variable 'tuple_var_assignment_217999' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_217999', subscript_call_result_218821)
        
        # Assigning a Subscript to a Name (line 223):
        
        # Obtaining the type of the subscript
        int_218822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 8), 'int')
        # Getting the type of 'full_output' (line 223)
        full_output_218823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 223)
        getitem___218824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 8), full_output_218823, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 223)
        subscript_call_result_218825 = invoke(stypy.reporting.localization.Localization(__file__, 223, 8), getitem___218824, int_218822)
        
        # Assigning a type to the variable 'tuple_var_assignment_218000' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_218000', subscript_call_result_218825)
        
        # Assigning a Subscript to a Name (line 223):
        
        # Obtaining the type of the subscript
        int_218826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 8), 'int')
        # Getting the type of 'full_output' (line 223)
        full_output_218827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 223)
        getitem___218828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 8), full_output_218827, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 223)
        subscript_call_result_218829 = invoke(stypy.reporting.localization.Localization(__file__, 223, 8), getitem___218828, int_218826)
        
        # Assigning a type to the variable 'tuple_var_assignment_218001' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_218001', subscript_call_result_218829)
        
        # Assigning a Name to a Name (line 223):
        # Getting the type of 'tuple_var_assignment_217997' (line 223)
        tuple_var_assignment_217997_218830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_217997')
        # Assigning a type to the variable 'params_fit' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'params_fit', tuple_var_assignment_217997_218830)
        
        # Assigning a Name to a Name (line 223):
        # Getting the type of 'tuple_var_assignment_217998' (line 223)
        tuple_var_assignment_217998_218831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_217998')
        # Assigning a type to the variable 'cov_x' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 20), 'cov_x', tuple_var_assignment_217998_218831)
        
        # Assigning a Name to a Name (line 223):
        # Getting the type of 'tuple_var_assignment_217999' (line 223)
        tuple_var_assignment_217999_218832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_217999')
        # Assigning a type to the variable 'infodict' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 27), 'infodict', tuple_var_assignment_217999_218832)
        
        # Assigning a Name to a Name (line 223):
        # Getting the type of 'tuple_var_assignment_218000' (line 223)
        tuple_var_assignment_218000_218833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_218000')
        # Assigning a type to the variable 'mesg' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 37), 'mesg', tuple_var_assignment_218000_218833)
        
        # Assigning a Name to a Name (line 223):
        # Getting the type of 'tuple_var_assignment_218001' (line 223)
        tuple_var_assignment_218001_218834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'tuple_var_assignment_218001')
        # Assigning a type to the variable 'ier' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 43), 'ier', tuple_var_assignment_218001_218834)
        
        # Call to assert_(...): (line 224)
        # Processing the call arguments (line 224)
        
        # Getting the type of 'ier' (line 224)
        ier_218836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 16), 'ier', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 224)
        tuple_218837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 224)
        # Adding element type (line 224)
        int_218838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 224, 24), tuple_218837, int_218838)
        # Adding element type (line 224)
        int_218839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 224, 24), tuple_218837, int_218839)
        # Adding element type (line 224)
        int_218840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 224, 24), tuple_218837, int_218840)
        # Adding element type (line 224)
        int_218841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 224, 24), tuple_218837, int_218841)
        
        # Applying the binary operator 'in' (line 224)
        result_contains_218842 = python_operator(stypy.reporting.localization.Localization(__file__, 224, 16), 'in', ier_218836, tuple_218837)
        
        str_218843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 34), 'str', 'solution not found: %s')
        # Getting the type of 'mesg' (line 224)
        mesg_218844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 61), 'mesg', False)
        # Applying the binary operator '%' (line 224)
        result_mod_218845 = python_operator(stypy.reporting.localization.Localization(__file__, 224, 34), '%', str_218843, mesg_218844)
        
        # Processing the call keyword arguments (line 224)
        kwargs_218846 = {}
        # Getting the type of 'assert_' (line 224)
        assert__218835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 224)
        assert__call_result_218847 = invoke(stypy.reporting.localization.Localization(__file__, 224, 8), assert__218835, *[result_contains_218842, result_mod_218845], **kwargs_218846)
        
        
        # ################# End of 'test_full_output(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_full_output' in the type store
        # Getting the type of 'stypy_return_type' (line 218)
        stypy_return_type_218848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218848)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_full_output'
        return stypy_return_type_218848


    @norecursion
    def test_input_untouched(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_input_untouched'
        module_type_store = module_type_store.open_function_context('test_input_untouched', 226, 4, False)
        # Assigning a type to the variable 'self' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.test_input_untouched')
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.test_input_untouched.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.test_input_untouched', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_input_untouched', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_input_untouched(...)' code ##################

        
        # Assigning a Call to a Name (line 227):
        
        # Assigning a Call to a Name (line 227):
        
        # Call to array(...): (line 227)
        # Processing the call arguments (line 227)
        
        # Obtaining an instance of the builtin type 'list' (line 227)
        list_218850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 227)
        # Adding element type (line 227)
        int_218851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 19), list_218850, int_218851)
        # Adding element type (line 227)
        int_218852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 19), list_218850, int_218852)
        # Adding element type (line 227)
        int_218853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 19), list_218850, int_218853)
        
        # Processing the call keyword arguments (line 227)
        # Getting the type of 'float64' (line 227)
        float64_218854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 33), 'float64', False)
        keyword_218855 = float64_218854
        kwargs_218856 = {'dtype': keyword_218855}
        # Getting the type of 'array' (line 227)
        array_218849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 13), 'array', False)
        # Calling array(args, kwargs) (line 227)
        array_call_result_218857 = invoke(stypy.reporting.localization.Localization(__file__, 227, 13), array_218849, *[list_218850], **kwargs_218856)
        
        # Assigning a type to the variable 'p0' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'p0', array_call_result_218857)
        
        # Assigning a Call to a Name (line 228):
        
        # Assigning a Call to a Name (line 228):
        
        # Call to array(...): (line 228)
        # Processing the call arguments (line 228)
        # Getting the type of 'p0' (line 228)
        p0_218859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 24), 'p0', False)
        # Processing the call keyword arguments (line 228)
        # Getting the type of 'True' (line 228)
        True_218860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 33), 'True', False)
        keyword_218861 = True_218860
        kwargs_218862 = {'copy': keyword_218861}
        # Getting the type of 'array' (line 228)
        array_218858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 18), 'array', False)
        # Calling array(args, kwargs) (line 228)
        array_call_result_218863 = invoke(stypy.reporting.localization.Localization(__file__, 228, 18), array_218858, *[p0_218859], **kwargs_218862)
        
        # Assigning a type to the variable 'p0_copy' (line 228)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 228, 8), 'p0_copy', array_call_result_218863)
        
        # Assigning a Call to a Name (line 229):
        
        # Assigning a Call to a Name (line 229):
        
        # Call to leastsq(...): (line 229)
        # Processing the call arguments (line 229)
        # Getting the type of 'self' (line 229)
        self_218865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 30), 'self', False)
        # Obtaining the member 'residuals' of a type (line 229)
        residuals_218866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 30), self_218865, 'residuals')
        # Getting the type of 'p0' (line 229)
        p0_218867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 46), 'p0', False)
        # Processing the call keyword arguments (line 229)
        
        # Obtaining an instance of the builtin type 'tuple' (line 230)
        tuple_218868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 230)
        # Adding element type (line 230)
        # Getting the type of 'self' (line 230)
        self_218869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 36), 'self', False)
        # Obtaining the member 'y_meas' of a type (line 230)
        y_meas_218870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 36), self_218869, 'y_meas')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 36), tuple_218868, y_meas_218870)
        # Adding element type (line 230)
        # Getting the type of 'self' (line 230)
        self_218871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 49), 'self', False)
        # Obtaining the member 'x' of a type (line 230)
        x_218872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 49), self_218871, 'x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 230, 36), tuple_218868, x_218872)
        
        keyword_218873 = tuple_218868
        # Getting the type of 'True' (line 231)
        True_218874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 42), 'True', False)
        keyword_218875 = True_218874
        kwargs_218876 = {'args': keyword_218873, 'full_output': keyword_218875}
        # Getting the type of 'leastsq' (line 229)
        leastsq_218864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 22), 'leastsq', False)
        # Calling leastsq(args, kwargs) (line 229)
        leastsq_call_result_218877 = invoke(stypy.reporting.localization.Localization(__file__, 229, 22), leastsq_218864, *[residuals_218866, p0_218867], **kwargs_218876)
        
        # Assigning a type to the variable 'full_output' (line 229)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 229, 8), 'full_output', leastsq_call_result_218877)
        
        # Assigning a Name to a Tuple (line 232):
        
        # Assigning a Subscript to a Name (line 232):
        
        # Obtaining the type of the subscript
        int_218878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 8), 'int')
        # Getting the type of 'full_output' (line 232)
        full_output_218879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 232)
        getitem___218880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 8), full_output_218879, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 232)
        subscript_call_result_218881 = invoke(stypy.reporting.localization.Localization(__file__, 232, 8), getitem___218880, int_218878)
        
        # Assigning a type to the variable 'tuple_var_assignment_218002' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218002', subscript_call_result_218881)
        
        # Assigning a Subscript to a Name (line 232):
        
        # Obtaining the type of the subscript
        int_218882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 8), 'int')
        # Getting the type of 'full_output' (line 232)
        full_output_218883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 232)
        getitem___218884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 8), full_output_218883, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 232)
        subscript_call_result_218885 = invoke(stypy.reporting.localization.Localization(__file__, 232, 8), getitem___218884, int_218882)
        
        # Assigning a type to the variable 'tuple_var_assignment_218003' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218003', subscript_call_result_218885)
        
        # Assigning a Subscript to a Name (line 232):
        
        # Obtaining the type of the subscript
        int_218886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 8), 'int')
        # Getting the type of 'full_output' (line 232)
        full_output_218887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 232)
        getitem___218888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 8), full_output_218887, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 232)
        subscript_call_result_218889 = invoke(stypy.reporting.localization.Localization(__file__, 232, 8), getitem___218888, int_218886)
        
        # Assigning a type to the variable 'tuple_var_assignment_218004' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218004', subscript_call_result_218889)
        
        # Assigning a Subscript to a Name (line 232):
        
        # Obtaining the type of the subscript
        int_218890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 8), 'int')
        # Getting the type of 'full_output' (line 232)
        full_output_218891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 232)
        getitem___218892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 8), full_output_218891, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 232)
        subscript_call_result_218893 = invoke(stypy.reporting.localization.Localization(__file__, 232, 8), getitem___218892, int_218890)
        
        # Assigning a type to the variable 'tuple_var_assignment_218005' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218005', subscript_call_result_218893)
        
        # Assigning a Subscript to a Name (line 232):
        
        # Obtaining the type of the subscript
        int_218894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 8), 'int')
        # Getting the type of 'full_output' (line 232)
        full_output_218895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 49), 'full_output')
        # Obtaining the member '__getitem__' of a type (line 232)
        getitem___218896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 8), full_output_218895, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 232)
        subscript_call_result_218897 = invoke(stypy.reporting.localization.Localization(__file__, 232, 8), getitem___218896, int_218894)
        
        # Assigning a type to the variable 'tuple_var_assignment_218006' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218006', subscript_call_result_218897)
        
        # Assigning a Name to a Name (line 232):
        # Getting the type of 'tuple_var_assignment_218002' (line 232)
        tuple_var_assignment_218002_218898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218002')
        # Assigning a type to the variable 'params_fit' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'params_fit', tuple_var_assignment_218002_218898)
        
        # Assigning a Name to a Name (line 232):
        # Getting the type of 'tuple_var_assignment_218003' (line 232)
        tuple_var_assignment_218003_218899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218003')
        # Assigning a type to the variable 'cov_x' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 20), 'cov_x', tuple_var_assignment_218003_218899)
        
        # Assigning a Name to a Name (line 232):
        # Getting the type of 'tuple_var_assignment_218004' (line 232)
        tuple_var_assignment_218004_218900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218004')
        # Assigning a type to the variable 'infodict' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 27), 'infodict', tuple_var_assignment_218004_218900)
        
        # Assigning a Name to a Name (line 232):
        # Getting the type of 'tuple_var_assignment_218005' (line 232)
        tuple_var_assignment_218005_218901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218005')
        # Assigning a type to the variable 'mesg' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 37), 'mesg', tuple_var_assignment_218005_218901)
        
        # Assigning a Name to a Name (line 232):
        # Getting the type of 'tuple_var_assignment_218006' (line 232)
        tuple_var_assignment_218006_218902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'tuple_var_assignment_218006')
        # Assigning a type to the variable 'ier' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 43), 'ier', tuple_var_assignment_218006_218902)
        
        # Call to assert_(...): (line 233)
        # Processing the call arguments (line 233)
        
        # Getting the type of 'ier' (line 233)
        ier_218904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 16), 'ier', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 233)
        tuple_218905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 233)
        # Adding element type (line 233)
        int_218906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 233, 24), tuple_218905, int_218906)
        # Adding element type (line 233)
        int_218907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 233, 24), tuple_218905, int_218907)
        # Adding element type (line 233)
        int_218908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 233, 24), tuple_218905, int_218908)
        # Adding element type (line 233)
        int_218909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 233, 24), tuple_218905, int_218909)
        
        # Applying the binary operator 'in' (line 233)
        result_contains_218910 = python_operator(stypy.reporting.localization.Localization(__file__, 233, 16), 'in', ier_218904, tuple_218905)
        
        str_218911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 34), 'str', 'solution not found: %s')
        # Getting the type of 'mesg' (line 233)
        mesg_218912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 61), 'mesg', False)
        # Applying the binary operator '%' (line 233)
        result_mod_218913 = python_operator(stypy.reporting.localization.Localization(__file__, 233, 34), '%', str_218911, mesg_218912)
        
        # Processing the call keyword arguments (line 233)
        kwargs_218914 = {}
        # Getting the type of 'assert_' (line 233)
        assert__218903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 233)
        assert__call_result_218915 = invoke(stypy.reporting.localization.Localization(__file__, 233, 8), assert__218903, *[result_contains_218910, result_mod_218913], **kwargs_218914)
        
        
        # Call to assert_array_equal(...): (line 234)
        # Processing the call arguments (line 234)
        # Getting the type of 'p0' (line 234)
        p0_218917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 27), 'p0', False)
        # Getting the type of 'p0_copy' (line 234)
        p0_copy_218918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 31), 'p0_copy', False)
        # Processing the call keyword arguments (line 234)
        kwargs_218919 = {}
        # Getting the type of 'assert_array_equal' (line 234)
        assert_array_equal_218916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 234)
        assert_array_equal_call_result_218920 = invoke(stypy.reporting.localization.Localization(__file__, 234, 8), assert_array_equal_218916, *[p0_218917, p0_copy_218918], **kwargs_218919)
        
        
        # ################# End of 'test_input_untouched(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_input_untouched' in the type store
        # Getting the type of 'stypy_return_type' (line 226)
        stypy_return_type_218921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218921)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_input_untouched'
        return stypy_return_type_218921


    @norecursion
    def test_wrong_shape_func_callable(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrong_shape_func_callable'
        module_type_store = module_type_store.open_function_context('test_wrong_shape_func_callable', 236, 4, False)
        # Assigning a type to the variable 'self' (line 237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.test_wrong_shape_func_callable')
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.test_wrong_shape_func_callable.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.test_wrong_shape_func_callable', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrong_shape_func_callable', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrong_shape_func_callable(...)' code ##################

        
        # Assigning a Call to a Name (line 237):
        
        # Assigning a Call to a Name (line 237):
        
        # Call to ReturnShape(...): (line 237)
        # Processing the call arguments (line 237)
        int_218923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 27), 'int')
        # Processing the call keyword arguments (line 237)
        kwargs_218924 = {}
        # Getting the type of 'ReturnShape' (line 237)
        ReturnShape_218922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 15), 'ReturnShape', False)
        # Calling ReturnShape(args, kwargs) (line 237)
        ReturnShape_call_result_218925 = invoke(stypy.reporting.localization.Localization(__file__, 237, 15), ReturnShape_218922, *[int_218923], **kwargs_218924)
        
        # Assigning a type to the variable 'func' (line 237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'func', ReturnShape_call_result_218925)
        
        # Assigning a List to a Name (line 240):
        
        # Assigning a List to a Name (line 240):
        
        # Obtaining an instance of the builtin type 'list' (line 240)
        list_218926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 240)
        # Adding element type (line 240)
        float_218927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 14), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 240, 13), list_218926, float_218927)
        # Adding element type (line 240)
        float_218928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 240, 13), list_218926, float_218928)
        
        # Assigning a type to the variable 'x0' (line 240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 8), 'x0', list_218926)
        
        # Call to assert_raises(...): (line 241)
        # Processing the call arguments (line 241)
        # Getting the type of 'TypeError' (line 241)
        TypeError_218930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 22), 'TypeError', False)
        # Getting the type of 'optimize' (line 241)
        optimize_218931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 33), 'optimize', False)
        # Obtaining the member 'leastsq' of a type (line 241)
        leastsq_218932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 33), optimize_218931, 'leastsq')
        # Getting the type of 'func' (line 241)
        func_218933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 51), 'func', False)
        # Getting the type of 'x0' (line 241)
        x0_218934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 57), 'x0', False)
        # Processing the call keyword arguments (line 241)
        kwargs_218935 = {}
        # Getting the type of 'assert_raises' (line 241)
        assert_raises_218929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 241)
        assert_raises_call_result_218936 = invoke(stypy.reporting.localization.Localization(__file__, 241, 8), assert_raises_218929, *[TypeError_218930, leastsq_218932, func_218933, x0_218934], **kwargs_218935)
        
        
        # ################# End of 'test_wrong_shape_func_callable(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrong_shape_func_callable' in the type store
        # Getting the type of 'stypy_return_type' (line 236)
        stypy_return_type_218937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218937)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrong_shape_func_callable'
        return stypy_return_type_218937


    @norecursion
    def test_wrong_shape_func_function(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrong_shape_func_function'
        module_type_store = module_type_store.open_function_context('test_wrong_shape_func_function', 243, 4, False)
        # Assigning a type to the variable 'self' (line 244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.test_wrong_shape_func_function')
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.test_wrong_shape_func_function.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.test_wrong_shape_func_function', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrong_shape_func_function', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrong_shape_func_function(...)' code ##################

        
        # Assigning a List to a Name (line 246):
        
        # Assigning a List to a Name (line 246):
        
        # Obtaining an instance of the builtin type 'list' (line 246)
        list_218938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 246)
        # Adding element type (line 246)
        float_218939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 14), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 13), list_218938, float_218939)
        # Adding element type (line 246)
        float_218940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 13), list_218938, float_218940)
        
        # Assigning a type to the variable 'x0' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 8), 'x0', list_218938)
        
        # Call to assert_raises(...): (line 247)
        # Processing the call arguments (line 247)
        # Getting the type of 'TypeError' (line 247)
        TypeError_218942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 22), 'TypeError', False)
        # Getting the type of 'optimize' (line 247)
        optimize_218943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 33), 'optimize', False)
        # Obtaining the member 'leastsq' of a type (line 247)
        leastsq_218944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 33), optimize_218943, 'leastsq')
        # Getting the type of 'dummy_func' (line 247)
        dummy_func_218945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 51), 'dummy_func', False)
        # Getting the type of 'x0' (line 247)
        x0_218946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 63), 'x0', False)
        # Processing the call keyword arguments (line 247)
        
        # Obtaining an instance of the builtin type 'tuple' (line 247)
        tuple_218947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 73), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 247)
        # Adding element type (line 247)
        
        # Obtaining an instance of the builtin type 'tuple' (line 247)
        tuple_218948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 74), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 247)
        # Adding element type (line 247)
        int_218949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 74), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 74), tuple_218948, int_218949)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 73), tuple_218947, tuple_218948)
        
        keyword_218950 = tuple_218947
        kwargs_218951 = {'args': keyword_218950}
        # Getting the type of 'assert_raises' (line 247)
        assert_raises_218941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 247)
        assert_raises_call_result_218952 = invoke(stypy.reporting.localization.Localization(__file__, 247, 8), assert_raises_218941, *[TypeError_218942, leastsq_218944, dummy_func_218945, x0_218946], **kwargs_218951)
        
        
        # ################# End of 'test_wrong_shape_func_function(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrong_shape_func_function' in the type store
        # Getting the type of 'stypy_return_type' (line 243)
        stypy_return_type_218953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218953)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrong_shape_func_function'
        return stypy_return_type_218953


    @norecursion
    def test_wrong_shape_Dfun_callable(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrong_shape_Dfun_callable'
        module_type_store = module_type_store.open_function_context('test_wrong_shape_Dfun_callable', 249, 4, False)
        # Assigning a type to the variable 'self' (line 250)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.test_wrong_shape_Dfun_callable')
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.test_wrong_shape_Dfun_callable.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.test_wrong_shape_Dfun_callable', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrong_shape_Dfun_callable', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrong_shape_Dfun_callable(...)' code ##################

        
        # Assigning a Call to a Name (line 250):
        
        # Assigning a Call to a Name (line 250):
        
        # Call to ReturnShape(...): (line 250)
        # Processing the call arguments (line 250)
        int_218955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 27), 'int')
        # Processing the call keyword arguments (line 250)
        kwargs_218956 = {}
        # Getting the type of 'ReturnShape' (line 250)
        ReturnShape_218954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 15), 'ReturnShape', False)
        # Calling ReturnShape(args, kwargs) (line 250)
        ReturnShape_call_result_218957 = invoke(stypy.reporting.localization.Localization(__file__, 250, 15), ReturnShape_218954, *[int_218955], **kwargs_218956)
        
        # Assigning a type to the variable 'func' (line 250)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 8), 'func', ReturnShape_call_result_218957)
        
        # Assigning a Call to a Name (line 251):
        
        # Assigning a Call to a Name (line 251):
        
        # Call to ReturnShape(...): (line 251)
        # Processing the call arguments (line 251)
        
        # Obtaining an instance of the builtin type 'tuple' (line 251)
        tuple_218959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 251)
        # Adding element type (line 251)
        int_218960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 251, 34), tuple_218959, int_218960)
        # Adding element type (line 251)
        int_218961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 251, 34), tuple_218959, int_218961)
        
        # Processing the call keyword arguments (line 251)
        kwargs_218962 = {}
        # Getting the type of 'ReturnShape' (line 251)
        ReturnShape_218958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 21), 'ReturnShape', False)
        # Calling ReturnShape(args, kwargs) (line 251)
        ReturnShape_call_result_218963 = invoke(stypy.reporting.localization.Localization(__file__, 251, 21), ReturnShape_218958, *[tuple_218959], **kwargs_218962)
        
        # Assigning a type to the variable 'deriv_func' (line 251)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 251, 8), 'deriv_func', ReturnShape_call_result_218963)
        
        # Call to assert_raises(...): (line 252)
        # Processing the call arguments (line 252)
        # Getting the type of 'TypeError' (line 252)
        TypeError_218965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 22), 'TypeError', False)
        # Getting the type of 'optimize' (line 252)
        optimize_218966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 33), 'optimize', False)
        # Obtaining the member 'leastsq' of a type (line 252)
        leastsq_218967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 33), optimize_218966, 'leastsq')
        # Getting the type of 'func' (line 252)
        func_218968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 51), 'func', False)
        # Processing the call keyword arguments (line 252)
        
        # Obtaining an instance of the builtin type 'list' (line 252)
        list_218969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 252)
        # Adding element type (line 252)
        int_218970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 60), list_218969, int_218970)
        # Adding element type (line 252)
        int_218971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 60), list_218969, int_218971)
        
        keyword_218972 = list_218969
        # Getting the type of 'deriv_func' (line 252)
        deriv_func_218973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 72), 'deriv_func', False)
        keyword_218974 = deriv_func_218973
        kwargs_218975 = {'x0': keyword_218972, 'Dfun': keyword_218974}
        # Getting the type of 'assert_raises' (line 252)
        assert_raises_218964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 252)
        assert_raises_call_result_218976 = invoke(stypy.reporting.localization.Localization(__file__, 252, 8), assert_raises_218964, *[TypeError_218965, leastsq_218967, func_218968], **kwargs_218975)
        
        
        # ################# End of 'test_wrong_shape_Dfun_callable(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrong_shape_Dfun_callable' in the type store
        # Getting the type of 'stypy_return_type' (line 249)
        stypy_return_type_218977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_218977)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrong_shape_Dfun_callable'
        return stypy_return_type_218977


    @norecursion
    def test_wrong_shape_Dfun_function(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_wrong_shape_Dfun_function'
        module_type_store = module_type_store.open_function_context('test_wrong_shape_Dfun_function', 254, 4, False)
        # Assigning a type to the variable 'self' (line 255)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.test_wrong_shape_Dfun_function')
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.test_wrong_shape_Dfun_function.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.test_wrong_shape_Dfun_function', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_wrong_shape_Dfun_function', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_wrong_shape_Dfun_function(...)' code ##################

        
        # Assigning a Lambda to a Name (line 255):
        
        # Assigning a Lambda to a Name (line 255):

        @norecursion
        def _stypy_temp_lambda_76(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_76'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_76', 255, 15, True)
            # Passed parameters checking function
            _stypy_temp_lambda_76.stypy_localization = localization
            _stypy_temp_lambda_76.stypy_type_of_self = None
            _stypy_temp_lambda_76.stypy_type_store = module_type_store
            _stypy_temp_lambda_76.stypy_function_name = '_stypy_temp_lambda_76'
            _stypy_temp_lambda_76.stypy_param_names_list = ['x']
            _stypy_temp_lambda_76.stypy_varargs_param_name = None
            _stypy_temp_lambda_76.stypy_kwargs_param_name = None
            _stypy_temp_lambda_76.stypy_call_defaults = defaults
            _stypy_temp_lambda_76.stypy_call_varargs = varargs
            _stypy_temp_lambda_76.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_76', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_76', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to dummy_func(...): (line 255)
            # Processing the call arguments (line 255)
            # Getting the type of 'x' (line 255)
            x_218979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 36), 'x', False)
            
            # Obtaining an instance of the builtin type 'tuple' (line 255)
            tuple_218980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 40), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 255)
            # Adding element type (line 255)
            int_218981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 40), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 255, 40), tuple_218980, int_218981)
            
            # Processing the call keyword arguments (line 255)
            kwargs_218982 = {}
            # Getting the type of 'dummy_func' (line 255)
            dummy_func_218978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 25), 'dummy_func', False)
            # Calling dummy_func(args, kwargs) (line 255)
            dummy_func_call_result_218983 = invoke(stypy.reporting.localization.Localization(__file__, 255, 25), dummy_func_218978, *[x_218979, tuple_218980], **kwargs_218982)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 255)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 15), 'stypy_return_type', dummy_func_call_result_218983)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_76' in the type store
            # Getting the type of 'stypy_return_type' (line 255)
            stypy_return_type_218984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 15), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_218984)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_76'
            return stypy_return_type_218984

        # Assigning a type to the variable '_stypy_temp_lambda_76' (line 255)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 15), '_stypy_temp_lambda_76', _stypy_temp_lambda_76)
        # Getting the type of '_stypy_temp_lambda_76' (line 255)
        _stypy_temp_lambda_76_218985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 15), '_stypy_temp_lambda_76')
        # Assigning a type to the variable 'func' (line 255)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 8), 'func', _stypy_temp_lambda_76_218985)
        
        # Assigning a Lambda to a Name (line 256):
        
        # Assigning a Lambda to a Name (line 256):

        @norecursion
        def _stypy_temp_lambda_77(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_77'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_77', 256, 21, True)
            # Passed parameters checking function
            _stypy_temp_lambda_77.stypy_localization = localization
            _stypy_temp_lambda_77.stypy_type_of_self = None
            _stypy_temp_lambda_77.stypy_type_store = module_type_store
            _stypy_temp_lambda_77.stypy_function_name = '_stypy_temp_lambda_77'
            _stypy_temp_lambda_77.stypy_param_names_list = ['x']
            _stypy_temp_lambda_77.stypy_varargs_param_name = None
            _stypy_temp_lambda_77.stypy_kwargs_param_name = None
            _stypy_temp_lambda_77.stypy_call_defaults = defaults
            _stypy_temp_lambda_77.stypy_call_varargs = varargs
            _stypy_temp_lambda_77.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_77', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_77', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to dummy_func(...): (line 256)
            # Processing the call arguments (line 256)
            # Getting the type of 'x' (line 256)
            x_218987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 42), 'x', False)
            
            # Obtaining an instance of the builtin type 'tuple' (line 256)
            tuple_218988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 46), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 256)
            # Adding element type (line 256)
            int_218989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 46), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 46), tuple_218988, int_218989)
            # Adding element type (line 256)
            int_218990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 48), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 256, 46), tuple_218988, int_218990)
            
            # Processing the call keyword arguments (line 256)
            kwargs_218991 = {}
            # Getting the type of 'dummy_func' (line 256)
            dummy_func_218986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 31), 'dummy_func', False)
            # Calling dummy_func(args, kwargs) (line 256)
            dummy_func_call_result_218992 = invoke(stypy.reporting.localization.Localization(__file__, 256, 31), dummy_func_218986, *[x_218987, tuple_218988], **kwargs_218991)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 256)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 21), 'stypy_return_type', dummy_func_call_result_218992)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_77' in the type store
            # Getting the type of 'stypy_return_type' (line 256)
            stypy_return_type_218993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 21), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_218993)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_77'
            return stypy_return_type_218993

        # Assigning a type to the variable '_stypy_temp_lambda_77' (line 256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 21), '_stypy_temp_lambda_77', _stypy_temp_lambda_77)
        # Getting the type of '_stypy_temp_lambda_77' (line 256)
        _stypy_temp_lambda_77_218994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 21), '_stypy_temp_lambda_77')
        # Assigning a type to the variable 'deriv_func' (line 256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'deriv_func', _stypy_temp_lambda_77_218994)
        
        # Call to assert_raises(...): (line 257)
        # Processing the call arguments (line 257)
        # Getting the type of 'TypeError' (line 257)
        TypeError_218996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 22), 'TypeError', False)
        # Getting the type of 'optimize' (line 257)
        optimize_218997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 33), 'optimize', False)
        # Obtaining the member 'leastsq' of a type (line 257)
        leastsq_218998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 33), optimize_218997, 'leastsq')
        # Getting the type of 'func' (line 257)
        func_218999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 51), 'func', False)
        # Processing the call keyword arguments (line 257)
        
        # Obtaining an instance of the builtin type 'list' (line 257)
        list_219000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 257)
        # Adding element type (line 257)
        int_219001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 60), list_219000, int_219001)
        # Adding element type (line 257)
        int_219002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 257, 60), list_219000, int_219002)
        
        keyword_219003 = list_219000
        # Getting the type of 'deriv_func' (line 257)
        deriv_func_219004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 72), 'deriv_func', False)
        keyword_219005 = deriv_func_219004
        kwargs_219006 = {'x0': keyword_219003, 'Dfun': keyword_219005}
        # Getting the type of 'assert_raises' (line 257)
        assert_raises_218995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 257)
        assert_raises_call_result_219007 = invoke(stypy.reporting.localization.Localization(__file__, 257, 8), assert_raises_218995, *[TypeError_218996, leastsq_218998, func_218999], **kwargs_219006)
        
        
        # ################# End of 'test_wrong_shape_Dfun_function(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_wrong_shape_Dfun_function' in the type store
        # Getting the type of 'stypy_return_type' (line 254)
        stypy_return_type_219008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_219008)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_wrong_shape_Dfun_function'
        return stypy_return_type_219008


    @norecursion
    def test_float32(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_float32'
        module_type_store = module_type_store.open_function_context('test_float32', 259, 4, False)
        # Assigning a type to the variable 'self' (line 260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_localization', localization)
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_function_name', 'TestLeastSq.test_float32')
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeastSq.test_float32.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.test_float32', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_float32', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_float32(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 261, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['p', 'x', 'y']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['p', 'x', 'y'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['p', 'x', 'y'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            
            # Assigning a BinOp to a Name (line 262):
            
            # Assigning a BinOp to a Name (line 262):
            
            # Obtaining the type of the subscript
            int_219009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 18), 'int')
            # Getting the type of 'p' (line 262)
            p_219010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 16), 'p')
            # Obtaining the member '__getitem__' of a type (line 262)
            getitem___219011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 16), p_219010, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 262)
            subscript_call_result_219012 = invoke(stypy.reporting.localization.Localization(__file__, 262, 16), getitem___219011, int_219009)
            
            
            # Call to exp(...): (line 262)
            # Processing the call arguments (line 262)
            
            # Getting the type of 'x' (line 262)
            x_219015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 30), 'x', False)
            
            # Obtaining the type of the subscript
            int_219016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 34), 'int')
            # Getting the type of 'p' (line 262)
            p_219017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 32), 'p', False)
            # Obtaining the member '__getitem__' of a type (line 262)
            getitem___219018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 32), p_219017, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 262)
            subscript_call_result_219019 = invoke(stypy.reporting.localization.Localization(__file__, 262, 32), getitem___219018, int_219016)
            
            # Applying the binary operator '-' (line 262)
            result_sub_219020 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 30), '-', x_219015, subscript_call_result_219019)
            
            int_219021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 39), 'int')
            # Applying the binary operator '**' (line 262)
            result_pow_219022 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 29), '**', result_sub_219020, int_219021)
            
            # Applying the 'usub' unary operator (line 262)
            result___neg___219023 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 28), 'usub', result_pow_219022)
            
            float_219024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 42), 'float')
            
            # Obtaining the type of the subscript
            int_219025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 48), 'int')
            # Getting the type of 'p' (line 262)
            p_219026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 46), 'p', False)
            # Obtaining the member '__getitem__' of a type (line 262)
            getitem___219027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 46), p_219026, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 262)
            subscript_call_result_219028 = invoke(stypy.reporting.localization.Localization(__file__, 262, 46), getitem___219027, int_219025)
            
            int_219029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 52), 'int')
            # Applying the binary operator '**' (line 262)
            result_pow_219030 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 46), '**', subscript_call_result_219028, int_219029)
            
            # Applying the binary operator '*' (line 262)
            result_mul_219031 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 42), '*', float_219024, result_pow_219030)
            
            # Applying the binary operator 'div' (line 262)
            result_div_219032 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 28), 'div', result___neg___219023, result_mul_219031)
            
            # Processing the call keyword arguments (line 262)
            kwargs_219033 = {}
            # Getting the type of 'np' (line 262)
            np_219013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 21), 'np', False)
            # Obtaining the member 'exp' of a type (line 262)
            exp_219014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 21), np_219013, 'exp')
            # Calling exp(args, kwargs) (line 262)
            exp_call_result_219034 = invoke(stypy.reporting.localization.Localization(__file__, 262, 21), exp_219014, *[result_div_219032], **kwargs_219033)
            
            # Applying the binary operator '*' (line 262)
            result_mul_219035 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 16), '*', subscript_call_result_219012, exp_call_result_219034)
            
            
            # Obtaining the type of the subscript
            int_219036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 58), 'int')
            # Getting the type of 'p' (line 262)
            p_219037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 56), 'p')
            # Obtaining the member '__getitem__' of a type (line 262)
            getitem___219038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 56), p_219037, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 262)
            subscript_call_result_219039 = invoke(stypy.reporting.localization.Localization(__file__, 262, 56), getitem___219038, int_219036)
            
            # Applying the binary operator '+' (line 262)
            result_add_219040 = python_operator(stypy.reporting.localization.Localization(__file__, 262, 16), '+', result_mul_219035, subscript_call_result_219039)
            
            # Assigning a type to the variable 'q' (line 262)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 12), 'q', result_add_219040)
            # Getting the type of 'q' (line 263)
            q_219041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 19), 'q')
            # Getting the type of 'y' (line 263)
            y_219042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 23), 'y')
            # Applying the binary operator '-' (line 263)
            result_sub_219043 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 19), '-', q_219041, y_219042)
            
            # Assigning a type to the variable 'stypy_return_type' (line 263)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 12), 'stypy_return_type', result_sub_219043)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 261)
            stypy_return_type_219044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_219044)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_219044

        # Assigning a type to the variable 'func' (line 261)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 8), 'func', func)
        
        # Assigning a Call to a Name (line 265):
        
        # Assigning a Call to a Name (line 265):
        
        # Call to array(...): (line 265)
        # Processing the call arguments (line 265)
        
        # Obtaining an instance of the builtin type 'list' (line 265)
        list_219047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 265)
        # Adding element type (line 265)
        float_219048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 22), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219048)
        # Adding element type (line 265)
        float_219049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219049)
        # Adding element type (line 265)
        float_219050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219050)
        # Adding element type (line 265)
        float_219051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219051)
        # Adding element type (line 265)
        float_219052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 46), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219052)
        # Adding element type (line 265)
        float_219053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 52), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219053)
        # Adding element type (line 265)
        float_219054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 58), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219054)
        # Adding element type (line 265)
        float_219055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 65), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219055)
        # Adding element type (line 265)
        float_219056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 71), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219056)
        # Adding element type (line 265)
        float_219057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 23), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 265, 21), list_219047, float_219057)
        
        # Processing the call keyword arguments (line 265)
        # Getting the type of 'np' (line 266)
        np_219058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 37), 'np', False)
        # Obtaining the member 'float32' of a type (line 266)
        float32_219059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 37), np_219058, 'float32')
        keyword_219060 = float32_219059
        kwargs_219061 = {'dtype': keyword_219060}
        # Getting the type of 'np' (line 265)
        np_219045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 265)
        array_219046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 12), np_219045, 'array')
        # Calling array(args, kwargs) (line 265)
        array_call_result_219062 = invoke(stypy.reporting.localization.Localization(__file__, 265, 12), array_219046, *[list_219047], **kwargs_219061)
        
        # Assigning a type to the variable 'x' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 8), 'x', array_call_result_219062)
        
        # Assigning a Call to a Name (line 267):
        
        # Assigning a Call to a Name (line 267):
        
        # Call to array(...): (line 267)
        # Processing the call arguments (line 267)
        
        # Obtaining an instance of the builtin type 'list' (line 267)
        list_219065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 267)
        # Adding element type (line 267)
        float_219066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 22), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219066)
        # Adding element type (line 267)
        float_219067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219067)
        # Adding element type (line 267)
        float_219068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219068)
        # Adding element type (line 267)
        float_219069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219069)
        # Adding element type (line 267)
        float_219070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 50), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219070)
        # Adding element type (line 267)
        float_219071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 57), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219071)
        # Adding element type (line 267)
        float_219072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 64), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219072)
        # Adding element type (line 267)
        float_219073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 71), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219073)
        # Adding element type (line 267)
        float_219074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 22), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219074)
        # Adding element type (line 267)
        float_219075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 21), list_219065, float_219075)
        
        # Processing the call keyword arguments (line 267)
        # Getting the type of 'np' (line 268)
        np_219076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 43), 'np', False)
        # Obtaining the member 'float32' of a type (line 268)
        float32_219077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 43), np_219076, 'float32')
        keyword_219078 = float32_219077
        kwargs_219079 = {'dtype': keyword_219078}
        # Getting the type of 'np' (line 267)
        np_219063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 267)
        array_219064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 12), np_219063, 'array')
        # Calling array(args, kwargs) (line 267)
        array_call_result_219080 = invoke(stypy.reporting.localization.Localization(__file__, 267, 12), array_219064, *[list_219065], **kwargs_219079)
        
        # Assigning a type to the variable 'y' (line 267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 8), 'y', array_call_result_219080)
        
        # Assigning a Call to a Name (line 269):
        
        # Assigning a Call to a Name (line 269):
        
        # Call to array(...): (line 269)
        # Processing the call arguments (line 269)
        
        # Obtaining an instance of the builtin type 'list' (line 269)
        list_219083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 269)
        # Adding element type (line 269)
        float_219084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 23), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 22), list_219083, float_219084)
        # Adding element type (line 269)
        float_219085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 27), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 22), list_219083, float_219085)
        # Adding element type (line 269)
        float_219086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 22), list_219083, float_219086)
        # Adding element type (line 269)
        float_219087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 35), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 22), list_219083, float_219087)
        
        # Processing the call keyword arguments (line 269)
        kwargs_219088 = {}
        # Getting the type of 'np' (line 269)
        np_219081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 13), 'np', False)
        # Obtaining the member 'array' of a type (line 269)
        array_219082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 13), np_219081, 'array')
        # Calling array(args, kwargs) (line 269)
        array_call_result_219089 = invoke(stypy.reporting.localization.Localization(__file__, 269, 13), array_219082, *[list_219083], **kwargs_219088)
        
        # Assigning a type to the variable 'p0' (line 269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 8), 'p0', array_call_result_219089)
        
        # Assigning a Call to a Tuple (line 270):
        
        # Assigning a Subscript to a Name (line 270):
        
        # Obtaining the type of the subscript
        int_219090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 8), 'int')
        
        # Call to leastsq(...): (line 270)
        # Processing the call arguments (line 270)
        # Getting the type of 'func' (line 270)
        func_219093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 39), 'func', False)
        # Getting the type of 'p0' (line 270)
        p0_219094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 45), 'p0', False)
        # Processing the call keyword arguments (line 270)
        
        # Obtaining an instance of the builtin type 'tuple' (line 270)
        tuple_219095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 55), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 270)
        # Adding element type (line 270)
        # Getting the type of 'x' (line 270)
        x_219096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 55), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 55), tuple_219095, x_219096)
        # Adding element type (line 270)
        # Getting the type of 'y' (line 270)
        y_219097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 57), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 55), tuple_219095, y_219097)
        
        keyword_219098 = tuple_219095
        kwargs_219099 = {'args': keyword_219098}
        # Getting the type of 'optimize' (line 270)
        optimize_219091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 22), 'optimize', False)
        # Obtaining the member 'leastsq' of a type (line 270)
        leastsq_219092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 22), optimize_219091, 'leastsq')
        # Calling leastsq(args, kwargs) (line 270)
        leastsq_call_result_219100 = invoke(stypy.reporting.localization.Localization(__file__, 270, 22), leastsq_219092, *[func_219093, p0_219094], **kwargs_219099)
        
        # Obtaining the member '__getitem__' of a type (line 270)
        getitem___219101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 8), leastsq_call_result_219100, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 270)
        subscript_call_result_219102 = invoke(stypy.reporting.localization.Localization(__file__, 270, 8), getitem___219101, int_219090)
        
        # Assigning a type to the variable 'tuple_var_assignment_218007' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'tuple_var_assignment_218007', subscript_call_result_219102)
        
        # Assigning a Subscript to a Name (line 270):
        
        # Obtaining the type of the subscript
        int_219103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 8), 'int')
        
        # Call to leastsq(...): (line 270)
        # Processing the call arguments (line 270)
        # Getting the type of 'func' (line 270)
        func_219106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 39), 'func', False)
        # Getting the type of 'p0' (line 270)
        p0_219107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 45), 'p0', False)
        # Processing the call keyword arguments (line 270)
        
        # Obtaining an instance of the builtin type 'tuple' (line 270)
        tuple_219108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 55), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 270)
        # Adding element type (line 270)
        # Getting the type of 'x' (line 270)
        x_219109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 55), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 55), tuple_219108, x_219109)
        # Adding element type (line 270)
        # Getting the type of 'y' (line 270)
        y_219110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 57), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 55), tuple_219108, y_219110)
        
        keyword_219111 = tuple_219108
        kwargs_219112 = {'args': keyword_219111}
        # Getting the type of 'optimize' (line 270)
        optimize_219104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 22), 'optimize', False)
        # Obtaining the member 'leastsq' of a type (line 270)
        leastsq_219105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 22), optimize_219104, 'leastsq')
        # Calling leastsq(args, kwargs) (line 270)
        leastsq_call_result_219113 = invoke(stypy.reporting.localization.Localization(__file__, 270, 22), leastsq_219105, *[func_219106, p0_219107], **kwargs_219112)
        
        # Obtaining the member '__getitem__' of a type (line 270)
        getitem___219114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 8), leastsq_call_result_219113, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 270)
        subscript_call_result_219115 = invoke(stypy.reporting.localization.Localization(__file__, 270, 8), getitem___219114, int_219103)
        
        # Assigning a type to the variable 'tuple_var_assignment_218008' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'tuple_var_assignment_218008', subscript_call_result_219115)
        
        # Assigning a Name to a Name (line 270):
        # Getting the type of 'tuple_var_assignment_218007' (line 270)
        tuple_var_assignment_218007_219116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'tuple_var_assignment_218007')
        # Assigning a type to the variable 'p1' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'p1', tuple_var_assignment_218007_219116)
        
        # Assigning a Name to a Name (line 270):
        # Getting the type of 'tuple_var_assignment_218008' (line 270)
        tuple_var_assignment_218008_219117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'tuple_var_assignment_218008')
        # Assigning a type to the variable 'success' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 12), 'success', tuple_var_assignment_218008_219117)
        
        # Call to assert_(...): (line 272)
        # Processing the call arguments (line 272)
        
        # Getting the type of 'success' (line 272)
        success_219119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 16), 'success', False)
        
        # Obtaining an instance of the builtin type 'list' (line 272)
        list_219120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 272)
        # Adding element type (line 272)
        int_219121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 27), list_219120, int_219121)
        # Adding element type (line 272)
        int_219122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 27), list_219120, int_219122)
        # Adding element type (line 272)
        int_219123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 27), list_219120, int_219123)
        # Adding element type (line 272)
        int_219124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 272, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 272, 27), list_219120, int_219124)
        
        # Applying the binary operator 'in' (line 272)
        result_contains_219125 = python_operator(stypy.reporting.localization.Localization(__file__, 272, 16), 'in', success_219119, list_219120)
        
        # Processing the call keyword arguments (line 272)
        kwargs_219126 = {}
        # Getting the type of 'assert_' (line 272)
        assert__219118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 272)
        assert__call_result_219127 = invoke(stypy.reporting.localization.Localization(__file__, 272, 8), assert__219118, *[result_contains_219125], **kwargs_219126)
        
        
        # Call to assert_(...): (line 273)
        # Processing the call arguments (line 273)
        
        
        # Call to sum(...): (line 273)
        # Processing the call keyword arguments (line 273)
        kwargs_219138 = {}
        
        # Call to func(...): (line 273)
        # Processing the call arguments (line 273)
        # Getting the type of 'p1' (line 273)
        p1_219130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 22), 'p1', False)
        # Getting the type of 'x' (line 273)
        x_219131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 25), 'x', False)
        # Getting the type of 'y' (line 273)
        y_219132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 27), 'y', False)
        # Processing the call keyword arguments (line 273)
        kwargs_219133 = {}
        # Getting the type of 'func' (line 273)
        func_219129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 17), 'func', False)
        # Calling func(args, kwargs) (line 273)
        func_call_result_219134 = invoke(stypy.reporting.localization.Localization(__file__, 273, 17), func_219129, *[p1_219130, x_219131, y_219132], **kwargs_219133)
        
        int_219135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 31), 'int')
        # Applying the binary operator '**' (line 273)
        result_pow_219136 = python_operator(stypy.reporting.localization.Localization(__file__, 273, 17), '**', func_call_result_219134, int_219135)
        
        # Obtaining the member 'sum' of a type (line 273)
        sum_219137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 17), result_pow_219136, 'sum')
        # Calling sum(args, kwargs) (line 273)
        sum_call_result_219139 = invoke(stypy.reporting.localization.Localization(__file__, 273, 17), sum_219137, *[], **kwargs_219138)
        
        float_219140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 42), 'float')
        
        # Call to sum(...): (line 273)
        # Processing the call keyword arguments (line 273)
        kwargs_219150 = {}
        
        # Call to func(...): (line 273)
        # Processing the call arguments (line 273)
        # Getting the type of 'p0' (line 273)
        p0_219142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 55), 'p0', False)
        # Getting the type of 'x' (line 273)
        x_219143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 58), 'x', False)
        # Getting the type of 'y' (line 273)
        y_219144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 60), 'y', False)
        # Processing the call keyword arguments (line 273)
        kwargs_219145 = {}
        # Getting the type of 'func' (line 273)
        func_219141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 50), 'func', False)
        # Calling func(args, kwargs) (line 273)
        func_call_result_219146 = invoke(stypy.reporting.localization.Localization(__file__, 273, 50), func_219141, *[p0_219142, x_219143, y_219144], **kwargs_219145)
        
        int_219147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 64), 'int')
        # Applying the binary operator '**' (line 273)
        result_pow_219148 = python_operator(stypy.reporting.localization.Localization(__file__, 273, 50), '**', func_call_result_219146, int_219147)
        
        # Obtaining the member 'sum' of a type (line 273)
        sum_219149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 50), result_pow_219148, 'sum')
        # Calling sum(args, kwargs) (line 273)
        sum_call_result_219151 = invoke(stypy.reporting.localization.Localization(__file__, 273, 50), sum_219149, *[], **kwargs_219150)
        
        # Applying the binary operator '*' (line 273)
        result_mul_219152 = python_operator(stypy.reporting.localization.Localization(__file__, 273, 42), '*', float_219140, sum_call_result_219151)
        
        # Applying the binary operator '<' (line 273)
        result_lt_219153 = python_operator(stypy.reporting.localization.Localization(__file__, 273, 16), '<', sum_call_result_219139, result_mul_219152)
        
        # Processing the call keyword arguments (line 273)
        kwargs_219154 = {}
        # Getting the type of 'assert_' (line 273)
        assert__219128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 273)
        assert__call_result_219155 = invoke(stypy.reporting.localization.Localization(__file__, 273, 8), assert__219128, *[result_lt_219153], **kwargs_219154)
        
        
        # ################# End of 'test_float32(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_float32' in the type store
        # Getting the type of 'stypy_return_type' (line 259)
        stypy_return_type_219156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_219156)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_float32'
        return stypy_return_type_219156


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 195, 0, False)
        # Assigning a type to the variable 'self' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeastSq.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestLeastSq' (line 195)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 0), 'TestLeastSq', TestLeastSq)
# Declaration of the 'TestCurveFit' class

class TestCurveFit(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 277, 4, False)
        # Assigning a type to the variable 'self' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.setup_method')
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Call to a Attribute (line 278):
        
        # Assigning a Call to a Attribute (line 278):
        
        # Call to array(...): (line 278)
        # Processing the call arguments (line 278)
        
        # Obtaining an instance of the builtin type 'list' (line 278)
        list_219158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 278)
        # Adding element type (line 278)
        float_219159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 24), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 278, 23), list_219158, float_219159)
        # Adding element type (line 278)
        float_219160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 278, 23), list_219158, float_219160)
        # Adding element type (line 278)
        float_219161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 278, 23), list_219158, float_219161)
        # Adding element type (line 278)
        float_219162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 278, 23), list_219158, float_219162)
        
        # Processing the call keyword arguments (line 278)
        kwargs_219163 = {}
        # Getting the type of 'array' (line 278)
        array_219157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 17), 'array', False)
        # Calling array(args, kwargs) (line 278)
        array_call_result_219164 = invoke(stypy.reporting.localization.Localization(__file__, 278, 17), array_219157, *[list_219158], **kwargs_219163)
        
        # Getting the type of 'self' (line 278)
        self_219165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 8), 'self')
        # Setting the type of the member 'y' of a type (line 278)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 8), self_219165, 'y', array_call_result_219164)
        
        # Assigning a Call to a Attribute (line 279):
        
        # Assigning a Call to a Attribute (line 279):
        
        # Call to array(...): (line 279)
        # Processing the call arguments (line 279)
        
        # Obtaining an instance of the builtin type 'list' (line 279)
        list_219167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 279)
        # Adding element type (line 279)
        float_219168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 24), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 23), list_219167, float_219168)
        # Adding element type (line 279)
        float_219169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 23), list_219167, float_219169)
        # Adding element type (line 279)
        float_219170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 23), list_219167, float_219170)
        # Adding element type (line 279)
        float_219171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 23), list_219167, float_219171)
        
        # Processing the call keyword arguments (line 279)
        kwargs_219172 = {}
        # Getting the type of 'array' (line 279)
        array_219166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 17), 'array', False)
        # Calling array(args, kwargs) (line 279)
        array_call_result_219173 = invoke(stypy.reporting.localization.Localization(__file__, 279, 17), array_219166, *[list_219167], **kwargs_219172)
        
        # Getting the type of 'self' (line 279)
        self_219174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'self')
        # Setting the type of the member 'x' of a type (line 279)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 8), self_219174, 'x', array_call_result_219173)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 277)
        stypy_return_type_219175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_219175)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_219175


    @norecursion
    def test_one_argument(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_one_argument'
        module_type_store = module_type_store.open_function_context('test_one_argument', 281, 4, False)
        # Assigning a type to the variable 'self' (line 282)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_one_argument')
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_one_argument.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_one_argument', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_one_argument', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_one_argument(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 282, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x', 'a']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x', 'a'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x', 'a'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            # Getting the type of 'x' (line 283)
            x_219176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 19), 'x')
            # Getting the type of 'a' (line 283)
            a_219177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 22), 'a')
            # Applying the binary operator '**' (line 283)
            result_pow_219178 = python_operator(stypy.reporting.localization.Localization(__file__, 283, 19), '**', x_219176, a_219177)
            
            # Assigning a type to the variable 'stypy_return_type' (line 283)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 283, 12), 'stypy_return_type', result_pow_219178)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 282)
            stypy_return_type_219179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_219179)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_219179

        # Assigning a type to the variable 'func' (line 282)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 8), 'func', func)
        
        # Assigning a Call to a Tuple (line 284):
        
        # Assigning a Subscript to a Name (line 284):
        
        # Obtaining the type of the subscript
        int_219180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 8), 'int')
        
        # Call to curve_fit(...): (line 284)
        # Processing the call arguments (line 284)
        # Getting the type of 'func' (line 284)
        func_219182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 31), 'func', False)
        # Getting the type of 'self' (line 284)
        self_219183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 37), 'self', False)
        # Obtaining the member 'x' of a type (line 284)
        x_219184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 37), self_219183, 'x')
        # Getting the type of 'self' (line 284)
        self_219185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 45), 'self', False)
        # Obtaining the member 'y' of a type (line 284)
        y_219186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 45), self_219185, 'y')
        # Processing the call keyword arguments (line 284)
        kwargs_219187 = {}
        # Getting the type of 'curve_fit' (line 284)
        curve_fit_219181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 284)
        curve_fit_call_result_219188 = invoke(stypy.reporting.localization.Localization(__file__, 284, 21), curve_fit_219181, *[func_219182, x_219184, y_219186], **kwargs_219187)
        
        # Obtaining the member '__getitem__' of a type (line 284)
        getitem___219189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 8), curve_fit_call_result_219188, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 284)
        subscript_call_result_219190 = invoke(stypy.reporting.localization.Localization(__file__, 284, 8), getitem___219189, int_219180)
        
        # Assigning a type to the variable 'tuple_var_assignment_218009' (line 284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'tuple_var_assignment_218009', subscript_call_result_219190)
        
        # Assigning a Subscript to a Name (line 284):
        
        # Obtaining the type of the subscript
        int_219191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 8), 'int')
        
        # Call to curve_fit(...): (line 284)
        # Processing the call arguments (line 284)
        # Getting the type of 'func' (line 284)
        func_219193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 31), 'func', False)
        # Getting the type of 'self' (line 284)
        self_219194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 37), 'self', False)
        # Obtaining the member 'x' of a type (line 284)
        x_219195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 37), self_219194, 'x')
        # Getting the type of 'self' (line 284)
        self_219196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 45), 'self', False)
        # Obtaining the member 'y' of a type (line 284)
        y_219197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 45), self_219196, 'y')
        # Processing the call keyword arguments (line 284)
        kwargs_219198 = {}
        # Getting the type of 'curve_fit' (line 284)
        curve_fit_219192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 284)
        curve_fit_call_result_219199 = invoke(stypy.reporting.localization.Localization(__file__, 284, 21), curve_fit_219192, *[func_219193, x_219195, y_219197], **kwargs_219198)
        
        # Obtaining the member '__getitem__' of a type (line 284)
        getitem___219200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 8), curve_fit_call_result_219199, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 284)
        subscript_call_result_219201 = invoke(stypy.reporting.localization.Localization(__file__, 284, 8), getitem___219200, int_219191)
        
        # Assigning a type to the variable 'tuple_var_assignment_218010' (line 284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'tuple_var_assignment_218010', subscript_call_result_219201)
        
        # Assigning a Name to a Name (line 284):
        # Getting the type of 'tuple_var_assignment_218009' (line 284)
        tuple_var_assignment_218009_219202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'tuple_var_assignment_218009')
        # Assigning a type to the variable 'popt' (line 284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'popt', tuple_var_assignment_218009_219202)
        
        # Assigning a Name to a Name (line 284):
        # Getting the type of 'tuple_var_assignment_218010' (line 284)
        tuple_var_assignment_218010_219203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'tuple_var_assignment_218010')
        # Assigning a type to the variable 'pcov' (line 284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 14), 'pcov', tuple_var_assignment_218010_219203)
        
        # Call to assert_(...): (line 285)
        # Processing the call arguments (line 285)
        
        
        # Call to len(...): (line 285)
        # Processing the call arguments (line 285)
        # Getting the type of 'popt' (line 285)
        popt_219206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 20), 'popt', False)
        # Processing the call keyword arguments (line 285)
        kwargs_219207 = {}
        # Getting the type of 'len' (line 285)
        len_219205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 16), 'len', False)
        # Calling len(args, kwargs) (line 285)
        len_call_result_219208 = invoke(stypy.reporting.localization.Localization(__file__, 285, 16), len_219205, *[popt_219206], **kwargs_219207)
        
        int_219209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 285, 29), 'int')
        # Applying the binary operator '==' (line 285)
        result_eq_219210 = python_operator(stypy.reporting.localization.Localization(__file__, 285, 16), '==', len_call_result_219208, int_219209)
        
        # Processing the call keyword arguments (line 285)
        kwargs_219211 = {}
        # Getting the type of 'assert_' (line 285)
        assert__219204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 285)
        assert__call_result_219212 = invoke(stypy.reporting.localization.Localization(__file__, 285, 8), assert__219204, *[result_eq_219210], **kwargs_219211)
        
        
        # Call to assert_(...): (line 286)
        # Processing the call arguments (line 286)
        
        # Getting the type of 'pcov' (line 286)
        pcov_219214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 16), 'pcov', False)
        # Obtaining the member 'shape' of a type (line 286)
        shape_219215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 16), pcov_219214, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 286)
        tuple_219216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 286)
        # Adding element type (line 286)
        int_219217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 31), tuple_219216, int_219217)
        # Adding element type (line 286)
        int_219218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 31), tuple_219216, int_219218)
        
        # Applying the binary operator '==' (line 286)
        result_eq_219219 = python_operator(stypy.reporting.localization.Localization(__file__, 286, 16), '==', shape_219215, tuple_219216)
        
        # Processing the call keyword arguments (line 286)
        kwargs_219220 = {}
        # Getting the type of 'assert_' (line 286)
        assert__219213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 286)
        assert__call_result_219221 = invoke(stypy.reporting.localization.Localization(__file__, 286, 8), assert__219213, *[result_eq_219219], **kwargs_219220)
        
        
        # Call to assert_almost_equal(...): (line 287)
        # Processing the call arguments (line 287)
        
        # Obtaining the type of the subscript
        int_219223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 33), 'int')
        # Getting the type of 'popt' (line 287)
        popt_219224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 28), 'popt', False)
        # Obtaining the member '__getitem__' of a type (line 287)
        getitem___219225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 28), popt_219224, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 287)
        subscript_call_result_219226 = invoke(stypy.reporting.localization.Localization(__file__, 287, 28), getitem___219225, int_219223)
        
        float_219227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 37), 'float')
        # Processing the call keyword arguments (line 287)
        int_219228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 53), 'int')
        keyword_219229 = int_219228
        kwargs_219230 = {'decimal': keyword_219229}
        # Getting the type of 'assert_almost_equal' (line 287)
        assert_almost_equal_219222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 287)
        assert_almost_equal_call_result_219231 = invoke(stypy.reporting.localization.Localization(__file__, 287, 8), assert_almost_equal_219222, *[subscript_call_result_219226, float_219227], **kwargs_219230)
        
        
        # Call to assert_almost_equal(...): (line 288)
        # Processing the call arguments (line 288)
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 288)
        tuple_219233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 33), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 288)
        # Adding element type (line 288)
        int_219234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 33), tuple_219233, int_219234)
        # Adding element type (line 288)
        int_219235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 33), tuple_219233, int_219235)
        
        # Getting the type of 'pcov' (line 288)
        pcov_219236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 28), 'pcov', False)
        # Obtaining the member '__getitem__' of a type (line 288)
        getitem___219237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 28), pcov_219236, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 288)
        subscript_call_result_219238 = invoke(stypy.reporting.localization.Localization(__file__, 288, 28), getitem___219237, tuple_219233)
        
        float_219239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 39), 'float')
        # Processing the call keyword arguments (line 288)
        int_219240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 55), 'int')
        keyword_219241 = int_219240
        kwargs_219242 = {'decimal': keyword_219241}
        # Getting the type of 'assert_almost_equal' (line 288)
        assert_almost_equal_219232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 288)
        assert_almost_equal_call_result_219243 = invoke(stypy.reporting.localization.Localization(__file__, 288, 8), assert_almost_equal_219232, *[subscript_call_result_219238, float_219239], **kwargs_219242)
        
        
        # Assigning a Call to a Name (line 291):
        
        # Assigning a Call to a Name (line 291):
        
        # Call to curve_fit(...): (line 291)
        # Processing the call arguments (line 291)
        # Getting the type of 'func' (line 291)
        func_219245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 24), 'func', False)
        # Getting the type of 'self' (line 291)
        self_219246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 30), 'self', False)
        # Obtaining the member 'x' of a type (line 291)
        x_219247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 291, 30), self_219246, 'x')
        # Getting the type of 'self' (line 291)
        self_219248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 38), 'self', False)
        # Obtaining the member 'y' of a type (line 291)
        y_219249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 291, 38), self_219248, 'y')
        # Processing the call keyword arguments (line 291)
        int_219250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 58), 'int')
        keyword_219251 = int_219250
        kwargs_219252 = {'full_output': keyword_219251}
        # Getting the type of 'curve_fit' (line 291)
        curve_fit_219244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 14), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 291)
        curve_fit_call_result_219253 = invoke(stypy.reporting.localization.Localization(__file__, 291, 14), curve_fit_219244, *[func_219245, x_219247, y_219249], **kwargs_219252)
        
        # Assigning a type to the variable 'res' (line 291)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 8), 'res', curve_fit_call_result_219253)
        
        # Assigning a Name to a Tuple (line 292):
        
        # Assigning a Subscript to a Name (line 292):
        
        # Obtaining the type of the subscript
        int_219254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 8), 'int')
        # Getting the type of 'res' (line 292)
        res_219255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 48), 'res')
        # Obtaining the member '__getitem__' of a type (line 292)
        getitem___219256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 8), res_219255, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 292)
        subscript_call_result_219257 = invoke(stypy.reporting.localization.Localization(__file__, 292, 8), getitem___219256, int_219254)
        
        # Assigning a type to the variable 'tuple_var_assignment_218011' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218011', subscript_call_result_219257)
        
        # Assigning a Subscript to a Name (line 292):
        
        # Obtaining the type of the subscript
        int_219258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 8), 'int')
        # Getting the type of 'res' (line 292)
        res_219259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 48), 'res')
        # Obtaining the member '__getitem__' of a type (line 292)
        getitem___219260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 8), res_219259, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 292)
        subscript_call_result_219261 = invoke(stypy.reporting.localization.Localization(__file__, 292, 8), getitem___219260, int_219258)
        
        # Assigning a type to the variable 'tuple_var_assignment_218012' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218012', subscript_call_result_219261)
        
        # Assigning a Subscript to a Name (line 292):
        
        # Obtaining the type of the subscript
        int_219262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 8), 'int')
        # Getting the type of 'res' (line 292)
        res_219263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 48), 'res')
        # Obtaining the member '__getitem__' of a type (line 292)
        getitem___219264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 8), res_219263, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 292)
        subscript_call_result_219265 = invoke(stypy.reporting.localization.Localization(__file__, 292, 8), getitem___219264, int_219262)
        
        # Assigning a type to the variable 'tuple_var_assignment_218013' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218013', subscript_call_result_219265)
        
        # Assigning a Subscript to a Name (line 292):
        
        # Obtaining the type of the subscript
        int_219266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 8), 'int')
        # Getting the type of 'res' (line 292)
        res_219267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 48), 'res')
        # Obtaining the member '__getitem__' of a type (line 292)
        getitem___219268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 8), res_219267, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 292)
        subscript_call_result_219269 = invoke(stypy.reporting.localization.Localization(__file__, 292, 8), getitem___219268, int_219266)
        
        # Assigning a type to the variable 'tuple_var_assignment_218014' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218014', subscript_call_result_219269)
        
        # Assigning a Subscript to a Name (line 292):
        
        # Obtaining the type of the subscript
        int_219270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 8), 'int')
        # Getting the type of 'res' (line 292)
        res_219271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 48), 'res')
        # Obtaining the member '__getitem__' of a type (line 292)
        getitem___219272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 8), res_219271, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 292)
        subscript_call_result_219273 = invoke(stypy.reporting.localization.Localization(__file__, 292, 8), getitem___219272, int_219270)
        
        # Assigning a type to the variable 'tuple_var_assignment_218015' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218015', subscript_call_result_219273)
        
        # Assigning a Name to a Name (line 292):
        # Getting the type of 'tuple_var_assignment_218011' (line 292)
        tuple_var_assignment_218011_219274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218011')
        # Assigning a type to the variable 'popt2' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 9), 'popt2', tuple_var_assignment_218011_219274)
        
        # Assigning a Name to a Name (line 292):
        # Getting the type of 'tuple_var_assignment_218012' (line 292)
        tuple_var_assignment_218012_219275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218012')
        # Assigning a type to the variable 'pcov2' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 16), 'pcov2', tuple_var_assignment_218012_219275)
        
        # Assigning a Name to a Name (line 292):
        # Getting the type of 'tuple_var_assignment_218013' (line 292)
        tuple_var_assignment_218013_219276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218013')
        # Assigning a type to the variable 'infodict' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 23), 'infodict', tuple_var_assignment_218013_219276)
        
        # Assigning a Name to a Name (line 292):
        # Getting the type of 'tuple_var_assignment_218014' (line 292)
        tuple_var_assignment_218014_219277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218014')
        # Assigning a type to the variable 'errmsg' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 33), 'errmsg', tuple_var_assignment_218014_219277)
        
        # Assigning a Name to a Name (line 292):
        # Getting the type of 'tuple_var_assignment_218015' (line 292)
        tuple_var_assignment_218015_219278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'tuple_var_assignment_218015')
        # Assigning a type to the variable 'ier' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 41), 'ier', tuple_var_assignment_218015_219278)
        
        # Call to assert_array_almost_equal(...): (line 293)
        # Processing the call arguments (line 293)
        # Getting the type of 'popt' (line 293)
        popt_219280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 34), 'popt', False)
        # Getting the type of 'popt2' (line 293)
        popt2_219281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 40), 'popt2', False)
        # Processing the call keyword arguments (line 293)
        kwargs_219282 = {}
        # Getting the type of 'assert_array_almost_equal' (line 293)
        assert_array_almost_equal_219279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 293)
        assert_array_almost_equal_call_result_219283 = invoke(stypy.reporting.localization.Localization(__file__, 293, 8), assert_array_almost_equal_219279, *[popt_219280, popt2_219281], **kwargs_219282)
        
        
        # ################# End of 'test_one_argument(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_one_argument' in the type store
        # Getting the type of 'stypy_return_type' (line 281)
        stypy_return_type_219284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_219284)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_one_argument'
        return stypy_return_type_219284


    @norecursion
    def test_two_argument(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_two_argument'
        module_type_store = module_type_store.open_function_context('test_two_argument', 295, 4, False)
        # Assigning a type to the variable 'self' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_two_argument')
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_two_argument.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_two_argument', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_two_argument', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_two_argument(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 296, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x', 'a', 'b']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            # Getting the type of 'b' (line 297)
            b_219285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 19), 'b')
            # Getting the type of 'x' (line 297)
            x_219286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 21), 'x')
            # Getting the type of 'a' (line 297)
            a_219287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 24), 'a')
            # Applying the binary operator '**' (line 297)
            result_pow_219288 = python_operator(stypy.reporting.localization.Localization(__file__, 297, 21), '**', x_219286, a_219287)
            
            # Applying the binary operator '*' (line 297)
            result_mul_219289 = python_operator(stypy.reporting.localization.Localization(__file__, 297, 19), '*', b_219285, result_pow_219288)
            
            # Assigning a type to the variable 'stypy_return_type' (line 297)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 297, 12), 'stypy_return_type', result_mul_219289)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 296)
            stypy_return_type_219290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_219290)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_219290

        # Assigning a type to the variable 'func' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'func', func)
        
        # Assigning a Call to a Tuple (line 298):
        
        # Assigning a Subscript to a Name (line 298):
        
        # Obtaining the type of the subscript
        int_219291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 298, 8), 'int')
        
        # Call to curve_fit(...): (line 298)
        # Processing the call arguments (line 298)
        # Getting the type of 'func' (line 298)
        func_219293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 31), 'func', False)
        # Getting the type of 'self' (line 298)
        self_219294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 37), 'self', False)
        # Obtaining the member 'x' of a type (line 298)
        x_219295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 37), self_219294, 'x')
        # Getting the type of 'self' (line 298)
        self_219296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 45), 'self', False)
        # Obtaining the member 'y' of a type (line 298)
        y_219297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 45), self_219296, 'y')
        # Processing the call keyword arguments (line 298)
        kwargs_219298 = {}
        # Getting the type of 'curve_fit' (line 298)
        curve_fit_219292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 298)
        curve_fit_call_result_219299 = invoke(stypy.reporting.localization.Localization(__file__, 298, 21), curve_fit_219292, *[func_219293, x_219295, y_219297], **kwargs_219298)
        
        # Obtaining the member '__getitem__' of a type (line 298)
        getitem___219300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 8), curve_fit_call_result_219299, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 298)
        subscript_call_result_219301 = invoke(stypy.reporting.localization.Localization(__file__, 298, 8), getitem___219300, int_219291)
        
        # Assigning a type to the variable 'tuple_var_assignment_218016' (line 298)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 298, 8), 'tuple_var_assignment_218016', subscript_call_result_219301)
        
        # Assigning a Subscript to a Name (line 298):
        
        # Obtaining the type of the subscript
        int_219302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 298, 8), 'int')
        
        # Call to curve_fit(...): (line 298)
        # Processing the call arguments (line 298)
        # Getting the type of 'func' (line 298)
        func_219304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 31), 'func', False)
        # Getting the type of 'self' (line 298)
        self_219305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 37), 'self', False)
        # Obtaining the member 'x' of a type (line 298)
        x_219306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 37), self_219305, 'x')
        # Getting the type of 'self' (line 298)
        self_219307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 45), 'self', False)
        # Obtaining the member 'y' of a type (line 298)
        y_219308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 45), self_219307, 'y')
        # Processing the call keyword arguments (line 298)
        kwargs_219309 = {}
        # Getting the type of 'curve_fit' (line 298)
        curve_fit_219303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 298)
        curve_fit_call_result_219310 = invoke(stypy.reporting.localization.Localization(__file__, 298, 21), curve_fit_219303, *[func_219304, x_219306, y_219308], **kwargs_219309)
        
        # Obtaining the member '__getitem__' of a type (line 298)
        getitem___219311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 8), curve_fit_call_result_219310, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 298)
        subscript_call_result_219312 = invoke(stypy.reporting.localization.Localization(__file__, 298, 8), getitem___219311, int_219302)
        
        # Assigning a type to the variable 'tuple_var_assignment_218017' (line 298)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 298, 8), 'tuple_var_assignment_218017', subscript_call_result_219312)
        
        # Assigning a Name to a Name (line 298):
        # Getting the type of 'tuple_var_assignment_218016' (line 298)
        tuple_var_assignment_218016_219313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 8), 'tuple_var_assignment_218016')
        # Assigning a type to the variable 'popt' (line 298)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 298, 8), 'popt', tuple_var_assignment_218016_219313)
        
        # Assigning a Name to a Name (line 298):
        # Getting the type of 'tuple_var_assignment_218017' (line 298)
        tuple_var_assignment_218017_219314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 8), 'tuple_var_assignment_218017')
        # Assigning a type to the variable 'pcov' (line 298)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 298, 14), 'pcov', tuple_var_assignment_218017_219314)
        
        # Call to assert_(...): (line 299)
        # Processing the call arguments (line 299)
        
        
        # Call to len(...): (line 299)
        # Processing the call arguments (line 299)
        # Getting the type of 'popt' (line 299)
        popt_219317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 20), 'popt', False)
        # Processing the call keyword arguments (line 299)
        kwargs_219318 = {}
        # Getting the type of 'len' (line 299)
        len_219316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 16), 'len', False)
        # Calling len(args, kwargs) (line 299)
        len_call_result_219319 = invoke(stypy.reporting.localization.Localization(__file__, 299, 16), len_219316, *[popt_219317], **kwargs_219318)
        
        int_219320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 29), 'int')
        # Applying the binary operator '==' (line 299)
        result_eq_219321 = python_operator(stypy.reporting.localization.Localization(__file__, 299, 16), '==', len_call_result_219319, int_219320)
        
        # Processing the call keyword arguments (line 299)
        kwargs_219322 = {}
        # Getting the type of 'assert_' (line 299)
        assert__219315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 299)
        assert__call_result_219323 = invoke(stypy.reporting.localization.Localization(__file__, 299, 8), assert__219315, *[result_eq_219321], **kwargs_219322)
        
        
        # Call to assert_(...): (line 300)
        # Processing the call arguments (line 300)
        
        # Getting the type of 'pcov' (line 300)
        pcov_219325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 16), 'pcov', False)
        # Obtaining the member 'shape' of a type (line 300)
        shape_219326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 16), pcov_219325, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 300)
        tuple_219327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 300)
        # Adding element type (line 300)
        int_219328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 31), tuple_219327, int_219328)
        # Adding element type (line 300)
        int_219329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 31), tuple_219327, int_219329)
        
        # Applying the binary operator '==' (line 300)
        result_eq_219330 = python_operator(stypy.reporting.localization.Localization(__file__, 300, 16), '==', shape_219326, tuple_219327)
        
        # Processing the call keyword arguments (line 300)
        kwargs_219331 = {}
        # Getting the type of 'assert_' (line 300)
        assert__219324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 300)
        assert__call_result_219332 = invoke(stypy.reporting.localization.Localization(__file__, 300, 8), assert__219324, *[result_eq_219330], **kwargs_219331)
        
        
        # Call to assert_array_almost_equal(...): (line 301)
        # Processing the call arguments (line 301)
        # Getting the type of 'popt' (line 301)
        popt_219334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 34), 'popt', False)
        
        # Obtaining an instance of the builtin type 'list' (line 301)
        list_219335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 301)
        # Adding element type (line 301)
        float_219336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 41), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 40), list_219335, float_219336)
        # Adding element type (line 301)
        float_219337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 301, 40), list_219335, float_219337)
        
        # Processing the call keyword arguments (line 301)
        int_219338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 66), 'int')
        keyword_219339 = int_219338
        kwargs_219340 = {'decimal': keyword_219339}
        # Getting the type of 'assert_array_almost_equal' (line 301)
        assert_array_almost_equal_219333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 301)
        assert_array_almost_equal_call_result_219341 = invoke(stypy.reporting.localization.Localization(__file__, 301, 8), assert_array_almost_equal_219333, *[popt_219334, list_219335], **kwargs_219340)
        
        
        # Call to assert_array_almost_equal(...): (line 302)
        # Processing the call arguments (line 302)
        # Getting the type of 'pcov' (line 302)
        pcov_219343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 34), 'pcov', False)
        
        # Obtaining an instance of the builtin type 'list' (line 302)
        list_219344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 302)
        # Adding element type (line 302)
        
        # Obtaining an instance of the builtin type 'list' (line 302)
        list_219345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 302)
        # Adding element type (line 302)
        float_219346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 302, 41), list_219345, float_219346)
        # Adding element type (line 302)
        float_219347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 50), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 302, 41), list_219345, float_219347)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 302, 40), list_219344, list_219345)
        # Adding element type (line 302)
        
        # Obtaining an instance of the builtin type 'list' (line 302)
        list_219348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 302)
        # Adding element type (line 302)
        float_219349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 61), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 302, 60), list_219348, float_219349)
        # Adding element type (line 302)
        float_219350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 302, 70), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 302, 60), list_219348, float_219350)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 302, 40), list_219344, list_219348)
        
        # Processing the call keyword arguments (line 302)
        int_219351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 42), 'int')
        keyword_219352 = int_219351
        kwargs_219353 = {'decimal': keyword_219352}
        # Getting the type of 'assert_array_almost_equal' (line 302)
        assert_array_almost_equal_219342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 302)
        assert_array_almost_equal_call_result_219354 = invoke(stypy.reporting.localization.Localization(__file__, 302, 8), assert_array_almost_equal_219342, *[pcov_219343, list_219344], **kwargs_219353)
        
        
        # ################# End of 'test_two_argument(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_two_argument' in the type store
        # Getting the type of 'stypy_return_type' (line 295)
        stypy_return_type_219355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_219355)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_two_argument'
        return stypy_return_type_219355


    @norecursion
    def test_func_is_classmethod(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_func_is_classmethod'
        module_type_store = module_type_store.open_function_context('test_func_is_classmethod', 305, 4, False)
        # Assigning a type to the variable 'self' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_func_is_classmethod')
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_func_is_classmethod.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_func_is_classmethod', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_func_is_classmethod', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_func_is_classmethod(...)' code ##################

        # Declaration of the 'test_self' class

        class test_self(object, ):
            str_219356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 309, (-1)), 'str', 'This class tests if curve_fit passes the correct number of\n               arguments when the model function is a class instance method.\n            ')

            @norecursion
            def func(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'func'
                module_type_store = module_type_store.open_function_context('func', 310, 12, False)
                # Assigning a type to the variable 'self' (line 311)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                test_self.func.__dict__.__setitem__('stypy_localization', localization)
                test_self.func.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                test_self.func.__dict__.__setitem__('stypy_type_store', module_type_store)
                test_self.func.__dict__.__setitem__('stypy_function_name', 'test_self.func')
                test_self.func.__dict__.__setitem__('stypy_param_names_list', ['x', 'a', 'b'])
                test_self.func.__dict__.__setitem__('stypy_varargs_param_name', None)
                test_self.func.__dict__.__setitem__('stypy_kwargs_param_name', None)
                test_self.func.__dict__.__setitem__('stypy_call_defaults', defaults)
                test_self.func.__dict__.__setitem__('stypy_call_varargs', varargs)
                test_self.func.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                test_self.func.__dict__.__setitem__('stypy_declared_arg_number', 4)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'test_self.func', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'func', localization, ['x', 'a', 'b'], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'func(...)' code ##################

                # Getting the type of 'b' (line 311)
                b_219357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 23), 'b')
                # Getting the type of 'x' (line 311)
                x_219358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 27), 'x')
                # Getting the type of 'a' (line 311)
                a_219359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 30), 'a')
                # Applying the binary operator '**' (line 311)
                result_pow_219360 = python_operator(stypy.reporting.localization.Localization(__file__, 311, 27), '**', x_219358, a_219359)
                
                # Applying the binary operator '*' (line 311)
                result_mul_219361 = python_operator(stypy.reporting.localization.Localization(__file__, 311, 23), '*', b_219357, result_pow_219360)
                
                # Assigning a type to the variable 'stypy_return_type' (line 311)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 16), 'stypy_return_type', result_mul_219361)
                
                # ################# End of 'func(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'func' in the type store
                # Getting the type of 'stypy_return_type' (line 310)
                stypy_return_type_219362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_219362)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'func'
                return stypy_return_type_219362

        
        # Assigning a type to the variable 'test_self' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'test_self', test_self)
        
        # Assigning a Call to a Name (line 313):
        
        # Assigning a Call to a Name (line 313):
        
        # Call to test_self(...): (line 313)
        # Processing the call keyword arguments (line 313)
        kwargs_219364 = {}
        # Getting the type of 'test_self' (line 313)
        test_self_219363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 25), 'test_self', False)
        # Calling test_self(args, kwargs) (line 313)
        test_self_call_result_219365 = invoke(stypy.reporting.localization.Localization(__file__, 313, 25), test_self_219363, *[], **kwargs_219364)
        
        # Assigning a type to the variable 'test_self_inst' (line 313)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 313, 8), 'test_self_inst', test_self_call_result_219365)
        
        # Assigning a Call to a Tuple (line 314):
        
        # Assigning a Subscript to a Name (line 314):
        
        # Obtaining the type of the subscript
        int_219366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 8), 'int')
        
        # Call to curve_fit(...): (line 314)
        # Processing the call arguments (line 314)
        # Getting the type of 'test_self_inst' (line 314)
        test_self_inst_219368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 31), 'test_self_inst', False)
        # Obtaining the member 'func' of a type (line 314)
        func_219369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 31), test_self_inst_219368, 'func')
        # Getting the type of 'self' (line 314)
        self_219370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 52), 'self', False)
        # Obtaining the member 'x' of a type (line 314)
        x_219371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 52), self_219370, 'x')
        # Getting the type of 'self' (line 314)
        self_219372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 60), 'self', False)
        # Obtaining the member 'y' of a type (line 314)
        y_219373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 60), self_219372, 'y')
        # Processing the call keyword arguments (line 314)
        kwargs_219374 = {}
        # Getting the type of 'curve_fit' (line 314)
        curve_fit_219367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 314)
        curve_fit_call_result_219375 = invoke(stypy.reporting.localization.Localization(__file__, 314, 21), curve_fit_219367, *[func_219369, x_219371, y_219373], **kwargs_219374)
        
        # Obtaining the member '__getitem__' of a type (line 314)
        getitem___219376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 8), curve_fit_call_result_219375, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 314)
        subscript_call_result_219377 = invoke(stypy.reporting.localization.Localization(__file__, 314, 8), getitem___219376, int_219366)
        
        # Assigning a type to the variable 'tuple_var_assignment_218018' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'tuple_var_assignment_218018', subscript_call_result_219377)
        
        # Assigning a Subscript to a Name (line 314):
        
        # Obtaining the type of the subscript
        int_219378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 8), 'int')
        
        # Call to curve_fit(...): (line 314)
        # Processing the call arguments (line 314)
        # Getting the type of 'test_self_inst' (line 314)
        test_self_inst_219380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 31), 'test_self_inst', False)
        # Obtaining the member 'func' of a type (line 314)
        func_219381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 31), test_self_inst_219380, 'func')
        # Getting the type of 'self' (line 314)
        self_219382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 52), 'self', False)
        # Obtaining the member 'x' of a type (line 314)
        x_219383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 52), self_219382, 'x')
        # Getting the type of 'self' (line 314)
        self_219384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 60), 'self', False)
        # Obtaining the member 'y' of a type (line 314)
        y_219385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 60), self_219384, 'y')
        # Processing the call keyword arguments (line 314)
        kwargs_219386 = {}
        # Getting the type of 'curve_fit' (line 314)
        curve_fit_219379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 314)
        curve_fit_call_result_219387 = invoke(stypy.reporting.localization.Localization(__file__, 314, 21), curve_fit_219379, *[func_219381, x_219383, y_219385], **kwargs_219386)
        
        # Obtaining the member '__getitem__' of a type (line 314)
        getitem___219388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 8), curve_fit_call_result_219387, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 314)
        subscript_call_result_219389 = invoke(stypy.reporting.localization.Localization(__file__, 314, 8), getitem___219388, int_219378)
        
        # Assigning a type to the variable 'tuple_var_assignment_218019' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'tuple_var_assignment_218019', subscript_call_result_219389)
        
        # Assigning a Name to a Name (line 314):
        # Getting the type of 'tuple_var_assignment_218018' (line 314)
        tuple_var_assignment_218018_219390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'tuple_var_assignment_218018')
        # Assigning a type to the variable 'popt' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'popt', tuple_var_assignment_218018_219390)
        
        # Assigning a Name to a Name (line 314):
        # Getting the type of 'tuple_var_assignment_218019' (line 314)
        tuple_var_assignment_218019_219391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'tuple_var_assignment_218019')
        # Assigning a type to the variable 'pcov' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 14), 'pcov', tuple_var_assignment_218019_219391)
        
        # Call to assert_(...): (line 315)
        # Processing the call arguments (line 315)
        
        # Getting the type of 'pcov' (line 315)
        pcov_219393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 16), 'pcov', False)
        # Obtaining the member 'shape' of a type (line 315)
        shape_219394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 315, 16), pcov_219393, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 315)
        tuple_219395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 315)
        # Adding element type (line 315)
        int_219396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 315, 31), tuple_219395, int_219396)
        # Adding element type (line 315)
        int_219397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 315, 31), tuple_219395, int_219397)
        
        # Applying the binary operator '==' (line 315)
        result_eq_219398 = python_operator(stypy.reporting.localization.Localization(__file__, 315, 16), '==', shape_219394, tuple_219395)
        
        # Processing the call keyword arguments (line 315)
        kwargs_219399 = {}
        # Getting the type of 'assert_' (line 315)
        assert__219392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 315)
        assert__call_result_219400 = invoke(stypy.reporting.localization.Localization(__file__, 315, 8), assert__219392, *[result_eq_219398], **kwargs_219399)
        
        
        # Call to assert_array_almost_equal(...): (line 316)
        # Processing the call arguments (line 316)
        # Getting the type of 'popt' (line 316)
        popt_219402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 34), 'popt', False)
        
        # Obtaining an instance of the builtin type 'list' (line 316)
        list_219403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 316)
        # Adding element type (line 316)
        float_219404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 41), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 316, 40), list_219403, float_219404)
        # Adding element type (line 316)
        float_219405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 316, 40), list_219403, float_219405)
        
        # Processing the call keyword arguments (line 316)
        int_219406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 66), 'int')
        keyword_219407 = int_219406
        kwargs_219408 = {'decimal': keyword_219407}
        # Getting the type of 'assert_array_almost_equal' (line 316)
        assert_array_almost_equal_219401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 316)
        assert_array_almost_equal_call_result_219409 = invoke(stypy.reporting.localization.Localization(__file__, 316, 8), assert_array_almost_equal_219401, *[popt_219402, list_219403], **kwargs_219408)
        
        
        # Call to assert_array_almost_equal(...): (line 317)
        # Processing the call arguments (line 317)
        # Getting the type of 'pcov' (line 317)
        pcov_219411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 34), 'pcov', False)
        
        # Obtaining an instance of the builtin type 'list' (line 317)
        list_219412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 317)
        # Adding element type (line 317)
        
        # Obtaining an instance of the builtin type 'list' (line 317)
        list_219413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 317)
        # Adding element type (line 317)
        float_219414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 317, 41), list_219413, float_219414)
        # Adding element type (line 317)
        float_219415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 50), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 317, 41), list_219413, float_219415)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 317, 40), list_219412, list_219413)
        # Adding element type (line 317)
        
        # Obtaining an instance of the builtin type 'list' (line 317)
        list_219416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 317)
        # Adding element type (line 317)
        float_219417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 61), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 317, 60), list_219416, float_219417)
        # Adding element type (line 317)
        float_219418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 70), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 317, 60), list_219416, float_219418)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 317, 40), list_219412, list_219416)
        
        # Processing the call keyword arguments (line 317)
        int_219419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 42), 'int')
        keyword_219420 = int_219419
        kwargs_219421 = {'decimal': keyword_219420}
        # Getting the type of 'assert_array_almost_equal' (line 317)
        assert_array_almost_equal_219410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 317)
        assert_array_almost_equal_call_result_219422 = invoke(stypy.reporting.localization.Localization(__file__, 317, 8), assert_array_almost_equal_219410, *[pcov_219411, list_219412], **kwargs_219421)
        
        
        # ################# End of 'test_func_is_classmethod(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_func_is_classmethod' in the type store
        # Getting the type of 'stypy_return_type' (line 305)
        stypy_return_type_219423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_219423)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_func_is_classmethod'
        return stypy_return_type_219423


    @norecursion
    def test_regression_2639(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_regression_2639'
        module_type_store = module_type_store.open_function_context('test_regression_2639', 320, 4, False)
        # Assigning a type to the variable 'self' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_regression_2639')
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_regression_2639.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_regression_2639', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_regression_2639', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_regression_2639(...)' code ##################

        
        # Assigning a List to a Name (line 322):
        
        # Assigning a List to a Name (line 322):
        
        # Obtaining an instance of the builtin type 'list' (line 322)
        list_219424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 322)
        # Adding element type (line 322)
        float_219425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 13), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219425)
        # Adding element type (line 322)
        float_219426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219426)
        # Adding element type (line 322)
        float_219427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219427)
        # Adding element type (line 322)
        float_219428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 13), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219428)
        # Adding element type (line 322)
        float_219429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219429)
        # Adding element type (line 322)
        float_219430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219430)
        # Adding element type (line 322)
        float_219431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 13), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219431)
        # Adding element type (line 322)
        float_219432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219432)
        # Adding element type (line 322)
        float_219433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219433)
        # Adding element type (line 322)
        float_219434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 13), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 322, 12), list_219424, float_219434)
        
        # Assigning a type to the variable 'x' (line 322)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 8), 'x', list_219424)
        
        # Assigning a List to a Name (line 326):
        
        # Assigning a List to a Name (line 326):
        
        # Obtaining an instance of the builtin type 'list' (line 326)
        list_219435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 326)
        # Adding element type (line 326)
        float_219436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 13), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219436)
        # Adding element type (line 326)
        float_219437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 20), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219437)
        # Adding element type (line 326)
        float_219438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 27), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219438)
        # Adding element type (line 326)
        float_219439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 35), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219439)
        # Adding element type (line 326)
        float_219440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219440)
        # Adding element type (line 326)
        float_219441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 51), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219441)
        # Adding element type (line 326)
        float_219442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 59), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219442)
        # Adding element type (line 326)
        float_219443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 13), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219443)
        # Adding element type (line 326)
        float_219444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 21), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219444)
        # Adding element type (line 326)
        float_219445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 12), list_219435, float_219445)
        
        # Assigning a type to the variable 'y' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 8), 'y', list_219435)
        
        # Assigning a List to a Name (line 328):
        
        # Assigning a List to a Name (line 328):
        
        # Obtaining an instance of the builtin type 'list' (line 328)
        list_219446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 328)
        # Adding element type (line 328)
        float_219447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 17), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 16), list_219446, float_219447)
        # Adding element type (line 328)
        float_219448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 16), list_219446, float_219448)
        # Adding element type (line 328)
        float_219449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 55), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 16), list_219446, float_219449)
        # Adding element type (line 328)
        float_219450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 63), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 16), list_219446, float_219450)
        # Adding element type (line 328)
        float_219451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 17), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 16), list_219446, float_219451)
        # Adding element type (line 328)
        float_219452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 16), list_219446, float_219452)
        
        # Assigning a type to the variable 'guess' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 8), 'guess', list_219446)
        
        # Assigning a List to a Name (line 330):
        
        # Assigning a List to a Name (line 330):
        
        # Obtaining an instance of the builtin type 'list' (line 330)
        list_219453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 330)
        # Adding element type (line 330)
        float_219454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 16), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 15), list_219453, float_219454)
        # Adding element type (line 330)
        float_219455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 15), list_219453, float_219455)
        # Adding element type (line 330)
        float_219456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 15), list_219453, float_219456)
        # Adding element type (line 330)
        float_219457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 64), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 15), list_219453, float_219457)
        # Adding element type (line 330)
        float_219458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 16), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 15), list_219453, float_219458)
        # Adding element type (line 330)
        float_219459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 331, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 15), list_219453, float_219459)
        
        # Assigning a type to the variable 'good' (line 330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 8), 'good', list_219453)

        @norecursion
        def f_double_gauss(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'f_double_gauss'
            module_type_store = module_type_store.open_function_context('f_double_gauss', 333, 8, False)
            
            # Passed parameters checking function
            f_double_gauss.stypy_localization = localization
            f_double_gauss.stypy_type_of_self = None
            f_double_gauss.stypy_type_store = module_type_store
            f_double_gauss.stypy_function_name = 'f_double_gauss'
            f_double_gauss.stypy_param_names_list = ['x', 'x0', 'x1', 'A0', 'A1', 'sigma', 'c']
            f_double_gauss.stypy_varargs_param_name = None
            f_double_gauss.stypy_kwargs_param_name = None
            f_double_gauss.stypy_call_defaults = defaults
            f_double_gauss.stypy_call_varargs = varargs
            f_double_gauss.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'f_double_gauss', ['x', 'x0', 'x1', 'A0', 'A1', 'sigma', 'c'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'f_double_gauss', localization, ['x', 'x0', 'x1', 'A0', 'A1', 'sigma', 'c'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'f_double_gauss(...)' code ##################

            # Getting the type of 'A0' (line 334)
            A0_219460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 20), 'A0')
            
            # Call to exp(...): (line 334)
            # Processing the call arguments (line 334)
            
            # Getting the type of 'x' (line 334)
            x_219463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 32), 'x', False)
            # Getting the type of 'x0' (line 334)
            x0_219464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 34), 'x0', False)
            # Applying the binary operator '-' (line 334)
            result_sub_219465 = python_operator(stypy.reporting.localization.Localization(__file__, 334, 32), '-', x_219463, x0_219464)
            
            int_219466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 39), 'int')
            # Applying the binary operator '**' (line 334)
            result_pow_219467 = python_operator(stypy.reporting.localization.Localization(__file__, 334, 31), '**', result_sub_219465, int_219466)
            
            # Applying the 'usub' unary operator (line 334)
            result___neg___219468 = python_operator(stypy.reporting.localization.Localization(__file__, 334, 30), 'usub', result_pow_219467)
            
            float_219469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 42), 'float')
            # Getting the type of 'sigma' (line 334)
            sigma_219470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 45), 'sigma', False)
            int_219471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 52), 'int')
            # Applying the binary operator '**' (line 334)
            result_pow_219472 = python_operator(stypy.reporting.localization.Localization(__file__, 334, 45), '**', sigma_219470, int_219471)
            
            # Applying the binary operator '*' (line 334)
            result_mul_219473 = python_operator(stypy.reporting.localization.Localization(__file__, 334, 42), '*', float_219469, result_pow_219472)
            
            # Applying the binary operator 'div' (line 334)
            result_div_219474 = python_operator(stypy.reporting.localization.Localization(__file__, 334, 30), 'div', result___neg___219468, result_mul_219473)
            
            # Processing the call keyword arguments (line 334)
            kwargs_219475 = {}
            # Getting the type of 'np' (line 334)
            np_219461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 23), 'np', False)
            # Obtaining the member 'exp' of a type (line 334)
            exp_219462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 23), np_219461, 'exp')
            # Calling exp(args, kwargs) (line 334)
            exp_call_result_219476 = invoke(stypy.reporting.localization.Localization(__file__, 334, 23), exp_219462, *[result_div_219474], **kwargs_219475)
            
            # Applying the binary operator '*' (line 334)
            result_mul_219477 = python_operator(stypy.reporting.localization.Localization(__file__, 334, 20), '*', A0_219460, exp_call_result_219476)
            
            # Getting the type of 'A1' (line 335)
            A1_219478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 22), 'A1')
            
            # Call to exp(...): (line 335)
            # Processing the call arguments (line 335)
            
            # Getting the type of 'x' (line 335)
            x_219481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 34), 'x', False)
            # Getting the type of 'x1' (line 335)
            x1_219482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 36), 'x1', False)
            # Applying the binary operator '-' (line 335)
            result_sub_219483 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 34), '-', x_219481, x1_219482)
            
            int_219484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 41), 'int')
            # Applying the binary operator '**' (line 335)
            result_pow_219485 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 33), '**', result_sub_219483, int_219484)
            
            # Applying the 'usub' unary operator (line 335)
            result___neg___219486 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 32), 'usub', result_pow_219485)
            
            float_219487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 44), 'float')
            # Getting the type of 'sigma' (line 335)
            sigma_219488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 47), 'sigma', False)
            int_219489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 54), 'int')
            # Applying the binary operator '**' (line 335)
            result_pow_219490 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 47), '**', sigma_219488, int_219489)
            
            # Applying the binary operator '*' (line 335)
            result_mul_219491 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 44), '*', float_219487, result_pow_219490)
            
            # Applying the binary operator 'div' (line 335)
            result_div_219492 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 32), 'div', result___neg___219486, result_mul_219491)
            
            # Processing the call keyword arguments (line 335)
            kwargs_219493 = {}
            # Getting the type of 'np' (line 335)
            np_219479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 25), 'np', False)
            # Obtaining the member 'exp' of a type (line 335)
            exp_219480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 25), np_219479, 'exp')
            # Calling exp(args, kwargs) (line 335)
            exp_call_result_219494 = invoke(stypy.reporting.localization.Localization(__file__, 335, 25), exp_219480, *[result_div_219492], **kwargs_219493)
            
            # Applying the binary operator '*' (line 335)
            result_mul_219495 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 22), '*', A1_219478, exp_call_result_219494)
            
            # Applying the binary operator '+' (line 334)
            result_add_219496 = python_operator(stypy.reporting.localization.Localization(__file__, 334, 20), '+', result_mul_219477, result_mul_219495)
            
            # Getting the type of 'c' (line 335)
            c_219497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 60), 'c')
            # Applying the binary operator '+' (line 335)
            result_add_219498 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 58), '+', result_add_219496, c_219497)
            
            # Assigning a type to the variable 'stypy_return_type' (line 334)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 334, 12), 'stypy_return_type', result_add_219498)
            
            # ################# End of 'f_double_gauss(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'f_double_gauss' in the type store
            # Getting the type of 'stypy_return_type' (line 333)
            stypy_return_type_219499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_219499)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'f_double_gauss'
            return stypy_return_type_219499

        # Assigning a type to the variable 'f_double_gauss' (line 333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'f_double_gauss', f_double_gauss)
        
        # Assigning a Call to a Tuple (line 336):
        
        # Assigning a Subscript to a Name (line 336):
        
        # Obtaining the type of the subscript
        int_219500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 8), 'int')
        
        # Call to curve_fit(...): (line 336)
        # Processing the call arguments (line 336)
        # Getting the type of 'f_double_gauss' (line 336)
        f_double_gauss_219502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 31), 'f_double_gauss', False)
        # Getting the type of 'x' (line 336)
        x_219503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 47), 'x', False)
        # Getting the type of 'y' (line 336)
        y_219504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 50), 'y', False)
        # Getting the type of 'guess' (line 336)
        guess_219505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 53), 'guess', False)
        # Processing the call keyword arguments (line 336)
        int_219506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 67), 'int')
        keyword_219507 = int_219506
        kwargs_219508 = {'maxfev': keyword_219507}
        # Getting the type of 'curve_fit' (line 336)
        curve_fit_219501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 336)
        curve_fit_call_result_219509 = invoke(stypy.reporting.localization.Localization(__file__, 336, 21), curve_fit_219501, *[f_double_gauss_219502, x_219503, y_219504, guess_219505], **kwargs_219508)
        
        # Obtaining the member '__getitem__' of a type (line 336)
        getitem___219510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 8), curve_fit_call_result_219509, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 336)
        subscript_call_result_219511 = invoke(stypy.reporting.localization.Localization(__file__, 336, 8), getitem___219510, int_219500)
        
        # Assigning a type to the variable 'tuple_var_assignment_218020' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'tuple_var_assignment_218020', subscript_call_result_219511)
        
        # Assigning a Subscript to a Name (line 336):
        
        # Obtaining the type of the subscript
        int_219512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 8), 'int')
        
        # Call to curve_fit(...): (line 336)
        # Processing the call arguments (line 336)
        # Getting the type of 'f_double_gauss' (line 336)
        f_double_gauss_219514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 31), 'f_double_gauss', False)
        # Getting the type of 'x' (line 336)
        x_219515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 47), 'x', False)
        # Getting the type of 'y' (line 336)
        y_219516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 50), 'y', False)
        # Getting the type of 'guess' (line 336)
        guess_219517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 53), 'guess', False)
        # Processing the call keyword arguments (line 336)
        int_219518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 67), 'int')
        keyword_219519 = int_219518
        kwargs_219520 = {'maxfev': keyword_219519}
        # Getting the type of 'curve_fit' (line 336)
        curve_fit_219513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 336)
        curve_fit_call_result_219521 = invoke(stypy.reporting.localization.Localization(__file__, 336, 21), curve_fit_219513, *[f_double_gauss_219514, x_219515, y_219516, guess_219517], **kwargs_219520)
        
        # Obtaining the member '__getitem__' of a type (line 336)
        getitem___219522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 8), curve_fit_call_result_219521, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 336)
        subscript_call_result_219523 = invoke(stypy.reporting.localization.Localization(__file__, 336, 8), getitem___219522, int_219512)
        
        # Assigning a type to the variable 'tuple_var_assignment_218021' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'tuple_var_assignment_218021', subscript_call_result_219523)
        
        # Assigning a Name to a Name (line 336):
        # Getting the type of 'tuple_var_assignment_218020' (line 336)
        tuple_var_assignment_218020_219524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'tuple_var_assignment_218020')
        # Assigning a type to the variable 'popt' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'popt', tuple_var_assignment_218020_219524)
        
        # Assigning a Name to a Name (line 336):
        # Getting the type of 'tuple_var_assignment_218021' (line 336)
        tuple_var_assignment_218021_219525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'tuple_var_assignment_218021')
        # Assigning a type to the variable 'pcov' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 14), 'pcov', tuple_var_assignment_218021_219525)
        
        # Call to assert_allclose(...): (line 337)
        # Processing the call arguments (line 337)
        # Getting the type of 'popt' (line 337)
        popt_219527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 24), 'popt', False)
        # Getting the type of 'good' (line 337)
        good_219528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 30), 'good', False)
        # Processing the call keyword arguments (line 337)
        float_219529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 41), 'float')
        keyword_219530 = float_219529
        kwargs_219531 = {'rtol': keyword_219530}
        # Getting the type of 'assert_allclose' (line 337)
        assert_allclose_219526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 337)
        assert_allclose_call_result_219532 = invoke(stypy.reporting.localization.Localization(__file__, 337, 8), assert_allclose_219526, *[popt_219527, good_219528], **kwargs_219531)
        
        
        # ################# End of 'test_regression_2639(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_regression_2639' in the type store
        # Getting the type of 'stypy_return_type' (line 320)
        stypy_return_type_219533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_219533)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_regression_2639'
        return stypy_return_type_219533


    @norecursion
    def test_pcov(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_pcov'
        module_type_store = module_type_store.open_function_context('test_pcov', 339, 4, False)
        # Assigning a type to the variable 'self' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_pcov')
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_pcov.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_pcov', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_pcov', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_pcov(...)' code ##################

        
        # Assigning a Call to a Name (line 340):
        
        # Assigning a Call to a Name (line 340):
        
        # Call to array(...): (line 340)
        # Processing the call arguments (line 340)
        
        # Obtaining an instance of the builtin type 'list' (line 340)
        list_219536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 340)
        # Adding element type (line 340)
        int_219537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 25), list_219536, int_219537)
        # Adding element type (line 340)
        int_219538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 25), list_219536, int_219538)
        # Adding element type (line 340)
        int_219539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 25), list_219536, int_219539)
        # Adding element type (line 340)
        int_219540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 25), list_219536, int_219540)
        # Adding element type (line 340)
        int_219541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 25), list_219536, int_219541)
        # Adding element type (line 340)
        int_219542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 25), list_219536, int_219542)
        
        # Processing the call keyword arguments (line 340)
        kwargs_219543 = {}
        # Getting the type of 'np' (line 340)
        np_219534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 16), 'np', False)
        # Obtaining the member 'array' of a type (line 340)
        array_219535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 16), np_219534, 'array')
        # Calling array(args, kwargs) (line 340)
        array_call_result_219544 = invoke(stypy.reporting.localization.Localization(__file__, 340, 16), array_219535, *[list_219536], **kwargs_219543)
        
        # Assigning a type to the variable 'xdata' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'xdata', array_call_result_219544)
        
        # Assigning a Call to a Name (line 341):
        
        # Assigning a Call to a Name (line 341):
        
        # Call to array(...): (line 341)
        # Processing the call arguments (line 341)
        
        # Obtaining an instance of the builtin type 'list' (line 341)
        list_219547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 341)
        # Adding element type (line 341)
        int_219548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 25), list_219547, int_219548)
        # Adding element type (line 341)
        int_219549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 25), list_219547, int_219549)
        # Adding element type (line 341)
        int_219550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 25), list_219547, int_219550)
        # Adding element type (line 341)
        int_219551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 25), list_219547, int_219551)
        # Adding element type (line 341)
        int_219552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 25), list_219547, int_219552)
        # Adding element type (line 341)
        int_219553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 25), list_219547, int_219553)
        
        # Processing the call keyword arguments (line 341)
        kwargs_219554 = {}
        # Getting the type of 'np' (line 341)
        np_219545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 16), 'np', False)
        # Obtaining the member 'array' of a type (line 341)
        array_219546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 16), np_219545, 'array')
        # Calling array(args, kwargs) (line 341)
        array_call_result_219555 = invoke(stypy.reporting.localization.Localization(__file__, 341, 16), array_219546, *[list_219547], **kwargs_219554)
        
        # Assigning a type to the variable 'ydata' (line 341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 341, 8), 'ydata', array_call_result_219555)
        
        # Assigning a Call to a Name (line 342):
        
        # Assigning a Call to a Name (line 342):
        
        # Call to array(...): (line 342)
        # Processing the call arguments (line 342)
        
        # Obtaining an instance of the builtin type 'list' (line 342)
        list_219558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 342)
        # Adding element type (line 342)
        int_219559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 25), list_219558, int_219559)
        # Adding element type (line 342)
        int_219560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 25), list_219558, int_219560)
        # Adding element type (line 342)
        int_219561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 25), list_219558, int_219561)
        # Adding element type (line 342)
        int_219562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 25), list_219558, int_219562)
        # Adding element type (line 342)
        int_219563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 25), list_219558, int_219563)
        # Adding element type (line 342)
        int_219564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 25), list_219558, int_219564)
        
        # Processing the call keyword arguments (line 342)
        kwargs_219565 = {}
        # Getting the type of 'np' (line 342)
        np_219556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 16), 'np', False)
        # Obtaining the member 'array' of a type (line 342)
        array_219557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 16), np_219556, 'array')
        # Calling array(args, kwargs) (line 342)
        array_call_result_219566 = invoke(stypy.reporting.localization.Localization(__file__, 342, 16), array_219557, *[list_219558], **kwargs_219565)
        
        # Assigning a type to the variable 'sigma' (line 342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'sigma', array_call_result_219566)

        @norecursion
        def f(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'f'
            module_type_store = module_type_store.open_function_context('f', 344, 8, False)
            
            # Passed parameters checking function
            f.stypy_localization = localization
            f.stypy_type_of_self = None
            f.stypy_type_store = module_type_store
            f.stypy_function_name = 'f'
            f.stypy_param_names_list = ['x', 'a', 'b']
            f.stypy_varargs_param_name = None
            f.stypy_kwargs_param_name = None
            f.stypy_call_defaults = defaults
            f.stypy_call_varargs = varargs
            f.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'f', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'f', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'f(...)' code ##################

            # Getting the type of 'a' (line 345)
            a_219567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 19), 'a')
            # Getting the type of 'x' (line 345)
            x_219568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 21), 'x')
            # Applying the binary operator '*' (line 345)
            result_mul_219569 = python_operator(stypy.reporting.localization.Localization(__file__, 345, 19), '*', a_219567, x_219568)
            
            # Getting the type of 'b' (line 345)
            b_219570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 25), 'b')
            # Applying the binary operator '+' (line 345)
            result_add_219571 = python_operator(stypy.reporting.localization.Localization(__file__, 345, 19), '+', result_mul_219569, b_219570)
            
            # Assigning a type to the variable 'stypy_return_type' (line 345)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 12), 'stypy_return_type', result_add_219571)
            
            # ################# End of 'f(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'f' in the type store
            # Getting the type of 'stypy_return_type' (line 344)
            stypy_return_type_219572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_219572)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'f'
            return stypy_return_type_219572

        # Assigning a type to the variable 'f' (line 344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'f', f)
        
        
        # Obtaining an instance of the builtin type 'list' (line 347)
        list_219573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 347)
        # Adding element type (line 347)
        str_219574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 23), 'str', 'lm')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 347, 22), list_219573, str_219574)
        # Adding element type (line 347)
        str_219575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 29), 'str', 'trf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 347, 22), list_219573, str_219575)
        # Adding element type (line 347)
        str_219576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 36), 'str', 'dogbox')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 347, 22), list_219573, str_219576)
        
        # Testing the type of a for loop iterable (line 347)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 347, 8), list_219573)
        # Getting the type of the for loop variable (line 347)
        for_loop_var_219577 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 347, 8), list_219573)
        # Assigning a type to the variable 'method' (line 347)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 8), 'method', for_loop_var_219577)
        # SSA begins for a for statement (line 347)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 348):
        
        # Assigning a Subscript to a Name (line 348):
        
        # Obtaining the type of the subscript
        int_219578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 12), 'int')
        
        # Call to curve_fit(...): (line 348)
        # Processing the call arguments (line 348)
        # Getting the type of 'f' (line 348)
        f_219580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 35), 'f', False)
        # Getting the type of 'xdata' (line 348)
        xdata_219581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 348)
        ydata_219582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 45), 'ydata', False)
        # Processing the call keyword arguments (line 348)
        
        # Obtaining an instance of the builtin type 'list' (line 348)
        list_219583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 348)
        # Adding element type (line 348)
        int_219584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 348, 55), list_219583, int_219584)
        # Adding element type (line 348)
        int_219585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 348, 55), list_219583, int_219585)
        
        keyword_219586 = list_219583
        # Getting the type of 'sigma' (line 348)
        sigma_219587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 69), 'sigma', False)
        keyword_219588 = sigma_219587
        # Getting the type of 'method' (line 349)
        method_219589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 42), 'method', False)
        keyword_219590 = method_219589
        kwargs_219591 = {'p0': keyword_219586, 'sigma': keyword_219588, 'method': keyword_219590}
        # Getting the type of 'curve_fit' (line 348)
        curve_fit_219579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 348)
        curve_fit_call_result_219592 = invoke(stypy.reporting.localization.Localization(__file__, 348, 25), curve_fit_219579, *[f_219580, xdata_219581, ydata_219582], **kwargs_219591)
        
        # Obtaining the member '__getitem__' of a type (line 348)
        getitem___219593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 12), curve_fit_call_result_219592, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 348)
        subscript_call_result_219594 = invoke(stypy.reporting.localization.Localization(__file__, 348, 12), getitem___219593, int_219578)
        
        # Assigning a type to the variable 'tuple_var_assignment_218022' (line 348)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'tuple_var_assignment_218022', subscript_call_result_219594)
        
        # Assigning a Subscript to a Name (line 348):
        
        # Obtaining the type of the subscript
        int_219595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 12), 'int')
        
        # Call to curve_fit(...): (line 348)
        # Processing the call arguments (line 348)
        # Getting the type of 'f' (line 348)
        f_219597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 35), 'f', False)
        # Getting the type of 'xdata' (line 348)
        xdata_219598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 348)
        ydata_219599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 45), 'ydata', False)
        # Processing the call keyword arguments (line 348)
        
        # Obtaining an instance of the builtin type 'list' (line 348)
        list_219600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 348)
        # Adding element type (line 348)
        int_219601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 348, 55), list_219600, int_219601)
        # Adding element type (line 348)
        int_219602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 348, 55), list_219600, int_219602)
        
        keyword_219603 = list_219600
        # Getting the type of 'sigma' (line 348)
        sigma_219604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 69), 'sigma', False)
        keyword_219605 = sigma_219604
        # Getting the type of 'method' (line 349)
        method_219606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 42), 'method', False)
        keyword_219607 = method_219606
        kwargs_219608 = {'p0': keyword_219603, 'sigma': keyword_219605, 'method': keyword_219607}
        # Getting the type of 'curve_fit' (line 348)
        curve_fit_219596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 348)
        curve_fit_call_result_219609 = invoke(stypy.reporting.localization.Localization(__file__, 348, 25), curve_fit_219596, *[f_219597, xdata_219598, ydata_219599], **kwargs_219608)
        
        # Obtaining the member '__getitem__' of a type (line 348)
        getitem___219610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 12), curve_fit_call_result_219609, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 348)
        subscript_call_result_219611 = invoke(stypy.reporting.localization.Localization(__file__, 348, 12), getitem___219610, int_219595)
        
        # Assigning a type to the variable 'tuple_var_assignment_218023' (line 348)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'tuple_var_assignment_218023', subscript_call_result_219611)
        
        # Assigning a Name to a Name (line 348):
        # Getting the type of 'tuple_var_assignment_218022' (line 348)
        tuple_var_assignment_218022_219612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'tuple_var_assignment_218022')
        # Assigning a type to the variable 'popt' (line 348)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'popt', tuple_var_assignment_218022_219612)
        
        # Assigning a Name to a Name (line 348):
        # Getting the type of 'tuple_var_assignment_218023' (line 348)
        tuple_var_assignment_218023_219613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'tuple_var_assignment_218023')
        # Assigning a type to the variable 'pcov' (line 348)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 18), 'pcov', tuple_var_assignment_218023_219613)
        
        # Assigning a Call to a Name (line 350):
        
        # Assigning a Call to a Name (line 350):
        
        # Call to sqrt(...): (line 350)
        # Processing the call arguments (line 350)
        
        # Call to diag(...): (line 350)
        # Processing the call arguments (line 350)
        # Getting the type of 'pcov' (line 350)
        pcov_219618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 42), 'pcov', False)
        # Processing the call keyword arguments (line 350)
        kwargs_219619 = {}
        # Getting the type of 'np' (line 350)
        np_219616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 34), 'np', False)
        # Obtaining the member 'diag' of a type (line 350)
        diag_219617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 34), np_219616, 'diag')
        # Calling diag(args, kwargs) (line 350)
        diag_call_result_219620 = invoke(stypy.reporting.localization.Localization(__file__, 350, 34), diag_219617, *[pcov_219618], **kwargs_219619)
        
        # Processing the call keyword arguments (line 350)
        kwargs_219621 = {}
        # Getting the type of 'np' (line 350)
        np_219614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 26), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 350)
        sqrt_219615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 26), np_219614, 'sqrt')
        # Calling sqrt(args, kwargs) (line 350)
        sqrt_call_result_219622 = invoke(stypy.reporting.localization.Localization(__file__, 350, 26), sqrt_219615, *[diag_call_result_219620], **kwargs_219621)
        
        # Assigning a type to the variable 'perr_scaled' (line 350)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 350, 12), 'perr_scaled', sqrt_call_result_219622)
        
        # Call to assert_allclose(...): (line 351)
        # Processing the call arguments (line 351)
        # Getting the type of 'perr_scaled' (line 351)
        perr_scaled_219624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'perr_scaled', False)
        
        # Obtaining an instance of the builtin type 'list' (line 351)
        list_219625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 351)
        # Adding element type (line 351)
        float_219626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 41), list_219625, float_219626)
        # Adding element type (line 351)
        float_219627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 54), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 351, 41), list_219625, float_219627)
        
        # Processing the call keyword arguments (line 351)
        float_219628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 72), 'float')
        keyword_219629 = float_219628
        kwargs_219630 = {'rtol': keyword_219629}
        # Getting the type of 'assert_allclose' (line 351)
        assert_allclose_219623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 351)
        assert_allclose_call_result_219631 = invoke(stypy.reporting.localization.Localization(__file__, 351, 12), assert_allclose_219623, *[perr_scaled_219624, list_219625], **kwargs_219630)
        
        
        # Assigning a Call to a Tuple (line 353):
        
        # Assigning a Subscript to a Name (line 353):
        
        # Obtaining the type of the subscript
        int_219632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 12), 'int')
        
        # Call to curve_fit(...): (line 353)
        # Processing the call arguments (line 353)
        # Getting the type of 'f' (line 353)
        f_219634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 35), 'f', False)
        # Getting the type of 'xdata' (line 353)
        xdata_219635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 353)
        ydata_219636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 45), 'ydata', False)
        # Processing the call keyword arguments (line 353)
        
        # Obtaining an instance of the builtin type 'list' (line 353)
        list_219637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 353)
        # Adding element type (line 353)
        int_219638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 55), list_219637, int_219638)
        # Adding element type (line 353)
        int_219639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 55), list_219637, int_219639)
        
        keyword_219640 = list_219637
        int_219641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 69), 'int')
        # Getting the type of 'sigma' (line 353)
        sigma_219642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 71), 'sigma', False)
        # Applying the binary operator '*' (line 353)
        result_mul_219643 = python_operator(stypy.reporting.localization.Localization(__file__, 353, 69), '*', int_219641, sigma_219642)
        
        keyword_219644 = result_mul_219643
        # Getting the type of 'method' (line 354)
        method_219645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 42), 'method', False)
        keyword_219646 = method_219645
        kwargs_219647 = {'p0': keyword_219640, 'sigma': keyword_219644, 'method': keyword_219646}
        # Getting the type of 'curve_fit' (line 353)
        curve_fit_219633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 353)
        curve_fit_call_result_219648 = invoke(stypy.reporting.localization.Localization(__file__, 353, 25), curve_fit_219633, *[f_219634, xdata_219635, ydata_219636], **kwargs_219647)
        
        # Obtaining the member '__getitem__' of a type (line 353)
        getitem___219649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 12), curve_fit_call_result_219648, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 353)
        subscript_call_result_219650 = invoke(stypy.reporting.localization.Localization(__file__, 353, 12), getitem___219649, int_219632)
        
        # Assigning a type to the variable 'tuple_var_assignment_218024' (line 353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'tuple_var_assignment_218024', subscript_call_result_219650)
        
        # Assigning a Subscript to a Name (line 353):
        
        # Obtaining the type of the subscript
        int_219651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 12), 'int')
        
        # Call to curve_fit(...): (line 353)
        # Processing the call arguments (line 353)
        # Getting the type of 'f' (line 353)
        f_219653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 35), 'f', False)
        # Getting the type of 'xdata' (line 353)
        xdata_219654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 353)
        ydata_219655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 45), 'ydata', False)
        # Processing the call keyword arguments (line 353)
        
        # Obtaining an instance of the builtin type 'list' (line 353)
        list_219656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 353)
        # Adding element type (line 353)
        int_219657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 55), list_219656, int_219657)
        # Adding element type (line 353)
        int_219658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 55), list_219656, int_219658)
        
        keyword_219659 = list_219656
        int_219660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 69), 'int')
        # Getting the type of 'sigma' (line 353)
        sigma_219661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 71), 'sigma', False)
        # Applying the binary operator '*' (line 353)
        result_mul_219662 = python_operator(stypy.reporting.localization.Localization(__file__, 353, 69), '*', int_219660, sigma_219661)
        
        keyword_219663 = result_mul_219662
        # Getting the type of 'method' (line 354)
        method_219664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 42), 'method', False)
        keyword_219665 = method_219664
        kwargs_219666 = {'p0': keyword_219659, 'sigma': keyword_219663, 'method': keyword_219665}
        # Getting the type of 'curve_fit' (line 353)
        curve_fit_219652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 353)
        curve_fit_call_result_219667 = invoke(stypy.reporting.localization.Localization(__file__, 353, 25), curve_fit_219652, *[f_219653, xdata_219654, ydata_219655], **kwargs_219666)
        
        # Obtaining the member '__getitem__' of a type (line 353)
        getitem___219668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 12), curve_fit_call_result_219667, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 353)
        subscript_call_result_219669 = invoke(stypy.reporting.localization.Localization(__file__, 353, 12), getitem___219668, int_219651)
        
        # Assigning a type to the variable 'tuple_var_assignment_218025' (line 353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'tuple_var_assignment_218025', subscript_call_result_219669)
        
        # Assigning a Name to a Name (line 353):
        # Getting the type of 'tuple_var_assignment_218024' (line 353)
        tuple_var_assignment_218024_219670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'tuple_var_assignment_218024')
        # Assigning a type to the variable 'popt' (line 353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'popt', tuple_var_assignment_218024_219670)
        
        # Assigning a Name to a Name (line 353):
        # Getting the type of 'tuple_var_assignment_218025' (line 353)
        tuple_var_assignment_218025_219671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'tuple_var_assignment_218025')
        # Assigning a type to the variable 'pcov' (line 353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 18), 'pcov', tuple_var_assignment_218025_219671)
        
        # Assigning a Call to a Name (line 355):
        
        # Assigning a Call to a Name (line 355):
        
        # Call to sqrt(...): (line 355)
        # Processing the call arguments (line 355)
        
        # Call to diag(...): (line 355)
        # Processing the call arguments (line 355)
        # Getting the type of 'pcov' (line 355)
        pcov_219676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 42), 'pcov', False)
        # Processing the call keyword arguments (line 355)
        kwargs_219677 = {}
        # Getting the type of 'np' (line 355)
        np_219674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 34), 'np', False)
        # Obtaining the member 'diag' of a type (line 355)
        diag_219675 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 34), np_219674, 'diag')
        # Calling diag(args, kwargs) (line 355)
        diag_call_result_219678 = invoke(stypy.reporting.localization.Localization(__file__, 355, 34), diag_219675, *[pcov_219676], **kwargs_219677)
        
        # Processing the call keyword arguments (line 355)
        kwargs_219679 = {}
        # Getting the type of 'np' (line 355)
        np_219672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 26), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 355)
        sqrt_219673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 26), np_219672, 'sqrt')
        # Calling sqrt(args, kwargs) (line 355)
        sqrt_call_result_219680 = invoke(stypy.reporting.localization.Localization(__file__, 355, 26), sqrt_219673, *[diag_call_result_219678], **kwargs_219679)
        
        # Assigning a type to the variable 'perr_scaled' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'perr_scaled', sqrt_call_result_219680)
        
        # Call to assert_allclose(...): (line 356)
        # Processing the call arguments (line 356)
        # Getting the type of 'perr_scaled' (line 356)
        perr_scaled_219682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 28), 'perr_scaled', False)
        
        # Obtaining an instance of the builtin type 'list' (line 356)
        list_219683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 356)
        # Adding element type (line 356)
        float_219684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 356, 41), list_219683, float_219684)
        # Adding element type (line 356)
        float_219685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 54), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 356, 41), list_219683, float_219685)
        
        # Processing the call keyword arguments (line 356)
        float_219686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 72), 'float')
        keyword_219687 = float_219686
        kwargs_219688 = {'rtol': keyword_219687}
        # Getting the type of 'assert_allclose' (line 356)
        assert_allclose_219681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 356)
        assert_allclose_call_result_219689 = invoke(stypy.reporting.localization.Localization(__file__, 356, 12), assert_allclose_219681, *[perr_scaled_219682, list_219683], **kwargs_219688)
        
        
        # Assigning a Call to a Tuple (line 358):
        
        # Assigning a Subscript to a Name (line 358):
        
        # Obtaining the type of the subscript
        int_219690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 12), 'int')
        
        # Call to curve_fit(...): (line 358)
        # Processing the call arguments (line 358)
        # Getting the type of 'f' (line 358)
        f_219692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 35), 'f', False)
        # Getting the type of 'xdata' (line 358)
        xdata_219693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 358)
        ydata_219694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 45), 'ydata', False)
        # Processing the call keyword arguments (line 358)
        
        # Obtaining an instance of the builtin type 'list' (line 358)
        list_219695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 358)
        # Adding element type (line 358)
        int_219696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 55), list_219695, int_219696)
        # Adding element type (line 358)
        int_219697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 55), list_219695, int_219697)
        
        keyword_219698 = list_219695
        # Getting the type of 'sigma' (line 358)
        sigma_219699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 69), 'sigma', False)
        keyword_219700 = sigma_219699
        # Getting the type of 'True' (line 359)
        True_219701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 50), 'True', False)
        keyword_219702 = True_219701
        # Getting the type of 'method' (line 359)
        method_219703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 63), 'method', False)
        keyword_219704 = method_219703
        kwargs_219705 = {'absolute_sigma': keyword_219702, 'p0': keyword_219698, 'sigma': keyword_219700, 'method': keyword_219704}
        # Getting the type of 'curve_fit' (line 358)
        curve_fit_219691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 358)
        curve_fit_call_result_219706 = invoke(stypy.reporting.localization.Localization(__file__, 358, 25), curve_fit_219691, *[f_219692, xdata_219693, ydata_219694], **kwargs_219705)
        
        # Obtaining the member '__getitem__' of a type (line 358)
        getitem___219707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 12), curve_fit_call_result_219706, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 358)
        subscript_call_result_219708 = invoke(stypy.reporting.localization.Localization(__file__, 358, 12), getitem___219707, int_219690)
        
        # Assigning a type to the variable 'tuple_var_assignment_218026' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'tuple_var_assignment_218026', subscript_call_result_219708)
        
        # Assigning a Subscript to a Name (line 358):
        
        # Obtaining the type of the subscript
        int_219709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 12), 'int')
        
        # Call to curve_fit(...): (line 358)
        # Processing the call arguments (line 358)
        # Getting the type of 'f' (line 358)
        f_219711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 35), 'f', False)
        # Getting the type of 'xdata' (line 358)
        xdata_219712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 358)
        ydata_219713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 45), 'ydata', False)
        # Processing the call keyword arguments (line 358)
        
        # Obtaining an instance of the builtin type 'list' (line 358)
        list_219714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 358)
        # Adding element type (line 358)
        int_219715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 55), list_219714, int_219715)
        # Adding element type (line 358)
        int_219716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 55), list_219714, int_219716)
        
        keyword_219717 = list_219714
        # Getting the type of 'sigma' (line 358)
        sigma_219718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 69), 'sigma', False)
        keyword_219719 = sigma_219718
        # Getting the type of 'True' (line 359)
        True_219720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 50), 'True', False)
        keyword_219721 = True_219720
        # Getting the type of 'method' (line 359)
        method_219722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 63), 'method', False)
        keyword_219723 = method_219722
        kwargs_219724 = {'absolute_sigma': keyword_219721, 'p0': keyword_219717, 'sigma': keyword_219719, 'method': keyword_219723}
        # Getting the type of 'curve_fit' (line 358)
        curve_fit_219710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 358)
        curve_fit_call_result_219725 = invoke(stypy.reporting.localization.Localization(__file__, 358, 25), curve_fit_219710, *[f_219711, xdata_219712, ydata_219713], **kwargs_219724)
        
        # Obtaining the member '__getitem__' of a type (line 358)
        getitem___219726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 12), curve_fit_call_result_219725, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 358)
        subscript_call_result_219727 = invoke(stypy.reporting.localization.Localization(__file__, 358, 12), getitem___219726, int_219709)
        
        # Assigning a type to the variable 'tuple_var_assignment_218027' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'tuple_var_assignment_218027', subscript_call_result_219727)
        
        # Assigning a Name to a Name (line 358):
        # Getting the type of 'tuple_var_assignment_218026' (line 358)
        tuple_var_assignment_218026_219728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'tuple_var_assignment_218026')
        # Assigning a type to the variable 'popt' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'popt', tuple_var_assignment_218026_219728)
        
        # Assigning a Name to a Name (line 358):
        # Getting the type of 'tuple_var_assignment_218027' (line 358)
        tuple_var_assignment_218027_219729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'tuple_var_assignment_218027')
        # Assigning a type to the variable 'pcov' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 18), 'pcov', tuple_var_assignment_218027_219729)
        
        # Assigning a Call to a Name (line 360):
        
        # Assigning a Call to a Name (line 360):
        
        # Call to sqrt(...): (line 360)
        # Processing the call arguments (line 360)
        
        # Call to diag(...): (line 360)
        # Processing the call arguments (line 360)
        # Getting the type of 'pcov' (line 360)
        pcov_219734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 35), 'pcov', False)
        # Processing the call keyword arguments (line 360)
        kwargs_219735 = {}
        # Getting the type of 'np' (line 360)
        np_219732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 27), 'np', False)
        # Obtaining the member 'diag' of a type (line 360)
        diag_219733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 27), np_219732, 'diag')
        # Calling diag(args, kwargs) (line 360)
        diag_call_result_219736 = invoke(stypy.reporting.localization.Localization(__file__, 360, 27), diag_219733, *[pcov_219734], **kwargs_219735)
        
        # Processing the call keyword arguments (line 360)
        kwargs_219737 = {}
        # Getting the type of 'np' (line 360)
        np_219730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 19), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 360)
        sqrt_219731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 19), np_219730, 'sqrt')
        # Calling sqrt(args, kwargs) (line 360)
        sqrt_call_result_219738 = invoke(stypy.reporting.localization.Localization(__file__, 360, 19), sqrt_219731, *[diag_call_result_219736], **kwargs_219737)
        
        # Assigning a type to the variable 'perr' (line 360)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 12), 'perr', sqrt_call_result_219738)
        
        # Call to assert_allclose(...): (line 361)
        # Processing the call arguments (line 361)
        # Getting the type of 'perr' (line 361)
        perr_219740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 28), 'perr', False)
        
        # Obtaining an instance of the builtin type 'list' (line 361)
        list_219741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 361)
        # Adding element type (line 361)
        float_219742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 35), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 361, 34), list_219741, float_219742)
        # Adding element type (line 361)
        float_219743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 47), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 361, 34), list_219741, float_219743)
        
        # Processing the call keyword arguments (line 361)
        float_219744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 65), 'float')
        keyword_219745 = float_219744
        kwargs_219746 = {'rtol': keyword_219745}
        # Getting the type of 'assert_allclose' (line 361)
        assert_allclose_219739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 361)
        assert_allclose_call_result_219747 = invoke(stypy.reporting.localization.Localization(__file__, 361, 12), assert_allclose_219739, *[perr_219740, list_219741], **kwargs_219746)
        
        
        # Assigning a Call to a Tuple (line 363):
        
        # Assigning a Subscript to a Name (line 363):
        
        # Obtaining the type of the subscript
        int_219748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 12), 'int')
        
        # Call to curve_fit(...): (line 363)
        # Processing the call arguments (line 363)
        # Getting the type of 'f' (line 363)
        f_219750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 35), 'f', False)
        # Getting the type of 'xdata' (line 363)
        xdata_219751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 363)
        ydata_219752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 45), 'ydata', False)
        # Processing the call keyword arguments (line 363)
        
        # Obtaining an instance of the builtin type 'list' (line 363)
        list_219753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 363)
        # Adding element type (line 363)
        int_219754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 55), list_219753, int_219754)
        # Adding element type (line 363)
        int_219755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 55), list_219753, int_219755)
        
        keyword_219756 = list_219753
        int_219757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 69), 'int')
        # Getting the type of 'sigma' (line 363)
        sigma_219758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 71), 'sigma', False)
        # Applying the binary operator '*' (line 363)
        result_mul_219759 = python_operator(stypy.reporting.localization.Localization(__file__, 363, 69), '*', int_219757, sigma_219758)
        
        keyword_219760 = result_mul_219759
        # Getting the type of 'True' (line 364)
        True_219761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 50), 'True', False)
        keyword_219762 = True_219761
        # Getting the type of 'method' (line 364)
        method_219763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 63), 'method', False)
        keyword_219764 = method_219763
        kwargs_219765 = {'absolute_sigma': keyword_219762, 'p0': keyword_219756, 'sigma': keyword_219760, 'method': keyword_219764}
        # Getting the type of 'curve_fit' (line 363)
        curve_fit_219749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 363)
        curve_fit_call_result_219766 = invoke(stypy.reporting.localization.Localization(__file__, 363, 25), curve_fit_219749, *[f_219750, xdata_219751, ydata_219752], **kwargs_219765)
        
        # Obtaining the member '__getitem__' of a type (line 363)
        getitem___219767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 12), curve_fit_call_result_219766, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 363)
        subscript_call_result_219768 = invoke(stypy.reporting.localization.Localization(__file__, 363, 12), getitem___219767, int_219748)
        
        # Assigning a type to the variable 'tuple_var_assignment_218028' (line 363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 12), 'tuple_var_assignment_218028', subscript_call_result_219768)
        
        # Assigning a Subscript to a Name (line 363):
        
        # Obtaining the type of the subscript
        int_219769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 12), 'int')
        
        # Call to curve_fit(...): (line 363)
        # Processing the call arguments (line 363)
        # Getting the type of 'f' (line 363)
        f_219771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 35), 'f', False)
        # Getting the type of 'xdata' (line 363)
        xdata_219772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 363)
        ydata_219773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 45), 'ydata', False)
        # Processing the call keyword arguments (line 363)
        
        # Obtaining an instance of the builtin type 'list' (line 363)
        list_219774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 363)
        # Adding element type (line 363)
        int_219775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 55), list_219774, int_219775)
        # Adding element type (line 363)
        int_219776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 55), list_219774, int_219776)
        
        keyword_219777 = list_219774
        int_219778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 69), 'int')
        # Getting the type of 'sigma' (line 363)
        sigma_219779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 71), 'sigma', False)
        # Applying the binary operator '*' (line 363)
        result_mul_219780 = python_operator(stypy.reporting.localization.Localization(__file__, 363, 69), '*', int_219778, sigma_219779)
        
        keyword_219781 = result_mul_219780
        # Getting the type of 'True' (line 364)
        True_219782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 50), 'True', False)
        keyword_219783 = True_219782
        # Getting the type of 'method' (line 364)
        method_219784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 63), 'method', False)
        keyword_219785 = method_219784
        kwargs_219786 = {'absolute_sigma': keyword_219783, 'p0': keyword_219777, 'sigma': keyword_219781, 'method': keyword_219785}
        # Getting the type of 'curve_fit' (line 363)
        curve_fit_219770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 363)
        curve_fit_call_result_219787 = invoke(stypy.reporting.localization.Localization(__file__, 363, 25), curve_fit_219770, *[f_219771, xdata_219772, ydata_219773], **kwargs_219786)
        
        # Obtaining the member '__getitem__' of a type (line 363)
        getitem___219788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 12), curve_fit_call_result_219787, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 363)
        subscript_call_result_219789 = invoke(stypy.reporting.localization.Localization(__file__, 363, 12), getitem___219788, int_219769)
        
        # Assigning a type to the variable 'tuple_var_assignment_218029' (line 363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 12), 'tuple_var_assignment_218029', subscript_call_result_219789)
        
        # Assigning a Name to a Name (line 363):
        # Getting the type of 'tuple_var_assignment_218028' (line 363)
        tuple_var_assignment_218028_219790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 12), 'tuple_var_assignment_218028')
        # Assigning a type to the variable 'popt' (line 363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 12), 'popt', tuple_var_assignment_218028_219790)
        
        # Assigning a Name to a Name (line 363):
        # Getting the type of 'tuple_var_assignment_218029' (line 363)
        tuple_var_assignment_218029_219791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 12), 'tuple_var_assignment_218029')
        # Assigning a type to the variable 'pcov' (line 363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 18), 'pcov', tuple_var_assignment_218029_219791)
        
        # Assigning a Call to a Name (line 365):
        
        # Assigning a Call to a Name (line 365):
        
        # Call to sqrt(...): (line 365)
        # Processing the call arguments (line 365)
        
        # Call to diag(...): (line 365)
        # Processing the call arguments (line 365)
        # Getting the type of 'pcov' (line 365)
        pcov_219796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 35), 'pcov', False)
        # Processing the call keyword arguments (line 365)
        kwargs_219797 = {}
        # Getting the type of 'np' (line 365)
        np_219794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 27), 'np', False)
        # Obtaining the member 'diag' of a type (line 365)
        diag_219795 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 27), np_219794, 'diag')
        # Calling diag(args, kwargs) (line 365)
        diag_call_result_219798 = invoke(stypy.reporting.localization.Localization(__file__, 365, 27), diag_219795, *[pcov_219796], **kwargs_219797)
        
        # Processing the call keyword arguments (line 365)
        kwargs_219799 = {}
        # Getting the type of 'np' (line 365)
        np_219792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 19), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 365)
        sqrt_219793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 365, 19), np_219792, 'sqrt')
        # Calling sqrt(args, kwargs) (line 365)
        sqrt_call_result_219800 = invoke(stypy.reporting.localization.Localization(__file__, 365, 19), sqrt_219793, *[diag_call_result_219798], **kwargs_219799)
        
        # Assigning a type to the variable 'perr' (line 365)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 365, 12), 'perr', sqrt_call_result_219800)
        
        # Call to assert_allclose(...): (line 366)
        # Processing the call arguments (line 366)
        # Getting the type of 'perr' (line 366)
        perr_219802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 28), 'perr', False)
        
        # Obtaining an instance of the builtin type 'list' (line 366)
        list_219803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 366)
        # Adding element type (line 366)
        int_219804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 35), 'int')
        float_219805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 37), 'float')
        # Applying the binary operator '*' (line 366)
        result_mul_219806 = python_operator(stypy.reporting.localization.Localization(__file__, 366, 35), '*', int_219804, float_219805)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 366, 34), list_219803, result_mul_219806)
        # Adding element type (line 366)
        int_219807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 49), 'int')
        float_219808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 51), 'float')
        # Applying the binary operator '*' (line 366)
        result_mul_219809 = python_operator(stypy.reporting.localization.Localization(__file__, 366, 49), '*', int_219807, float_219808)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 366, 34), list_219803, result_mul_219809)
        
        # Processing the call keyword arguments (line 366)
        float_219810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 69), 'float')
        keyword_219811 = float_219810
        kwargs_219812 = {'rtol': keyword_219811}
        # Getting the type of 'assert_allclose' (line 366)
        assert_allclose_219801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 366)
        assert_allclose_call_result_219813 = invoke(stypy.reporting.localization.Localization(__file__, 366, 12), assert_allclose_219801, *[perr_219802, list_219803], **kwargs_219812)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        

        @norecursion
        def f_flat(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'f_flat'
            module_type_store = module_type_store.open_function_context('f_flat', 370, 8, False)
            
            # Passed parameters checking function
            f_flat.stypy_localization = localization
            f_flat.stypy_type_of_self = None
            f_flat.stypy_type_store = module_type_store
            f_flat.stypy_function_name = 'f_flat'
            f_flat.stypy_param_names_list = ['x', 'a', 'b']
            f_flat.stypy_varargs_param_name = None
            f_flat.stypy_kwargs_param_name = None
            f_flat.stypy_call_defaults = defaults
            f_flat.stypy_call_varargs = varargs
            f_flat.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'f_flat', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'f_flat', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'f_flat(...)' code ##################

            # Getting the type of 'a' (line 371)
            a_219814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 19), 'a')
            # Getting the type of 'x' (line 371)
            x_219815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 21), 'x')
            # Applying the binary operator '*' (line 371)
            result_mul_219816 = python_operator(stypy.reporting.localization.Localization(__file__, 371, 19), '*', a_219814, x_219815)
            
            # Assigning a type to the variable 'stypy_return_type' (line 371)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 371, 12), 'stypy_return_type', result_mul_219816)
            
            # ################# End of 'f_flat(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'f_flat' in the type store
            # Getting the type of 'stypy_return_type' (line 370)
            stypy_return_type_219817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_219817)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'f_flat'
            return stypy_return_type_219817

        # Assigning a type to the variable 'f_flat' (line 370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 8), 'f_flat', f_flat)
        
        # Assigning a Call to a Name (line 373):
        
        # Assigning a Call to a Name (line 373):
        
        # Call to reshape(...): (line 373)
        # Processing the call arguments (line 373)
        int_219828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 53), 'int')
        int_219829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 56), 'int')
        # Processing the call keyword arguments (line 373)
        kwargs_219830 = {}
        
        # Call to array(...): (line 373)
        # Processing the call arguments (line 373)
        
        # Obtaining an instance of the builtin type 'list' (line 373)
        list_219820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 373)
        # Adding element type (line 373)
        # Getting the type of 'np' (line 373)
        np_219821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 34), 'np', False)
        # Obtaining the member 'inf' of a type (line 373)
        inf_219822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 34), np_219821, 'inf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 373, 33), list_219820, inf_219822)
        
        int_219823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 42), 'int')
        # Applying the binary operator '*' (line 373)
        result_mul_219824 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 33), '*', list_219820, int_219823)
        
        # Processing the call keyword arguments (line 373)
        kwargs_219825 = {}
        # Getting the type of 'np' (line 373)
        np_219818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 24), 'np', False)
        # Obtaining the member 'array' of a type (line 373)
        array_219819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 24), np_219818, 'array')
        # Calling array(args, kwargs) (line 373)
        array_call_result_219826 = invoke(stypy.reporting.localization.Localization(__file__, 373, 24), array_219819, *[result_mul_219824], **kwargs_219825)
        
        # Obtaining the member 'reshape' of a type (line 373)
        reshape_219827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 24), array_call_result_219826, 'reshape')
        # Calling reshape(args, kwargs) (line 373)
        reshape_call_result_219831 = invoke(stypy.reporting.localization.Localization(__file__, 373, 24), reshape_219827, *[int_219828, int_219829], **kwargs_219830)
        
        # Assigning a type to the variable 'pcov_expected' (line 373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'pcov_expected', reshape_call_result_219831)
        
        # Call to suppress_warnings(...): (line 375)
        # Processing the call keyword arguments (line 375)
        kwargs_219833 = {}
        # Getting the type of 'suppress_warnings' (line 375)
        suppress_warnings_219832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 13), 'suppress_warnings', False)
        # Calling suppress_warnings(args, kwargs) (line 375)
        suppress_warnings_call_result_219834 = invoke(stypy.reporting.localization.Localization(__file__, 375, 13), suppress_warnings_219832, *[], **kwargs_219833)
        
        with_219835 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 375, 13), suppress_warnings_call_result_219834, 'with parameter', '__enter__', '__exit__')

        if with_219835:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 375)
            enter___219836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 13), suppress_warnings_call_result_219834, '__enter__')
            with_enter_219837 = invoke(stypy.reporting.localization.Localization(__file__, 375, 13), enter___219836)
            # Assigning a type to the variable 'sup' (line 375)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 13), 'sup', with_enter_219837)
            
            # Call to filter(...): (line 376)
            # Processing the call arguments (line 376)
            # Getting the type of 'OptimizeWarning' (line 376)
            OptimizeWarning_219840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 23), 'OptimizeWarning', False)
            str_219841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 23), 'str', 'Covariance of the parameters could not be estimated')
            # Processing the call keyword arguments (line 376)
            kwargs_219842 = {}
            # Getting the type of 'sup' (line 376)
            sup_219838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'sup', False)
            # Obtaining the member 'filter' of a type (line 376)
            filter_219839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 12), sup_219838, 'filter')
            # Calling filter(args, kwargs) (line 376)
            filter_call_result_219843 = invoke(stypy.reporting.localization.Localization(__file__, 376, 12), filter_219839, *[OptimizeWarning_219840, str_219841], **kwargs_219842)
            
            
            # Assigning a Call to a Tuple (line 378):
            
            # Assigning a Subscript to a Name (line 378):
            
            # Obtaining the type of the subscript
            int_219844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 12), 'int')
            
            # Call to curve_fit(...): (line 378)
            # Processing the call arguments (line 378)
            # Getting the type of 'f_flat' (line 378)
            f_flat_219846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 35), 'f_flat', False)
            # Getting the type of 'xdata' (line 378)
            xdata_219847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 43), 'xdata', False)
            # Getting the type of 'ydata' (line 378)
            ydata_219848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 50), 'ydata', False)
            # Processing the call keyword arguments (line 378)
            
            # Obtaining an instance of the builtin type 'list' (line 378)
            list_219849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 60), 'list')
            # Adding type elements to the builtin type 'list' instance (line 378)
            # Adding element type (line 378)
            int_219850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 61), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 60), list_219849, int_219850)
            # Adding element type (line 378)
            int_219851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 64), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 60), list_219849, int_219851)
            
            keyword_219852 = list_219849
            # Getting the type of 'sigma' (line 378)
            sigma_219853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 74), 'sigma', False)
            keyword_219854 = sigma_219853
            kwargs_219855 = {'p0': keyword_219852, 'sigma': keyword_219854}
            # Getting the type of 'curve_fit' (line 378)
            curve_fit_219845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 25), 'curve_fit', False)
            # Calling curve_fit(args, kwargs) (line 378)
            curve_fit_call_result_219856 = invoke(stypy.reporting.localization.Localization(__file__, 378, 25), curve_fit_219845, *[f_flat_219846, xdata_219847, ydata_219848], **kwargs_219855)
            
            # Obtaining the member '__getitem__' of a type (line 378)
            getitem___219857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 12), curve_fit_call_result_219856, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 378)
            subscript_call_result_219858 = invoke(stypy.reporting.localization.Localization(__file__, 378, 12), getitem___219857, int_219844)
            
            # Assigning a type to the variable 'tuple_var_assignment_218030' (line 378)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'tuple_var_assignment_218030', subscript_call_result_219858)
            
            # Assigning a Subscript to a Name (line 378):
            
            # Obtaining the type of the subscript
            int_219859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 12), 'int')
            
            # Call to curve_fit(...): (line 378)
            # Processing the call arguments (line 378)
            # Getting the type of 'f_flat' (line 378)
            f_flat_219861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 35), 'f_flat', False)
            # Getting the type of 'xdata' (line 378)
            xdata_219862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 43), 'xdata', False)
            # Getting the type of 'ydata' (line 378)
            ydata_219863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 50), 'ydata', False)
            # Processing the call keyword arguments (line 378)
            
            # Obtaining an instance of the builtin type 'list' (line 378)
            list_219864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 60), 'list')
            # Adding type elements to the builtin type 'list' instance (line 378)
            # Adding element type (line 378)
            int_219865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 61), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 60), list_219864, int_219865)
            # Adding element type (line 378)
            int_219866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 64), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 60), list_219864, int_219866)
            
            keyword_219867 = list_219864
            # Getting the type of 'sigma' (line 378)
            sigma_219868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 74), 'sigma', False)
            keyword_219869 = sigma_219868
            kwargs_219870 = {'p0': keyword_219867, 'sigma': keyword_219869}
            # Getting the type of 'curve_fit' (line 378)
            curve_fit_219860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 25), 'curve_fit', False)
            # Calling curve_fit(args, kwargs) (line 378)
            curve_fit_call_result_219871 = invoke(stypy.reporting.localization.Localization(__file__, 378, 25), curve_fit_219860, *[f_flat_219861, xdata_219862, ydata_219863], **kwargs_219870)
            
            # Obtaining the member '__getitem__' of a type (line 378)
            getitem___219872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 12), curve_fit_call_result_219871, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 378)
            subscript_call_result_219873 = invoke(stypy.reporting.localization.Localization(__file__, 378, 12), getitem___219872, int_219859)
            
            # Assigning a type to the variable 'tuple_var_assignment_218031' (line 378)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'tuple_var_assignment_218031', subscript_call_result_219873)
            
            # Assigning a Name to a Name (line 378):
            # Getting the type of 'tuple_var_assignment_218030' (line 378)
            tuple_var_assignment_218030_219874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'tuple_var_assignment_218030')
            # Assigning a type to the variable 'popt' (line 378)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'popt', tuple_var_assignment_218030_219874)
            
            # Assigning a Name to a Name (line 378):
            # Getting the type of 'tuple_var_assignment_218031' (line 378)
            tuple_var_assignment_218031_219875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'tuple_var_assignment_218031')
            # Assigning a type to the variable 'pcov' (line 378)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 18), 'pcov', tuple_var_assignment_218031_219875)
            
            # Assigning a Call to a Tuple (line 379):
            
            # Assigning a Subscript to a Name (line 379):
            
            # Obtaining the type of the subscript
            int_219876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 12), 'int')
            
            # Call to curve_fit(...): (line 379)
            # Processing the call arguments (line 379)
            # Getting the type of 'f' (line 379)
            f_219878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 37), 'f', False)
            
            # Obtaining the type of the subscript
            int_219879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 47), 'int')
            slice_219880 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 379, 40), None, int_219879, None)
            # Getting the type of 'xdata' (line 379)
            xdata_219881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 40), 'xdata', False)
            # Obtaining the member '__getitem__' of a type (line 379)
            getitem___219882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 40), xdata_219881, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 379)
            subscript_call_result_219883 = invoke(stypy.reporting.localization.Localization(__file__, 379, 40), getitem___219882, slice_219880)
            
            
            # Obtaining the type of the subscript
            int_219884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 58), 'int')
            slice_219885 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 379, 51), None, int_219884, None)
            # Getting the type of 'ydata' (line 379)
            ydata_219886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 51), 'ydata', False)
            # Obtaining the member '__getitem__' of a type (line 379)
            getitem___219887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 51), ydata_219886, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 379)
            subscript_call_result_219888 = invoke(stypy.reporting.localization.Localization(__file__, 379, 51), getitem___219887, slice_219885)
            
            # Processing the call keyword arguments (line 379)
            
            # Obtaining an instance of the builtin type 'list' (line 379)
            list_219889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 65), 'list')
            # Adding type elements to the builtin type 'list' instance (line 379)
            # Adding element type (line 379)
            int_219890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 66), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 379, 65), list_219889, int_219890)
            # Adding element type (line 379)
            int_219891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 69), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 379, 65), list_219889, int_219891)
            
            keyword_219892 = list_219889
            kwargs_219893 = {'p0': keyword_219892}
            # Getting the type of 'curve_fit' (line 379)
            curve_fit_219877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 27), 'curve_fit', False)
            # Calling curve_fit(args, kwargs) (line 379)
            curve_fit_call_result_219894 = invoke(stypy.reporting.localization.Localization(__file__, 379, 27), curve_fit_219877, *[f_219878, subscript_call_result_219883, subscript_call_result_219888], **kwargs_219893)
            
            # Obtaining the member '__getitem__' of a type (line 379)
            getitem___219895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 12), curve_fit_call_result_219894, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 379)
            subscript_call_result_219896 = invoke(stypy.reporting.localization.Localization(__file__, 379, 12), getitem___219895, int_219876)
            
            # Assigning a type to the variable 'tuple_var_assignment_218032' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'tuple_var_assignment_218032', subscript_call_result_219896)
            
            # Assigning a Subscript to a Name (line 379):
            
            # Obtaining the type of the subscript
            int_219897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 12), 'int')
            
            # Call to curve_fit(...): (line 379)
            # Processing the call arguments (line 379)
            # Getting the type of 'f' (line 379)
            f_219899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 37), 'f', False)
            
            # Obtaining the type of the subscript
            int_219900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 47), 'int')
            slice_219901 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 379, 40), None, int_219900, None)
            # Getting the type of 'xdata' (line 379)
            xdata_219902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 40), 'xdata', False)
            # Obtaining the member '__getitem__' of a type (line 379)
            getitem___219903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 40), xdata_219902, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 379)
            subscript_call_result_219904 = invoke(stypy.reporting.localization.Localization(__file__, 379, 40), getitem___219903, slice_219901)
            
            
            # Obtaining the type of the subscript
            int_219905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 58), 'int')
            slice_219906 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 379, 51), None, int_219905, None)
            # Getting the type of 'ydata' (line 379)
            ydata_219907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 51), 'ydata', False)
            # Obtaining the member '__getitem__' of a type (line 379)
            getitem___219908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 51), ydata_219907, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 379)
            subscript_call_result_219909 = invoke(stypy.reporting.localization.Localization(__file__, 379, 51), getitem___219908, slice_219906)
            
            # Processing the call keyword arguments (line 379)
            
            # Obtaining an instance of the builtin type 'list' (line 379)
            list_219910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 65), 'list')
            # Adding type elements to the builtin type 'list' instance (line 379)
            # Adding element type (line 379)
            int_219911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 66), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 379, 65), list_219910, int_219911)
            # Adding element type (line 379)
            int_219912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 69), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 379, 65), list_219910, int_219912)
            
            keyword_219913 = list_219910
            kwargs_219914 = {'p0': keyword_219913}
            # Getting the type of 'curve_fit' (line 379)
            curve_fit_219898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 27), 'curve_fit', False)
            # Calling curve_fit(args, kwargs) (line 379)
            curve_fit_call_result_219915 = invoke(stypy.reporting.localization.Localization(__file__, 379, 27), curve_fit_219898, *[f_219899, subscript_call_result_219904, subscript_call_result_219909], **kwargs_219914)
            
            # Obtaining the member '__getitem__' of a type (line 379)
            getitem___219916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 12), curve_fit_call_result_219915, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 379)
            subscript_call_result_219917 = invoke(stypy.reporting.localization.Localization(__file__, 379, 12), getitem___219916, int_219897)
            
            # Assigning a type to the variable 'tuple_var_assignment_218033' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'tuple_var_assignment_218033', subscript_call_result_219917)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'tuple_var_assignment_218032' (line 379)
            tuple_var_assignment_218032_219918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'tuple_var_assignment_218032')
            # Assigning a type to the variable 'popt1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'popt1', tuple_var_assignment_218032_219918)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'tuple_var_assignment_218033' (line 379)
            tuple_var_assignment_218033_219919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'tuple_var_assignment_218033')
            # Assigning a type to the variable 'pcov1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 19), 'pcov1', tuple_var_assignment_218033_219919)
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 375)
            exit___219920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 13), suppress_warnings_call_result_219834, '__exit__')
            with_exit_219921 = invoke(stypy.reporting.localization.Localization(__file__, 375, 13), exit___219920, None, None, None)

        
        # Call to assert_(...): (line 381)
        # Processing the call arguments (line 381)
        
        # Getting the type of 'pcov' (line 381)
        pcov_219923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 16), 'pcov', False)
        # Obtaining the member 'shape' of a type (line 381)
        shape_219924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 16), pcov_219923, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 381)
        tuple_219925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 381)
        # Adding element type (line 381)
        int_219926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 381, 31), tuple_219925, int_219926)
        # Adding element type (line 381)
        int_219927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 381, 31), tuple_219925, int_219927)
        
        # Applying the binary operator '==' (line 381)
        result_eq_219928 = python_operator(stypy.reporting.localization.Localization(__file__, 381, 16), '==', shape_219924, tuple_219925)
        
        # Processing the call keyword arguments (line 381)
        kwargs_219929 = {}
        # Getting the type of 'assert_' (line 381)
        assert__219922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 381)
        assert__call_result_219930 = invoke(stypy.reporting.localization.Localization(__file__, 381, 8), assert__219922, *[result_eq_219928], **kwargs_219929)
        
        
        # Call to assert_array_equal(...): (line 382)
        # Processing the call arguments (line 382)
        # Getting the type of 'pcov' (line 382)
        pcov_219932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 27), 'pcov', False)
        # Getting the type of 'pcov_expected' (line 382)
        pcov_expected_219933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 33), 'pcov_expected', False)
        # Processing the call keyword arguments (line 382)
        kwargs_219934 = {}
        # Getting the type of 'assert_array_equal' (line 382)
        assert_array_equal_219931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 382)
        assert_array_equal_call_result_219935 = invoke(stypy.reporting.localization.Localization(__file__, 382, 8), assert_array_equal_219931, *[pcov_219932, pcov_expected_219933], **kwargs_219934)
        
        
        # Call to assert_(...): (line 384)
        # Processing the call arguments (line 384)
        
        # Getting the type of 'pcov1' (line 384)
        pcov1_219937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 16), 'pcov1', False)
        # Obtaining the member 'shape' of a type (line 384)
        shape_219938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 16), pcov1_219937, 'shape')
        
        # Obtaining an instance of the builtin type 'tuple' (line 384)
        tuple_219939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 384)
        # Adding element type (line 384)
        int_219940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 32), tuple_219939, int_219940)
        # Adding element type (line 384)
        int_219941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 384, 32), tuple_219939, int_219941)
        
        # Applying the binary operator '==' (line 384)
        result_eq_219942 = python_operator(stypy.reporting.localization.Localization(__file__, 384, 16), '==', shape_219938, tuple_219939)
        
        # Processing the call keyword arguments (line 384)
        kwargs_219943 = {}
        # Getting the type of 'assert_' (line 384)
        assert__219936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 384)
        assert__call_result_219944 = invoke(stypy.reporting.localization.Localization(__file__, 384, 8), assert__219936, *[result_eq_219942], **kwargs_219943)
        
        
        # Call to assert_array_equal(...): (line 385)
        # Processing the call arguments (line 385)
        # Getting the type of 'pcov1' (line 385)
        pcov1_219946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 27), 'pcov1', False)
        # Getting the type of 'pcov_expected' (line 385)
        pcov_expected_219947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 34), 'pcov_expected', False)
        # Processing the call keyword arguments (line 385)
        kwargs_219948 = {}
        # Getting the type of 'assert_array_equal' (line 385)
        assert_array_equal_219945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 8), 'assert_array_equal', False)
        # Calling assert_array_equal(args, kwargs) (line 385)
        assert_array_equal_call_result_219949 = invoke(stypy.reporting.localization.Localization(__file__, 385, 8), assert_array_equal_219945, *[pcov1_219946, pcov_expected_219947], **kwargs_219948)
        
        
        # ################# End of 'test_pcov(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_pcov' in the type store
        # Getting the type of 'stypy_return_type' (line 339)
        stypy_return_type_219950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_219950)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_pcov'
        return stypy_return_type_219950


    @norecursion
    def test_array_like(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_array_like'
        module_type_store = module_type_store.open_function_context('test_array_like', 387, 4, False)
        # Assigning a type to the variable 'self' (line 388)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 388, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_array_like')
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_array_like.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_array_like', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_array_like', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_array_like(...)' code ##################


        @norecursion
        def f_linear(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'f_linear'
            module_type_store = module_type_store.open_function_context('f_linear', 389, 8, False)
            
            # Passed parameters checking function
            f_linear.stypy_localization = localization
            f_linear.stypy_type_of_self = None
            f_linear.stypy_type_store = module_type_store
            f_linear.stypy_function_name = 'f_linear'
            f_linear.stypy_param_names_list = ['x', 'a', 'b']
            f_linear.stypy_varargs_param_name = None
            f_linear.stypy_kwargs_param_name = None
            f_linear.stypy_call_defaults = defaults
            f_linear.stypy_call_varargs = varargs
            f_linear.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'f_linear', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'f_linear', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'f_linear(...)' code ##################

            # Getting the type of 'a' (line 390)
            a_219951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 19), 'a')
            # Getting the type of 'x' (line 390)
            x_219952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 21), 'x')
            # Applying the binary operator '*' (line 390)
            result_mul_219953 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 19), '*', a_219951, x_219952)
            
            # Getting the type of 'b' (line 390)
            b_219954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 25), 'b')
            # Applying the binary operator '+' (line 390)
            result_add_219955 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 19), '+', result_mul_219953, b_219954)
            
            # Assigning a type to the variable 'stypy_return_type' (line 390)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 12), 'stypy_return_type', result_add_219955)
            
            # ################# End of 'f_linear(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'f_linear' in the type store
            # Getting the type of 'stypy_return_type' (line 389)
            stypy_return_type_219956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_219956)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'f_linear'
            return stypy_return_type_219956

        # Assigning a type to the variable 'f_linear' (line 389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 8), 'f_linear', f_linear)
        
        # Assigning a List to a Name (line 392):
        
        # Assigning a List to a Name (line 392):
        
        # Obtaining an instance of the builtin type 'list' (line 392)
        list_219957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 392)
        # Adding element type (line 392)
        int_219958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 12), list_219957, int_219958)
        # Adding element type (line 392)
        int_219959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 12), list_219957, int_219959)
        # Adding element type (line 392)
        int_219960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 12), list_219957, int_219960)
        # Adding element type (line 392)
        int_219961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 12), list_219957, int_219961)
        
        # Assigning a type to the variable 'x' (line 392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), 'x', list_219957)
        
        # Assigning a List to a Name (line 393):
        
        # Assigning a List to a Name (line 393):
        
        # Obtaining an instance of the builtin type 'list' (line 393)
        list_219962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 393)
        # Adding element type (line 393)
        int_219963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 393, 12), list_219962, int_219963)
        # Adding element type (line 393)
        int_219964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 393, 12), list_219962, int_219964)
        # Adding element type (line 393)
        int_219965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 393, 12), list_219962, int_219965)
        # Adding element type (line 393)
        int_219966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 393, 12), list_219962, int_219966)
        
        # Assigning a type to the variable 'y' (line 393)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 8), 'y', list_219962)
        
        # Call to assert_allclose(...): (line 394)
        # Processing the call arguments (line 394)
        
        # Obtaining the type of the subscript
        int_219968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 50), 'int')
        
        # Call to curve_fit(...): (line 394)
        # Processing the call arguments (line 394)
        # Getting the type of 'f_linear' (line 394)
        f_linear_219970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 34), 'f_linear', False)
        # Getting the type of 'x' (line 394)
        x_219971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 44), 'x', False)
        # Getting the type of 'y' (line 394)
        y_219972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 47), 'y', False)
        # Processing the call keyword arguments (line 394)
        kwargs_219973 = {}
        # Getting the type of 'curve_fit' (line 394)
        curve_fit_219969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 24), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 394)
        curve_fit_call_result_219974 = invoke(stypy.reporting.localization.Localization(__file__, 394, 24), curve_fit_219969, *[f_linear_219970, x_219971, y_219972], **kwargs_219973)
        
        # Obtaining the member '__getitem__' of a type (line 394)
        getitem___219975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 394, 24), curve_fit_call_result_219974, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 394)
        subscript_call_result_219976 = invoke(stypy.reporting.localization.Localization(__file__, 394, 24), getitem___219975, int_219968)
        
        
        # Obtaining an instance of the builtin type 'list' (line 394)
        list_219977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 54), 'list')
        # Adding type elements to the builtin type 'list' instance (line 394)
        # Adding element type (line 394)
        int_219978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 394, 54), list_219977, int_219978)
        # Adding element type (line 394)
        int_219979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 394, 54), list_219977, int_219979)
        
        # Processing the call keyword arguments (line 394)
        float_219980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 67), 'float')
        keyword_219981 = float_219980
        kwargs_219982 = {'atol': keyword_219981}
        # Getting the type of 'assert_allclose' (line 394)
        assert_allclose_219967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 394)
        assert_allclose_call_result_219983 = invoke(stypy.reporting.localization.Localization(__file__, 394, 8), assert_allclose_219967, *[subscript_call_result_219976, list_219977], **kwargs_219982)
        
        
        # ################# End of 'test_array_like(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_array_like' in the type store
        # Getting the type of 'stypy_return_type' (line 387)
        stypy_return_type_219984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_219984)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_array_like'
        return stypy_return_type_219984


    @norecursion
    def test_indeterminate_covariance(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_indeterminate_covariance'
        module_type_store = module_type_store.open_function_context('test_indeterminate_covariance', 396, 4, False)
        # Assigning a type to the variable 'self' (line 397)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 397, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_indeterminate_covariance')
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_indeterminate_covariance.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_indeterminate_covariance', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_indeterminate_covariance', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_indeterminate_covariance(...)' code ##################

        
        # Assigning a Call to a Name (line 398):
        
        # Assigning a Call to a Name (line 398):
        
        # Call to array(...): (line 398)
        # Processing the call arguments (line 398)
        
        # Obtaining an instance of the builtin type 'list' (line 398)
        list_219987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 398)
        # Adding element type (line 398)
        int_219988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 398, 25), list_219987, int_219988)
        # Adding element type (line 398)
        int_219989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 398, 25), list_219987, int_219989)
        # Adding element type (line 398)
        int_219990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 398, 25), list_219987, int_219990)
        # Adding element type (line 398)
        int_219991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 398, 25), list_219987, int_219991)
        # Adding element type (line 398)
        int_219992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 398, 25), list_219987, int_219992)
        # Adding element type (line 398)
        int_219993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 398, 25), list_219987, int_219993)
        
        # Processing the call keyword arguments (line 398)
        kwargs_219994 = {}
        # Getting the type of 'np' (line 398)
        np_219985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 16), 'np', False)
        # Obtaining the member 'array' of a type (line 398)
        array_219986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 16), np_219985, 'array')
        # Calling array(args, kwargs) (line 398)
        array_call_result_219995 = invoke(stypy.reporting.localization.Localization(__file__, 398, 16), array_219986, *[list_219987], **kwargs_219994)
        
        # Assigning a type to the variable 'xdata' (line 398)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 398, 8), 'xdata', array_call_result_219995)
        
        # Assigning a Call to a Name (line 399):
        
        # Assigning a Call to a Name (line 399):
        
        # Call to array(...): (line 399)
        # Processing the call arguments (line 399)
        
        # Obtaining an instance of the builtin type 'list' (line 399)
        list_219998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 399)
        # Adding element type (line 399)
        int_219999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 399, 25), list_219998, int_219999)
        # Adding element type (line 399)
        int_220000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 399, 25), list_219998, int_220000)
        # Adding element type (line 399)
        int_220001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 399, 25), list_219998, int_220001)
        # Adding element type (line 399)
        int_220002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 399, 25), list_219998, int_220002)
        # Adding element type (line 399)
        float_220003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 399, 25), list_219998, float_220003)
        # Adding element type (line 399)
        int_220004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 399, 25), list_219998, int_220004)
        
        # Processing the call keyword arguments (line 399)
        kwargs_220005 = {}
        # Getting the type of 'np' (line 399)
        np_219996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 16), 'np', False)
        # Obtaining the member 'array' of a type (line 399)
        array_219997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 16), np_219996, 'array')
        # Calling array(args, kwargs) (line 399)
        array_call_result_220006 = invoke(stypy.reporting.localization.Localization(__file__, 399, 16), array_219997, *[list_219998], **kwargs_220005)
        
        # Assigning a type to the variable 'ydata' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 8), 'ydata', array_call_result_220006)
        
        # Call to _assert_warns(...): (line 400)
        # Processing the call arguments (line 400)
        # Getting the type of 'OptimizeWarning' (line 400)
        OptimizeWarning_220008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 22), 'OptimizeWarning', False)
        # Getting the type of 'curve_fit' (line 400)
        curve_fit_220009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 39), 'curve_fit', False)

        @norecursion
        def _stypy_temp_lambda_78(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_78'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_78', 401, 22, True)
            # Passed parameters checking function
            _stypy_temp_lambda_78.stypy_localization = localization
            _stypy_temp_lambda_78.stypy_type_of_self = None
            _stypy_temp_lambda_78.stypy_type_store = module_type_store
            _stypy_temp_lambda_78.stypy_function_name = '_stypy_temp_lambda_78'
            _stypy_temp_lambda_78.stypy_param_names_list = ['x', 'a', 'b']
            _stypy_temp_lambda_78.stypy_varargs_param_name = None
            _stypy_temp_lambda_78.stypy_kwargs_param_name = None
            _stypy_temp_lambda_78.stypy_call_defaults = defaults
            _stypy_temp_lambda_78.stypy_call_varargs = varargs
            _stypy_temp_lambda_78.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_78', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_78', ['x', 'a', 'b'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'a' (line 401)
            a_220010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 38), 'a', False)
            # Getting the type of 'x' (line 401)
            x_220011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 40), 'x', False)
            # Applying the binary operator '*' (line 401)
            result_mul_220012 = python_operator(stypy.reporting.localization.Localization(__file__, 401, 38), '*', a_220010, x_220011)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 401)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 22), 'stypy_return_type', result_mul_220012)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_78' in the type store
            # Getting the type of 'stypy_return_type' (line 401)
            stypy_return_type_220013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 22), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220013)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_78'
            return stypy_return_type_220013

        # Assigning a type to the variable '_stypy_temp_lambda_78' (line 401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 22), '_stypy_temp_lambda_78', _stypy_temp_lambda_78)
        # Getting the type of '_stypy_temp_lambda_78' (line 401)
        _stypy_temp_lambda_78_220014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 22), '_stypy_temp_lambda_78')
        # Getting the type of 'xdata' (line 401)
        xdata_220015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 43), 'xdata', False)
        # Getting the type of 'ydata' (line 401)
        ydata_220016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 50), 'ydata', False)
        # Processing the call keyword arguments (line 400)
        kwargs_220017 = {}
        # Getting the type of '_assert_warns' (line 400)
        _assert_warns_220007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 8), '_assert_warns', False)
        # Calling _assert_warns(args, kwargs) (line 400)
        _assert_warns_call_result_220018 = invoke(stypy.reporting.localization.Localization(__file__, 400, 8), _assert_warns_220007, *[OptimizeWarning_220008, curve_fit_220009, _stypy_temp_lambda_78_220014, xdata_220015, ydata_220016], **kwargs_220017)
        
        
        # ################# End of 'test_indeterminate_covariance(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_indeterminate_covariance' in the type store
        # Getting the type of 'stypy_return_type' (line 396)
        stypy_return_type_220019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_220019)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_indeterminate_covariance'
        return stypy_return_type_220019


    @norecursion
    def test_NaN_handling(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_NaN_handling'
        module_type_store = module_type_store.open_function_context('test_NaN_handling', 403, 4, False)
        # Assigning a type to the variable 'self' (line 404)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_NaN_handling')
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_NaN_handling.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_NaN_handling', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_NaN_handling', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_NaN_handling(...)' code ##################

        
        # Assigning a Call to a Name (line 407):
        
        # Assigning a Call to a Name (line 407):
        
        # Call to array(...): (line 407)
        # Processing the call arguments (line 407)
        
        # Obtaining an instance of the builtin type 'list' (line 407)
        list_220022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 407)
        # Adding element type (line 407)
        int_220023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 407, 25), list_220022, int_220023)
        # Adding element type (line 407)
        # Getting the type of 'np' (line 407)
        np_220024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 29), 'np', False)
        # Obtaining the member 'nan' of a type (line 407)
        nan_220025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 29), np_220024, 'nan')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 407, 25), list_220022, nan_220025)
        # Adding element type (line 407)
        int_220026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 407, 25), list_220022, int_220026)
        
        # Processing the call keyword arguments (line 407)
        kwargs_220027 = {}
        # Getting the type of 'np' (line 407)
        np_220020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 16), 'np', False)
        # Obtaining the member 'array' of a type (line 407)
        array_220021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 16), np_220020, 'array')
        # Calling array(args, kwargs) (line 407)
        array_call_result_220028 = invoke(stypy.reporting.localization.Localization(__file__, 407, 16), array_220021, *[list_220022], **kwargs_220027)
        
        # Assigning a type to the variable 'xdata' (line 407)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 407, 8), 'xdata', array_call_result_220028)
        
        # Assigning a Call to a Name (line 408):
        
        # Assigning a Call to a Name (line 408):
        
        # Call to array(...): (line 408)
        # Processing the call arguments (line 408)
        
        # Obtaining an instance of the builtin type 'list' (line 408)
        list_220031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 408)
        # Adding element type (line 408)
        int_220032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 408, 25), list_220031, int_220032)
        # Adding element type (line 408)
        int_220033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 408, 25), list_220031, int_220033)
        # Adding element type (line 408)
        int_220034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 408, 25), list_220031, int_220034)
        
        # Processing the call keyword arguments (line 408)
        kwargs_220035 = {}
        # Getting the type of 'np' (line 408)
        np_220029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 16), 'np', False)
        # Obtaining the member 'array' of a type (line 408)
        array_220030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 16), np_220029, 'array')
        # Calling array(args, kwargs) (line 408)
        array_call_result_220036 = invoke(stypy.reporting.localization.Localization(__file__, 408, 16), array_220030, *[list_220031], **kwargs_220035)
        
        # Assigning a type to the variable 'ydata' (line 408)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 408, 8), 'ydata', array_call_result_220036)
        
        # Call to assert_raises(...): (line 410)
        # Processing the call arguments (line 410)
        # Getting the type of 'ValueError' (line 410)
        ValueError_220038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 22), 'ValueError', False)
        # Getting the type of 'curve_fit' (line 410)
        curve_fit_220039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 34), 'curve_fit', False)

        @norecursion
        def _stypy_temp_lambda_79(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_79'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_79', 411, 22, True)
            # Passed parameters checking function
            _stypy_temp_lambda_79.stypy_localization = localization
            _stypy_temp_lambda_79.stypy_type_of_self = None
            _stypy_temp_lambda_79.stypy_type_store = module_type_store
            _stypy_temp_lambda_79.stypy_function_name = '_stypy_temp_lambda_79'
            _stypy_temp_lambda_79.stypy_param_names_list = ['x', 'a', 'b']
            _stypy_temp_lambda_79.stypy_varargs_param_name = None
            _stypy_temp_lambda_79.stypy_kwargs_param_name = None
            _stypy_temp_lambda_79.stypy_call_defaults = defaults
            _stypy_temp_lambda_79.stypy_call_varargs = varargs
            _stypy_temp_lambda_79.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_79', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_79', ['x', 'a', 'b'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'a' (line 411)
            a_220040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 38), 'a', False)
            # Getting the type of 'x' (line 411)
            x_220041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 40), 'x', False)
            # Applying the binary operator '*' (line 411)
            result_mul_220042 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 38), '*', a_220040, x_220041)
            
            # Getting the type of 'b' (line 411)
            b_220043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 44), 'b', False)
            # Applying the binary operator '+' (line 411)
            result_add_220044 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 38), '+', result_mul_220042, b_220043)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 411)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 22), 'stypy_return_type', result_add_220044)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_79' in the type store
            # Getting the type of 'stypy_return_type' (line 411)
            stypy_return_type_220045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 22), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220045)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_79'
            return stypy_return_type_220045

        # Assigning a type to the variable '_stypy_temp_lambda_79' (line 411)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 22), '_stypy_temp_lambda_79', _stypy_temp_lambda_79)
        # Getting the type of '_stypy_temp_lambda_79' (line 411)
        _stypy_temp_lambda_79_220046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 22), '_stypy_temp_lambda_79')
        # Getting the type of 'xdata' (line 411)
        xdata_220047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 47), 'xdata', False)
        # Getting the type of 'ydata' (line 411)
        ydata_220048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 54), 'ydata', False)
        # Processing the call keyword arguments (line 410)
        kwargs_220049 = {}
        # Getting the type of 'assert_raises' (line 410)
        assert_raises_220037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 410)
        assert_raises_call_result_220050 = invoke(stypy.reporting.localization.Localization(__file__, 410, 8), assert_raises_220037, *[ValueError_220038, curve_fit_220039, _stypy_temp_lambda_79_220046, xdata_220047, ydata_220048], **kwargs_220049)
        
        
        # Call to assert_raises(...): (line 412)
        # Processing the call arguments (line 412)
        # Getting the type of 'ValueError' (line 412)
        ValueError_220052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 22), 'ValueError', False)
        # Getting the type of 'curve_fit' (line 412)
        curve_fit_220053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 34), 'curve_fit', False)

        @norecursion
        def _stypy_temp_lambda_80(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_80'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_80', 413, 22, True)
            # Passed parameters checking function
            _stypy_temp_lambda_80.stypy_localization = localization
            _stypy_temp_lambda_80.stypy_type_of_self = None
            _stypy_temp_lambda_80.stypy_type_store = module_type_store
            _stypy_temp_lambda_80.stypy_function_name = '_stypy_temp_lambda_80'
            _stypy_temp_lambda_80.stypy_param_names_list = ['x', 'a', 'b']
            _stypy_temp_lambda_80.stypy_varargs_param_name = None
            _stypy_temp_lambda_80.stypy_kwargs_param_name = None
            _stypy_temp_lambda_80.stypy_call_defaults = defaults
            _stypy_temp_lambda_80.stypy_call_varargs = varargs
            _stypy_temp_lambda_80.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_80', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_80', ['x', 'a', 'b'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'a' (line 413)
            a_220054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 38), 'a', False)
            # Getting the type of 'x' (line 413)
            x_220055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 40), 'x', False)
            # Applying the binary operator '*' (line 413)
            result_mul_220056 = python_operator(stypy.reporting.localization.Localization(__file__, 413, 38), '*', a_220054, x_220055)
            
            # Getting the type of 'b' (line 413)
            b_220057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 44), 'b', False)
            # Applying the binary operator '+' (line 413)
            result_add_220058 = python_operator(stypy.reporting.localization.Localization(__file__, 413, 38), '+', result_mul_220056, b_220057)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 413)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 413, 22), 'stypy_return_type', result_add_220058)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_80' in the type store
            # Getting the type of 'stypy_return_type' (line 413)
            stypy_return_type_220059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 22), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220059)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_80'
            return stypy_return_type_220059

        # Assigning a type to the variable '_stypy_temp_lambda_80' (line 413)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 413, 22), '_stypy_temp_lambda_80', _stypy_temp_lambda_80)
        # Getting the type of '_stypy_temp_lambda_80' (line 413)
        _stypy_temp_lambda_80_220060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 22), '_stypy_temp_lambda_80')
        # Getting the type of 'ydata' (line 413)
        ydata_220061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 47), 'ydata', False)
        # Getting the type of 'xdata' (line 413)
        xdata_220062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 54), 'xdata', False)
        # Processing the call keyword arguments (line 412)
        kwargs_220063 = {}
        # Getting the type of 'assert_raises' (line 412)
        assert_raises_220051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 412)
        assert_raises_call_result_220064 = invoke(stypy.reporting.localization.Localization(__file__, 412, 8), assert_raises_220051, *[ValueError_220052, curve_fit_220053, _stypy_temp_lambda_80_220060, ydata_220061, xdata_220062], **kwargs_220063)
        
        
        # Call to assert_raises(...): (line 415)
        # Processing the call arguments (line 415)
        # Getting the type of 'ValueError' (line 415)
        ValueError_220066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 22), 'ValueError', False)
        # Getting the type of 'curve_fit' (line 415)
        curve_fit_220067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 34), 'curve_fit', False)

        @norecursion
        def _stypy_temp_lambda_81(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_81'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_81', 415, 45, True)
            # Passed parameters checking function
            _stypy_temp_lambda_81.stypy_localization = localization
            _stypy_temp_lambda_81.stypy_type_of_self = None
            _stypy_temp_lambda_81.stypy_type_store = module_type_store
            _stypy_temp_lambda_81.stypy_function_name = '_stypy_temp_lambda_81'
            _stypy_temp_lambda_81.stypy_param_names_list = ['x', 'a', 'b']
            _stypy_temp_lambda_81.stypy_varargs_param_name = None
            _stypy_temp_lambda_81.stypy_kwargs_param_name = None
            _stypy_temp_lambda_81.stypy_call_defaults = defaults
            _stypy_temp_lambda_81.stypy_call_varargs = varargs
            _stypy_temp_lambda_81.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_81', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_81', ['x', 'a', 'b'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'a' (line 415)
            a_220068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 61), 'a', False)
            # Getting the type of 'x' (line 415)
            x_220069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 63), 'x', False)
            # Applying the binary operator '*' (line 415)
            result_mul_220070 = python_operator(stypy.reporting.localization.Localization(__file__, 415, 61), '*', a_220068, x_220069)
            
            # Getting the type of 'b' (line 415)
            b_220071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 67), 'b', False)
            # Applying the binary operator '+' (line 415)
            result_add_220072 = python_operator(stypy.reporting.localization.Localization(__file__, 415, 61), '+', result_mul_220070, b_220071)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 415)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 415, 45), 'stypy_return_type', result_add_220072)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_81' in the type store
            # Getting the type of 'stypy_return_type' (line 415)
            stypy_return_type_220073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 45), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220073)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_81'
            return stypy_return_type_220073

        # Assigning a type to the variable '_stypy_temp_lambda_81' (line 415)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 415, 45), '_stypy_temp_lambda_81', _stypy_temp_lambda_81)
        # Getting the type of '_stypy_temp_lambda_81' (line 415)
        _stypy_temp_lambda_81_220074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 45), '_stypy_temp_lambda_81')
        # Getting the type of 'xdata' (line 416)
        xdata_220075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 22), 'xdata', False)
        # Getting the type of 'ydata' (line 416)
        ydata_220076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 29), 'ydata', False)
        # Processing the call keyword arguments (line 415)
        
        # Obtaining an instance of the builtin type 'dict' (line 416)
        dict_220077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 38), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 416)
        # Adding element type (key, value) (line 416)
        str_220078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 39), 'str', 'check_finite')
        # Getting the type of 'True' (line 416)
        True_220079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 55), 'True', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 416, 38), dict_220077, (str_220078, True_220079))
        
        kwargs_220080 = {'dict_220077': dict_220077}
        # Getting the type of 'assert_raises' (line 415)
        assert_raises_220065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 415)
        assert_raises_call_result_220081 = invoke(stypy.reporting.localization.Localization(__file__, 415, 8), assert_raises_220065, *[ValueError_220066, curve_fit_220067, _stypy_temp_lambda_81_220074, xdata_220075, ydata_220076], **kwargs_220080)
        
        
        # ################# End of 'test_NaN_handling(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_NaN_handling' in the type store
        # Getting the type of 'stypy_return_type' (line 403)
        stypy_return_type_220082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_220082)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_NaN_handling'
        return stypy_return_type_220082


    @norecursion
    def test_method_argument(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_method_argument'
        module_type_store = module_type_store.open_function_context('test_method_argument', 418, 4, False)
        # Assigning a type to the variable 'self' (line 419)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_method_argument')
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_method_argument.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_method_argument', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_method_argument', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_method_argument(...)' code ##################


        @norecursion
        def f(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'f'
            module_type_store = module_type_store.open_function_context('f', 419, 8, False)
            
            # Passed parameters checking function
            f.stypy_localization = localization
            f.stypy_type_of_self = None
            f.stypy_type_store = module_type_store
            f.stypy_function_name = 'f'
            f.stypy_param_names_list = ['x', 'a', 'b']
            f.stypy_varargs_param_name = None
            f.stypy_kwargs_param_name = None
            f.stypy_call_defaults = defaults
            f.stypy_call_varargs = varargs
            f.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'f', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'f', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'f(...)' code ##################

            # Getting the type of 'a' (line 420)
            a_220083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 19), 'a')
            
            # Call to exp(...): (line 420)
            # Processing the call arguments (line 420)
            
            # Getting the type of 'b' (line 420)
            b_220086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 31), 'b', False)
            # Applying the 'usub' unary operator (line 420)
            result___neg___220087 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 30), 'usub', b_220086)
            
            # Getting the type of 'x' (line 420)
            x_220088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 33), 'x', False)
            # Applying the binary operator '*' (line 420)
            result_mul_220089 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 30), '*', result___neg___220087, x_220088)
            
            # Processing the call keyword arguments (line 420)
            kwargs_220090 = {}
            # Getting the type of 'np' (line 420)
            np_220084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 23), 'np', False)
            # Obtaining the member 'exp' of a type (line 420)
            exp_220085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 23), np_220084, 'exp')
            # Calling exp(args, kwargs) (line 420)
            exp_call_result_220091 = invoke(stypy.reporting.localization.Localization(__file__, 420, 23), exp_220085, *[result_mul_220089], **kwargs_220090)
            
            # Applying the binary operator '*' (line 420)
            result_mul_220092 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 19), '*', a_220083, exp_call_result_220091)
            
            # Assigning a type to the variable 'stypy_return_type' (line 420)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 12), 'stypy_return_type', result_mul_220092)
            
            # ################# End of 'f(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'f' in the type store
            # Getting the type of 'stypy_return_type' (line 419)
            stypy_return_type_220093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220093)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'f'
            return stypy_return_type_220093

        # Assigning a type to the variable 'f' (line 419)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'f', f)
        
        # Assigning a Call to a Name (line 422):
        
        # Assigning a Call to a Name (line 422):
        
        # Call to linspace(...): (line 422)
        # Processing the call arguments (line 422)
        int_220096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 28), 'int')
        int_220097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 31), 'int')
        int_220098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 34), 'int')
        # Processing the call keyword arguments (line 422)
        kwargs_220099 = {}
        # Getting the type of 'np' (line 422)
        np_220094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 16), 'np', False)
        # Obtaining the member 'linspace' of a type (line 422)
        linspace_220095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 16), np_220094, 'linspace')
        # Calling linspace(args, kwargs) (line 422)
        linspace_call_result_220100 = invoke(stypy.reporting.localization.Localization(__file__, 422, 16), linspace_220095, *[int_220096, int_220097, int_220098], **kwargs_220099)
        
        # Assigning a type to the variable 'xdata' (line 422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 422, 8), 'xdata', linspace_call_result_220100)
        
        # Assigning a Call to a Name (line 423):
        
        # Assigning a Call to a Name (line 423):
        
        # Call to f(...): (line 423)
        # Processing the call arguments (line 423)
        # Getting the type of 'xdata' (line 423)
        xdata_220102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 18), 'xdata', False)
        float_220103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 25), 'float')
        float_220104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 29), 'float')
        # Processing the call keyword arguments (line 423)
        kwargs_220105 = {}
        # Getting the type of 'f' (line 423)
        f_220101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 16), 'f', False)
        # Calling f(args, kwargs) (line 423)
        f_call_result_220106 = invoke(stypy.reporting.localization.Localization(__file__, 423, 16), f_220101, *[xdata_220102, float_220103, float_220104], **kwargs_220105)
        
        # Assigning a type to the variable 'ydata' (line 423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 423, 8), 'ydata', f_call_result_220106)
        
        
        # Obtaining an instance of the builtin type 'list' (line 425)
        list_220107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 425)
        # Adding element type (line 425)
        str_220108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 23), 'str', 'trf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 22), list_220107, str_220108)
        # Adding element type (line 425)
        str_220109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 30), 'str', 'dogbox')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 22), list_220107, str_220109)
        # Adding element type (line 425)
        str_220110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 40), 'str', 'lm')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 22), list_220107, str_220110)
        # Adding element type (line 425)
        # Getting the type of 'None' (line 425)
        None_220111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 46), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 22), list_220107, None_220111)
        
        # Testing the type of a for loop iterable (line 425)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 425, 8), list_220107)
        # Getting the type of the for loop variable (line 425)
        for_loop_var_220112 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 425, 8), list_220107)
        # Assigning a type to the variable 'method' (line 425)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 8), 'method', for_loop_var_220112)
        # SSA begins for a for statement (line 425)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 426):
        
        # Assigning a Subscript to a Name (line 426):
        
        # Obtaining the type of the subscript
        int_220113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 426, 12), 'int')
        
        # Call to curve_fit(...): (line 426)
        # Processing the call arguments (line 426)
        # Getting the type of 'f' (line 426)
        f_220115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 35), 'f', False)
        # Getting the type of 'xdata' (line 426)
        xdata_220116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 426)
        ydata_220117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 45), 'ydata', False)
        # Processing the call keyword arguments (line 426)
        # Getting the type of 'method' (line 426)
        method_220118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 59), 'method', False)
        keyword_220119 = method_220118
        kwargs_220120 = {'method': keyword_220119}
        # Getting the type of 'curve_fit' (line 426)
        curve_fit_220114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 426)
        curve_fit_call_result_220121 = invoke(stypy.reporting.localization.Localization(__file__, 426, 25), curve_fit_220114, *[f_220115, xdata_220116, ydata_220117], **kwargs_220120)
        
        # Obtaining the member '__getitem__' of a type (line 426)
        getitem___220122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 12), curve_fit_call_result_220121, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 426)
        subscript_call_result_220123 = invoke(stypy.reporting.localization.Localization(__file__, 426, 12), getitem___220122, int_220113)
        
        # Assigning a type to the variable 'tuple_var_assignment_218034' (line 426)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 426, 12), 'tuple_var_assignment_218034', subscript_call_result_220123)
        
        # Assigning a Subscript to a Name (line 426):
        
        # Obtaining the type of the subscript
        int_220124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 426, 12), 'int')
        
        # Call to curve_fit(...): (line 426)
        # Processing the call arguments (line 426)
        # Getting the type of 'f' (line 426)
        f_220126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 35), 'f', False)
        # Getting the type of 'xdata' (line 426)
        xdata_220127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 426)
        ydata_220128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 45), 'ydata', False)
        # Processing the call keyword arguments (line 426)
        # Getting the type of 'method' (line 426)
        method_220129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 59), 'method', False)
        keyword_220130 = method_220129
        kwargs_220131 = {'method': keyword_220130}
        # Getting the type of 'curve_fit' (line 426)
        curve_fit_220125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 426)
        curve_fit_call_result_220132 = invoke(stypy.reporting.localization.Localization(__file__, 426, 25), curve_fit_220125, *[f_220126, xdata_220127, ydata_220128], **kwargs_220131)
        
        # Obtaining the member '__getitem__' of a type (line 426)
        getitem___220133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 12), curve_fit_call_result_220132, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 426)
        subscript_call_result_220134 = invoke(stypy.reporting.localization.Localization(__file__, 426, 12), getitem___220133, int_220124)
        
        # Assigning a type to the variable 'tuple_var_assignment_218035' (line 426)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 426, 12), 'tuple_var_assignment_218035', subscript_call_result_220134)
        
        # Assigning a Name to a Name (line 426):
        # Getting the type of 'tuple_var_assignment_218034' (line 426)
        tuple_var_assignment_218034_220135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 12), 'tuple_var_assignment_218034')
        # Assigning a type to the variable 'popt' (line 426)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 426, 12), 'popt', tuple_var_assignment_218034_220135)
        
        # Assigning a Name to a Name (line 426):
        # Getting the type of 'tuple_var_assignment_218035' (line 426)
        tuple_var_assignment_218035_220136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 12), 'tuple_var_assignment_218035')
        # Assigning a type to the variable 'pcov' (line 426)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 426, 18), 'pcov', tuple_var_assignment_218035_220136)
        
        # Call to assert_allclose(...): (line 427)
        # Processing the call arguments (line 427)
        # Getting the type of 'popt' (line 427)
        popt_220138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 28), 'popt', False)
        
        # Obtaining an instance of the builtin type 'list' (line 427)
        list_220139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 427)
        # Adding element type (line 427)
        float_220140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 35), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 427, 34), list_220139, float_220140)
        # Adding element type (line 427)
        float_220141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 427, 34), list_220139, float_220141)
        
        # Processing the call keyword arguments (line 427)
        kwargs_220142 = {}
        # Getting the type of 'assert_allclose' (line 427)
        assert_allclose_220137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 427)
        assert_allclose_call_result_220143 = invoke(stypy.reporting.localization.Localization(__file__, 427, 12), assert_allclose_220137, *[popt_220138, list_220139], **kwargs_220142)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to assert_raises(...): (line 429)
        # Processing the call arguments (line 429)
        # Getting the type of 'ValueError' (line 429)
        ValueError_220145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 22), 'ValueError', False)
        # Getting the type of 'curve_fit' (line 429)
        curve_fit_220146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 34), 'curve_fit', False)
        # Getting the type of 'f' (line 429)
        f_220147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 45), 'f', False)
        # Getting the type of 'xdata' (line 429)
        xdata_220148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 48), 'xdata', False)
        # Getting the type of 'ydata' (line 429)
        ydata_220149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 55), 'ydata', False)
        # Processing the call keyword arguments (line 429)
        str_220150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 69), 'str', 'unknown')
        keyword_220151 = str_220150
        kwargs_220152 = {'method': keyword_220151}
        # Getting the type of 'assert_raises' (line 429)
        assert_raises_220144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 429)
        assert_raises_call_result_220153 = invoke(stypy.reporting.localization.Localization(__file__, 429, 8), assert_raises_220144, *[ValueError_220145, curve_fit_220146, f_220147, xdata_220148, ydata_220149], **kwargs_220152)
        
        
        # ################# End of 'test_method_argument(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_method_argument' in the type store
        # Getting the type of 'stypy_return_type' (line 418)
        stypy_return_type_220154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_220154)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_method_argument'
        return stypy_return_type_220154


    @norecursion
    def test_bounds(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_bounds'
        module_type_store = module_type_store.open_function_context('test_bounds', 431, 4, False)
        # Assigning a type to the variable 'self' (line 432)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_bounds')
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_bounds.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_bounds', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_bounds', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_bounds(...)' code ##################


        @norecursion
        def f(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'f'
            module_type_store = module_type_store.open_function_context('f', 432, 8, False)
            
            # Passed parameters checking function
            f.stypy_localization = localization
            f.stypy_type_of_self = None
            f.stypy_type_store = module_type_store
            f.stypy_function_name = 'f'
            f.stypy_param_names_list = ['x', 'a', 'b']
            f.stypy_varargs_param_name = None
            f.stypy_kwargs_param_name = None
            f.stypy_call_defaults = defaults
            f.stypy_call_varargs = varargs
            f.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'f', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'f', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'f(...)' code ##################

            # Getting the type of 'a' (line 433)
            a_220155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 19), 'a')
            
            # Call to exp(...): (line 433)
            # Processing the call arguments (line 433)
            
            # Getting the type of 'b' (line 433)
            b_220158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 31), 'b', False)
            # Applying the 'usub' unary operator (line 433)
            result___neg___220159 = python_operator(stypy.reporting.localization.Localization(__file__, 433, 30), 'usub', b_220158)
            
            # Getting the type of 'x' (line 433)
            x_220160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 33), 'x', False)
            # Applying the binary operator '*' (line 433)
            result_mul_220161 = python_operator(stypy.reporting.localization.Localization(__file__, 433, 30), '*', result___neg___220159, x_220160)
            
            # Processing the call keyword arguments (line 433)
            kwargs_220162 = {}
            # Getting the type of 'np' (line 433)
            np_220156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 23), 'np', False)
            # Obtaining the member 'exp' of a type (line 433)
            exp_220157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 23), np_220156, 'exp')
            # Calling exp(args, kwargs) (line 433)
            exp_call_result_220163 = invoke(stypy.reporting.localization.Localization(__file__, 433, 23), exp_220157, *[result_mul_220161], **kwargs_220162)
            
            # Applying the binary operator '*' (line 433)
            result_mul_220164 = python_operator(stypy.reporting.localization.Localization(__file__, 433, 19), '*', a_220155, exp_call_result_220163)
            
            # Assigning a type to the variable 'stypy_return_type' (line 433)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'stypy_return_type', result_mul_220164)
            
            # ################# End of 'f(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'f' in the type store
            # Getting the type of 'stypy_return_type' (line 432)
            stypy_return_type_220165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220165)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'f'
            return stypy_return_type_220165

        # Assigning a type to the variable 'f' (line 432)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 8), 'f', f)
        
        # Assigning a Call to a Name (line 435):
        
        # Assigning a Call to a Name (line 435):
        
        # Call to linspace(...): (line 435)
        # Processing the call arguments (line 435)
        int_220168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 28), 'int')
        int_220169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 31), 'int')
        int_220170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 34), 'int')
        # Processing the call keyword arguments (line 435)
        kwargs_220171 = {}
        # Getting the type of 'np' (line 435)
        np_220166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 16), 'np', False)
        # Obtaining the member 'linspace' of a type (line 435)
        linspace_220167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 16), np_220166, 'linspace')
        # Calling linspace(args, kwargs) (line 435)
        linspace_call_result_220172 = invoke(stypy.reporting.localization.Localization(__file__, 435, 16), linspace_220167, *[int_220168, int_220169, int_220170], **kwargs_220171)
        
        # Assigning a type to the variable 'xdata' (line 435)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 8), 'xdata', linspace_call_result_220172)
        
        # Assigning a Call to a Name (line 436):
        
        # Assigning a Call to a Name (line 436):
        
        # Call to f(...): (line 436)
        # Processing the call arguments (line 436)
        # Getting the type of 'xdata' (line 436)
        xdata_220174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 18), 'xdata', False)
        float_220175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 25), 'float')
        float_220176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 29), 'float')
        # Processing the call keyword arguments (line 436)
        kwargs_220177 = {}
        # Getting the type of 'f' (line 436)
        f_220173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 16), 'f', False)
        # Calling f(args, kwargs) (line 436)
        f_call_result_220178 = invoke(stypy.reporting.localization.Localization(__file__, 436, 16), f_220173, *[xdata_220174, float_220175, float_220176], **kwargs_220177)
        
        # Assigning a type to the variable 'ydata' (line 436)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'ydata', f_call_result_220178)
        
        # Assigning a Tuple to a Name (line 440):
        
        # Assigning a Tuple to a Name (line 440):
        
        # Obtaining an instance of the builtin type 'tuple' (line 440)
        tuple_220179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 440)
        # Adding element type (line 440)
        
        # Obtaining an instance of the builtin type 'list' (line 440)
        list_220180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 440)
        # Adding element type (line 440)
        float_220181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 440, 18), list_220180, float_220181)
        # Adding element type (line 440)
        int_220182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 440, 18), list_220180, int_220182)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 440, 18), tuple_220179, list_220180)
        # Adding element type (line 440)
        
        # Obtaining an instance of the builtin type 'list' (line 440)
        list_220183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 440)
        # Adding element type (line 440)
        float_220184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 440, 27), list_220183, float_220184)
        # Adding element type (line 440)
        float_220185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 440, 27), list_220183, float_220185)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 440, 18), tuple_220179, list_220183)
        
        # Assigning a type to the variable 'bounds' (line 440)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 440, 8), 'bounds', tuple_220179)
        
        
        # Obtaining an instance of the builtin type 'list' (line 441)
        list_220186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 441)
        # Adding element type (line 441)
        # Getting the type of 'None' (line 441)
        None_220187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 23), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 441, 22), list_220186, None_220187)
        # Adding element type (line 441)
        str_220188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 29), 'str', 'trf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 441, 22), list_220186, str_220188)
        # Adding element type (line 441)
        str_220189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 36), 'str', 'dogbox')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 441, 22), list_220186, str_220189)
        
        # Testing the type of a for loop iterable (line 441)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 441, 8), list_220186)
        # Getting the type of the for loop variable (line 441)
        for_loop_var_220190 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 441, 8), list_220186)
        # Assigning a type to the variable 'method' (line 441)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 8), 'method', for_loop_var_220190)
        # SSA begins for a for statement (line 441)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 442):
        
        # Assigning a Subscript to a Name (line 442):
        
        # Obtaining the type of the subscript
        int_220191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 12), 'int')
        
        # Call to curve_fit(...): (line 442)
        # Processing the call arguments (line 442)
        # Getting the type of 'f' (line 442)
        f_220193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 35), 'f', False)
        # Getting the type of 'xdata' (line 442)
        xdata_220194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 442)
        ydata_220195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 45), 'ydata', False)
        # Processing the call keyword arguments (line 442)
        # Getting the type of 'bounds' (line 442)
        bounds_220196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 59), 'bounds', False)
        keyword_220197 = bounds_220196
        # Getting the type of 'method' (line 443)
        method_220198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 42), 'method', False)
        keyword_220199 = method_220198
        kwargs_220200 = {'bounds': keyword_220197, 'method': keyword_220199}
        # Getting the type of 'curve_fit' (line 442)
        curve_fit_220192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 442)
        curve_fit_call_result_220201 = invoke(stypy.reporting.localization.Localization(__file__, 442, 25), curve_fit_220192, *[f_220193, xdata_220194, ydata_220195], **kwargs_220200)
        
        # Obtaining the member '__getitem__' of a type (line 442)
        getitem___220202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 12), curve_fit_call_result_220201, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 442)
        subscript_call_result_220203 = invoke(stypy.reporting.localization.Localization(__file__, 442, 12), getitem___220202, int_220191)
        
        # Assigning a type to the variable 'tuple_var_assignment_218036' (line 442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 12), 'tuple_var_assignment_218036', subscript_call_result_220203)
        
        # Assigning a Subscript to a Name (line 442):
        
        # Obtaining the type of the subscript
        int_220204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 12), 'int')
        
        # Call to curve_fit(...): (line 442)
        # Processing the call arguments (line 442)
        # Getting the type of 'f' (line 442)
        f_220206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 35), 'f', False)
        # Getting the type of 'xdata' (line 442)
        xdata_220207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 442)
        ydata_220208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 45), 'ydata', False)
        # Processing the call keyword arguments (line 442)
        # Getting the type of 'bounds' (line 442)
        bounds_220209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 59), 'bounds', False)
        keyword_220210 = bounds_220209
        # Getting the type of 'method' (line 443)
        method_220211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 42), 'method', False)
        keyword_220212 = method_220211
        kwargs_220213 = {'bounds': keyword_220210, 'method': keyword_220212}
        # Getting the type of 'curve_fit' (line 442)
        curve_fit_220205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 442)
        curve_fit_call_result_220214 = invoke(stypy.reporting.localization.Localization(__file__, 442, 25), curve_fit_220205, *[f_220206, xdata_220207, ydata_220208], **kwargs_220213)
        
        # Obtaining the member '__getitem__' of a type (line 442)
        getitem___220215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 12), curve_fit_call_result_220214, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 442)
        subscript_call_result_220216 = invoke(stypy.reporting.localization.Localization(__file__, 442, 12), getitem___220215, int_220204)
        
        # Assigning a type to the variable 'tuple_var_assignment_218037' (line 442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 12), 'tuple_var_assignment_218037', subscript_call_result_220216)
        
        # Assigning a Name to a Name (line 442):
        # Getting the type of 'tuple_var_assignment_218036' (line 442)
        tuple_var_assignment_218036_220217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 12), 'tuple_var_assignment_218036')
        # Assigning a type to the variable 'popt' (line 442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 12), 'popt', tuple_var_assignment_218036_220217)
        
        # Assigning a Name to a Name (line 442):
        # Getting the type of 'tuple_var_assignment_218037' (line 442)
        tuple_var_assignment_218037_220218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 12), 'tuple_var_assignment_218037')
        # Assigning a type to the variable 'pcov' (line 442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 18), 'pcov', tuple_var_assignment_218037_220218)
        
        # Call to assert_allclose(...): (line 444)
        # Processing the call arguments (line 444)
        
        # Obtaining the type of the subscript
        int_220220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 33), 'int')
        # Getting the type of 'popt' (line 444)
        popt_220221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 28), 'popt', False)
        # Obtaining the member '__getitem__' of a type (line 444)
        getitem___220222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 28), popt_220221, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 444)
        subscript_call_result_220223 = invoke(stypy.reporting.localization.Localization(__file__, 444, 28), getitem___220222, int_220220)
        
        float_220224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 37), 'float')
        # Processing the call keyword arguments (line 444)
        kwargs_220225 = {}
        # Getting the type of 'assert_allclose' (line 444)
        assert_allclose_220219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 444)
        assert_allclose_call_result_220226 = invoke(stypy.reporting.localization.Localization(__file__, 444, 12), assert_allclose_220219, *[subscript_call_result_220223, float_220224], **kwargs_220225)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 447):
        
        # Assigning a Subscript to a Name (line 447):
        
        # Obtaining the type of the subscript
        int_220227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 8), 'int')
        
        # Call to curve_fit(...): (line 447)
        # Processing the call arguments (line 447)
        # Getting the type of 'f' (line 447)
        f_220229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 31), 'f', False)
        # Getting the type of 'xdata' (line 447)
        xdata_220230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 34), 'xdata', False)
        # Getting the type of 'ydata' (line 447)
        ydata_220231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 41), 'ydata', False)
        # Processing the call keyword arguments (line 447)
        str_220232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 55), 'str', 'trf')
        keyword_220233 = str_220232
        
        # Obtaining an instance of the builtin type 'tuple' (line 448)
        tuple_220234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 448)
        # Adding element type (line 448)
        
        # Obtaining an instance of the builtin type 'list' (line 448)
        list_220235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 448)
        # Adding element type (line 448)
        float_220236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 39), list_220235, float_220236)
        # Adding element type (line 448)
        int_220237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 39), list_220235, int_220237)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 39), tuple_220234, list_220235)
        # Adding element type (line 448)
        
        # Obtaining an instance of the builtin type 'list' (line 448)
        list_220238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 448)
        # Adding element type (line 448)
        float_220239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 48), list_220238, float_220239)
        # Adding element type (line 448)
        # Getting the type of 'np' (line 448)
        np_220240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 54), 'np', False)
        # Obtaining the member 'inf' of a type (line 448)
        inf_220241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 54), np_220240, 'inf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 48), list_220238, inf_220241)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 39), tuple_220234, list_220238)
        
        keyword_220242 = tuple_220234
        kwargs_220243 = {'method': keyword_220233, 'bounds': keyword_220242}
        # Getting the type of 'curve_fit' (line 447)
        curve_fit_220228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 447)
        curve_fit_call_result_220244 = invoke(stypy.reporting.localization.Localization(__file__, 447, 21), curve_fit_220228, *[f_220229, xdata_220230, ydata_220231], **kwargs_220243)
        
        # Obtaining the member '__getitem__' of a type (line 447)
        getitem___220245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 8), curve_fit_call_result_220244, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 447)
        subscript_call_result_220246 = invoke(stypy.reporting.localization.Localization(__file__, 447, 8), getitem___220245, int_220227)
        
        # Assigning a type to the variable 'tuple_var_assignment_218038' (line 447)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 447, 8), 'tuple_var_assignment_218038', subscript_call_result_220246)
        
        # Assigning a Subscript to a Name (line 447):
        
        # Obtaining the type of the subscript
        int_220247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 8), 'int')
        
        # Call to curve_fit(...): (line 447)
        # Processing the call arguments (line 447)
        # Getting the type of 'f' (line 447)
        f_220249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 31), 'f', False)
        # Getting the type of 'xdata' (line 447)
        xdata_220250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 34), 'xdata', False)
        # Getting the type of 'ydata' (line 447)
        ydata_220251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 41), 'ydata', False)
        # Processing the call keyword arguments (line 447)
        str_220252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 55), 'str', 'trf')
        keyword_220253 = str_220252
        
        # Obtaining an instance of the builtin type 'tuple' (line 448)
        tuple_220254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 448)
        # Adding element type (line 448)
        
        # Obtaining an instance of the builtin type 'list' (line 448)
        list_220255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 448)
        # Adding element type (line 448)
        float_220256 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 39), list_220255, float_220256)
        # Adding element type (line 448)
        int_220257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 39), list_220255, int_220257)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 39), tuple_220254, list_220255)
        # Adding element type (line 448)
        
        # Obtaining an instance of the builtin type 'list' (line 448)
        list_220258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 448)
        # Adding element type (line 448)
        float_220259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 48), list_220258, float_220259)
        # Adding element type (line 448)
        # Getting the type of 'np' (line 448)
        np_220260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 54), 'np', False)
        # Obtaining the member 'inf' of a type (line 448)
        inf_220261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 54), np_220260, 'inf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 48), list_220258, inf_220261)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 39), tuple_220254, list_220258)
        
        keyword_220262 = tuple_220254
        kwargs_220263 = {'method': keyword_220253, 'bounds': keyword_220262}
        # Getting the type of 'curve_fit' (line 447)
        curve_fit_220248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 21), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 447)
        curve_fit_call_result_220264 = invoke(stypy.reporting.localization.Localization(__file__, 447, 21), curve_fit_220248, *[f_220249, xdata_220250, ydata_220251], **kwargs_220263)
        
        # Obtaining the member '__getitem__' of a type (line 447)
        getitem___220265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 8), curve_fit_call_result_220264, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 447)
        subscript_call_result_220266 = invoke(stypy.reporting.localization.Localization(__file__, 447, 8), getitem___220265, int_220247)
        
        # Assigning a type to the variable 'tuple_var_assignment_218039' (line 447)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 447, 8), 'tuple_var_assignment_218039', subscript_call_result_220266)
        
        # Assigning a Name to a Name (line 447):
        # Getting the type of 'tuple_var_assignment_218038' (line 447)
        tuple_var_assignment_218038_220267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 8), 'tuple_var_assignment_218038')
        # Assigning a type to the variable 'popt' (line 447)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 447, 8), 'popt', tuple_var_assignment_218038_220267)
        
        # Assigning a Name to a Name (line 447):
        # Getting the type of 'tuple_var_assignment_218039' (line 447)
        tuple_var_assignment_218039_220268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 8), 'tuple_var_assignment_218039')
        # Assigning a type to the variable 'pcov' (line 447)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 447, 14), 'pcov', tuple_var_assignment_218039_220268)
        
        # Call to assert_allclose(...): (line 449)
        # Processing the call arguments (line 449)
        
        # Obtaining the type of the subscript
        int_220270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 29), 'int')
        # Getting the type of 'popt' (line 449)
        popt_220271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 24), 'popt', False)
        # Obtaining the member '__getitem__' of a type (line 449)
        getitem___220272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 449, 24), popt_220271, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 449)
        subscript_call_result_220273 = invoke(stypy.reporting.localization.Localization(__file__, 449, 24), getitem___220272, int_220270)
        
        float_220274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 33), 'float')
        # Processing the call keyword arguments (line 449)
        kwargs_220275 = {}
        # Getting the type of 'assert_allclose' (line 449)
        assert_allclose_220269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 449)
        assert_allclose_call_result_220276 = invoke(stypy.reporting.localization.Localization(__file__, 449, 8), assert_allclose_220269, *[subscript_call_result_220273, float_220274], **kwargs_220275)
        
        
        # Call to assert_raises(...): (line 452)
        # Processing the call arguments (line 452)
        # Getting the type of 'ValueError' (line 452)
        ValueError_220278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 22), 'ValueError', False)
        # Getting the type of 'curve_fit' (line 452)
        curve_fit_220279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 34), 'curve_fit', False)
        # Getting the type of 'f' (line 452)
        f_220280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 45), 'f', False)
        # Getting the type of 'xdata' (line 452)
        xdata_220281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 48), 'xdata', False)
        # Getting the type of 'ydata' (line 452)
        ydata_220282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 55), 'ydata', False)
        # Processing the call keyword arguments (line 452)
        # Getting the type of 'bounds' (line 452)
        bounds_220283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 69), 'bounds', False)
        keyword_220284 = bounds_220283
        str_220285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 29), 'str', 'lm')
        keyword_220286 = str_220285
        kwargs_220287 = {'bounds': keyword_220284, 'method': keyword_220286}
        # Getting the type of 'assert_raises' (line 452)
        assert_raises_220277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 452)
        assert_raises_call_result_220288 = invoke(stypy.reporting.localization.Localization(__file__, 452, 8), assert_raises_220277, *[ValueError_220278, curve_fit_220279, f_220280, xdata_220281, ydata_220282], **kwargs_220287)
        
        
        # ################# End of 'test_bounds(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_bounds' in the type store
        # Getting the type of 'stypy_return_type' (line 431)
        stypy_return_type_220289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_220289)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_bounds'
        return stypy_return_type_220289


    @norecursion
    def test_bounds_p0(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_bounds_p0'
        module_type_store = module_type_store.open_function_context('test_bounds_p0', 455, 4, False)
        # Assigning a type to the variable 'self' (line 456)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_bounds_p0')
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_bounds_p0.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_bounds_p0', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_bounds_p0', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_bounds_p0(...)' code ##################


        @norecursion
        def f(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'f'
            module_type_store = module_type_store.open_function_context('f', 458, 8, False)
            
            # Passed parameters checking function
            f.stypy_localization = localization
            f.stypy_type_of_self = None
            f.stypy_type_store = module_type_store
            f.stypy_function_name = 'f'
            f.stypy_param_names_list = ['x', 'a']
            f.stypy_varargs_param_name = None
            f.stypy_kwargs_param_name = None
            f.stypy_call_defaults = defaults
            f.stypy_call_varargs = varargs
            f.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'f', ['x', 'a'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'f', localization, ['x', 'a'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'f(...)' code ##################

            
            # Call to sin(...): (line 459)
            # Processing the call arguments (line 459)
            # Getting the type of 'x' (line 459)
            x_220292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 26), 'x', False)
            # Getting the type of 'a' (line 459)
            a_220293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 30), 'a', False)
            # Applying the binary operator '+' (line 459)
            result_add_220294 = python_operator(stypy.reporting.localization.Localization(__file__, 459, 26), '+', x_220292, a_220293)
            
            # Processing the call keyword arguments (line 459)
            kwargs_220295 = {}
            # Getting the type of 'np' (line 459)
            np_220290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 19), 'np', False)
            # Obtaining the member 'sin' of a type (line 459)
            sin_220291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 19), np_220290, 'sin')
            # Calling sin(args, kwargs) (line 459)
            sin_call_result_220296 = invoke(stypy.reporting.localization.Localization(__file__, 459, 19), sin_220291, *[result_add_220294], **kwargs_220295)
            
            # Assigning a type to the variable 'stypy_return_type' (line 459)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 12), 'stypy_return_type', sin_call_result_220296)
            
            # ################# End of 'f(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'f' in the type store
            # Getting the type of 'stypy_return_type' (line 458)
            stypy_return_type_220297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220297)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'f'
            return stypy_return_type_220297

        # Assigning a type to the variable 'f' (line 458)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 8), 'f', f)
        
        # Assigning a Call to a Name (line 461):
        
        # Assigning a Call to a Name (line 461):
        
        # Call to linspace(...): (line 461)
        # Processing the call arguments (line 461)
        int_220300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 28), 'int')
        # Getting the type of 'np' (line 461)
        np_220301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 31), 'np', False)
        # Obtaining the member 'pi' of a type (line 461)
        pi_220302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 31), np_220301, 'pi')
        # Applying the binary operator '*' (line 461)
        result_mul_220303 = python_operator(stypy.reporting.localization.Localization(__file__, 461, 28), '*', int_220300, pi_220302)
        
        int_220304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 38), 'int')
        # Getting the type of 'np' (line 461)
        np_220305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 40), 'np', False)
        # Obtaining the member 'pi' of a type (line 461)
        pi_220306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 40), np_220305, 'pi')
        # Applying the binary operator '*' (line 461)
        result_mul_220307 = python_operator(stypy.reporting.localization.Localization(__file__, 461, 38), '*', int_220304, pi_220306)
        
        int_220308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 47), 'int')
        # Processing the call keyword arguments (line 461)
        kwargs_220309 = {}
        # Getting the type of 'np' (line 461)
        np_220298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 16), 'np', False)
        # Obtaining the member 'linspace' of a type (line 461)
        linspace_220299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 16), np_220298, 'linspace')
        # Calling linspace(args, kwargs) (line 461)
        linspace_call_result_220310 = invoke(stypy.reporting.localization.Localization(__file__, 461, 16), linspace_220299, *[result_mul_220303, result_mul_220307, int_220308], **kwargs_220309)
        
        # Assigning a type to the variable 'xdata' (line 461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 8), 'xdata', linspace_call_result_220310)
        
        # Assigning a Call to a Name (line 462):
        
        # Assigning a Call to a Name (line 462):
        
        # Call to sin(...): (line 462)
        # Processing the call arguments (line 462)
        # Getting the type of 'xdata' (line 462)
        xdata_220313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 23), 'xdata', False)
        # Processing the call keyword arguments (line 462)
        kwargs_220314 = {}
        # Getting the type of 'np' (line 462)
        np_220311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 16), 'np', False)
        # Obtaining the member 'sin' of a type (line 462)
        sin_220312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 16), np_220311, 'sin')
        # Calling sin(args, kwargs) (line 462)
        sin_call_result_220315 = invoke(stypy.reporting.localization.Localization(__file__, 462, 16), sin_220312, *[xdata_220313], **kwargs_220314)
        
        # Assigning a type to the variable 'ydata' (line 462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 8), 'ydata', sin_call_result_220315)
        
        # Assigning a Tuple to a Name (line 463):
        
        # Assigning a Tuple to a Name (line 463):
        
        # Obtaining an instance of the builtin type 'tuple' (line 463)
        tuple_220316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 463)
        # Adding element type (line 463)
        int_220317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 18), 'int')
        # Getting the type of 'np' (line 463)
        np_220318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 23), 'np')
        # Obtaining the member 'pi' of a type (line 463)
        pi_220319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 23), np_220318, 'pi')
        # Applying the binary operator '*' (line 463)
        result_mul_220320 = python_operator(stypy.reporting.localization.Localization(__file__, 463, 18), '*', int_220317, pi_220319)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 18), tuple_220316, result_mul_220320)
        # Adding element type (line 463)
        int_220321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 30), 'int')
        # Getting the type of 'np' (line 463)
        np_220322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 34), 'np')
        # Obtaining the member 'pi' of a type (line 463)
        pi_220323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 34), np_220322, 'pi')
        # Applying the binary operator '*' (line 463)
        result_mul_220324 = python_operator(stypy.reporting.localization.Localization(__file__, 463, 30), '*', int_220321, pi_220323)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 463, 18), tuple_220316, result_mul_220324)
        
        # Assigning a type to the variable 'bounds' (line 463)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 463, 8), 'bounds', tuple_220316)
        
        
        # Obtaining an instance of the builtin type 'list' (line 464)
        list_220325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 464)
        # Adding element type (line 464)
        str_220326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 23), 'str', 'trf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 22), list_220325, str_220326)
        # Adding element type (line 464)
        str_220327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 30), 'str', 'dogbox')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 22), list_220325, str_220327)
        
        # Testing the type of a for loop iterable (line 464)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 464, 8), list_220325)
        # Getting the type of the for loop variable (line 464)
        for_loop_var_220328 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 464, 8), list_220325)
        # Assigning a type to the variable 'method' (line 464)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 8), 'method', for_loop_var_220328)
        # SSA begins for a for statement (line 464)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 465):
        
        # Assigning a Subscript to a Name (line 465):
        
        # Obtaining the type of the subscript
        int_220329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 12), 'int')
        
        # Call to curve_fit(...): (line 465)
        # Processing the call arguments (line 465)
        # Getting the type of 'f' (line 465)
        f_220331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 34), 'f', False)
        # Getting the type of 'xdata' (line 465)
        xdata_220332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 37), 'xdata', False)
        # Getting the type of 'ydata' (line 465)
        ydata_220333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 44), 'ydata', False)
        # Processing the call keyword arguments (line 465)
        float_220334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 54), 'float')
        # Getting the type of 'np' (line 465)
        np_220335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 58), 'np', False)
        # Obtaining the member 'pi' of a type (line 465)
        pi_220336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 58), np_220335, 'pi')
        # Applying the binary operator '*' (line 465)
        result_mul_220337 = python_operator(stypy.reporting.localization.Localization(__file__, 465, 54), '*', float_220334, pi_220336)
        
        keyword_220338 = result_mul_220337
        kwargs_220339 = {'p0': keyword_220338}
        # Getting the type of 'curve_fit' (line 465)
        curve_fit_220330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 24), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 465)
        curve_fit_call_result_220340 = invoke(stypy.reporting.localization.Localization(__file__, 465, 24), curve_fit_220330, *[f_220331, xdata_220332, ydata_220333], **kwargs_220339)
        
        # Obtaining the member '__getitem__' of a type (line 465)
        getitem___220341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 12), curve_fit_call_result_220340, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 465)
        subscript_call_result_220342 = invoke(stypy.reporting.localization.Localization(__file__, 465, 12), getitem___220341, int_220329)
        
        # Assigning a type to the variable 'tuple_var_assignment_218040' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 12), 'tuple_var_assignment_218040', subscript_call_result_220342)
        
        # Assigning a Subscript to a Name (line 465):
        
        # Obtaining the type of the subscript
        int_220343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 12), 'int')
        
        # Call to curve_fit(...): (line 465)
        # Processing the call arguments (line 465)
        # Getting the type of 'f' (line 465)
        f_220345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 34), 'f', False)
        # Getting the type of 'xdata' (line 465)
        xdata_220346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 37), 'xdata', False)
        # Getting the type of 'ydata' (line 465)
        ydata_220347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 44), 'ydata', False)
        # Processing the call keyword arguments (line 465)
        float_220348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 54), 'float')
        # Getting the type of 'np' (line 465)
        np_220349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 58), 'np', False)
        # Obtaining the member 'pi' of a type (line 465)
        pi_220350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 58), np_220349, 'pi')
        # Applying the binary operator '*' (line 465)
        result_mul_220351 = python_operator(stypy.reporting.localization.Localization(__file__, 465, 54), '*', float_220348, pi_220350)
        
        keyword_220352 = result_mul_220351
        kwargs_220353 = {'p0': keyword_220352}
        # Getting the type of 'curve_fit' (line 465)
        curve_fit_220344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 24), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 465)
        curve_fit_call_result_220354 = invoke(stypy.reporting.localization.Localization(__file__, 465, 24), curve_fit_220344, *[f_220345, xdata_220346, ydata_220347], **kwargs_220353)
        
        # Obtaining the member '__getitem__' of a type (line 465)
        getitem___220355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 12), curve_fit_call_result_220354, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 465)
        subscript_call_result_220356 = invoke(stypy.reporting.localization.Localization(__file__, 465, 12), getitem___220355, int_220343)
        
        # Assigning a type to the variable 'tuple_var_assignment_218041' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 12), 'tuple_var_assignment_218041', subscript_call_result_220356)
        
        # Assigning a Name to a Name (line 465):
        # Getting the type of 'tuple_var_assignment_218040' (line 465)
        tuple_var_assignment_218040_220357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 12), 'tuple_var_assignment_218040')
        # Assigning a type to the variable 'popt_1' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 12), 'popt_1', tuple_var_assignment_218040_220357)
        
        # Assigning a Name to a Name (line 465):
        # Getting the type of 'tuple_var_assignment_218041' (line 465)
        tuple_var_assignment_218041_220358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 12), 'tuple_var_assignment_218041')
        # Assigning a type to the variable '_' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 20), '_', tuple_var_assignment_218041_220358)
        
        # Assigning a Call to a Tuple (line 466):
        
        # Assigning a Subscript to a Name (line 466):
        
        # Obtaining the type of the subscript
        int_220359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 466, 12), 'int')
        
        # Call to curve_fit(...): (line 466)
        # Processing the call arguments (line 466)
        # Getting the type of 'f' (line 466)
        f_220361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 34), 'f', False)
        # Getting the type of 'xdata' (line 466)
        xdata_220362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 37), 'xdata', False)
        # Getting the type of 'ydata' (line 466)
        ydata_220363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 44), 'ydata', False)
        # Processing the call keyword arguments (line 466)
        float_220364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 466, 54), 'float')
        # Getting the type of 'np' (line 466)
        np_220365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 58), 'np', False)
        # Obtaining the member 'pi' of a type (line 466)
        pi_220366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 58), np_220365, 'pi')
        # Applying the binary operator '*' (line 466)
        result_mul_220367 = python_operator(stypy.reporting.localization.Localization(__file__, 466, 54), '*', float_220364, pi_220366)
        
        keyword_220368 = result_mul_220367
        # Getting the type of 'bounds' (line 467)
        bounds_220369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 41), 'bounds', False)
        keyword_220370 = bounds_220369
        # Getting the type of 'method' (line 467)
        method_220371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 56), 'method', False)
        keyword_220372 = method_220371
        kwargs_220373 = {'p0': keyword_220368, 'bounds': keyword_220370, 'method': keyword_220372}
        # Getting the type of 'curve_fit' (line 466)
        curve_fit_220360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 24), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 466)
        curve_fit_call_result_220374 = invoke(stypy.reporting.localization.Localization(__file__, 466, 24), curve_fit_220360, *[f_220361, xdata_220362, ydata_220363], **kwargs_220373)
        
        # Obtaining the member '__getitem__' of a type (line 466)
        getitem___220375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 12), curve_fit_call_result_220374, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 466)
        subscript_call_result_220376 = invoke(stypy.reporting.localization.Localization(__file__, 466, 12), getitem___220375, int_220359)
        
        # Assigning a type to the variable 'tuple_var_assignment_218042' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 12), 'tuple_var_assignment_218042', subscript_call_result_220376)
        
        # Assigning a Subscript to a Name (line 466):
        
        # Obtaining the type of the subscript
        int_220377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 466, 12), 'int')
        
        # Call to curve_fit(...): (line 466)
        # Processing the call arguments (line 466)
        # Getting the type of 'f' (line 466)
        f_220379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 34), 'f', False)
        # Getting the type of 'xdata' (line 466)
        xdata_220380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 37), 'xdata', False)
        # Getting the type of 'ydata' (line 466)
        ydata_220381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 44), 'ydata', False)
        # Processing the call keyword arguments (line 466)
        float_220382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 466, 54), 'float')
        # Getting the type of 'np' (line 466)
        np_220383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 58), 'np', False)
        # Obtaining the member 'pi' of a type (line 466)
        pi_220384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 58), np_220383, 'pi')
        # Applying the binary operator '*' (line 466)
        result_mul_220385 = python_operator(stypy.reporting.localization.Localization(__file__, 466, 54), '*', float_220382, pi_220384)
        
        keyword_220386 = result_mul_220385
        # Getting the type of 'bounds' (line 467)
        bounds_220387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 41), 'bounds', False)
        keyword_220388 = bounds_220387
        # Getting the type of 'method' (line 467)
        method_220389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 56), 'method', False)
        keyword_220390 = method_220389
        kwargs_220391 = {'p0': keyword_220386, 'bounds': keyword_220388, 'method': keyword_220390}
        # Getting the type of 'curve_fit' (line 466)
        curve_fit_220378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 24), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 466)
        curve_fit_call_result_220392 = invoke(stypy.reporting.localization.Localization(__file__, 466, 24), curve_fit_220378, *[f_220379, xdata_220380, ydata_220381], **kwargs_220391)
        
        # Obtaining the member '__getitem__' of a type (line 466)
        getitem___220393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 12), curve_fit_call_result_220392, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 466)
        subscript_call_result_220394 = invoke(stypy.reporting.localization.Localization(__file__, 466, 12), getitem___220393, int_220377)
        
        # Assigning a type to the variable 'tuple_var_assignment_218043' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 12), 'tuple_var_assignment_218043', subscript_call_result_220394)
        
        # Assigning a Name to a Name (line 466):
        # Getting the type of 'tuple_var_assignment_218042' (line 466)
        tuple_var_assignment_218042_220395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 12), 'tuple_var_assignment_218042')
        # Assigning a type to the variable 'popt_2' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 12), 'popt_2', tuple_var_assignment_218042_220395)
        
        # Assigning a Name to a Name (line 466):
        # Getting the type of 'tuple_var_assignment_218043' (line 466)
        tuple_var_assignment_218043_220396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 12), 'tuple_var_assignment_218043')
        # Assigning a type to the variable '_' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 20), '_', tuple_var_assignment_218043_220396)
        
        # Call to assert_allclose(...): (line 470)
        # Processing the call arguments (line 470)
        # Getting the type of 'popt_1' (line 470)
        popt_1_220398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 28), 'popt_1', False)
        # Getting the type of 'popt_2' (line 470)
        popt_2_220399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 36), 'popt_2', False)
        # Processing the call keyword arguments (line 470)
        kwargs_220400 = {}
        # Getting the type of 'assert_allclose' (line 470)
        assert_allclose_220397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 470)
        assert_allclose_call_result_220401 = invoke(stypy.reporting.localization.Localization(__file__, 470, 12), assert_allclose_220397, *[popt_1_220398, popt_2_220399], **kwargs_220400)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_bounds_p0(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_bounds_p0' in the type store
        # Getting the type of 'stypy_return_type' (line 455)
        stypy_return_type_220402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_220402)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_bounds_p0'
        return stypy_return_type_220402


    @norecursion
    def test_jac(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_jac'
        module_type_store = module_type_store.open_function_context('test_jac', 472, 4, False)
        # Assigning a type to the variable 'self' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_jac')
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_jac.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_jac', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_jac', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_jac(...)' code ##################


        @norecursion
        def f(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'f'
            module_type_store = module_type_store.open_function_context('f', 475, 8, False)
            
            # Passed parameters checking function
            f.stypy_localization = localization
            f.stypy_type_of_self = None
            f.stypy_type_store = module_type_store
            f.stypy_function_name = 'f'
            f.stypy_param_names_list = ['x', 'a', 'b']
            f.stypy_varargs_param_name = None
            f.stypy_kwargs_param_name = None
            f.stypy_call_defaults = defaults
            f.stypy_call_varargs = varargs
            f.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'f', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'f', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'f(...)' code ##################

            # Getting the type of 'a' (line 476)
            a_220403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 19), 'a')
            
            # Call to exp(...): (line 476)
            # Processing the call arguments (line 476)
            
            # Getting the type of 'b' (line 476)
            b_220406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 31), 'b', False)
            # Applying the 'usub' unary operator (line 476)
            result___neg___220407 = python_operator(stypy.reporting.localization.Localization(__file__, 476, 30), 'usub', b_220406)
            
            # Getting the type of 'x' (line 476)
            x_220408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 33), 'x', False)
            # Applying the binary operator '*' (line 476)
            result_mul_220409 = python_operator(stypy.reporting.localization.Localization(__file__, 476, 30), '*', result___neg___220407, x_220408)
            
            # Processing the call keyword arguments (line 476)
            kwargs_220410 = {}
            # Getting the type of 'np' (line 476)
            np_220404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 23), 'np', False)
            # Obtaining the member 'exp' of a type (line 476)
            exp_220405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 23), np_220404, 'exp')
            # Calling exp(args, kwargs) (line 476)
            exp_call_result_220411 = invoke(stypy.reporting.localization.Localization(__file__, 476, 23), exp_220405, *[result_mul_220409], **kwargs_220410)
            
            # Applying the binary operator '*' (line 476)
            result_mul_220412 = python_operator(stypy.reporting.localization.Localization(__file__, 476, 19), '*', a_220403, exp_call_result_220411)
            
            # Assigning a type to the variable 'stypy_return_type' (line 476)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 12), 'stypy_return_type', result_mul_220412)
            
            # ################# End of 'f(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'f' in the type store
            # Getting the type of 'stypy_return_type' (line 475)
            stypy_return_type_220413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220413)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'f'
            return stypy_return_type_220413

        # Assigning a type to the variable 'f' (line 475)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 8), 'f', f)

        @norecursion
        def jac(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'jac'
            module_type_store = module_type_store.open_function_context('jac', 478, 8, False)
            
            # Passed parameters checking function
            jac.stypy_localization = localization
            jac.stypy_type_of_self = None
            jac.stypy_type_store = module_type_store
            jac.stypy_function_name = 'jac'
            jac.stypy_param_names_list = ['x', 'a', 'b']
            jac.stypy_varargs_param_name = None
            jac.stypy_kwargs_param_name = None
            jac.stypy_call_defaults = defaults
            jac.stypy_call_varargs = varargs
            jac.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'jac', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'jac', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'jac(...)' code ##################

            
            # Assigning a Call to a Name (line 479):
            
            # Assigning a Call to a Name (line 479):
            
            # Call to exp(...): (line 479)
            # Processing the call arguments (line 479)
            
            # Getting the type of 'b' (line 479)
            b_220416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 24), 'b', False)
            # Applying the 'usub' unary operator (line 479)
            result___neg___220417 = python_operator(stypy.reporting.localization.Localization(__file__, 479, 23), 'usub', b_220416)
            
            # Getting the type of 'x' (line 479)
            x_220418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 26), 'x', False)
            # Applying the binary operator '*' (line 479)
            result_mul_220419 = python_operator(stypy.reporting.localization.Localization(__file__, 479, 23), '*', result___neg___220417, x_220418)
            
            # Processing the call keyword arguments (line 479)
            kwargs_220420 = {}
            # Getting the type of 'np' (line 479)
            np_220414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 16), 'np', False)
            # Obtaining the member 'exp' of a type (line 479)
            exp_220415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 16), np_220414, 'exp')
            # Calling exp(args, kwargs) (line 479)
            exp_call_result_220421 = invoke(stypy.reporting.localization.Localization(__file__, 479, 16), exp_220415, *[result_mul_220419], **kwargs_220420)
            
            # Assigning a type to the variable 'e' (line 479)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 12), 'e', exp_call_result_220421)
            
            # Call to vstack(...): (line 480)
            # Processing the call arguments (line 480)
            
            # Obtaining an instance of the builtin type 'tuple' (line 480)
            tuple_220424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 30), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 480)
            # Adding element type (line 480)
            # Getting the type of 'e' (line 480)
            e_220425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 30), 'e', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 30), tuple_220424, e_220425)
            # Adding element type (line 480)
            
            # Getting the type of 'a' (line 480)
            a_220426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 34), 'a', False)
            # Applying the 'usub' unary operator (line 480)
            result___neg___220427 = python_operator(stypy.reporting.localization.Localization(__file__, 480, 33), 'usub', a_220426)
            
            # Getting the type of 'x' (line 480)
            x_220428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 38), 'x', False)
            # Applying the binary operator '*' (line 480)
            result_mul_220429 = python_operator(stypy.reporting.localization.Localization(__file__, 480, 33), '*', result___neg___220427, x_220428)
            
            # Getting the type of 'e' (line 480)
            e_220430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 42), 'e', False)
            # Applying the binary operator '*' (line 480)
            result_mul_220431 = python_operator(stypy.reporting.localization.Localization(__file__, 480, 40), '*', result_mul_220429, e_220430)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 30), tuple_220424, result_mul_220431)
            
            # Processing the call keyword arguments (line 480)
            kwargs_220432 = {}
            # Getting the type of 'np' (line 480)
            np_220422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 19), 'np', False)
            # Obtaining the member 'vstack' of a type (line 480)
            vstack_220423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 19), np_220422, 'vstack')
            # Calling vstack(args, kwargs) (line 480)
            vstack_call_result_220433 = invoke(stypy.reporting.localization.Localization(__file__, 480, 19), vstack_220423, *[tuple_220424], **kwargs_220432)
            
            # Obtaining the member 'T' of a type (line 480)
            T_220434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 19), vstack_call_result_220433, 'T')
            # Assigning a type to the variable 'stypy_return_type' (line 480)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 12), 'stypy_return_type', T_220434)
            
            # ################# End of 'jac(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'jac' in the type store
            # Getting the type of 'stypy_return_type' (line 478)
            stypy_return_type_220435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220435)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'jac'
            return stypy_return_type_220435

        # Assigning a type to the variable 'jac' (line 478)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'jac', jac)
        
        # Assigning a Call to a Name (line 482):
        
        # Assigning a Call to a Name (line 482):
        
        # Call to linspace(...): (line 482)
        # Processing the call arguments (line 482)
        int_220438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 28), 'int')
        int_220439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 31), 'int')
        int_220440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 34), 'int')
        # Processing the call keyword arguments (line 482)
        kwargs_220441 = {}
        # Getting the type of 'np' (line 482)
        np_220436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 16), 'np', False)
        # Obtaining the member 'linspace' of a type (line 482)
        linspace_220437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 482, 16), np_220436, 'linspace')
        # Calling linspace(args, kwargs) (line 482)
        linspace_call_result_220442 = invoke(stypy.reporting.localization.Localization(__file__, 482, 16), linspace_220437, *[int_220438, int_220439, int_220440], **kwargs_220441)
        
        # Assigning a type to the variable 'xdata' (line 482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 8), 'xdata', linspace_call_result_220442)
        
        # Assigning a Call to a Name (line 483):
        
        # Assigning a Call to a Name (line 483):
        
        # Call to f(...): (line 483)
        # Processing the call arguments (line 483)
        # Getting the type of 'xdata' (line 483)
        xdata_220444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 18), 'xdata', False)
        float_220445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 483, 25), 'float')
        float_220446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 483, 29), 'float')
        # Processing the call keyword arguments (line 483)
        kwargs_220447 = {}
        # Getting the type of 'f' (line 483)
        f_220443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 16), 'f', False)
        # Calling f(args, kwargs) (line 483)
        f_call_result_220448 = invoke(stypy.reporting.localization.Localization(__file__, 483, 16), f_220443, *[xdata_220444, float_220445, float_220446], **kwargs_220447)
        
        # Assigning a type to the variable 'ydata' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 8), 'ydata', f_call_result_220448)
        
        
        # Obtaining an instance of the builtin type 'list' (line 486)
        list_220449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 486)
        # Adding element type (line 486)
        str_220450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 23), 'str', 'trf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 486, 22), list_220449, str_220450)
        # Adding element type (line 486)
        str_220451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 30), 'str', 'dogbox')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 486, 22), list_220449, str_220451)
        
        # Testing the type of a for loop iterable (line 486)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 486, 8), list_220449)
        # Getting the type of the for loop variable (line 486)
        for_loop_var_220452 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 486, 8), list_220449)
        # Assigning a type to the variable 'method' (line 486)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 486, 8), 'method', for_loop_var_220452)
        # SSA begins for a for statement (line 486)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Obtaining an instance of the builtin type 'list' (line 487)
        list_220453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 487)
        # Adding element type (line 487)
        str_220454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 27), 'str', '2-point')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 487, 26), list_220453, str_220454)
        # Adding element type (line 487)
        str_220455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 38), 'str', '3-point')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 487, 26), list_220453, str_220455)
        # Adding element type (line 487)
        str_220456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 49), 'str', 'cs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 487, 26), list_220453, str_220456)
        
        # Testing the type of a for loop iterable (line 487)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 487, 12), list_220453)
        # Getting the type of the for loop variable (line 487)
        for_loop_var_220457 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 487, 12), list_220453)
        # Assigning a type to the variable 'scheme' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 12), 'scheme', for_loop_var_220457)
        # SSA begins for a for statement (line 487)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 488):
        
        # Assigning a Subscript to a Name (line 488):
        
        # Obtaining the type of the subscript
        int_220458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 16), 'int')
        
        # Call to curve_fit(...): (line 488)
        # Processing the call arguments (line 488)
        # Getting the type of 'f' (line 488)
        f_220460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 39), 'f', False)
        # Getting the type of 'xdata' (line 488)
        xdata_220461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 42), 'xdata', False)
        # Getting the type of 'ydata' (line 488)
        ydata_220462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 49), 'ydata', False)
        # Processing the call keyword arguments (line 488)
        # Getting the type of 'scheme' (line 488)
        scheme_220463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 60), 'scheme', False)
        keyword_220464 = scheme_220463
        # Getting the type of 'method' (line 489)
        method_220465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 46), 'method', False)
        keyword_220466 = method_220465
        kwargs_220467 = {'jac': keyword_220464, 'method': keyword_220466}
        # Getting the type of 'curve_fit' (line 488)
        curve_fit_220459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 29), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 488)
        curve_fit_call_result_220468 = invoke(stypy.reporting.localization.Localization(__file__, 488, 29), curve_fit_220459, *[f_220460, xdata_220461, ydata_220462], **kwargs_220467)
        
        # Obtaining the member '__getitem__' of a type (line 488)
        getitem___220469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 16), curve_fit_call_result_220468, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 488)
        subscript_call_result_220470 = invoke(stypy.reporting.localization.Localization(__file__, 488, 16), getitem___220469, int_220458)
        
        # Assigning a type to the variable 'tuple_var_assignment_218044' (line 488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 16), 'tuple_var_assignment_218044', subscript_call_result_220470)
        
        # Assigning a Subscript to a Name (line 488):
        
        # Obtaining the type of the subscript
        int_220471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 16), 'int')
        
        # Call to curve_fit(...): (line 488)
        # Processing the call arguments (line 488)
        # Getting the type of 'f' (line 488)
        f_220473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 39), 'f', False)
        # Getting the type of 'xdata' (line 488)
        xdata_220474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 42), 'xdata', False)
        # Getting the type of 'ydata' (line 488)
        ydata_220475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 49), 'ydata', False)
        # Processing the call keyword arguments (line 488)
        # Getting the type of 'scheme' (line 488)
        scheme_220476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 60), 'scheme', False)
        keyword_220477 = scheme_220476
        # Getting the type of 'method' (line 489)
        method_220478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 46), 'method', False)
        keyword_220479 = method_220478
        kwargs_220480 = {'jac': keyword_220477, 'method': keyword_220479}
        # Getting the type of 'curve_fit' (line 488)
        curve_fit_220472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 29), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 488)
        curve_fit_call_result_220481 = invoke(stypy.reporting.localization.Localization(__file__, 488, 29), curve_fit_220472, *[f_220473, xdata_220474, ydata_220475], **kwargs_220480)
        
        # Obtaining the member '__getitem__' of a type (line 488)
        getitem___220482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 16), curve_fit_call_result_220481, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 488)
        subscript_call_result_220483 = invoke(stypy.reporting.localization.Localization(__file__, 488, 16), getitem___220482, int_220471)
        
        # Assigning a type to the variable 'tuple_var_assignment_218045' (line 488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 16), 'tuple_var_assignment_218045', subscript_call_result_220483)
        
        # Assigning a Name to a Name (line 488):
        # Getting the type of 'tuple_var_assignment_218044' (line 488)
        tuple_var_assignment_218044_220484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 16), 'tuple_var_assignment_218044')
        # Assigning a type to the variable 'popt' (line 488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 16), 'popt', tuple_var_assignment_218044_220484)
        
        # Assigning a Name to a Name (line 488):
        # Getting the type of 'tuple_var_assignment_218045' (line 488)
        tuple_var_assignment_218045_220485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 16), 'tuple_var_assignment_218045')
        # Assigning a type to the variable 'pcov' (line 488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 22), 'pcov', tuple_var_assignment_218045_220485)
        
        # Call to assert_allclose(...): (line 490)
        # Processing the call arguments (line 490)
        # Getting the type of 'popt' (line 490)
        popt_220487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 32), 'popt', False)
        
        # Obtaining an instance of the builtin type 'list' (line 490)
        list_220488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 490)
        # Adding element type (line 490)
        int_220489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 38), list_220488, int_220489)
        # Adding element type (line 490)
        int_220490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 490, 38), list_220488, int_220490)
        
        # Processing the call keyword arguments (line 490)
        kwargs_220491 = {}
        # Getting the type of 'assert_allclose' (line 490)
        assert_allclose_220486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 16), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 490)
        assert_allclose_call_result_220492 = invoke(stypy.reporting.localization.Localization(__file__, 490, 16), assert_allclose_220486, *[popt_220487, list_220488], **kwargs_220491)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Obtaining an instance of the builtin type 'list' (line 493)
        list_220493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 493)
        # Adding element type (line 493)
        str_220494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 23), 'str', 'lm')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 493, 22), list_220493, str_220494)
        # Adding element type (line 493)
        str_220495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 29), 'str', 'trf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 493, 22), list_220493, str_220495)
        # Adding element type (line 493)
        str_220496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 36), 'str', 'dogbox')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 493, 22), list_220493, str_220496)
        
        # Testing the type of a for loop iterable (line 493)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 493, 8), list_220493)
        # Getting the type of the for loop variable (line 493)
        for_loop_var_220497 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 493, 8), list_220493)
        # Assigning a type to the variable 'method' (line 493)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 493, 8), 'method', for_loop_var_220497)
        # SSA begins for a for statement (line 493)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 494):
        
        # Assigning a Subscript to a Name (line 494):
        
        # Obtaining the type of the subscript
        int_220498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 12), 'int')
        
        # Call to curve_fit(...): (line 494)
        # Processing the call arguments (line 494)
        # Getting the type of 'f' (line 494)
        f_220500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 35), 'f', False)
        # Getting the type of 'xdata' (line 494)
        xdata_220501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 494)
        ydata_220502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 45), 'ydata', False)
        # Processing the call keyword arguments (line 494)
        # Getting the type of 'method' (line 494)
        method_220503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 59), 'method', False)
        keyword_220504 = method_220503
        # Getting the type of 'jac' (line 494)
        jac_220505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 71), 'jac', False)
        keyword_220506 = jac_220505
        kwargs_220507 = {'method': keyword_220504, 'jac': keyword_220506}
        # Getting the type of 'curve_fit' (line 494)
        curve_fit_220499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 494)
        curve_fit_call_result_220508 = invoke(stypy.reporting.localization.Localization(__file__, 494, 25), curve_fit_220499, *[f_220500, xdata_220501, ydata_220502], **kwargs_220507)
        
        # Obtaining the member '__getitem__' of a type (line 494)
        getitem___220509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 12), curve_fit_call_result_220508, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 494)
        subscript_call_result_220510 = invoke(stypy.reporting.localization.Localization(__file__, 494, 12), getitem___220509, int_220498)
        
        # Assigning a type to the variable 'tuple_var_assignment_218046' (line 494)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 12), 'tuple_var_assignment_218046', subscript_call_result_220510)
        
        # Assigning a Subscript to a Name (line 494):
        
        # Obtaining the type of the subscript
        int_220511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 12), 'int')
        
        # Call to curve_fit(...): (line 494)
        # Processing the call arguments (line 494)
        # Getting the type of 'f' (line 494)
        f_220513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 35), 'f', False)
        # Getting the type of 'xdata' (line 494)
        xdata_220514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 494)
        ydata_220515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 45), 'ydata', False)
        # Processing the call keyword arguments (line 494)
        # Getting the type of 'method' (line 494)
        method_220516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 59), 'method', False)
        keyword_220517 = method_220516
        # Getting the type of 'jac' (line 494)
        jac_220518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 71), 'jac', False)
        keyword_220519 = jac_220518
        kwargs_220520 = {'method': keyword_220517, 'jac': keyword_220519}
        # Getting the type of 'curve_fit' (line 494)
        curve_fit_220512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 494)
        curve_fit_call_result_220521 = invoke(stypy.reporting.localization.Localization(__file__, 494, 25), curve_fit_220512, *[f_220513, xdata_220514, ydata_220515], **kwargs_220520)
        
        # Obtaining the member '__getitem__' of a type (line 494)
        getitem___220522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 12), curve_fit_call_result_220521, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 494)
        subscript_call_result_220523 = invoke(stypy.reporting.localization.Localization(__file__, 494, 12), getitem___220522, int_220511)
        
        # Assigning a type to the variable 'tuple_var_assignment_218047' (line 494)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 12), 'tuple_var_assignment_218047', subscript_call_result_220523)
        
        # Assigning a Name to a Name (line 494):
        # Getting the type of 'tuple_var_assignment_218046' (line 494)
        tuple_var_assignment_218046_220524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 12), 'tuple_var_assignment_218046')
        # Assigning a type to the variable 'popt' (line 494)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 12), 'popt', tuple_var_assignment_218046_220524)
        
        # Assigning a Name to a Name (line 494):
        # Getting the type of 'tuple_var_assignment_218047' (line 494)
        tuple_var_assignment_218047_220525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 12), 'tuple_var_assignment_218047')
        # Assigning a type to the variable 'pcov' (line 494)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 18), 'pcov', tuple_var_assignment_218047_220525)
        
        # Call to assert_allclose(...): (line 495)
        # Processing the call arguments (line 495)
        # Getting the type of 'popt' (line 495)
        popt_220527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 28), 'popt', False)
        
        # Obtaining an instance of the builtin type 'list' (line 495)
        list_220528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 495)
        # Adding element type (line 495)
        int_220529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 495, 34), list_220528, int_220529)
        # Adding element type (line 495)
        int_220530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 495, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 495, 34), list_220528, int_220530)
        
        # Processing the call keyword arguments (line 495)
        kwargs_220531 = {}
        # Getting the type of 'assert_allclose' (line 495)
        assert_allclose_220526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 495)
        assert_allclose_call_result_220532 = invoke(stypy.reporting.localization.Localization(__file__, 495, 12), assert_allclose_220526, *[popt_220527, list_220528], **kwargs_220531)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Num to a Subscript (line 498):
        
        # Assigning a Num to a Subscript (line 498):
        int_220533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 19), 'int')
        # Getting the type of 'ydata' (line 498)
        ydata_220534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 8), 'ydata')
        int_220535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 14), 'int')
        # Storing an element on a container (line 498)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 498, 8), ydata_220534, (int_220535, int_220533))
        
        # Assigning a Call to a Name (line 499):
        
        # Assigning a Call to a Name (line 499):
        
        # Call to ones(...): (line 499)
        # Processing the call arguments (line 499)
        
        # Obtaining the type of the subscript
        int_220538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 36), 'int')
        # Getting the type of 'xdata' (line 499)
        xdata_220539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 24), 'xdata', False)
        # Obtaining the member 'shape' of a type (line 499)
        shape_220540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 24), xdata_220539, 'shape')
        # Obtaining the member '__getitem__' of a type (line 499)
        getitem___220541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 24), shape_220540, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 499)
        subscript_call_result_220542 = invoke(stypy.reporting.localization.Localization(__file__, 499, 24), getitem___220541, int_220538)
        
        # Processing the call keyword arguments (line 499)
        kwargs_220543 = {}
        # Getting the type of 'np' (line 499)
        np_220536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 16), 'np', False)
        # Obtaining the member 'ones' of a type (line 499)
        ones_220537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 16), np_220536, 'ones')
        # Calling ones(args, kwargs) (line 499)
        ones_call_result_220544 = invoke(stypy.reporting.localization.Localization(__file__, 499, 16), ones_220537, *[subscript_call_result_220542], **kwargs_220543)
        
        # Assigning a type to the variable 'sigma' (line 499)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 8), 'sigma', ones_call_result_220544)
        
        # Assigning a Num to a Subscript (line 500):
        
        # Assigning a Num to a Subscript (line 500):
        int_220545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 19), 'int')
        # Getting the type of 'sigma' (line 500)
        sigma_220546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 8), 'sigma')
        int_220547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 14), 'int')
        # Storing an element on a container (line 500)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 500, 8), sigma_220546, (int_220547, int_220545))
        
        
        # Obtaining an instance of the builtin type 'list' (line 501)
        list_220548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 501)
        # Adding element type (line 501)
        str_220549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 23), 'str', 'lm')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 501, 22), list_220548, str_220549)
        # Adding element type (line 501)
        str_220550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 29), 'str', 'trf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 501, 22), list_220548, str_220550)
        # Adding element type (line 501)
        str_220551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 36), 'str', 'dogbox')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 501, 22), list_220548, str_220551)
        
        # Testing the type of a for loop iterable (line 501)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 501, 8), list_220548)
        # Getting the type of the for loop variable (line 501)
        for_loop_var_220552 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 501, 8), list_220548)
        # Assigning a type to the variable 'method' (line 501)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 501, 8), 'method', for_loop_var_220552)
        # SSA begins for a for statement (line 501)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 502):
        
        # Assigning a Subscript to a Name (line 502):
        
        # Obtaining the type of the subscript
        int_220553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 502, 12), 'int')
        
        # Call to curve_fit(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'f' (line 502)
        f_220555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 35), 'f', False)
        # Getting the type of 'xdata' (line 502)
        xdata_220556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 502)
        ydata_220557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 45), 'ydata', False)
        # Processing the call keyword arguments (line 502)
        # Getting the type of 'sigma' (line 502)
        sigma_220558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 58), 'sigma', False)
        keyword_220559 = sigma_220558
        # Getting the type of 'method' (line 502)
        method_220560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 72), 'method', False)
        keyword_220561 = method_220560
        # Getting the type of 'jac' (line 503)
        jac_220562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 39), 'jac', False)
        keyword_220563 = jac_220562
        kwargs_220564 = {'sigma': keyword_220559, 'method': keyword_220561, 'jac': keyword_220563}
        # Getting the type of 'curve_fit' (line 502)
        curve_fit_220554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 502)
        curve_fit_call_result_220565 = invoke(stypy.reporting.localization.Localization(__file__, 502, 25), curve_fit_220554, *[f_220555, xdata_220556, ydata_220557], **kwargs_220564)
        
        # Obtaining the member '__getitem__' of a type (line 502)
        getitem___220566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 12), curve_fit_call_result_220565, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 502)
        subscript_call_result_220567 = invoke(stypy.reporting.localization.Localization(__file__, 502, 12), getitem___220566, int_220553)
        
        # Assigning a type to the variable 'tuple_var_assignment_218048' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 'tuple_var_assignment_218048', subscript_call_result_220567)
        
        # Assigning a Subscript to a Name (line 502):
        
        # Obtaining the type of the subscript
        int_220568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 502, 12), 'int')
        
        # Call to curve_fit(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'f' (line 502)
        f_220570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 35), 'f', False)
        # Getting the type of 'xdata' (line 502)
        xdata_220571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 38), 'xdata', False)
        # Getting the type of 'ydata' (line 502)
        ydata_220572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 45), 'ydata', False)
        # Processing the call keyword arguments (line 502)
        # Getting the type of 'sigma' (line 502)
        sigma_220573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 58), 'sigma', False)
        keyword_220574 = sigma_220573
        # Getting the type of 'method' (line 502)
        method_220575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 72), 'method', False)
        keyword_220576 = method_220575
        # Getting the type of 'jac' (line 503)
        jac_220577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 39), 'jac', False)
        keyword_220578 = jac_220577
        kwargs_220579 = {'sigma': keyword_220574, 'method': keyword_220576, 'jac': keyword_220578}
        # Getting the type of 'curve_fit' (line 502)
        curve_fit_220569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 25), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 502)
        curve_fit_call_result_220580 = invoke(stypy.reporting.localization.Localization(__file__, 502, 25), curve_fit_220569, *[f_220570, xdata_220571, ydata_220572], **kwargs_220579)
        
        # Obtaining the member '__getitem__' of a type (line 502)
        getitem___220581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 12), curve_fit_call_result_220580, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 502)
        subscript_call_result_220582 = invoke(stypy.reporting.localization.Localization(__file__, 502, 12), getitem___220581, int_220568)
        
        # Assigning a type to the variable 'tuple_var_assignment_218049' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 'tuple_var_assignment_218049', subscript_call_result_220582)
        
        # Assigning a Name to a Name (line 502):
        # Getting the type of 'tuple_var_assignment_218048' (line 502)
        tuple_var_assignment_218048_220583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 'tuple_var_assignment_218048')
        # Assigning a type to the variable 'popt' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 'popt', tuple_var_assignment_218048_220583)
        
        # Assigning a Name to a Name (line 502):
        # Getting the type of 'tuple_var_assignment_218049' (line 502)
        tuple_var_assignment_218049_220584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 'tuple_var_assignment_218049')
        # Assigning a type to the variable 'pcov' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 18), 'pcov', tuple_var_assignment_218049_220584)
        
        # Call to assert_allclose(...): (line 506)
        # Processing the call arguments (line 506)
        # Getting the type of 'popt' (line 506)
        popt_220586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 28), 'popt', False)
        
        # Obtaining an instance of the builtin type 'list' (line 506)
        list_220587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 506)
        # Adding element type (line 506)
        int_220588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 34), list_220587, int_220588)
        # Adding element type (line 506)
        int_220589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 34), list_220587, int_220589)
        
        # Processing the call keyword arguments (line 506)
        float_220590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 47), 'float')
        keyword_220591 = float_220590
        kwargs_220592 = {'rtol': keyword_220591}
        # Getting the type of 'assert_allclose' (line 506)
        assert_allclose_220585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 506)
        assert_allclose_call_result_220593 = invoke(stypy.reporting.localization.Localization(__file__, 506, 12), assert_allclose_220585, *[popt_220586, list_220587], **kwargs_220592)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_jac(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_jac' in the type store
        # Getting the type of 'stypy_return_type' (line 472)
        stypy_return_type_220594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_220594)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_jac'
        return stypy_return_type_220594


    @norecursion
    def test_maxfev_and_bounds(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxfev_and_bounds'
        module_type_store = module_type_store.open_function_context('test_maxfev_and_bounds', 508, 4, False)
        # Assigning a type to the variable 'self' (line 509)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 509, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_maxfev_and_bounds')
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_maxfev_and_bounds.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_maxfev_and_bounds', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxfev_and_bounds', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxfev_and_bounds(...)' code ##################

        
        # Assigning a Call to a Name (line 511):
        
        # Assigning a Call to a Name (line 511):
        
        # Call to arange(...): (line 511)
        # Processing the call arguments (line 511)
        int_220597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 22), 'int')
        int_220598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 25), 'int')
        # Processing the call keyword arguments (line 511)
        kwargs_220599 = {}
        # Getting the type of 'np' (line 511)
        np_220595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 12), 'np', False)
        # Obtaining the member 'arange' of a type (line 511)
        arange_220596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 12), np_220595, 'arange')
        # Calling arange(args, kwargs) (line 511)
        arange_call_result_220600 = invoke(stypy.reporting.localization.Localization(__file__, 511, 12), arange_220596, *[int_220597, int_220598], **kwargs_220599)
        
        # Assigning a type to the variable 'x' (line 511)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 511, 8), 'x', arange_call_result_220600)
        
        # Assigning a BinOp to a Name (line 512):
        
        # Assigning a BinOp to a Name (line 512):
        int_220601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 12), 'int')
        # Getting the type of 'x' (line 512)
        x_220602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 14), 'x')
        # Applying the binary operator '*' (line 512)
        result_mul_220603 = python_operator(stypy.reporting.localization.Localization(__file__, 512, 12), '*', int_220601, x_220602)
        
        # Assigning a type to the variable 'y' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 8), 'y', result_mul_220603)
        
        # Assigning a Call to a Tuple (line 513):
        
        # Assigning a Subscript to a Name (line 513):
        
        # Obtaining the type of the subscript
        int_220604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 8), 'int')
        
        # Call to curve_fit(...): (line 513)
        # Processing the call arguments (line 513)

        @norecursion
        def _stypy_temp_lambda_82(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_82'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_82', 513, 29, True)
            # Passed parameters checking function
            _stypy_temp_lambda_82.stypy_localization = localization
            _stypy_temp_lambda_82.stypy_type_of_self = None
            _stypy_temp_lambda_82.stypy_type_store = module_type_store
            _stypy_temp_lambda_82.stypy_function_name = '_stypy_temp_lambda_82'
            _stypy_temp_lambda_82.stypy_param_names_list = ['x', 'p']
            _stypy_temp_lambda_82.stypy_varargs_param_name = None
            _stypy_temp_lambda_82.stypy_kwargs_param_name = None
            _stypy_temp_lambda_82.stypy_call_defaults = defaults
            _stypy_temp_lambda_82.stypy_call_varargs = varargs
            _stypy_temp_lambda_82.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_82', ['x', 'p'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_82', ['x', 'p'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'p' (line 513)
            p_220606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 41), 'p', False)
            # Getting the type of 'x' (line 513)
            x_220607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 43), 'x', False)
            # Applying the binary operator '*' (line 513)
            result_mul_220608 = python_operator(stypy.reporting.localization.Localization(__file__, 513, 41), '*', p_220606, x_220607)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 513)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 29), 'stypy_return_type', result_mul_220608)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_82' in the type store
            # Getting the type of 'stypy_return_type' (line 513)
            stypy_return_type_220609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 29), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220609)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_82'
            return stypy_return_type_220609

        # Assigning a type to the variable '_stypy_temp_lambda_82' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 29), '_stypy_temp_lambda_82', _stypy_temp_lambda_82)
        # Getting the type of '_stypy_temp_lambda_82' (line 513)
        _stypy_temp_lambda_82_220610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 29), '_stypy_temp_lambda_82')
        # Getting the type of 'x' (line 513)
        x_220611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 46), 'x', False)
        # Getting the type of 'y' (line 513)
        y_220612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 49), 'y', False)
        # Processing the call keyword arguments (line 513)
        
        # Obtaining an instance of the builtin type 'tuple' (line 513)
        tuple_220613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 513)
        # Adding element type (line 513)
        int_220614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 513, 60), tuple_220613, int_220614)
        # Adding element type (line 513)
        int_220615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 513, 60), tuple_220613, int_220615)
        
        keyword_220616 = tuple_220613
        int_220617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 74), 'int')
        keyword_220618 = int_220617
        kwargs_220619 = {'bounds': keyword_220616, 'maxfev': keyword_220618}
        # Getting the type of 'curve_fit' (line 513)
        curve_fit_220605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 19), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 513)
        curve_fit_call_result_220620 = invoke(stypy.reporting.localization.Localization(__file__, 513, 19), curve_fit_220605, *[_stypy_temp_lambda_82_220610, x_220611, y_220612], **kwargs_220619)
        
        # Obtaining the member '__getitem__' of a type (line 513)
        getitem___220621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 8), curve_fit_call_result_220620, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 513)
        subscript_call_result_220622 = invoke(stypy.reporting.localization.Localization(__file__, 513, 8), getitem___220621, int_220604)
        
        # Assigning a type to the variable 'tuple_var_assignment_218050' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'tuple_var_assignment_218050', subscript_call_result_220622)
        
        # Assigning a Subscript to a Name (line 513):
        
        # Obtaining the type of the subscript
        int_220623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 8), 'int')
        
        # Call to curve_fit(...): (line 513)
        # Processing the call arguments (line 513)

        @norecursion
        def _stypy_temp_lambda_83(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_83'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_83', 513, 29, True)
            # Passed parameters checking function
            _stypy_temp_lambda_83.stypy_localization = localization
            _stypy_temp_lambda_83.stypy_type_of_self = None
            _stypy_temp_lambda_83.stypy_type_store = module_type_store
            _stypy_temp_lambda_83.stypy_function_name = '_stypy_temp_lambda_83'
            _stypy_temp_lambda_83.stypy_param_names_list = ['x', 'p']
            _stypy_temp_lambda_83.stypy_varargs_param_name = None
            _stypy_temp_lambda_83.stypy_kwargs_param_name = None
            _stypy_temp_lambda_83.stypy_call_defaults = defaults
            _stypy_temp_lambda_83.stypy_call_varargs = varargs
            _stypy_temp_lambda_83.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_83', ['x', 'p'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_83', ['x', 'p'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'p' (line 513)
            p_220625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 41), 'p', False)
            # Getting the type of 'x' (line 513)
            x_220626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 43), 'x', False)
            # Applying the binary operator '*' (line 513)
            result_mul_220627 = python_operator(stypy.reporting.localization.Localization(__file__, 513, 41), '*', p_220625, x_220626)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 513)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 29), 'stypy_return_type', result_mul_220627)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_83' in the type store
            # Getting the type of 'stypy_return_type' (line 513)
            stypy_return_type_220628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 29), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220628)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_83'
            return stypy_return_type_220628

        # Assigning a type to the variable '_stypy_temp_lambda_83' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 29), '_stypy_temp_lambda_83', _stypy_temp_lambda_83)
        # Getting the type of '_stypy_temp_lambda_83' (line 513)
        _stypy_temp_lambda_83_220629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 29), '_stypy_temp_lambda_83')
        # Getting the type of 'x' (line 513)
        x_220630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 46), 'x', False)
        # Getting the type of 'y' (line 513)
        y_220631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 49), 'y', False)
        # Processing the call keyword arguments (line 513)
        
        # Obtaining an instance of the builtin type 'tuple' (line 513)
        tuple_220632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 513)
        # Adding element type (line 513)
        int_220633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 513, 60), tuple_220632, int_220633)
        # Adding element type (line 513)
        int_220634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 513, 60), tuple_220632, int_220634)
        
        keyword_220635 = tuple_220632
        int_220636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 74), 'int')
        keyword_220637 = int_220636
        kwargs_220638 = {'bounds': keyword_220635, 'maxfev': keyword_220637}
        # Getting the type of 'curve_fit' (line 513)
        curve_fit_220624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 19), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 513)
        curve_fit_call_result_220639 = invoke(stypy.reporting.localization.Localization(__file__, 513, 19), curve_fit_220624, *[_stypy_temp_lambda_83_220629, x_220630, y_220631], **kwargs_220638)
        
        # Obtaining the member '__getitem__' of a type (line 513)
        getitem___220640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 8), curve_fit_call_result_220639, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 513)
        subscript_call_result_220641 = invoke(stypy.reporting.localization.Localization(__file__, 513, 8), getitem___220640, int_220623)
        
        # Assigning a type to the variable 'tuple_var_assignment_218051' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'tuple_var_assignment_218051', subscript_call_result_220641)
        
        # Assigning a Name to a Name (line 513):
        # Getting the type of 'tuple_var_assignment_218050' (line 513)
        tuple_var_assignment_218050_220642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'tuple_var_assignment_218050')
        # Assigning a type to the variable 'popt1' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'popt1', tuple_var_assignment_218050_220642)
        
        # Assigning a Name to a Name (line 513):
        # Getting the type of 'tuple_var_assignment_218051' (line 513)
        tuple_var_assignment_218051_220643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'tuple_var_assignment_218051')
        # Assigning a type to the variable '_' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 15), '_', tuple_var_assignment_218051_220643)
        
        # Assigning a Call to a Tuple (line 514):
        
        # Assigning a Subscript to a Name (line 514):
        
        # Obtaining the type of the subscript
        int_220644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 8), 'int')
        
        # Call to curve_fit(...): (line 514)
        # Processing the call arguments (line 514)

        @norecursion
        def _stypy_temp_lambda_84(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_84'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_84', 514, 29, True)
            # Passed parameters checking function
            _stypy_temp_lambda_84.stypy_localization = localization
            _stypy_temp_lambda_84.stypy_type_of_self = None
            _stypy_temp_lambda_84.stypy_type_store = module_type_store
            _stypy_temp_lambda_84.stypy_function_name = '_stypy_temp_lambda_84'
            _stypy_temp_lambda_84.stypy_param_names_list = ['x', 'p']
            _stypy_temp_lambda_84.stypy_varargs_param_name = None
            _stypy_temp_lambda_84.stypy_kwargs_param_name = None
            _stypy_temp_lambda_84.stypy_call_defaults = defaults
            _stypy_temp_lambda_84.stypy_call_varargs = varargs
            _stypy_temp_lambda_84.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_84', ['x', 'p'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_84', ['x', 'p'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'p' (line 514)
            p_220646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 41), 'p', False)
            # Getting the type of 'x' (line 514)
            x_220647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 43), 'x', False)
            # Applying the binary operator '*' (line 514)
            result_mul_220648 = python_operator(stypy.reporting.localization.Localization(__file__, 514, 41), '*', p_220646, x_220647)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 514)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 29), 'stypy_return_type', result_mul_220648)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_84' in the type store
            # Getting the type of 'stypy_return_type' (line 514)
            stypy_return_type_220649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 29), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220649)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_84'
            return stypy_return_type_220649

        # Assigning a type to the variable '_stypy_temp_lambda_84' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 29), '_stypy_temp_lambda_84', _stypy_temp_lambda_84)
        # Getting the type of '_stypy_temp_lambda_84' (line 514)
        _stypy_temp_lambda_84_220650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 29), '_stypy_temp_lambda_84')
        # Getting the type of 'x' (line 514)
        x_220651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 46), 'x', False)
        # Getting the type of 'y' (line 514)
        y_220652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 49), 'y', False)
        # Processing the call keyword arguments (line 514)
        
        # Obtaining an instance of the builtin type 'tuple' (line 514)
        tuple_220653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 514)
        # Adding element type (line 514)
        int_220654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 60), tuple_220653, int_220654)
        # Adding element type (line 514)
        int_220655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 60), tuple_220653, int_220655)
        
        keyword_220656 = tuple_220653
        int_220657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 76), 'int')
        keyword_220658 = int_220657
        kwargs_220659 = {'max_nfev': keyword_220658, 'bounds': keyword_220656}
        # Getting the type of 'curve_fit' (line 514)
        curve_fit_220645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 19), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 514)
        curve_fit_call_result_220660 = invoke(stypy.reporting.localization.Localization(__file__, 514, 19), curve_fit_220645, *[_stypy_temp_lambda_84_220650, x_220651, y_220652], **kwargs_220659)
        
        # Obtaining the member '__getitem__' of a type (line 514)
        getitem___220661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 8), curve_fit_call_result_220660, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 514)
        subscript_call_result_220662 = invoke(stypy.reporting.localization.Localization(__file__, 514, 8), getitem___220661, int_220644)
        
        # Assigning a type to the variable 'tuple_var_assignment_218052' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'tuple_var_assignment_218052', subscript_call_result_220662)
        
        # Assigning a Subscript to a Name (line 514):
        
        # Obtaining the type of the subscript
        int_220663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 8), 'int')
        
        # Call to curve_fit(...): (line 514)
        # Processing the call arguments (line 514)

        @norecursion
        def _stypy_temp_lambda_85(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_85'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_85', 514, 29, True)
            # Passed parameters checking function
            _stypy_temp_lambda_85.stypy_localization = localization
            _stypy_temp_lambda_85.stypy_type_of_self = None
            _stypy_temp_lambda_85.stypy_type_store = module_type_store
            _stypy_temp_lambda_85.stypy_function_name = '_stypy_temp_lambda_85'
            _stypy_temp_lambda_85.stypy_param_names_list = ['x', 'p']
            _stypy_temp_lambda_85.stypy_varargs_param_name = None
            _stypy_temp_lambda_85.stypy_kwargs_param_name = None
            _stypy_temp_lambda_85.stypy_call_defaults = defaults
            _stypy_temp_lambda_85.stypy_call_varargs = varargs
            _stypy_temp_lambda_85.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_85', ['x', 'p'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_85', ['x', 'p'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'p' (line 514)
            p_220665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 41), 'p', False)
            # Getting the type of 'x' (line 514)
            x_220666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 43), 'x', False)
            # Applying the binary operator '*' (line 514)
            result_mul_220667 = python_operator(stypy.reporting.localization.Localization(__file__, 514, 41), '*', p_220665, x_220666)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 514)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 29), 'stypy_return_type', result_mul_220667)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_85' in the type store
            # Getting the type of 'stypy_return_type' (line 514)
            stypy_return_type_220668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 29), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220668)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_85'
            return stypy_return_type_220668

        # Assigning a type to the variable '_stypy_temp_lambda_85' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 29), '_stypy_temp_lambda_85', _stypy_temp_lambda_85)
        # Getting the type of '_stypy_temp_lambda_85' (line 514)
        _stypy_temp_lambda_85_220669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 29), '_stypy_temp_lambda_85')
        # Getting the type of 'x' (line 514)
        x_220670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 46), 'x', False)
        # Getting the type of 'y' (line 514)
        y_220671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 49), 'y', False)
        # Processing the call keyword arguments (line 514)
        
        # Obtaining an instance of the builtin type 'tuple' (line 514)
        tuple_220672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 514)
        # Adding element type (line 514)
        int_220673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 60), tuple_220672, int_220673)
        # Adding element type (line 514)
        int_220674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 514, 60), tuple_220672, int_220674)
        
        keyword_220675 = tuple_220672
        int_220676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 76), 'int')
        keyword_220677 = int_220676
        kwargs_220678 = {'max_nfev': keyword_220677, 'bounds': keyword_220675}
        # Getting the type of 'curve_fit' (line 514)
        curve_fit_220664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 19), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 514)
        curve_fit_call_result_220679 = invoke(stypy.reporting.localization.Localization(__file__, 514, 19), curve_fit_220664, *[_stypy_temp_lambda_85_220669, x_220670, y_220671], **kwargs_220678)
        
        # Obtaining the member '__getitem__' of a type (line 514)
        getitem___220680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 8), curve_fit_call_result_220679, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 514)
        subscript_call_result_220681 = invoke(stypy.reporting.localization.Localization(__file__, 514, 8), getitem___220680, int_220663)
        
        # Assigning a type to the variable 'tuple_var_assignment_218053' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'tuple_var_assignment_218053', subscript_call_result_220681)
        
        # Assigning a Name to a Name (line 514):
        # Getting the type of 'tuple_var_assignment_218052' (line 514)
        tuple_var_assignment_218052_220682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'tuple_var_assignment_218052')
        # Assigning a type to the variable 'popt2' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'popt2', tuple_var_assignment_218052_220682)
        
        # Assigning a Name to a Name (line 514):
        # Getting the type of 'tuple_var_assignment_218053' (line 514)
        tuple_var_assignment_218053_220683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'tuple_var_assignment_218053')
        # Assigning a type to the variable '_' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 15), '_', tuple_var_assignment_218053_220683)
        
        # Call to assert_allclose(...): (line 516)
        # Processing the call arguments (line 516)
        # Getting the type of 'popt1' (line 516)
        popt1_220685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 24), 'popt1', False)
        int_220686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, 31), 'int')
        # Processing the call keyword arguments (line 516)
        float_220687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 516, 39), 'float')
        keyword_220688 = float_220687
        kwargs_220689 = {'atol': keyword_220688}
        # Getting the type of 'assert_allclose' (line 516)
        assert_allclose_220684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 516)
        assert_allclose_call_result_220690 = invoke(stypy.reporting.localization.Localization(__file__, 516, 8), assert_allclose_220684, *[popt1_220685, int_220686], **kwargs_220689)
        
        
        # Call to assert_allclose(...): (line 517)
        # Processing the call arguments (line 517)
        # Getting the type of 'popt2' (line 517)
        popt2_220692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 24), 'popt2', False)
        int_220693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 31), 'int')
        # Processing the call keyword arguments (line 517)
        float_220694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 39), 'float')
        keyword_220695 = float_220694
        kwargs_220696 = {'atol': keyword_220695}
        # Getting the type of 'assert_allclose' (line 517)
        assert_allclose_220691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 517)
        assert_allclose_call_result_220697 = invoke(stypy.reporting.localization.Localization(__file__, 517, 8), assert_allclose_220691, *[popt2_220692, int_220693], **kwargs_220696)
        
        
        # ################# End of 'test_maxfev_and_bounds(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxfev_and_bounds' in the type store
        # Getting the type of 'stypy_return_type' (line 508)
        stypy_return_type_220698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_220698)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxfev_and_bounds'
        return stypy_return_type_220698


    @norecursion
    def test_curvefit_simplecovariance(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_curvefit_simplecovariance'
        module_type_store = module_type_store.open_function_context('test_curvefit_simplecovariance', 519, 4, False)
        # Assigning a type to the variable 'self' (line 520)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_curvefit_simplecovariance')
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_curvefit_simplecovariance.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_curvefit_simplecovariance', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_curvefit_simplecovariance', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_curvefit_simplecovariance(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 521, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x', 'a', 'b']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            # Getting the type of 'a' (line 522)
            a_220699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 19), 'a')
            
            # Call to exp(...): (line 522)
            # Processing the call arguments (line 522)
            
            # Getting the type of 'b' (line 522)
            b_220702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 31), 'b', False)
            # Applying the 'usub' unary operator (line 522)
            result___neg___220703 = python_operator(stypy.reporting.localization.Localization(__file__, 522, 30), 'usub', b_220702)
            
            # Getting the type of 'x' (line 522)
            x_220704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 33), 'x', False)
            # Applying the binary operator '*' (line 522)
            result_mul_220705 = python_operator(stypy.reporting.localization.Localization(__file__, 522, 30), '*', result___neg___220703, x_220704)
            
            # Processing the call keyword arguments (line 522)
            kwargs_220706 = {}
            # Getting the type of 'np' (line 522)
            np_220700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 23), 'np', False)
            # Obtaining the member 'exp' of a type (line 522)
            exp_220701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 23), np_220700, 'exp')
            # Calling exp(args, kwargs) (line 522)
            exp_call_result_220707 = invoke(stypy.reporting.localization.Localization(__file__, 522, 23), exp_220701, *[result_mul_220705], **kwargs_220706)
            
            # Applying the binary operator '*' (line 522)
            result_mul_220708 = python_operator(stypy.reporting.localization.Localization(__file__, 522, 19), '*', a_220699, exp_call_result_220707)
            
            # Assigning a type to the variable 'stypy_return_type' (line 522)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 12), 'stypy_return_type', result_mul_220708)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 521)
            stypy_return_type_220709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220709)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_220709

        # Assigning a type to the variable 'func' (line 521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'func', func)

        @norecursion
        def jac(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'jac'
            module_type_store = module_type_store.open_function_context('jac', 524, 8, False)
            
            # Passed parameters checking function
            jac.stypy_localization = localization
            jac.stypy_type_of_self = None
            jac.stypy_type_store = module_type_store
            jac.stypy_function_name = 'jac'
            jac.stypy_param_names_list = ['x', 'a', 'b']
            jac.stypy_varargs_param_name = None
            jac.stypy_kwargs_param_name = None
            jac.stypy_call_defaults = defaults
            jac.stypy_call_varargs = varargs
            jac.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'jac', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'jac', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'jac(...)' code ##################

            
            # Assigning a Call to a Name (line 525):
            
            # Assigning a Call to a Name (line 525):
            
            # Call to exp(...): (line 525)
            # Processing the call arguments (line 525)
            
            # Getting the type of 'b' (line 525)
            b_220712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 24), 'b', False)
            # Applying the 'usub' unary operator (line 525)
            result___neg___220713 = python_operator(stypy.reporting.localization.Localization(__file__, 525, 23), 'usub', b_220712)
            
            # Getting the type of 'x' (line 525)
            x_220714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 26), 'x', False)
            # Applying the binary operator '*' (line 525)
            result_mul_220715 = python_operator(stypy.reporting.localization.Localization(__file__, 525, 23), '*', result___neg___220713, x_220714)
            
            # Processing the call keyword arguments (line 525)
            kwargs_220716 = {}
            # Getting the type of 'np' (line 525)
            np_220710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 16), 'np', False)
            # Obtaining the member 'exp' of a type (line 525)
            exp_220711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 16), np_220710, 'exp')
            # Calling exp(args, kwargs) (line 525)
            exp_call_result_220717 = invoke(stypy.reporting.localization.Localization(__file__, 525, 16), exp_220711, *[result_mul_220715], **kwargs_220716)
            
            # Assigning a type to the variable 'e' (line 525)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 525, 12), 'e', exp_call_result_220717)
            
            # Call to vstack(...): (line 526)
            # Processing the call arguments (line 526)
            
            # Obtaining an instance of the builtin type 'tuple' (line 526)
            tuple_220720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 526, 30), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 526)
            # Adding element type (line 526)
            # Getting the type of 'e' (line 526)
            e_220721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 30), 'e', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 526, 30), tuple_220720, e_220721)
            # Adding element type (line 526)
            
            # Getting the type of 'a' (line 526)
            a_220722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 34), 'a', False)
            # Applying the 'usub' unary operator (line 526)
            result___neg___220723 = python_operator(stypy.reporting.localization.Localization(__file__, 526, 33), 'usub', a_220722)
            
            # Getting the type of 'x' (line 526)
            x_220724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 38), 'x', False)
            # Applying the binary operator '*' (line 526)
            result_mul_220725 = python_operator(stypy.reporting.localization.Localization(__file__, 526, 33), '*', result___neg___220723, x_220724)
            
            # Getting the type of 'e' (line 526)
            e_220726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 42), 'e', False)
            # Applying the binary operator '*' (line 526)
            result_mul_220727 = python_operator(stypy.reporting.localization.Localization(__file__, 526, 40), '*', result_mul_220725, e_220726)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 526, 30), tuple_220720, result_mul_220727)
            
            # Processing the call keyword arguments (line 526)
            kwargs_220728 = {}
            # Getting the type of 'np' (line 526)
            np_220718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 19), 'np', False)
            # Obtaining the member 'vstack' of a type (line 526)
            vstack_220719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 19), np_220718, 'vstack')
            # Calling vstack(args, kwargs) (line 526)
            vstack_call_result_220729 = invoke(stypy.reporting.localization.Localization(__file__, 526, 19), vstack_220719, *[tuple_220720], **kwargs_220728)
            
            # Obtaining the member 'T' of a type (line 526)
            T_220730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 19), vstack_call_result_220729, 'T')
            # Assigning a type to the variable 'stypy_return_type' (line 526)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 526, 12), 'stypy_return_type', T_220730)
            
            # ################# End of 'jac(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'jac' in the type store
            # Getting the type of 'stypy_return_type' (line 524)
            stypy_return_type_220731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220731)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'jac'
            return stypy_return_type_220731

        # Assigning a type to the variable 'jac' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 8), 'jac', jac)
        
        # Call to seed(...): (line 528)
        # Processing the call arguments (line 528)
        int_220735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 23), 'int')
        # Processing the call keyword arguments (line 528)
        kwargs_220736 = {}
        # Getting the type of 'np' (line 528)
        np_220732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 528)
        random_220733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 8), np_220732, 'random')
        # Obtaining the member 'seed' of a type (line 528)
        seed_220734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 8), random_220733, 'seed')
        # Calling seed(args, kwargs) (line 528)
        seed_call_result_220737 = invoke(stypy.reporting.localization.Localization(__file__, 528, 8), seed_220734, *[int_220735], **kwargs_220736)
        
        
        # Assigning a Call to a Name (line 529):
        
        # Assigning a Call to a Name (line 529):
        
        # Call to linspace(...): (line 529)
        # Processing the call arguments (line 529)
        int_220740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 28), 'int')
        int_220741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 31), 'int')
        int_220742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 34), 'int')
        # Processing the call keyword arguments (line 529)
        kwargs_220743 = {}
        # Getting the type of 'np' (line 529)
        np_220738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 16), 'np', False)
        # Obtaining the member 'linspace' of a type (line 529)
        linspace_220739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 16), np_220738, 'linspace')
        # Calling linspace(args, kwargs) (line 529)
        linspace_call_result_220744 = invoke(stypy.reporting.localization.Localization(__file__, 529, 16), linspace_220739, *[int_220740, int_220741, int_220742], **kwargs_220743)
        
        # Assigning a type to the variable 'xdata' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'xdata', linspace_call_result_220744)
        
        # Assigning a Call to a Name (line 530):
        
        # Assigning a Call to a Name (line 530):
        
        # Call to func(...): (line 530)
        # Processing the call arguments (line 530)
        # Getting the type of 'xdata' (line 530)
        xdata_220746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 17), 'xdata', False)
        float_220747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 24), 'float')
        float_220748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 29), 'float')
        # Processing the call keyword arguments (line 530)
        kwargs_220749 = {}
        # Getting the type of 'func' (line 530)
        func_220745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 12), 'func', False)
        # Calling func(args, kwargs) (line 530)
        func_call_result_220750 = invoke(stypy.reporting.localization.Localization(__file__, 530, 12), func_220745, *[xdata_220746, float_220747, float_220748], **kwargs_220749)
        
        # Assigning a type to the variable 'y' (line 530)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 530, 8), 'y', func_call_result_220750)
        
        # Assigning a BinOp to a Name (line 531):
        
        # Assigning a BinOp to a Name (line 531):
        # Getting the type of 'y' (line 531)
        y_220751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 16), 'y')
        float_220752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 20), 'float')
        
        # Call to normal(...): (line 531)
        # Processing the call keyword arguments (line 531)
        
        # Call to len(...): (line 531)
        # Processing the call arguments (line 531)
        # Getting the type of 'xdata' (line 531)
        xdata_220757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 52), 'xdata', False)
        # Processing the call keyword arguments (line 531)
        kwargs_220758 = {}
        # Getting the type of 'len' (line 531)
        len_220756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 48), 'len', False)
        # Calling len(args, kwargs) (line 531)
        len_call_result_220759 = invoke(stypy.reporting.localization.Localization(__file__, 531, 48), len_220756, *[xdata_220757], **kwargs_220758)
        
        keyword_220760 = len_call_result_220759
        kwargs_220761 = {'size': keyword_220760}
        # Getting the type of 'np' (line 531)
        np_220753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 26), 'np', False)
        # Obtaining the member 'random' of a type (line 531)
        random_220754 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 26), np_220753, 'random')
        # Obtaining the member 'normal' of a type (line 531)
        normal_220755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 26), random_220754, 'normal')
        # Calling normal(args, kwargs) (line 531)
        normal_call_result_220762 = invoke(stypy.reporting.localization.Localization(__file__, 531, 26), normal_220755, *[], **kwargs_220761)
        
        # Applying the binary operator '*' (line 531)
        result_mul_220763 = python_operator(stypy.reporting.localization.Localization(__file__, 531, 20), '*', float_220752, normal_call_result_220762)
        
        # Applying the binary operator '+' (line 531)
        result_add_220764 = python_operator(stypy.reporting.localization.Localization(__file__, 531, 16), '+', y_220751, result_mul_220763)
        
        # Assigning a type to the variable 'ydata' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 8), 'ydata', result_add_220764)
        
        # Assigning a BinOp to a Name (line 533):
        
        # Assigning a BinOp to a Name (line 533):
        
        # Call to zeros(...): (line 533)
        # Processing the call arguments (line 533)
        
        # Call to len(...): (line 533)
        # Processing the call arguments (line 533)
        # Getting the type of 'xdata' (line 533)
        xdata_220768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 29), 'xdata', False)
        # Processing the call keyword arguments (line 533)
        kwargs_220769 = {}
        # Getting the type of 'len' (line 533)
        len_220767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 25), 'len', False)
        # Calling len(args, kwargs) (line 533)
        len_call_result_220770 = invoke(stypy.reporting.localization.Localization(__file__, 533, 25), len_220767, *[xdata_220768], **kwargs_220769)
        
        # Processing the call keyword arguments (line 533)
        kwargs_220771 = {}
        # Getting the type of 'np' (line 533)
        np_220765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 16), 'np', False)
        # Obtaining the member 'zeros' of a type (line 533)
        zeros_220766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 16), np_220765, 'zeros')
        # Calling zeros(args, kwargs) (line 533)
        zeros_call_result_220772 = invoke(stypy.reporting.localization.Localization(__file__, 533, 16), zeros_220766, *[len_call_result_220770], **kwargs_220771)
        
        float_220773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 39), 'float')
        # Applying the binary operator '+' (line 533)
        result_add_220774 = python_operator(stypy.reporting.localization.Localization(__file__, 533, 16), '+', zeros_call_result_220772, float_220773)
        
        # Assigning a type to the variable 'sigma' (line 533)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 533, 8), 'sigma', result_add_220774)
        
        # Assigning a Call to a Name (line 534):
        
        # Assigning a Call to a Name (line 534):
        
        # Call to diag(...): (line 534)
        # Processing the call arguments (line 534)
        # Getting the type of 'sigma' (line 534)
        sigma_220777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 24), 'sigma', False)
        int_220778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 31), 'int')
        # Applying the binary operator '**' (line 534)
        result_pow_220779 = python_operator(stypy.reporting.localization.Localization(__file__, 534, 24), '**', sigma_220777, int_220778)
        
        # Processing the call keyword arguments (line 534)
        kwargs_220780 = {}
        # Getting the type of 'np' (line 534)
        np_220775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 16), 'np', False)
        # Obtaining the member 'diag' of a type (line 534)
        diag_220776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 16), np_220775, 'diag')
        # Calling diag(args, kwargs) (line 534)
        diag_call_result_220781 = invoke(stypy.reporting.localization.Localization(__file__, 534, 16), diag_220776, *[result_pow_220779], **kwargs_220780)
        
        # Assigning a type to the variable 'covar' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'covar', diag_call_result_220781)
        
        
        # Obtaining an instance of the builtin type 'list' (line 536)
        list_220782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 536)
        # Adding element type (line 536)
        
        # Obtaining an instance of the builtin type 'tuple' (line 536)
        tuple_220783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 536)
        # Adding element type (line 536)
        # Getting the type of 'jac' (line 536)
        jac_220784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 28), 'jac')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 28), tuple_220783, jac_220784)
        # Adding element type (line 536)
        # Getting the type of 'jac' (line 536)
        jac_220785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 33), 'jac')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 28), tuple_220783, jac_220785)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 26), list_220782, tuple_220783)
        # Adding element type (line 536)
        
        # Obtaining an instance of the builtin type 'tuple' (line 536)
        tuple_220786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 536)
        # Adding element type (line 536)
        # Getting the type of 'None' (line 536)
        None_220787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 40), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 40), tuple_220786, None_220787)
        # Adding element type (line 536)
        # Getting the type of 'None' (line 536)
        None_220788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 46), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 40), tuple_220786, None_220788)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 26), list_220782, tuple_220786)
        
        # Testing the type of a for loop iterable (line 536)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 536, 8), list_220782)
        # Getting the type of the for loop variable (line 536)
        for_loop_var_220789 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 536, 8), list_220782)
        # Assigning a type to the variable 'jac1' (line 536)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 8), 'jac1', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 8), for_loop_var_220789))
        # Assigning a type to the variable 'jac2' (line 536)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 8), 'jac2', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 8), for_loop_var_220789))
        # SSA begins for a for statement (line 536)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Obtaining an instance of the builtin type 'list' (line 537)
        list_220790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 537)
        # Adding element type (line 537)
        # Getting the type of 'False' (line 537)
        False_220791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 35), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 537, 34), list_220790, False_220791)
        # Adding element type (line 537)
        # Getting the type of 'True' (line 537)
        True_220792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 42), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 537, 34), list_220790, True_220792)
        
        # Testing the type of a for loop iterable (line 537)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 537, 12), list_220790)
        # Getting the type of the for loop variable (line 537)
        for_loop_var_220793 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 537, 12), list_220790)
        # Assigning a type to the variable 'absolute_sigma' (line 537)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'absolute_sigma', for_loop_var_220793)
        # SSA begins for a for statement (line 537)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 538):
        
        # Assigning a Subscript to a Name (line 538):
        
        # Obtaining the type of the subscript
        int_220794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 16), 'int')
        
        # Call to curve_fit(...): (line 538)
        # Processing the call arguments (line 538)
        # Getting the type of 'func' (line 538)
        func_220796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 41), 'func', False)
        # Getting the type of 'xdata' (line 538)
        xdata_220797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 47), 'xdata', False)
        # Getting the type of 'ydata' (line 538)
        ydata_220798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 54), 'ydata', False)
        # Processing the call keyword arguments (line 538)
        # Getting the type of 'sigma' (line 538)
        sigma_220799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 67), 'sigma', False)
        keyword_220800 = sigma_220799
        # Getting the type of 'jac1' (line 539)
        jac1_220801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 28), 'jac1', False)
        keyword_220802 = jac1_220801
        # Getting the type of 'absolute_sigma' (line 539)
        absolute_sigma_220803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 49), 'absolute_sigma', False)
        keyword_220804 = absolute_sigma_220803
        kwargs_220805 = {'absolute_sigma': keyword_220804, 'sigma': keyword_220800, 'jac': keyword_220802}
        # Getting the type of 'curve_fit' (line 538)
        curve_fit_220795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 31), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 538)
        curve_fit_call_result_220806 = invoke(stypy.reporting.localization.Localization(__file__, 538, 31), curve_fit_220795, *[func_220796, xdata_220797, ydata_220798], **kwargs_220805)
        
        # Obtaining the member '__getitem__' of a type (line 538)
        getitem___220807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 538, 16), curve_fit_call_result_220806, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 538)
        subscript_call_result_220808 = invoke(stypy.reporting.localization.Localization(__file__, 538, 16), getitem___220807, int_220794)
        
        # Assigning a type to the variable 'tuple_var_assignment_218054' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 16), 'tuple_var_assignment_218054', subscript_call_result_220808)
        
        # Assigning a Subscript to a Name (line 538):
        
        # Obtaining the type of the subscript
        int_220809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 16), 'int')
        
        # Call to curve_fit(...): (line 538)
        # Processing the call arguments (line 538)
        # Getting the type of 'func' (line 538)
        func_220811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 41), 'func', False)
        # Getting the type of 'xdata' (line 538)
        xdata_220812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 47), 'xdata', False)
        # Getting the type of 'ydata' (line 538)
        ydata_220813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 54), 'ydata', False)
        # Processing the call keyword arguments (line 538)
        # Getting the type of 'sigma' (line 538)
        sigma_220814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 67), 'sigma', False)
        keyword_220815 = sigma_220814
        # Getting the type of 'jac1' (line 539)
        jac1_220816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 28), 'jac1', False)
        keyword_220817 = jac1_220816
        # Getting the type of 'absolute_sigma' (line 539)
        absolute_sigma_220818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 49), 'absolute_sigma', False)
        keyword_220819 = absolute_sigma_220818
        kwargs_220820 = {'absolute_sigma': keyword_220819, 'sigma': keyword_220815, 'jac': keyword_220817}
        # Getting the type of 'curve_fit' (line 538)
        curve_fit_220810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 31), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 538)
        curve_fit_call_result_220821 = invoke(stypy.reporting.localization.Localization(__file__, 538, 31), curve_fit_220810, *[func_220811, xdata_220812, ydata_220813], **kwargs_220820)
        
        # Obtaining the member '__getitem__' of a type (line 538)
        getitem___220822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 538, 16), curve_fit_call_result_220821, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 538)
        subscript_call_result_220823 = invoke(stypy.reporting.localization.Localization(__file__, 538, 16), getitem___220822, int_220809)
        
        # Assigning a type to the variable 'tuple_var_assignment_218055' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 16), 'tuple_var_assignment_218055', subscript_call_result_220823)
        
        # Assigning a Name to a Name (line 538):
        # Getting the type of 'tuple_var_assignment_218054' (line 538)
        tuple_var_assignment_218054_220824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 16), 'tuple_var_assignment_218054')
        # Assigning a type to the variable 'popt1' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 16), 'popt1', tuple_var_assignment_218054_220824)
        
        # Assigning a Name to a Name (line 538):
        # Getting the type of 'tuple_var_assignment_218055' (line 538)
        tuple_var_assignment_218055_220825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 16), 'tuple_var_assignment_218055')
        # Assigning a type to the variable 'pcov1' (line 538)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 23), 'pcov1', tuple_var_assignment_218055_220825)
        
        # Assigning a Call to a Tuple (line 540):
        
        # Assigning a Subscript to a Name (line 540):
        
        # Obtaining the type of the subscript
        int_220826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 16), 'int')
        
        # Call to curve_fit(...): (line 540)
        # Processing the call arguments (line 540)
        # Getting the type of 'func' (line 540)
        func_220828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 41), 'func', False)
        # Getting the type of 'xdata' (line 540)
        xdata_220829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 47), 'xdata', False)
        # Getting the type of 'ydata' (line 540)
        ydata_220830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 54), 'ydata', False)
        # Processing the call keyword arguments (line 540)
        # Getting the type of 'covar' (line 540)
        covar_220831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 67), 'covar', False)
        keyword_220832 = covar_220831
        # Getting the type of 'jac2' (line 541)
        jac2_220833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 28), 'jac2', False)
        keyword_220834 = jac2_220833
        # Getting the type of 'absolute_sigma' (line 541)
        absolute_sigma_220835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 49), 'absolute_sigma', False)
        keyword_220836 = absolute_sigma_220835
        kwargs_220837 = {'absolute_sigma': keyword_220836, 'sigma': keyword_220832, 'jac': keyword_220834}
        # Getting the type of 'curve_fit' (line 540)
        curve_fit_220827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 31), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 540)
        curve_fit_call_result_220838 = invoke(stypy.reporting.localization.Localization(__file__, 540, 31), curve_fit_220827, *[func_220828, xdata_220829, ydata_220830], **kwargs_220837)
        
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___220839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 16), curve_fit_call_result_220838, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_220840 = invoke(stypy.reporting.localization.Localization(__file__, 540, 16), getitem___220839, int_220826)
        
        # Assigning a type to the variable 'tuple_var_assignment_218056' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'tuple_var_assignment_218056', subscript_call_result_220840)
        
        # Assigning a Subscript to a Name (line 540):
        
        # Obtaining the type of the subscript
        int_220841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 16), 'int')
        
        # Call to curve_fit(...): (line 540)
        # Processing the call arguments (line 540)
        # Getting the type of 'func' (line 540)
        func_220843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 41), 'func', False)
        # Getting the type of 'xdata' (line 540)
        xdata_220844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 47), 'xdata', False)
        # Getting the type of 'ydata' (line 540)
        ydata_220845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 54), 'ydata', False)
        # Processing the call keyword arguments (line 540)
        # Getting the type of 'covar' (line 540)
        covar_220846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 67), 'covar', False)
        keyword_220847 = covar_220846
        # Getting the type of 'jac2' (line 541)
        jac2_220848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 28), 'jac2', False)
        keyword_220849 = jac2_220848
        # Getting the type of 'absolute_sigma' (line 541)
        absolute_sigma_220850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 49), 'absolute_sigma', False)
        keyword_220851 = absolute_sigma_220850
        kwargs_220852 = {'absolute_sigma': keyword_220851, 'sigma': keyword_220847, 'jac': keyword_220849}
        # Getting the type of 'curve_fit' (line 540)
        curve_fit_220842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 31), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 540)
        curve_fit_call_result_220853 = invoke(stypy.reporting.localization.Localization(__file__, 540, 31), curve_fit_220842, *[func_220843, xdata_220844, ydata_220845], **kwargs_220852)
        
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___220854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 16), curve_fit_call_result_220853, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_220855 = invoke(stypy.reporting.localization.Localization(__file__, 540, 16), getitem___220854, int_220841)
        
        # Assigning a type to the variable 'tuple_var_assignment_218057' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'tuple_var_assignment_218057', subscript_call_result_220855)
        
        # Assigning a Name to a Name (line 540):
        # Getting the type of 'tuple_var_assignment_218056' (line 540)
        tuple_var_assignment_218056_220856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'tuple_var_assignment_218056')
        # Assigning a type to the variable 'popt2' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'popt2', tuple_var_assignment_218056_220856)
        
        # Assigning a Name to a Name (line 540):
        # Getting the type of 'tuple_var_assignment_218057' (line 540)
        tuple_var_assignment_218057_220857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'tuple_var_assignment_218057')
        # Assigning a type to the variable 'pcov2' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 23), 'pcov2', tuple_var_assignment_218057_220857)
        
        # Call to assert_allclose(...): (line 543)
        # Processing the call arguments (line 543)
        # Getting the type of 'popt1' (line 543)
        popt1_220859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 32), 'popt1', False)
        # Getting the type of 'popt2' (line 543)
        popt2_220860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 39), 'popt2', False)
        # Processing the call keyword arguments (line 543)
        float_220861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 543, 51), 'float')
        keyword_220862 = float_220861
        kwargs_220863 = {'atol': keyword_220862}
        # Getting the type of 'assert_allclose' (line 543)
        assert_allclose_220858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 16), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 543)
        assert_allclose_call_result_220864 = invoke(stypy.reporting.localization.Localization(__file__, 543, 16), assert_allclose_220858, *[popt1_220859, popt2_220860], **kwargs_220863)
        
        
        # Call to assert_allclose(...): (line 544)
        # Processing the call arguments (line 544)
        # Getting the type of 'pcov1' (line 544)
        pcov1_220866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 32), 'pcov1', False)
        # Getting the type of 'pcov2' (line 544)
        pcov2_220867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 39), 'pcov2', False)
        # Processing the call keyword arguments (line 544)
        float_220868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 51), 'float')
        keyword_220869 = float_220868
        kwargs_220870 = {'atol': keyword_220869}
        # Getting the type of 'assert_allclose' (line 544)
        assert_allclose_220865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 16), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 544)
        assert_allclose_call_result_220871 = invoke(stypy.reporting.localization.Localization(__file__, 544, 16), assert_allclose_220865, *[pcov1_220866, pcov2_220867], **kwargs_220870)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_curvefit_simplecovariance(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_curvefit_simplecovariance' in the type store
        # Getting the type of 'stypy_return_type' (line 519)
        stypy_return_type_220872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_220872)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_curvefit_simplecovariance'
        return stypy_return_type_220872


    @norecursion
    def test_curvefit_covariance(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_curvefit_covariance'
        module_type_store = module_type_store.open_function_context('test_curvefit_covariance', 546, 4, False)
        # Assigning a type to the variable 'self' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_localization', localization)
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_function_name', 'TestCurveFit.test_curvefit_covariance')
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_param_names_list', [])
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCurveFit.test_curvefit_covariance.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.test_curvefit_covariance', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_curvefit_covariance', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_curvefit_covariance(...)' code ##################


        @norecursion
        def funcp(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'funcp'
            module_type_store = module_type_store.open_function_context('funcp', 548, 8, False)
            
            # Passed parameters checking function
            funcp.stypy_localization = localization
            funcp.stypy_type_of_self = None
            funcp.stypy_type_store = module_type_store
            funcp.stypy_function_name = 'funcp'
            funcp.stypy_param_names_list = ['x', 'a', 'b']
            funcp.stypy_varargs_param_name = None
            funcp.stypy_kwargs_param_name = None
            funcp.stypy_call_defaults = defaults
            funcp.stypy_call_varargs = varargs
            funcp.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'funcp', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'funcp', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'funcp(...)' code ##################

            
            # Assigning a Call to a Name (line 549):
            
            # Assigning a Call to a Name (line 549):
            
            # Call to array(...): (line 549)
            # Processing the call arguments (line 549)
            
            # Obtaining an instance of the builtin type 'list' (line 549)
            list_220875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 28), 'list')
            # Adding type elements to the builtin type 'list' instance (line 549)
            # Adding element type (line 549)
            
            # Obtaining an instance of the builtin type 'list' (line 549)
            list_220876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 29), 'list')
            # Adding type elements to the builtin type 'list' instance (line 549)
            # Adding element type (line 549)
            float_220877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 30), 'float')
            
            # Call to sqrt(...): (line 549)
            # Processing the call arguments (line 549)
            int_220880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 41), 'int')
            # Processing the call keyword arguments (line 549)
            kwargs_220881 = {}
            # Getting the type of 'np' (line 549)
            np_220878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 33), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 549)
            sqrt_220879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 33), np_220878, 'sqrt')
            # Calling sqrt(args, kwargs) (line 549)
            sqrt_call_result_220882 = invoke(stypy.reporting.localization.Localization(__file__, 549, 33), sqrt_220879, *[int_220880], **kwargs_220881)
            
            # Applying the binary operator 'div' (line 549)
            result_div_220883 = python_operator(stypy.reporting.localization.Localization(__file__, 549, 30), 'div', float_220877, sqrt_call_result_220882)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 29), list_220876, result_div_220883)
            # Adding element type (line 549)
            float_220884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 45), 'float')
            
            # Call to sqrt(...): (line 549)
            # Processing the call arguments (line 549)
            int_220887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 57), 'int')
            # Processing the call keyword arguments (line 549)
            kwargs_220888 = {}
            # Getting the type of 'np' (line 549)
            np_220885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 49), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 549)
            sqrt_220886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 49), np_220885, 'sqrt')
            # Calling sqrt(args, kwargs) (line 549)
            sqrt_call_result_220889 = invoke(stypy.reporting.localization.Localization(__file__, 549, 49), sqrt_220886, *[int_220887], **kwargs_220888)
            
            # Applying the binary operator 'div' (line 549)
            result_div_220890 = python_operator(stypy.reporting.localization.Localization(__file__, 549, 45), 'div', float_220884, sqrt_call_result_220889)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 29), list_220876, result_div_220890)
            # Adding element type (line 549)
            int_220891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 61), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 29), list_220876, int_220891)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 28), list_220875, list_220876)
            # Adding element type (line 549)
            
            # Obtaining an instance of the builtin type 'list' (line 549)
            list_220892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 65), 'list')
            # Adding type elements to the builtin type 'list' instance (line 549)
            # Adding element type (line 549)
            float_220893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 66), 'float')
            
            # Call to sqrt(...): (line 549)
            # Processing the call arguments (line 549)
            int_220896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 77), 'int')
            # Processing the call keyword arguments (line 549)
            kwargs_220897 = {}
            # Getting the type of 'np' (line 549)
            np_220894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 69), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 549)
            sqrt_220895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 69), np_220894, 'sqrt')
            # Calling sqrt(args, kwargs) (line 549)
            sqrt_call_result_220898 = invoke(stypy.reporting.localization.Localization(__file__, 549, 69), sqrt_220895, *[int_220896], **kwargs_220897)
            
            # Applying the binary operator 'div' (line 549)
            result_div_220899 = python_operator(stypy.reporting.localization.Localization(__file__, 549, 66), 'div', float_220893, sqrt_call_result_220898)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 65), list_220892, result_div_220899)
            # Adding element type (line 549)
            float_220900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 81), 'float')
            
            # Call to sqrt(...): (line 549)
            # Processing the call arguments (line 549)
            int_220903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 92), 'int')
            # Processing the call keyword arguments (line 549)
            kwargs_220904 = {}
            # Getting the type of 'np' (line 549)
            np_220901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 84), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 549)
            sqrt_220902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 84), np_220901, 'sqrt')
            # Calling sqrt(args, kwargs) (line 549)
            sqrt_call_result_220905 = invoke(stypy.reporting.localization.Localization(__file__, 549, 84), sqrt_220902, *[int_220903], **kwargs_220904)
            
            # Applying the binary operator 'div' (line 549)
            result_div_220906 = python_operator(stypy.reporting.localization.Localization(__file__, 549, 81), 'div', float_220900, sqrt_call_result_220905)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 65), list_220892, result_div_220906)
            # Adding element type (line 549)
            int_220907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 96), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 65), list_220892, int_220907)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 28), list_220875, list_220892)
            # Adding element type (line 549)
            
            # Obtaining an instance of the builtin type 'list' (line 549)
            list_220908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 100), 'list')
            # Adding type elements to the builtin type 'list' instance (line 549)
            # Adding element type (line 549)
            int_220909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 101), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 100), list_220908, int_220909)
            # Adding element type (line 549)
            int_220910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 104), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 100), list_220908, int_220910)
            # Adding element type (line 549)
            float_220911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 107), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 100), list_220908, float_220911)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 28), list_220875, list_220908)
            
            # Processing the call keyword arguments (line 549)
            kwargs_220912 = {}
            # Getting the type of 'np' (line 549)
            np_220873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 19), 'np', False)
            # Obtaining the member 'array' of a type (line 549)
            array_220874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 19), np_220873, 'array')
            # Calling array(args, kwargs) (line 549)
            array_call_result_220913 = invoke(stypy.reporting.localization.Localization(__file__, 549, 19), array_220874, *[list_220875], **kwargs_220912)
            
            # Assigning a type to the variable 'rotn' (line 549)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 12), 'rotn', array_call_result_220913)
            
            # Call to dot(...): (line 550)
            # Processing the call arguments (line 550)
            # Getting the type of 'a' (line 550)
            a_220916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 28), 'a', False)
            
            # Call to exp(...): (line 550)
            # Processing the call arguments (line 550)
            
            # Getting the type of 'b' (line 550)
            b_220919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 40), 'b', False)
            # Applying the 'usub' unary operator (line 550)
            result___neg___220920 = python_operator(stypy.reporting.localization.Localization(__file__, 550, 39), 'usub', b_220919)
            
            # Getting the type of 'x' (line 550)
            x_220921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 42), 'x', False)
            # Applying the binary operator '*' (line 550)
            result_mul_220922 = python_operator(stypy.reporting.localization.Localization(__file__, 550, 39), '*', result___neg___220920, x_220921)
            
            # Processing the call keyword arguments (line 550)
            kwargs_220923 = {}
            # Getting the type of 'np' (line 550)
            np_220917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 32), 'np', False)
            # Obtaining the member 'exp' of a type (line 550)
            exp_220918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 32), np_220917, 'exp')
            # Calling exp(args, kwargs) (line 550)
            exp_call_result_220924 = invoke(stypy.reporting.localization.Localization(__file__, 550, 32), exp_220918, *[result_mul_220922], **kwargs_220923)
            
            # Applying the binary operator '*' (line 550)
            result_mul_220925 = python_operator(stypy.reporting.localization.Localization(__file__, 550, 28), '*', a_220916, exp_call_result_220924)
            
            # Processing the call keyword arguments (line 550)
            kwargs_220926 = {}
            # Getting the type of 'rotn' (line 550)
            rotn_220914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 19), 'rotn', False)
            # Obtaining the member 'dot' of a type (line 550)
            dot_220915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 19), rotn_220914, 'dot')
            # Calling dot(args, kwargs) (line 550)
            dot_call_result_220927 = invoke(stypy.reporting.localization.Localization(__file__, 550, 19), dot_220915, *[result_mul_220925], **kwargs_220926)
            
            # Assigning a type to the variable 'stypy_return_type' (line 550)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 550, 12), 'stypy_return_type', dot_call_result_220927)
            
            # ################# End of 'funcp(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'funcp' in the type store
            # Getting the type of 'stypy_return_type' (line 548)
            stypy_return_type_220928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220928)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'funcp'
            return stypy_return_type_220928

        # Assigning a type to the variable 'funcp' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 8), 'funcp', funcp)

        @norecursion
        def jacp(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'jacp'
            module_type_store = module_type_store.open_function_context('jacp', 552, 8, False)
            
            # Passed parameters checking function
            jacp.stypy_localization = localization
            jacp.stypy_type_of_self = None
            jacp.stypy_type_store = module_type_store
            jacp.stypy_function_name = 'jacp'
            jacp.stypy_param_names_list = ['x', 'a', 'b']
            jacp.stypy_varargs_param_name = None
            jacp.stypy_kwargs_param_name = None
            jacp.stypy_call_defaults = defaults
            jacp.stypy_call_varargs = varargs
            jacp.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'jacp', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'jacp', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'jacp(...)' code ##################

            
            # Assigning a Call to a Name (line 553):
            
            # Assigning a Call to a Name (line 553):
            
            # Call to array(...): (line 553)
            # Processing the call arguments (line 553)
            
            # Obtaining an instance of the builtin type 'list' (line 553)
            list_220931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 28), 'list')
            # Adding type elements to the builtin type 'list' instance (line 553)
            # Adding element type (line 553)
            
            # Obtaining an instance of the builtin type 'list' (line 553)
            list_220932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 29), 'list')
            # Adding type elements to the builtin type 'list' instance (line 553)
            # Adding element type (line 553)
            float_220933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 30), 'float')
            
            # Call to sqrt(...): (line 553)
            # Processing the call arguments (line 553)
            int_220936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 41), 'int')
            # Processing the call keyword arguments (line 553)
            kwargs_220937 = {}
            # Getting the type of 'np' (line 553)
            np_220934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 33), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 553)
            sqrt_220935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 33), np_220934, 'sqrt')
            # Calling sqrt(args, kwargs) (line 553)
            sqrt_call_result_220938 = invoke(stypy.reporting.localization.Localization(__file__, 553, 33), sqrt_220935, *[int_220936], **kwargs_220937)
            
            # Applying the binary operator 'div' (line 553)
            result_div_220939 = python_operator(stypy.reporting.localization.Localization(__file__, 553, 30), 'div', float_220933, sqrt_call_result_220938)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 29), list_220932, result_div_220939)
            # Adding element type (line 553)
            float_220940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 45), 'float')
            
            # Call to sqrt(...): (line 553)
            # Processing the call arguments (line 553)
            int_220943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 57), 'int')
            # Processing the call keyword arguments (line 553)
            kwargs_220944 = {}
            # Getting the type of 'np' (line 553)
            np_220941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 49), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 553)
            sqrt_220942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 49), np_220941, 'sqrt')
            # Calling sqrt(args, kwargs) (line 553)
            sqrt_call_result_220945 = invoke(stypy.reporting.localization.Localization(__file__, 553, 49), sqrt_220942, *[int_220943], **kwargs_220944)
            
            # Applying the binary operator 'div' (line 553)
            result_div_220946 = python_operator(stypy.reporting.localization.Localization(__file__, 553, 45), 'div', float_220940, sqrt_call_result_220945)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 29), list_220932, result_div_220946)
            # Adding element type (line 553)
            int_220947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 61), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 29), list_220932, int_220947)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 28), list_220931, list_220932)
            # Adding element type (line 553)
            
            # Obtaining an instance of the builtin type 'list' (line 553)
            list_220948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 65), 'list')
            # Adding type elements to the builtin type 'list' instance (line 553)
            # Adding element type (line 553)
            float_220949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 66), 'float')
            
            # Call to sqrt(...): (line 553)
            # Processing the call arguments (line 553)
            int_220952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 77), 'int')
            # Processing the call keyword arguments (line 553)
            kwargs_220953 = {}
            # Getting the type of 'np' (line 553)
            np_220950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 69), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 553)
            sqrt_220951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 69), np_220950, 'sqrt')
            # Calling sqrt(args, kwargs) (line 553)
            sqrt_call_result_220954 = invoke(stypy.reporting.localization.Localization(__file__, 553, 69), sqrt_220951, *[int_220952], **kwargs_220953)
            
            # Applying the binary operator 'div' (line 553)
            result_div_220955 = python_operator(stypy.reporting.localization.Localization(__file__, 553, 66), 'div', float_220949, sqrt_call_result_220954)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 65), list_220948, result_div_220955)
            # Adding element type (line 553)
            float_220956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 81), 'float')
            
            # Call to sqrt(...): (line 553)
            # Processing the call arguments (line 553)
            int_220959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 92), 'int')
            # Processing the call keyword arguments (line 553)
            kwargs_220960 = {}
            # Getting the type of 'np' (line 553)
            np_220957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 84), 'np', False)
            # Obtaining the member 'sqrt' of a type (line 553)
            sqrt_220958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 84), np_220957, 'sqrt')
            # Calling sqrt(args, kwargs) (line 553)
            sqrt_call_result_220961 = invoke(stypy.reporting.localization.Localization(__file__, 553, 84), sqrt_220958, *[int_220959], **kwargs_220960)
            
            # Applying the binary operator 'div' (line 553)
            result_div_220962 = python_operator(stypy.reporting.localization.Localization(__file__, 553, 81), 'div', float_220956, sqrt_call_result_220961)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 65), list_220948, result_div_220962)
            # Adding element type (line 553)
            int_220963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 96), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 65), list_220948, int_220963)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 28), list_220931, list_220948)
            # Adding element type (line 553)
            
            # Obtaining an instance of the builtin type 'list' (line 553)
            list_220964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 100), 'list')
            # Adding type elements to the builtin type 'list' instance (line 553)
            # Adding element type (line 553)
            int_220965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 101), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 100), list_220964, int_220965)
            # Adding element type (line 553)
            int_220966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 104), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 100), list_220964, int_220966)
            # Adding element type (line 553)
            float_220967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 107), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 100), list_220964, float_220967)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 553, 28), list_220931, list_220964)
            
            # Processing the call keyword arguments (line 553)
            kwargs_220968 = {}
            # Getting the type of 'np' (line 553)
            np_220929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 19), 'np', False)
            # Obtaining the member 'array' of a type (line 553)
            array_220930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 19), np_220929, 'array')
            # Calling array(args, kwargs) (line 553)
            array_call_result_220969 = invoke(stypy.reporting.localization.Localization(__file__, 553, 19), array_220930, *[list_220931], **kwargs_220968)
            
            # Assigning a type to the variable 'rotn' (line 553)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 553, 12), 'rotn', array_call_result_220969)
            
            # Assigning a Call to a Name (line 554):
            
            # Assigning a Call to a Name (line 554):
            
            # Call to exp(...): (line 554)
            # Processing the call arguments (line 554)
            
            # Getting the type of 'b' (line 554)
            b_220972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 24), 'b', False)
            # Applying the 'usub' unary operator (line 554)
            result___neg___220973 = python_operator(stypy.reporting.localization.Localization(__file__, 554, 23), 'usub', b_220972)
            
            # Getting the type of 'x' (line 554)
            x_220974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 26), 'x', False)
            # Applying the binary operator '*' (line 554)
            result_mul_220975 = python_operator(stypy.reporting.localization.Localization(__file__, 554, 23), '*', result___neg___220973, x_220974)
            
            # Processing the call keyword arguments (line 554)
            kwargs_220976 = {}
            # Getting the type of 'np' (line 554)
            np_220970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 16), 'np', False)
            # Obtaining the member 'exp' of a type (line 554)
            exp_220971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 16), np_220970, 'exp')
            # Calling exp(args, kwargs) (line 554)
            exp_call_result_220977 = invoke(stypy.reporting.localization.Localization(__file__, 554, 16), exp_220971, *[result_mul_220975], **kwargs_220976)
            
            # Assigning a type to the variable 'e' (line 554)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 554, 12), 'e', exp_call_result_220977)
            
            # Call to dot(...): (line 555)
            # Processing the call arguments (line 555)
            
            # Call to vstack(...): (line 555)
            # Processing the call arguments (line 555)
            
            # Obtaining an instance of the builtin type 'tuple' (line 555)
            tuple_220982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 39), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 555)
            # Adding element type (line 555)
            # Getting the type of 'e' (line 555)
            e_220983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 39), 'e', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 555, 39), tuple_220982, e_220983)
            # Adding element type (line 555)
            
            # Getting the type of 'a' (line 555)
            a_220984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 43), 'a', False)
            # Applying the 'usub' unary operator (line 555)
            result___neg___220985 = python_operator(stypy.reporting.localization.Localization(__file__, 555, 42), 'usub', a_220984)
            
            # Getting the type of 'x' (line 555)
            x_220986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 47), 'x', False)
            # Applying the binary operator '*' (line 555)
            result_mul_220987 = python_operator(stypy.reporting.localization.Localization(__file__, 555, 42), '*', result___neg___220985, x_220986)
            
            # Getting the type of 'e' (line 555)
            e_220988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 51), 'e', False)
            # Applying the binary operator '*' (line 555)
            result_mul_220989 = python_operator(stypy.reporting.localization.Localization(__file__, 555, 49), '*', result_mul_220987, e_220988)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 555, 39), tuple_220982, result_mul_220989)
            
            # Processing the call keyword arguments (line 555)
            kwargs_220990 = {}
            # Getting the type of 'np' (line 555)
            np_220980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 28), 'np', False)
            # Obtaining the member 'vstack' of a type (line 555)
            vstack_220981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 28), np_220980, 'vstack')
            # Calling vstack(args, kwargs) (line 555)
            vstack_call_result_220991 = invoke(stypy.reporting.localization.Localization(__file__, 555, 28), vstack_220981, *[tuple_220982], **kwargs_220990)
            
            # Obtaining the member 'T' of a type (line 555)
            T_220992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 28), vstack_call_result_220991, 'T')
            # Processing the call keyword arguments (line 555)
            kwargs_220993 = {}
            # Getting the type of 'rotn' (line 555)
            rotn_220978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 19), 'rotn', False)
            # Obtaining the member 'dot' of a type (line 555)
            dot_220979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 19), rotn_220978, 'dot')
            # Calling dot(args, kwargs) (line 555)
            dot_call_result_220994 = invoke(stypy.reporting.localization.Localization(__file__, 555, 19), dot_220979, *[T_220992], **kwargs_220993)
            
            # Assigning a type to the variable 'stypy_return_type' (line 555)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 555, 12), 'stypy_return_type', dot_call_result_220994)
            
            # ################# End of 'jacp(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'jacp' in the type store
            # Getting the type of 'stypy_return_type' (line 552)
            stypy_return_type_220995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_220995)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'jacp'
            return stypy_return_type_220995

        # Assigning a type to the variable 'jacp' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'jacp', jacp)

        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 557, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x', 'a', 'b']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            # Getting the type of 'a' (line 558)
            a_220996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 19), 'a')
            
            # Call to exp(...): (line 558)
            # Processing the call arguments (line 558)
            
            # Getting the type of 'b' (line 558)
            b_220999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 31), 'b', False)
            # Applying the 'usub' unary operator (line 558)
            result___neg___221000 = python_operator(stypy.reporting.localization.Localization(__file__, 558, 30), 'usub', b_220999)
            
            # Getting the type of 'x' (line 558)
            x_221001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 33), 'x', False)
            # Applying the binary operator '*' (line 558)
            result_mul_221002 = python_operator(stypy.reporting.localization.Localization(__file__, 558, 30), '*', result___neg___221000, x_221001)
            
            # Processing the call keyword arguments (line 558)
            kwargs_221003 = {}
            # Getting the type of 'np' (line 558)
            np_220997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 23), 'np', False)
            # Obtaining the member 'exp' of a type (line 558)
            exp_220998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 23), np_220997, 'exp')
            # Calling exp(args, kwargs) (line 558)
            exp_call_result_221004 = invoke(stypy.reporting.localization.Localization(__file__, 558, 23), exp_220998, *[result_mul_221002], **kwargs_221003)
            
            # Applying the binary operator '*' (line 558)
            result_mul_221005 = python_operator(stypy.reporting.localization.Localization(__file__, 558, 19), '*', a_220996, exp_call_result_221004)
            
            # Assigning a type to the variable 'stypy_return_type' (line 558)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 558, 12), 'stypy_return_type', result_mul_221005)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 557)
            stypy_return_type_221006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221006)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_221006

        # Assigning a type to the variable 'func' (line 557)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 557, 8), 'func', func)

        @norecursion
        def jac(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'jac'
            module_type_store = module_type_store.open_function_context('jac', 560, 8, False)
            
            # Passed parameters checking function
            jac.stypy_localization = localization
            jac.stypy_type_of_self = None
            jac.stypy_type_store = module_type_store
            jac.stypy_function_name = 'jac'
            jac.stypy_param_names_list = ['x', 'a', 'b']
            jac.stypy_varargs_param_name = None
            jac.stypy_kwargs_param_name = None
            jac.stypy_call_defaults = defaults
            jac.stypy_call_varargs = varargs
            jac.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'jac', ['x', 'a', 'b'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'jac', localization, ['x', 'a', 'b'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'jac(...)' code ##################

            
            # Assigning a Call to a Name (line 561):
            
            # Assigning a Call to a Name (line 561):
            
            # Call to exp(...): (line 561)
            # Processing the call arguments (line 561)
            
            # Getting the type of 'b' (line 561)
            b_221009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 24), 'b', False)
            # Applying the 'usub' unary operator (line 561)
            result___neg___221010 = python_operator(stypy.reporting.localization.Localization(__file__, 561, 23), 'usub', b_221009)
            
            # Getting the type of 'x' (line 561)
            x_221011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 26), 'x', False)
            # Applying the binary operator '*' (line 561)
            result_mul_221012 = python_operator(stypy.reporting.localization.Localization(__file__, 561, 23), '*', result___neg___221010, x_221011)
            
            # Processing the call keyword arguments (line 561)
            kwargs_221013 = {}
            # Getting the type of 'np' (line 561)
            np_221007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 16), 'np', False)
            # Obtaining the member 'exp' of a type (line 561)
            exp_221008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 561, 16), np_221007, 'exp')
            # Calling exp(args, kwargs) (line 561)
            exp_call_result_221014 = invoke(stypy.reporting.localization.Localization(__file__, 561, 16), exp_221008, *[result_mul_221012], **kwargs_221013)
            
            # Assigning a type to the variable 'e' (line 561)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 12), 'e', exp_call_result_221014)
            
            # Call to vstack(...): (line 562)
            # Processing the call arguments (line 562)
            
            # Obtaining an instance of the builtin type 'tuple' (line 562)
            tuple_221017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 30), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 562)
            # Adding element type (line 562)
            # Getting the type of 'e' (line 562)
            e_221018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 30), 'e', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 30), tuple_221017, e_221018)
            # Adding element type (line 562)
            
            # Getting the type of 'a' (line 562)
            a_221019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 34), 'a', False)
            # Applying the 'usub' unary operator (line 562)
            result___neg___221020 = python_operator(stypy.reporting.localization.Localization(__file__, 562, 33), 'usub', a_221019)
            
            # Getting the type of 'x' (line 562)
            x_221021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 38), 'x', False)
            # Applying the binary operator '*' (line 562)
            result_mul_221022 = python_operator(stypy.reporting.localization.Localization(__file__, 562, 33), '*', result___neg___221020, x_221021)
            
            # Getting the type of 'e' (line 562)
            e_221023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 42), 'e', False)
            # Applying the binary operator '*' (line 562)
            result_mul_221024 = python_operator(stypy.reporting.localization.Localization(__file__, 562, 40), '*', result_mul_221022, e_221023)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 30), tuple_221017, result_mul_221024)
            
            # Processing the call keyword arguments (line 562)
            kwargs_221025 = {}
            # Getting the type of 'np' (line 562)
            np_221015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 19), 'np', False)
            # Obtaining the member 'vstack' of a type (line 562)
            vstack_221016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 19), np_221015, 'vstack')
            # Calling vstack(args, kwargs) (line 562)
            vstack_call_result_221026 = invoke(stypy.reporting.localization.Localization(__file__, 562, 19), vstack_221016, *[tuple_221017], **kwargs_221025)
            
            # Obtaining the member 'T' of a type (line 562)
            T_221027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 19), vstack_call_result_221026, 'T')
            # Assigning a type to the variable 'stypy_return_type' (line 562)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 12), 'stypy_return_type', T_221027)
            
            # ################# End of 'jac(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'jac' in the type store
            # Getting the type of 'stypy_return_type' (line 560)
            stypy_return_type_221028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221028)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'jac'
            return stypy_return_type_221028

        # Assigning a type to the variable 'jac' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'jac', jac)
        
        # Call to seed(...): (line 564)
        # Processing the call arguments (line 564)
        int_221032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 23), 'int')
        # Processing the call keyword arguments (line 564)
        kwargs_221033 = {}
        # Getting the type of 'np' (line 564)
        np_221029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'np', False)
        # Obtaining the member 'random' of a type (line 564)
        random_221030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 8), np_221029, 'random')
        # Obtaining the member 'seed' of a type (line 564)
        seed_221031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 8), random_221030, 'seed')
        # Calling seed(args, kwargs) (line 564)
        seed_call_result_221034 = invoke(stypy.reporting.localization.Localization(__file__, 564, 8), seed_221031, *[int_221032], **kwargs_221033)
        
        
        # Assigning a Call to a Name (line 565):
        
        # Assigning a Call to a Name (line 565):
        
        # Call to arange(...): (line 565)
        # Processing the call arguments (line 565)
        int_221037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 26), 'int')
        int_221038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 29), 'int')
        # Processing the call keyword arguments (line 565)
        kwargs_221039 = {}
        # Getting the type of 'np' (line 565)
        np_221035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 16), 'np', False)
        # Obtaining the member 'arange' of a type (line 565)
        arange_221036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 16), np_221035, 'arange')
        # Calling arange(args, kwargs) (line 565)
        arange_call_result_221040 = invoke(stypy.reporting.localization.Localization(__file__, 565, 16), arange_221036, *[int_221037, int_221038], **kwargs_221039)
        
        # Assigning a type to the variable 'xdata' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 8), 'xdata', arange_call_result_221040)
        
        # Assigning a Call to a Name (line 566):
        
        # Assigning a Call to a Name (line 566):
        
        # Call to func(...): (line 566)
        # Processing the call arguments (line 566)
        # Getting the type of 'xdata' (line 566)
        xdata_221042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 17), 'xdata', False)
        float_221043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 24), 'float')
        float_221044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 29), 'float')
        # Processing the call keyword arguments (line 566)
        kwargs_221045 = {}
        # Getting the type of 'func' (line 566)
        func_221041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 12), 'func', False)
        # Calling func(args, kwargs) (line 566)
        func_call_result_221046 = invoke(stypy.reporting.localization.Localization(__file__, 566, 12), func_221041, *[xdata_221042, float_221043, float_221044], **kwargs_221045)
        
        # Assigning a type to the variable 'y' (line 566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'y', func_call_result_221046)
        
        # Assigning a BinOp to a Name (line 567):
        
        # Assigning a BinOp to a Name (line 567):
        # Getting the type of 'y' (line 567)
        y_221047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 16), 'y')
        float_221048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 567, 20), 'float')
        
        # Call to normal(...): (line 567)
        # Processing the call keyword arguments (line 567)
        
        # Call to len(...): (line 567)
        # Processing the call arguments (line 567)
        # Getting the type of 'xdata' (line 567)
        xdata_221053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 52), 'xdata', False)
        # Processing the call keyword arguments (line 567)
        kwargs_221054 = {}
        # Getting the type of 'len' (line 567)
        len_221052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 48), 'len', False)
        # Calling len(args, kwargs) (line 567)
        len_call_result_221055 = invoke(stypy.reporting.localization.Localization(__file__, 567, 48), len_221052, *[xdata_221053], **kwargs_221054)
        
        keyword_221056 = len_call_result_221055
        kwargs_221057 = {'size': keyword_221056}
        # Getting the type of 'np' (line 567)
        np_221049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 26), 'np', False)
        # Obtaining the member 'random' of a type (line 567)
        random_221050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 26), np_221049, 'random')
        # Obtaining the member 'normal' of a type (line 567)
        normal_221051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 26), random_221050, 'normal')
        # Calling normal(args, kwargs) (line 567)
        normal_call_result_221058 = invoke(stypy.reporting.localization.Localization(__file__, 567, 26), normal_221051, *[], **kwargs_221057)
        
        # Applying the binary operator '*' (line 567)
        result_mul_221059 = python_operator(stypy.reporting.localization.Localization(__file__, 567, 20), '*', float_221048, normal_call_result_221058)
        
        # Applying the binary operator '+' (line 567)
        result_add_221060 = python_operator(stypy.reporting.localization.Localization(__file__, 567, 16), '+', y_221047, result_mul_221059)
        
        # Assigning a type to the variable 'ydata' (line 567)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'ydata', result_add_221060)
        
        # Assigning a BinOp to a Name (line 568):
        
        # Assigning a BinOp to a Name (line 568):
        
        # Call to zeros(...): (line 568)
        # Processing the call arguments (line 568)
        
        # Call to len(...): (line 568)
        # Processing the call arguments (line 568)
        # Getting the type of 'xdata' (line 568)
        xdata_221064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 29), 'xdata', False)
        # Processing the call keyword arguments (line 568)
        kwargs_221065 = {}
        # Getting the type of 'len' (line 568)
        len_221063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 25), 'len', False)
        # Calling len(args, kwargs) (line 568)
        len_call_result_221066 = invoke(stypy.reporting.localization.Localization(__file__, 568, 25), len_221063, *[xdata_221064], **kwargs_221065)
        
        # Processing the call keyword arguments (line 568)
        kwargs_221067 = {}
        # Getting the type of 'np' (line 568)
        np_221061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 16), 'np', False)
        # Obtaining the member 'zeros' of a type (line 568)
        zeros_221062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 16), np_221061, 'zeros')
        # Calling zeros(args, kwargs) (line 568)
        zeros_call_result_221068 = invoke(stypy.reporting.localization.Localization(__file__, 568, 16), zeros_221062, *[len_call_result_221066], **kwargs_221067)
        
        float_221069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 39), 'float')
        # Applying the binary operator '+' (line 568)
        result_add_221070 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 16), '+', zeros_call_result_221068, float_221069)
        
        # Assigning a type to the variable 'sigma' (line 568)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 568, 8), 'sigma', result_add_221070)
        
        # Assigning a Call to a Name (line 569):
        
        # Assigning a Call to a Name (line 569):
        
        # Call to diag(...): (line 569)
        # Processing the call arguments (line 569)
        # Getting the type of 'sigma' (line 569)
        sigma_221073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 24), 'sigma', False)
        int_221074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 31), 'int')
        # Applying the binary operator '**' (line 569)
        result_pow_221075 = python_operator(stypy.reporting.localization.Localization(__file__, 569, 24), '**', sigma_221073, int_221074)
        
        # Processing the call keyword arguments (line 569)
        kwargs_221076 = {}
        # Getting the type of 'np' (line 569)
        np_221071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 16), 'np', False)
        # Obtaining the member 'diag' of a type (line 569)
        diag_221072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 16), np_221071, 'diag')
        # Calling diag(args, kwargs) (line 569)
        diag_call_result_221077 = invoke(stypy.reporting.localization.Localization(__file__, 569, 16), diag_221072, *[result_pow_221075], **kwargs_221076)
        
        # Assigning a type to the variable 'covar' (line 569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 569, 8), 'covar', diag_call_result_221077)
        
        # Assigning a Call to a Name (line 576):
        
        # Assigning a Call to a Name (line 576):
        
        # Call to array(...): (line 576)
        # Processing the call arguments (line 576)
        
        # Obtaining an instance of the builtin type 'list' (line 576)
        list_221080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 576)
        # Adding element type (line 576)
        
        # Obtaining an instance of the builtin type 'list' (line 576)
        list_221081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 576)
        # Adding element type (line 576)
        float_221082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 26), 'float')
        
        # Call to sqrt(...): (line 576)
        # Processing the call arguments (line 576)
        int_221085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 37), 'int')
        # Processing the call keyword arguments (line 576)
        kwargs_221086 = {}
        # Getting the type of 'np' (line 576)
        np_221083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 29), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 576)
        sqrt_221084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 29), np_221083, 'sqrt')
        # Calling sqrt(args, kwargs) (line 576)
        sqrt_call_result_221087 = invoke(stypy.reporting.localization.Localization(__file__, 576, 29), sqrt_221084, *[int_221085], **kwargs_221086)
        
        # Applying the binary operator 'div' (line 576)
        result_div_221088 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 26), 'div', float_221082, sqrt_call_result_221087)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 25), list_221081, result_div_221088)
        # Adding element type (line 576)
        float_221089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 41), 'float')
        
        # Call to sqrt(...): (line 576)
        # Processing the call arguments (line 576)
        int_221092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 53), 'int')
        # Processing the call keyword arguments (line 576)
        kwargs_221093 = {}
        # Getting the type of 'np' (line 576)
        np_221090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 45), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 576)
        sqrt_221091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 45), np_221090, 'sqrt')
        # Calling sqrt(args, kwargs) (line 576)
        sqrt_call_result_221094 = invoke(stypy.reporting.localization.Localization(__file__, 576, 45), sqrt_221091, *[int_221092], **kwargs_221093)
        
        # Applying the binary operator 'div' (line 576)
        result_div_221095 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 41), 'div', float_221089, sqrt_call_result_221094)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 25), list_221081, result_div_221095)
        # Adding element type (line 576)
        int_221096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 25), list_221081, int_221096)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 24), list_221080, list_221081)
        # Adding element type (line 576)
        
        # Obtaining an instance of the builtin type 'list' (line 576)
        list_221097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 576)
        # Adding element type (line 576)
        float_221098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 62), 'float')
        
        # Call to sqrt(...): (line 576)
        # Processing the call arguments (line 576)
        int_221101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 73), 'int')
        # Processing the call keyword arguments (line 576)
        kwargs_221102 = {}
        # Getting the type of 'np' (line 576)
        np_221099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 65), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 576)
        sqrt_221100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 65), np_221099, 'sqrt')
        # Calling sqrt(args, kwargs) (line 576)
        sqrt_call_result_221103 = invoke(stypy.reporting.localization.Localization(__file__, 576, 65), sqrt_221100, *[int_221101], **kwargs_221102)
        
        # Applying the binary operator 'div' (line 576)
        result_div_221104 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 62), 'div', float_221098, sqrt_call_result_221103)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 61), list_221097, result_div_221104)
        # Adding element type (line 576)
        float_221105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 77), 'float')
        
        # Call to sqrt(...): (line 576)
        # Processing the call arguments (line 576)
        int_221108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 88), 'int')
        # Processing the call keyword arguments (line 576)
        kwargs_221109 = {}
        # Getting the type of 'np' (line 576)
        np_221106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 80), 'np', False)
        # Obtaining the member 'sqrt' of a type (line 576)
        sqrt_221107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 80), np_221106, 'sqrt')
        # Calling sqrt(args, kwargs) (line 576)
        sqrt_call_result_221110 = invoke(stypy.reporting.localization.Localization(__file__, 576, 80), sqrt_221107, *[int_221108], **kwargs_221109)
        
        # Applying the binary operator 'div' (line 576)
        result_div_221111 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 77), 'div', float_221105, sqrt_call_result_221110)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 61), list_221097, result_div_221111)
        # Adding element type (line 576)
        int_221112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 92), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 61), list_221097, int_221112)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 24), list_221080, list_221097)
        # Adding element type (line 576)
        
        # Obtaining an instance of the builtin type 'list' (line 576)
        list_221113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 96), 'list')
        # Adding type elements to the builtin type 'list' instance (line 576)
        # Adding element type (line 576)
        int_221114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 97), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 96), list_221113, int_221114)
        # Adding element type (line 576)
        int_221115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 100), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 96), list_221113, int_221115)
        # Adding element type (line 576)
        float_221116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 103), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 96), list_221113, float_221116)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 24), list_221080, list_221113)
        
        # Processing the call keyword arguments (line 576)
        kwargs_221117 = {}
        # Getting the type of 'np' (line 576)
        np_221078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 15), 'np', False)
        # Obtaining the member 'array' of a type (line 576)
        array_221079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 15), np_221078, 'array')
        # Calling array(args, kwargs) (line 576)
        array_call_result_221118 = invoke(stypy.reporting.localization.Localization(__file__, 576, 15), array_221079, *[list_221080], **kwargs_221117)
        
        # Assigning a type to the variable 'rotn' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 8), 'rotn', array_call_result_221118)
        
        # Assigning a Call to a Name (line 577):
        
        # Assigning a Call to a Name (line 577):
        
        # Call to dot(...): (line 577)
        # Processing the call arguments (line 577)
        # Getting the type of 'ydata' (line 577)
        ydata_221121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 26), 'ydata', False)
        # Processing the call keyword arguments (line 577)
        kwargs_221122 = {}
        # Getting the type of 'rotn' (line 577)
        rotn_221119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 17), 'rotn', False)
        # Obtaining the member 'dot' of a type (line 577)
        dot_221120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 577, 17), rotn_221119, 'dot')
        # Calling dot(args, kwargs) (line 577)
        dot_call_result_221123 = invoke(stypy.reporting.localization.Localization(__file__, 577, 17), dot_221120, *[ydata_221121], **kwargs_221122)
        
        # Assigning a type to the variable 'ydatap' (line 577)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 577, 8), 'ydatap', dot_call_result_221123)
        
        # Assigning a Call to a Name (line 578):
        
        # Assigning a Call to a Name (line 578):
        
        # Call to dot(...): (line 578)
        # Processing the call arguments (line 578)
        # Getting the type of 'rotn' (line 578)
        rotn_221130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 37), 'rotn', False)
        # Obtaining the member 'T' of a type (line 578)
        T_221131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 37), rotn_221130, 'T')
        # Processing the call keyword arguments (line 578)
        kwargs_221132 = {}
        
        # Call to dot(...): (line 578)
        # Processing the call arguments (line 578)
        # Getting the type of 'covar' (line 578)
        covar_221126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 26), 'covar', False)
        # Processing the call keyword arguments (line 578)
        kwargs_221127 = {}
        # Getting the type of 'rotn' (line 578)
        rotn_221124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 17), 'rotn', False)
        # Obtaining the member 'dot' of a type (line 578)
        dot_221125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 17), rotn_221124, 'dot')
        # Calling dot(args, kwargs) (line 578)
        dot_call_result_221128 = invoke(stypy.reporting.localization.Localization(__file__, 578, 17), dot_221125, *[covar_221126], **kwargs_221127)
        
        # Obtaining the member 'dot' of a type (line 578)
        dot_221129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 17), dot_call_result_221128, 'dot')
        # Calling dot(args, kwargs) (line 578)
        dot_call_result_221133 = invoke(stypy.reporting.localization.Localization(__file__, 578, 17), dot_221129, *[T_221131], **kwargs_221132)
        
        # Assigning a type to the variable 'covarp' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'covarp', dot_call_result_221133)
        
        
        # Obtaining an instance of the builtin type 'list' (line 580)
        list_221134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 580)
        # Adding element type (line 580)
        
        # Obtaining an instance of the builtin type 'tuple' (line 580)
        tuple_221135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 28), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 580)
        # Adding element type (line 580)
        # Getting the type of 'jac' (line 580)
        jac_221136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 28), 'jac')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 28), tuple_221135, jac_221136)
        # Adding element type (line 580)
        # Getting the type of 'jacp' (line 580)
        jacp_221137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 33), 'jacp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 28), tuple_221135, jacp_221137)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 26), list_221134, tuple_221135)
        # Adding element type (line 580)
        
        # Obtaining an instance of the builtin type 'tuple' (line 580)
        tuple_221138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 580, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 580)
        # Adding element type (line 580)
        # Getting the type of 'None' (line 580)
        None_221139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 41), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 41), tuple_221138, None_221139)
        # Adding element type (line 580)
        # Getting the type of 'None' (line 580)
        None_221140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 47), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 41), tuple_221138, None_221140)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 26), list_221134, tuple_221138)
        
        # Testing the type of a for loop iterable (line 580)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 580, 8), list_221134)
        # Getting the type of the for loop variable (line 580)
        for_loop_var_221141 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 580, 8), list_221134)
        # Assigning a type to the variable 'jac1' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 8), 'jac1', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 8), for_loop_var_221141))
        # Assigning a type to the variable 'jac2' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 8), 'jac2', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 580, 8), for_loop_var_221141))
        # SSA begins for a for statement (line 580)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Obtaining an instance of the builtin type 'list' (line 581)
        list_221142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 581)
        # Adding element type (line 581)
        # Getting the type of 'False' (line 581)
        False_221143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 35), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 34), list_221142, False_221143)
        # Adding element type (line 581)
        # Getting the type of 'True' (line 581)
        True_221144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 42), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 34), list_221142, True_221144)
        
        # Testing the type of a for loop iterable (line 581)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 581, 12), list_221142)
        # Getting the type of the for loop variable (line 581)
        for_loop_var_221145 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 581, 12), list_221142)
        # Assigning a type to the variable 'absolute_sigma' (line 581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 12), 'absolute_sigma', for_loop_var_221145)
        # SSA begins for a for statement (line 581)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Tuple (line 582):
        
        # Assigning a Subscript to a Name (line 582):
        
        # Obtaining the type of the subscript
        int_221146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 16), 'int')
        
        # Call to curve_fit(...): (line 582)
        # Processing the call arguments (line 582)
        # Getting the type of 'func' (line 582)
        func_221148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 41), 'func', False)
        # Getting the type of 'xdata' (line 582)
        xdata_221149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 47), 'xdata', False)
        # Getting the type of 'ydata' (line 582)
        ydata_221150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 54), 'ydata', False)
        # Processing the call keyword arguments (line 582)
        # Getting the type of 'sigma' (line 582)
        sigma_221151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 67), 'sigma', False)
        keyword_221152 = sigma_221151
        # Getting the type of 'jac1' (line 583)
        jac1_221153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 28), 'jac1', False)
        keyword_221154 = jac1_221153
        # Getting the type of 'absolute_sigma' (line 583)
        absolute_sigma_221155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 49), 'absolute_sigma', False)
        keyword_221156 = absolute_sigma_221155
        kwargs_221157 = {'absolute_sigma': keyword_221156, 'sigma': keyword_221152, 'jac': keyword_221154}
        # Getting the type of 'curve_fit' (line 582)
        curve_fit_221147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 31), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 582)
        curve_fit_call_result_221158 = invoke(stypy.reporting.localization.Localization(__file__, 582, 31), curve_fit_221147, *[func_221148, xdata_221149, ydata_221150], **kwargs_221157)
        
        # Obtaining the member '__getitem__' of a type (line 582)
        getitem___221159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 16), curve_fit_call_result_221158, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 582)
        subscript_call_result_221160 = invoke(stypy.reporting.localization.Localization(__file__, 582, 16), getitem___221159, int_221146)
        
        # Assigning a type to the variable 'tuple_var_assignment_218058' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'tuple_var_assignment_218058', subscript_call_result_221160)
        
        # Assigning a Subscript to a Name (line 582):
        
        # Obtaining the type of the subscript
        int_221161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 16), 'int')
        
        # Call to curve_fit(...): (line 582)
        # Processing the call arguments (line 582)
        # Getting the type of 'func' (line 582)
        func_221163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 41), 'func', False)
        # Getting the type of 'xdata' (line 582)
        xdata_221164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 47), 'xdata', False)
        # Getting the type of 'ydata' (line 582)
        ydata_221165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 54), 'ydata', False)
        # Processing the call keyword arguments (line 582)
        # Getting the type of 'sigma' (line 582)
        sigma_221166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 67), 'sigma', False)
        keyword_221167 = sigma_221166
        # Getting the type of 'jac1' (line 583)
        jac1_221168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 28), 'jac1', False)
        keyword_221169 = jac1_221168
        # Getting the type of 'absolute_sigma' (line 583)
        absolute_sigma_221170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 49), 'absolute_sigma', False)
        keyword_221171 = absolute_sigma_221170
        kwargs_221172 = {'absolute_sigma': keyword_221171, 'sigma': keyword_221167, 'jac': keyword_221169}
        # Getting the type of 'curve_fit' (line 582)
        curve_fit_221162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 31), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 582)
        curve_fit_call_result_221173 = invoke(stypy.reporting.localization.Localization(__file__, 582, 31), curve_fit_221162, *[func_221163, xdata_221164, ydata_221165], **kwargs_221172)
        
        # Obtaining the member '__getitem__' of a type (line 582)
        getitem___221174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 16), curve_fit_call_result_221173, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 582)
        subscript_call_result_221175 = invoke(stypy.reporting.localization.Localization(__file__, 582, 16), getitem___221174, int_221161)
        
        # Assigning a type to the variable 'tuple_var_assignment_218059' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'tuple_var_assignment_218059', subscript_call_result_221175)
        
        # Assigning a Name to a Name (line 582):
        # Getting the type of 'tuple_var_assignment_218058' (line 582)
        tuple_var_assignment_218058_221176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'tuple_var_assignment_218058')
        # Assigning a type to the variable 'popt1' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'popt1', tuple_var_assignment_218058_221176)
        
        # Assigning a Name to a Name (line 582):
        # Getting the type of 'tuple_var_assignment_218059' (line 582)
        tuple_var_assignment_218059_221177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 16), 'tuple_var_assignment_218059')
        # Assigning a type to the variable 'pcov1' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 23), 'pcov1', tuple_var_assignment_218059_221177)
        
        # Assigning a Call to a Tuple (line 584):
        
        # Assigning a Subscript to a Name (line 584):
        
        # Obtaining the type of the subscript
        int_221178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 16), 'int')
        
        # Call to curve_fit(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'funcp' (line 584)
        funcp_221180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 41), 'funcp', False)
        # Getting the type of 'xdata' (line 584)
        xdata_221181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 48), 'xdata', False)
        # Getting the type of 'ydatap' (line 584)
        ydatap_221182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 55), 'ydatap', False)
        # Processing the call keyword arguments (line 584)
        # Getting the type of 'covarp' (line 584)
        covarp_221183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 69), 'covarp', False)
        keyword_221184 = covarp_221183
        # Getting the type of 'jac2' (line 585)
        jac2_221185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 28), 'jac2', False)
        keyword_221186 = jac2_221185
        # Getting the type of 'absolute_sigma' (line 585)
        absolute_sigma_221187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 49), 'absolute_sigma', False)
        keyword_221188 = absolute_sigma_221187
        kwargs_221189 = {'absolute_sigma': keyword_221188, 'sigma': keyword_221184, 'jac': keyword_221186}
        # Getting the type of 'curve_fit' (line 584)
        curve_fit_221179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 31), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 584)
        curve_fit_call_result_221190 = invoke(stypy.reporting.localization.Localization(__file__, 584, 31), curve_fit_221179, *[funcp_221180, xdata_221181, ydatap_221182], **kwargs_221189)
        
        # Obtaining the member '__getitem__' of a type (line 584)
        getitem___221191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 16), curve_fit_call_result_221190, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 584)
        subscript_call_result_221192 = invoke(stypy.reporting.localization.Localization(__file__, 584, 16), getitem___221191, int_221178)
        
        # Assigning a type to the variable 'tuple_var_assignment_218060' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 16), 'tuple_var_assignment_218060', subscript_call_result_221192)
        
        # Assigning a Subscript to a Name (line 584):
        
        # Obtaining the type of the subscript
        int_221193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 16), 'int')
        
        # Call to curve_fit(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'funcp' (line 584)
        funcp_221195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 41), 'funcp', False)
        # Getting the type of 'xdata' (line 584)
        xdata_221196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 48), 'xdata', False)
        # Getting the type of 'ydatap' (line 584)
        ydatap_221197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 55), 'ydatap', False)
        # Processing the call keyword arguments (line 584)
        # Getting the type of 'covarp' (line 584)
        covarp_221198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 69), 'covarp', False)
        keyword_221199 = covarp_221198
        # Getting the type of 'jac2' (line 585)
        jac2_221200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 28), 'jac2', False)
        keyword_221201 = jac2_221200
        # Getting the type of 'absolute_sigma' (line 585)
        absolute_sigma_221202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 49), 'absolute_sigma', False)
        keyword_221203 = absolute_sigma_221202
        kwargs_221204 = {'absolute_sigma': keyword_221203, 'sigma': keyword_221199, 'jac': keyword_221201}
        # Getting the type of 'curve_fit' (line 584)
        curve_fit_221194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 31), 'curve_fit', False)
        # Calling curve_fit(args, kwargs) (line 584)
        curve_fit_call_result_221205 = invoke(stypy.reporting.localization.Localization(__file__, 584, 31), curve_fit_221194, *[funcp_221195, xdata_221196, ydatap_221197], **kwargs_221204)
        
        # Obtaining the member '__getitem__' of a type (line 584)
        getitem___221206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 16), curve_fit_call_result_221205, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 584)
        subscript_call_result_221207 = invoke(stypy.reporting.localization.Localization(__file__, 584, 16), getitem___221206, int_221193)
        
        # Assigning a type to the variable 'tuple_var_assignment_218061' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 16), 'tuple_var_assignment_218061', subscript_call_result_221207)
        
        # Assigning a Name to a Name (line 584):
        # Getting the type of 'tuple_var_assignment_218060' (line 584)
        tuple_var_assignment_218060_221208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 16), 'tuple_var_assignment_218060')
        # Assigning a type to the variable 'popt2' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 16), 'popt2', tuple_var_assignment_218060_221208)
        
        # Assigning a Name to a Name (line 584):
        # Getting the type of 'tuple_var_assignment_218061' (line 584)
        tuple_var_assignment_218061_221209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 16), 'tuple_var_assignment_218061')
        # Assigning a type to the variable 'pcov2' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 23), 'pcov2', tuple_var_assignment_218061_221209)
        
        # Call to assert_allclose(...): (line 587)
        # Processing the call arguments (line 587)
        # Getting the type of 'popt1' (line 587)
        popt1_221211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 32), 'popt1', False)
        # Getting the type of 'popt2' (line 587)
        popt2_221212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 39), 'popt2', False)
        # Processing the call keyword arguments (line 587)
        float_221213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 51), 'float')
        keyword_221214 = float_221213
        kwargs_221215 = {'atol': keyword_221214}
        # Getting the type of 'assert_allclose' (line 587)
        assert_allclose_221210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 16), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 587)
        assert_allclose_call_result_221216 = invoke(stypy.reporting.localization.Localization(__file__, 587, 16), assert_allclose_221210, *[popt1_221211, popt2_221212], **kwargs_221215)
        
        
        # Call to assert_allclose(...): (line 588)
        # Processing the call arguments (line 588)
        # Getting the type of 'pcov1' (line 588)
        pcov1_221218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 32), 'pcov1', False)
        # Getting the type of 'pcov2' (line 588)
        pcov2_221219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 39), 'pcov2', False)
        # Processing the call keyword arguments (line 588)
        float_221220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 51), 'float')
        keyword_221221 = float_221220
        kwargs_221222 = {'atol': keyword_221221}
        # Getting the type of 'assert_allclose' (line 588)
        assert_allclose_221217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 16), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 588)
        assert_allclose_call_result_221223 = invoke(stypy.reporting.localization.Localization(__file__, 588, 16), assert_allclose_221217, *[pcov1_221218, pcov2_221219], **kwargs_221222)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_curvefit_covariance(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_curvefit_covariance' in the type store
        # Getting the type of 'stypy_return_type' (line 546)
        stypy_return_type_221224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_221224)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_curvefit_covariance'
        return stypy_return_type_221224


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 276, 0, False)
        # Assigning a type to the variable 'self' (line 277)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCurveFit.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestCurveFit' (line 276)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 0), 'TestCurveFit', TestCurveFit)
# Declaration of the 'TestFixedPoint' class

class TestFixedPoint(object, ):

    @norecursion
    def test_scalar_trivial(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_scalar_trivial'
        module_type_store = module_type_store.open_function_context('test_scalar_trivial', 593, 4, False)
        # Assigning a type to the variable 'self' (line 594)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_localization', localization)
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_function_name', 'TestFixedPoint.test_scalar_trivial')
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_param_names_list', [])
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFixedPoint.test_scalar_trivial.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFixedPoint.test_scalar_trivial', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_scalar_trivial', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_scalar_trivial(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 595, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            float_221225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 19), 'float')
            # Getting the type of 'x' (line 596)
            x_221226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 23), 'x')
            # Applying the binary operator '*' (line 596)
            result_mul_221227 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 19), '*', float_221225, x_221226)
            
            # Assigning a type to the variable 'stypy_return_type' (line 596)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'stypy_return_type', result_mul_221227)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 595)
            stypy_return_type_221228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221228)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_221228

        # Assigning a type to the variable 'func' (line 595)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'func', func)
        
        # Assigning a Num to a Name (line 597):
        
        # Assigning a Num to a Name (line 597):
        float_221229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 13), 'float')
        # Assigning a type to the variable 'x0' (line 597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 8), 'x0', float_221229)
        
        # Assigning a Call to a Name (line 598):
        
        # Assigning a Call to a Name (line 598):
        
        # Call to fixed_point(...): (line 598)
        # Processing the call arguments (line 598)
        # Getting the type of 'func' (line 598)
        func_221231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 24), 'func', False)
        # Getting the type of 'x0' (line 598)
        x0_221232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 30), 'x0', False)
        # Processing the call keyword arguments (line 598)
        kwargs_221233 = {}
        # Getting the type of 'fixed_point' (line 598)
        fixed_point_221230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 12), 'fixed_point', False)
        # Calling fixed_point(args, kwargs) (line 598)
        fixed_point_call_result_221234 = invoke(stypy.reporting.localization.Localization(__file__, 598, 12), fixed_point_221230, *[func_221231, x0_221232], **kwargs_221233)
        
        # Assigning a type to the variable 'x' (line 598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'x', fixed_point_call_result_221234)
        
        # Call to assert_almost_equal(...): (line 599)
        # Processing the call arguments (line 599)
        # Getting the type of 'x' (line 599)
        x_221236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 28), 'x', False)
        float_221237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 31), 'float')
        # Processing the call keyword arguments (line 599)
        kwargs_221238 = {}
        # Getting the type of 'assert_almost_equal' (line 599)
        assert_almost_equal_221235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 599)
        assert_almost_equal_call_result_221239 = invoke(stypy.reporting.localization.Localization(__file__, 599, 8), assert_almost_equal_221235, *[x_221236, float_221237], **kwargs_221238)
        
        
        # ################# End of 'test_scalar_trivial(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_scalar_trivial' in the type store
        # Getting the type of 'stypy_return_type' (line 593)
        stypy_return_type_221240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_221240)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_scalar_trivial'
        return stypy_return_type_221240


    @norecursion
    def test_scalar_basic1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_scalar_basic1'
        module_type_store = module_type_store.open_function_context('test_scalar_basic1', 601, 4, False)
        # Assigning a type to the variable 'self' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_localization', localization)
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_function_name', 'TestFixedPoint.test_scalar_basic1')
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_param_names_list', [])
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFixedPoint.test_scalar_basic1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFixedPoint.test_scalar_basic1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_scalar_basic1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_scalar_basic1(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 603, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            # Getting the type of 'x' (line 604)
            x_221241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 19), 'x')
            int_221242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 22), 'int')
            # Applying the binary operator '**' (line 604)
            result_pow_221243 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 19), '**', x_221241, int_221242)
            
            # Assigning a type to the variable 'stypy_return_type' (line 604)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 12), 'stypy_return_type', result_pow_221243)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 603)
            stypy_return_type_221244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221244)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_221244

        # Assigning a type to the variable 'func' (line 603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 8), 'func', func)
        
        # Assigning a Num to a Name (line 605):
        
        # Assigning a Num to a Name (line 605):
        float_221245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 13), 'float')
        # Assigning a type to the variable 'x0' (line 605)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 605, 8), 'x0', float_221245)
        
        # Assigning a Call to a Name (line 606):
        
        # Assigning a Call to a Name (line 606):
        
        # Call to fixed_point(...): (line 606)
        # Processing the call arguments (line 606)
        # Getting the type of 'func' (line 606)
        func_221247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 24), 'func', False)
        # Getting the type of 'x0' (line 606)
        x0_221248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 30), 'x0', False)
        # Processing the call keyword arguments (line 606)
        kwargs_221249 = {}
        # Getting the type of 'fixed_point' (line 606)
        fixed_point_221246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 12), 'fixed_point', False)
        # Calling fixed_point(args, kwargs) (line 606)
        fixed_point_call_result_221250 = invoke(stypy.reporting.localization.Localization(__file__, 606, 12), fixed_point_221246, *[func_221247, x0_221248], **kwargs_221249)
        
        # Assigning a type to the variable 'x' (line 606)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 606, 8), 'x', fixed_point_call_result_221250)
        
        # Call to assert_almost_equal(...): (line 607)
        # Processing the call arguments (line 607)
        # Getting the type of 'x' (line 607)
        x_221252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 28), 'x', False)
        float_221253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 31), 'float')
        # Processing the call keyword arguments (line 607)
        kwargs_221254 = {}
        # Getting the type of 'assert_almost_equal' (line 607)
        assert_almost_equal_221251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 607)
        assert_almost_equal_call_result_221255 = invoke(stypy.reporting.localization.Localization(__file__, 607, 8), assert_almost_equal_221251, *[x_221252, float_221253], **kwargs_221254)
        
        
        # ################# End of 'test_scalar_basic1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_scalar_basic1' in the type store
        # Getting the type of 'stypy_return_type' (line 601)
        stypy_return_type_221256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_221256)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_scalar_basic1'
        return stypy_return_type_221256


    @norecursion
    def test_scalar_basic2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_scalar_basic2'
        module_type_store = module_type_store.open_function_context('test_scalar_basic2', 609, 4, False)
        # Assigning a type to the variable 'self' (line 610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 610, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_localization', localization)
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_function_name', 'TestFixedPoint.test_scalar_basic2')
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_param_names_list', [])
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFixedPoint.test_scalar_basic2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFixedPoint.test_scalar_basic2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_scalar_basic2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_scalar_basic2(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 611, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            # Getting the type of 'x' (line 612)
            x_221257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 19), 'x')
            float_221258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 22), 'float')
            # Applying the binary operator '**' (line 612)
            result_pow_221259 = python_operator(stypy.reporting.localization.Localization(__file__, 612, 19), '**', x_221257, float_221258)
            
            # Assigning a type to the variable 'stypy_return_type' (line 612)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 12), 'stypy_return_type', result_pow_221259)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 611)
            stypy_return_type_221260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221260)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_221260

        # Assigning a type to the variable 'func' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'func', func)
        
        # Assigning a Num to a Name (line 613):
        
        # Assigning a Num to a Name (line 613):
        float_221261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 13), 'float')
        # Assigning a type to the variable 'x0' (line 613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 8), 'x0', float_221261)
        
        # Assigning a Call to a Name (line 614):
        
        # Assigning a Call to a Name (line 614):
        
        # Call to fixed_point(...): (line 614)
        # Processing the call arguments (line 614)
        # Getting the type of 'func' (line 614)
        func_221263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 24), 'func', False)
        # Getting the type of 'x0' (line 614)
        x0_221264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 30), 'x0', False)
        # Processing the call keyword arguments (line 614)
        kwargs_221265 = {}
        # Getting the type of 'fixed_point' (line 614)
        fixed_point_221262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 12), 'fixed_point', False)
        # Calling fixed_point(args, kwargs) (line 614)
        fixed_point_call_result_221266 = invoke(stypy.reporting.localization.Localization(__file__, 614, 12), fixed_point_221262, *[func_221263, x0_221264], **kwargs_221265)
        
        # Assigning a type to the variable 'x' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'x', fixed_point_call_result_221266)
        
        # Call to assert_almost_equal(...): (line 615)
        # Processing the call arguments (line 615)
        # Getting the type of 'x' (line 615)
        x_221268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 28), 'x', False)
        float_221269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 31), 'float')
        # Processing the call keyword arguments (line 615)
        kwargs_221270 = {}
        # Getting the type of 'assert_almost_equal' (line 615)
        assert_almost_equal_221267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 615)
        assert_almost_equal_call_result_221271 = invoke(stypy.reporting.localization.Localization(__file__, 615, 8), assert_almost_equal_221267, *[x_221268, float_221269], **kwargs_221270)
        
        
        # ################# End of 'test_scalar_basic2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_scalar_basic2' in the type store
        # Getting the type of 'stypy_return_type' (line 609)
        stypy_return_type_221272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_221272)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_scalar_basic2'
        return stypy_return_type_221272


    @norecursion
    def test_array_trivial(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_array_trivial'
        module_type_store = module_type_store.open_function_context('test_array_trivial', 617, 4, False)
        # Assigning a type to the variable 'self' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_localization', localization)
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_function_name', 'TestFixedPoint.test_array_trivial')
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_param_names_list', [])
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFixedPoint.test_array_trivial.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFixedPoint.test_array_trivial', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_array_trivial', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_array_trivial(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 618, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            float_221273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 19), 'float')
            # Getting the type of 'x' (line 619)
            x_221274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 23), 'x')
            # Applying the binary operator '*' (line 619)
            result_mul_221275 = python_operator(stypy.reporting.localization.Localization(__file__, 619, 19), '*', float_221273, x_221274)
            
            # Assigning a type to the variable 'stypy_return_type' (line 619)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 12), 'stypy_return_type', result_mul_221275)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 618)
            stypy_return_type_221276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221276)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_221276

        # Assigning a type to the variable 'func' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'func', func)
        
        # Assigning a List to a Name (line 620):
        
        # Assigning a List to a Name (line 620):
        
        # Obtaining an instance of the builtin type 'list' (line 620)
        list_221277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 620)
        # Adding element type (line 620)
        float_221278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 14), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 13), list_221277, float_221278)
        # Adding element type (line 620)
        float_221279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 13), list_221277, float_221279)
        
        # Assigning a type to the variable 'x0' (line 620)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 620, 8), 'x0', list_221277)
        
        # Assigning a Call to a Name (line 621):
        
        # Assigning a Call to a Name (line 621):
        
        # Call to seterr(...): (line 621)
        # Processing the call keyword arguments (line 621)
        str_221282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 31), 'str', 'ignore')
        keyword_221283 = str_221282
        kwargs_221284 = {'all': keyword_221283}
        # Getting the type of 'np' (line 621)
        np_221280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 17), 'np', False)
        # Obtaining the member 'seterr' of a type (line 621)
        seterr_221281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 17), np_221280, 'seterr')
        # Calling seterr(args, kwargs) (line 621)
        seterr_call_result_221285 = invoke(stypy.reporting.localization.Localization(__file__, 621, 17), seterr_221281, *[], **kwargs_221284)
        
        # Assigning a type to the variable 'olderr' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'olderr', seterr_call_result_221285)
        
        # Try-finally block (line 622)
        
        # Assigning a Call to a Name (line 623):
        
        # Assigning a Call to a Name (line 623):
        
        # Call to fixed_point(...): (line 623)
        # Processing the call arguments (line 623)
        # Getting the type of 'func' (line 623)
        func_221287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 28), 'func', False)
        # Getting the type of 'x0' (line 623)
        x0_221288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 34), 'x0', False)
        # Processing the call keyword arguments (line 623)
        kwargs_221289 = {}
        # Getting the type of 'fixed_point' (line 623)
        fixed_point_221286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 16), 'fixed_point', False)
        # Calling fixed_point(args, kwargs) (line 623)
        fixed_point_call_result_221290 = invoke(stypy.reporting.localization.Localization(__file__, 623, 16), fixed_point_221286, *[func_221287, x0_221288], **kwargs_221289)
        
        # Assigning a type to the variable 'x' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 12), 'x', fixed_point_call_result_221290)
        
        # finally branch of the try-finally block (line 622)
        
        # Call to seterr(...): (line 625)
        # Processing the call keyword arguments (line 625)
        # Getting the type of 'olderr' (line 625)
        olderr_221293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 24), 'olderr', False)
        kwargs_221294 = {'olderr_221293': olderr_221293}
        # Getting the type of 'np' (line 625)
        np_221291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 12), 'np', False)
        # Obtaining the member 'seterr' of a type (line 625)
        seterr_221292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 625, 12), np_221291, 'seterr')
        # Calling seterr(args, kwargs) (line 625)
        seterr_call_result_221295 = invoke(stypy.reporting.localization.Localization(__file__, 625, 12), seterr_221292, *[], **kwargs_221294)
        
        
        
        # Call to assert_almost_equal(...): (line 626)
        # Processing the call arguments (line 626)
        # Getting the type of 'x' (line 626)
        x_221297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 28), 'x', False)
        
        # Obtaining an instance of the builtin type 'list' (line 626)
        list_221298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 626)
        # Adding element type (line 626)
        float_221299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 31), list_221298, float_221299)
        # Adding element type (line 626)
        float_221300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 626, 31), list_221298, float_221300)
        
        # Processing the call keyword arguments (line 626)
        kwargs_221301 = {}
        # Getting the type of 'assert_almost_equal' (line 626)
        assert_almost_equal_221296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 626)
        assert_almost_equal_call_result_221302 = invoke(stypy.reporting.localization.Localization(__file__, 626, 8), assert_almost_equal_221296, *[x_221297, list_221298], **kwargs_221301)
        
        
        # ################# End of 'test_array_trivial(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_array_trivial' in the type store
        # Getting the type of 'stypy_return_type' (line 617)
        stypy_return_type_221303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_221303)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_array_trivial'
        return stypy_return_type_221303


    @norecursion
    def test_array_basic1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_array_basic1'
        module_type_store = module_type_store.open_function_context('test_array_basic1', 628, 4, False)
        # Assigning a type to the variable 'self' (line 629)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 629, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_localization', localization)
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_function_name', 'TestFixedPoint.test_array_basic1')
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_param_names_list', [])
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFixedPoint.test_array_basic1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFixedPoint.test_array_basic1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_array_basic1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_array_basic1(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 630, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x', 'c']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x', 'c'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x', 'c'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            # Getting the type of 'c' (line 631)
            c_221304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 19), 'c')
            # Getting the type of 'x' (line 631)
            x_221305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 23), 'x')
            int_221306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 26), 'int')
            # Applying the binary operator '**' (line 631)
            result_pow_221307 = python_operator(stypy.reporting.localization.Localization(__file__, 631, 23), '**', x_221305, int_221306)
            
            # Applying the binary operator '*' (line 631)
            result_mul_221308 = python_operator(stypy.reporting.localization.Localization(__file__, 631, 19), '*', c_221304, result_pow_221307)
            
            # Assigning a type to the variable 'stypy_return_type' (line 631)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 631, 12), 'stypy_return_type', result_mul_221308)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 630)
            stypy_return_type_221309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221309)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_221309

        # Assigning a type to the variable 'func' (line 630)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'func', func)
        
        # Assigning a Call to a Name (line 632):
        
        # Assigning a Call to a Name (line 632):
        
        # Call to array(...): (line 632)
        # Processing the call arguments (line 632)
        
        # Obtaining an instance of the builtin type 'list' (line 632)
        list_221311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 632)
        # Adding element type (line 632)
        float_221312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 632, 18), list_221311, float_221312)
        # Adding element type (line 632)
        float_221313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 632, 18), list_221311, float_221313)
        # Adding element type (line 632)
        float_221314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 30), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 632, 18), list_221311, float_221314)
        
        # Processing the call keyword arguments (line 632)
        kwargs_221315 = {}
        # Getting the type of 'array' (line 632)
        array_221310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 12), 'array', False)
        # Calling array(args, kwargs) (line 632)
        array_call_result_221316 = invoke(stypy.reporting.localization.Localization(__file__, 632, 12), array_221310, *[list_221311], **kwargs_221315)
        
        # Assigning a type to the variable 'c' (line 632)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 632, 8), 'c', array_call_result_221316)
        
        # Assigning a List to a Name (line 633):
        
        # Assigning a List to a Name (line 633):
        
        # Obtaining an instance of the builtin type 'list' (line 633)
        list_221317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 633, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 633)
        # Adding element type (line 633)
        float_221318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 633, 14), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 633, 13), list_221317, float_221318)
        # Adding element type (line 633)
        float_221319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 633, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 633, 13), list_221317, float_221319)
        # Adding element type (line 633)
        float_221320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 633, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 633, 13), list_221317, float_221320)
        
        # Assigning a type to the variable 'x0' (line 633)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 633, 8), 'x0', list_221317)
        
        # Assigning a Call to a Name (line 634):
        
        # Assigning a Call to a Name (line 634):
        
        # Call to seterr(...): (line 634)
        # Processing the call keyword arguments (line 634)
        str_221323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 634, 31), 'str', 'ignore')
        keyword_221324 = str_221323
        kwargs_221325 = {'all': keyword_221324}
        # Getting the type of 'np' (line 634)
        np_221321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 17), 'np', False)
        # Obtaining the member 'seterr' of a type (line 634)
        seterr_221322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 17), np_221321, 'seterr')
        # Calling seterr(args, kwargs) (line 634)
        seterr_call_result_221326 = invoke(stypy.reporting.localization.Localization(__file__, 634, 17), seterr_221322, *[], **kwargs_221325)
        
        # Assigning a type to the variable 'olderr' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'olderr', seterr_call_result_221326)
        
        # Try-finally block (line 635)
        
        # Assigning a Call to a Name (line 636):
        
        # Assigning a Call to a Name (line 636):
        
        # Call to fixed_point(...): (line 636)
        # Processing the call arguments (line 636)
        # Getting the type of 'func' (line 636)
        func_221328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 28), 'func', False)
        # Getting the type of 'x0' (line 636)
        x0_221329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 34), 'x0', False)
        # Processing the call keyword arguments (line 636)
        
        # Obtaining an instance of the builtin type 'tuple' (line 636)
        tuple_221330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 636)
        # Adding element type (line 636)
        # Getting the type of 'c' (line 636)
        c_221331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 44), 'c', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 44), tuple_221330, c_221331)
        
        keyword_221332 = tuple_221330
        kwargs_221333 = {'args': keyword_221332}
        # Getting the type of 'fixed_point' (line 636)
        fixed_point_221327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 16), 'fixed_point', False)
        # Calling fixed_point(args, kwargs) (line 636)
        fixed_point_call_result_221334 = invoke(stypy.reporting.localization.Localization(__file__, 636, 16), fixed_point_221327, *[func_221328, x0_221329], **kwargs_221333)
        
        # Assigning a type to the variable 'x' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 12), 'x', fixed_point_call_result_221334)
        
        # finally branch of the try-finally block (line 635)
        
        # Call to seterr(...): (line 638)
        # Processing the call keyword arguments (line 638)
        # Getting the type of 'olderr' (line 638)
        olderr_221337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 24), 'olderr', False)
        kwargs_221338 = {'olderr_221337': olderr_221337}
        # Getting the type of 'np' (line 638)
        np_221335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 12), 'np', False)
        # Obtaining the member 'seterr' of a type (line 638)
        seterr_221336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 12), np_221335, 'seterr')
        # Calling seterr(args, kwargs) (line 638)
        seterr_call_result_221339 = invoke(stypy.reporting.localization.Localization(__file__, 638, 12), seterr_221336, *[], **kwargs_221338)
        
        
        
        # Call to assert_almost_equal(...): (line 639)
        # Processing the call arguments (line 639)
        # Getting the type of 'x' (line 639)
        x_221341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 28), 'x', False)
        float_221342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 31), 'float')
        # Getting the type of 'c' (line 639)
        c_221343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 35), 'c', False)
        # Applying the binary operator 'div' (line 639)
        result_div_221344 = python_operator(stypy.reporting.localization.Localization(__file__, 639, 31), 'div', float_221342, c_221343)
        
        # Processing the call keyword arguments (line 639)
        kwargs_221345 = {}
        # Getting the type of 'assert_almost_equal' (line 639)
        assert_almost_equal_221340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 639)
        assert_almost_equal_call_result_221346 = invoke(stypy.reporting.localization.Localization(__file__, 639, 8), assert_almost_equal_221340, *[x_221341, result_div_221344], **kwargs_221345)
        
        
        # ################# End of 'test_array_basic1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_array_basic1' in the type store
        # Getting the type of 'stypy_return_type' (line 628)
        stypy_return_type_221347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_221347)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_array_basic1'
        return stypy_return_type_221347


    @norecursion
    def test_array_basic2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_array_basic2'
        module_type_store = module_type_store.open_function_context('test_array_basic2', 641, 4, False)
        # Assigning a type to the variable 'self' (line 642)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 642, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_localization', localization)
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_function_name', 'TestFixedPoint.test_array_basic2')
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_param_names_list', [])
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFixedPoint.test_array_basic2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFixedPoint.test_array_basic2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_array_basic2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_array_basic2(...)' code ##################


        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 643, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['x', 'c']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['x', 'c'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['x', 'c'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            # Getting the type of 'c' (line 644)
            c_221348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 19), 'c')
            # Getting the type of 'x' (line 644)
            x_221349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 23), 'x')
            float_221350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 26), 'float')
            # Applying the binary operator '**' (line 644)
            result_pow_221351 = python_operator(stypy.reporting.localization.Localization(__file__, 644, 23), '**', x_221349, float_221350)
            
            # Applying the binary operator '*' (line 644)
            result_mul_221352 = python_operator(stypy.reporting.localization.Localization(__file__, 644, 19), '*', c_221348, result_pow_221351)
            
            # Assigning a type to the variable 'stypy_return_type' (line 644)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 12), 'stypy_return_type', result_mul_221352)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 643)
            stypy_return_type_221353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221353)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_221353

        # Assigning a type to the variable 'func' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 8), 'func', func)
        
        # Assigning a Call to a Name (line 645):
        
        # Assigning a Call to a Name (line 645):
        
        # Call to array(...): (line 645)
        # Processing the call arguments (line 645)
        
        # Obtaining an instance of the builtin type 'list' (line 645)
        list_221355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 645)
        # Adding element type (line 645)
        float_221356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 645, 18), list_221355, float_221356)
        # Adding element type (line 645)
        float_221357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 645, 18), list_221355, float_221357)
        # Adding element type (line 645)
        float_221358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 30), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 645, 18), list_221355, float_221358)
        
        # Processing the call keyword arguments (line 645)
        kwargs_221359 = {}
        # Getting the type of 'array' (line 645)
        array_221354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 12), 'array', False)
        # Calling array(args, kwargs) (line 645)
        array_call_result_221360 = invoke(stypy.reporting.localization.Localization(__file__, 645, 12), array_221354, *[list_221355], **kwargs_221359)
        
        # Assigning a type to the variable 'c' (line 645)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 645, 8), 'c', array_call_result_221360)
        
        # Assigning a List to a Name (line 646):
        
        # Assigning a List to a Name (line 646):
        
        # Obtaining an instance of the builtin type 'list' (line 646)
        list_221361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 646, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 646)
        # Adding element type (line 646)
        float_221362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 646, 14), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 646, 13), list_221361, float_221362)
        # Adding element type (line 646)
        float_221363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 646, 19), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 646, 13), list_221361, float_221363)
        # Adding element type (line 646)
        float_221364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 646, 24), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 646, 13), list_221361, float_221364)
        
        # Assigning a type to the variable 'x0' (line 646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 8), 'x0', list_221361)
        
        # Assigning a Call to a Name (line 647):
        
        # Assigning a Call to a Name (line 647):
        
        # Call to fixed_point(...): (line 647)
        # Processing the call arguments (line 647)
        # Getting the type of 'func' (line 647)
        func_221366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 24), 'func', False)
        # Getting the type of 'x0' (line 647)
        x0_221367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 30), 'x0', False)
        # Processing the call keyword arguments (line 647)
        
        # Obtaining an instance of the builtin type 'tuple' (line 647)
        tuple_221368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 647)
        # Adding element type (line 647)
        # Getting the type of 'c' (line 647)
        c_221369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 40), 'c', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 647, 40), tuple_221368, c_221369)
        
        keyword_221370 = tuple_221368
        kwargs_221371 = {'args': keyword_221370}
        # Getting the type of 'fixed_point' (line 647)
        fixed_point_221365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 12), 'fixed_point', False)
        # Calling fixed_point(args, kwargs) (line 647)
        fixed_point_call_result_221372 = invoke(stypy.reporting.localization.Localization(__file__, 647, 12), fixed_point_221365, *[func_221366, x0_221367], **kwargs_221371)
        
        # Assigning a type to the variable 'x' (line 647)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 8), 'x', fixed_point_call_result_221372)
        
        # Call to assert_almost_equal(...): (line 648)
        # Processing the call arguments (line 648)
        # Getting the type of 'x' (line 648)
        x_221374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 28), 'x', False)
        # Getting the type of 'c' (line 648)
        c_221375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 31), 'c', False)
        int_221376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 34), 'int')
        # Applying the binary operator '**' (line 648)
        result_pow_221377 = python_operator(stypy.reporting.localization.Localization(__file__, 648, 31), '**', c_221375, int_221376)
        
        # Processing the call keyword arguments (line 648)
        kwargs_221378 = {}
        # Getting the type of 'assert_almost_equal' (line 648)
        assert_almost_equal_221373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 8), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 648)
        assert_almost_equal_call_result_221379 = invoke(stypy.reporting.localization.Localization(__file__, 648, 8), assert_almost_equal_221373, *[x_221374, result_pow_221377], **kwargs_221378)
        
        
        # ################# End of 'test_array_basic2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_array_basic2' in the type store
        # Getting the type of 'stypy_return_type' (line 641)
        stypy_return_type_221380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_221380)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_array_basic2'
        return stypy_return_type_221380


    @norecursion
    def test_lambertw(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_lambertw'
        module_type_store = module_type_store.open_function_context('test_lambertw', 650, 4, False)
        # Assigning a type to the variable 'self' (line 651)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 651, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_localization', localization)
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_function_name', 'TestFixedPoint.test_lambertw')
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_param_names_list', [])
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFixedPoint.test_lambertw.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFixedPoint.test_lambertw', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_lambertw', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_lambertw(...)' code ##################

        
        # Assigning a Call to a Name (line 652):
        
        # Assigning a Call to a Name (line 652):
        
        # Call to fixed_point(...): (line 652)
        # Processing the call arguments (line 652)

        @norecursion
        def _stypy_temp_lambda_86(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_86'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_86', 652, 29, True)
            # Passed parameters checking function
            _stypy_temp_lambda_86.stypy_localization = localization
            _stypy_temp_lambda_86.stypy_type_of_self = None
            _stypy_temp_lambda_86.stypy_type_store = module_type_store
            _stypy_temp_lambda_86.stypy_function_name = '_stypy_temp_lambda_86'
            _stypy_temp_lambda_86.stypy_param_names_list = ['xx']
            _stypy_temp_lambda_86.stypy_varargs_param_name = None
            _stypy_temp_lambda_86.stypy_kwargs_param_name = None
            _stypy_temp_lambda_86.stypy_call_defaults = defaults
            _stypy_temp_lambda_86.stypy_call_varargs = varargs
            _stypy_temp_lambda_86.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_86', ['xx'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_86', ['xx'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to exp(...): (line 652)
            # Processing the call arguments (line 652)
            float_221384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 47), 'float')
            # Getting the type of 'xx' (line 652)
            xx_221385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 52), 'xx', False)
            # Applying the binary operator '*' (line 652)
            result_mul_221386 = python_operator(stypy.reporting.localization.Localization(__file__, 652, 47), '*', float_221384, xx_221385)
            
            # Processing the call keyword arguments (line 652)
            kwargs_221387 = {}
            # Getting the type of 'np' (line 652)
            np_221382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 40), 'np', False)
            # Obtaining the member 'exp' of a type (line 652)
            exp_221383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 652, 40), np_221382, 'exp')
            # Calling exp(args, kwargs) (line 652)
            exp_call_result_221388 = invoke(stypy.reporting.localization.Localization(__file__, 652, 40), exp_221383, *[result_mul_221386], **kwargs_221387)
            
            float_221389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 56), 'float')
            # Applying the binary operator 'div' (line 652)
            result_div_221390 = python_operator(stypy.reporting.localization.Localization(__file__, 652, 40), 'div', exp_call_result_221388, float_221389)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 652)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 29), 'stypy_return_type', result_div_221390)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_86' in the type store
            # Getting the type of 'stypy_return_type' (line 652)
            stypy_return_type_221391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 29), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221391)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_86'
            return stypy_return_type_221391

        # Assigning a type to the variable '_stypy_temp_lambda_86' (line 652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 29), '_stypy_temp_lambda_86', _stypy_temp_lambda_86)
        # Getting the type of '_stypy_temp_lambda_86' (line 652)
        _stypy_temp_lambda_86_221392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 29), '_stypy_temp_lambda_86')
        float_221393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 61), 'float')
        # Processing the call keyword arguments (line 652)
        
        # Obtaining an instance of the builtin type 'tuple' (line 653)
        tuple_221394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 653)
        
        keyword_221395 = tuple_221394
        float_221396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 30), 'float')
        keyword_221397 = float_221396
        int_221398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 45), 'int')
        keyword_221399 = int_221398
        kwargs_221400 = {'xtol': keyword_221397, 'args': keyword_221395, 'maxiter': keyword_221399}
        # Getting the type of 'fixed_point' (line 652)
        fixed_point_221381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 17), 'fixed_point', False)
        # Calling fixed_point(args, kwargs) (line 652)
        fixed_point_call_result_221401 = invoke(stypy.reporting.localization.Localization(__file__, 652, 17), fixed_point_221381, *[_stypy_temp_lambda_86_221392, float_221393], **kwargs_221400)
        
        # Assigning a type to the variable 'xxroot' (line 652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 8), 'xxroot', fixed_point_call_result_221401)
        
        # Call to assert_allclose(...): (line 654)
        # Processing the call arguments (line 654)
        # Getting the type of 'xxroot' (line 654)
        xxroot_221403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 24), 'xxroot', False)
        
        # Call to exp(...): (line 654)
        # Processing the call arguments (line 654)
        float_221406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 39), 'float')
        # Getting the type of 'xxroot' (line 654)
        xxroot_221407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 44), 'xxroot', False)
        # Applying the binary operator '*' (line 654)
        result_mul_221408 = python_operator(stypy.reporting.localization.Localization(__file__, 654, 39), '*', float_221406, xxroot_221407)
        
        # Processing the call keyword arguments (line 654)
        kwargs_221409 = {}
        # Getting the type of 'np' (line 654)
        np_221404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 32), 'np', False)
        # Obtaining the member 'exp' of a type (line 654)
        exp_221405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 32), np_221404, 'exp')
        # Calling exp(args, kwargs) (line 654)
        exp_call_result_221410 = invoke(stypy.reporting.localization.Localization(__file__, 654, 32), exp_221405, *[result_mul_221408], **kwargs_221409)
        
        float_221411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 52), 'float')
        # Applying the binary operator 'div' (line 654)
        result_div_221412 = python_operator(stypy.reporting.localization.Localization(__file__, 654, 32), 'div', exp_call_result_221410, float_221411)
        
        # Processing the call keyword arguments (line 654)
        kwargs_221413 = {}
        # Getting the type of 'assert_allclose' (line 654)
        assert_allclose_221402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 654)
        assert_allclose_call_result_221414 = invoke(stypy.reporting.localization.Localization(__file__, 654, 8), assert_allclose_221402, *[xxroot_221403, result_div_221412], **kwargs_221413)
        
        
        # Call to assert_allclose(...): (line 655)
        # Processing the call arguments (line 655)
        # Getting the type of 'xxroot' (line 655)
        xxroot_221416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 24), 'xxroot', False)
        
        # Call to lambertw(...): (line 655)
        # Processing the call arguments (line 655)
        int_221418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 41), 'int')
        # Processing the call keyword arguments (line 655)
        kwargs_221419 = {}
        # Getting the type of 'lambertw' (line 655)
        lambertw_221417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 32), 'lambertw', False)
        # Calling lambertw(args, kwargs) (line 655)
        lambertw_call_result_221420 = invoke(stypy.reporting.localization.Localization(__file__, 655, 32), lambertw_221417, *[int_221418], **kwargs_221419)
        
        int_221421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 44), 'int')
        # Applying the binary operator 'div' (line 655)
        result_div_221422 = python_operator(stypy.reporting.localization.Localization(__file__, 655, 32), 'div', lambertw_call_result_221420, int_221421)
        
        # Processing the call keyword arguments (line 655)
        kwargs_221423 = {}
        # Getting the type of 'assert_allclose' (line 655)
        assert_allclose_221415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 655)
        assert_allclose_call_result_221424 = invoke(stypy.reporting.localization.Localization(__file__, 655, 8), assert_allclose_221415, *[xxroot_221416, result_div_221422], **kwargs_221423)
        
        
        # ################# End of 'test_lambertw(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_lambertw' in the type store
        # Getting the type of 'stypy_return_type' (line 650)
        stypy_return_type_221425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_221425)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_lambertw'
        return stypy_return_type_221425


    @norecursion
    def test_no_acceleration(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_no_acceleration'
        module_type_store = module_type_store.open_function_context('test_no_acceleration', 657, 4, False)
        # Assigning a type to the variable 'self' (line 658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 658, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_localization', localization)
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_function_name', 'TestFixedPoint.test_no_acceleration')
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_param_names_list', [])
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFixedPoint.test_no_acceleration.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFixedPoint.test_no_acceleration', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_no_acceleration', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_no_acceleration(...)' code ##################

        
        # Assigning a Num to a Name (line 659):
        
        # Assigning a Num to a Name (line 659):
        int_221426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 13), 'int')
        # Assigning a type to the variable 'ks' (line 659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 659, 8), 'ks', int_221426)
        
        # Assigning a Num to a Name (line 660):
        
        # Assigning a Num to a Name (line 660):
        int_221427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 13), 'int')
        # Assigning a type to the variable 'kl' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'kl', int_221427)
        
        # Assigning a Num to a Name (line 661):
        
        # Assigning a Num to a Name (line 661):
        float_221428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 12), 'float')
        # Assigning a type to the variable 'm' (line 661)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 661, 8), 'm', float_221428)
        
        # Assigning a Num to a Name (line 662):
        
        # Assigning a Num to a Name (line 662):
        float_221429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 13), 'float')
        # Assigning a type to the variable 'n0' (line 662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 662, 8), 'n0', float_221429)
        
        # Assigning a BinOp to a Name (line 663):
        
        # Assigning a BinOp to a Name (line 663):
        # Getting the type of 'm' (line 663)
        m_221430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 15), 'm')
        int_221431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 17), 'int')
        # Applying the binary operator '-' (line 663)
        result_sub_221432 = python_operator(stypy.reporting.localization.Localization(__file__, 663, 15), '-', m_221430, int_221431)
        
        # Getting the type of 'm' (line 663)
        m_221433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 20), 'm')
        # Applying the binary operator 'div' (line 663)
        result_div_221434 = python_operator(stypy.reporting.localization.Localization(__file__, 663, 14), 'div', result_sub_221432, m_221433)
        
        # Getting the type of 'kl' (line 663)
        kl_221435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 24), 'kl')
        # Getting the type of 'ks' (line 663)
        ks_221436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 27), 'ks')
        # Applying the binary operator 'div' (line 663)
        result_div_221437 = python_operator(stypy.reporting.localization.Localization(__file__, 663, 24), 'div', kl_221435, ks_221436)
        
        # Getting the type of 'm' (line 663)
        m_221438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 30), 'm')
        # Applying the binary operator 'div' (line 663)
        result_div_221439 = python_operator(stypy.reporting.localization.Localization(__file__, 663, 29), 'div', result_div_221437, m_221438)
        
        int_221440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 35), 'int')
        # Getting the type of 'm' (line 663)
        m_221441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 38), 'm')
        int_221442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 40), 'int')
        # Applying the binary operator '-' (line 663)
        result_sub_221443 = python_operator(stypy.reporting.localization.Localization(__file__, 663, 38), '-', m_221441, int_221442)
        
        # Applying the binary operator 'div' (line 663)
        result_div_221444 = python_operator(stypy.reporting.localization.Localization(__file__, 663, 35), 'div', int_221440, result_sub_221443)
        
        # Applying the binary operator '**' (line 663)
        result_pow_221445 = python_operator(stypy.reporting.localization.Localization(__file__, 663, 23), '**', result_div_221439, result_div_221444)
        
        # Applying the binary operator '*' (line 663)
        result_mul_221446 = python_operator(stypy.reporting.localization.Localization(__file__, 663, 13), '*', result_div_221434, result_pow_221445)
        
        # Assigning a type to the variable 'i0' (line 663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 663, 8), 'i0', result_mul_221446)

        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 665, 8, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['n']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['n'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['n'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            
            # Call to log(...): (line 666)
            # Processing the call arguments (line 666)
            # Getting the type of 'kl' (line 666)
            kl_221449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 26), 'kl', False)
            # Getting the type of 'ks' (line 666)
            ks_221450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 29), 'ks', False)
            # Applying the binary operator 'div' (line 666)
            result_div_221451 = python_operator(stypy.reporting.localization.Localization(__file__, 666, 26), 'div', kl_221449, ks_221450)
            
            # Getting the type of 'n' (line 666)
            n_221452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 32), 'n', False)
            # Applying the binary operator 'div' (line 666)
            result_div_221453 = python_operator(stypy.reporting.localization.Localization(__file__, 666, 31), 'div', result_div_221451, n_221452)
            
            # Processing the call keyword arguments (line 666)
            kwargs_221454 = {}
            # Getting the type of 'np' (line 666)
            np_221447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 19), 'np', False)
            # Obtaining the member 'log' of a type (line 666)
            log_221448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 19), np_221447, 'log')
            # Calling log(args, kwargs) (line 666)
            log_call_result_221455 = invoke(stypy.reporting.localization.Localization(__file__, 666, 19), log_221448, *[result_div_221453], **kwargs_221454)
            
            
            # Call to log(...): (line 666)
            # Processing the call arguments (line 666)
            # Getting the type of 'i0' (line 666)
            i0_221458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 45), 'i0', False)
            # Getting the type of 'n' (line 666)
            n_221459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 48), 'n', False)
            # Applying the binary operator '*' (line 666)
            result_mul_221460 = python_operator(stypy.reporting.localization.Localization(__file__, 666, 45), '*', i0_221458, n_221459)
            
            # Getting the type of 'n' (line 666)
            n_221461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 51), 'n', False)
            int_221462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 55), 'int')
            # Applying the binary operator '-' (line 666)
            result_sub_221463 = python_operator(stypy.reporting.localization.Localization(__file__, 666, 51), '-', n_221461, int_221462)
            
            # Applying the binary operator 'div' (line 666)
            result_div_221464 = python_operator(stypy.reporting.localization.Localization(__file__, 666, 49), 'div', result_mul_221460, result_sub_221463)
            
            # Processing the call keyword arguments (line 666)
            kwargs_221465 = {}
            # Getting the type of 'np' (line 666)
            np_221456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 37), 'np', False)
            # Obtaining the member 'log' of a type (line 666)
            log_221457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 37), np_221456, 'log')
            # Calling log(args, kwargs) (line 666)
            log_call_result_221466 = invoke(stypy.reporting.localization.Localization(__file__, 666, 37), log_221457, *[result_div_221464], **kwargs_221465)
            
            # Applying the binary operator 'div' (line 666)
            result_div_221467 = python_operator(stypy.reporting.localization.Localization(__file__, 666, 19), 'div', log_call_result_221455, log_call_result_221466)
            
            int_221468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 62), 'int')
            # Applying the binary operator '+' (line 666)
            result_add_221469 = python_operator(stypy.reporting.localization.Localization(__file__, 666, 19), '+', result_div_221467, int_221468)
            
            # Assigning a type to the variable 'stypy_return_type' (line 666)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 12), 'stypy_return_type', result_add_221469)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 665)
            stypy_return_type_221470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_221470)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_221470

        # Assigning a type to the variable 'func' (line 665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 665, 8), 'func', func)
        
        # Assigning a Call to a Name (line 668):
        
        # Assigning a Call to a Name (line 668):
        
        # Call to fixed_point(...): (line 668)
        # Processing the call arguments (line 668)
        # Getting the type of 'func' (line 668)
        func_221472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 24), 'func', False)
        # Getting the type of 'n0' (line 668)
        n0_221473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 30), 'n0', False)
        # Processing the call keyword arguments (line 668)
        str_221474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 41), 'str', 'iteration')
        keyword_221475 = str_221474
        kwargs_221476 = {'method': keyword_221475}
        # Getting the type of 'fixed_point' (line 668)
        fixed_point_221471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 12), 'fixed_point', False)
        # Calling fixed_point(args, kwargs) (line 668)
        fixed_point_call_result_221477 = invoke(stypy.reporting.localization.Localization(__file__, 668, 12), fixed_point_221471, *[func_221472, n0_221473], **kwargs_221476)
        
        # Assigning a type to the variable 'n' (line 668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 8), 'n', fixed_point_call_result_221477)
        
        # Call to assert_allclose(...): (line 669)
        # Processing the call arguments (line 669)
        # Getting the type of 'n' (line 669)
        n_221479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 24), 'n', False)
        # Getting the type of 'm' (line 669)
        m_221480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 27), 'm', False)
        # Processing the call keyword arguments (line 669)
        kwargs_221481 = {}
        # Getting the type of 'assert_allclose' (line 669)
        assert_allclose_221478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 669)
        assert_allclose_call_result_221482 = invoke(stypy.reporting.localization.Localization(__file__, 669, 8), assert_allclose_221478, *[n_221479, m_221480], **kwargs_221481)
        
        
        # ################# End of 'test_no_acceleration(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_no_acceleration' in the type store
        # Getting the type of 'stypy_return_type' (line 657)
        stypy_return_type_221483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_221483)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_no_acceleration'
        return stypy_return_type_221483


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 591, 0, False)
        # Assigning a type to the variable 'self' (line 592)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFixedPoint.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestFixedPoint' (line 591)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 0), 'TestFixedPoint', TestFixedPoint)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
