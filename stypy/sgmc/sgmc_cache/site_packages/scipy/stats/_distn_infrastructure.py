
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: #
2: # Author:  Travis Oliphant  2002-2011 with contributions from
3: #          SciPy Developers 2004-2011
4: #
5: from __future__ import division, print_function, absolute_import
6: 
7: from scipy._lib.six import string_types, exec_, PY3
8: from scipy._lib._util import getargspec_no_self as _getargspec
9: 
10: import sys
11: import keyword
12: import re
13: import types
14: import warnings
15: 
16: from scipy.misc import doccer
17: from ._distr_params import distcont, distdiscrete
18: from scipy._lib._util import check_random_state, _lazywhere, _lazyselect
19: from scipy._lib._util import _valarray as valarray
20: 
21: from scipy.special import (comb, chndtr, entr, rel_entr, kl_div, xlogy, ive)
22: 
23: # for root finding for discrete distribution ppf, and max likelihood estimation
24: from scipy import optimize
25: 
26: # for functions of continuous distributions (e.g. moments, entropy, cdf)
27: from scipy import integrate
28: 
29: # to approximate the pdf of a continuous distribution given its cdf
30: from scipy.misc import derivative
31: 
32: from numpy import (arange, putmask, ravel, take, ones, shape, ndarray,
33:                    product, reshape, zeros, floor, logical_and, log, sqrt, exp)
34: 
35: from numpy import (place, argsort, argmax, vectorize,
36:                    asarray, nan, inf, isinf, NINF, empty)
37: 
38: import numpy as np
39: 
40: from ._constants import _XMAX
41: 
42: if PY3:
43:     def instancemethod(func, obj, cls):
44:         return types.MethodType(func, obj)
45: else:
46:     instancemethod = types.MethodType
47: 
48: 
49: # These are the docstring parts used for substitution in specific
50: # distribution docstrings
51: 
52: docheaders = {'methods': '''\nMethods\n-------\n''',
53:               'notes': '''\nNotes\n-----\n''',
54:               'examples': '''\nExamples\n--------\n'''}
55: 
56: _doc_rvs = '''\
57: ``rvs(%(shapes)s, loc=0, scale=1, size=1, random_state=None)``
58:     Random variates.
59: '''
60: _doc_pdf = '''\
61: ``pdf(x, %(shapes)s, loc=0, scale=1)``
62:     Probability density function.
63: '''
64: _doc_logpdf = '''\
65: ``logpdf(x, %(shapes)s, loc=0, scale=1)``
66:     Log of the probability density function.
67: '''
68: _doc_pmf = '''\
69: ``pmf(k, %(shapes)s, loc=0, scale=1)``
70:     Probability mass function.
71: '''
72: _doc_logpmf = '''\
73: ``logpmf(k, %(shapes)s, loc=0, scale=1)``
74:     Log of the probability mass function.
75: '''
76: _doc_cdf = '''\
77: ``cdf(x, %(shapes)s, loc=0, scale=1)``
78:     Cumulative distribution function.
79: '''
80: _doc_logcdf = '''\
81: ``logcdf(x, %(shapes)s, loc=0, scale=1)``
82:     Log of the cumulative distribution function.
83: '''
84: _doc_sf = '''\
85: ``sf(x, %(shapes)s, loc=0, scale=1)``
86:     Survival function  (also defined as ``1 - cdf``, but `sf` is sometimes more accurate).
87: '''
88: _doc_logsf = '''\
89: ``logsf(x, %(shapes)s, loc=0, scale=1)``
90:     Log of the survival function.
91: '''
92: _doc_ppf = '''\
93: ``ppf(q, %(shapes)s, loc=0, scale=1)``
94:     Percent point function (inverse of ``cdf`` --- percentiles).
95: '''
96: _doc_isf = '''\
97: ``isf(q, %(shapes)s, loc=0, scale=1)``
98:     Inverse survival function (inverse of ``sf``).
99: '''
100: _doc_moment = '''\
101: ``moment(n, %(shapes)s, loc=0, scale=1)``
102:     Non-central moment of order n
103: '''
104: _doc_stats = '''\
105: ``stats(%(shapes)s, loc=0, scale=1, moments='mv')``
106:     Mean('m'), variance('v'), skew('s'), and/or kurtosis('k').
107: '''
108: _doc_entropy = '''\
109: ``entropy(%(shapes)s, loc=0, scale=1)``
110:     (Differential) entropy of the RV.
111: '''
112: _doc_fit = '''\
113: ``fit(data, %(shapes)s, loc=0, scale=1)``
114:     Parameter estimates for generic data.
115: '''
116: _doc_expect = '''\
117: ``expect(func, args=(%(shapes_)s), loc=0, scale=1, lb=None, ub=None, conditional=False, **kwds)``
118:     Expected value of a function (of one argument) with respect to the distribution.
119: '''
120: _doc_expect_discrete = '''\
121: ``expect(func, args=(%(shapes_)s), loc=0, lb=None, ub=None, conditional=False)``
122:     Expected value of a function (of one argument) with respect to the distribution.
123: '''
124: _doc_median = '''\
125: ``median(%(shapes)s, loc=0, scale=1)``
126:     Median of the distribution.
127: '''
128: _doc_mean = '''\
129: ``mean(%(shapes)s, loc=0, scale=1)``
130:     Mean of the distribution.
131: '''
132: _doc_var = '''\
133: ``var(%(shapes)s, loc=0, scale=1)``
134:     Variance of the distribution.
135: '''
136: _doc_std = '''\
137: ``std(%(shapes)s, loc=0, scale=1)``
138:     Standard deviation of the distribution.
139: '''
140: _doc_interval = '''\
141: ``interval(alpha, %(shapes)s, loc=0, scale=1)``
142:     Endpoints of the range that contains alpha percent of the distribution
143: '''
144: _doc_allmethods = ''.join([docheaders['methods'], _doc_rvs, _doc_pdf,
145:                            _doc_logpdf, _doc_cdf, _doc_logcdf, _doc_sf,
146:                            _doc_logsf, _doc_ppf, _doc_isf, _doc_moment,
147:                            _doc_stats, _doc_entropy, _doc_fit,
148:                            _doc_expect, _doc_median,
149:                            _doc_mean, _doc_var, _doc_std, _doc_interval])
150: 
151: _doc_default_longsummary = '''\
152: As an instance of the `rv_continuous` class, `%(name)s` object inherits from it
153: a collection of generic methods (see below for the full list),
154: and completes them with details specific for this particular distribution.
155: '''
156: 
157: _doc_default_frozen_note = '''
158: Alternatively, the object may be called (as a function) to fix the shape,
159: location, and scale parameters returning a "frozen" continuous RV object:
160: 
161: rv = %(name)s(%(shapes)s, loc=0, scale=1)
162:     - Frozen RV object with the same methods but holding the given shape,
163:       location, and scale fixed.
164: '''
165: _doc_default_example = '''\
166: Examples
167: --------
168: >>> from scipy.stats import %(name)s
169: >>> import matplotlib.pyplot as plt
170: >>> fig, ax = plt.subplots(1, 1)
171: 
172: Calculate a few first moments:
173: 
174: %(set_vals_stmt)s
175: >>> mean, var, skew, kurt = %(name)s.stats(%(shapes)s, moments='mvsk')
176: 
177: Display the probability density function (``pdf``):
178: 
179: >>> x = np.linspace(%(name)s.ppf(0.01, %(shapes)s),
180: ...                 %(name)s.ppf(0.99, %(shapes)s), 100)
181: >>> ax.plot(x, %(name)s.pdf(x, %(shapes)s),
182: ...        'r-', lw=5, alpha=0.6, label='%(name)s pdf')
183: 
184: Alternatively, the distribution object can be called (as a function)
185: to fix the shape, location and scale parameters. This returns a "frozen"
186: RV object holding the given parameters fixed.
187: 
188: Freeze the distribution and display the frozen ``pdf``:
189: 
190: >>> rv = %(name)s(%(shapes)s)
191: >>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf')
192: 
193: Check accuracy of ``cdf`` and ``ppf``:
194: 
195: >>> vals = %(name)s.ppf([0.001, 0.5, 0.999], %(shapes)s)
196: >>> np.allclose([0.001, 0.5, 0.999], %(name)s.cdf(vals, %(shapes)s))
197: True
198: 
199: Generate random numbers:
200: 
201: >>> r = %(name)s.rvs(%(shapes)s, size=1000)
202: 
203: And compare the histogram:
204: 
205: >>> ax.hist(r, normed=True, histtype='stepfilled', alpha=0.2)
206: >>> ax.legend(loc='best', frameon=False)
207: >>> plt.show()
208: 
209: '''
210: 
211: _doc_default_locscale = '''\
212: The probability density above is defined in the "standardized" form. To shift
213: and/or scale the distribution use the ``loc`` and ``scale`` parameters.
214: Specifically, ``%(name)s.pdf(x, %(shapes)s, loc, scale)`` is identically
215: equivalent to ``%(name)s.pdf(y, %(shapes)s) / scale`` with
216: ``y = (x - loc) / scale``.
217: '''
218: 
219: _doc_default = ''.join([_doc_default_longsummary,
220:                         _doc_allmethods,
221:                         '\n',
222:                         _doc_default_example])
223: 
224: _doc_default_before_notes = ''.join([_doc_default_longsummary,
225:                                      _doc_allmethods])
226: 
227: docdict = {
228:     'rvs': _doc_rvs,
229:     'pdf': _doc_pdf,
230:     'logpdf': _doc_logpdf,
231:     'cdf': _doc_cdf,
232:     'logcdf': _doc_logcdf,
233:     'sf': _doc_sf,
234:     'logsf': _doc_logsf,
235:     'ppf': _doc_ppf,
236:     'isf': _doc_isf,
237:     'stats': _doc_stats,
238:     'entropy': _doc_entropy,
239:     'fit': _doc_fit,
240:     'moment': _doc_moment,
241:     'expect': _doc_expect,
242:     'interval': _doc_interval,
243:     'mean': _doc_mean,
244:     'std': _doc_std,
245:     'var': _doc_var,
246:     'median': _doc_median,
247:     'allmethods': _doc_allmethods,
248:     'longsummary': _doc_default_longsummary,
249:     'frozennote': _doc_default_frozen_note,
250:     'example': _doc_default_example,
251:     'default': _doc_default,
252:     'before_notes': _doc_default_before_notes,
253:     'after_notes': _doc_default_locscale
254: }
255: 
256: # Reuse common content between continuous and discrete docs, change some
257: # minor bits.
258: docdict_discrete = docdict.copy()
259: 
260: docdict_discrete['pmf'] = _doc_pmf
261: docdict_discrete['logpmf'] = _doc_logpmf
262: docdict_discrete['expect'] = _doc_expect_discrete
263: _doc_disc_methods = ['rvs', 'pmf', 'logpmf', 'cdf', 'logcdf', 'sf', 'logsf',
264:                      'ppf', 'isf', 'stats', 'entropy', 'expect', 'median',
265:                      'mean', 'var', 'std', 'interval']
266: for obj in _doc_disc_methods:
267:     docdict_discrete[obj] = docdict_discrete[obj].replace(', scale=1', '')
268: 
269: _doc_disc_methods_err_varname = ['cdf', 'logcdf', 'sf', 'logsf']
270: for obj in _doc_disc_methods_err_varname:
271:     docdict_discrete[obj] = docdict_discrete[obj].replace('(x, ', '(k, ')
272: 
273: docdict_discrete.pop('pdf')
274: docdict_discrete.pop('logpdf')
275: 
276: _doc_allmethods = ''.join([docdict_discrete[obj] for obj in _doc_disc_methods])
277: docdict_discrete['allmethods'] = docheaders['methods'] + _doc_allmethods
278: 
279: docdict_discrete['longsummary'] = _doc_default_longsummary.replace(
280:     'rv_continuous', 'rv_discrete')
281: 
282: _doc_default_frozen_note = '''
283: Alternatively, the object may be called (as a function) to fix the shape and
284: location parameters returning a "frozen" discrete RV object:
285: 
286: rv = %(name)s(%(shapes)s, loc=0)
287:     - Frozen RV object with the same methods but holding the given shape and
288:       location fixed.
289: '''
290: docdict_discrete['frozennote'] = _doc_default_frozen_note
291: 
292: _doc_default_discrete_example = '''\
293: Examples
294: --------
295: >>> from scipy.stats import %(name)s
296: >>> import matplotlib.pyplot as plt
297: >>> fig, ax = plt.subplots(1, 1)
298: 
299: Calculate a few first moments:
300: 
301: %(set_vals_stmt)s
302: >>> mean, var, skew, kurt = %(name)s.stats(%(shapes)s, moments='mvsk')
303: 
304: Display the probability mass function (``pmf``):
305: 
306: >>> x = np.arange(%(name)s.ppf(0.01, %(shapes)s),
307: ...               %(name)s.ppf(0.99, %(shapes)s))
308: >>> ax.plot(x, %(name)s.pmf(x, %(shapes)s), 'bo', ms=8, label='%(name)s pmf')
309: >>> ax.vlines(x, 0, %(name)s.pmf(x, %(shapes)s), colors='b', lw=5, alpha=0.5)
310: 
311: Alternatively, the distribution object can be called (as a function)
312: to fix the shape and location. This returns a "frozen" RV object holding
313: the given parameters fixed.
314: 
315: Freeze the distribution and display the frozen ``pmf``:
316: 
317: >>> rv = %(name)s(%(shapes)s)
318: >>> ax.vlines(x, 0, rv.pmf(x), colors='k', linestyles='-', lw=1,
319: ...         label='frozen pmf')
320: >>> ax.legend(loc='best', frameon=False)
321: >>> plt.show()
322: 
323: Check accuracy of ``cdf`` and ``ppf``:
324: 
325: >>> prob = %(name)s.cdf(x, %(shapes)s)
326: >>> np.allclose(x, %(name)s.ppf(prob, %(shapes)s))
327: True
328: 
329: Generate random numbers:
330: 
331: >>> r = %(name)s.rvs(%(shapes)s, size=1000)
332: '''
333: 
334: 
335: _doc_default_discrete_locscale = '''\
336: The probability mass function above is defined in the "standardized" form.
337: To shift distribution use the ``loc`` parameter.
338: Specifically, ``%(name)s.pmf(k, %(shapes)s, loc)`` is identically
339: equivalent to ``%(name)s.pmf(k - loc, %(shapes)s)``.
340: '''
341: 
342: docdict_discrete['example'] = _doc_default_discrete_example
343: docdict_discrete['after_notes'] = _doc_default_discrete_locscale
344: 
345: _doc_default_before_notes = ''.join([docdict_discrete['longsummary'],
346:                                      docdict_discrete['allmethods']])
347: docdict_discrete['before_notes'] = _doc_default_before_notes
348: 
349: _doc_default_disc = ''.join([docdict_discrete['longsummary'],
350:                              docdict_discrete['allmethods'],
351:                              docdict_discrete['frozennote'],
352:                              docdict_discrete['example']])
353: docdict_discrete['default'] = _doc_default_disc
354: 
355: # clean up all the separate docstring elements, we do not need them anymore
356: for obj in [s for s in dir() if s.startswith('_doc_')]:
357:     exec('del ' + obj)
358: del obj
359: try:
360:     del s
361: except NameError:
362:     # in Python 3, loop variables are not visible after the loop
363:     pass
364: 
365: 
366: def _moment(data, n, mu=None):
367:     if mu is None:
368:         mu = data.mean()
369:     return ((data - mu)**n).mean()
370: 
371: 
372: def _moment_from_stats(n, mu, mu2, g1, g2, moment_func, args):
373:     if (n == 0):
374:         return 1.0
375:     elif (n == 1):
376:         if mu is None:
377:             val = moment_func(1, *args)
378:         else:
379:             val = mu
380:     elif (n == 2):
381:         if mu2 is None or mu is None:
382:             val = moment_func(2, *args)
383:         else:
384:             val = mu2 + mu*mu
385:     elif (n == 3):
386:         if g1 is None or mu2 is None or mu is None:
387:             val = moment_func(3, *args)
388:         else:
389:             mu3 = g1 * np.power(mu2, 1.5)  # 3rd central moment
390:             val = mu3+3*mu*mu2+mu*mu*mu  # 3rd non-central moment
391:     elif (n == 4):
392:         if g1 is None or g2 is None or mu2 is None or mu is None:
393:             val = moment_func(4, *args)
394:         else:
395:             mu4 = (g2+3.0)*(mu2**2.0)  # 4th central moment
396:             mu3 = g1*np.power(mu2, 1.5)  # 3rd central moment
397:             val = mu4+4*mu*mu3+6*mu*mu*mu2+mu*mu*mu*mu
398:     else:
399:         val = moment_func(n, *args)
400: 
401:     return val
402: 
403: 
404: def _skew(data):
405:     '''
406:     skew is third central moment / variance**(1.5)
407:     '''
408:     data = np.ravel(data)
409:     mu = data.mean()
410:     m2 = ((data - mu)**2).mean()
411:     m3 = ((data - mu)**3).mean()
412:     return m3 / np.power(m2, 1.5)
413: 
414: 
415: def _kurtosis(data):
416:     '''
417:     kurtosis is fourth central moment / variance**2 - 3
418:     '''
419:     data = np.ravel(data)
420:     mu = data.mean()
421:     m2 = ((data - mu)**2).mean()
422:     m4 = ((data - mu)**4).mean()
423:     return m4 / m2**2 - 3
424: 
425: 
426: # Frozen RV class
427: class rv_frozen(object):
428: 
429:     def __init__(self, dist, *args, **kwds):
430:         self.args = args
431:         self.kwds = kwds
432: 
433:         # create a new instance
434:         self.dist = dist.__class__(**dist._updated_ctor_param())
435: 
436:         # a, b may be set in _argcheck, depending on *args, **kwds. Ouch.
437:         shapes, _, _ = self.dist._parse_args(*args, **kwds)
438:         self.dist._argcheck(*shapes)
439:         self.a, self.b = self.dist.a, self.dist.b
440: 
441:     @property
442:     def random_state(self):
443:         return self.dist._random_state
444: 
445:     @random_state.setter
446:     def random_state(self, seed):
447:         self.dist._random_state = check_random_state(seed)
448: 
449:     def pdf(self, x):   # raises AttributeError in frozen discrete distribution
450:         return self.dist.pdf(x, *self.args, **self.kwds)
451: 
452:     def logpdf(self, x):
453:         return self.dist.logpdf(x, *self.args, **self.kwds)
454: 
455:     def cdf(self, x):
456:         return self.dist.cdf(x, *self.args, **self.kwds)
457: 
458:     def logcdf(self, x):
459:         return self.dist.logcdf(x, *self.args, **self.kwds)
460: 
461:     def ppf(self, q):
462:         return self.dist.ppf(q, *self.args, **self.kwds)
463: 
464:     def isf(self, q):
465:         return self.dist.isf(q, *self.args, **self.kwds)
466: 
467:     def rvs(self, size=None, random_state=None):
468:         kwds = self.kwds.copy()
469:         kwds.update({'size': size, 'random_state': random_state})
470:         return self.dist.rvs(*self.args, **kwds)
471: 
472:     def sf(self, x):
473:         return self.dist.sf(x, *self.args, **self.kwds)
474: 
475:     def logsf(self, x):
476:         return self.dist.logsf(x, *self.args, **self.kwds)
477: 
478:     def stats(self, moments='mv'):
479:         kwds = self.kwds.copy()
480:         kwds.update({'moments': moments})
481:         return self.dist.stats(*self.args, **kwds)
482: 
483:     def median(self):
484:         return self.dist.median(*self.args, **self.kwds)
485: 
486:     def mean(self):
487:         return self.dist.mean(*self.args, **self.kwds)
488: 
489:     def var(self):
490:         return self.dist.var(*self.args, **self.kwds)
491: 
492:     def std(self):
493:         return self.dist.std(*self.args, **self.kwds)
494: 
495:     def moment(self, n):
496:         return self.dist.moment(n, *self.args, **self.kwds)
497: 
498:     def entropy(self):
499:         return self.dist.entropy(*self.args, **self.kwds)
500: 
501:     def pmf(self, k):
502:         return self.dist.pmf(k, *self.args, **self.kwds)
503: 
504:     def logpmf(self, k):
505:         return self.dist.logpmf(k, *self.args, **self.kwds)
506: 
507:     def interval(self, alpha):
508:         return self.dist.interval(alpha, *self.args, **self.kwds)
509: 
510:     def expect(self, func=None, lb=None, ub=None, conditional=False, **kwds):
511:         # expect method only accepts shape parameters as positional args
512:         # hence convert self.args, self.kwds, also loc/scale
513:         # See the .expect method docstrings for the meaning of
514:         # other parameters.
515:         a, loc, scale = self.dist._parse_args(*self.args, **self.kwds)
516:         if isinstance(self.dist, rv_discrete):
517:             return self.dist.expect(func, a, loc, lb, ub, conditional, **kwds)
518:         else:
519:             return self.dist.expect(func, a, loc, scale, lb, ub,
520:                                     conditional, **kwds)
521: 
522: 
523: # This should be rewritten
524: def argsreduce(cond, *args):
525:     '''Return the sequence of ravel(args[i]) where ravel(condition) is
526:     True in 1D.
527: 
528:     Examples
529:     --------
530:     >>> import numpy as np
531:     >>> rand = np.random.random_sample
532:     >>> A = rand((4, 5))
533:     >>> B = 2
534:     >>> C = rand((1, 5))
535:     >>> cond = np.ones(A.shape)
536:     >>> [A1, B1, C1] = argsreduce(cond, A, B, C)
537:     >>> B1.shape
538:     (20,)
539:     >>> cond[2,:] = 0
540:     >>> [A2, B2, C2] = argsreduce(cond, A, B, C)
541:     >>> B2.shape
542:     (15,)
543: 
544:     '''
545:     newargs = np.atleast_1d(*args)
546:     if not isinstance(newargs, list):
547:         newargs = [newargs, ]
548:     expand_arr = (cond == cond)
549:     return [np.extract(cond, arr1 * expand_arr) for arr1 in newargs]
550: 
551: 
552: parse_arg_template = '''
553: def _parse_args(self, %(shape_arg_str)s %(locscale_in)s):
554:     return (%(shape_arg_str)s), %(locscale_out)s
555: 
556: def _parse_args_rvs(self, %(shape_arg_str)s %(locscale_in)s, size=None):
557:     return self._argcheck_rvs(%(shape_arg_str)s %(locscale_out)s, size=size)
558: 
559: def _parse_args_stats(self, %(shape_arg_str)s %(locscale_in)s, moments='mv'):
560:     return (%(shape_arg_str)s), %(locscale_out)s, moments
561: '''
562: 
563: 
564: # Both the continuous and discrete distributions depend on ncx2.
565: # I think the function name ncx2 is an abbreviation for noncentral chi squared.
566: 
567: def _ncx2_log_pdf(x, df, nc):
568:     # We use (xs**2 + ns**2)/2 = (xs - ns)**2/2  + xs*ns, and include the factor
569:     # of exp(-xs*ns) into the ive function to improve numerical stability
570:     # at large values of xs. See also `rice.pdf`.
571:     df2 = df/2.0 - 1.0
572:     xs, ns = np.sqrt(x), np.sqrt(nc)
573:     res = xlogy(df2/2.0, x/nc) - 0.5*(xs - ns)**2
574:     res += np.log(ive(df2, xs*ns) / 2.0)
575:     return res
576: 
577: 
578: def _ncx2_pdf(x, df, nc):
579:     return np.exp(_ncx2_log_pdf(x, df, nc))
580: 
581: 
582: def _ncx2_cdf(x, df, nc):
583:     return chndtr(x, df, nc)
584: 
585: 
586: class rv_generic(object):
587:     '''Class which encapsulates common functionality between rv_discrete
588:     and rv_continuous.
589: 
590:     '''
591:     def __init__(self, seed=None):
592:         super(rv_generic, self).__init__()
593: 
594:         # figure out if _stats signature has 'moments' keyword
595:         sign = _getargspec(self._stats)
596:         self._stats_has_moments = ((sign[2] is not None) or
597:                                    ('moments' in sign[0]))
598:         self._random_state = check_random_state(seed)
599: 
600:     @property
601:     def random_state(self):
602:         ''' Get or set the RandomState object for generating random variates.
603: 
604:         This can be either None or an existing RandomState object.
605: 
606:         If None (or np.random), use the RandomState singleton used by np.random.
607:         If already a RandomState instance, use it.
608:         If an int, use a new RandomState instance seeded with seed.
609: 
610:         '''
611:         return self._random_state
612: 
613:     @random_state.setter
614:     def random_state(self, seed):
615:         self._random_state = check_random_state(seed)
616: 
617:     def __getstate__(self):
618:         return self._updated_ctor_param(), self._random_state
619: 
620:     def __setstate__(self, state):
621:         ctor_param, r = state
622:         self.__init__(**ctor_param)
623:         self._random_state = r
624:         return self
625: 
626:     def _construct_argparser(
627:             self, meths_to_inspect, locscale_in, locscale_out):
628:         '''Construct the parser for the shape arguments.
629: 
630:         Generates the argument-parsing functions dynamically and attaches
631:         them to the instance.
632:         Is supposed to be called in __init__ of a class for each distribution.
633: 
634:         If self.shapes is a non-empty string, interprets it as a
635:         comma-separated list of shape parameters.
636: 
637:         Otherwise inspects the call signatures of `meths_to_inspect`
638:         and constructs the argument-parsing functions from these.
639:         In this case also sets `shapes` and `numargs`.
640:         '''
641: 
642:         if self.shapes:
643:             # sanitize the user-supplied shapes
644:             if not isinstance(self.shapes, string_types):
645:                 raise TypeError('shapes must be a string.')
646: 
647:             shapes = self.shapes.replace(',', ' ').split()
648: 
649:             for field in shapes:
650:                 if keyword.iskeyword(field):
651:                     raise SyntaxError('keywords cannot be used as shapes.')
652:                 if not re.match('^[_a-zA-Z][_a-zA-Z0-9]*$', field):
653:                     raise SyntaxError(
654:                         'shapes must be valid python identifiers')
655:         else:
656:             # find out the call signatures (_pdf, _cdf etc), deduce shape
657:             # arguments. Generic methods only have 'self, x', any further args
658:             # are shapes.
659:             shapes_list = []
660:             for meth in meths_to_inspect:
661:                 shapes_args = _getargspec(meth)   # NB: does not contain self
662:                 args = shapes_args.args[1:]       # peel off 'x', too
663: 
664:                 if args:
665:                     shapes_list.append(args)
666: 
667:                     # *args or **kwargs are not allowed w/automatic shapes
668:                     if shapes_args.varargs is not None:
669:                         raise TypeError(
670:                             '*args are not allowed w/out explicit shapes')
671:                     if shapes_args.keywords is not None:
672:                         raise TypeError(
673:                             '**kwds are not allowed w/out explicit shapes')
674:                     if shapes_args.defaults is not None:
675:                         raise TypeError('defaults are not allowed for shapes')
676: 
677:             if shapes_list:
678:                 shapes = shapes_list[0]
679: 
680:                 # make sure the signatures are consistent
681:                 for item in shapes_list:
682:                     if item != shapes:
683:                         raise TypeError('Shape arguments are inconsistent.')
684:             else:
685:                 shapes = []
686: 
687:         # have the arguments, construct the method from template
688:         shapes_str = ', '.join(shapes) + ', ' if shapes else ''  # NB: not None
689:         dct = dict(shape_arg_str=shapes_str,
690:                    locscale_in=locscale_in,
691:                    locscale_out=locscale_out,
692:                    )
693:         ns = {}
694:         exec_(parse_arg_template % dct, ns)
695:         # NB: attach to the instance, not class
696:         for name in ['_parse_args', '_parse_args_stats', '_parse_args_rvs']:
697:             setattr(self, name,
698:                     instancemethod(ns[name], self, self.__class__)
699:                     )
700: 
701:         self.shapes = ', '.join(shapes) if shapes else None
702:         if not hasattr(self, 'numargs'):
703:             # allows more general subclassing with *args
704:             self.numargs = len(shapes)
705: 
706:     def _construct_doc(self, docdict, shapes_vals=None):
707:         '''Construct the instance docstring with string substitutions.'''
708:         tempdict = docdict.copy()
709:         tempdict['name'] = self.name or 'distname'
710:         tempdict['shapes'] = self.shapes or ''
711: 
712:         if shapes_vals is None:
713:             shapes_vals = ()
714:         vals = ', '.join('%.3g' % val for val in shapes_vals)
715:         tempdict['vals'] = vals
716: 
717:         tempdict['shapes_'] = self.shapes or ''
718:         if self.shapes and self.numargs == 1:
719:             tempdict['shapes_'] += ','
720: 
721:         if self.shapes:
722:             tempdict['set_vals_stmt'] = '>>> %s = %s' % (self.shapes, vals)
723:         else:
724:             tempdict['set_vals_stmt'] = ''
725: 
726:         if self.shapes is None:
727:             # remove shapes from call parameters if there are none
728:             for item in ['default', 'before_notes']:
729:                 tempdict[item] = tempdict[item].replace(
730:                     "\n%(shapes)s : array_like\n    shape parameters", "")
731:         for i in range(2):
732:             if self.shapes is None:
733:                 # necessary because we use %(shapes)s in two forms (w w/o ", ")
734:                 self.__doc__ = self.__doc__.replace("%(shapes)s, ", "")
735:             self.__doc__ = doccer.docformat(self.__doc__, tempdict)
736: 
737:         # correct for empty shapes
738:         self.__doc__ = self.__doc__.replace('(, ', '(').replace(', )', ')')
739: 
740:     def _construct_default_doc(self, longname=None, extradoc=None,
741:                 docdict=None, discrete='continuous'):
742:         '''Construct instance docstring from the default template.'''
743:         if longname is None:
744:             longname = 'A'
745:         if extradoc is None:
746:             extradoc = ''
747:         if extradoc.startswith('\n\n'):
748:             extradoc = extradoc[2:]
749:         self.__doc__ = ''.join(['%s %s random variable.' % (longname, discrete),
750:                                 '\n\n%(before_notes)s\n', docheaders['notes'],
751:                                 extradoc, '\n%(example)s'])
752:         self._construct_doc(docdict)
753: 
754:     def freeze(self, *args, **kwds):
755:         '''Freeze the distribution for the given arguments.
756: 
757:         Parameters
758:         ----------
759:         arg1, arg2, arg3,... : array_like
760:             The shape parameter(s) for the distribution.  Should include all
761:             the non-optional arguments, may include ``loc`` and ``scale``.
762: 
763:         Returns
764:         -------
765:         rv_frozen : rv_frozen instance
766:             The frozen distribution.
767: 
768:         '''
769:         return rv_frozen(self, *args, **kwds)
770: 
771:     def __call__(self, *args, **kwds):
772:         return self.freeze(*args, **kwds)
773:     __call__.__doc__ = freeze.__doc__
774: 
775:     # The actual calculation functions (no basic checking need be done)
776:     # If these are defined, the others won't be looked at.
777:     # Otherwise, the other set can be defined.
778:     def _stats(self, *args, **kwds):
779:         return None, None, None, None
780: 
781:     #  Central moments
782:     def _munp(self, n, *args):
783:         # Silence floating point warnings from integration.
784:         olderr = np.seterr(all='ignore')
785:         vals = self.generic_moment(n, *args)
786:         np.seterr(**olderr)
787:         return vals
788: 
789:     def _argcheck_rvs(self, *args, **kwargs):
790:         # Handle broadcasting and size validation of the rvs method.
791:         # Subclasses should not have to override this method.
792:         # The rule is that if `size` is not None, then `size` gives the
793:         # shape of the result (integer values of `size` are treated as
794:         # tuples with length 1; i.e. `size=3` is the same as `size=(3,)`.)
795:         #
796:         # `args` is expected to contain the shape parameters (if any), the
797:         # location and the scale in a flat tuple (e.g. if there are two
798:         # shape parameters `a` and `b`, `args` will be `(a, b, loc, scale)`).
799:         # The only keyword argument expected is 'size'.
800:         size = kwargs.get('size', None)
801:         all_bcast = np.broadcast_arrays(*args)
802: 
803:         def squeeze_left(a):
804:             while a.ndim > 0 and a.shape[0] == 1:
805:                 a = a[0]
806:             return a
807: 
808:         # Eliminate trivial leading dimensions.  In the convention
809:         # used by numpy's random variate generators, trivial leading
810:         # dimensions are effectively ignored.  In other words, when `size`
811:         # is given, trivial leading dimensions of the broadcast parameters
812:         # in excess of the number of dimensions  in size are ignored, e.g.
813:         #   >>> np.random.normal([[1, 3, 5]], [[[[0.01]]]], size=3)
814:         #   array([ 1.00104267,  3.00422496,  4.99799278])
815:         # If `size` is not given, the exact broadcast shape is preserved:
816:         #   >>> np.random.normal([[1, 3, 5]], [[[[0.01]]]])
817:         #   array([[[[ 1.00862899,  3.00061431,  4.99867122]]]])
818:         #
819:         all_bcast = [squeeze_left(a) for a in all_bcast]
820:         bcast_shape = all_bcast[0].shape
821:         bcast_ndim = all_bcast[0].ndim
822: 
823:         if size is None:
824:             size_ = bcast_shape
825:         else:
826:             size_ = tuple(np.atleast_1d(size))
827: 
828:         # Check compatibility of size_ with the broadcast shape of all
829:         # the parameters.  This check is intended to be consistent with
830:         # how the numpy random variate generators (e.g. np.random.normal,
831:         # np.random.beta) handle their arguments.   The rule is that, if size
832:         # is given, it determines the shape of the output.  Broadcasting
833:         # can't change the output size.
834: 
835:         # This is the standard broadcasting convention of extending the
836:         # shape with fewer dimensions with enough dimensions of length 1
837:         # so that the two shapes have the same number of dimensions.
838:         ndiff = bcast_ndim - len(size_)
839:         if ndiff < 0:
840:             bcast_shape = (1,)*(-ndiff) + bcast_shape
841:         elif ndiff > 0:
842:             size_ = (1,)*ndiff + size_
843: 
844:         # This compatibility test is not standard.  In "regular" broadcasting,
845:         # two shapes are compatible if for each dimension, the lengths are the
846:         # same or one of the lengths is 1.  Here, the length of a dimension in
847:         # size_ must not be less than the corresponding length in bcast_shape.
848:         ok = all([bcdim == 1 or bcdim == szdim
849:                   for (bcdim, szdim) in zip(bcast_shape, size_)])
850:         if not ok:
851:             raise ValueError("size does not match the broadcast shape of "
852:                              "the parameters.")
853: 
854:         param_bcast = all_bcast[:-2]
855:         loc_bcast = all_bcast[-2]
856:         scale_bcast = all_bcast[-1]
857: 
858:         return param_bcast, loc_bcast, scale_bcast, size_
859: 
860:     ## These are the methods you must define (standard form functions)
861:     ## NB: generic _pdf, _logpdf, _cdf are different for
862:     ## rv_continuous and rv_discrete hence are defined in there
863:     def _argcheck(self, *args):
864:         '''Default check for correct values on args and keywords.
865: 
866:         Returns condition array of 1's where arguments are correct and
867:          0's where they are not.
868: 
869:         '''
870:         cond = 1
871:         for arg in args:
872:             cond = logical_and(cond, (asarray(arg) > 0))
873:         return cond
874: 
875:     def _support_mask(self, x):
876:         return (self.a <= x) & (x <= self.b)
877: 
878:     def _open_support_mask(self, x):
879:         return (self.a < x) & (x < self.b)
880: 
881:     def _rvs(self, *args):
882:         # This method must handle self._size being a tuple, and it must
883:         # properly broadcast *args and self._size.  self._size might be
884:         # an empty tuple, which means a scalar random variate is to be
885:         # generated.
886: 
887:         ## Use basic inverse cdf algorithm for RV generation as default.
888:         U = self._random_state.random_sample(self._size)
889:         Y = self._ppf(U, *args)
890:         return Y
891: 
892:     def _logcdf(self, x, *args):
893:         return log(self._cdf(x, *args))
894: 
895:     def _sf(self, x, *args):
896:         return 1.0-self._cdf(x, *args)
897: 
898:     def _logsf(self, x, *args):
899:         return log(self._sf(x, *args))
900: 
901:     def _ppf(self, q, *args):
902:         return self._ppfvec(q, *args)
903: 
904:     def _isf(self, q, *args):
905:         return self._ppf(1.0-q, *args)  # use correct _ppf for subclasses
906: 
907:     # These are actually called, and should not be overwritten if you
908:     # want to keep error checking.
909:     def rvs(self, *args, **kwds):
910:         '''
911:         Random variates of given type.
912: 
913:         Parameters
914:         ----------
915:         arg1, arg2, arg3,... : array_like
916:             The shape parameter(s) for the distribution (see docstring of the
917:             instance object for more information).
918:         loc : array_like, optional
919:             Location parameter (default=0).
920:         scale : array_like, optional
921:             Scale parameter (default=1).
922:         size : int or tuple of ints, optional
923:             Defining number of random variates (default is 1).
924:         random_state : None or int or ``np.random.RandomState`` instance, optional
925:             If int or RandomState, use it for drawing the random variates.
926:             If None, rely on ``self.random_state``.
927:             Default is None.
928: 
929:         Returns
930:         -------
931:         rvs : ndarray or scalar
932:             Random variates of given `size`.
933: 
934:         '''
935:         discrete = kwds.pop('discrete', None)
936:         rndm = kwds.pop('random_state', None)
937:         args, loc, scale, size = self._parse_args_rvs(*args, **kwds)
938:         cond = logical_and(self._argcheck(*args), (scale >= 0))
939:         if not np.all(cond):
940:             raise ValueError("Domain error in arguments.")
941: 
942:         if np.all(scale == 0):
943:             return loc*ones(size, 'd')
944: 
945:         # extra gymnastics needed for a custom random_state
946:         if rndm is not None:
947:             random_state_saved = self._random_state
948:             self._random_state = check_random_state(rndm)
949: 
950:         # `size` should just be an argument to _rvs(), but for, um,
951:         # historical reasons, it is made an attribute that is read
952:         # by _rvs().
953:         self._size = size
954:         vals = self._rvs(*args)
955: 
956:         vals = vals * scale + loc
957: 
958:         # do not forget to restore the _random_state
959:         if rndm is not None:
960:             self._random_state = random_state_saved
961: 
962:         # Cast to int if discrete
963:         if discrete:
964:             if size == ():
965:                 vals = int(vals)
966:             else:
967:                 vals = vals.astype(int)
968: 
969:         return vals
970: 
971:     def stats(self, *args, **kwds):
972:         '''
973:         Some statistics of the given RV.
974: 
975:         Parameters
976:         ----------
977:         arg1, arg2, arg3,... : array_like
978:             The shape parameter(s) for the distribution (see docstring of the
979:             instance object for more information)
980:         loc : array_like, optional
981:             location parameter (default=0)
982:         scale : array_like, optional (continuous RVs only)
983:             scale parameter (default=1)
984:         moments : str, optional
985:             composed of letters ['mvsk'] defining which moments to compute:
986:             'm' = mean,
987:             'v' = variance,
988:             's' = (Fisher's) skew,
989:             'k' = (Fisher's) kurtosis.
990:             (default is 'mv')
991: 
992:         Returns
993:         -------
994:         stats : sequence
995:             of requested moments.
996: 
997:         '''
998:         args, loc, scale, moments = self._parse_args_stats(*args, **kwds)
999:         # scale = 1 by construction for discrete RVs
1000:         loc, scale = map(asarray, (loc, scale))
1001:         args = tuple(map(asarray, args))
1002:         cond = self._argcheck(*args) & (scale > 0) & (loc == loc)
1003:         output = []
1004:         default = valarray(shape(cond), self.badvalue)
1005: 
1006:         # Use only entries that are valid in calculation
1007:         if np.any(cond):
1008:             goodargs = argsreduce(cond, *(args+(scale, loc)))
1009:             scale, loc, goodargs = goodargs[-2], goodargs[-1], goodargs[:-2]
1010: 
1011:             if self._stats_has_moments:
1012:                 mu, mu2, g1, g2 = self._stats(*goodargs,
1013:                                               **{'moments': moments})
1014:             else:
1015:                 mu, mu2, g1, g2 = self._stats(*goodargs)
1016:             if g1 is None:
1017:                 mu3 = None
1018:             else:
1019:                 if mu2 is None:
1020:                     mu2 = self._munp(2, *goodargs)
1021:                 if g2 is None:
1022:                     # (mu2**1.5) breaks down for nan and inf
1023:                     mu3 = g1 * np.power(mu2, 1.5)
1024: 
1025:             if 'm' in moments:
1026:                 if mu is None:
1027:                     mu = self._munp(1, *goodargs)
1028:                 out0 = default.copy()
1029:                 place(out0, cond, mu * scale + loc)
1030:                 output.append(out0)
1031: 
1032:             if 'v' in moments:
1033:                 if mu2 is None:
1034:                     mu2p = self._munp(2, *goodargs)
1035:                     if mu is None:
1036:                         mu = self._munp(1, *goodargs)
1037:                     mu2 = mu2p - mu * mu
1038:                     if np.isinf(mu):
1039:                         # if mean is inf then var is also inf
1040:                         mu2 = np.inf
1041:                 out0 = default.copy()
1042:                 place(out0, cond, mu2 * scale * scale)
1043:                 output.append(out0)
1044: 
1045:             if 's' in moments:
1046:                 if g1 is None:
1047:                     mu3p = self._munp(3, *goodargs)
1048:                     if mu is None:
1049:                         mu = self._munp(1, *goodargs)
1050:                     if mu2 is None:
1051:                         mu2p = self._munp(2, *goodargs)
1052:                         mu2 = mu2p - mu * mu
1053:                     with np.errstate(invalid='ignore'):
1054:                         mu3 = mu3p - 3 * mu * mu2 - mu**3
1055:                         g1 = mu3 / np.power(mu2, 1.5)
1056:                 out0 = default.copy()
1057:                 place(out0, cond, g1)
1058:                 output.append(out0)
1059: 
1060:             if 'k' in moments:
1061:                 if g2 is None:
1062:                     mu4p = self._munp(4, *goodargs)
1063:                     if mu is None:
1064:                         mu = self._munp(1, *goodargs)
1065:                     if mu2 is None:
1066:                         mu2p = self._munp(2, *goodargs)
1067:                         mu2 = mu2p - mu * mu
1068:                     if mu3 is None:
1069:                         mu3p = self._munp(3, *goodargs)
1070:                         with np.errstate(invalid='ignore'):
1071:                             mu3 = mu3p - 3 * mu * mu2 - mu**3
1072:                     with np.errstate(invalid='ignore'):
1073:                         mu4 = mu4p - 4 * mu * mu3 - 6 * mu * mu * mu2 - mu**4
1074:                         g2 = mu4 / mu2**2.0 - 3.0
1075:                 out0 = default.copy()
1076:                 place(out0, cond, g2)
1077:                 output.append(out0)
1078:         else:  # no valid args
1079:             output = []
1080:             for _ in moments:
1081:                 out0 = default.copy()
1082:                 output.append(out0)
1083: 
1084:         if len(output) == 1:
1085:             return output[0]
1086:         else:
1087:             return tuple(output)
1088: 
1089:     def entropy(self, *args, **kwds):
1090:         '''
1091:         Differential entropy of the RV.
1092: 
1093:         Parameters
1094:         ----------
1095:         arg1, arg2, arg3,... : array_like
1096:             The shape parameter(s) for the distribution (see docstring of the
1097:             instance object for more information).
1098:         loc : array_like, optional
1099:             Location parameter (default=0).
1100:         scale : array_like, optional  (continuous distributions only).
1101:             Scale parameter (default=1).
1102: 
1103:         Notes
1104:         -----
1105:         Entropy is defined base `e`:
1106: 
1107:         >>> drv = rv_discrete(values=((0, 1), (0.5, 0.5)))
1108:         >>> np.allclose(drv.entropy(), np.log(2.0))
1109:         True
1110: 
1111:         '''
1112:         args, loc, scale = self._parse_args(*args, **kwds)
1113:         # NB: for discrete distributions scale=1 by construction in _parse_args
1114:         args = tuple(map(asarray, args))
1115:         cond0 = self._argcheck(*args) & (scale > 0) & (loc == loc)
1116:         output = zeros(shape(cond0), 'd')
1117:         place(output, (1-cond0), self.badvalue)
1118:         goodargs = argsreduce(cond0, *args)
1119:         place(output, cond0, self.vecentropy(*goodargs) + log(scale))
1120:         return output
1121: 
1122:     def moment(self, n, *args, **kwds):
1123:         '''
1124:         n-th order non-central moment of distribution.
1125: 
1126:         Parameters
1127:         ----------
1128:         n : int, n >= 1
1129:             Order of moment.
1130:         arg1, arg2, arg3,... : float
1131:             The shape parameter(s) for the distribution (see docstring of the
1132:             instance object for more information).
1133:         loc : array_like, optional
1134:             location parameter (default=0)
1135:         scale : array_like, optional
1136:             scale parameter (default=1)
1137: 
1138:         '''
1139:         args, loc, scale = self._parse_args(*args, **kwds)
1140:         if not (self._argcheck(*args) and (scale > 0)):
1141:             return nan
1142:         if (floor(n) != n):
1143:             raise ValueError("Moment must be an integer.")
1144:         if (n < 0):
1145:             raise ValueError("Moment must be positive.")
1146:         mu, mu2, g1, g2 = None, None, None, None
1147:         if (n > 0) and (n < 5):
1148:             if self._stats_has_moments:
1149:                 mdict = {'moments': {1: 'm', 2: 'v', 3: 'vs', 4: 'vk'}[n]}
1150:             else:
1151:                 mdict = {}
1152:             mu, mu2, g1, g2 = self._stats(*args, **mdict)
1153:         val = _moment_from_stats(n, mu, mu2, g1, g2, self._munp, args)
1154: 
1155:         # Convert to transformed  X = L + S*Y
1156:         # E[X^n] = E[(L+S*Y)^n] = L^n sum(comb(n, k)*(S/L)^k E[Y^k], k=0...n)
1157:         if loc == 0:
1158:             return scale**n * val
1159:         else:
1160:             result = 0
1161:             fac = float(scale) / float(loc)
1162:             for k in range(n):
1163:                 valk = _moment_from_stats(k, mu, mu2, g1, g2, self._munp, args)
1164:                 result += comb(n, k, exact=True)*(fac**k) * valk
1165:             result += fac**n * val
1166:             return result * loc**n
1167: 
1168:     def median(self, *args, **kwds):
1169:         '''
1170:         Median of the distribution.
1171: 
1172:         Parameters
1173:         ----------
1174:         arg1, arg2, arg3,... : array_like
1175:             The shape parameter(s) for the distribution (see docstring of the
1176:             instance object for more information)
1177:         loc : array_like, optional
1178:             Location parameter, Default is 0.
1179:         scale : array_like, optional
1180:             Scale parameter, Default is 1.
1181: 
1182:         Returns
1183:         -------
1184:         median : float
1185:             The median of the distribution.
1186: 
1187:         See Also
1188:         --------
1189:         stats.distributions.rv_discrete.ppf
1190:             Inverse of the CDF
1191: 
1192:         '''
1193:         return self.ppf(0.5, *args, **kwds)
1194: 
1195:     def mean(self, *args, **kwds):
1196:         '''
1197:         Mean of the distribution.
1198: 
1199:         Parameters
1200:         ----------
1201:         arg1, arg2, arg3,... : array_like
1202:             The shape parameter(s) for the distribution (see docstring of the
1203:             instance object for more information)
1204:         loc : array_like, optional
1205:             location parameter (default=0)
1206:         scale : array_like, optional
1207:             scale parameter (default=1)
1208: 
1209:         Returns
1210:         -------
1211:         mean : float
1212:             the mean of the distribution
1213: 
1214:         '''
1215:         kwds['moments'] = 'm'
1216:         res = self.stats(*args, **kwds)
1217:         if isinstance(res, ndarray) and res.ndim == 0:
1218:             return res[()]
1219:         return res
1220: 
1221:     def var(self, *args, **kwds):
1222:         '''
1223:         Variance of the distribution.
1224: 
1225:         Parameters
1226:         ----------
1227:         arg1, arg2, arg3,... : array_like
1228:             The shape parameter(s) for the distribution (see docstring of the
1229:             instance object for more information)
1230:         loc : array_like, optional
1231:             location parameter (default=0)
1232:         scale : array_like, optional
1233:             scale parameter (default=1)
1234: 
1235:         Returns
1236:         -------
1237:         var : float
1238:             the variance of the distribution
1239: 
1240:         '''
1241:         kwds['moments'] = 'v'
1242:         res = self.stats(*args, **kwds)
1243:         if isinstance(res, ndarray) and res.ndim == 0:
1244:             return res[()]
1245:         return res
1246: 
1247:     def std(self, *args, **kwds):
1248:         '''
1249:         Standard deviation of the distribution.
1250: 
1251:         Parameters
1252:         ----------
1253:         arg1, arg2, arg3,... : array_like
1254:             The shape parameter(s) for the distribution (see docstring of the
1255:             instance object for more information)
1256:         loc : array_like, optional
1257:             location parameter (default=0)
1258:         scale : array_like, optional
1259:             scale parameter (default=1)
1260: 
1261:         Returns
1262:         -------
1263:         std : float
1264:             standard deviation of the distribution
1265: 
1266:         '''
1267:         kwds['moments'] = 'v'
1268:         res = sqrt(self.stats(*args, **kwds))
1269:         return res
1270: 
1271:     def interval(self, alpha, *args, **kwds):
1272:         '''
1273:         Confidence interval with equal areas around the median.
1274: 
1275:         Parameters
1276:         ----------
1277:         alpha : array_like of float
1278:             Probability that an rv will be drawn from the returned range.
1279:             Each value should be in the range [0, 1].
1280:         arg1, arg2, ... : array_like
1281:             The shape parameter(s) for the distribution (see docstring of the
1282:             instance object for more information).
1283:         loc : array_like, optional
1284:             location parameter, Default is 0.
1285:         scale : array_like, optional
1286:             scale parameter, Default is 1.
1287: 
1288:         Returns
1289:         -------
1290:         a, b : ndarray of float
1291:             end-points of range that contain ``100 * alpha %`` of the rv's
1292:             possible values.
1293: 
1294:         '''
1295:         alpha = asarray(alpha)
1296:         if np.any((alpha > 1) | (alpha < 0)):
1297:             raise ValueError("alpha must be between 0 and 1 inclusive")
1298:         q1 = (1.0-alpha)/2
1299:         q2 = (1.0+alpha)/2
1300:         a = self.ppf(q1, *args, **kwds)
1301:         b = self.ppf(q2, *args, **kwds)
1302:         return a, b
1303: 
1304: 
1305: ##  continuous random variables: implement maybe later
1306: ##
1307: ##  hf  --- Hazard Function (PDF / SF)
1308: ##  chf  --- Cumulative hazard function (-log(SF))
1309: ##  psf --- Probability sparsity function (reciprocal of the pdf) in
1310: ##                units of percent-point-function (as a function of q).
1311: ##                Also, the derivative of the percent-point function.
1312: 
1313: class rv_continuous(rv_generic):
1314:     '''
1315:     A generic continuous random variable class meant for subclassing.
1316: 
1317:     `rv_continuous` is a base class to construct specific distribution classes
1318:     and instances for continuous random variables. It cannot be used
1319:     directly as a distribution.
1320: 
1321:     Parameters
1322:     ----------
1323:     momtype : int, optional
1324:         The type of generic moment calculation to use: 0 for pdf, 1 (default)
1325:         for ppf.
1326:     a : float, optional
1327:         Lower bound of the support of the distribution, default is minus
1328:         infinity.
1329:     b : float, optional
1330:         Upper bound of the support of the distribution, default is plus
1331:         infinity.
1332:     xtol : float, optional
1333:         The tolerance for fixed point calculation for generic ppf.
1334:     badvalue : float, optional
1335:         The value in a result arrays that indicates a value that for which
1336:         some argument restriction is violated, default is np.nan.
1337:     name : str, optional
1338:         The name of the instance. This string is used to construct the default
1339:         example for distributions.
1340:     longname : str, optional
1341:         This string is used as part of the first line of the docstring returned
1342:         when a subclass has no docstring of its own. Note: `longname` exists
1343:         for backwards compatibility, do not use for new subclasses.
1344:     shapes : str, optional
1345:         The shape of the distribution. For example ``"m, n"`` for a
1346:         distribution that takes two integers as the two shape arguments for all
1347:         its methods. If not provided, shape parameters will be inferred from
1348:         the signature of the private methods, ``_pdf`` and ``_cdf`` of the
1349:         instance.
1350:     extradoc :  str, optional, deprecated
1351:         This string is used as the last part of the docstring returned when a
1352:         subclass has no docstring of its own. Note: `extradoc` exists for
1353:         backwards compatibility, do not use for new subclasses.
1354:     seed : None or int or ``numpy.random.RandomState`` instance, optional
1355:         This parameter defines the RandomState object to use for drawing
1356:         random variates.
1357:         If None (or np.random), the global np.random state is used.
1358:         If integer, it is used to seed the local RandomState instance.
1359:         Default is None.
1360: 
1361:     Methods
1362:     -------
1363:     rvs
1364:     pdf
1365:     logpdf
1366:     cdf
1367:     logcdf
1368:     sf
1369:     logsf
1370:     ppf
1371:     isf
1372:     moment
1373:     stats
1374:     entropy
1375:     expect
1376:     median
1377:     mean
1378:     std
1379:     var
1380:     interval
1381:     __call__
1382:     fit
1383:     fit_loc_scale
1384:     nnlf
1385: 
1386:     Notes
1387:     -----
1388:     Public methods of an instance of a distribution class (e.g., ``pdf``,
1389:     ``cdf``) check their arguments and pass valid arguments to private,
1390:     computational methods (``_pdf``, ``_cdf``). For ``pdf(x)``, ``x`` is valid
1391:     if it is within the support of a distribution, ``self.a <= x <= self.b``.
1392:     Whether a shape parameter is valid is decided by an ``_argcheck`` method
1393:     (which defaults to checking that its arguments are strictly positive.)
1394: 
1395:     **Subclassing**
1396: 
1397:     New random variables can be defined by subclassing the `rv_continuous` class
1398:     and re-defining at least the ``_pdf`` or the ``_cdf`` method (normalized
1399:     to location 0 and scale 1).
1400: 
1401:     If positive argument checking is not correct for your RV
1402:     then you will also need to re-define the ``_argcheck`` method.
1403: 
1404:     Correct, but potentially slow defaults exist for the remaining
1405:     methods but for speed and/or accuracy you can over-ride::
1406: 
1407:       _logpdf, _cdf, _logcdf, _ppf, _rvs, _isf, _sf, _logsf
1408: 
1409:     Rarely would you override ``_isf``, ``_sf`` or ``_logsf``, but you could.
1410: 
1411:     **Methods that can be overwritten by subclasses**
1412:     ::
1413: 
1414:       _rvs
1415:       _pdf
1416:       _cdf
1417:       _sf
1418:       _ppf
1419:       _isf
1420:       _stats
1421:       _munp
1422:       _entropy
1423:       _argcheck
1424: 
1425:     There are additional (internal and private) generic methods that can
1426:     be useful for cross-checking and for debugging, but might work in all
1427:     cases when directly called.
1428: 
1429:     A note on ``shapes``: subclasses need not specify them explicitly. In this
1430:     case, `shapes` will be automatically deduced from the signatures of the
1431:     overridden methods (`pdf`, `cdf` etc).
1432:     If, for some reason, you prefer to avoid relying on introspection, you can
1433:     specify ``shapes`` explicitly as an argument to the instance constructor.
1434: 
1435: 
1436:     **Frozen Distributions**
1437: 
1438:     Normally, you must provide shape parameters (and, optionally, location and
1439:     scale parameters to each call of a method of a distribution.
1440: 
1441:     Alternatively, the object may be called (as a function) to fix the shape,
1442:     location, and scale parameters returning a "frozen" continuous RV object:
1443: 
1444:     rv = generic(<shape(s)>, loc=0, scale=1)
1445:         frozen RV object with the same methods but holding the given shape,
1446:         location, and scale fixed
1447: 
1448:     **Statistics**
1449: 
1450:     Statistics are computed using numerical integration by default.
1451:     For speed you can redefine this using ``_stats``:
1452: 
1453:      - take shape parameters and return mu, mu2, g1, g2
1454:      - If you can't compute one of these, return it as None
1455:      - Can also be defined with a keyword argument ``moments``, which is a
1456:        string composed of "m", "v", "s", and/or "k".
1457:        Only the components appearing in string should be computed and
1458:        returned in the order "m", "v", "s", or "k"  with missing values
1459:        returned as None.
1460: 
1461:     Alternatively, you can override ``_munp``, which takes ``n`` and shape
1462:     parameters and returns the n-th non-central moment of the distribution.
1463: 
1464:     Examples
1465:     --------
1466:     To create a new Gaussian distribution, we would do the following:
1467: 
1468:     >>> from scipy.stats import rv_continuous
1469:     >>> class gaussian_gen(rv_continuous):
1470:     ...     "Gaussian distribution"
1471:     ...     def _pdf(self, x):
1472:     ...         return np.exp(-x**2 / 2.) / np.sqrt(2.0 * np.pi)
1473:     >>> gaussian = gaussian_gen(name='gaussian')
1474: 
1475:     ``scipy.stats`` distributions are *instances*, so here we subclass
1476:     `rv_continuous` and create an instance. With this, we now have
1477:     a fully functional distribution with all relevant methods automagically
1478:     generated by the framework.
1479: 
1480:     Note that above we defined a standard normal distribution, with zero mean
1481:     and unit variance. Shifting and scaling of the distribution can be done
1482:     by using ``loc`` and ``scale`` parameters: ``gaussian.pdf(x, loc, scale)``
1483:     essentially computes ``y = (x - loc) / scale`` and
1484:     ``gaussian._pdf(y) / scale``.
1485: 
1486:     '''
1487:     def __init__(self, momtype=1, a=None, b=None, xtol=1e-14,
1488:                  badvalue=None, name=None, longname=None,
1489:                  shapes=None, extradoc=None, seed=None):
1490: 
1491:         super(rv_continuous, self).__init__(seed)
1492: 
1493:         # save the ctor parameters, cf generic freeze
1494:         self._ctor_param = dict(
1495:             momtype=momtype, a=a, b=b, xtol=xtol,
1496:             badvalue=badvalue, name=name, longname=longname,
1497:             shapes=shapes, extradoc=extradoc, seed=seed)
1498: 
1499:         if badvalue is None:
1500:             badvalue = nan
1501:         if name is None:
1502:             name = 'Distribution'
1503:         self.badvalue = badvalue
1504:         self.name = name
1505:         self.a = a
1506:         self.b = b
1507:         if a is None:
1508:             self.a = -inf
1509:         if b is None:
1510:             self.b = inf
1511:         self.xtol = xtol
1512:         self.moment_type = momtype
1513:         self.shapes = shapes
1514:         self._construct_argparser(meths_to_inspect=[self._pdf, self._cdf],
1515:                                   locscale_in='loc=0, scale=1',
1516:                                   locscale_out='loc, scale')
1517: 
1518:         # nin correction
1519:         self._ppfvec = vectorize(self._ppf_single, otypes='d')
1520:         self._ppfvec.nin = self.numargs + 1
1521:         self.vecentropy = vectorize(self._entropy, otypes='d')
1522:         self._cdfvec = vectorize(self._cdf_single, otypes='d')
1523:         self._cdfvec.nin = self.numargs + 1
1524: 
1525:         self.extradoc = extradoc
1526:         if momtype == 0:
1527:             self.generic_moment = vectorize(self._mom0_sc, otypes='d')
1528:         else:
1529:             self.generic_moment = vectorize(self._mom1_sc, otypes='d')
1530:         # Because of the *args argument of _mom0_sc, vectorize cannot count the
1531:         # number of arguments correctly.
1532:         self.generic_moment.nin = self.numargs + 1
1533: 
1534:         if longname is None:
1535:             if name[0] in ['aeiouAEIOU']:
1536:                 hstr = "An "
1537:             else:
1538:                 hstr = "A "
1539:             longname = hstr + name
1540: 
1541:         if sys.flags.optimize < 2:
1542:             # Skip adding docstrings if interpreter is run with -OO
1543:             if self.__doc__ is None:
1544:                 self._construct_default_doc(longname=longname,
1545:                                             extradoc=extradoc,
1546:                                             docdict=docdict,
1547:                                             discrete='continuous')
1548:             else:
1549:                 dct = dict(distcont)
1550:                 self._construct_doc(docdict, dct.get(self.name))
1551: 
1552:     def _updated_ctor_param(self):
1553:         ''' Return the current version of _ctor_param, possibly updated by user.
1554: 
1555:             Used by freezing and pickling.
1556:             Keep this in sync with the signature of __init__.
1557:         '''
1558:         dct = self._ctor_param.copy()
1559:         dct['a'] = self.a
1560:         dct['b'] = self.b
1561:         dct['xtol'] = self.xtol
1562:         dct['badvalue'] = self.badvalue
1563:         dct['name'] = self.name
1564:         dct['shapes'] = self.shapes
1565:         dct['extradoc'] = self.extradoc
1566:         return dct
1567: 
1568:     def _ppf_to_solve(self, x, q, *args):
1569:         return self.cdf(*(x, )+args)-q
1570: 
1571:     def _ppf_single(self, q, *args):
1572:         left = right = None
1573:         if self.a > -np.inf:
1574:             left = self.a
1575:         if self.b < np.inf:
1576:             right = self.b
1577: 
1578:         factor = 10.
1579:         if not left:  # i.e. self.a = -inf
1580:             left = -1.*factor
1581:             while self._ppf_to_solve(left, q, *args) > 0.:
1582:                 right = left
1583:                 left *= factor
1584:             # left is now such that cdf(left) < q
1585:         if not right:  # i.e. self.b = inf
1586:             right = factor
1587:             while self._ppf_to_solve(right, q, *args) < 0.:
1588:                 left = right
1589:                 right *= factor
1590:             # right is now such that cdf(right) > q
1591: 
1592:         return optimize.brentq(self._ppf_to_solve,
1593:                                left, right, args=(q,)+args, xtol=self.xtol)
1594: 
1595:     # moment from definition
1596:     def _mom_integ0(self, x, m, *args):
1597:         return x**m * self.pdf(x, *args)
1598: 
1599:     def _mom0_sc(self, m, *args):
1600:         return integrate.quad(self._mom_integ0, self.a, self.b,
1601:                               args=(m,)+args)[0]
1602: 
1603:     # moment calculated using ppf
1604:     def _mom_integ1(self, q, m, *args):
1605:         return (self.ppf(q, *args))**m
1606: 
1607:     def _mom1_sc(self, m, *args):
1608:         return integrate.quad(self._mom_integ1, 0, 1, args=(m,)+args)[0]
1609: 
1610:     def _pdf(self, x, *args):
1611:         return derivative(self._cdf, x, dx=1e-5, args=args, order=5)
1612: 
1613:     ## Could also define any of these
1614:     def _logpdf(self, x, *args):
1615:         return log(self._pdf(x, *args))
1616: 
1617:     def _cdf_single(self, x, *args):
1618:         return integrate.quad(self._pdf, self.a, x, args=args)[0]
1619: 
1620:     def _cdf(self, x, *args):
1621:         return self._cdfvec(x, *args)
1622: 
1623:     ## generic _argcheck, _logcdf, _sf, _logsf, _ppf, _isf, _rvs are defined
1624:     ## in rv_generic
1625: 
1626:     def pdf(self, x, *args, **kwds):
1627:         '''
1628:         Probability density function at x of the given RV.
1629: 
1630:         Parameters
1631:         ----------
1632:         x : array_like
1633:             quantiles
1634:         arg1, arg2, arg3,... : array_like
1635:             The shape parameter(s) for the distribution (see docstring of the
1636:             instance object for more information)
1637:         loc : array_like, optional
1638:             location parameter (default=0)
1639:         scale : array_like, optional
1640:             scale parameter (default=1)
1641: 
1642:         Returns
1643:         -------
1644:         pdf : ndarray
1645:             Probability density function evaluated at x
1646: 
1647:         '''
1648:         args, loc, scale = self._parse_args(*args, **kwds)
1649:         x, loc, scale = map(asarray, (x, loc, scale))
1650:         args = tuple(map(asarray, args))
1651:         dtyp = np.find_common_type([x.dtype, np.float64], [])
1652:         x = np.asarray((x - loc)/scale, dtype=dtyp)
1653:         cond0 = self._argcheck(*args) & (scale > 0)
1654:         cond1 = self._support_mask(x) & (scale > 0)
1655:         cond = cond0 & cond1
1656:         output = zeros(shape(cond), dtyp)
1657:         putmask(output, (1-cond0)+np.isnan(x), self.badvalue)
1658:         if np.any(cond):
1659:             goodargs = argsreduce(cond, *((x,)+args+(scale,)))
1660:             scale, goodargs = goodargs[-1], goodargs[:-1]
1661:             place(output, cond, self._pdf(*goodargs) / scale)
1662:         if output.ndim == 0:
1663:             return output[()]
1664:         return output
1665: 
1666:     def logpdf(self, x, *args, **kwds):
1667:         '''
1668:         Log of the probability density function at x of the given RV.
1669: 
1670:         This uses a more numerically accurate calculation if available.
1671: 
1672:         Parameters
1673:         ----------
1674:         x : array_like
1675:             quantiles
1676:         arg1, arg2, arg3,... : array_like
1677:             The shape parameter(s) for the distribution (see docstring of the
1678:             instance object for more information)
1679:         loc : array_like, optional
1680:             location parameter (default=0)
1681:         scale : array_like, optional
1682:             scale parameter (default=1)
1683: 
1684:         Returns
1685:         -------
1686:         logpdf : array_like
1687:             Log of the probability density function evaluated at x
1688: 
1689:         '''
1690:         args, loc, scale = self._parse_args(*args, **kwds)
1691:         x, loc, scale = map(asarray, (x, loc, scale))
1692:         args = tuple(map(asarray, args))
1693:         dtyp = np.find_common_type([x.dtype, np.float64], [])
1694:         x = np.asarray((x - loc)/scale, dtype=dtyp)
1695:         cond0 = self._argcheck(*args) & (scale > 0)
1696:         cond1 = self._support_mask(x) & (scale > 0)
1697:         cond = cond0 & cond1
1698:         output = empty(shape(cond), dtyp)
1699:         output.fill(NINF)
1700:         putmask(output, (1-cond0)+np.isnan(x), self.badvalue)
1701:         if np.any(cond):
1702:             goodargs = argsreduce(cond, *((x,)+args+(scale,)))
1703:             scale, goodargs = goodargs[-1], goodargs[:-1]
1704:             place(output, cond, self._logpdf(*goodargs) - log(scale))
1705:         if output.ndim == 0:
1706:             return output[()]
1707:         return output
1708: 
1709:     def cdf(self, x, *args, **kwds):
1710:         '''
1711:         Cumulative distribution function of the given RV.
1712: 
1713:         Parameters
1714:         ----------
1715:         x : array_like
1716:             quantiles
1717:         arg1, arg2, arg3,... : array_like
1718:             The shape parameter(s) for the distribution (see docstring of the
1719:             instance object for more information)
1720:         loc : array_like, optional
1721:             location parameter (default=0)
1722:         scale : array_like, optional
1723:             scale parameter (default=1)
1724: 
1725:         Returns
1726:         -------
1727:         cdf : ndarray
1728:             Cumulative distribution function evaluated at `x`
1729: 
1730:         '''
1731:         args, loc, scale = self._parse_args(*args, **kwds)
1732:         x, loc, scale = map(asarray, (x, loc, scale))
1733:         args = tuple(map(asarray, args))
1734:         dtyp = np.find_common_type([x.dtype, np.float64], [])
1735:         x = np.asarray((x - loc)/scale, dtype=dtyp)
1736:         cond0 = self._argcheck(*args) & (scale > 0)
1737:         cond1 = self._open_support_mask(x) & (scale > 0)
1738:         cond2 = (x >= self.b) & cond0
1739:         cond = cond0 & cond1
1740:         output = zeros(shape(cond), dtyp)
1741:         place(output, (1-cond0)+np.isnan(x), self.badvalue)
1742:         place(output, cond2, 1.0)
1743:         if np.any(cond):  # call only if at least 1 entry
1744:             goodargs = argsreduce(cond, *((x,)+args))
1745:             place(output, cond, self._cdf(*goodargs))
1746:         if output.ndim == 0:
1747:             return output[()]
1748:         return output
1749: 
1750:     def logcdf(self, x, *args, **kwds):
1751:         '''
1752:         Log of the cumulative distribution function at x of the given RV.
1753: 
1754:         Parameters
1755:         ----------
1756:         x : array_like
1757:             quantiles
1758:         arg1, arg2, arg3,... : array_like
1759:             The shape parameter(s) for the distribution (see docstring of the
1760:             instance object for more information)
1761:         loc : array_like, optional
1762:             location parameter (default=0)
1763:         scale : array_like, optional
1764:             scale parameter (default=1)
1765: 
1766:         Returns
1767:         -------
1768:         logcdf : array_like
1769:             Log of the cumulative distribution function evaluated at x
1770: 
1771:         '''
1772:         args, loc, scale = self._parse_args(*args, **kwds)
1773:         x, loc, scale = map(asarray, (x, loc, scale))
1774:         args = tuple(map(asarray, args))
1775:         dtyp = np.find_common_type([x.dtype, np.float64], [])
1776:         x = np.asarray((x - loc)/scale, dtype=dtyp)
1777:         cond0 = self._argcheck(*args) & (scale > 0)
1778:         cond1 = self._open_support_mask(x) & (scale > 0)
1779:         cond2 = (x >= self.b) & cond0
1780:         cond = cond0 & cond1
1781:         output = empty(shape(cond), dtyp)
1782:         output.fill(NINF)
1783:         place(output, (1-cond0)*(cond1 == cond1)+np.isnan(x), self.badvalue)
1784:         place(output, cond2, 0.0)
1785:         if np.any(cond):  # call only if at least 1 entry
1786:             goodargs = argsreduce(cond, *((x,)+args))
1787:             place(output, cond, self._logcdf(*goodargs))
1788:         if output.ndim == 0:
1789:             return output[()]
1790:         return output
1791: 
1792:     def sf(self, x, *args, **kwds):
1793:         '''
1794:         Survival function (1 - `cdf`) at x of the given RV.
1795: 
1796:         Parameters
1797:         ----------
1798:         x : array_like
1799:             quantiles
1800:         arg1, arg2, arg3,... : array_like
1801:             The shape parameter(s) for the distribution (see docstring of the
1802:             instance object for more information)
1803:         loc : array_like, optional
1804:             location parameter (default=0)
1805:         scale : array_like, optional
1806:             scale parameter (default=1)
1807: 
1808:         Returns
1809:         -------
1810:         sf : array_like
1811:             Survival function evaluated at x
1812: 
1813:         '''
1814:         args, loc, scale = self._parse_args(*args, **kwds)
1815:         x, loc, scale = map(asarray, (x, loc, scale))
1816:         args = tuple(map(asarray, args))
1817:         dtyp = np.find_common_type([x.dtype, np.float64], [])
1818:         x = np.asarray((x - loc)/scale, dtype=dtyp)
1819:         cond0 = self._argcheck(*args) & (scale > 0)
1820:         cond1 = self._open_support_mask(x) & (scale > 0)
1821:         cond2 = cond0 & (x <= self.a)
1822:         cond = cond0 & cond1
1823:         output = zeros(shape(cond), dtyp)
1824:         place(output, (1-cond0)+np.isnan(x), self.badvalue)
1825:         place(output, cond2, 1.0)
1826:         if np.any(cond):
1827:             goodargs = argsreduce(cond, *((x,)+args))
1828:             place(output, cond, self._sf(*goodargs))
1829:         if output.ndim == 0:
1830:             return output[()]
1831:         return output
1832: 
1833:     def logsf(self, x, *args, **kwds):
1834:         '''
1835:         Log of the survival function of the given RV.
1836: 
1837:         Returns the log of the "survival function," defined as (1 - `cdf`),
1838:         evaluated at `x`.
1839: 
1840:         Parameters
1841:         ----------
1842:         x : array_like
1843:             quantiles
1844:         arg1, arg2, arg3,... : array_like
1845:             The shape parameter(s) for the distribution (see docstring of the
1846:             instance object for more information)
1847:         loc : array_like, optional
1848:             location parameter (default=0)
1849:         scale : array_like, optional
1850:             scale parameter (default=1)
1851: 
1852:         Returns
1853:         -------
1854:         logsf : ndarray
1855:             Log of the survival function evaluated at `x`.
1856: 
1857:         '''
1858:         args, loc, scale = self._parse_args(*args, **kwds)
1859:         x, loc, scale = map(asarray, (x, loc, scale))
1860:         args = tuple(map(asarray, args))
1861:         dtyp = np.find_common_type([x.dtype, np.float64], [])
1862:         x = np.asarray((x - loc)/scale, dtype=dtyp)
1863:         cond0 = self._argcheck(*args) & (scale > 0)
1864:         cond1 = self._open_support_mask(x) & (scale > 0)
1865:         cond2 = cond0 & (x <= self.a)
1866:         cond = cond0 & cond1
1867:         output = empty(shape(cond), dtyp)
1868:         output.fill(NINF)
1869:         place(output, (1-cond0)+np.isnan(x), self.badvalue)
1870:         place(output, cond2, 0.0)
1871:         if np.any(cond):
1872:             goodargs = argsreduce(cond, *((x,)+args))
1873:             place(output, cond, self._logsf(*goodargs))
1874:         if output.ndim == 0:
1875:             return output[()]
1876:         return output
1877: 
1878:     def ppf(self, q, *args, **kwds):
1879:         '''
1880:         Percent point function (inverse of `cdf`) at q of the given RV.
1881: 
1882:         Parameters
1883:         ----------
1884:         q : array_like
1885:             lower tail probability
1886:         arg1, arg2, arg3,... : array_like
1887:             The shape parameter(s) for the distribution (see docstring of the
1888:             instance object for more information)
1889:         loc : array_like, optional
1890:             location parameter (default=0)
1891:         scale : array_like, optional
1892:             scale parameter (default=1)
1893: 
1894:         Returns
1895:         -------
1896:         x : array_like
1897:             quantile corresponding to the lower tail probability q.
1898: 
1899:         '''
1900:         args, loc, scale = self._parse_args(*args, **kwds)
1901:         q, loc, scale = map(asarray, (q, loc, scale))
1902:         args = tuple(map(asarray, args))
1903:         cond0 = self._argcheck(*args) & (scale > 0) & (loc == loc)
1904:         cond1 = (0 < q) & (q < 1)
1905:         cond2 = cond0 & (q == 0)
1906:         cond3 = cond0 & (q == 1)
1907:         cond = cond0 & cond1
1908:         output = valarray(shape(cond), value=self.badvalue)
1909: 
1910:         lower_bound = self.a * scale + loc
1911:         upper_bound = self.b * scale + loc
1912:         place(output, cond2, argsreduce(cond2, lower_bound)[0])
1913:         place(output, cond3, argsreduce(cond3, upper_bound)[0])
1914: 
1915:         if np.any(cond):  # call only if at least 1 entry
1916:             goodargs = argsreduce(cond, *((q,)+args+(scale, loc)))
1917:             scale, loc, goodargs = goodargs[-2], goodargs[-1], goodargs[:-2]
1918:             place(output, cond, self._ppf(*goodargs) * scale + loc)
1919:         if output.ndim == 0:
1920:             return output[()]
1921:         return output
1922: 
1923:     def isf(self, q, *args, **kwds):
1924:         '''
1925:         Inverse survival function (inverse of `sf`) at q of the given RV.
1926: 
1927:         Parameters
1928:         ----------
1929:         q : array_like
1930:             upper tail probability
1931:         arg1, arg2, arg3,... : array_like
1932:             The shape parameter(s) for the distribution (see docstring of the
1933:             instance object for more information)
1934:         loc : array_like, optional
1935:             location parameter (default=0)
1936:         scale : array_like, optional
1937:             scale parameter (default=1)
1938: 
1939:         Returns
1940:         -------
1941:         x : ndarray or scalar
1942:             Quantile corresponding to the upper tail probability q.
1943: 
1944:         '''
1945:         args, loc, scale = self._parse_args(*args, **kwds)
1946:         q, loc, scale = map(asarray, (q, loc, scale))
1947:         args = tuple(map(asarray, args))
1948:         cond0 = self._argcheck(*args) & (scale > 0) & (loc == loc)
1949:         cond1 = (0 < q) & (q < 1)
1950:         cond2 = cond0 & (q == 1)
1951:         cond3 = cond0 & (q == 0)
1952:         cond = cond0 & cond1
1953:         output = valarray(shape(cond), value=self.badvalue)
1954: 
1955:         lower_bound = self.a * scale + loc
1956:         upper_bound = self.b * scale + loc
1957:         place(output, cond2, argsreduce(cond2, lower_bound)[0])
1958:         place(output, cond3, argsreduce(cond3, upper_bound)[0])
1959: 
1960:         if np.any(cond):
1961:             goodargs = argsreduce(cond, *((q,)+args+(scale, loc)))
1962:             scale, loc, goodargs = goodargs[-2], goodargs[-1], goodargs[:-2]
1963:             place(output, cond, self._isf(*goodargs) * scale + loc)
1964:         if output.ndim == 0:
1965:             return output[()]
1966:         return output
1967: 
1968:     def _nnlf(self, x, *args):
1969:         return -np.sum(self._logpdf(x, *args), axis=0)
1970: 
1971:     def _unpack_loc_scale(self, theta):
1972:         try:
1973:             loc = theta[-2]
1974:             scale = theta[-1]
1975:             args = tuple(theta[:-2])
1976:         except IndexError:
1977:             raise ValueError("Not enough input arguments.")
1978:         return loc, scale, args
1979: 
1980:     def nnlf(self, theta, x):
1981:         '''Return negative loglikelihood function.
1982: 
1983:         Notes
1984:         -----
1985:         This is ``-sum(log pdf(x, theta), axis=0)`` where `theta` are the
1986:         parameters (including loc and scale).
1987:         '''
1988:         loc, scale, args = self._unpack_loc_scale(theta)
1989:         if not self._argcheck(*args) or scale <= 0:
1990:             return inf
1991:         x = asarray((x-loc) / scale)
1992:         n_log_scale = len(x) * log(scale)
1993:         if np.any(~self._support_mask(x)):
1994:             return inf
1995:         return self._nnlf(x, *args) + n_log_scale
1996: 
1997:     def _nnlf_and_penalty(self, x, args):
1998:         cond0 = ~self._support_mask(x)
1999:         n_bad = np.count_nonzero(cond0, axis=0)
2000:         if n_bad > 0:
2001:             x = argsreduce(~cond0, x)[0]
2002:         logpdf = self._logpdf(x, *args)
2003:         finite_logpdf = np.isfinite(logpdf)
2004:         n_bad += np.sum(~finite_logpdf, axis=0)
2005:         if n_bad > 0:
2006:             penalty = n_bad * log(_XMAX) * 100
2007:             return -np.sum(logpdf[finite_logpdf], axis=0) + penalty
2008:         return -np.sum(logpdf, axis=0)
2009: 
2010:     def _penalized_nnlf(self, theta, x):
2011:         ''' Return penalized negative loglikelihood function,
2012:         i.e., - sum (log pdf(x, theta), axis=0) + penalty
2013:            where theta are the parameters (including loc and scale)
2014:         '''
2015:         loc, scale, args = self._unpack_loc_scale(theta)
2016:         if not self._argcheck(*args) or scale <= 0:
2017:             return inf
2018:         x = asarray((x-loc) / scale)
2019:         n_log_scale = len(x) * log(scale)
2020:         return self._nnlf_and_penalty(x, args) + n_log_scale
2021: 
2022:     # return starting point for fit (shape arguments + loc + scale)
2023:     def _fitstart(self, data, args=None):
2024:         if args is None:
2025:             args = (1.0,)*self.numargs
2026:         loc, scale = self._fit_loc_scale_support(data, *args)
2027:         return args + (loc, scale)
2028: 
2029:     # Return the (possibly reduced) function to optimize in order to find MLE
2030:     #  estimates for the .fit method
2031:     def _reduce_func(self, args, kwds):
2032:         # First of all, convert fshapes params to fnum: eg for stats.beta,
2033:         # shapes='a, b'. To fix `a`, can specify either `f1` or `fa`.
2034:         # Convert the latter into the former.
2035:         if self.shapes:
2036:             shapes = self.shapes.replace(',', ' ').split()
2037:             for j, s in enumerate(shapes):
2038:                 val = kwds.pop('f' + s, None) or kwds.pop('fix_' + s, None)
2039:                 if val is not None:
2040:                     key = 'f%d' % j
2041:                     if key in kwds:
2042:                         raise ValueError("Duplicate entry for %s." % key)
2043:                     else:
2044:                         kwds[key] = val
2045: 
2046:         args = list(args)
2047:         Nargs = len(args)
2048:         fixedn = []
2049:         names = ['f%d' % n for n in range(Nargs - 2)] + ['floc', 'fscale']
2050:         x0 = []
2051:         for n, key in enumerate(names):
2052:             if key in kwds:
2053:                 fixedn.append(n)
2054:                 args[n] = kwds.pop(key)
2055:             else:
2056:                 x0.append(args[n])
2057: 
2058:         if len(fixedn) == 0:
2059:             func = self._penalized_nnlf
2060:             restore = None
2061:         else:
2062:             if len(fixedn) == Nargs:
2063:                 raise ValueError(
2064:                     "All parameters fixed. There is nothing to optimize.")
2065: 
2066:             def restore(args, theta):
2067:                 # Replace with theta for all numbers not in fixedn
2068:                 # This allows the non-fixed values to vary, but
2069:                 #  we still call self.nnlf with all parameters.
2070:                 i = 0
2071:                 for n in range(Nargs):
2072:                     if n not in fixedn:
2073:                         args[n] = theta[i]
2074:                         i += 1
2075:                 return args
2076: 
2077:             def func(theta, x):
2078:                 newtheta = restore(args[:], theta)
2079:                 return self._penalized_nnlf(newtheta, x)
2080: 
2081:         return x0, func, restore, args
2082: 
2083:     def fit(self, data, *args, **kwds):
2084:         '''
2085:         Return MLEs for shape (if applicable), location, and scale
2086:         parameters from data.
2087: 
2088:         MLE stands for Maximum Likelihood Estimate.  Starting estimates for
2089:         the fit are given by input arguments; for any arguments not provided
2090:         with starting estimates, ``self._fitstart(data)`` is called to generate
2091:         such.
2092: 
2093:         One can hold some parameters fixed to specific values by passing in
2094:         keyword arguments ``f0``, ``f1``, ..., ``fn`` (for shape parameters)
2095:         and ``floc`` and ``fscale`` (for location and scale parameters,
2096:         respectively).
2097: 
2098:         Parameters
2099:         ----------
2100:         data : array_like
2101:             Data to use in calculating the MLEs.
2102:         args : floats, optional
2103:             Starting value(s) for any shape-characterizing arguments (those not
2104:             provided will be determined by a call to ``_fitstart(data)``).
2105:             No default value.
2106:         kwds : floats, optional
2107:             Starting values for the location and scale parameters; no default.
2108:             Special keyword arguments are recognized as holding certain
2109:             parameters fixed:
2110: 
2111:             - f0...fn : hold respective shape parameters fixed.
2112:               Alternatively, shape parameters to fix can be specified by name.
2113:               For example, if ``self.shapes == "a, b"``, ``fa``and ``fix_a``
2114:               are equivalent to ``f0``, and ``fb`` and ``fix_b`` are
2115:               equivalent to ``f1``.
2116: 
2117:             - floc : hold location parameter fixed to specified value.
2118: 
2119:             - fscale : hold scale parameter fixed to specified value.
2120: 
2121:             - optimizer : The optimizer to use.  The optimizer must take ``func``,
2122:               and starting position as the first two arguments,
2123:               plus ``args`` (for extra arguments to pass to the
2124:               function to be optimized) and ``disp=0`` to suppress
2125:               output as keyword arguments.
2126: 
2127:         Returns
2128:         -------
2129:         mle_tuple : tuple of floats
2130:             MLEs for any shape parameters (if applicable), followed by those
2131:             for location and scale. For most random variables, shape statistics
2132:             will be returned, but there are exceptions (e.g. ``norm``).
2133: 
2134:         Notes
2135:         -----
2136:         This fit is computed by maximizing a log-likelihood function, with
2137:         penalty applied for samples outside of range of the distribution. The
2138:         returned answer is not guaranteed to be the globally optimal MLE, it
2139:         may only be locally optimal, or the optimization may fail altogether.
2140: 
2141: 
2142:         Examples
2143:         --------
2144: 
2145:         Generate some data to fit: draw random variates from the `beta`
2146:         distribution
2147: 
2148:         >>> from scipy.stats import beta
2149:         >>> a, b = 1., 2.
2150:         >>> x = beta.rvs(a, b, size=1000)
2151: 
2152:         Now we can fit all four parameters (``a``, ``b``, ``loc`` and ``scale``):
2153: 
2154:         >>> a1, b1, loc1, scale1 = beta.fit(x)
2155: 
2156:         We can also use some prior knowledge about the dataset: let's keep
2157:         ``loc`` and ``scale`` fixed:
2158: 
2159:         >>> a1, b1, loc1, scale1 = beta.fit(x, floc=0, fscale=1)
2160:         >>> loc1, scale1
2161:         (0, 1)
2162: 
2163:         We can also keep shape parameters fixed by using ``f``-keywords. To
2164:         keep the zero-th shape parameter ``a`` equal 1, use ``f0=1`` or,
2165:         equivalently, ``fa=1``:
2166: 
2167:         >>> a1, b1, loc1, scale1 = beta.fit(x, fa=1, floc=0, fscale=1)
2168:         >>> a1
2169:         1
2170: 
2171:         Not all distributions return estimates for the shape parameters.
2172:         ``norm`` for example just returns estimates for location and scale:
2173: 
2174:         >>> from scipy.stats import norm
2175:         >>> x = norm.rvs(a, b, size=1000, random_state=123)
2176:         >>> loc1, scale1 = norm.fit(x)
2177:         >>> loc1, scale1
2178:         (0.92087172783841631, 2.0015750750324668)
2179:         '''
2180:         Narg = len(args)
2181:         if Narg > self.numargs:
2182:             raise TypeError("Too many input arguments.")
2183: 
2184:         start = [None]*2
2185:         if (Narg < self.numargs) or not ('loc' in kwds and
2186:                                          'scale' in kwds):
2187:             # get distribution specific starting locations
2188:             start = self._fitstart(data)
2189:             args += start[Narg:-2]
2190:         loc = kwds.pop('loc', start[-2])
2191:         scale = kwds.pop('scale', start[-1])
2192:         args += (loc, scale)
2193:         x0, func, restore, args = self._reduce_func(args, kwds)
2194: 
2195:         optimizer = kwds.pop('optimizer', optimize.fmin)
2196:         # convert string to function in scipy.optimize
2197:         if not callable(optimizer) and isinstance(optimizer, string_types):
2198:             if not optimizer.startswith('fmin_'):
2199:                 optimizer = "fmin_"+optimizer
2200:             if optimizer == 'fmin_':
2201:                 optimizer = 'fmin'
2202:             try:
2203:                 optimizer = getattr(optimize, optimizer)
2204:             except AttributeError:
2205:                 raise ValueError("%s is not a valid optimizer" % optimizer)
2206: 
2207:         # by now kwds must be empty, since everybody took what they needed
2208:         if kwds:
2209:             raise TypeError("Unknown arguments: %s." % kwds)
2210: 
2211:         vals = optimizer(func, x0, args=(ravel(data),), disp=0)
2212:         if restore is not None:
2213:             vals = restore(args, vals)
2214:         vals = tuple(vals)
2215:         return vals
2216: 
2217:     def _fit_loc_scale_support(self, data, *args):
2218:         '''
2219:         Estimate loc and scale parameters from data accounting for support.
2220: 
2221:         Parameters
2222:         ----------
2223:         data : array_like
2224:             Data to fit.
2225:         arg1, arg2, arg3,... : array_like
2226:             The shape parameter(s) for the distribution (see docstring of the
2227:             instance object for more information).
2228: 
2229:         Returns
2230:         -------
2231:         Lhat : float
2232:             Estimated location parameter for the data.
2233:         Shat : float
2234:             Estimated scale parameter for the data.
2235: 
2236:         '''
2237:         data = np.asarray(data)
2238: 
2239:         # Estimate location and scale according to the method of moments.
2240:         loc_hat, scale_hat = self.fit_loc_scale(data, *args)
2241: 
2242:         # Compute the support according to the shape parameters.
2243:         self._argcheck(*args)
2244:         a, b = self.a, self.b
2245:         support_width = b - a
2246: 
2247:         # If the support is empty then return the moment-based estimates.
2248:         if support_width <= 0:
2249:             return loc_hat, scale_hat
2250: 
2251:         # Compute the proposed support according to the loc and scale estimates.
2252:         a_hat = loc_hat + a * scale_hat
2253:         b_hat = loc_hat + b * scale_hat
2254: 
2255:         # Use the moment-based estimates if they are compatible with the data.
2256:         data_a = np.min(data)
2257:         data_b = np.max(data)
2258:         if a_hat < data_a and data_b < b_hat:
2259:             return loc_hat, scale_hat
2260: 
2261:         # Otherwise find other estimates that are compatible with the data.
2262:         data_width = data_b - data_a
2263:         rel_margin = 0.1
2264:         margin = data_width * rel_margin
2265: 
2266:         # For a finite interval, both the location and scale
2267:         # should have interesting values.
2268:         if support_width < np.inf:
2269:             loc_hat = (data_a - a) - margin
2270:             scale_hat = (data_width + 2 * margin) / support_width
2271:             return loc_hat, scale_hat
2272: 
2273:         # For a one-sided interval, use only an interesting location parameter.
2274:         if a > -np.inf:
2275:             return (data_a - a) - margin, 1
2276:         elif b < np.inf:
2277:             return (data_b - b) + margin, 1
2278:         else:
2279:             raise RuntimeError
2280: 
2281:     def fit_loc_scale(self, data, *args):
2282:         '''
2283:         Estimate loc and scale parameters from data using 1st and 2nd moments.
2284: 
2285:         Parameters
2286:         ----------
2287:         data : array_like
2288:             Data to fit.
2289:         arg1, arg2, arg3,... : array_like
2290:             The shape parameter(s) for the distribution (see docstring of the
2291:             instance object for more information).
2292: 
2293:         Returns
2294:         -------
2295:         Lhat : float
2296:             Estimated location parameter for the data.
2297:         Shat : float
2298:             Estimated scale parameter for the data.
2299: 
2300:         '''
2301:         mu, mu2 = self.stats(*args, **{'moments': 'mv'})
2302:         tmp = asarray(data)
2303:         muhat = tmp.mean()
2304:         mu2hat = tmp.var()
2305:         Shat = sqrt(mu2hat / mu2)
2306:         Lhat = muhat - Shat*mu
2307:         if not np.isfinite(Lhat):
2308:             Lhat = 0
2309:         if not (np.isfinite(Shat) and (0 < Shat)):
2310:             Shat = 1
2311:         return Lhat, Shat
2312: 
2313:     def _entropy(self, *args):
2314:         def integ(x):
2315:             val = self._pdf(x, *args)
2316:             return entr(val)
2317: 
2318:         # upper limit is often inf, so suppress warnings when integrating
2319:         olderr = np.seterr(over='ignore')
2320:         h = integrate.quad(integ, self.a, self.b)[0]
2321:         np.seterr(**olderr)
2322: 
2323:         if not np.isnan(h):
2324:             return h
2325:         else:
2326:             # try with different limits if integration problems
2327:             low, upp = self.ppf([1e-10, 1. - 1e-10], *args)
2328:             if np.isinf(self.b):
2329:                 upper = upp
2330:             else:
2331:                 upper = self.b
2332:             if np.isinf(self.a):
2333:                 lower = low
2334:             else:
2335:                 lower = self.a
2336:             return integrate.quad(integ, lower, upper)[0]
2337: 
2338:     def expect(self, func=None, args=(), loc=0, scale=1, lb=None, ub=None,
2339:                conditional=False, **kwds):
2340:         '''Calculate expected value of a function with respect to the
2341:         distribution.
2342: 
2343:         The expected value of a function ``f(x)`` with respect to a
2344:         distribution ``dist`` is defined as::
2345: 
2346:                     ubound
2347:             E[x] = Integral(f(x) * dist.pdf(x))
2348:                     lbound
2349: 
2350:         Parameters
2351:         ----------
2352:         func : callable, optional
2353:             Function for which integral is calculated. Takes only one argument.
2354:             The default is the identity mapping f(x) = x.
2355:         args : tuple, optional
2356:             Shape parameters of the distribution.
2357:         loc : float, optional
2358:             Location parameter (default=0).
2359:         scale : float, optional
2360:             Scale parameter (default=1).
2361:         lb, ub : scalar, optional
2362:             Lower and upper bound for integration. Default is set to the
2363:             support of the distribution.
2364:         conditional : bool, optional
2365:             If True, the integral is corrected by the conditional probability
2366:             of the integration interval.  The return value is the expectation
2367:             of the function, conditional on being in the given interval.
2368:             Default is False.
2369: 
2370:         Additional keyword arguments are passed to the integration routine.
2371: 
2372:         Returns
2373:         -------
2374:         expect : float
2375:             The calculated expected value.
2376: 
2377:         Notes
2378:         -----
2379:         The integration behavior of this function is inherited from
2380:         `integrate.quad`.
2381: 
2382:         '''
2383:         lockwds = {'loc': loc,
2384:                    'scale': scale}
2385:         self._argcheck(*args)
2386:         if func is None:
2387:             def fun(x, *args):
2388:                 return x * self.pdf(x, *args, **lockwds)
2389:         else:
2390:             def fun(x, *args):
2391:                 return func(x) * self.pdf(x, *args, **lockwds)
2392:         if lb is None:
2393:             lb = loc + self.a * scale
2394:         if ub is None:
2395:             ub = loc + self.b * scale
2396:         if conditional:
2397:             invfac = (self.sf(lb, *args, **lockwds)
2398:                       - self.sf(ub, *args, **lockwds))
2399:         else:
2400:             invfac = 1.0
2401:         kwds['args'] = args
2402:         # Silence floating point warnings from integration.
2403:         olderr = np.seterr(all='ignore')
2404:         vals = integrate.quad(fun, lb, ub, **kwds)[0] / invfac
2405:         np.seterr(**olderr)
2406:         return vals
2407: 
2408: 
2409: # Helpers for the discrete distributions
2410: def _drv2_moment(self, n, *args):
2411:     '''Non-central moment of discrete distribution.'''
2412:     def fun(x):
2413:         return np.power(x, n) * self._pmf(x, *args)
2414:     return _expect(fun, self.a, self.b, self.ppf(0.5, *args), self.inc)
2415: 
2416: 
2417: def _drv2_ppfsingle(self, q, *args):  # Use basic bisection algorithm
2418:     b = self.b
2419:     a = self.a
2420:     if isinf(b):            # Be sure ending point is > q
2421:         b = int(max(100*q, 10))
2422:         while 1:
2423:             if b >= self.b:
2424:                 qb = 1.0
2425:                 break
2426:             qb = self._cdf(b, *args)
2427:             if (qb < q):
2428:                 b += 10
2429:             else:
2430:                 break
2431:     else:
2432:         qb = 1.0
2433:     if isinf(a):    # be sure starting point < q
2434:         a = int(min(-100*q, -10))
2435:         while 1:
2436:             if a <= self.a:
2437:                 qb = 0.0
2438:                 break
2439:             qa = self._cdf(a, *args)
2440:             if (qa > q):
2441:                 a -= 10
2442:             else:
2443:                 break
2444:     else:
2445:         qa = self._cdf(a, *args)
2446: 
2447:     while 1:
2448:         if (qa == q):
2449:             return a
2450:         if (qb == q):
2451:             return b
2452:         if b <= a+1:
2453:             # testcase: return wrong number at lower index
2454:             # python -c "from scipy.stats import zipf;print zipf.ppf(0.01, 2)" wrong
2455:             # python -c "from scipy.stats import zipf;print zipf.ppf([0.01, 0.61, 0.77, 0.83], 2)"
2456:             # python -c "from scipy.stats import logser;print logser.ppf([0.1, 0.66, 0.86, 0.93], 0.6)"
2457:             if qa > q:
2458:                 return a
2459:             else:
2460:                 return b
2461:         c = int((a+b)/2.0)
2462:         qc = self._cdf(c, *args)
2463:         if (qc < q):
2464:             if a != c:
2465:                 a = c
2466:             else:
2467:                 raise RuntimeError('updating stopped, endless loop')
2468:             qa = qc
2469:         elif (qc > q):
2470:             if b != c:
2471:                 b = c
2472:             else:
2473:                 raise RuntimeError('updating stopped, endless loop')
2474:             qb = qc
2475:         else:
2476:             return c
2477: 
2478: 
2479: def entropy(pk, qk=None, base=None):
2480:     '''Calculate the entropy of a distribution for given probability values.
2481: 
2482:     If only probabilities `pk` are given, the entropy is calculated as
2483:     ``S = -sum(pk * log(pk), axis=0)``.
2484: 
2485:     If `qk` is not None, then compute the Kullback-Leibler divergence
2486:     ``S = sum(pk * log(pk / qk), axis=0)``.
2487: 
2488:     This routine will normalize `pk` and `qk` if they don't sum to 1.
2489: 
2490:     Parameters
2491:     ----------
2492:     pk : sequence
2493:         Defines the (discrete) distribution. ``pk[i]`` is the (possibly
2494:         unnormalized) probability of event ``i``.
2495:     qk : sequence, optional
2496:         Sequence against which the relative entropy is computed. Should be in
2497:         the same format as `pk`.
2498:     base : float, optional
2499:         The logarithmic base to use, defaults to ``e`` (natural logarithm).
2500: 
2501:     Returns
2502:     -------
2503:     S : float
2504:         The calculated entropy.
2505: 
2506:     '''
2507:     pk = asarray(pk)
2508:     pk = 1.0*pk / np.sum(pk, axis=0)
2509:     if qk is None:
2510:         vec = entr(pk)
2511:     else:
2512:         qk = asarray(qk)
2513:         if len(qk) != len(pk):
2514:             raise ValueError("qk and pk must have same length.")
2515:         qk = 1.0*qk / np.sum(qk, axis=0)
2516:         vec = rel_entr(pk, qk)
2517:     S = np.sum(vec, axis=0)
2518:     if base is not None:
2519:         S /= log(base)
2520:     return S
2521: 
2522: 
2523: # Must over-ride one of _pmf or _cdf or pass in
2524: #  x_k, p(x_k) lists in initialization
2525: 
2526: class rv_discrete(rv_generic):
2527:     '''
2528:     A generic discrete random variable class meant for subclassing.
2529: 
2530:     `rv_discrete` is a base class to construct specific distribution classes
2531:     and instances for discrete random variables. It can also be used
2532:     to construct an arbitrary distribution defined by a list of support
2533:     points and corresponding probabilities.
2534: 
2535:     Parameters
2536:     ----------
2537:     a : float, optional
2538:         Lower bound of the support of the distribution, default: 0
2539:     b : float, optional
2540:         Upper bound of the support of the distribution, default: plus infinity
2541:     moment_tol : float, optional
2542:         The tolerance for the generic calculation of moments.
2543:     values : tuple of two array_like, optional
2544:         ``(xk, pk)`` where ``xk`` are integers with non-zero
2545:         probabilities ``pk``  with ``sum(pk) = 1``.
2546:     inc : integer, optional
2547:         Increment for the support of the distribution.
2548:         Default is 1. (other values have not been tested)
2549:     badvalue : float, optional
2550:         The value in a result arrays that indicates a value that for which
2551:         some argument restriction is violated, default is np.nan.
2552:     name : str, optional
2553:         The name of the instance. This string is used to construct the default
2554:         example for distributions.
2555:     longname : str, optional
2556:         This string is used as part of the first line of the docstring returned
2557:         when a subclass has no docstring of its own. Note: `longname` exists
2558:         for backwards compatibility, do not use for new subclasses.
2559:     shapes : str, optional
2560:         The shape of the distribution. For example "m, n" for a distribution
2561:         that takes two integers as the two shape arguments for all its methods
2562:         If not provided, shape parameters will be inferred from
2563:         the signatures of the private methods, ``_pmf`` and ``_cdf`` of
2564:         the instance.
2565:     extradoc :  str, optional
2566:         This string is used as the last part of the docstring returned when a
2567:         subclass has no docstring of its own. Note: `extradoc` exists for
2568:         backwards compatibility, do not use for new subclasses.
2569:     seed : None or int or ``numpy.random.RandomState`` instance, optional
2570:         This parameter defines the RandomState object to use for drawing
2571:         random variates.
2572:         If None, the global np.random state is used.
2573:         If integer, it is used to seed the local RandomState instance.
2574:         Default is None.
2575: 
2576:     Methods
2577:     -------
2578:     rvs
2579:     pmf
2580:     logpmf
2581:     cdf
2582:     logcdf
2583:     sf
2584:     logsf
2585:     ppf
2586:     isf
2587:     moment
2588:     stats
2589:     entropy
2590:     expect
2591:     median
2592:     mean
2593:     std
2594:     var
2595:     interval
2596:     __call__
2597: 
2598: 
2599:     Notes
2600:     -----
2601: 
2602:     This class is similar to `rv_continuous`. Whether a shape parameter is
2603:     valid is decided by an ``_argcheck`` method (which defaults to checking
2604:     that its arguments are strictly positive.)
2605:     The main differences are:
2606: 
2607:     - the support of the distribution is a set of integers
2608:     - instead of the probability density function, ``pdf`` (and the
2609:       corresponding private ``_pdf``), this class defines the
2610:       *probability mass function*, `pmf` (and the corresponding
2611:       private ``_pmf``.)
2612:     - scale parameter is not defined.
2613: 
2614:     To create a new discrete distribution, we would do the following:
2615: 
2616:     >>> from scipy.stats import rv_discrete
2617:     >>> class poisson_gen(rv_discrete):
2618:     ...     "Poisson distribution"
2619:     ...     def _pmf(self, k, mu):
2620:     ...         return exp(-mu) * mu**k / factorial(k)
2621: 
2622:     and create an instance::
2623: 
2624:     >>> poisson = poisson_gen(name="poisson")
2625: 
2626:     Note that above we defined the Poisson distribution in the standard form.
2627:     Shifting the distribution can be done by providing the ``loc`` parameter
2628:     to the methods of the instance. For example, ``poisson.pmf(x, mu, loc)``
2629:     delegates the work to ``poisson._pmf(x-loc, mu)``.
2630: 
2631:     **Discrete distributions from a list of probabilities**
2632: 
2633:     Alternatively, you can construct an arbitrary discrete rv defined
2634:     on a finite set of values ``xk`` with ``Prob{X=xk} = pk`` by using the
2635:     ``values`` keyword argument to the `rv_discrete` constructor.
2636: 
2637:     Examples
2638:     --------
2639: 
2640:     Custom made discrete distribution:
2641: 
2642:     >>> from scipy import stats
2643:     >>> xk = np.arange(7)
2644:     >>> pk = (0.1, 0.2, 0.3, 0.1, 0.1, 0.0, 0.2)
2645:     >>> custm = stats.rv_discrete(name='custm', values=(xk, pk))
2646:     >>>
2647:     >>> import matplotlib.pyplot as plt
2648:     >>> fig, ax = plt.subplots(1, 1)
2649:     >>> ax.plot(xk, custm.pmf(xk), 'ro', ms=12, mec='r')
2650:     >>> ax.vlines(xk, 0, custm.pmf(xk), colors='r', lw=4)
2651:     >>> plt.show()
2652: 
2653:     Random number generation:
2654: 
2655:     >>> R = custm.rvs(size=100)
2656: 
2657:     '''
2658:     def __new__(cls, a=0, b=inf, name=None, badvalue=None,
2659:                  moment_tol=1e-8, values=None, inc=1, longname=None,
2660:                  shapes=None, extradoc=None, seed=None):
2661: 
2662:         if values is not None:
2663:             # dispatch to a subclass
2664:             return super(rv_discrete, cls).__new__(rv_sample)
2665:         else:
2666:             # business as usual
2667:             return super(rv_discrete, cls).__new__(cls)
2668: 
2669:     def __init__(self, a=0, b=inf, name=None, badvalue=None,
2670:                  moment_tol=1e-8, values=None, inc=1, longname=None,
2671:                  shapes=None, extradoc=None, seed=None):
2672: 
2673:         super(rv_discrete, self).__init__(seed)
2674: 
2675:         # cf generic freeze
2676:         self._ctor_param = dict(
2677:             a=a, b=b, name=name, badvalue=badvalue,
2678:             moment_tol=moment_tol, values=values, inc=inc,
2679:             longname=longname, shapes=shapes, extradoc=extradoc, seed=seed)
2680: 
2681:         if badvalue is None:
2682:             badvalue = nan
2683:         self.badvalue = badvalue
2684:         self.a = a
2685:         self.b = b
2686:         self.moment_tol = moment_tol
2687:         self.inc = inc
2688:         self._cdfvec = vectorize(self._cdf_single, otypes='d')
2689:         self.vecentropy = vectorize(self._entropy)
2690:         self.shapes = shapes
2691: 
2692:         if values is not None:
2693:             raise ValueError("rv_discrete.__init__(..., values != None, ...)")
2694: 
2695:         self._construct_argparser(meths_to_inspect=[self._pmf, self._cdf],
2696:                                   locscale_in='loc=0',
2697:                                   # scale=1 for discrete RVs
2698:                                   locscale_out='loc, 1')
2699: 
2700:         # nin correction needs to be after we know numargs
2701:         # correct nin for generic moment vectorization
2702:         _vec_generic_moment = vectorize(_drv2_moment, otypes='d')
2703:         _vec_generic_moment.nin = self.numargs + 2
2704:         self.generic_moment = instancemethod(_vec_generic_moment,
2705:                                              self, rv_discrete)
2706: 
2707:         # correct nin for ppf vectorization
2708:         _vppf = vectorize(_drv2_ppfsingle, otypes='d')
2709:         _vppf.nin = self.numargs + 2
2710:         self._ppfvec = instancemethod(_vppf,
2711:                                       self, rv_discrete)
2712: 
2713:         # now that self.numargs is defined, we can adjust nin
2714:         self._cdfvec.nin = self.numargs + 1
2715: 
2716:         self._construct_docstrings(name, longname, extradoc)
2717: 
2718:     def _construct_docstrings(self, name, longname, extradoc):
2719:         if name is None:
2720:             name = 'Distribution'
2721:         self.name = name
2722:         self.extradoc = extradoc
2723: 
2724:         # generate docstring for subclass instances
2725:         if longname is None:
2726:             if name[0] in ['aeiouAEIOU']:
2727:                 hstr = "An "
2728:             else:
2729:                 hstr = "A "
2730:             longname = hstr + name
2731: 
2732:         if sys.flags.optimize < 2:
2733:             # Skip adding docstrings if interpreter is run with -OO
2734:             if self.__doc__ is None:
2735:                 self._construct_default_doc(longname=longname,
2736:                                             extradoc=extradoc,
2737:                                             docdict=docdict_discrete,
2738:                                             discrete='discrete')
2739:             else:
2740:                 dct = dict(distdiscrete)
2741:                 self._construct_doc(docdict_discrete, dct.get(self.name))
2742: 
2743:             # discrete RV do not have the scale parameter, remove it
2744:             self.__doc__ = self.__doc__.replace(
2745:                 '\n    scale : array_like, '
2746:                 'optional\n        scale parameter (default=1)', '')
2747: 
2748:     def _updated_ctor_param(self):
2749:         ''' Return the current version of _ctor_param, possibly updated by user.
2750: 
2751:             Used by freezing and pickling.
2752:             Keep this in sync with the signature of __init__.
2753:         '''
2754:         dct = self._ctor_param.copy()
2755:         dct['a'] = self.a
2756:         dct['b'] = self.b
2757:         dct['badvalue'] = self.badvalue
2758:         dct['moment_tol'] = self.moment_tol
2759:         dct['inc'] = self.inc
2760:         dct['name'] = self.name
2761:         dct['shapes'] = self.shapes
2762:         dct['extradoc'] = self.extradoc
2763:         return dct
2764: 
2765:     def _nonzero(self, k, *args):
2766:         return floor(k) == k
2767: 
2768:     def _pmf(self, k, *args):
2769:         return self._cdf(k, *args) - self._cdf(k-1, *args)
2770: 
2771:     def _logpmf(self, k, *args):
2772:         return log(self._pmf(k, *args))
2773: 
2774:     def _cdf_single(self, k, *args):
2775:         m = arange(int(self.a), k+1)
2776:         return np.sum(self._pmf(m, *args), axis=0)
2777: 
2778:     def _cdf(self, x, *args):
2779:         k = floor(x)
2780:         return self._cdfvec(k, *args)
2781: 
2782:     # generic _logcdf, _sf, _logsf, _ppf, _isf, _rvs defined in rv_generic
2783: 
2784:     def rvs(self, *args, **kwargs):
2785:         '''
2786:         Random variates of given type.
2787: 
2788:         Parameters
2789:         ----------
2790:         arg1, arg2, arg3,... : array_like
2791:             The shape parameter(s) for the distribution (see docstring of the
2792:             instance object for more information).
2793:         loc : array_like, optional
2794:             Location parameter (default=0).
2795:         size : int or tuple of ints, optional
2796:             Defining number of random variates (Default is 1).  Note that `size`
2797:             has to be given as keyword, not as positional argument.
2798:         random_state : None or int or ``np.random.RandomState`` instance, optional
2799:             If int or RandomState, use it for drawing the random variates.
2800:             If None, rely on ``self.random_state``.
2801:             Default is None.
2802: 
2803:         Returns
2804:         -------
2805:         rvs : ndarray or scalar
2806:             Random variates of given `size`.
2807: 
2808:         '''
2809:         kwargs['discrete'] = True
2810:         return super(rv_discrete, self).rvs(*args, **kwargs)
2811: 
2812:     def pmf(self, k, *args, **kwds):
2813:         '''
2814:         Probability mass function at k of the given RV.
2815: 
2816:         Parameters
2817:         ----------
2818:         k : array_like
2819:             Quantiles.
2820:         arg1, arg2, arg3,... : array_like
2821:             The shape parameter(s) for the distribution (see docstring of the
2822:             instance object for more information)
2823:         loc : array_like, optional
2824:             Location parameter (default=0).
2825: 
2826:         Returns
2827:         -------
2828:         pmf : array_like
2829:             Probability mass function evaluated at k
2830: 
2831:         '''
2832:         args, loc, _ = self._parse_args(*args, **kwds)
2833:         k, loc = map(asarray, (k, loc))
2834:         args = tuple(map(asarray, args))
2835:         k = asarray((k-loc))
2836:         cond0 = self._argcheck(*args)
2837:         cond1 = (k >= self.a) & (k <= self.b) & self._nonzero(k, *args)
2838:         cond = cond0 & cond1
2839:         output = zeros(shape(cond), 'd')
2840:         place(output, (1-cond0) + np.isnan(k), self.badvalue)
2841:         if np.any(cond):
2842:             goodargs = argsreduce(cond, *((k,)+args))
2843:             place(output, cond, np.clip(self._pmf(*goodargs), 0, 1))
2844:         if output.ndim == 0:
2845:             return output[()]
2846:         return output
2847: 
2848:     def logpmf(self, k, *args, **kwds):
2849:         '''
2850:         Log of the probability mass function at k of the given RV.
2851: 
2852:         Parameters
2853:         ----------
2854:         k : array_like
2855:             Quantiles.
2856:         arg1, arg2, arg3,... : array_like
2857:             The shape parameter(s) for the distribution (see docstring of the
2858:             instance object for more information).
2859:         loc : array_like, optional
2860:             Location parameter. Default is 0.
2861: 
2862:         Returns
2863:         -------
2864:         logpmf : array_like
2865:             Log of the probability mass function evaluated at k.
2866: 
2867:         '''
2868:         args, loc, _ = self._parse_args(*args, **kwds)
2869:         k, loc = map(asarray, (k, loc))
2870:         args = tuple(map(asarray, args))
2871:         k = asarray((k-loc))
2872:         cond0 = self._argcheck(*args)
2873:         cond1 = (k >= self.a) & (k <= self.b) & self._nonzero(k, *args)
2874:         cond = cond0 & cond1
2875:         output = empty(shape(cond), 'd')
2876:         output.fill(NINF)
2877:         place(output, (1-cond0) + np.isnan(k), self.badvalue)
2878:         if np.any(cond):
2879:             goodargs = argsreduce(cond, *((k,)+args))
2880:             place(output, cond, self._logpmf(*goodargs))
2881:         if output.ndim == 0:
2882:             return output[()]
2883:         return output
2884: 
2885:     def cdf(self, k, *args, **kwds):
2886:         '''
2887:         Cumulative distribution function of the given RV.
2888: 
2889:         Parameters
2890:         ----------
2891:         k : array_like, int
2892:             Quantiles.
2893:         arg1, arg2, arg3,... : array_like
2894:             The shape parameter(s) for the distribution (see docstring of the
2895:             instance object for more information).
2896:         loc : array_like, optional
2897:             Location parameter (default=0).
2898: 
2899:         Returns
2900:         -------
2901:         cdf : ndarray
2902:             Cumulative distribution function evaluated at `k`.
2903: 
2904:         '''
2905:         args, loc, _ = self._parse_args(*args, **kwds)
2906:         k, loc = map(asarray, (k, loc))
2907:         args = tuple(map(asarray, args))
2908:         k = asarray((k-loc))
2909:         cond0 = self._argcheck(*args)
2910:         cond1 = (k >= self.a) & (k < self.b)
2911:         cond2 = (k >= self.b)
2912:         cond = cond0 & cond1
2913:         output = zeros(shape(cond), 'd')
2914:         place(output, (1-cond0) + np.isnan(k), self.badvalue)
2915:         place(output, cond2*(cond0 == cond0), 1.0)
2916: 
2917:         if np.any(cond):
2918:             goodargs = argsreduce(cond, *((k,)+args))
2919:             place(output, cond, np.clip(self._cdf(*goodargs), 0, 1))
2920:         if output.ndim == 0:
2921:             return output[()]
2922:         return output
2923: 
2924:     def logcdf(self, k, *args, **kwds):
2925:         '''
2926:         Log of the cumulative distribution function at k of the given RV.
2927: 
2928:         Parameters
2929:         ----------
2930:         k : array_like, int
2931:             Quantiles.
2932:         arg1, arg2, arg3,... : array_like
2933:             The shape parameter(s) for the distribution (see docstring of the
2934:             instance object for more information).
2935:         loc : array_like, optional
2936:             Location parameter (default=0).
2937: 
2938:         Returns
2939:         -------
2940:         logcdf : array_like
2941:             Log of the cumulative distribution function evaluated at k.
2942: 
2943:         '''
2944:         args, loc, _ = self._parse_args(*args, **kwds)
2945:         k, loc = map(asarray, (k, loc))
2946:         args = tuple(map(asarray, args))
2947:         k = asarray((k-loc))
2948:         cond0 = self._argcheck(*args)
2949:         cond1 = (k >= self.a) & (k < self.b)
2950:         cond2 = (k >= self.b)
2951:         cond = cond0 & cond1
2952:         output = empty(shape(cond), 'd')
2953:         output.fill(NINF)
2954:         place(output, (1-cond0) + np.isnan(k), self.badvalue)
2955:         place(output, cond2*(cond0 == cond0), 0.0)
2956: 
2957:         if np.any(cond):
2958:             goodargs = argsreduce(cond, *((k,)+args))
2959:             place(output, cond, self._logcdf(*goodargs))
2960:         if output.ndim == 0:
2961:             return output[()]
2962:         return output
2963: 
2964:     def sf(self, k, *args, **kwds):
2965:         '''
2966:         Survival function (1 - `cdf`) at k of the given RV.
2967: 
2968:         Parameters
2969:         ----------
2970:         k : array_like
2971:             Quantiles.
2972:         arg1, arg2, arg3,... : array_like
2973:             The shape parameter(s) for the distribution (see docstring of the
2974:             instance object for more information).
2975:         loc : array_like, optional
2976:             Location parameter (default=0).
2977: 
2978:         Returns
2979:         -------
2980:         sf : array_like
2981:             Survival function evaluated at k.
2982: 
2983:         '''
2984:         args, loc, _ = self._parse_args(*args, **kwds)
2985:         k, loc = map(asarray, (k, loc))
2986:         args = tuple(map(asarray, args))
2987:         k = asarray(k-loc)
2988:         cond0 = self._argcheck(*args)
2989:         cond1 = (k >= self.a) & (k < self.b)
2990:         cond2 = (k < self.a) & cond0
2991:         cond = cond0 & cond1
2992:         output = zeros(shape(cond), 'd')
2993:         place(output, (1-cond0) + np.isnan(k), self.badvalue)
2994:         place(output, cond2, 1.0)
2995:         if np.any(cond):
2996:             goodargs = argsreduce(cond, *((k,)+args))
2997:             place(output, cond, np.clip(self._sf(*goodargs), 0, 1))
2998:         if output.ndim == 0:
2999:             return output[()]
3000:         return output
3001: 
3002:     def logsf(self, k, *args, **kwds):
3003:         '''
3004:         Log of the survival function of the given RV.
3005: 
3006:         Returns the log of the "survival function," defined as 1 - `cdf`,
3007:         evaluated at `k`.
3008: 
3009:         Parameters
3010:         ----------
3011:         k : array_like
3012:             Quantiles.
3013:         arg1, arg2, arg3,... : array_like
3014:             The shape parameter(s) for the distribution (see docstring of the
3015:             instance object for more information).
3016:         loc : array_like, optional
3017:             Location parameter (default=0).
3018: 
3019:         Returns
3020:         -------
3021:         logsf : ndarray
3022:             Log of the survival function evaluated at `k`.
3023: 
3024:         '''
3025:         args, loc, _ = self._parse_args(*args, **kwds)
3026:         k, loc = map(asarray, (k, loc))
3027:         args = tuple(map(asarray, args))
3028:         k = asarray(k-loc)
3029:         cond0 = self._argcheck(*args)
3030:         cond1 = (k >= self.a) & (k < self.b)
3031:         cond2 = (k < self.a) & cond0
3032:         cond = cond0 & cond1
3033:         output = empty(shape(cond), 'd')
3034:         output.fill(NINF)
3035:         place(output, (1-cond0) + np.isnan(k), self.badvalue)
3036:         place(output, cond2, 0.0)
3037:         if np.any(cond):
3038:             goodargs = argsreduce(cond, *((k,)+args))
3039:             place(output, cond, self._logsf(*goodargs))
3040:         if output.ndim == 0:
3041:             return output[()]
3042:         return output
3043: 
3044:     def ppf(self, q, *args, **kwds):
3045:         '''
3046:         Percent point function (inverse of `cdf`) at q of the given RV.
3047: 
3048:         Parameters
3049:         ----------
3050:         q : array_like
3051:             Lower tail probability.
3052:         arg1, arg2, arg3,... : array_like
3053:             The shape parameter(s) for the distribution (see docstring of the
3054:             instance object for more information).
3055:         loc : array_like, optional
3056:             Location parameter (default=0).
3057: 
3058:         Returns
3059:         -------
3060:         k : array_like
3061:             Quantile corresponding to the lower tail probability, q.
3062: 
3063:         '''
3064:         args, loc, _ = self._parse_args(*args, **kwds)
3065:         q, loc = map(asarray, (q, loc))
3066:         args = tuple(map(asarray, args))
3067:         cond0 = self._argcheck(*args) & (loc == loc)
3068:         cond1 = (q > 0) & (q < 1)
3069:         cond2 = (q == 1) & cond0
3070:         cond = cond0 & cond1
3071:         output = valarray(shape(cond), value=self.badvalue, typecode='d')
3072:         # output type 'd' to handle nin and inf
3073:         place(output, (q == 0)*(cond == cond), self.a-1)
3074:         place(output, cond2, self.b)
3075:         if np.any(cond):
3076:             goodargs = argsreduce(cond, *((q,)+args+(loc,)))
3077:             loc, goodargs = goodargs[-1], goodargs[:-1]
3078:             place(output, cond, self._ppf(*goodargs) + loc)
3079: 
3080:         if output.ndim == 0:
3081:             return output[()]
3082:         return output
3083: 
3084:     def isf(self, q, *args, **kwds):
3085:         '''
3086:         Inverse survival function (inverse of `sf`) at q of the given RV.
3087: 
3088:         Parameters
3089:         ----------
3090:         q : array_like
3091:             Upper tail probability.
3092:         arg1, arg2, arg3,... : array_like
3093:             The shape parameter(s) for the distribution (see docstring of the
3094:             instance object for more information).
3095:         loc : array_like, optional
3096:             Location parameter (default=0).
3097: 
3098:         Returns
3099:         -------
3100:         k : ndarray or scalar
3101:             Quantile corresponding to the upper tail probability, q.
3102: 
3103:         '''
3104:         args, loc, _ = self._parse_args(*args, **kwds)
3105:         q, loc = map(asarray, (q, loc))
3106:         args = tuple(map(asarray, args))
3107:         cond0 = self._argcheck(*args) & (loc == loc)
3108:         cond1 = (q > 0) & (q < 1)
3109:         cond2 = (q == 1) & cond0
3110:         cond = cond0 & cond1
3111: 
3112:         # same problem as with ppf; copied from ppf and changed
3113:         output = valarray(shape(cond), value=self.badvalue, typecode='d')
3114:         # output type 'd' to handle nin and inf
3115:         place(output, (q == 0)*(cond == cond), self.b)
3116:         place(output, cond2, self.a-1)
3117: 
3118:         # call place only if at least 1 valid argument
3119:         if np.any(cond):
3120:             goodargs = argsreduce(cond, *((q,)+args+(loc,)))
3121:             loc, goodargs = goodargs[-1], goodargs[:-1]
3122:             # PB same as ticket 766
3123:             place(output, cond, self._isf(*goodargs) + loc)
3124: 
3125:         if output.ndim == 0:
3126:             return output[()]
3127:         return output
3128: 
3129:     def _entropy(self, *args):
3130:         if hasattr(self, 'pk'):
3131:             return entropy(self.pk)
3132:         else:
3133:             return _expect(lambda x: entr(self.pmf(x, *args)),
3134:                            self.a, self.b, self.ppf(0.5, *args), self.inc)
3135: 
3136:     def expect(self, func=None, args=(), loc=0, lb=None, ub=None,
3137:                conditional=False, maxcount=1000, tolerance=1e-10, chunksize=32):
3138:         '''
3139:         Calculate expected value of a function with respect to the distribution
3140:         for discrete distribution.
3141: 
3142:         Parameters
3143:         ----------
3144:         func : callable, optional
3145:             Function for which the expectation value is calculated.
3146:             Takes only one argument.
3147:             The default is the identity mapping f(k) = k.
3148:         args : tuple, optional
3149:             Shape parameters of the distribution.
3150:         loc : float, optional
3151:             Location parameter.
3152:             Default is 0.
3153:         lb, ub : int, optional
3154:             Lower and upper bound for the summation, default is set to the
3155:             support of the distribution, inclusive (``ul <= k <= ub``).
3156:         conditional : bool, optional
3157:             If true then the expectation is corrected by the conditional
3158:             probability of the summation interval. The return value is the
3159:             expectation of the function, `func`, conditional on being in
3160:             the given interval (k such that ``ul <= k <= ub``).
3161:             Default is False.
3162:         maxcount : int, optional
3163:             Maximal number of terms to evaluate (to avoid an endless loop for
3164:             an infinite sum). Default is 1000.
3165:         tolerance : float, optional
3166:             Absolute tolerance for the summation. Default is 1e-10.
3167:         chunksize : int, optional
3168:             Iterate over the support of a distributions in chunks of this size.
3169:             Default is 32.
3170: 
3171:         Returns
3172:         -------
3173:         expect : float
3174:             Expected value.
3175: 
3176:         Notes
3177:         -----
3178:         For heavy-tailed distributions, the expected value may or may not exist,
3179:         depending on the function, `func`. If it does exist, but the sum converges
3180:         slowly, the accuracy of the result may be rather low. For instance, for
3181:         ``zipf(4)``, accuracy for mean, variance in example is only 1e-5.
3182:         increasing `maxcount` and/or `chunksize` may improve the result, but may also
3183:         make zipf very slow.
3184: 
3185:         The function is not vectorized.
3186: 
3187:         '''
3188:         if func is None:
3189:             def fun(x):
3190:                 # loc and args from outer scope
3191:                 return (x+loc)*self._pmf(x, *args)
3192:         else:
3193:             def fun(x):
3194:                 # loc and args from outer scope
3195:                 return func(x+loc)*self._pmf(x, *args)
3196:         # used pmf because _pmf does not check support in randint and there
3197:         # might be problems(?) with correct self.a, self.b at this stage maybe
3198:         # not anymore, seems to work now with _pmf
3199: 
3200:         self._argcheck(*args)  # (re)generate scalar self.a and self.b
3201:         if lb is None:
3202:             lb = self.a
3203:         else:
3204:             lb = lb - loc   # convert bound for standardized distribution
3205:         if ub is None:
3206:             ub = self.b
3207:         else:
3208:             ub = ub - loc   # convert bound for standardized distribution
3209:         if conditional:
3210:             invfac = self.sf(lb-1, *args) - self.sf(ub, *args)
3211:         else:
3212:             invfac = 1.0
3213: 
3214:         # iterate over the support, starting from the median
3215:         x0 = self.ppf(0.5, *args)
3216:         res = _expect(fun, lb, ub, x0, self.inc, maxcount, tolerance, chunksize)
3217:         return res / invfac
3218: 
3219: 
3220: def _expect(fun, lb, ub, x0, inc, maxcount=1000, tolerance=1e-10,
3221:             chunksize=32):
3222:     '''Helper for computing the expectation value of `fun`.'''
3223: 
3224:     # short-circuit if the support size is small enough
3225:     if (ub - lb) <= chunksize:
3226:         supp = np.arange(lb, ub+1, inc)
3227:         vals = fun(supp)
3228:         return np.sum(vals)
3229: 
3230:     # otherwise, iterate starting from x0
3231:     if x0 < lb:
3232:         x0 = lb
3233:     if x0 > ub:
3234:         x0 = ub
3235: 
3236:     count, tot = 0, 0.
3237:     # iterate over [x0, ub] inclusive
3238:     for x in _iter_chunked(x0, ub+1, chunksize=chunksize, inc=inc):
3239:         count += x.size
3240:         delta = np.sum(fun(x))
3241:         tot += delta
3242:         if abs(delta) < tolerance * x.size:
3243:             break
3244:         if count > maxcount:
3245:             warnings.warn('expect(): sum did not converge', RuntimeWarning)
3246:             return tot
3247: 
3248:     # iterate over [lb, x0)
3249:     for x in _iter_chunked(x0-1, lb-1, chunksize=chunksize, inc=-inc):
3250:         count += x.size
3251:         delta = np.sum(fun(x))
3252:         tot += delta
3253:         if abs(delta) < tolerance * x.size:
3254:             break
3255:         if count > maxcount:
3256:             warnings.warn('expect(): sum did not converge', RuntimeWarning)
3257:             break
3258: 
3259:     return tot
3260: 
3261: 
3262: def _iter_chunked(x0, x1, chunksize=4, inc=1):
3263:     '''Iterate from x0 to x1 in chunks of chunksize and steps inc.
3264: 
3265:     x0 must be finite, x1 need not be. In the latter case, the iterator is infinite.
3266:     Handles both x0 < x1 and x0 > x1. In the latter case, iterates downwards
3267:     (make sure to set inc < 0.)
3268: 
3269:     >>> [x for x in _iter_chunked(2, 5, inc=2)]
3270:     [array([2, 4])]
3271:     >>> [x for x in _iter_chunked(2, 11, inc=2)]
3272:     [array([2, 4, 6, 8]), array([10])]
3273:     >>> [x for x in _iter_chunked(2, -5, inc=-2)]
3274:     [array([ 2,  0, -2, -4])]
3275:     >>> [x for x in _iter_chunked(2, -9, inc=-2)]
3276:     [array([ 2,  0, -2, -4]), array([-6, -8])]
3277: 
3278:     '''
3279:     if inc == 0:
3280:         raise ValueError('Cannot increment by zero.')
3281:     if chunksize <= 0:
3282:         raise ValueError('Chunk size must be positive; got %s.' % chunksize)
3283: 
3284:     s = 1 if inc > 0 else -1
3285:     stepsize = abs(chunksize * inc)
3286: 
3287:     x = x0
3288:     while (x - x1) * inc < 0:
3289:         delta = min(stepsize, abs(x - x1))
3290:         step = delta * s
3291:         supp = np.arange(x, x + step, inc)
3292:         x += step
3293:         yield supp
3294: 
3295: 
3296: class rv_sample(rv_discrete):
3297:     '''A 'sample' discrete distribution defined by the support and values.
3298: 
3299:        The ctor ignores most of the arguments, only needs the `values` argument.
3300:     '''
3301:     def __init__(self, a=0, b=inf, name=None, badvalue=None,
3302:                  moment_tol=1e-8, values=None, inc=1, longname=None,
3303:                  shapes=None, extradoc=None, seed=None):
3304: 
3305:         super(rv_discrete, self).__init__(seed)
3306: 
3307:         if values is None:
3308:             raise ValueError("rv_sample.__init__(..., values=None,...)")
3309: 
3310:         # cf generic freeze
3311:         self._ctor_param = dict(
3312:             a=a, b=b, name=name, badvalue=badvalue,
3313:             moment_tol=moment_tol, values=values, inc=inc,
3314:             longname=longname, shapes=shapes, extradoc=extradoc, seed=seed)
3315: 
3316:         if badvalue is None:
3317:             badvalue = nan
3318:         self.badvalue = badvalue
3319:         self.moment_tol = moment_tol
3320:         self.inc = inc
3321:         self.shapes = shapes
3322:         self.vecentropy = self._entropy
3323: 
3324:         xk, pk = values
3325: 
3326:         if len(xk) != len(pk):
3327:             raise ValueError("xk and pk need to have the same length.")
3328:         if not np.allclose(np.sum(pk), 1):
3329:             raise ValueError("The sum of provided pk is not 1.")
3330: 
3331:         indx = np.argsort(np.ravel(xk))
3332:         self.xk = np.take(np.ravel(xk), indx, 0)
3333:         self.pk = np.take(np.ravel(pk), indx, 0)
3334:         self.a = self.xk[0]
3335:         self.b = self.xk[-1]
3336:         self.qvals = np.cumsum(self.pk, axis=0)
3337: 
3338:         self.shapes = ' '   # bypass inspection
3339:         self._construct_argparser(meths_to_inspect=[self._pmf],
3340:                                   locscale_in='loc=0',
3341:                                   # scale=1 for discrete RVs
3342:                                   locscale_out='loc, 1')
3343: 
3344:         self._construct_docstrings(name, longname, extradoc)
3345: 
3346:     def _pmf(self, x):
3347:         return np.select([x == k for k in self.xk],
3348:                          [np.broadcast_arrays(p, x)[0] for p in self.pk], 0)
3349: 
3350:     def _cdf(self, x):
3351:         xx, xxk = np.broadcast_arrays(x[:, None], self.xk)
3352:         indx = np.argmax(xxk > xx, axis=-1) - 1
3353:         return self.qvals[indx]
3354: 
3355:     def _ppf(self, q):
3356:         qq, sqq = np.broadcast_arrays(q[..., None], self.qvals)
3357:         indx = argmax(sqq >= qq, axis=-1)
3358:         return self.xk[indx]
3359: 
3360:     def _rvs(self):
3361:         # Need to define it explicitly, otherwise .rvs() with size=None
3362:         # fails due to explicit broadcasting in _ppf
3363:         U = self._random_state.random_sample(self._size)
3364:         if self._size is None:
3365:             U = np.array(U, ndmin=1)
3366:             Y = self._ppf(U)[0]
3367:         else:
3368:             Y = self._ppf(U)
3369:         return Y
3370: 
3371:     def _entropy(self):
3372:         return entropy(self.pk)
3373: 
3374:     def generic_moment(self, n):
3375:         n = asarray(n)
3376:         return np.sum(self.xk**n[np.newaxis, ...] * self.pk, axis=0)
3377: 
3378: 
3379: def get_distribution_names(namespace_pairs, rv_base_class):
3380:     '''
3381:     Collect names of statistical distributions and their generators.
3382: 
3383:     Parameters
3384:     ----------
3385:     namespace_pairs : sequence
3386:         A snapshot of (name, value) pairs in the namespace of a module.
3387:     rv_base_class : class
3388:         The base class of random variable generator classes in a module.
3389: 
3390:     Returns
3391:     -------
3392:     distn_names : list of strings
3393:         Names of the statistical distributions.
3394:     distn_gen_names : list of strings
3395:         Names of the generators of the statistical distributions.
3396:         Note that these are not simply the names of the statistical
3397:         distributions, with a _gen suffix added.
3398: 
3399:     '''
3400:     distn_names = []
3401:     distn_gen_names = []
3402:     for name, value in namespace_pairs:
3403:         if name.startswith('_'):
3404:             continue
3405:         if name.endswith('_gen') and issubclass(value, rv_base_class):
3406:             distn_gen_names.append(name)
3407:         if isinstance(value, rv_base_class):
3408:             distn_names.append(name)
3409:     return distn_names, distn_gen_names
3410: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 7, 0))

# 'from scipy._lib.six import string_types, exec_, PY3' statement (line 7)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609409 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'scipy._lib.six')

if (type(import_609409) is not StypyTypeError):

    if (import_609409 != 'pyd_module'):
        __import__(import_609409)
        sys_modules_609410 = sys.modules[import_609409]
        import_from_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'scipy._lib.six', sys_modules_609410.module_type_store, module_type_store, ['string_types', 'exec_', 'PY3'])
        nest_module(stypy.reporting.localization.Localization(__file__, 7, 0), __file__, sys_modules_609410, sys_modules_609410.module_type_store, module_type_store)
    else:
        from scipy._lib.six import string_types, exec_, PY3

        import_from_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'scipy._lib.six', None, module_type_store, ['string_types', 'exec_', 'PY3'], [string_types, exec_, PY3])

else:
    # Assigning a type to the variable 'scipy._lib.six' (line 7)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 7, 0), 'scipy._lib.six', import_609409)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 8, 0))

# 'from scipy._lib._util import _getargspec' statement (line 8)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609411 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'scipy._lib._util')

if (type(import_609411) is not StypyTypeError):

    if (import_609411 != 'pyd_module'):
        __import__(import_609411)
        sys_modules_609412 = sys.modules[import_609411]
        import_from_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'scipy._lib._util', sys_modules_609412.module_type_store, module_type_store, ['getargspec_no_self'])
        nest_module(stypy.reporting.localization.Localization(__file__, 8, 0), __file__, sys_modules_609412, sys_modules_609412.module_type_store, module_type_store)
    else:
        from scipy._lib._util import getargspec_no_self as _getargspec

        import_from_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'scipy._lib._util', None, module_type_store, ['getargspec_no_self'], [_getargspec])

else:
    # Assigning a type to the variable 'scipy._lib._util' (line 8)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 8, 0), 'scipy._lib._util', import_609411)

# Adding an alias
module_type_store.add_alias('_getargspec', 'getargspec_no_self')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 10, 0))

# 'import sys' statement (line 10)
import sys

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'sys', sys, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 11, 0))

# 'import keyword' statement (line 11)
import keyword

import_module(stypy.reporting.localization.Localization(__file__, 11, 0), 'keyword', keyword, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 12, 0))

# 'import re' statement (line 12)
import re

import_module(stypy.reporting.localization.Localization(__file__, 12, 0), 're', re, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 13, 0))

# 'import types' statement (line 13)
import types

import_module(stypy.reporting.localization.Localization(__file__, 13, 0), 'types', types, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 14, 0))

# 'import warnings' statement (line 14)
import warnings

import_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'warnings', warnings, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 16, 0))

# 'from scipy.misc import doccer' statement (line 16)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609413 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.misc')

if (type(import_609413) is not StypyTypeError):

    if (import_609413 != 'pyd_module'):
        __import__(import_609413)
        sys_modules_609414 = sys.modules[import_609413]
        import_from_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.misc', sys_modules_609414.module_type_store, module_type_store, ['doccer'])
        nest_module(stypy.reporting.localization.Localization(__file__, 16, 0), __file__, sys_modules_609414, sys_modules_609414.module_type_store, module_type_store)
    else:
        from scipy.misc import doccer

        import_from_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.misc', None, module_type_store, ['doccer'], [doccer])

else:
    # Assigning a type to the variable 'scipy.misc' (line 16)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 0), 'scipy.misc', import_609413)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 17, 0))

# 'from scipy.stats._distr_params import distcont, distdiscrete' statement (line 17)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609415 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'scipy.stats._distr_params')

if (type(import_609415) is not StypyTypeError):

    if (import_609415 != 'pyd_module'):
        __import__(import_609415)
        sys_modules_609416 = sys.modules[import_609415]
        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'scipy.stats._distr_params', sys_modules_609416.module_type_store, module_type_store, ['distcont', 'distdiscrete'])
        nest_module(stypy.reporting.localization.Localization(__file__, 17, 0), __file__, sys_modules_609416, sys_modules_609416.module_type_store, module_type_store)
    else:
        from scipy.stats._distr_params import distcont, distdiscrete

        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'scipy.stats._distr_params', None, module_type_store, ['distcont', 'distdiscrete'], [distcont, distdiscrete])

else:
    # Assigning a type to the variable 'scipy.stats._distr_params' (line 17)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 17, 0), 'scipy.stats._distr_params', import_609415)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 18, 0))

# 'from scipy._lib._util import check_random_state, _lazywhere, _lazyselect' statement (line 18)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609417 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy._lib._util')

if (type(import_609417) is not StypyTypeError):

    if (import_609417 != 'pyd_module'):
        __import__(import_609417)
        sys_modules_609418 = sys.modules[import_609417]
        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy._lib._util', sys_modules_609418.module_type_store, module_type_store, ['check_random_state', '_lazywhere', '_lazyselect'])
        nest_module(stypy.reporting.localization.Localization(__file__, 18, 0), __file__, sys_modules_609418, sys_modules_609418.module_type_store, module_type_store)
    else:
        from scipy._lib._util import check_random_state, _lazywhere, _lazyselect

        import_from_module(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy._lib._util', None, module_type_store, ['check_random_state', '_lazywhere', '_lazyselect'], [check_random_state, _lazywhere, _lazyselect])

else:
    # Assigning a type to the variable 'scipy._lib._util' (line 18)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 18, 0), 'scipy._lib._util', import_609417)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 19, 0))

# 'from scipy._lib._util import valarray' statement (line 19)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609419 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy._lib._util')

if (type(import_609419) is not StypyTypeError):

    if (import_609419 != 'pyd_module'):
        __import__(import_609419)
        sys_modules_609420 = sys.modules[import_609419]
        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy._lib._util', sys_modules_609420.module_type_store, module_type_store, ['_valarray'])
        nest_module(stypy.reporting.localization.Localization(__file__, 19, 0), __file__, sys_modules_609420, sys_modules_609420.module_type_store, module_type_store)
    else:
        from scipy._lib._util import _valarray as valarray

        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy._lib._util', None, module_type_store, ['_valarray'], [valarray])

else:
    # Assigning a type to the variable 'scipy._lib._util' (line 19)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'scipy._lib._util', import_609419)

# Adding an alias
module_type_store.add_alias('valarray', '_valarray')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 21, 0))

# 'from scipy.special import comb, chndtr, entr, rel_entr, kl_div, xlogy, ive' statement (line 21)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609421 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'scipy.special')

if (type(import_609421) is not StypyTypeError):

    if (import_609421 != 'pyd_module'):
        __import__(import_609421)
        sys_modules_609422 = sys.modules[import_609421]
        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'scipy.special', sys_modules_609422.module_type_store, module_type_store, ['comb', 'chndtr', 'entr', 'rel_entr', 'kl_div', 'xlogy', 'ive'])
        nest_module(stypy.reporting.localization.Localization(__file__, 21, 0), __file__, sys_modules_609422, sys_modules_609422.module_type_store, module_type_store)
    else:
        from scipy.special import comb, chndtr, entr, rel_entr, kl_div, xlogy, ive

        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'scipy.special', None, module_type_store, ['comb', 'chndtr', 'entr', 'rel_entr', 'kl_div', 'xlogy', 'ive'], [comb, chndtr, entr, rel_entr, kl_div, xlogy, ive])

else:
    # Assigning a type to the variable 'scipy.special' (line 21)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 0), 'scipy.special', import_609421)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 24, 0))

# 'from scipy import optimize' statement (line 24)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609423 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'scipy')

if (type(import_609423) is not StypyTypeError):

    if (import_609423 != 'pyd_module'):
        __import__(import_609423)
        sys_modules_609424 = sys.modules[import_609423]
        import_from_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'scipy', sys_modules_609424.module_type_store, module_type_store, ['optimize'])
        nest_module(stypy.reporting.localization.Localization(__file__, 24, 0), __file__, sys_modules_609424, sys_modules_609424.module_type_store, module_type_store)
    else:
        from scipy import optimize

        import_from_module(stypy.reporting.localization.Localization(__file__, 24, 0), 'scipy', None, module_type_store, ['optimize'], [optimize])

else:
    # Assigning a type to the variable 'scipy' (line 24)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 0), 'scipy', import_609423)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 27, 0))

# 'from scipy import integrate' statement (line 27)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609425 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'scipy')

if (type(import_609425) is not StypyTypeError):

    if (import_609425 != 'pyd_module'):
        __import__(import_609425)
        sys_modules_609426 = sys.modules[import_609425]
        import_from_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'scipy', sys_modules_609426.module_type_store, module_type_store, ['integrate'])
        nest_module(stypy.reporting.localization.Localization(__file__, 27, 0), __file__, sys_modules_609426, sys_modules_609426.module_type_store, module_type_store)
    else:
        from scipy import integrate

        import_from_module(stypy.reporting.localization.Localization(__file__, 27, 0), 'scipy', None, module_type_store, ['integrate'], [integrate])

else:
    # Assigning a type to the variable 'scipy' (line 27)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 0), 'scipy', import_609425)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 30, 0))

# 'from scipy.misc import derivative' statement (line 30)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609427 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'scipy.misc')

if (type(import_609427) is not StypyTypeError):

    if (import_609427 != 'pyd_module'):
        __import__(import_609427)
        sys_modules_609428 = sys.modules[import_609427]
        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'scipy.misc', sys_modules_609428.module_type_store, module_type_store, ['derivative'])
        nest_module(stypy.reporting.localization.Localization(__file__, 30, 0), __file__, sys_modules_609428, sys_modules_609428.module_type_store, module_type_store)
    else:
        from scipy.misc import derivative

        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 0), 'scipy.misc', None, module_type_store, ['derivative'], [derivative])

else:
    # Assigning a type to the variable 'scipy.misc' (line 30)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 0), 'scipy.misc', import_609427)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 32, 0))

# 'from numpy import arange, putmask, ravel, take, ones, shape, ndarray, product, reshape, zeros, floor, logical_and, log, sqrt, exp' statement (line 32)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609429 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'numpy')

if (type(import_609429) is not StypyTypeError):

    if (import_609429 != 'pyd_module'):
        __import__(import_609429)
        sys_modules_609430 = sys.modules[import_609429]
        import_from_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'numpy', sys_modules_609430.module_type_store, module_type_store, ['arange', 'putmask', 'ravel', 'take', 'ones', 'shape', 'ndarray', 'product', 'reshape', 'zeros', 'floor', 'logical_and', 'log', 'sqrt', 'exp'])
        nest_module(stypy.reporting.localization.Localization(__file__, 32, 0), __file__, sys_modules_609430, sys_modules_609430.module_type_store, module_type_store)
    else:
        from numpy import arange, putmask, ravel, take, ones, shape, ndarray, product, reshape, zeros, floor, logical_and, log, sqrt, exp

        import_from_module(stypy.reporting.localization.Localization(__file__, 32, 0), 'numpy', None, module_type_store, ['arange', 'putmask', 'ravel', 'take', 'ones', 'shape', 'ndarray', 'product', 'reshape', 'zeros', 'floor', 'logical_and', 'log', 'sqrt', 'exp'], [arange, putmask, ravel, take, ones, shape, ndarray, product, reshape, zeros, floor, logical_and, log, sqrt, exp])

else:
    # Assigning a type to the variable 'numpy' (line 32)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 32, 0), 'numpy', import_609429)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 35, 0))

# 'from numpy import place, argsort, argmax, vectorize, asarray, nan, inf, isinf, NINF, empty' statement (line 35)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609431 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 35, 0), 'numpy')

if (type(import_609431) is not StypyTypeError):

    if (import_609431 != 'pyd_module'):
        __import__(import_609431)
        sys_modules_609432 = sys.modules[import_609431]
        import_from_module(stypy.reporting.localization.Localization(__file__, 35, 0), 'numpy', sys_modules_609432.module_type_store, module_type_store, ['place', 'argsort', 'argmax', 'vectorize', 'asarray', 'nan', 'inf', 'isinf', 'NINF', 'empty'])
        nest_module(stypy.reporting.localization.Localization(__file__, 35, 0), __file__, sys_modules_609432, sys_modules_609432.module_type_store, module_type_store)
    else:
        from numpy import place, argsort, argmax, vectorize, asarray, nan, inf, isinf, NINF, empty

        import_from_module(stypy.reporting.localization.Localization(__file__, 35, 0), 'numpy', None, module_type_store, ['place', 'argsort', 'argmax', 'vectorize', 'asarray', 'nan', 'inf', 'isinf', 'NINF', 'empty'], [place, argsort, argmax, vectorize, asarray, nan, inf, isinf, NINF, empty])

else:
    # Assigning a type to the variable 'numpy' (line 35)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 0), 'numpy', import_609431)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 38, 0))

# 'import numpy' statement (line 38)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609433 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'numpy')

if (type(import_609433) is not StypyTypeError):

    if (import_609433 != 'pyd_module'):
        __import__(import_609433)
        sys_modules_609434 = sys.modules[import_609433]
        import_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'np', sys_modules_609434.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 38)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 0), 'numpy', import_609433)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 40, 0))

# 'from scipy.stats._constants import _XMAX' statement (line 40)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/stats/')
import_609435 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'scipy.stats._constants')

if (type(import_609435) is not StypyTypeError):

    if (import_609435 != 'pyd_module'):
        __import__(import_609435)
        sys_modules_609436 = sys.modules[import_609435]
        import_from_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'scipy.stats._constants', sys_modules_609436.module_type_store, module_type_store, ['_XMAX'])
        nest_module(stypy.reporting.localization.Localization(__file__, 40, 0), __file__, sys_modules_609436, sys_modules_609436.module_type_store, module_type_store)
    else:
        from scipy.stats._constants import _XMAX

        import_from_module(stypy.reporting.localization.Localization(__file__, 40, 0), 'scipy.stats._constants', None, module_type_store, ['_XMAX'], [_XMAX])

else:
    # Assigning a type to the variable 'scipy.stats._constants' (line 40)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 40, 0), 'scipy.stats._constants', import_609435)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/stats/')


# Getting the type of 'PY3' (line 42)
PY3_609437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 3), 'PY3')
# Testing the type of an if condition (line 42)
if_condition_609438 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 42, 0), PY3_609437)
# Assigning a type to the variable 'if_condition_609438' (line 42)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 0), 'if_condition_609438', if_condition_609438)
# SSA begins for if statement (line 42)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')

@norecursion
def instancemethod(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'instancemethod'
    module_type_store = module_type_store.open_function_context('instancemethod', 43, 4, False)
    
    # Passed parameters checking function
    instancemethod.stypy_localization = localization
    instancemethod.stypy_type_of_self = None
    instancemethod.stypy_type_store = module_type_store
    instancemethod.stypy_function_name = 'instancemethod'
    instancemethod.stypy_param_names_list = ['func', 'obj', 'cls']
    instancemethod.stypy_varargs_param_name = None
    instancemethod.stypy_kwargs_param_name = None
    instancemethod.stypy_call_defaults = defaults
    instancemethod.stypy_call_varargs = varargs
    instancemethod.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'instancemethod', ['func', 'obj', 'cls'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'instancemethod', localization, ['func', 'obj', 'cls'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'instancemethod(...)' code ##################

    
    # Call to MethodType(...): (line 44)
    # Processing the call arguments (line 44)
    # Getting the type of 'func' (line 44)
    func_609441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 32), 'func', False)
    # Getting the type of 'obj' (line 44)
    obj_609442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 38), 'obj', False)
    # Processing the call keyword arguments (line 44)
    kwargs_609443 = {}
    # Getting the type of 'types' (line 44)
    types_609439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 15), 'types', False)
    # Obtaining the member 'MethodType' of a type (line 44)
    MethodType_609440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 15), types_609439, 'MethodType')
    # Calling MethodType(args, kwargs) (line 44)
    MethodType_call_result_609444 = invoke(stypy.reporting.localization.Localization(__file__, 44, 15), MethodType_609440, *[func_609441, obj_609442], **kwargs_609443)
    
    # Assigning a type to the variable 'stypy_return_type' (line 44)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 44, 8), 'stypy_return_type', MethodType_call_result_609444)
    
    # ################# End of 'instancemethod(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'instancemethod' in the type store
    # Getting the type of 'stypy_return_type' (line 43)
    stypy_return_type_609445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 4), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_609445)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'instancemethod'
    return stypy_return_type_609445

# Assigning a type to the variable 'instancemethod' (line 43)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 4), 'instancemethod', instancemethod)
# SSA branch for the else part of an if statement (line 42)
module_type_store.open_ssa_branch('else')

# Assigning a Attribute to a Name (line 46):

# Assigning a Attribute to a Name (line 46):
# Getting the type of 'types' (line 46)
types_609446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 21), 'types')
# Obtaining the member 'MethodType' of a type (line 46)
MethodType_609447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 46, 21), types_609446, 'MethodType')
# Assigning a type to the variable 'instancemethod' (line 46)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 46, 4), 'instancemethod', MethodType_609447)
# SSA join for if statement (line 42)
module_type_store = module_type_store.join_ssa_context()


# Assigning a Dict to a Name (line 52):

# Assigning a Dict to a Name (line 52):

# Obtaining an instance of the builtin type 'dict' (line 52)
dict_609448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 52, 13), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 52)
# Adding element type (key, value) (line 52)
str_609449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 52, 14), 'str', 'methods')
str_609450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 52, 25), 'str', '\nMethods\n-------\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 13), dict_609448, (str_609449, str_609450))
# Adding element type (key, value) (line 52)
str_609451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 14), 'str', 'notes')
str_609452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 23), 'str', '\nNotes\n-----\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 13), dict_609448, (str_609451, str_609452))
# Adding element type (key, value) (line 52)
str_609453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 14), 'str', 'examples')
str_609454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 26), 'str', '\nExamples\n--------\n')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 13), dict_609448, (str_609453, str_609454))

# Assigning a type to the variable 'docheaders' (line 52)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 52, 0), 'docheaders', dict_609448)

# Assigning a Str to a Name (line 56):

# Assigning a Str to a Name (line 56):
str_609455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, (-1)), 'str', '``rvs(%(shapes)s, loc=0, scale=1, size=1, random_state=None)``\n    Random variates.\n')
# Assigning a type to the variable '_doc_rvs' (line 56)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 56, 0), '_doc_rvs', str_609455)

# Assigning a Str to a Name (line 60):

# Assigning a Str to a Name (line 60):
str_609456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 63, (-1)), 'str', '``pdf(x, %(shapes)s, loc=0, scale=1)``\n    Probability density function.\n')
# Assigning a type to the variable '_doc_pdf' (line 60)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 60, 0), '_doc_pdf', str_609456)

# Assigning a Str to a Name (line 64):

# Assigning a Str to a Name (line 64):
str_609457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 67, (-1)), 'str', '``logpdf(x, %(shapes)s, loc=0, scale=1)``\n    Log of the probability density function.\n')
# Assigning a type to the variable '_doc_logpdf' (line 64)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 64, 0), '_doc_logpdf', str_609457)

# Assigning a Str to a Name (line 68):

# Assigning a Str to a Name (line 68):
str_609458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 71, (-1)), 'str', '``pmf(k, %(shapes)s, loc=0, scale=1)``\n    Probability mass function.\n')
# Assigning a type to the variable '_doc_pmf' (line 68)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 0), '_doc_pmf', str_609458)

# Assigning a Str to a Name (line 72):

# Assigning a Str to a Name (line 72):
str_609459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, (-1)), 'str', '``logpmf(k, %(shapes)s, loc=0, scale=1)``\n    Log of the probability mass function.\n')
# Assigning a type to the variable '_doc_logpmf' (line 72)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 0), '_doc_logpmf', str_609459)

# Assigning a Str to a Name (line 76):

# Assigning a Str to a Name (line 76):
str_609460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 79, (-1)), 'str', '``cdf(x, %(shapes)s, loc=0, scale=1)``\n    Cumulative distribution function.\n')
# Assigning a type to the variable '_doc_cdf' (line 76)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 76, 0), '_doc_cdf', str_609460)

# Assigning a Str to a Name (line 80):

# Assigning a Str to a Name (line 80):
str_609461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, (-1)), 'str', '``logcdf(x, %(shapes)s, loc=0, scale=1)``\n    Log of the cumulative distribution function.\n')
# Assigning a type to the variable '_doc_logcdf' (line 80)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 0), '_doc_logcdf', str_609461)

# Assigning a Str to a Name (line 84):

# Assigning a Str to a Name (line 84):
str_609462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 87, (-1)), 'str', '``sf(x, %(shapes)s, loc=0, scale=1)``\n    Survival function  (also defined as ``1 - cdf``, but `sf` is sometimes more accurate).\n')
# Assigning a type to the variable '_doc_sf' (line 84)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 0), '_doc_sf', str_609462)

# Assigning a Str to a Name (line 88):

# Assigning a Str to a Name (line 88):
str_609463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, (-1)), 'str', '``logsf(x, %(shapes)s, loc=0, scale=1)``\n    Log of the survival function.\n')
# Assigning a type to the variable '_doc_logsf' (line 88)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 0), '_doc_logsf', str_609463)

# Assigning a Str to a Name (line 92):

# Assigning a Str to a Name (line 92):
str_609464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, (-1)), 'str', '``ppf(q, %(shapes)s, loc=0, scale=1)``\n    Percent point function (inverse of ``cdf`` --- percentiles).\n')
# Assigning a type to the variable '_doc_ppf' (line 92)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 0), '_doc_ppf', str_609464)

# Assigning a Str to a Name (line 96):

# Assigning a Str to a Name (line 96):
str_609465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, (-1)), 'str', '``isf(q, %(shapes)s, loc=0, scale=1)``\n    Inverse survival function (inverse of ``sf``).\n')
# Assigning a type to the variable '_doc_isf' (line 96)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 0), '_doc_isf', str_609465)

# Assigning a Str to a Name (line 100):

# Assigning a Str to a Name (line 100):
str_609466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, (-1)), 'str', '``moment(n, %(shapes)s, loc=0, scale=1)``\n    Non-central moment of order n\n')
# Assigning a type to the variable '_doc_moment' (line 100)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 0), '_doc_moment', str_609466)

# Assigning a Str to a Name (line 104):

# Assigning a Str to a Name (line 104):
str_609467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, (-1)), 'str', "``stats(%(shapes)s, loc=0, scale=1, moments='mv')``\n    Mean('m'), variance('v'), skew('s'), and/or kurtosis('k').\n")
# Assigning a type to the variable '_doc_stats' (line 104)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 0), '_doc_stats', str_609467)

# Assigning a Str to a Name (line 108):

# Assigning a Str to a Name (line 108):
str_609468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, (-1)), 'str', '``entropy(%(shapes)s, loc=0, scale=1)``\n    (Differential) entropy of the RV.\n')
# Assigning a type to the variable '_doc_entropy' (line 108)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 0), '_doc_entropy', str_609468)

# Assigning a Str to a Name (line 112):

# Assigning a Str to a Name (line 112):
str_609469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, (-1)), 'str', '``fit(data, %(shapes)s, loc=0, scale=1)``\n    Parameter estimates for generic data.\n')
# Assigning a type to the variable '_doc_fit' (line 112)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 112, 0), '_doc_fit', str_609469)

# Assigning a Str to a Name (line 116):

# Assigning a Str to a Name (line 116):
str_609470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, (-1)), 'str', '``expect(func, args=(%(shapes_)s), loc=0, scale=1, lb=None, ub=None, conditional=False, **kwds)``\n    Expected value of a function (of one argument) with respect to the distribution.\n')
# Assigning a type to the variable '_doc_expect' (line 116)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 116, 0), '_doc_expect', str_609470)

# Assigning a Str to a Name (line 120):

# Assigning a Str to a Name (line 120):
str_609471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, (-1)), 'str', '``expect(func, args=(%(shapes_)s), loc=0, lb=None, ub=None, conditional=False)``\n    Expected value of a function (of one argument) with respect to the distribution.\n')
# Assigning a type to the variable '_doc_expect_discrete' (line 120)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 0), '_doc_expect_discrete', str_609471)

# Assigning a Str to a Name (line 124):

# Assigning a Str to a Name (line 124):
str_609472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, (-1)), 'str', '``median(%(shapes)s, loc=0, scale=1)``\n    Median of the distribution.\n')
# Assigning a type to the variable '_doc_median' (line 124)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 0), '_doc_median', str_609472)

# Assigning a Str to a Name (line 128):

# Assigning a Str to a Name (line 128):
str_609473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, (-1)), 'str', '``mean(%(shapes)s, loc=0, scale=1)``\n    Mean of the distribution.\n')
# Assigning a type to the variable '_doc_mean' (line 128)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 0), '_doc_mean', str_609473)

# Assigning a Str to a Name (line 132):

# Assigning a Str to a Name (line 132):
str_609474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, (-1)), 'str', '``var(%(shapes)s, loc=0, scale=1)``\n    Variance of the distribution.\n')
# Assigning a type to the variable '_doc_var' (line 132)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 0), '_doc_var', str_609474)

# Assigning a Str to a Name (line 136):

# Assigning a Str to a Name (line 136):
str_609475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, (-1)), 'str', '``std(%(shapes)s, loc=0, scale=1)``\n    Standard deviation of the distribution.\n')
# Assigning a type to the variable '_doc_std' (line 136)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 136, 0), '_doc_std', str_609475)

# Assigning a Str to a Name (line 140):

# Assigning a Str to a Name (line 140):
str_609476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 143, (-1)), 'str', '``interval(alpha, %(shapes)s, loc=0, scale=1)``\n    Endpoints of the range that contains alpha percent of the distribution\n')
# Assigning a type to the variable '_doc_interval' (line 140)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 140, 0), '_doc_interval', str_609476)

# Assigning a Call to a Name (line 144):

# Assigning a Call to a Name (line 144):

# Call to join(...): (line 144)
# Processing the call arguments (line 144)

# Obtaining an instance of the builtin type 'list' (line 144)
list_609479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 144)
# Adding element type (line 144)

# Obtaining the type of the subscript
str_609480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 38), 'str', 'methods')
# Getting the type of 'docheaders' (line 144)
docheaders_609481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 27), 'docheaders', False)
# Obtaining the member '__getitem__' of a type (line 144)
getitem___609482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 27), docheaders_609481, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 144)
subscript_call_result_609483 = invoke(stypy.reporting.localization.Localization(__file__, 144, 27), getitem___609482, str_609480)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, subscript_call_result_609483)
# Adding element type (line 144)
# Getting the type of '_doc_rvs' (line 144)
_doc_rvs_609484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 50), '_doc_rvs', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_rvs_609484)
# Adding element type (line 144)
# Getting the type of '_doc_pdf' (line 144)
_doc_pdf_609485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 60), '_doc_pdf', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_pdf_609485)
# Adding element type (line 144)
# Getting the type of '_doc_logpdf' (line 145)
_doc_logpdf_609486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 27), '_doc_logpdf', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_logpdf_609486)
# Adding element type (line 144)
# Getting the type of '_doc_cdf' (line 145)
_doc_cdf_609487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 40), '_doc_cdf', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_cdf_609487)
# Adding element type (line 144)
# Getting the type of '_doc_logcdf' (line 145)
_doc_logcdf_609488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 50), '_doc_logcdf', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_logcdf_609488)
# Adding element type (line 144)
# Getting the type of '_doc_sf' (line 145)
_doc_sf_609489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 63), '_doc_sf', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_sf_609489)
# Adding element type (line 144)
# Getting the type of '_doc_logsf' (line 146)
_doc_logsf_609490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 27), '_doc_logsf', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_logsf_609490)
# Adding element type (line 144)
# Getting the type of '_doc_ppf' (line 146)
_doc_ppf_609491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 39), '_doc_ppf', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_ppf_609491)
# Adding element type (line 144)
# Getting the type of '_doc_isf' (line 146)
_doc_isf_609492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 49), '_doc_isf', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_isf_609492)
# Adding element type (line 144)
# Getting the type of '_doc_moment' (line 146)
_doc_moment_609493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 59), '_doc_moment', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_moment_609493)
# Adding element type (line 144)
# Getting the type of '_doc_stats' (line 147)
_doc_stats_609494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 27), '_doc_stats', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_stats_609494)
# Adding element type (line 144)
# Getting the type of '_doc_entropy' (line 147)
_doc_entropy_609495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 39), '_doc_entropy', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_entropy_609495)
# Adding element type (line 144)
# Getting the type of '_doc_fit' (line 147)
_doc_fit_609496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 53), '_doc_fit', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_fit_609496)
# Adding element type (line 144)
# Getting the type of '_doc_expect' (line 148)
_doc_expect_609497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 27), '_doc_expect', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_expect_609497)
# Adding element type (line 144)
# Getting the type of '_doc_median' (line 148)
_doc_median_609498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 40), '_doc_median', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_median_609498)
# Adding element type (line 144)
# Getting the type of '_doc_mean' (line 149)
_doc_mean_609499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 27), '_doc_mean', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_mean_609499)
# Adding element type (line 144)
# Getting the type of '_doc_var' (line 149)
_doc_var_609500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 38), '_doc_var', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_var_609500)
# Adding element type (line 144)
# Getting the type of '_doc_std' (line 149)
_doc_std_609501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 48), '_doc_std', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_std_609501)
# Adding element type (line 144)
# Getting the type of '_doc_interval' (line 149)
_doc_interval_609502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 58), '_doc_interval', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 26), list_609479, _doc_interval_609502)

# Processing the call keyword arguments (line 144)
kwargs_609503 = {}
str_609477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 18), 'str', '')
# Obtaining the member 'join' of a type (line 144)
join_609478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 18), str_609477, 'join')
# Calling join(args, kwargs) (line 144)
join_call_result_609504 = invoke(stypy.reporting.localization.Localization(__file__, 144, 18), join_609478, *[list_609479], **kwargs_609503)

# Assigning a type to the variable '_doc_allmethods' (line 144)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 144, 0), '_doc_allmethods', join_call_result_609504)

# Assigning a Str to a Name (line 151):

# Assigning a Str to a Name (line 151):
str_609505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, (-1)), 'str', 'As an instance of the `rv_continuous` class, `%(name)s` object inherits from it\na collection of generic methods (see below for the full list),\nand completes them with details specific for this particular distribution.\n')
# Assigning a type to the variable '_doc_default_longsummary' (line 151)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 0), '_doc_default_longsummary', str_609505)

# Assigning a Str to a Name (line 157):

# Assigning a Str to a Name (line 157):
str_609506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 164, (-1)), 'str', '\nAlternatively, the object may be called (as a function) to fix the shape,\nlocation, and scale parameters returning a "frozen" continuous RV object:\n\nrv = %(name)s(%(shapes)s, loc=0, scale=1)\n    - Frozen RV object with the same methods but holding the given shape,\n      location, and scale fixed.\n')
# Assigning a type to the variable '_doc_default_frozen_note' (line 157)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 0), '_doc_default_frozen_note', str_609506)

# Assigning a Str to a Name (line 165):

# Assigning a Str to a Name (line 165):
str_609507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, (-1)), 'str', 'Examples\n--------\n>>> from scipy.stats import %(name)s\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1)\n\nCalculate a few first moments:\n\n%(set_vals_stmt)s\n>>> mean, var, skew, kurt = %(name)s.stats(%(shapes)s, moments=\'mvsk\')\n\nDisplay the probability density function (``pdf``):\n\n>>> x = np.linspace(%(name)s.ppf(0.01, %(shapes)s),\n...                 %(name)s.ppf(0.99, %(shapes)s), 100)\n>>> ax.plot(x, %(name)s.pdf(x, %(shapes)s),\n...        \'r-\', lw=5, alpha=0.6, label=\'%(name)s pdf\')\n\nAlternatively, the distribution object can be called (as a function)\nto fix the shape, location and scale parameters. This returns a "frozen"\nRV object holding the given parameters fixed.\n\nFreeze the distribution and display the frozen ``pdf``:\n\n>>> rv = %(name)s(%(shapes)s)\n>>> ax.plot(x, rv.pdf(x), \'k-\', lw=2, label=\'frozen pdf\')\n\nCheck accuracy of ``cdf`` and ``ppf``:\n\n>>> vals = %(name)s.ppf([0.001, 0.5, 0.999], %(shapes)s)\n>>> np.allclose([0.001, 0.5, 0.999], %(name)s.cdf(vals, %(shapes)s))\nTrue\n\nGenerate random numbers:\n\n>>> r = %(name)s.rvs(%(shapes)s, size=1000)\n\nAnd compare the histogram:\n\n>>> ax.hist(r, normed=True, histtype=\'stepfilled\', alpha=0.2)\n>>> ax.legend(loc=\'best\', frameon=False)\n>>> plt.show()\n\n')
# Assigning a type to the variable '_doc_default_example' (line 165)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 165, 0), '_doc_default_example', str_609507)

# Assigning a Str to a Name (line 211):

# Assigning a Str to a Name (line 211):
str_609508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, (-1)), 'str', 'The probability density above is defined in the "standardized" form. To shift\nand/or scale the distribution use the ``loc`` and ``scale`` parameters.\nSpecifically, ``%(name)s.pdf(x, %(shapes)s, loc, scale)`` is identically\nequivalent to ``%(name)s.pdf(y, %(shapes)s) / scale`` with\n``y = (x - loc) / scale``.\n')
# Assigning a type to the variable '_doc_default_locscale' (line 211)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 0), '_doc_default_locscale', str_609508)

# Assigning a Call to a Name (line 219):

# Assigning a Call to a Name (line 219):

# Call to join(...): (line 219)
# Processing the call arguments (line 219)

# Obtaining an instance of the builtin type 'list' (line 219)
list_609511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 23), 'list')
# Adding type elements to the builtin type 'list' instance (line 219)
# Adding element type (line 219)
# Getting the type of '_doc_default_longsummary' (line 219)
_doc_default_longsummary_609512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 24), '_doc_default_longsummary', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 23), list_609511, _doc_default_longsummary_609512)
# Adding element type (line 219)
# Getting the type of '_doc_allmethods' (line 220)
_doc_allmethods_609513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 24), '_doc_allmethods', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 23), list_609511, _doc_allmethods_609513)
# Adding element type (line 219)
str_609514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 24), 'str', '\n')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 23), list_609511, str_609514)
# Adding element type (line 219)
# Getting the type of '_doc_default_example' (line 222)
_doc_default_example_609515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 24), '_doc_default_example', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 219, 23), list_609511, _doc_default_example_609515)

# Processing the call keyword arguments (line 219)
kwargs_609516 = {}
str_609509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 15), 'str', '')
# Obtaining the member 'join' of a type (line 219)
join_609510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 15), str_609509, 'join')
# Calling join(args, kwargs) (line 219)
join_call_result_609517 = invoke(stypy.reporting.localization.Localization(__file__, 219, 15), join_609510, *[list_609511], **kwargs_609516)

# Assigning a type to the variable '_doc_default' (line 219)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 0), '_doc_default', join_call_result_609517)

# Assigning a Call to a Name (line 224):

# Assigning a Call to a Name (line 224):

# Call to join(...): (line 224)
# Processing the call arguments (line 224)

# Obtaining an instance of the builtin type 'list' (line 224)
list_609520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 36), 'list')
# Adding type elements to the builtin type 'list' instance (line 224)
# Adding element type (line 224)
# Getting the type of '_doc_default_longsummary' (line 224)
_doc_default_longsummary_609521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 37), '_doc_default_longsummary', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 224, 36), list_609520, _doc_default_longsummary_609521)
# Adding element type (line 224)
# Getting the type of '_doc_allmethods' (line 225)
_doc_allmethods_609522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 37), '_doc_allmethods', False)
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 224, 36), list_609520, _doc_allmethods_609522)

# Processing the call keyword arguments (line 224)
kwargs_609523 = {}
str_609518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 28), 'str', '')
# Obtaining the member 'join' of a type (line 224)
join_609519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 224, 28), str_609518, 'join')
# Calling join(args, kwargs) (line 224)
join_call_result_609524 = invoke(stypy.reporting.localization.Localization(__file__, 224, 28), join_609519, *[list_609520], **kwargs_609523)

# Assigning a type to the variable '_doc_default_before_notes' (line 224)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 0), '_doc_default_before_notes', join_call_result_609524)

# Assigning a Dict to a Name (line 227):

# Assigning a Dict to a Name (line 227):

# Obtaining an instance of the builtin type 'dict' (line 227)
dict_609525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 10), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 227)
# Adding element type (key, value) (line 227)
str_609526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 4), 'str', 'rvs')
# Getting the type of '_doc_rvs' (line 228)
_doc_rvs_609527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 11), '_doc_rvs')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609526, _doc_rvs_609527))
# Adding element type (key, value) (line 227)
str_609528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 4), 'str', 'pdf')
# Getting the type of '_doc_pdf' (line 229)
_doc_pdf_609529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 11), '_doc_pdf')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609528, _doc_pdf_609529))
# Adding element type (key, value) (line 227)
str_609530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 230, 4), 'str', 'logpdf')
# Getting the type of '_doc_logpdf' (line 230)
_doc_logpdf_609531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 14), '_doc_logpdf')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609530, _doc_logpdf_609531))
# Adding element type (key, value) (line 227)
str_609532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 4), 'str', 'cdf')
# Getting the type of '_doc_cdf' (line 231)
_doc_cdf_609533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 11), '_doc_cdf')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609532, _doc_cdf_609533))
# Adding element type (key, value) (line 227)
str_609534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 4), 'str', 'logcdf')
# Getting the type of '_doc_logcdf' (line 232)
_doc_logcdf_609535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 14), '_doc_logcdf')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609534, _doc_logcdf_609535))
# Adding element type (key, value) (line 227)
str_609536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 4), 'str', 'sf')
# Getting the type of '_doc_sf' (line 233)
_doc_sf_609537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 10), '_doc_sf')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609536, _doc_sf_609537))
# Adding element type (key, value) (line 227)
str_609538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 4), 'str', 'logsf')
# Getting the type of '_doc_logsf' (line 234)
_doc_logsf_609539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 13), '_doc_logsf')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609538, _doc_logsf_609539))
# Adding element type (key, value) (line 227)
str_609540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 4), 'str', 'ppf')
# Getting the type of '_doc_ppf' (line 235)
_doc_ppf_609541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 11), '_doc_ppf')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609540, _doc_ppf_609541))
# Adding element type (key, value) (line 227)
str_609542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 4), 'str', 'isf')
# Getting the type of '_doc_isf' (line 236)
_doc_isf_609543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 11), '_doc_isf')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609542, _doc_isf_609543))
# Adding element type (key, value) (line 227)
str_609544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 4), 'str', 'stats')
# Getting the type of '_doc_stats' (line 237)
_doc_stats_609545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 13), '_doc_stats')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609544, _doc_stats_609545))
# Adding element type (key, value) (line 227)
str_609546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 4), 'str', 'entropy')
# Getting the type of '_doc_entropy' (line 238)
_doc_entropy_609547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 15), '_doc_entropy')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609546, _doc_entropy_609547))
# Adding element type (key, value) (line 227)
str_609548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 239, 4), 'str', 'fit')
# Getting the type of '_doc_fit' (line 239)
_doc_fit_609549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 11), '_doc_fit')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609548, _doc_fit_609549))
# Adding element type (key, value) (line 227)
str_609550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 4), 'str', 'moment')
# Getting the type of '_doc_moment' (line 240)
_doc_moment_609551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 14), '_doc_moment')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609550, _doc_moment_609551))
# Adding element type (key, value) (line 227)
str_609552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 241, 4), 'str', 'expect')
# Getting the type of '_doc_expect' (line 241)
_doc_expect_609553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 14), '_doc_expect')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609552, _doc_expect_609553))
# Adding element type (key, value) (line 227)
str_609554 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 4), 'str', 'interval')
# Getting the type of '_doc_interval' (line 242)
_doc_interval_609555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 16), '_doc_interval')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609554, _doc_interval_609555))
# Adding element type (key, value) (line 227)
str_609556 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 243, 4), 'str', 'mean')
# Getting the type of '_doc_mean' (line 243)
_doc_mean_609557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 12), '_doc_mean')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609556, _doc_mean_609557))
# Adding element type (key, value) (line 227)
str_609558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 4), 'str', 'std')
# Getting the type of '_doc_std' (line 244)
_doc_std_609559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 11), '_doc_std')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609558, _doc_std_609559))
# Adding element type (key, value) (line 227)
str_609560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 4), 'str', 'var')
# Getting the type of '_doc_var' (line 245)
_doc_var_609561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 11), '_doc_var')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609560, _doc_var_609561))
# Adding element type (key, value) (line 227)
str_609562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 4), 'str', 'median')
# Getting the type of '_doc_median' (line 246)
_doc_median_609563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 14), '_doc_median')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609562, _doc_median_609563))
# Adding element type (key, value) (line 227)
str_609564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 4), 'str', 'allmethods')
# Getting the type of '_doc_allmethods' (line 247)
_doc_allmethods_609565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 18), '_doc_allmethods')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609564, _doc_allmethods_609565))
# Adding element type (key, value) (line 227)
str_609566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 4), 'str', 'longsummary')
# Getting the type of '_doc_default_longsummary' (line 248)
_doc_default_longsummary_609567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 19), '_doc_default_longsummary')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609566, _doc_default_longsummary_609567))
# Adding element type (key, value) (line 227)
str_609568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 4), 'str', 'frozennote')
# Getting the type of '_doc_default_frozen_note' (line 249)
_doc_default_frozen_note_609569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 18), '_doc_default_frozen_note')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609568, _doc_default_frozen_note_609569))
# Adding element type (key, value) (line 227)
str_609570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 4), 'str', 'example')
# Getting the type of '_doc_default_example' (line 250)
_doc_default_example_609571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 15), '_doc_default_example')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609570, _doc_default_example_609571))
# Adding element type (key, value) (line 227)
str_609572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 4), 'str', 'default')
# Getting the type of '_doc_default' (line 251)
_doc_default_609573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 15), '_doc_default')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609572, _doc_default_609573))
# Adding element type (key, value) (line 227)
str_609574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 4), 'str', 'before_notes')
# Getting the type of '_doc_default_before_notes' (line 252)
_doc_default_before_notes_609575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 20), '_doc_default_before_notes')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609574, _doc_default_before_notes_609575))
# Adding element type (key, value) (line 227)
str_609576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 4), 'str', 'after_notes')
# Getting the type of '_doc_default_locscale' (line 253)
_doc_default_locscale_609577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 19), '_doc_default_locscale')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 227, 10), dict_609525, (str_609576, _doc_default_locscale_609577))

# Assigning a type to the variable 'docdict' (line 227)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 0), 'docdict', dict_609525)

# Assigning a Call to a Name (line 258):

# Assigning a Call to a Name (line 258):

# Call to copy(...): (line 258)
# Processing the call keyword arguments (line 258)
kwargs_609580 = {}
# Getting the type of 'docdict' (line 258)
docdict_609578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 19), 'docdict', False)
# Obtaining the member 'copy' of a type (line 258)
copy_609579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 19), docdict_609578, 'copy')
# Calling copy(args, kwargs) (line 258)
copy_call_result_609581 = invoke(stypy.reporting.localization.Localization(__file__, 258, 19), copy_609579, *[], **kwargs_609580)

# Assigning a type to the variable 'docdict_discrete' (line 258)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 0), 'docdict_discrete', copy_call_result_609581)

# Assigning a Name to a Subscript (line 260):

# Assigning a Name to a Subscript (line 260):
# Getting the type of '_doc_pmf' (line 260)
_doc_pmf_609582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 26), '_doc_pmf')
# Getting the type of 'docdict_discrete' (line 260)
docdict_discrete_609583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 0), 'docdict_discrete')
str_609584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 17), 'str', 'pmf')
# Storing an element on a container (line 260)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 0), docdict_discrete_609583, (str_609584, _doc_pmf_609582))

# Assigning a Name to a Subscript (line 261):

# Assigning a Name to a Subscript (line 261):
# Getting the type of '_doc_logpmf' (line 261)
_doc_logpmf_609585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 29), '_doc_logpmf')
# Getting the type of 'docdict_discrete' (line 261)
docdict_discrete_609586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 0), 'docdict_discrete')
str_609587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 17), 'str', 'logpmf')
# Storing an element on a container (line 261)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 0), docdict_discrete_609586, (str_609587, _doc_logpmf_609585))

# Assigning a Name to a Subscript (line 262):

# Assigning a Name to a Subscript (line 262):
# Getting the type of '_doc_expect_discrete' (line 262)
_doc_expect_discrete_609588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 29), '_doc_expect_discrete')
# Getting the type of 'docdict_discrete' (line 262)
docdict_discrete_609589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 0), 'docdict_discrete')
str_609590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 17), 'str', 'expect')
# Storing an element on a container (line 262)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 262, 0), docdict_discrete_609589, (str_609590, _doc_expect_discrete_609588))

# Assigning a List to a Name (line 263):

# Assigning a List to a Name (line 263):

# Obtaining an instance of the builtin type 'list' (line 263)
list_609591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 263)
# Adding element type (line 263)
str_609592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 21), 'str', 'rvs')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609592)
# Adding element type (line 263)
str_609593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 28), 'str', 'pmf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609593)
# Adding element type (line 263)
str_609594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 35), 'str', 'logpmf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609594)
# Adding element type (line 263)
str_609595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 45), 'str', 'cdf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609595)
# Adding element type (line 263)
str_609596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 52), 'str', 'logcdf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609596)
# Adding element type (line 263)
str_609597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 62), 'str', 'sf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609597)
# Adding element type (line 263)
str_609598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 68), 'str', 'logsf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609598)
# Adding element type (line 263)
str_609599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 21), 'str', 'ppf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609599)
# Adding element type (line 263)
str_609600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 28), 'str', 'isf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609600)
# Adding element type (line 263)
str_609601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 35), 'str', 'stats')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609601)
# Adding element type (line 263)
str_609602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 44), 'str', 'entropy')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609602)
# Adding element type (line 263)
str_609603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 55), 'str', 'expect')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609603)
# Adding element type (line 263)
str_609604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 65), 'str', 'median')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609604)
# Adding element type (line 263)
str_609605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 21), 'str', 'mean')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609605)
# Adding element type (line 263)
str_609606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 29), 'str', 'var')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609606)
# Adding element type (line 263)
str_609607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 36), 'str', 'std')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609607)
# Adding element type (line 263)
str_609608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 43), 'str', 'interval')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 263, 20), list_609591, str_609608)

# Assigning a type to the variable '_doc_disc_methods' (line 263)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 0), '_doc_disc_methods', list_609591)

# Getting the type of '_doc_disc_methods' (line 266)
_doc_disc_methods_609609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 11), '_doc_disc_methods')
# Testing the type of a for loop iterable (line 266)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 266, 0), _doc_disc_methods_609609)
# Getting the type of the for loop variable (line 266)
for_loop_var_609610 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 266, 0), _doc_disc_methods_609609)
# Assigning a type to the variable 'obj' (line 266)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 266, 0), 'obj', for_loop_var_609610)
# SSA begins for a for statement (line 266)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')

# Assigning a Call to a Subscript (line 267):

# Assigning a Call to a Subscript (line 267):

# Call to replace(...): (line 267)
# Processing the call arguments (line 267)
str_609616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 58), 'str', ', scale=1')
str_609617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 267, 71), 'str', '')
# Processing the call keyword arguments (line 267)
kwargs_609618 = {}

# Obtaining the type of the subscript
# Getting the type of 'obj' (line 267)
obj_609611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 45), 'obj', False)
# Getting the type of 'docdict_discrete' (line 267)
docdict_discrete_609612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 28), 'docdict_discrete', False)
# Obtaining the member '__getitem__' of a type (line 267)
getitem___609613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 28), docdict_discrete_609612, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 267)
subscript_call_result_609614 = invoke(stypy.reporting.localization.Localization(__file__, 267, 28), getitem___609613, obj_609611)

# Obtaining the member 'replace' of a type (line 267)
replace_609615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 28), subscript_call_result_609614, 'replace')
# Calling replace(args, kwargs) (line 267)
replace_call_result_609619 = invoke(stypy.reporting.localization.Localization(__file__, 267, 28), replace_609615, *[str_609616, str_609617], **kwargs_609618)

# Getting the type of 'docdict_discrete' (line 267)
docdict_discrete_609620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 4), 'docdict_discrete')
# Getting the type of 'obj' (line 267)
obj_609621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 21), 'obj')
# Storing an element on a container (line 267)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 267, 4), docdict_discrete_609620, (obj_609621, replace_call_result_609619))
# SSA join for a for statement
module_type_store = module_type_store.join_ssa_context()


# Assigning a List to a Name (line 269):

# Assigning a List to a Name (line 269):

# Obtaining an instance of the builtin type 'list' (line 269)
list_609622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 269)
# Adding element type (line 269)
str_609623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 33), 'str', 'cdf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 32), list_609622, str_609623)
# Adding element type (line 269)
str_609624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 40), 'str', 'logcdf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 32), list_609622, str_609624)
# Adding element type (line 269)
str_609625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 50), 'str', 'sf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 32), list_609622, str_609625)
# Adding element type (line 269)
str_609626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 56), 'str', 'logsf')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 32), list_609622, str_609626)

# Assigning a type to the variable '_doc_disc_methods_err_varname' (line 269)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 0), '_doc_disc_methods_err_varname', list_609622)

# Getting the type of '_doc_disc_methods_err_varname' (line 270)
_doc_disc_methods_err_varname_609627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 11), '_doc_disc_methods_err_varname')
# Testing the type of a for loop iterable (line 270)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 270, 0), _doc_disc_methods_err_varname_609627)
# Getting the type of the for loop variable (line 270)
for_loop_var_609628 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 270, 0), _doc_disc_methods_err_varname_609627)
# Assigning a type to the variable 'obj' (line 270)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 0), 'obj', for_loop_var_609628)
# SSA begins for a for statement (line 270)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')

# Assigning a Call to a Subscript (line 271):

# Assigning a Call to a Subscript (line 271):

# Call to replace(...): (line 271)
# Processing the call arguments (line 271)
str_609634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 58), 'str', '(x, ')
str_609635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 66), 'str', '(k, ')
# Processing the call keyword arguments (line 271)
kwargs_609636 = {}

# Obtaining the type of the subscript
# Getting the type of 'obj' (line 271)
obj_609629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 45), 'obj', False)
# Getting the type of 'docdict_discrete' (line 271)
docdict_discrete_609630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 28), 'docdict_discrete', False)
# Obtaining the member '__getitem__' of a type (line 271)
getitem___609631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 28), docdict_discrete_609630, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 271)
subscript_call_result_609632 = invoke(stypy.reporting.localization.Localization(__file__, 271, 28), getitem___609631, obj_609629)

# Obtaining the member 'replace' of a type (line 271)
replace_609633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 28), subscript_call_result_609632, 'replace')
# Calling replace(args, kwargs) (line 271)
replace_call_result_609637 = invoke(stypy.reporting.localization.Localization(__file__, 271, 28), replace_609633, *[str_609634, str_609635], **kwargs_609636)

# Getting the type of 'docdict_discrete' (line 271)
docdict_discrete_609638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 4), 'docdict_discrete')
# Getting the type of 'obj' (line 271)
obj_609639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 21), 'obj')
# Storing an element on a container (line 271)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 4), docdict_discrete_609638, (obj_609639, replace_call_result_609637))
# SSA join for a for statement
module_type_store = module_type_store.join_ssa_context()


# Call to pop(...): (line 273)
# Processing the call arguments (line 273)
str_609642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 21), 'str', 'pdf')
# Processing the call keyword arguments (line 273)
kwargs_609643 = {}
# Getting the type of 'docdict_discrete' (line 273)
docdict_discrete_609640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 0), 'docdict_discrete', False)
# Obtaining the member 'pop' of a type (line 273)
pop_609641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 0), docdict_discrete_609640, 'pop')
# Calling pop(args, kwargs) (line 273)
pop_call_result_609644 = invoke(stypy.reporting.localization.Localization(__file__, 273, 0), pop_609641, *[str_609642], **kwargs_609643)


# Call to pop(...): (line 274)
# Processing the call arguments (line 274)
str_609647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 21), 'str', 'logpdf')
# Processing the call keyword arguments (line 274)
kwargs_609648 = {}
# Getting the type of 'docdict_discrete' (line 274)
docdict_discrete_609645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 0), 'docdict_discrete', False)
# Obtaining the member 'pop' of a type (line 274)
pop_609646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 274, 0), docdict_discrete_609645, 'pop')
# Calling pop(args, kwargs) (line 274)
pop_call_result_609649 = invoke(stypy.reporting.localization.Localization(__file__, 274, 0), pop_609646, *[str_609647], **kwargs_609648)


# Assigning a Call to a Name (line 276):

# Assigning a Call to a Name (line 276):

# Call to join(...): (line 276)
# Processing the call arguments (line 276)
# Calculating list comprehension
# Calculating comprehension expression
# Getting the type of '_doc_disc_methods' (line 276)
_doc_disc_methods_609656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 60), '_doc_disc_methods', False)
comprehension_609657 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 276, 27), _doc_disc_methods_609656)
# Assigning a type to the variable 'obj' (line 276)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 27), 'obj', comprehension_609657)

# Obtaining the type of the subscript
# Getting the type of 'obj' (line 276)
obj_609652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 44), 'obj', False)
# Getting the type of 'docdict_discrete' (line 276)
docdict_discrete_609653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 27), 'docdict_discrete', False)
# Obtaining the member '__getitem__' of a type (line 276)
getitem___609654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 27), docdict_discrete_609653, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 276)
subscript_call_result_609655 = invoke(stypy.reporting.localization.Localization(__file__, 276, 27), getitem___609654, obj_609652)

list_609658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 27), 'list')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 276, 27), list_609658, subscript_call_result_609655)
# Processing the call keyword arguments (line 276)
kwargs_609659 = {}
str_609650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 18), 'str', '')
# Obtaining the member 'join' of a type (line 276)
join_609651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 18), str_609650, 'join')
# Calling join(args, kwargs) (line 276)
join_call_result_609660 = invoke(stypy.reporting.localization.Localization(__file__, 276, 18), join_609651, *[list_609658], **kwargs_609659)

# Assigning a type to the variable '_doc_allmethods' (line 276)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 0), '_doc_allmethods', join_call_result_609660)

# Assigning a BinOp to a Subscript (line 277):

# Assigning a BinOp to a Subscript (line 277):

# Obtaining the type of the subscript
str_609661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 44), 'str', 'methods')
# Getting the type of 'docheaders' (line 277)
docheaders_609662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 33), 'docheaders')
# Obtaining the member '__getitem__' of a type (line 277)
getitem___609663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 33), docheaders_609662, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 277)
subscript_call_result_609664 = invoke(stypy.reporting.localization.Localization(__file__, 277, 33), getitem___609663, str_609661)

# Getting the type of '_doc_allmethods' (line 277)
_doc_allmethods_609665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 57), '_doc_allmethods')
# Applying the binary operator '+' (line 277)
result_add_609666 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 33), '+', subscript_call_result_609664, _doc_allmethods_609665)

# Getting the type of 'docdict_discrete' (line 277)
docdict_discrete_609667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 0), 'docdict_discrete')
str_609668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 17), 'str', 'allmethods')
# Storing an element on a container (line 277)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 277, 0), docdict_discrete_609667, (str_609668, result_add_609666))

# Assigning a Call to a Subscript (line 279):

# Assigning a Call to a Subscript (line 279):

# Call to replace(...): (line 279)
# Processing the call arguments (line 279)
str_609671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 4), 'str', 'rv_continuous')
str_609672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 21), 'str', 'rv_discrete')
# Processing the call keyword arguments (line 279)
kwargs_609673 = {}
# Getting the type of '_doc_default_longsummary' (line 279)
_doc_default_longsummary_609669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 34), '_doc_default_longsummary', False)
# Obtaining the member 'replace' of a type (line 279)
replace_609670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 34), _doc_default_longsummary_609669, 'replace')
# Calling replace(args, kwargs) (line 279)
replace_call_result_609674 = invoke(stypy.reporting.localization.Localization(__file__, 279, 34), replace_609670, *[str_609671, str_609672], **kwargs_609673)

# Getting the type of 'docdict_discrete' (line 279)
docdict_discrete_609675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 0), 'docdict_discrete')
str_609676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 17), 'str', 'longsummary')
# Storing an element on a container (line 279)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 0), docdict_discrete_609675, (str_609676, replace_call_result_609674))

# Assigning a Str to a Name (line 282):

# Assigning a Str to a Name (line 282):
str_609677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 289, (-1)), 'str', '\nAlternatively, the object may be called (as a function) to fix the shape and\nlocation parameters returning a "frozen" discrete RV object:\n\nrv = %(name)s(%(shapes)s, loc=0)\n    - Frozen RV object with the same methods but holding the given shape and\n      location fixed.\n')
# Assigning a type to the variable '_doc_default_frozen_note' (line 282)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 0), '_doc_default_frozen_note', str_609677)

# Assigning a Name to a Subscript (line 290):

# Assigning a Name to a Subscript (line 290):
# Getting the type of '_doc_default_frozen_note' (line 290)
_doc_default_frozen_note_609678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 33), '_doc_default_frozen_note')
# Getting the type of 'docdict_discrete' (line 290)
docdict_discrete_609679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 0), 'docdict_discrete')
str_609680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 290, 17), 'str', 'frozennote')
# Storing an element on a container (line 290)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 290, 0), docdict_discrete_609679, (str_609680, _doc_default_frozen_note_609678))

# Assigning a Str to a Name (line 292):

# Assigning a Str to a Name (line 292):
str_609681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, (-1)), 'str', 'Examples\n--------\n>>> from scipy.stats import %(name)s\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1)\n\nCalculate a few first moments:\n\n%(set_vals_stmt)s\n>>> mean, var, skew, kurt = %(name)s.stats(%(shapes)s, moments=\'mvsk\')\n\nDisplay the probability mass function (``pmf``):\n\n>>> x = np.arange(%(name)s.ppf(0.01, %(shapes)s),\n...               %(name)s.ppf(0.99, %(shapes)s))\n>>> ax.plot(x, %(name)s.pmf(x, %(shapes)s), \'bo\', ms=8, label=\'%(name)s pmf\')\n>>> ax.vlines(x, 0, %(name)s.pmf(x, %(shapes)s), colors=\'b\', lw=5, alpha=0.5)\n\nAlternatively, the distribution object can be called (as a function)\nto fix the shape and location. This returns a "frozen" RV object holding\nthe given parameters fixed.\n\nFreeze the distribution and display the frozen ``pmf``:\n\n>>> rv = %(name)s(%(shapes)s)\n>>> ax.vlines(x, 0, rv.pmf(x), colors=\'k\', linestyles=\'-\', lw=1,\n...         label=\'frozen pmf\')\n>>> ax.legend(loc=\'best\', frameon=False)\n>>> plt.show()\n\nCheck accuracy of ``cdf`` and ``ppf``:\n\n>>> prob = %(name)s.cdf(x, %(shapes)s)\n>>> np.allclose(x, %(name)s.ppf(prob, %(shapes)s))\nTrue\n\nGenerate random numbers:\n\n>>> r = %(name)s.rvs(%(shapes)s, size=1000)\n')
# Assigning a type to the variable '_doc_default_discrete_example' (line 292)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 0), '_doc_default_discrete_example', str_609681)

# Assigning a Str to a Name (line 335):

# Assigning a Str to a Name (line 335):
str_609682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, (-1)), 'str', 'The probability mass function above is defined in the "standardized" form.\nTo shift distribution use the ``loc`` parameter.\nSpecifically, ``%(name)s.pmf(k, %(shapes)s, loc)`` is identically\nequivalent to ``%(name)s.pmf(k - loc, %(shapes)s)``.\n')
# Assigning a type to the variable '_doc_default_discrete_locscale' (line 335)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 0), '_doc_default_discrete_locscale', str_609682)

# Assigning a Name to a Subscript (line 342):

# Assigning a Name to a Subscript (line 342):
# Getting the type of '_doc_default_discrete_example' (line 342)
_doc_default_discrete_example_609683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 30), '_doc_default_discrete_example')
# Getting the type of 'docdict_discrete' (line 342)
docdict_discrete_609684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 0), 'docdict_discrete')
str_609685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 17), 'str', 'example')
# Storing an element on a container (line 342)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 0), docdict_discrete_609684, (str_609685, _doc_default_discrete_example_609683))

# Assigning a Name to a Subscript (line 343):

# Assigning a Name to a Subscript (line 343):
# Getting the type of '_doc_default_discrete_locscale' (line 343)
_doc_default_discrete_locscale_609686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 34), '_doc_default_discrete_locscale')
# Getting the type of 'docdict_discrete' (line 343)
docdict_discrete_609687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 0), 'docdict_discrete')
str_609688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 17), 'str', 'after_notes')
# Storing an element on a container (line 343)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 343, 0), docdict_discrete_609687, (str_609688, _doc_default_discrete_locscale_609686))

# Assigning a Call to a Name (line 345):

# Assigning a Call to a Name (line 345):

# Call to join(...): (line 345)
# Processing the call arguments (line 345)

# Obtaining an instance of the builtin type 'list' (line 345)
list_609691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 36), 'list')
# Adding type elements to the builtin type 'list' instance (line 345)
# Adding element type (line 345)

# Obtaining the type of the subscript
str_609692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 54), 'str', 'longsummary')
# Getting the type of 'docdict_discrete' (line 345)
docdict_discrete_609693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 37), 'docdict_discrete', False)
# Obtaining the member '__getitem__' of a type (line 345)
getitem___609694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 37), docdict_discrete_609693, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 345)
subscript_call_result_609695 = invoke(stypy.reporting.localization.Localization(__file__, 345, 37), getitem___609694, str_609692)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 345, 36), list_609691, subscript_call_result_609695)
# Adding element type (line 345)

# Obtaining the type of the subscript
str_609696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 54), 'str', 'allmethods')
# Getting the type of 'docdict_discrete' (line 346)
docdict_discrete_609697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 37), 'docdict_discrete', False)
# Obtaining the member '__getitem__' of a type (line 346)
getitem___609698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 346, 37), docdict_discrete_609697, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 346)
subscript_call_result_609699 = invoke(stypy.reporting.localization.Localization(__file__, 346, 37), getitem___609698, str_609696)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 345, 36), list_609691, subscript_call_result_609699)

# Processing the call keyword arguments (line 345)
kwargs_609700 = {}
str_609689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 28), 'str', '')
# Obtaining the member 'join' of a type (line 345)
join_609690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 28), str_609689, 'join')
# Calling join(args, kwargs) (line 345)
join_call_result_609701 = invoke(stypy.reporting.localization.Localization(__file__, 345, 28), join_609690, *[list_609691], **kwargs_609700)

# Assigning a type to the variable '_doc_default_before_notes' (line 345)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 0), '_doc_default_before_notes', join_call_result_609701)

# Assigning a Name to a Subscript (line 347):

# Assigning a Name to a Subscript (line 347):
# Getting the type of '_doc_default_before_notes' (line 347)
_doc_default_before_notes_609702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 35), '_doc_default_before_notes')
# Getting the type of 'docdict_discrete' (line 347)
docdict_discrete_609703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 0), 'docdict_discrete')
str_609704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 17), 'str', 'before_notes')
# Storing an element on a container (line 347)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 347, 0), docdict_discrete_609703, (str_609704, _doc_default_before_notes_609702))

# Assigning a Call to a Name (line 349):

# Assigning a Call to a Name (line 349):

# Call to join(...): (line 349)
# Processing the call arguments (line 349)

# Obtaining an instance of the builtin type 'list' (line 349)
list_609707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 349)
# Adding element type (line 349)

# Obtaining the type of the subscript
str_609708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 46), 'str', 'longsummary')
# Getting the type of 'docdict_discrete' (line 349)
docdict_discrete_609709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 29), 'docdict_discrete', False)
# Obtaining the member '__getitem__' of a type (line 349)
getitem___609710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 29), docdict_discrete_609709, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 349)
subscript_call_result_609711 = invoke(stypy.reporting.localization.Localization(__file__, 349, 29), getitem___609710, str_609708)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 349, 28), list_609707, subscript_call_result_609711)
# Adding element type (line 349)

# Obtaining the type of the subscript
str_609712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 46), 'str', 'allmethods')
# Getting the type of 'docdict_discrete' (line 350)
docdict_discrete_609713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 29), 'docdict_discrete', False)
# Obtaining the member '__getitem__' of a type (line 350)
getitem___609714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 29), docdict_discrete_609713, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 350)
subscript_call_result_609715 = invoke(stypy.reporting.localization.Localization(__file__, 350, 29), getitem___609714, str_609712)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 349, 28), list_609707, subscript_call_result_609715)
# Adding element type (line 349)

# Obtaining the type of the subscript
str_609716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 46), 'str', 'frozennote')
# Getting the type of 'docdict_discrete' (line 351)
docdict_discrete_609717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 29), 'docdict_discrete', False)
# Obtaining the member '__getitem__' of a type (line 351)
getitem___609718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 29), docdict_discrete_609717, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 351)
subscript_call_result_609719 = invoke(stypy.reporting.localization.Localization(__file__, 351, 29), getitem___609718, str_609716)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 349, 28), list_609707, subscript_call_result_609719)
# Adding element type (line 349)

# Obtaining the type of the subscript
str_609720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 46), 'str', 'example')
# Getting the type of 'docdict_discrete' (line 352)
docdict_discrete_609721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 29), 'docdict_discrete', False)
# Obtaining the member '__getitem__' of a type (line 352)
getitem___609722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 29), docdict_discrete_609721, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 352)
subscript_call_result_609723 = invoke(stypy.reporting.localization.Localization(__file__, 352, 29), getitem___609722, str_609720)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 349, 28), list_609707, subscript_call_result_609723)

# Processing the call keyword arguments (line 349)
kwargs_609724 = {}
str_609705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 20), 'str', '')
# Obtaining the member 'join' of a type (line 349)
join_609706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 20), str_609705, 'join')
# Calling join(args, kwargs) (line 349)
join_call_result_609725 = invoke(stypy.reporting.localization.Localization(__file__, 349, 20), join_609706, *[list_609707], **kwargs_609724)

# Assigning a type to the variable '_doc_default_disc' (line 349)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 0), '_doc_default_disc', join_call_result_609725)

# Assigning a Name to a Subscript (line 353):

# Assigning a Name to a Subscript (line 353):
# Getting the type of '_doc_default_disc' (line 353)
_doc_default_disc_609726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 30), '_doc_default_disc')
# Getting the type of 'docdict_discrete' (line 353)
docdict_discrete_609727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 0), 'docdict_discrete')
str_609728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 17), 'str', 'default')
# Storing an element on a container (line 353)
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 0), docdict_discrete_609727, (str_609728, _doc_default_disc_609726))

# Calculating list comprehension
# Calculating comprehension expression

# Call to dir(...): (line 356)
# Processing the call keyword arguments (line 356)
kwargs_609736 = {}
# Getting the type of 'dir' (line 356)
dir_609735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 23), 'dir', False)
# Calling dir(args, kwargs) (line 356)
dir_call_result_609737 = invoke(stypy.reporting.localization.Localization(__file__, 356, 23), dir_609735, *[], **kwargs_609736)

comprehension_609738 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 356, 12), dir_call_result_609737)
# Assigning a type to the variable 's' (line 356)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 12), 's', comprehension_609738)

# Call to startswith(...): (line 356)
# Processing the call arguments (line 356)
str_609732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 45), 'str', '_doc_')
# Processing the call keyword arguments (line 356)
kwargs_609733 = {}
# Getting the type of 's' (line 356)
s_609730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 32), 's', False)
# Obtaining the member 'startswith' of a type (line 356)
startswith_609731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 32), s_609730, 'startswith')
# Calling startswith(args, kwargs) (line 356)
startswith_call_result_609734 = invoke(stypy.reporting.localization.Localization(__file__, 356, 32), startswith_609731, *[str_609732], **kwargs_609733)

# Getting the type of 's' (line 356)
s_609729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 12), 's')
list_609739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 12), 'list')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 356, 12), list_609739, s_609729)
# Testing the type of a for loop iterable (line 356)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 356, 0), list_609739)
# Getting the type of the for loop variable (line 356)
for_loop_var_609740 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 356, 0), list_609739)
# Assigning a type to the variable 'obj' (line 356)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 356, 0), 'obj', for_loop_var_609740)
# SSA begins for a for statement (line 356)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
# Dynamic code evaluation using an exec statement
str_609741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 9), 'str', 'del ')
# Getting the type of 'obj' (line 357)
obj_609742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 18), 'obj')
# Applying the binary operator '+' (line 357)
result_add_609743 = python_operator(stypy.reporting.localization.Localization(__file__, 357, 9), '+', str_609741, obj_609742)

ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 357, 4), result_add_609743, 'exec parameter', 'StringType', 'FileType', 'CodeType')
enable_usage_of_dynamic_types_warning(stypy.reporting.localization.Localization(__file__, 357, 4))
# SSA join for a for statement
module_type_store = module_type_store.join_ssa_context()

# Deleting a member
module_type_store.del_member(stypy.reporting.localization.Localization(__file__, 358, 0), module_type_store, 'obj')


# SSA begins for try-except statement (line 359)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
# Deleting a member
module_type_store.del_member(stypy.reporting.localization.Localization(__file__, 360, 4), module_type_store, 's')
# SSA branch for the except part of a try statement (line 359)
# SSA branch for the except 'NameError' branch of a try statement (line 359)
module_type_store.open_ssa_branch('except')
pass
# SSA join for try-except statement (line 359)
module_type_store = module_type_store.join_ssa_context()


@norecursion
def _moment(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 366)
    None_609744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 24), 'None')
    defaults = [None_609744]
    # Create a new context for function '_moment'
    module_type_store = module_type_store.open_function_context('_moment', 366, 0, False)
    
    # Passed parameters checking function
    _moment.stypy_localization = localization
    _moment.stypy_type_of_self = None
    _moment.stypy_type_store = module_type_store
    _moment.stypy_function_name = '_moment'
    _moment.stypy_param_names_list = ['data', 'n', 'mu']
    _moment.stypy_varargs_param_name = None
    _moment.stypy_kwargs_param_name = None
    _moment.stypy_call_defaults = defaults
    _moment.stypy_call_varargs = varargs
    _moment.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_moment', ['data', 'n', 'mu'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_moment', localization, ['data', 'n', 'mu'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_moment(...)' code ##################

    
    # Type idiom detected: calculating its left and rigth part (line 367)
    # Getting the type of 'mu' (line 367)
    mu_609745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 7), 'mu')
    # Getting the type of 'None' (line 367)
    None_609746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 13), 'None')
    
    (may_be_609747, more_types_in_union_609748) = may_be_none(mu_609745, None_609746)

    if may_be_609747:

        if more_types_in_union_609748:
            # Runtime conditional SSA (line 367)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 368):
        
        # Assigning a Call to a Name (line 368):
        
        # Call to mean(...): (line 368)
        # Processing the call keyword arguments (line 368)
        kwargs_609751 = {}
        # Getting the type of 'data' (line 368)
        data_609749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 13), 'data', False)
        # Obtaining the member 'mean' of a type (line 368)
        mean_609750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 368, 13), data_609749, 'mean')
        # Calling mean(args, kwargs) (line 368)
        mean_call_result_609752 = invoke(stypy.reporting.localization.Localization(__file__, 368, 13), mean_609750, *[], **kwargs_609751)
        
        # Assigning a type to the variable 'mu' (line 368)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 368, 8), 'mu', mean_call_result_609752)

        if more_types_in_union_609748:
            # SSA join for if statement (line 367)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Call to mean(...): (line 369)
    # Processing the call keyword arguments (line 369)
    kwargs_609759 = {}
    # Getting the type of 'data' (line 369)
    data_609753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 13), 'data', False)
    # Getting the type of 'mu' (line 369)
    mu_609754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 20), 'mu', False)
    # Applying the binary operator '-' (line 369)
    result_sub_609755 = python_operator(stypy.reporting.localization.Localization(__file__, 369, 13), '-', data_609753, mu_609754)
    
    # Getting the type of 'n' (line 369)
    n_609756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 25), 'n', False)
    # Applying the binary operator '**' (line 369)
    result_pow_609757 = python_operator(stypy.reporting.localization.Localization(__file__, 369, 12), '**', result_sub_609755, n_609756)
    
    # Obtaining the member 'mean' of a type (line 369)
    mean_609758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 12), result_pow_609757, 'mean')
    # Calling mean(args, kwargs) (line 369)
    mean_call_result_609760 = invoke(stypy.reporting.localization.Localization(__file__, 369, 12), mean_609758, *[], **kwargs_609759)
    
    # Assigning a type to the variable 'stypy_return_type' (line 369)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 4), 'stypy_return_type', mean_call_result_609760)
    
    # ################# End of '_moment(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_moment' in the type store
    # Getting the type of 'stypy_return_type' (line 366)
    stypy_return_type_609761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_609761)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_moment'
    return stypy_return_type_609761

# Assigning a type to the variable '_moment' (line 366)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 0), '_moment', _moment)

@norecursion
def _moment_from_stats(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_moment_from_stats'
    module_type_store = module_type_store.open_function_context('_moment_from_stats', 372, 0, False)
    
    # Passed parameters checking function
    _moment_from_stats.stypy_localization = localization
    _moment_from_stats.stypy_type_of_self = None
    _moment_from_stats.stypy_type_store = module_type_store
    _moment_from_stats.stypy_function_name = '_moment_from_stats'
    _moment_from_stats.stypy_param_names_list = ['n', 'mu', 'mu2', 'g1', 'g2', 'moment_func', 'args']
    _moment_from_stats.stypy_varargs_param_name = None
    _moment_from_stats.stypy_kwargs_param_name = None
    _moment_from_stats.stypy_call_defaults = defaults
    _moment_from_stats.stypy_call_varargs = varargs
    _moment_from_stats.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_moment_from_stats', ['n', 'mu', 'mu2', 'g1', 'g2', 'moment_func', 'args'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_moment_from_stats', localization, ['n', 'mu', 'mu2', 'g1', 'g2', 'moment_func', 'args'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_moment_from_stats(...)' code ##################

    
    
    # Getting the type of 'n' (line 373)
    n_609762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'n')
    int_609763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 13), 'int')
    # Applying the binary operator '==' (line 373)
    result_eq_609764 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 8), '==', n_609762, int_609763)
    
    # Testing the type of an if condition (line 373)
    if_condition_609765 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 373, 4), result_eq_609764)
    # Assigning a type to the variable 'if_condition_609765' (line 373)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 4), 'if_condition_609765', if_condition_609765)
    # SSA begins for if statement (line 373)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    float_609766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 15), 'float')
    # Assigning a type to the variable 'stypy_return_type' (line 374)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'stypy_return_type', float_609766)
    # SSA branch for the else part of an if statement (line 373)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'n' (line 375)
    n_609767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 10), 'n')
    int_609768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 375, 15), 'int')
    # Applying the binary operator '==' (line 375)
    result_eq_609769 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 10), '==', n_609767, int_609768)
    
    # Testing the type of an if condition (line 375)
    if_condition_609770 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 375, 9), result_eq_609769)
    # Assigning a type to the variable 'if_condition_609770' (line 375)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 9), 'if_condition_609770', if_condition_609770)
    # SSA begins for if statement (line 375)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Type idiom detected: calculating its left and rigth part (line 376)
    # Getting the type of 'mu' (line 376)
    mu_609771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 11), 'mu')
    # Getting the type of 'None' (line 376)
    None_609772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 17), 'None')
    
    (may_be_609773, more_types_in_union_609774) = may_be_none(mu_609771, None_609772)

    if may_be_609773:

        if more_types_in_union_609774:
            # Runtime conditional SSA (line 376)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 377):
        
        # Assigning a Call to a Name (line 377):
        
        # Call to moment_func(...): (line 377)
        # Processing the call arguments (line 377)
        int_609776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 377, 30), 'int')
        # Getting the type of 'args' (line 377)
        args_609777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 34), 'args', False)
        # Processing the call keyword arguments (line 377)
        kwargs_609778 = {}
        # Getting the type of 'moment_func' (line 377)
        moment_func_609775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 18), 'moment_func', False)
        # Calling moment_func(args, kwargs) (line 377)
        moment_func_call_result_609779 = invoke(stypy.reporting.localization.Localization(__file__, 377, 18), moment_func_609775, *[int_609776, args_609777], **kwargs_609778)
        
        # Assigning a type to the variable 'val' (line 377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'val', moment_func_call_result_609779)

        if more_types_in_union_609774:
            # Runtime conditional SSA for else branch (line 376)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_609773) or more_types_in_union_609774):
        
        # Assigning a Name to a Name (line 379):
        
        # Assigning a Name to a Name (line 379):
        # Getting the type of 'mu' (line 379)
        mu_609780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 18), 'mu')
        # Assigning a type to the variable 'val' (line 379)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'val', mu_609780)

        if (may_be_609773 and more_types_in_union_609774):
            # SSA join for if statement (line 376)
            module_type_store = module_type_store.join_ssa_context()


    
    # SSA branch for the else part of an if statement (line 375)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'n' (line 380)
    n_609781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 10), 'n')
    int_609782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 380, 15), 'int')
    # Applying the binary operator '==' (line 380)
    result_eq_609783 = python_operator(stypy.reporting.localization.Localization(__file__, 380, 10), '==', n_609781, int_609782)
    
    # Testing the type of an if condition (line 380)
    if_condition_609784 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 380, 9), result_eq_609783)
    # Assigning a type to the variable 'if_condition_609784' (line 380)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 380, 9), 'if_condition_609784', if_condition_609784)
    # SSA begins for if statement (line 380)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'mu2' (line 381)
    mu2_609785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 11), 'mu2')
    # Getting the type of 'None' (line 381)
    None_609786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 18), 'None')
    # Applying the binary operator 'is' (line 381)
    result_is__609787 = python_operator(stypy.reporting.localization.Localization(__file__, 381, 11), 'is', mu2_609785, None_609786)
    
    
    # Getting the type of 'mu' (line 381)
    mu_609788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 26), 'mu')
    # Getting the type of 'None' (line 381)
    None_609789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 32), 'None')
    # Applying the binary operator 'is' (line 381)
    result_is__609790 = python_operator(stypy.reporting.localization.Localization(__file__, 381, 26), 'is', mu_609788, None_609789)
    
    # Applying the binary operator 'or' (line 381)
    result_or_keyword_609791 = python_operator(stypy.reporting.localization.Localization(__file__, 381, 11), 'or', result_is__609787, result_is__609790)
    
    # Testing the type of an if condition (line 381)
    if_condition_609792 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 381, 8), result_or_keyword_609791)
    # Assigning a type to the variable 'if_condition_609792' (line 381)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 8), 'if_condition_609792', if_condition_609792)
    # SSA begins for if statement (line 381)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 382):
    
    # Assigning a Call to a Name (line 382):
    
    # Call to moment_func(...): (line 382)
    # Processing the call arguments (line 382)
    int_609794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, 30), 'int')
    # Getting the type of 'args' (line 382)
    args_609795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 34), 'args', False)
    # Processing the call keyword arguments (line 382)
    kwargs_609796 = {}
    # Getting the type of 'moment_func' (line 382)
    moment_func_609793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 18), 'moment_func', False)
    # Calling moment_func(args, kwargs) (line 382)
    moment_func_call_result_609797 = invoke(stypy.reporting.localization.Localization(__file__, 382, 18), moment_func_609793, *[int_609794, args_609795], **kwargs_609796)
    
    # Assigning a type to the variable 'val' (line 382)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 382, 12), 'val', moment_func_call_result_609797)
    # SSA branch for the else part of an if statement (line 381)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 384):
    
    # Assigning a BinOp to a Name (line 384):
    # Getting the type of 'mu2' (line 384)
    mu2_609798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 18), 'mu2')
    # Getting the type of 'mu' (line 384)
    mu_609799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 24), 'mu')
    # Getting the type of 'mu' (line 384)
    mu_609800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 27), 'mu')
    # Applying the binary operator '*' (line 384)
    result_mul_609801 = python_operator(stypy.reporting.localization.Localization(__file__, 384, 24), '*', mu_609799, mu_609800)
    
    # Applying the binary operator '+' (line 384)
    result_add_609802 = python_operator(stypy.reporting.localization.Localization(__file__, 384, 18), '+', mu2_609798, result_mul_609801)
    
    # Assigning a type to the variable 'val' (line 384)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 384, 12), 'val', result_add_609802)
    # SSA join for if statement (line 381)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 380)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'n' (line 385)
    n_609803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 10), 'n')
    int_609804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 385, 15), 'int')
    # Applying the binary operator '==' (line 385)
    result_eq_609805 = python_operator(stypy.reporting.localization.Localization(__file__, 385, 10), '==', n_609803, int_609804)
    
    # Testing the type of an if condition (line 385)
    if_condition_609806 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 385, 9), result_eq_609805)
    # Assigning a type to the variable 'if_condition_609806' (line 385)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 385, 9), 'if_condition_609806', if_condition_609806)
    # SSA begins for if statement (line 385)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'g1' (line 386)
    g1_609807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 11), 'g1')
    # Getting the type of 'None' (line 386)
    None_609808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 17), 'None')
    # Applying the binary operator 'is' (line 386)
    result_is__609809 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 11), 'is', g1_609807, None_609808)
    
    
    # Getting the type of 'mu2' (line 386)
    mu2_609810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 25), 'mu2')
    # Getting the type of 'None' (line 386)
    None_609811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 32), 'None')
    # Applying the binary operator 'is' (line 386)
    result_is__609812 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 25), 'is', mu2_609810, None_609811)
    
    # Applying the binary operator 'or' (line 386)
    result_or_keyword_609813 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 11), 'or', result_is__609809, result_is__609812)
    
    # Getting the type of 'mu' (line 386)
    mu_609814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 40), 'mu')
    # Getting the type of 'None' (line 386)
    None_609815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 46), 'None')
    # Applying the binary operator 'is' (line 386)
    result_is__609816 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 40), 'is', mu_609814, None_609815)
    
    # Applying the binary operator 'or' (line 386)
    result_or_keyword_609817 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 11), 'or', result_or_keyword_609813, result_is__609816)
    
    # Testing the type of an if condition (line 386)
    if_condition_609818 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 386, 8), result_or_keyword_609817)
    # Assigning a type to the variable 'if_condition_609818' (line 386)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 8), 'if_condition_609818', if_condition_609818)
    # SSA begins for if statement (line 386)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 387):
    
    # Assigning a Call to a Name (line 387):
    
    # Call to moment_func(...): (line 387)
    # Processing the call arguments (line 387)
    int_609820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 30), 'int')
    # Getting the type of 'args' (line 387)
    args_609821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 34), 'args', False)
    # Processing the call keyword arguments (line 387)
    kwargs_609822 = {}
    # Getting the type of 'moment_func' (line 387)
    moment_func_609819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 18), 'moment_func', False)
    # Calling moment_func(args, kwargs) (line 387)
    moment_func_call_result_609823 = invoke(stypy.reporting.localization.Localization(__file__, 387, 18), moment_func_609819, *[int_609820, args_609821], **kwargs_609822)
    
    # Assigning a type to the variable 'val' (line 387)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 12), 'val', moment_func_call_result_609823)
    # SSA branch for the else part of an if statement (line 386)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 389):
    
    # Assigning a BinOp to a Name (line 389):
    # Getting the type of 'g1' (line 389)
    g1_609824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 18), 'g1')
    
    # Call to power(...): (line 389)
    # Processing the call arguments (line 389)
    # Getting the type of 'mu2' (line 389)
    mu2_609827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 32), 'mu2', False)
    float_609828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 37), 'float')
    # Processing the call keyword arguments (line 389)
    kwargs_609829 = {}
    # Getting the type of 'np' (line 389)
    np_609825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 23), 'np', False)
    # Obtaining the member 'power' of a type (line 389)
    power_609826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 23), np_609825, 'power')
    # Calling power(args, kwargs) (line 389)
    power_call_result_609830 = invoke(stypy.reporting.localization.Localization(__file__, 389, 23), power_609826, *[mu2_609827, float_609828], **kwargs_609829)
    
    # Applying the binary operator '*' (line 389)
    result_mul_609831 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 18), '*', g1_609824, power_call_result_609830)
    
    # Assigning a type to the variable 'mu3' (line 389)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 12), 'mu3', result_mul_609831)
    
    # Assigning a BinOp to a Name (line 390):
    
    # Assigning a BinOp to a Name (line 390):
    # Getting the type of 'mu3' (line 390)
    mu3_609832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 18), 'mu3')
    int_609833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 22), 'int')
    # Getting the type of 'mu' (line 390)
    mu_609834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'mu')
    # Applying the binary operator '*' (line 390)
    result_mul_609835 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 22), '*', int_609833, mu_609834)
    
    # Getting the type of 'mu2' (line 390)
    mu2_609836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 27), 'mu2')
    # Applying the binary operator '*' (line 390)
    result_mul_609837 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 26), '*', result_mul_609835, mu2_609836)
    
    # Applying the binary operator '+' (line 390)
    result_add_609838 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 18), '+', mu3_609832, result_mul_609837)
    
    # Getting the type of 'mu' (line 390)
    mu_609839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 31), 'mu')
    # Getting the type of 'mu' (line 390)
    mu_609840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 34), 'mu')
    # Applying the binary operator '*' (line 390)
    result_mul_609841 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 31), '*', mu_609839, mu_609840)
    
    # Getting the type of 'mu' (line 390)
    mu_609842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 37), 'mu')
    # Applying the binary operator '*' (line 390)
    result_mul_609843 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 36), '*', result_mul_609841, mu_609842)
    
    # Applying the binary operator '+' (line 390)
    result_add_609844 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 30), '+', result_add_609838, result_mul_609843)
    
    # Assigning a type to the variable 'val' (line 390)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 12), 'val', result_add_609844)
    # SSA join for if statement (line 386)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 385)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'n' (line 391)
    n_609845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 10), 'n')
    int_609846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 15), 'int')
    # Applying the binary operator '==' (line 391)
    result_eq_609847 = python_operator(stypy.reporting.localization.Localization(__file__, 391, 10), '==', n_609845, int_609846)
    
    # Testing the type of an if condition (line 391)
    if_condition_609848 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 391, 9), result_eq_609847)
    # Assigning a type to the variable 'if_condition_609848' (line 391)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 391, 9), 'if_condition_609848', if_condition_609848)
    # SSA begins for if statement (line 391)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'g1' (line 392)
    g1_609849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 11), 'g1')
    # Getting the type of 'None' (line 392)
    None_609850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 17), 'None')
    # Applying the binary operator 'is' (line 392)
    result_is__609851 = python_operator(stypy.reporting.localization.Localization(__file__, 392, 11), 'is', g1_609849, None_609850)
    
    
    # Getting the type of 'g2' (line 392)
    g2_609852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 25), 'g2')
    # Getting the type of 'None' (line 392)
    None_609853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 31), 'None')
    # Applying the binary operator 'is' (line 392)
    result_is__609854 = python_operator(stypy.reporting.localization.Localization(__file__, 392, 25), 'is', g2_609852, None_609853)
    
    # Applying the binary operator 'or' (line 392)
    result_or_keyword_609855 = python_operator(stypy.reporting.localization.Localization(__file__, 392, 11), 'or', result_is__609851, result_is__609854)
    
    # Getting the type of 'mu2' (line 392)
    mu2_609856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 39), 'mu2')
    # Getting the type of 'None' (line 392)
    None_609857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 46), 'None')
    # Applying the binary operator 'is' (line 392)
    result_is__609858 = python_operator(stypy.reporting.localization.Localization(__file__, 392, 39), 'is', mu2_609856, None_609857)
    
    # Applying the binary operator 'or' (line 392)
    result_or_keyword_609859 = python_operator(stypy.reporting.localization.Localization(__file__, 392, 11), 'or', result_or_keyword_609855, result_is__609858)
    
    # Getting the type of 'mu' (line 392)
    mu_609860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 54), 'mu')
    # Getting the type of 'None' (line 392)
    None_609861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 60), 'None')
    # Applying the binary operator 'is' (line 392)
    result_is__609862 = python_operator(stypy.reporting.localization.Localization(__file__, 392, 54), 'is', mu_609860, None_609861)
    
    # Applying the binary operator 'or' (line 392)
    result_or_keyword_609863 = python_operator(stypy.reporting.localization.Localization(__file__, 392, 11), 'or', result_or_keyword_609859, result_is__609862)
    
    # Testing the type of an if condition (line 392)
    if_condition_609864 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 392, 8), result_or_keyword_609863)
    # Assigning a type to the variable 'if_condition_609864' (line 392)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), 'if_condition_609864', if_condition_609864)
    # SSA begins for if statement (line 392)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 393):
    
    # Assigning a Call to a Name (line 393):
    
    # Call to moment_func(...): (line 393)
    # Processing the call arguments (line 393)
    int_609866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 30), 'int')
    # Getting the type of 'args' (line 393)
    args_609867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 34), 'args', False)
    # Processing the call keyword arguments (line 393)
    kwargs_609868 = {}
    # Getting the type of 'moment_func' (line 393)
    moment_func_609865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 18), 'moment_func', False)
    # Calling moment_func(args, kwargs) (line 393)
    moment_func_call_result_609869 = invoke(stypy.reporting.localization.Localization(__file__, 393, 18), moment_func_609865, *[int_609866, args_609867], **kwargs_609868)
    
    # Assigning a type to the variable 'val' (line 393)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 12), 'val', moment_func_call_result_609869)
    # SSA branch for the else part of an if statement (line 392)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a BinOp to a Name (line 395):
    
    # Assigning a BinOp to a Name (line 395):
    # Getting the type of 'g2' (line 395)
    g2_609870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 19), 'g2')
    float_609871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 22), 'float')
    # Applying the binary operator '+' (line 395)
    result_add_609872 = python_operator(stypy.reporting.localization.Localization(__file__, 395, 19), '+', g2_609870, float_609871)
    
    # Getting the type of 'mu2' (line 395)
    mu2_609873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 28), 'mu2')
    float_609874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 33), 'float')
    # Applying the binary operator '**' (line 395)
    result_pow_609875 = python_operator(stypy.reporting.localization.Localization(__file__, 395, 28), '**', mu2_609873, float_609874)
    
    # Applying the binary operator '*' (line 395)
    result_mul_609876 = python_operator(stypy.reporting.localization.Localization(__file__, 395, 18), '*', result_add_609872, result_pow_609875)
    
    # Assigning a type to the variable 'mu4' (line 395)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 12), 'mu4', result_mul_609876)
    
    # Assigning a BinOp to a Name (line 396):
    
    # Assigning a BinOp to a Name (line 396):
    # Getting the type of 'g1' (line 396)
    g1_609877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 18), 'g1')
    
    # Call to power(...): (line 396)
    # Processing the call arguments (line 396)
    # Getting the type of 'mu2' (line 396)
    mu2_609880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 30), 'mu2', False)
    float_609881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 396, 35), 'float')
    # Processing the call keyword arguments (line 396)
    kwargs_609882 = {}
    # Getting the type of 'np' (line 396)
    np_609878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 21), 'np', False)
    # Obtaining the member 'power' of a type (line 396)
    power_609879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 396, 21), np_609878, 'power')
    # Calling power(args, kwargs) (line 396)
    power_call_result_609883 = invoke(stypy.reporting.localization.Localization(__file__, 396, 21), power_609879, *[mu2_609880, float_609881], **kwargs_609882)
    
    # Applying the binary operator '*' (line 396)
    result_mul_609884 = python_operator(stypy.reporting.localization.Localization(__file__, 396, 18), '*', g1_609877, power_call_result_609883)
    
    # Assigning a type to the variable 'mu3' (line 396)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 396, 12), 'mu3', result_mul_609884)
    
    # Assigning a BinOp to a Name (line 397):
    
    # Assigning a BinOp to a Name (line 397):
    # Getting the type of 'mu4' (line 397)
    mu4_609885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 18), 'mu4')
    int_609886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, 22), 'int')
    # Getting the type of 'mu' (line 397)
    mu_609887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 24), 'mu')
    # Applying the binary operator '*' (line 397)
    result_mul_609888 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 22), '*', int_609886, mu_609887)
    
    # Getting the type of 'mu3' (line 397)
    mu3_609889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 27), 'mu3')
    # Applying the binary operator '*' (line 397)
    result_mul_609890 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 26), '*', result_mul_609888, mu3_609889)
    
    # Applying the binary operator '+' (line 397)
    result_add_609891 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 18), '+', mu4_609885, result_mul_609890)
    
    int_609892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, 31), 'int')
    # Getting the type of 'mu' (line 397)
    mu_609893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 33), 'mu')
    # Applying the binary operator '*' (line 397)
    result_mul_609894 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 31), '*', int_609892, mu_609893)
    
    # Getting the type of 'mu' (line 397)
    mu_609895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 36), 'mu')
    # Applying the binary operator '*' (line 397)
    result_mul_609896 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 35), '*', result_mul_609894, mu_609895)
    
    # Getting the type of 'mu2' (line 397)
    mu2_609897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 39), 'mu2')
    # Applying the binary operator '*' (line 397)
    result_mul_609898 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 38), '*', result_mul_609896, mu2_609897)
    
    # Applying the binary operator '+' (line 397)
    result_add_609899 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 30), '+', result_add_609891, result_mul_609898)
    
    # Getting the type of 'mu' (line 397)
    mu_609900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 43), 'mu')
    # Getting the type of 'mu' (line 397)
    mu_609901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 46), 'mu')
    # Applying the binary operator '*' (line 397)
    result_mul_609902 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 43), '*', mu_609900, mu_609901)
    
    # Getting the type of 'mu' (line 397)
    mu_609903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 49), 'mu')
    # Applying the binary operator '*' (line 397)
    result_mul_609904 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 48), '*', result_mul_609902, mu_609903)
    
    # Getting the type of 'mu' (line 397)
    mu_609905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 52), 'mu')
    # Applying the binary operator '*' (line 397)
    result_mul_609906 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 51), '*', result_mul_609904, mu_609905)
    
    # Applying the binary operator '+' (line 397)
    result_add_609907 = python_operator(stypy.reporting.localization.Localization(__file__, 397, 42), '+', result_add_609899, result_mul_609906)
    
    # Assigning a type to the variable 'val' (line 397)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 397, 12), 'val', result_add_609907)
    # SSA join for if statement (line 392)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 391)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 399):
    
    # Assigning a Call to a Name (line 399):
    
    # Call to moment_func(...): (line 399)
    # Processing the call arguments (line 399)
    # Getting the type of 'n' (line 399)
    n_609909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 26), 'n', False)
    # Getting the type of 'args' (line 399)
    args_609910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 30), 'args', False)
    # Processing the call keyword arguments (line 399)
    kwargs_609911 = {}
    # Getting the type of 'moment_func' (line 399)
    moment_func_609908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 14), 'moment_func', False)
    # Calling moment_func(args, kwargs) (line 399)
    moment_func_call_result_609912 = invoke(stypy.reporting.localization.Localization(__file__, 399, 14), moment_func_609908, *[n_609909, args_609910], **kwargs_609911)
    
    # Assigning a type to the variable 'val' (line 399)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 8), 'val', moment_func_call_result_609912)
    # SSA join for if statement (line 391)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 385)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 380)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 375)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 373)
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'val' (line 401)
    val_609913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 11), 'val')
    # Assigning a type to the variable 'stypy_return_type' (line 401)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 4), 'stypy_return_type', val_609913)
    
    # ################# End of '_moment_from_stats(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_moment_from_stats' in the type store
    # Getting the type of 'stypy_return_type' (line 372)
    stypy_return_type_609914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_609914)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_moment_from_stats'
    return stypy_return_type_609914

# Assigning a type to the variable '_moment_from_stats' (line 372)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 0), '_moment_from_stats', _moment_from_stats)

@norecursion
def _skew(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_skew'
    module_type_store = module_type_store.open_function_context('_skew', 404, 0, False)
    
    # Passed parameters checking function
    _skew.stypy_localization = localization
    _skew.stypy_type_of_self = None
    _skew.stypy_type_store = module_type_store
    _skew.stypy_function_name = '_skew'
    _skew.stypy_param_names_list = ['data']
    _skew.stypy_varargs_param_name = None
    _skew.stypy_kwargs_param_name = None
    _skew.stypy_call_defaults = defaults
    _skew.stypy_call_varargs = varargs
    _skew.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_skew', ['data'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_skew', localization, ['data'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_skew(...)' code ##################

    str_609915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, (-1)), 'str', '\n    skew is third central moment / variance**(1.5)\n    ')
    
    # Assigning a Call to a Name (line 408):
    
    # Assigning a Call to a Name (line 408):
    
    # Call to ravel(...): (line 408)
    # Processing the call arguments (line 408)
    # Getting the type of 'data' (line 408)
    data_609918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 20), 'data', False)
    # Processing the call keyword arguments (line 408)
    kwargs_609919 = {}
    # Getting the type of 'np' (line 408)
    np_609916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 11), 'np', False)
    # Obtaining the member 'ravel' of a type (line 408)
    ravel_609917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 11), np_609916, 'ravel')
    # Calling ravel(args, kwargs) (line 408)
    ravel_call_result_609920 = invoke(stypy.reporting.localization.Localization(__file__, 408, 11), ravel_609917, *[data_609918], **kwargs_609919)
    
    # Assigning a type to the variable 'data' (line 408)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 408, 4), 'data', ravel_call_result_609920)
    
    # Assigning a Call to a Name (line 409):
    
    # Assigning a Call to a Name (line 409):
    
    # Call to mean(...): (line 409)
    # Processing the call keyword arguments (line 409)
    kwargs_609923 = {}
    # Getting the type of 'data' (line 409)
    data_609921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 9), 'data', False)
    # Obtaining the member 'mean' of a type (line 409)
    mean_609922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 409, 9), data_609921, 'mean')
    # Calling mean(args, kwargs) (line 409)
    mean_call_result_609924 = invoke(stypy.reporting.localization.Localization(__file__, 409, 9), mean_609922, *[], **kwargs_609923)
    
    # Assigning a type to the variable 'mu' (line 409)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 4), 'mu', mean_call_result_609924)
    
    # Assigning a Call to a Name (line 410):
    
    # Assigning a Call to a Name (line 410):
    
    # Call to mean(...): (line 410)
    # Processing the call keyword arguments (line 410)
    kwargs_609931 = {}
    # Getting the type of 'data' (line 410)
    data_609925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 11), 'data', False)
    # Getting the type of 'mu' (line 410)
    mu_609926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 18), 'mu', False)
    # Applying the binary operator '-' (line 410)
    result_sub_609927 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 11), '-', data_609925, mu_609926)
    
    int_609928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 23), 'int')
    # Applying the binary operator '**' (line 410)
    result_pow_609929 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 10), '**', result_sub_609927, int_609928)
    
    # Obtaining the member 'mean' of a type (line 410)
    mean_609930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 10), result_pow_609929, 'mean')
    # Calling mean(args, kwargs) (line 410)
    mean_call_result_609932 = invoke(stypy.reporting.localization.Localization(__file__, 410, 10), mean_609930, *[], **kwargs_609931)
    
    # Assigning a type to the variable 'm2' (line 410)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 4), 'm2', mean_call_result_609932)
    
    # Assigning a Call to a Name (line 411):
    
    # Assigning a Call to a Name (line 411):
    
    # Call to mean(...): (line 411)
    # Processing the call keyword arguments (line 411)
    kwargs_609939 = {}
    # Getting the type of 'data' (line 411)
    data_609933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 11), 'data', False)
    # Getting the type of 'mu' (line 411)
    mu_609934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 18), 'mu', False)
    # Applying the binary operator '-' (line 411)
    result_sub_609935 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 11), '-', data_609933, mu_609934)
    
    int_609936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 23), 'int')
    # Applying the binary operator '**' (line 411)
    result_pow_609937 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 10), '**', result_sub_609935, int_609936)
    
    # Obtaining the member 'mean' of a type (line 411)
    mean_609938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 10), result_pow_609937, 'mean')
    # Calling mean(args, kwargs) (line 411)
    mean_call_result_609940 = invoke(stypy.reporting.localization.Localization(__file__, 411, 10), mean_609938, *[], **kwargs_609939)
    
    # Assigning a type to the variable 'm3' (line 411)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 4), 'm3', mean_call_result_609940)
    # Getting the type of 'm3' (line 412)
    m3_609941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 11), 'm3')
    
    # Call to power(...): (line 412)
    # Processing the call arguments (line 412)
    # Getting the type of 'm2' (line 412)
    m2_609944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 25), 'm2', False)
    float_609945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 29), 'float')
    # Processing the call keyword arguments (line 412)
    kwargs_609946 = {}
    # Getting the type of 'np' (line 412)
    np_609942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 16), 'np', False)
    # Obtaining the member 'power' of a type (line 412)
    power_609943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 16), np_609942, 'power')
    # Calling power(args, kwargs) (line 412)
    power_call_result_609947 = invoke(stypy.reporting.localization.Localization(__file__, 412, 16), power_609943, *[m2_609944, float_609945], **kwargs_609946)
    
    # Applying the binary operator 'div' (line 412)
    result_div_609948 = python_operator(stypy.reporting.localization.Localization(__file__, 412, 11), 'div', m3_609941, power_call_result_609947)
    
    # Assigning a type to the variable 'stypy_return_type' (line 412)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 4), 'stypy_return_type', result_div_609948)
    
    # ################# End of '_skew(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_skew' in the type store
    # Getting the type of 'stypy_return_type' (line 404)
    stypy_return_type_609949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_609949)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_skew'
    return stypy_return_type_609949

# Assigning a type to the variable '_skew' (line 404)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 0), '_skew', _skew)

@norecursion
def _kurtosis(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_kurtosis'
    module_type_store = module_type_store.open_function_context('_kurtosis', 415, 0, False)
    
    # Passed parameters checking function
    _kurtosis.stypy_localization = localization
    _kurtosis.stypy_type_of_self = None
    _kurtosis.stypy_type_store = module_type_store
    _kurtosis.stypy_function_name = '_kurtosis'
    _kurtosis.stypy_param_names_list = ['data']
    _kurtosis.stypy_varargs_param_name = None
    _kurtosis.stypy_kwargs_param_name = None
    _kurtosis.stypy_call_defaults = defaults
    _kurtosis.stypy_call_varargs = varargs
    _kurtosis.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_kurtosis', ['data'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_kurtosis', localization, ['data'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_kurtosis(...)' code ##################

    str_609950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, (-1)), 'str', '\n    kurtosis is fourth central moment / variance**2 - 3\n    ')
    
    # Assigning a Call to a Name (line 419):
    
    # Assigning a Call to a Name (line 419):
    
    # Call to ravel(...): (line 419)
    # Processing the call arguments (line 419)
    # Getting the type of 'data' (line 419)
    data_609953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 20), 'data', False)
    # Processing the call keyword arguments (line 419)
    kwargs_609954 = {}
    # Getting the type of 'np' (line 419)
    np_609951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 11), 'np', False)
    # Obtaining the member 'ravel' of a type (line 419)
    ravel_609952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 11), np_609951, 'ravel')
    # Calling ravel(args, kwargs) (line 419)
    ravel_call_result_609955 = invoke(stypy.reporting.localization.Localization(__file__, 419, 11), ravel_609952, *[data_609953], **kwargs_609954)
    
    # Assigning a type to the variable 'data' (line 419)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 4), 'data', ravel_call_result_609955)
    
    # Assigning a Call to a Name (line 420):
    
    # Assigning a Call to a Name (line 420):
    
    # Call to mean(...): (line 420)
    # Processing the call keyword arguments (line 420)
    kwargs_609958 = {}
    # Getting the type of 'data' (line 420)
    data_609956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 9), 'data', False)
    # Obtaining the member 'mean' of a type (line 420)
    mean_609957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 9), data_609956, 'mean')
    # Calling mean(args, kwargs) (line 420)
    mean_call_result_609959 = invoke(stypy.reporting.localization.Localization(__file__, 420, 9), mean_609957, *[], **kwargs_609958)
    
    # Assigning a type to the variable 'mu' (line 420)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 4), 'mu', mean_call_result_609959)
    
    # Assigning a Call to a Name (line 421):
    
    # Assigning a Call to a Name (line 421):
    
    # Call to mean(...): (line 421)
    # Processing the call keyword arguments (line 421)
    kwargs_609966 = {}
    # Getting the type of 'data' (line 421)
    data_609960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 11), 'data', False)
    # Getting the type of 'mu' (line 421)
    mu_609961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 18), 'mu', False)
    # Applying the binary operator '-' (line 421)
    result_sub_609962 = python_operator(stypy.reporting.localization.Localization(__file__, 421, 11), '-', data_609960, mu_609961)
    
    int_609963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 23), 'int')
    # Applying the binary operator '**' (line 421)
    result_pow_609964 = python_operator(stypy.reporting.localization.Localization(__file__, 421, 10), '**', result_sub_609962, int_609963)
    
    # Obtaining the member 'mean' of a type (line 421)
    mean_609965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 10), result_pow_609964, 'mean')
    # Calling mean(args, kwargs) (line 421)
    mean_call_result_609967 = invoke(stypy.reporting.localization.Localization(__file__, 421, 10), mean_609965, *[], **kwargs_609966)
    
    # Assigning a type to the variable 'm2' (line 421)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 421, 4), 'm2', mean_call_result_609967)
    
    # Assigning a Call to a Name (line 422):
    
    # Assigning a Call to a Name (line 422):
    
    # Call to mean(...): (line 422)
    # Processing the call keyword arguments (line 422)
    kwargs_609974 = {}
    # Getting the type of 'data' (line 422)
    data_609968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 11), 'data', False)
    # Getting the type of 'mu' (line 422)
    mu_609969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 18), 'mu', False)
    # Applying the binary operator '-' (line 422)
    result_sub_609970 = python_operator(stypy.reporting.localization.Localization(__file__, 422, 11), '-', data_609968, mu_609969)
    
    int_609971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 23), 'int')
    # Applying the binary operator '**' (line 422)
    result_pow_609972 = python_operator(stypy.reporting.localization.Localization(__file__, 422, 10), '**', result_sub_609970, int_609971)
    
    # Obtaining the member 'mean' of a type (line 422)
    mean_609973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 10), result_pow_609972, 'mean')
    # Calling mean(args, kwargs) (line 422)
    mean_call_result_609975 = invoke(stypy.reporting.localization.Localization(__file__, 422, 10), mean_609973, *[], **kwargs_609974)
    
    # Assigning a type to the variable 'm4' (line 422)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 422, 4), 'm4', mean_call_result_609975)
    # Getting the type of 'm4' (line 423)
    m4_609976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 11), 'm4')
    # Getting the type of 'm2' (line 423)
    m2_609977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 16), 'm2')
    int_609978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 20), 'int')
    # Applying the binary operator '**' (line 423)
    result_pow_609979 = python_operator(stypy.reporting.localization.Localization(__file__, 423, 16), '**', m2_609977, int_609978)
    
    # Applying the binary operator 'div' (line 423)
    result_div_609980 = python_operator(stypy.reporting.localization.Localization(__file__, 423, 11), 'div', m4_609976, result_pow_609979)
    
    int_609981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 24), 'int')
    # Applying the binary operator '-' (line 423)
    result_sub_609982 = python_operator(stypy.reporting.localization.Localization(__file__, 423, 11), '-', result_div_609980, int_609981)
    
    # Assigning a type to the variable 'stypy_return_type' (line 423)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 423, 4), 'stypy_return_type', result_sub_609982)
    
    # ################# End of '_kurtosis(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_kurtosis' in the type store
    # Getting the type of 'stypy_return_type' (line 415)
    stypy_return_type_609983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_609983)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_kurtosis'
    return stypy_return_type_609983

# Assigning a type to the variable '_kurtosis' (line 415)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 415, 0), '_kurtosis', _kurtosis)
# Declaration of the 'rv_frozen' class

class rv_frozen(object, ):

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 429, 4, False)
        # Assigning a type to the variable 'self' (line 430)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.__init__', ['dist'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['dist'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 430):
        
        # Assigning a Name to a Attribute (line 430):
        # Getting the type of 'args' (line 430)
        args_609984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 20), 'args')
        # Getting the type of 'self' (line 430)
        self_609985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 8), 'self')
        # Setting the type of the member 'args' of a type (line 430)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 8), self_609985, 'args', args_609984)
        
        # Assigning a Name to a Attribute (line 431):
        
        # Assigning a Name to a Attribute (line 431):
        # Getting the type of 'kwds' (line 431)
        kwds_609986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 20), 'kwds')
        # Getting the type of 'self' (line 431)
        self_609987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 8), 'self')
        # Setting the type of the member 'kwds' of a type (line 431)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 8), self_609987, 'kwds', kwds_609986)
        
        # Assigning a Call to a Attribute (line 434):
        
        # Assigning a Call to a Attribute (line 434):
        
        # Call to __class__(...): (line 434)
        # Processing the call keyword arguments (line 434)
        
        # Call to _updated_ctor_param(...): (line 434)
        # Processing the call keyword arguments (line 434)
        kwargs_609992 = {}
        # Getting the type of 'dist' (line 434)
        dist_609990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 37), 'dist', False)
        # Obtaining the member '_updated_ctor_param' of a type (line 434)
        _updated_ctor_param_609991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 37), dist_609990, '_updated_ctor_param')
        # Calling _updated_ctor_param(args, kwargs) (line 434)
        _updated_ctor_param_call_result_609993 = invoke(stypy.reporting.localization.Localization(__file__, 434, 37), _updated_ctor_param_609991, *[], **kwargs_609992)
        
        kwargs_609994 = {'_updated_ctor_param_call_result_609993': _updated_ctor_param_call_result_609993}
        # Getting the type of 'dist' (line 434)
        dist_609988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 20), 'dist', False)
        # Obtaining the member '__class__' of a type (line 434)
        class___609989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 20), dist_609988, '__class__')
        # Calling __class__(args, kwargs) (line 434)
        class___call_result_609995 = invoke(stypy.reporting.localization.Localization(__file__, 434, 20), class___609989, *[], **kwargs_609994)
        
        # Getting the type of 'self' (line 434)
        self_609996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 8), 'self')
        # Setting the type of the member 'dist' of a type (line 434)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 8), self_609996, 'dist', class___call_result_609995)
        
        # Assigning a Call to a Tuple (line 437):
        
        # Assigning a Subscript to a Name (line 437):
        
        # Obtaining the type of the subscript
        int_609997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 8), 'int')
        
        # Call to _parse_args(...): (line 437)
        # Getting the type of 'args' (line 437)
        args_610001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 46), 'args', False)
        # Processing the call keyword arguments (line 437)
        # Getting the type of 'kwds' (line 437)
        kwds_610002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 54), 'kwds', False)
        kwargs_610003 = {'kwds_610002': kwds_610002}
        # Getting the type of 'self' (line 437)
        self_609998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 23), 'self', False)
        # Obtaining the member 'dist' of a type (line 437)
        dist_609999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 23), self_609998, 'dist')
        # Obtaining the member '_parse_args' of a type (line 437)
        _parse_args_610000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 23), dist_609999, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 437)
        _parse_args_call_result_610004 = invoke(stypy.reporting.localization.Localization(__file__, 437, 23), _parse_args_610000, *[args_610001], **kwargs_610003)
        
        # Obtaining the member '__getitem__' of a type (line 437)
        getitem___610005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 8), _parse_args_call_result_610004, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 437)
        subscript_call_result_610006 = invoke(stypy.reporting.localization.Localization(__file__, 437, 8), getitem___610005, int_609997)
        
        # Assigning a type to the variable 'tuple_var_assignment_609232' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'tuple_var_assignment_609232', subscript_call_result_610006)
        
        # Assigning a Subscript to a Name (line 437):
        
        # Obtaining the type of the subscript
        int_610007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 8), 'int')
        
        # Call to _parse_args(...): (line 437)
        # Getting the type of 'args' (line 437)
        args_610011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 46), 'args', False)
        # Processing the call keyword arguments (line 437)
        # Getting the type of 'kwds' (line 437)
        kwds_610012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 54), 'kwds', False)
        kwargs_610013 = {'kwds_610012': kwds_610012}
        # Getting the type of 'self' (line 437)
        self_610008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 23), 'self', False)
        # Obtaining the member 'dist' of a type (line 437)
        dist_610009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 23), self_610008, 'dist')
        # Obtaining the member '_parse_args' of a type (line 437)
        _parse_args_610010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 23), dist_610009, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 437)
        _parse_args_call_result_610014 = invoke(stypy.reporting.localization.Localization(__file__, 437, 23), _parse_args_610010, *[args_610011], **kwargs_610013)
        
        # Obtaining the member '__getitem__' of a type (line 437)
        getitem___610015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 8), _parse_args_call_result_610014, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 437)
        subscript_call_result_610016 = invoke(stypy.reporting.localization.Localization(__file__, 437, 8), getitem___610015, int_610007)
        
        # Assigning a type to the variable 'tuple_var_assignment_609233' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'tuple_var_assignment_609233', subscript_call_result_610016)
        
        # Assigning a Subscript to a Name (line 437):
        
        # Obtaining the type of the subscript
        int_610017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 8), 'int')
        
        # Call to _parse_args(...): (line 437)
        # Getting the type of 'args' (line 437)
        args_610021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 46), 'args', False)
        # Processing the call keyword arguments (line 437)
        # Getting the type of 'kwds' (line 437)
        kwds_610022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 54), 'kwds', False)
        kwargs_610023 = {'kwds_610022': kwds_610022}
        # Getting the type of 'self' (line 437)
        self_610018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 23), 'self', False)
        # Obtaining the member 'dist' of a type (line 437)
        dist_610019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 23), self_610018, 'dist')
        # Obtaining the member '_parse_args' of a type (line 437)
        _parse_args_610020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 23), dist_610019, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 437)
        _parse_args_call_result_610024 = invoke(stypy.reporting.localization.Localization(__file__, 437, 23), _parse_args_610020, *[args_610021], **kwargs_610023)
        
        # Obtaining the member '__getitem__' of a type (line 437)
        getitem___610025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 8), _parse_args_call_result_610024, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 437)
        subscript_call_result_610026 = invoke(stypy.reporting.localization.Localization(__file__, 437, 8), getitem___610025, int_610017)
        
        # Assigning a type to the variable 'tuple_var_assignment_609234' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'tuple_var_assignment_609234', subscript_call_result_610026)
        
        # Assigning a Name to a Name (line 437):
        # Getting the type of 'tuple_var_assignment_609232' (line 437)
        tuple_var_assignment_609232_610027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'tuple_var_assignment_609232')
        # Assigning a type to the variable 'shapes' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'shapes', tuple_var_assignment_609232_610027)
        
        # Assigning a Name to a Name (line 437):
        # Getting the type of 'tuple_var_assignment_609233' (line 437)
        tuple_var_assignment_609233_610028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'tuple_var_assignment_609233')
        # Assigning a type to the variable '_' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 16), '_', tuple_var_assignment_609233_610028)
        
        # Assigning a Name to a Name (line 437):
        # Getting the type of 'tuple_var_assignment_609234' (line 437)
        tuple_var_assignment_609234_610029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'tuple_var_assignment_609234')
        # Assigning a type to the variable '_' (line 437)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 437, 19), '_', tuple_var_assignment_609234_610029)
        
        # Call to _argcheck(...): (line 438)
        # Getting the type of 'shapes' (line 438)
        shapes_610033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 29), 'shapes', False)
        # Processing the call keyword arguments (line 438)
        kwargs_610034 = {}
        # Getting the type of 'self' (line 438)
        self_610030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 8), 'self', False)
        # Obtaining the member 'dist' of a type (line 438)
        dist_610031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 8), self_610030, 'dist')
        # Obtaining the member '_argcheck' of a type (line 438)
        _argcheck_610032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 8), dist_610031, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 438)
        _argcheck_call_result_610035 = invoke(stypy.reporting.localization.Localization(__file__, 438, 8), _argcheck_610032, *[shapes_610033], **kwargs_610034)
        
        
        # Assigning a Tuple to a Tuple (line 439):
        
        # Assigning a Attribute to a Name (line 439):
        # Getting the type of 'self' (line 439)
        self_610036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 25), 'self')
        # Obtaining the member 'dist' of a type (line 439)
        dist_610037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 25), self_610036, 'dist')
        # Obtaining the member 'a' of a type (line 439)
        a_610038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 25), dist_610037, 'a')
        # Assigning a type to the variable 'tuple_assignment_609235' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'tuple_assignment_609235', a_610038)
        
        # Assigning a Attribute to a Name (line 439):
        # Getting the type of 'self' (line 439)
        self_610039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 38), 'self')
        # Obtaining the member 'dist' of a type (line 439)
        dist_610040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 38), self_610039, 'dist')
        # Obtaining the member 'b' of a type (line 439)
        b_610041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 38), dist_610040, 'b')
        # Assigning a type to the variable 'tuple_assignment_609236' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'tuple_assignment_609236', b_610041)
        
        # Assigning a Name to a Attribute (line 439):
        # Getting the type of 'tuple_assignment_609235' (line 439)
        tuple_assignment_609235_610042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'tuple_assignment_609235')
        # Getting the type of 'self' (line 439)
        self_610043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'self')
        # Setting the type of the member 'a' of a type (line 439)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 8), self_610043, 'a', tuple_assignment_609235_610042)
        
        # Assigning a Name to a Attribute (line 439):
        # Getting the type of 'tuple_assignment_609236' (line 439)
        tuple_assignment_609236_610044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'tuple_assignment_609236')
        # Getting the type of 'self' (line 439)
        self_610045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'self')
        # Setting the type of the member 'b' of a type (line 439)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 16), self_610045, 'b', tuple_assignment_609236_610044)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def random_state(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'random_state'
        module_type_store = module_type_store.open_function_context('random_state', 441, 4, False)
        # Assigning a type to the variable 'self' (line 442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.random_state.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.random_state.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.random_state.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.random_state.__dict__.__setitem__('stypy_function_name', 'rv_frozen.random_state')
        rv_frozen.random_state.__dict__.__setitem__('stypy_param_names_list', [])
        rv_frozen.random_state.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.random_state.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.random_state.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.random_state.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.random_state.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.random_state.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.random_state', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'random_state', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'random_state(...)' code ##################

        # Getting the type of 'self' (line 443)
        self_610046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 15), 'self')
        # Obtaining the member 'dist' of a type (line 443)
        dist_610047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 15), self_610046, 'dist')
        # Obtaining the member '_random_state' of a type (line 443)
        _random_state_610048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 15), dist_610047, '_random_state')
        # Assigning a type to the variable 'stypy_return_type' (line 443)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 8), 'stypy_return_type', _random_state_610048)
        
        # ################# End of 'random_state(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'random_state' in the type store
        # Getting the type of 'stypy_return_type' (line 441)
        stypy_return_type_610049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610049)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'random_state'
        return stypy_return_type_610049


    @norecursion
    def random_state(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'random_state'
        module_type_store = module_type_store.open_function_context('random_state', 445, 4, False)
        # Assigning a type to the variable 'self' (line 446)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 446, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.random_state.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.random_state.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.random_state.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.random_state.__dict__.__setitem__('stypy_function_name', 'rv_frozen.random_state')
        rv_frozen.random_state.__dict__.__setitem__('stypy_param_names_list', ['seed'])
        rv_frozen.random_state.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.random_state.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.random_state.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.random_state.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.random_state.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.random_state.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.random_state', ['seed'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'random_state', localization, ['seed'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'random_state(...)' code ##################

        
        # Assigning a Call to a Attribute (line 447):
        
        # Assigning a Call to a Attribute (line 447):
        
        # Call to check_random_state(...): (line 447)
        # Processing the call arguments (line 447)
        # Getting the type of 'seed' (line 447)
        seed_610051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 53), 'seed', False)
        # Processing the call keyword arguments (line 447)
        kwargs_610052 = {}
        # Getting the type of 'check_random_state' (line 447)
        check_random_state_610050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 34), 'check_random_state', False)
        # Calling check_random_state(args, kwargs) (line 447)
        check_random_state_call_result_610053 = invoke(stypy.reporting.localization.Localization(__file__, 447, 34), check_random_state_610050, *[seed_610051], **kwargs_610052)
        
        # Getting the type of 'self' (line 447)
        self_610054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 8), 'self')
        # Obtaining the member 'dist' of a type (line 447)
        dist_610055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 8), self_610054, 'dist')
        # Setting the type of the member '_random_state' of a type (line 447)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 8), dist_610055, '_random_state', check_random_state_call_result_610053)
        
        # ################# End of 'random_state(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'random_state' in the type store
        # Getting the type of 'stypy_return_type' (line 445)
        stypy_return_type_610056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610056)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'random_state'
        return stypy_return_type_610056


    @norecursion
    def pdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pdf'
        module_type_store = module_type_store.open_function_context('pdf', 449, 4, False)
        # Assigning a type to the variable 'self' (line 450)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.pdf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.pdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.pdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.pdf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.pdf')
        rv_frozen.pdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_frozen.pdf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.pdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.pdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.pdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.pdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.pdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.pdf', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pdf(...)' code ##################

        
        # Call to pdf(...): (line 450)
        # Processing the call arguments (line 450)
        # Getting the type of 'x' (line 450)
        x_610060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 29), 'x', False)
        # Getting the type of 'self' (line 450)
        self_610061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 33), 'self', False)
        # Obtaining the member 'args' of a type (line 450)
        args_610062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 33), self_610061, 'args')
        # Processing the call keyword arguments (line 450)
        # Getting the type of 'self' (line 450)
        self_610063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 46), 'self', False)
        # Obtaining the member 'kwds' of a type (line 450)
        kwds_610064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 46), self_610063, 'kwds')
        kwargs_610065 = {'kwds_610064': kwds_610064}
        # Getting the type of 'self' (line 450)
        self_610057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 450)
        dist_610058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 15), self_610057, 'dist')
        # Obtaining the member 'pdf' of a type (line 450)
        pdf_610059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 15), dist_610058, 'pdf')
        # Calling pdf(args, kwargs) (line 450)
        pdf_call_result_610066 = invoke(stypy.reporting.localization.Localization(__file__, 450, 15), pdf_610059, *[x_610060, args_610062], **kwargs_610065)
        
        # Assigning a type to the variable 'stypy_return_type' (line 450)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 8), 'stypy_return_type', pdf_call_result_610066)
        
        # ################# End of 'pdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pdf' in the type store
        # Getting the type of 'stypy_return_type' (line 449)
        stypy_return_type_610067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610067)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pdf'
        return stypy_return_type_610067


    @norecursion
    def logpdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logpdf'
        module_type_store = module_type_store.open_function_context('logpdf', 452, 4, False)
        # Assigning a type to the variable 'self' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.logpdf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.logpdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.logpdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.logpdf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.logpdf')
        rv_frozen.logpdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_frozen.logpdf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.logpdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.logpdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.logpdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.logpdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.logpdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.logpdf', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logpdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logpdf(...)' code ##################

        
        # Call to logpdf(...): (line 453)
        # Processing the call arguments (line 453)
        # Getting the type of 'x' (line 453)
        x_610071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 32), 'x', False)
        # Getting the type of 'self' (line 453)
        self_610072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 36), 'self', False)
        # Obtaining the member 'args' of a type (line 453)
        args_610073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 36), self_610072, 'args')
        # Processing the call keyword arguments (line 453)
        # Getting the type of 'self' (line 453)
        self_610074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 49), 'self', False)
        # Obtaining the member 'kwds' of a type (line 453)
        kwds_610075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 49), self_610074, 'kwds')
        kwargs_610076 = {'kwds_610075': kwds_610075}
        # Getting the type of 'self' (line 453)
        self_610068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 453)
        dist_610069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 15), self_610068, 'dist')
        # Obtaining the member 'logpdf' of a type (line 453)
        logpdf_610070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 15), dist_610069, 'logpdf')
        # Calling logpdf(args, kwargs) (line 453)
        logpdf_call_result_610077 = invoke(stypy.reporting.localization.Localization(__file__, 453, 15), logpdf_610070, *[x_610071, args_610073], **kwargs_610076)
        
        # Assigning a type to the variable 'stypy_return_type' (line 453)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'stypy_return_type', logpdf_call_result_610077)
        
        # ################# End of 'logpdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logpdf' in the type store
        # Getting the type of 'stypy_return_type' (line 452)
        stypy_return_type_610078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610078)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logpdf'
        return stypy_return_type_610078


    @norecursion
    def cdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'cdf'
        module_type_store = module_type_store.open_function_context('cdf', 455, 4, False)
        # Assigning a type to the variable 'self' (line 456)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.cdf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.cdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.cdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.cdf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.cdf')
        rv_frozen.cdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_frozen.cdf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.cdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.cdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.cdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.cdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.cdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.cdf', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'cdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'cdf(...)' code ##################

        
        # Call to cdf(...): (line 456)
        # Processing the call arguments (line 456)
        # Getting the type of 'x' (line 456)
        x_610082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 29), 'x', False)
        # Getting the type of 'self' (line 456)
        self_610083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 33), 'self', False)
        # Obtaining the member 'args' of a type (line 456)
        args_610084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 33), self_610083, 'args')
        # Processing the call keyword arguments (line 456)
        # Getting the type of 'self' (line 456)
        self_610085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 46), 'self', False)
        # Obtaining the member 'kwds' of a type (line 456)
        kwds_610086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 46), self_610085, 'kwds')
        kwargs_610087 = {'kwds_610086': kwds_610086}
        # Getting the type of 'self' (line 456)
        self_610079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 456)
        dist_610080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 15), self_610079, 'dist')
        # Obtaining the member 'cdf' of a type (line 456)
        cdf_610081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 15), dist_610080, 'cdf')
        # Calling cdf(args, kwargs) (line 456)
        cdf_call_result_610088 = invoke(stypy.reporting.localization.Localization(__file__, 456, 15), cdf_610081, *[x_610082, args_610084], **kwargs_610087)
        
        # Assigning a type to the variable 'stypy_return_type' (line 456)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 8), 'stypy_return_type', cdf_call_result_610088)
        
        # ################# End of 'cdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'cdf' in the type store
        # Getting the type of 'stypy_return_type' (line 455)
        stypy_return_type_610089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610089)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'cdf'
        return stypy_return_type_610089


    @norecursion
    def logcdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logcdf'
        module_type_store = module_type_store.open_function_context('logcdf', 458, 4, False)
        # Assigning a type to the variable 'self' (line 459)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.logcdf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.logcdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.logcdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.logcdf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.logcdf')
        rv_frozen.logcdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_frozen.logcdf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.logcdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.logcdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.logcdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.logcdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.logcdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.logcdf', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logcdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logcdf(...)' code ##################

        
        # Call to logcdf(...): (line 459)
        # Processing the call arguments (line 459)
        # Getting the type of 'x' (line 459)
        x_610093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 32), 'x', False)
        # Getting the type of 'self' (line 459)
        self_610094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 36), 'self', False)
        # Obtaining the member 'args' of a type (line 459)
        args_610095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 36), self_610094, 'args')
        # Processing the call keyword arguments (line 459)
        # Getting the type of 'self' (line 459)
        self_610096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 49), 'self', False)
        # Obtaining the member 'kwds' of a type (line 459)
        kwds_610097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 49), self_610096, 'kwds')
        kwargs_610098 = {'kwds_610097': kwds_610097}
        # Getting the type of 'self' (line 459)
        self_610090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 459)
        dist_610091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 15), self_610090, 'dist')
        # Obtaining the member 'logcdf' of a type (line 459)
        logcdf_610092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 15), dist_610091, 'logcdf')
        # Calling logcdf(args, kwargs) (line 459)
        logcdf_call_result_610099 = invoke(stypy.reporting.localization.Localization(__file__, 459, 15), logcdf_610092, *[x_610093, args_610095], **kwargs_610098)
        
        # Assigning a type to the variable 'stypy_return_type' (line 459)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 8), 'stypy_return_type', logcdf_call_result_610099)
        
        # ################# End of 'logcdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logcdf' in the type store
        # Getting the type of 'stypy_return_type' (line 458)
        stypy_return_type_610100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610100)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logcdf'
        return stypy_return_type_610100


    @norecursion
    def ppf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'ppf'
        module_type_store = module_type_store.open_function_context('ppf', 461, 4, False)
        # Assigning a type to the variable 'self' (line 462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.ppf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.ppf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.ppf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.ppf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.ppf')
        rv_frozen.ppf.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_frozen.ppf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.ppf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.ppf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.ppf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.ppf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.ppf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.ppf', ['q'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'ppf', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'ppf(...)' code ##################

        
        # Call to ppf(...): (line 462)
        # Processing the call arguments (line 462)
        # Getting the type of 'q' (line 462)
        q_610104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 29), 'q', False)
        # Getting the type of 'self' (line 462)
        self_610105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 33), 'self', False)
        # Obtaining the member 'args' of a type (line 462)
        args_610106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 33), self_610105, 'args')
        # Processing the call keyword arguments (line 462)
        # Getting the type of 'self' (line 462)
        self_610107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 46), 'self', False)
        # Obtaining the member 'kwds' of a type (line 462)
        kwds_610108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 46), self_610107, 'kwds')
        kwargs_610109 = {'kwds_610108': kwds_610108}
        # Getting the type of 'self' (line 462)
        self_610101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 462)
        dist_610102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 15), self_610101, 'dist')
        # Obtaining the member 'ppf' of a type (line 462)
        ppf_610103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 15), dist_610102, 'ppf')
        # Calling ppf(args, kwargs) (line 462)
        ppf_call_result_610110 = invoke(stypy.reporting.localization.Localization(__file__, 462, 15), ppf_610103, *[q_610104, args_610106], **kwargs_610109)
        
        # Assigning a type to the variable 'stypy_return_type' (line 462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 8), 'stypy_return_type', ppf_call_result_610110)
        
        # ################# End of 'ppf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'ppf' in the type store
        # Getting the type of 'stypy_return_type' (line 461)
        stypy_return_type_610111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610111)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'ppf'
        return stypy_return_type_610111


    @norecursion
    def isf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'isf'
        module_type_store = module_type_store.open_function_context('isf', 464, 4, False)
        # Assigning a type to the variable 'self' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.isf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.isf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.isf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.isf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.isf')
        rv_frozen.isf.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_frozen.isf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.isf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.isf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.isf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.isf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.isf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.isf', ['q'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'isf', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'isf(...)' code ##################

        
        # Call to isf(...): (line 465)
        # Processing the call arguments (line 465)
        # Getting the type of 'q' (line 465)
        q_610115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 29), 'q', False)
        # Getting the type of 'self' (line 465)
        self_610116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 33), 'self', False)
        # Obtaining the member 'args' of a type (line 465)
        args_610117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 33), self_610116, 'args')
        # Processing the call keyword arguments (line 465)
        # Getting the type of 'self' (line 465)
        self_610118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 46), 'self', False)
        # Obtaining the member 'kwds' of a type (line 465)
        kwds_610119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 46), self_610118, 'kwds')
        kwargs_610120 = {'kwds_610119': kwds_610119}
        # Getting the type of 'self' (line 465)
        self_610112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 465)
        dist_610113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 15), self_610112, 'dist')
        # Obtaining the member 'isf' of a type (line 465)
        isf_610114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 15), dist_610113, 'isf')
        # Calling isf(args, kwargs) (line 465)
        isf_call_result_610121 = invoke(stypy.reporting.localization.Localization(__file__, 465, 15), isf_610114, *[q_610115, args_610117], **kwargs_610120)
        
        # Assigning a type to the variable 'stypy_return_type' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'stypy_return_type', isf_call_result_610121)
        
        # ################# End of 'isf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'isf' in the type store
        # Getting the type of 'stypy_return_type' (line 464)
        stypy_return_type_610122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610122)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'isf'
        return stypy_return_type_610122


    @norecursion
    def rvs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 467)
        None_610123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 23), 'None')
        # Getting the type of 'None' (line 467)
        None_610124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 42), 'None')
        defaults = [None_610123, None_610124]
        # Create a new context for function 'rvs'
        module_type_store = module_type_store.open_function_context('rvs', 467, 4, False)
        # Assigning a type to the variable 'self' (line 468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.rvs.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.rvs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.rvs.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.rvs.__dict__.__setitem__('stypy_function_name', 'rv_frozen.rvs')
        rv_frozen.rvs.__dict__.__setitem__('stypy_param_names_list', ['size', 'random_state'])
        rv_frozen.rvs.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.rvs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.rvs.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.rvs.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.rvs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.rvs.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.rvs', ['size', 'random_state'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'rvs', localization, ['size', 'random_state'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'rvs(...)' code ##################

        
        # Assigning a Call to a Name (line 468):
        
        # Assigning a Call to a Name (line 468):
        
        # Call to copy(...): (line 468)
        # Processing the call keyword arguments (line 468)
        kwargs_610128 = {}
        # Getting the type of 'self' (line 468)
        self_610125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 15), 'self', False)
        # Obtaining the member 'kwds' of a type (line 468)
        kwds_610126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 15), self_610125, 'kwds')
        # Obtaining the member 'copy' of a type (line 468)
        copy_610127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 15), kwds_610126, 'copy')
        # Calling copy(args, kwargs) (line 468)
        copy_call_result_610129 = invoke(stypy.reporting.localization.Localization(__file__, 468, 15), copy_610127, *[], **kwargs_610128)
        
        # Assigning a type to the variable 'kwds' (line 468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'kwds', copy_call_result_610129)
        
        # Call to update(...): (line 469)
        # Processing the call arguments (line 469)
        
        # Obtaining an instance of the builtin type 'dict' (line 469)
        dict_610132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 20), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 469)
        # Adding element type (key, value) (line 469)
        str_610133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 21), 'str', 'size')
        # Getting the type of 'size' (line 469)
        size_610134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 29), 'size', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 20), dict_610132, (str_610133, size_610134))
        # Adding element type (key, value) (line 469)
        str_610135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 35), 'str', 'random_state')
        # Getting the type of 'random_state' (line 469)
        random_state_610136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 51), 'random_state', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 469, 20), dict_610132, (str_610135, random_state_610136))
        
        # Processing the call keyword arguments (line 469)
        kwargs_610137 = {}
        # Getting the type of 'kwds' (line 469)
        kwds_610130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 8), 'kwds', False)
        # Obtaining the member 'update' of a type (line 469)
        update_610131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 8), kwds_610130, 'update')
        # Calling update(args, kwargs) (line 469)
        update_call_result_610138 = invoke(stypy.reporting.localization.Localization(__file__, 469, 8), update_610131, *[dict_610132], **kwargs_610137)
        
        
        # Call to rvs(...): (line 470)
        # Getting the type of 'self' (line 470)
        self_610142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 30), 'self', False)
        # Obtaining the member 'args' of a type (line 470)
        args_610143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 30), self_610142, 'args')
        # Processing the call keyword arguments (line 470)
        # Getting the type of 'kwds' (line 470)
        kwds_610144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 43), 'kwds', False)
        kwargs_610145 = {'kwds_610144': kwds_610144}
        # Getting the type of 'self' (line 470)
        self_610139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 470)
        dist_610140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 15), self_610139, 'dist')
        # Obtaining the member 'rvs' of a type (line 470)
        rvs_610141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 15), dist_610140, 'rvs')
        # Calling rvs(args, kwargs) (line 470)
        rvs_call_result_610146 = invoke(stypy.reporting.localization.Localization(__file__, 470, 15), rvs_610141, *[args_610143], **kwargs_610145)
        
        # Assigning a type to the variable 'stypy_return_type' (line 470)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 8), 'stypy_return_type', rvs_call_result_610146)
        
        # ################# End of 'rvs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'rvs' in the type store
        # Getting the type of 'stypy_return_type' (line 467)
        stypy_return_type_610147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610147)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'rvs'
        return stypy_return_type_610147


    @norecursion
    def sf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'sf'
        module_type_store = module_type_store.open_function_context('sf', 472, 4, False)
        # Assigning a type to the variable 'self' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.sf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.sf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.sf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.sf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.sf')
        rv_frozen.sf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_frozen.sf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.sf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.sf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.sf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.sf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.sf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.sf', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'sf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'sf(...)' code ##################

        
        # Call to sf(...): (line 473)
        # Processing the call arguments (line 473)
        # Getting the type of 'x' (line 473)
        x_610151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 28), 'x', False)
        # Getting the type of 'self' (line 473)
        self_610152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 32), 'self', False)
        # Obtaining the member 'args' of a type (line 473)
        args_610153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 32), self_610152, 'args')
        # Processing the call keyword arguments (line 473)
        # Getting the type of 'self' (line 473)
        self_610154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 45), 'self', False)
        # Obtaining the member 'kwds' of a type (line 473)
        kwds_610155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 45), self_610154, 'kwds')
        kwargs_610156 = {'kwds_610155': kwds_610155}
        # Getting the type of 'self' (line 473)
        self_610148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 473)
        dist_610149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 15), self_610148, 'dist')
        # Obtaining the member 'sf' of a type (line 473)
        sf_610150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 15), dist_610149, 'sf')
        # Calling sf(args, kwargs) (line 473)
        sf_call_result_610157 = invoke(stypy.reporting.localization.Localization(__file__, 473, 15), sf_610150, *[x_610151, args_610153], **kwargs_610156)
        
        # Assigning a type to the variable 'stypy_return_type' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 8), 'stypy_return_type', sf_call_result_610157)
        
        # ################# End of 'sf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'sf' in the type store
        # Getting the type of 'stypy_return_type' (line 472)
        stypy_return_type_610158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610158)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'sf'
        return stypy_return_type_610158


    @norecursion
    def logsf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logsf'
        module_type_store = module_type_store.open_function_context('logsf', 475, 4, False)
        # Assigning a type to the variable 'self' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.logsf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.logsf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.logsf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.logsf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.logsf')
        rv_frozen.logsf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_frozen.logsf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.logsf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.logsf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.logsf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.logsf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.logsf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.logsf', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logsf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logsf(...)' code ##################

        
        # Call to logsf(...): (line 476)
        # Processing the call arguments (line 476)
        # Getting the type of 'x' (line 476)
        x_610162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 31), 'x', False)
        # Getting the type of 'self' (line 476)
        self_610163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 35), 'self', False)
        # Obtaining the member 'args' of a type (line 476)
        args_610164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 35), self_610163, 'args')
        # Processing the call keyword arguments (line 476)
        # Getting the type of 'self' (line 476)
        self_610165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 48), 'self', False)
        # Obtaining the member 'kwds' of a type (line 476)
        kwds_610166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 48), self_610165, 'kwds')
        kwargs_610167 = {'kwds_610166': kwds_610166}
        # Getting the type of 'self' (line 476)
        self_610159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 476)
        dist_610160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 15), self_610159, 'dist')
        # Obtaining the member 'logsf' of a type (line 476)
        logsf_610161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 15), dist_610160, 'logsf')
        # Calling logsf(args, kwargs) (line 476)
        logsf_call_result_610168 = invoke(stypy.reporting.localization.Localization(__file__, 476, 15), logsf_610161, *[x_610162, args_610164], **kwargs_610167)
        
        # Assigning a type to the variable 'stypy_return_type' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 8), 'stypy_return_type', logsf_call_result_610168)
        
        # ################# End of 'logsf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logsf' in the type store
        # Getting the type of 'stypy_return_type' (line 475)
        stypy_return_type_610169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610169)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logsf'
        return stypy_return_type_610169


    @norecursion
    def stats(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        str_610170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 28), 'str', 'mv')
        defaults = [str_610170]
        # Create a new context for function 'stats'
        module_type_store = module_type_store.open_function_context('stats', 478, 4, False)
        # Assigning a type to the variable 'self' (line 479)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.stats.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.stats.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.stats.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.stats.__dict__.__setitem__('stypy_function_name', 'rv_frozen.stats')
        rv_frozen.stats.__dict__.__setitem__('stypy_param_names_list', ['moments'])
        rv_frozen.stats.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.stats.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.stats.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.stats.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.stats.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.stats.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.stats', ['moments'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'stats', localization, ['moments'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'stats(...)' code ##################

        
        # Assigning a Call to a Name (line 479):
        
        # Assigning a Call to a Name (line 479):
        
        # Call to copy(...): (line 479)
        # Processing the call keyword arguments (line 479)
        kwargs_610174 = {}
        # Getting the type of 'self' (line 479)
        self_610171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 15), 'self', False)
        # Obtaining the member 'kwds' of a type (line 479)
        kwds_610172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 15), self_610171, 'kwds')
        # Obtaining the member 'copy' of a type (line 479)
        copy_610173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 15), kwds_610172, 'copy')
        # Calling copy(args, kwargs) (line 479)
        copy_call_result_610175 = invoke(stypy.reporting.localization.Localization(__file__, 479, 15), copy_610173, *[], **kwargs_610174)
        
        # Assigning a type to the variable 'kwds' (line 479)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 8), 'kwds', copy_call_result_610175)
        
        # Call to update(...): (line 480)
        # Processing the call arguments (line 480)
        
        # Obtaining an instance of the builtin type 'dict' (line 480)
        dict_610178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 20), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 480)
        # Adding element type (key, value) (line 480)
        str_610179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 21), 'str', 'moments')
        # Getting the type of 'moments' (line 480)
        moments_610180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 32), 'moments', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 20), dict_610178, (str_610179, moments_610180))
        
        # Processing the call keyword arguments (line 480)
        kwargs_610181 = {}
        # Getting the type of 'kwds' (line 480)
        kwds_610176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 8), 'kwds', False)
        # Obtaining the member 'update' of a type (line 480)
        update_610177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 8), kwds_610176, 'update')
        # Calling update(args, kwargs) (line 480)
        update_call_result_610182 = invoke(stypy.reporting.localization.Localization(__file__, 480, 8), update_610177, *[dict_610178], **kwargs_610181)
        
        
        # Call to stats(...): (line 481)
        # Getting the type of 'self' (line 481)
        self_610186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 32), 'self', False)
        # Obtaining the member 'args' of a type (line 481)
        args_610187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 32), self_610186, 'args')
        # Processing the call keyword arguments (line 481)
        # Getting the type of 'kwds' (line 481)
        kwds_610188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 45), 'kwds', False)
        kwargs_610189 = {'kwds_610188': kwds_610188}
        # Getting the type of 'self' (line 481)
        self_610183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 481)
        dist_610184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 15), self_610183, 'dist')
        # Obtaining the member 'stats' of a type (line 481)
        stats_610185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 15), dist_610184, 'stats')
        # Calling stats(args, kwargs) (line 481)
        stats_call_result_610190 = invoke(stypy.reporting.localization.Localization(__file__, 481, 15), stats_610185, *[args_610187], **kwargs_610189)
        
        # Assigning a type to the variable 'stypy_return_type' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'stypy_return_type', stats_call_result_610190)
        
        # ################# End of 'stats(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'stats' in the type store
        # Getting the type of 'stypy_return_type' (line 478)
        stypy_return_type_610191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610191)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'stats'
        return stypy_return_type_610191


    @norecursion
    def median(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'median'
        module_type_store = module_type_store.open_function_context('median', 483, 4, False)
        # Assigning a type to the variable 'self' (line 484)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.median.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.median.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.median.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.median.__dict__.__setitem__('stypy_function_name', 'rv_frozen.median')
        rv_frozen.median.__dict__.__setitem__('stypy_param_names_list', [])
        rv_frozen.median.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.median.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.median.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.median.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.median.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.median.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.median', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'median', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'median(...)' code ##################

        
        # Call to median(...): (line 484)
        # Getting the type of 'self' (line 484)
        self_610195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 33), 'self', False)
        # Obtaining the member 'args' of a type (line 484)
        args_610196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 33), self_610195, 'args')
        # Processing the call keyword arguments (line 484)
        # Getting the type of 'self' (line 484)
        self_610197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 46), 'self', False)
        # Obtaining the member 'kwds' of a type (line 484)
        kwds_610198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 46), self_610197, 'kwds')
        kwargs_610199 = {'kwds_610198': kwds_610198}
        # Getting the type of 'self' (line 484)
        self_610192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 484)
        dist_610193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 15), self_610192, 'dist')
        # Obtaining the member 'median' of a type (line 484)
        median_610194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 15), dist_610193, 'median')
        # Calling median(args, kwargs) (line 484)
        median_call_result_610200 = invoke(stypy.reporting.localization.Localization(__file__, 484, 15), median_610194, *[args_610196], **kwargs_610199)
        
        # Assigning a type to the variable 'stypy_return_type' (line 484)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 8), 'stypy_return_type', median_call_result_610200)
        
        # ################# End of 'median(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'median' in the type store
        # Getting the type of 'stypy_return_type' (line 483)
        stypy_return_type_610201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610201)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'median'
        return stypy_return_type_610201


    @norecursion
    def mean(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'mean'
        module_type_store = module_type_store.open_function_context('mean', 486, 4, False)
        # Assigning a type to the variable 'self' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.mean.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.mean.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.mean.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.mean.__dict__.__setitem__('stypy_function_name', 'rv_frozen.mean')
        rv_frozen.mean.__dict__.__setitem__('stypy_param_names_list', [])
        rv_frozen.mean.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.mean.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.mean.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.mean.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.mean.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.mean.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.mean', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'mean', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'mean(...)' code ##################

        
        # Call to mean(...): (line 487)
        # Getting the type of 'self' (line 487)
        self_610205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 31), 'self', False)
        # Obtaining the member 'args' of a type (line 487)
        args_610206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 31), self_610205, 'args')
        # Processing the call keyword arguments (line 487)
        # Getting the type of 'self' (line 487)
        self_610207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 44), 'self', False)
        # Obtaining the member 'kwds' of a type (line 487)
        kwds_610208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 44), self_610207, 'kwds')
        kwargs_610209 = {'kwds_610208': kwds_610208}
        # Getting the type of 'self' (line 487)
        self_610202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 487)
        dist_610203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 15), self_610202, 'dist')
        # Obtaining the member 'mean' of a type (line 487)
        mean_610204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 15), dist_610203, 'mean')
        # Calling mean(args, kwargs) (line 487)
        mean_call_result_610210 = invoke(stypy.reporting.localization.Localization(__file__, 487, 15), mean_610204, *[args_610206], **kwargs_610209)
        
        # Assigning a type to the variable 'stypy_return_type' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 8), 'stypy_return_type', mean_call_result_610210)
        
        # ################# End of 'mean(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'mean' in the type store
        # Getting the type of 'stypy_return_type' (line 486)
        stypy_return_type_610211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610211)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'mean'
        return stypy_return_type_610211


    @norecursion
    def var(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'var'
        module_type_store = module_type_store.open_function_context('var', 489, 4, False)
        # Assigning a type to the variable 'self' (line 490)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.var.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.var.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.var.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.var.__dict__.__setitem__('stypy_function_name', 'rv_frozen.var')
        rv_frozen.var.__dict__.__setitem__('stypy_param_names_list', [])
        rv_frozen.var.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.var.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.var.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.var.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.var.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.var.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.var', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'var', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'var(...)' code ##################

        
        # Call to var(...): (line 490)
        # Getting the type of 'self' (line 490)
        self_610215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 30), 'self', False)
        # Obtaining the member 'args' of a type (line 490)
        args_610216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 30), self_610215, 'args')
        # Processing the call keyword arguments (line 490)
        # Getting the type of 'self' (line 490)
        self_610217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 43), 'self', False)
        # Obtaining the member 'kwds' of a type (line 490)
        kwds_610218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 43), self_610217, 'kwds')
        kwargs_610219 = {'kwds_610218': kwds_610218}
        # Getting the type of 'self' (line 490)
        self_610212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 490)
        dist_610213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 15), self_610212, 'dist')
        # Obtaining the member 'var' of a type (line 490)
        var_610214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 15), dist_610213, 'var')
        # Calling var(args, kwargs) (line 490)
        var_call_result_610220 = invoke(stypy.reporting.localization.Localization(__file__, 490, 15), var_610214, *[args_610216], **kwargs_610219)
        
        # Assigning a type to the variable 'stypy_return_type' (line 490)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 8), 'stypy_return_type', var_call_result_610220)
        
        # ################# End of 'var(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'var' in the type store
        # Getting the type of 'stypy_return_type' (line 489)
        stypy_return_type_610221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610221)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'var'
        return stypy_return_type_610221


    @norecursion
    def std(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'std'
        module_type_store = module_type_store.open_function_context('std', 492, 4, False)
        # Assigning a type to the variable 'self' (line 493)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 493, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.std.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.std.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.std.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.std.__dict__.__setitem__('stypy_function_name', 'rv_frozen.std')
        rv_frozen.std.__dict__.__setitem__('stypy_param_names_list', [])
        rv_frozen.std.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.std.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.std.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.std.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.std.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.std.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.std', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'std', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'std(...)' code ##################

        
        # Call to std(...): (line 493)
        # Getting the type of 'self' (line 493)
        self_610225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 30), 'self', False)
        # Obtaining the member 'args' of a type (line 493)
        args_610226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 30), self_610225, 'args')
        # Processing the call keyword arguments (line 493)
        # Getting the type of 'self' (line 493)
        self_610227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 43), 'self', False)
        # Obtaining the member 'kwds' of a type (line 493)
        kwds_610228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 43), self_610227, 'kwds')
        kwargs_610229 = {'kwds_610228': kwds_610228}
        # Getting the type of 'self' (line 493)
        self_610222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 493)
        dist_610223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 15), self_610222, 'dist')
        # Obtaining the member 'std' of a type (line 493)
        std_610224 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 15), dist_610223, 'std')
        # Calling std(args, kwargs) (line 493)
        std_call_result_610230 = invoke(stypy.reporting.localization.Localization(__file__, 493, 15), std_610224, *[args_610226], **kwargs_610229)
        
        # Assigning a type to the variable 'stypy_return_type' (line 493)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 493, 8), 'stypy_return_type', std_call_result_610230)
        
        # ################# End of 'std(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'std' in the type store
        # Getting the type of 'stypy_return_type' (line 492)
        stypy_return_type_610231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610231)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'std'
        return stypy_return_type_610231


    @norecursion
    def moment(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'moment'
        module_type_store = module_type_store.open_function_context('moment', 495, 4, False)
        # Assigning a type to the variable 'self' (line 496)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 496, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.moment.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.moment.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.moment.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.moment.__dict__.__setitem__('stypy_function_name', 'rv_frozen.moment')
        rv_frozen.moment.__dict__.__setitem__('stypy_param_names_list', ['n'])
        rv_frozen.moment.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.moment.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.moment.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.moment.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.moment.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.moment.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.moment', ['n'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'moment', localization, ['n'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'moment(...)' code ##################

        
        # Call to moment(...): (line 496)
        # Processing the call arguments (line 496)
        # Getting the type of 'n' (line 496)
        n_610235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 32), 'n', False)
        # Getting the type of 'self' (line 496)
        self_610236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 36), 'self', False)
        # Obtaining the member 'args' of a type (line 496)
        args_610237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 36), self_610236, 'args')
        # Processing the call keyword arguments (line 496)
        # Getting the type of 'self' (line 496)
        self_610238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 49), 'self', False)
        # Obtaining the member 'kwds' of a type (line 496)
        kwds_610239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 49), self_610238, 'kwds')
        kwargs_610240 = {'kwds_610239': kwds_610239}
        # Getting the type of 'self' (line 496)
        self_610232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 496)
        dist_610233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 15), self_610232, 'dist')
        # Obtaining the member 'moment' of a type (line 496)
        moment_610234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 15), dist_610233, 'moment')
        # Calling moment(args, kwargs) (line 496)
        moment_call_result_610241 = invoke(stypy.reporting.localization.Localization(__file__, 496, 15), moment_610234, *[n_610235, args_610237], **kwargs_610240)
        
        # Assigning a type to the variable 'stypy_return_type' (line 496)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 496, 8), 'stypy_return_type', moment_call_result_610241)
        
        # ################# End of 'moment(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'moment' in the type store
        # Getting the type of 'stypy_return_type' (line 495)
        stypy_return_type_610242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610242)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'moment'
        return stypy_return_type_610242


    @norecursion
    def entropy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'entropy'
        module_type_store = module_type_store.open_function_context('entropy', 498, 4, False)
        # Assigning a type to the variable 'self' (line 499)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.entropy.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.entropy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.entropy.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.entropy.__dict__.__setitem__('stypy_function_name', 'rv_frozen.entropy')
        rv_frozen.entropy.__dict__.__setitem__('stypy_param_names_list', [])
        rv_frozen.entropy.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.entropy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.entropy.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.entropy.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.entropy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.entropy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.entropy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'entropy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'entropy(...)' code ##################

        
        # Call to entropy(...): (line 499)
        # Getting the type of 'self' (line 499)
        self_610246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 34), 'self', False)
        # Obtaining the member 'args' of a type (line 499)
        args_610247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 34), self_610246, 'args')
        # Processing the call keyword arguments (line 499)
        # Getting the type of 'self' (line 499)
        self_610248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 47), 'self', False)
        # Obtaining the member 'kwds' of a type (line 499)
        kwds_610249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 47), self_610248, 'kwds')
        kwargs_610250 = {'kwds_610249': kwds_610249}
        # Getting the type of 'self' (line 499)
        self_610243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 499)
        dist_610244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 15), self_610243, 'dist')
        # Obtaining the member 'entropy' of a type (line 499)
        entropy_610245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 15), dist_610244, 'entropy')
        # Calling entropy(args, kwargs) (line 499)
        entropy_call_result_610251 = invoke(stypy.reporting.localization.Localization(__file__, 499, 15), entropy_610245, *[args_610247], **kwargs_610250)
        
        # Assigning a type to the variable 'stypy_return_type' (line 499)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 8), 'stypy_return_type', entropy_call_result_610251)
        
        # ################# End of 'entropy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'entropy' in the type store
        # Getting the type of 'stypy_return_type' (line 498)
        stypy_return_type_610252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610252)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'entropy'
        return stypy_return_type_610252


    @norecursion
    def pmf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pmf'
        module_type_store = module_type_store.open_function_context('pmf', 501, 4, False)
        # Assigning a type to the variable 'self' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.pmf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.pmf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.pmf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.pmf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.pmf')
        rv_frozen.pmf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_frozen.pmf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.pmf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.pmf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.pmf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.pmf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.pmf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.pmf', ['k'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pmf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pmf(...)' code ##################

        
        # Call to pmf(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'k' (line 502)
        k_610256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 29), 'k', False)
        # Getting the type of 'self' (line 502)
        self_610257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 33), 'self', False)
        # Obtaining the member 'args' of a type (line 502)
        args_610258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 33), self_610257, 'args')
        # Processing the call keyword arguments (line 502)
        # Getting the type of 'self' (line 502)
        self_610259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 46), 'self', False)
        # Obtaining the member 'kwds' of a type (line 502)
        kwds_610260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 46), self_610259, 'kwds')
        kwargs_610261 = {'kwds_610260': kwds_610260}
        # Getting the type of 'self' (line 502)
        self_610253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 502)
        dist_610254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 15), self_610253, 'dist')
        # Obtaining the member 'pmf' of a type (line 502)
        pmf_610255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 15), dist_610254, 'pmf')
        # Calling pmf(args, kwargs) (line 502)
        pmf_call_result_610262 = invoke(stypy.reporting.localization.Localization(__file__, 502, 15), pmf_610255, *[k_610256, args_610258], **kwargs_610261)
        
        # Assigning a type to the variable 'stypy_return_type' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 8), 'stypy_return_type', pmf_call_result_610262)
        
        # ################# End of 'pmf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pmf' in the type store
        # Getting the type of 'stypy_return_type' (line 501)
        stypy_return_type_610263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610263)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pmf'
        return stypy_return_type_610263


    @norecursion
    def logpmf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logpmf'
        module_type_store = module_type_store.open_function_context('logpmf', 504, 4, False)
        # Assigning a type to the variable 'self' (line 505)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 505, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.logpmf.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.logpmf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.logpmf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.logpmf.__dict__.__setitem__('stypy_function_name', 'rv_frozen.logpmf')
        rv_frozen.logpmf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_frozen.logpmf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.logpmf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.logpmf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.logpmf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.logpmf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.logpmf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.logpmf', ['k'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logpmf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logpmf(...)' code ##################

        
        # Call to logpmf(...): (line 505)
        # Processing the call arguments (line 505)
        # Getting the type of 'k' (line 505)
        k_610267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 32), 'k', False)
        # Getting the type of 'self' (line 505)
        self_610268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 36), 'self', False)
        # Obtaining the member 'args' of a type (line 505)
        args_610269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 36), self_610268, 'args')
        # Processing the call keyword arguments (line 505)
        # Getting the type of 'self' (line 505)
        self_610270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 49), 'self', False)
        # Obtaining the member 'kwds' of a type (line 505)
        kwds_610271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 49), self_610270, 'kwds')
        kwargs_610272 = {'kwds_610271': kwds_610271}
        # Getting the type of 'self' (line 505)
        self_610264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 505)
        dist_610265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 15), self_610264, 'dist')
        # Obtaining the member 'logpmf' of a type (line 505)
        logpmf_610266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 15), dist_610265, 'logpmf')
        # Calling logpmf(args, kwargs) (line 505)
        logpmf_call_result_610273 = invoke(stypy.reporting.localization.Localization(__file__, 505, 15), logpmf_610266, *[k_610267, args_610269], **kwargs_610272)
        
        # Assigning a type to the variable 'stypy_return_type' (line 505)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 505, 8), 'stypy_return_type', logpmf_call_result_610273)
        
        # ################# End of 'logpmf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logpmf' in the type store
        # Getting the type of 'stypy_return_type' (line 504)
        stypy_return_type_610274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610274)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logpmf'
        return stypy_return_type_610274


    @norecursion
    def interval(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'interval'
        module_type_store = module_type_store.open_function_context('interval', 507, 4, False)
        # Assigning a type to the variable 'self' (line 508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 508, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.interval.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.interval.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.interval.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.interval.__dict__.__setitem__('stypy_function_name', 'rv_frozen.interval')
        rv_frozen.interval.__dict__.__setitem__('stypy_param_names_list', ['alpha'])
        rv_frozen.interval.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.interval.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_frozen.interval.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.interval.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.interval.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.interval.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.interval', ['alpha'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'interval', localization, ['alpha'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'interval(...)' code ##################

        
        # Call to interval(...): (line 508)
        # Processing the call arguments (line 508)
        # Getting the type of 'alpha' (line 508)
        alpha_610278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 34), 'alpha', False)
        # Getting the type of 'self' (line 508)
        self_610279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 42), 'self', False)
        # Obtaining the member 'args' of a type (line 508)
        args_610280 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 42), self_610279, 'args')
        # Processing the call keyword arguments (line 508)
        # Getting the type of 'self' (line 508)
        self_610281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 55), 'self', False)
        # Obtaining the member 'kwds' of a type (line 508)
        kwds_610282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 55), self_610281, 'kwds')
        kwargs_610283 = {'kwds_610282': kwds_610282}
        # Getting the type of 'self' (line 508)
        self_610275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 15), 'self', False)
        # Obtaining the member 'dist' of a type (line 508)
        dist_610276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 15), self_610275, 'dist')
        # Obtaining the member 'interval' of a type (line 508)
        interval_610277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 15), dist_610276, 'interval')
        # Calling interval(args, kwargs) (line 508)
        interval_call_result_610284 = invoke(stypy.reporting.localization.Localization(__file__, 508, 15), interval_610277, *[alpha_610278, args_610280], **kwargs_610283)
        
        # Assigning a type to the variable 'stypy_return_type' (line 508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 508, 8), 'stypy_return_type', interval_call_result_610284)
        
        # ################# End of 'interval(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'interval' in the type store
        # Getting the type of 'stypy_return_type' (line 507)
        stypy_return_type_610285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610285)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'interval'
        return stypy_return_type_610285


    @norecursion
    def expect(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 510)
        None_610286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 26), 'None')
        # Getting the type of 'None' (line 510)
        None_610287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 35), 'None')
        # Getting the type of 'None' (line 510)
        None_610288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 44), 'None')
        # Getting the type of 'False' (line 510)
        False_610289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 62), 'False')
        defaults = [None_610286, None_610287, None_610288, False_610289]
        # Create a new context for function 'expect'
        module_type_store = module_type_store.open_function_context('expect', 510, 4, False)
        # Assigning a type to the variable 'self' (line 511)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 511, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_frozen.expect.__dict__.__setitem__('stypy_localization', localization)
        rv_frozen.expect.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_frozen.expect.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_frozen.expect.__dict__.__setitem__('stypy_function_name', 'rv_frozen.expect')
        rv_frozen.expect.__dict__.__setitem__('stypy_param_names_list', ['func', 'lb', 'ub', 'conditional'])
        rv_frozen.expect.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_frozen.expect.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_frozen.expect.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_frozen.expect.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_frozen.expect.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_frozen.expect.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_frozen.expect', ['func', 'lb', 'ub', 'conditional'], None, 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'expect', localization, ['func', 'lb', 'ub', 'conditional'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'expect(...)' code ##################

        
        # Assigning a Call to a Tuple (line 515):
        
        # Assigning a Subscript to a Name (line 515):
        
        # Obtaining the type of the subscript
        int_610290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 8), 'int')
        
        # Call to _parse_args(...): (line 515)
        # Getting the type of 'self' (line 515)
        self_610294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 47), 'self', False)
        # Obtaining the member 'args' of a type (line 515)
        args_610295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 47), self_610294, 'args')
        # Processing the call keyword arguments (line 515)
        # Getting the type of 'self' (line 515)
        self_610296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 60), 'self', False)
        # Obtaining the member 'kwds' of a type (line 515)
        kwds_610297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 60), self_610296, 'kwds')
        kwargs_610298 = {'kwds_610297': kwds_610297}
        # Getting the type of 'self' (line 515)
        self_610291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 24), 'self', False)
        # Obtaining the member 'dist' of a type (line 515)
        dist_610292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 24), self_610291, 'dist')
        # Obtaining the member '_parse_args' of a type (line 515)
        _parse_args_610293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 24), dist_610292, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 515)
        _parse_args_call_result_610299 = invoke(stypy.reporting.localization.Localization(__file__, 515, 24), _parse_args_610293, *[args_610295], **kwargs_610298)
        
        # Obtaining the member '__getitem__' of a type (line 515)
        getitem___610300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 8), _parse_args_call_result_610299, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 515)
        subscript_call_result_610301 = invoke(stypy.reporting.localization.Localization(__file__, 515, 8), getitem___610300, int_610290)
        
        # Assigning a type to the variable 'tuple_var_assignment_609237' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'tuple_var_assignment_609237', subscript_call_result_610301)
        
        # Assigning a Subscript to a Name (line 515):
        
        # Obtaining the type of the subscript
        int_610302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 8), 'int')
        
        # Call to _parse_args(...): (line 515)
        # Getting the type of 'self' (line 515)
        self_610306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 47), 'self', False)
        # Obtaining the member 'args' of a type (line 515)
        args_610307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 47), self_610306, 'args')
        # Processing the call keyword arguments (line 515)
        # Getting the type of 'self' (line 515)
        self_610308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 60), 'self', False)
        # Obtaining the member 'kwds' of a type (line 515)
        kwds_610309 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 60), self_610308, 'kwds')
        kwargs_610310 = {'kwds_610309': kwds_610309}
        # Getting the type of 'self' (line 515)
        self_610303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 24), 'self', False)
        # Obtaining the member 'dist' of a type (line 515)
        dist_610304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 24), self_610303, 'dist')
        # Obtaining the member '_parse_args' of a type (line 515)
        _parse_args_610305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 24), dist_610304, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 515)
        _parse_args_call_result_610311 = invoke(stypy.reporting.localization.Localization(__file__, 515, 24), _parse_args_610305, *[args_610307], **kwargs_610310)
        
        # Obtaining the member '__getitem__' of a type (line 515)
        getitem___610312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 8), _parse_args_call_result_610311, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 515)
        subscript_call_result_610313 = invoke(stypy.reporting.localization.Localization(__file__, 515, 8), getitem___610312, int_610302)
        
        # Assigning a type to the variable 'tuple_var_assignment_609238' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'tuple_var_assignment_609238', subscript_call_result_610313)
        
        # Assigning a Subscript to a Name (line 515):
        
        # Obtaining the type of the subscript
        int_610314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 8), 'int')
        
        # Call to _parse_args(...): (line 515)
        # Getting the type of 'self' (line 515)
        self_610318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 47), 'self', False)
        # Obtaining the member 'args' of a type (line 515)
        args_610319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 47), self_610318, 'args')
        # Processing the call keyword arguments (line 515)
        # Getting the type of 'self' (line 515)
        self_610320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 60), 'self', False)
        # Obtaining the member 'kwds' of a type (line 515)
        kwds_610321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 60), self_610320, 'kwds')
        kwargs_610322 = {'kwds_610321': kwds_610321}
        # Getting the type of 'self' (line 515)
        self_610315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 24), 'self', False)
        # Obtaining the member 'dist' of a type (line 515)
        dist_610316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 24), self_610315, 'dist')
        # Obtaining the member '_parse_args' of a type (line 515)
        _parse_args_610317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 24), dist_610316, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 515)
        _parse_args_call_result_610323 = invoke(stypy.reporting.localization.Localization(__file__, 515, 24), _parse_args_610317, *[args_610319], **kwargs_610322)
        
        # Obtaining the member '__getitem__' of a type (line 515)
        getitem___610324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 8), _parse_args_call_result_610323, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 515)
        subscript_call_result_610325 = invoke(stypy.reporting.localization.Localization(__file__, 515, 8), getitem___610324, int_610314)
        
        # Assigning a type to the variable 'tuple_var_assignment_609239' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'tuple_var_assignment_609239', subscript_call_result_610325)
        
        # Assigning a Name to a Name (line 515):
        # Getting the type of 'tuple_var_assignment_609237' (line 515)
        tuple_var_assignment_609237_610326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'tuple_var_assignment_609237')
        # Assigning a type to the variable 'a' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'a', tuple_var_assignment_609237_610326)
        
        # Assigning a Name to a Name (line 515):
        # Getting the type of 'tuple_var_assignment_609238' (line 515)
        tuple_var_assignment_609238_610327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'tuple_var_assignment_609238')
        # Assigning a type to the variable 'loc' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 11), 'loc', tuple_var_assignment_609238_610327)
        
        # Assigning a Name to a Name (line 515):
        # Getting the type of 'tuple_var_assignment_609239' (line 515)
        tuple_var_assignment_609239_610328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'tuple_var_assignment_609239')
        # Assigning a type to the variable 'scale' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 16), 'scale', tuple_var_assignment_609239_610328)
        
        
        # Call to isinstance(...): (line 516)
        # Processing the call arguments (line 516)
        # Getting the type of 'self' (line 516)
        self_610330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 22), 'self', False)
        # Obtaining the member 'dist' of a type (line 516)
        dist_610331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 22), self_610330, 'dist')
        # Getting the type of 'rv_discrete' (line 516)
        rv_discrete_610332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 33), 'rv_discrete', False)
        # Processing the call keyword arguments (line 516)
        kwargs_610333 = {}
        # Getting the type of 'isinstance' (line 516)
        isinstance_610329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 516)
        isinstance_call_result_610334 = invoke(stypy.reporting.localization.Localization(__file__, 516, 11), isinstance_610329, *[dist_610331, rv_discrete_610332], **kwargs_610333)
        
        # Testing the type of an if condition (line 516)
        if_condition_610335 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 516, 8), isinstance_call_result_610334)
        # Assigning a type to the variable 'if_condition_610335' (line 516)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 516, 8), 'if_condition_610335', if_condition_610335)
        # SSA begins for if statement (line 516)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to expect(...): (line 517)
        # Processing the call arguments (line 517)
        # Getting the type of 'func' (line 517)
        func_610339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 36), 'func', False)
        # Getting the type of 'a' (line 517)
        a_610340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 42), 'a', False)
        # Getting the type of 'loc' (line 517)
        loc_610341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 45), 'loc', False)
        # Getting the type of 'lb' (line 517)
        lb_610342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 50), 'lb', False)
        # Getting the type of 'ub' (line 517)
        ub_610343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 54), 'ub', False)
        # Getting the type of 'conditional' (line 517)
        conditional_610344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 58), 'conditional', False)
        # Processing the call keyword arguments (line 517)
        # Getting the type of 'kwds' (line 517)
        kwds_610345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 73), 'kwds', False)
        kwargs_610346 = {'kwds_610345': kwds_610345}
        # Getting the type of 'self' (line 517)
        self_610336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 19), 'self', False)
        # Obtaining the member 'dist' of a type (line 517)
        dist_610337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 517, 19), self_610336, 'dist')
        # Obtaining the member 'expect' of a type (line 517)
        expect_610338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 517, 19), dist_610337, 'expect')
        # Calling expect(args, kwargs) (line 517)
        expect_call_result_610347 = invoke(stypy.reporting.localization.Localization(__file__, 517, 19), expect_610338, *[func_610339, a_610340, loc_610341, lb_610342, ub_610343, conditional_610344], **kwargs_610346)
        
        # Assigning a type to the variable 'stypy_return_type' (line 517)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 517, 12), 'stypy_return_type', expect_call_result_610347)
        # SSA branch for the else part of an if statement (line 516)
        module_type_store.open_ssa_branch('else')
        
        # Call to expect(...): (line 519)
        # Processing the call arguments (line 519)
        # Getting the type of 'func' (line 519)
        func_610351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 36), 'func', False)
        # Getting the type of 'a' (line 519)
        a_610352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 42), 'a', False)
        # Getting the type of 'loc' (line 519)
        loc_610353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 45), 'loc', False)
        # Getting the type of 'scale' (line 519)
        scale_610354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 50), 'scale', False)
        # Getting the type of 'lb' (line 519)
        lb_610355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 57), 'lb', False)
        # Getting the type of 'ub' (line 519)
        ub_610356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 61), 'ub', False)
        # Getting the type of 'conditional' (line 520)
        conditional_610357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 36), 'conditional', False)
        # Processing the call keyword arguments (line 519)
        # Getting the type of 'kwds' (line 520)
        kwds_610358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 51), 'kwds', False)
        kwargs_610359 = {'kwds_610358': kwds_610358}
        # Getting the type of 'self' (line 519)
        self_610348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 19), 'self', False)
        # Obtaining the member 'dist' of a type (line 519)
        dist_610349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 19), self_610348, 'dist')
        # Obtaining the member 'expect' of a type (line 519)
        expect_610350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 19), dist_610349, 'expect')
        # Calling expect(args, kwargs) (line 519)
        expect_call_result_610360 = invoke(stypy.reporting.localization.Localization(__file__, 519, 19), expect_610350, *[func_610351, a_610352, loc_610353, scale_610354, lb_610355, ub_610356, conditional_610357], **kwargs_610359)
        
        # Assigning a type to the variable 'stypy_return_type' (line 519)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 519, 12), 'stypy_return_type', expect_call_result_610360)
        # SSA join for if statement (line 516)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'expect(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'expect' in the type store
        # Getting the type of 'stypy_return_type' (line 510)
        stypy_return_type_610361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610361)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'expect'
        return stypy_return_type_610361


# Assigning a type to the variable 'rv_frozen' (line 427)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 427, 0), 'rv_frozen', rv_frozen)

@norecursion
def argsreduce(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'argsreduce'
    module_type_store = module_type_store.open_function_context('argsreduce', 524, 0, False)
    
    # Passed parameters checking function
    argsreduce.stypy_localization = localization
    argsreduce.stypy_type_of_self = None
    argsreduce.stypy_type_store = module_type_store
    argsreduce.stypy_function_name = 'argsreduce'
    argsreduce.stypy_param_names_list = ['cond']
    argsreduce.stypy_varargs_param_name = 'args'
    argsreduce.stypy_kwargs_param_name = None
    argsreduce.stypy_call_defaults = defaults
    argsreduce.stypy_call_varargs = varargs
    argsreduce.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'argsreduce', ['cond'], 'args', None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'argsreduce', localization, ['cond'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'argsreduce(...)' code ##################

    str_610362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, (-1)), 'str', 'Return the sequence of ravel(args[i]) where ravel(condition) is\n    True in 1D.\n\n    Examples\n    --------\n    >>> import numpy as np\n    >>> rand = np.random.random_sample\n    >>> A = rand((4, 5))\n    >>> B = 2\n    >>> C = rand((1, 5))\n    >>> cond = np.ones(A.shape)\n    >>> [A1, B1, C1] = argsreduce(cond, A, B, C)\n    >>> B1.shape\n    (20,)\n    >>> cond[2,:] = 0\n    >>> [A2, B2, C2] = argsreduce(cond, A, B, C)\n    >>> B2.shape\n    (15,)\n\n    ')
    
    # Assigning a Call to a Name (line 545):
    
    # Assigning a Call to a Name (line 545):
    
    # Call to atleast_1d(...): (line 545)
    # Getting the type of 'args' (line 545)
    args_610365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 29), 'args', False)
    # Processing the call keyword arguments (line 545)
    kwargs_610366 = {}
    # Getting the type of 'np' (line 545)
    np_610363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 14), 'np', False)
    # Obtaining the member 'atleast_1d' of a type (line 545)
    atleast_1d_610364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 14), np_610363, 'atleast_1d')
    # Calling atleast_1d(args, kwargs) (line 545)
    atleast_1d_call_result_610367 = invoke(stypy.reporting.localization.Localization(__file__, 545, 14), atleast_1d_610364, *[args_610365], **kwargs_610366)
    
    # Assigning a type to the variable 'newargs' (line 545)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 4), 'newargs', atleast_1d_call_result_610367)
    
    # Type idiom detected: calculating its left and rigth part (line 546)
    # Getting the type of 'list' (line 546)
    list_610368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 31), 'list')
    # Getting the type of 'newargs' (line 546)
    newargs_610369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 22), 'newargs')
    
    (may_be_610370, more_types_in_union_610371) = may_not_be_subtype(list_610368, newargs_610369)

    if may_be_610370:

        if more_types_in_union_610371:
            # Runtime conditional SSA (line 546)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 'newargs' (line 546)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 4), 'newargs', remove_subtype_from_union(newargs_610369, list))
        
        # Assigning a List to a Name (line 547):
        
        # Assigning a List to a Name (line 547):
        
        # Obtaining an instance of the builtin type 'list' (line 547)
        list_610372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 547)
        # Adding element type (line 547)
        # Getting the type of 'newargs' (line 547)
        newargs_610373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 19), 'newargs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 18), list_610372, newargs_610373)
        
        # Assigning a type to the variable 'newargs' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'newargs', list_610372)

        if more_types_in_union_610371:
            # SSA join for if statement (line 546)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Compare to a Name (line 548):
    
    # Assigning a Compare to a Name (line 548):
    
    # Getting the type of 'cond' (line 548)
    cond_610374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 18), 'cond')
    # Getting the type of 'cond' (line 548)
    cond_610375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 26), 'cond')
    # Applying the binary operator '==' (line 548)
    result_eq_610376 = python_operator(stypy.reporting.localization.Localization(__file__, 548, 18), '==', cond_610374, cond_610375)
    
    # Assigning a type to the variable 'expand_arr' (line 548)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 4), 'expand_arr', result_eq_610376)
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'newargs' (line 549)
    newargs_610385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 60), 'newargs')
    comprehension_610386 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 12), newargs_610385)
    # Assigning a type to the variable 'arr1' (line 549)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 12), 'arr1', comprehension_610386)
    
    # Call to extract(...): (line 549)
    # Processing the call arguments (line 549)
    # Getting the type of 'cond' (line 549)
    cond_610379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 23), 'cond', False)
    # Getting the type of 'arr1' (line 549)
    arr1_610380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 29), 'arr1', False)
    # Getting the type of 'expand_arr' (line 549)
    expand_arr_610381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 36), 'expand_arr', False)
    # Applying the binary operator '*' (line 549)
    result_mul_610382 = python_operator(stypy.reporting.localization.Localization(__file__, 549, 29), '*', arr1_610380, expand_arr_610381)
    
    # Processing the call keyword arguments (line 549)
    kwargs_610383 = {}
    # Getting the type of 'np' (line 549)
    np_610377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 12), 'np', False)
    # Obtaining the member 'extract' of a type (line 549)
    extract_610378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 12), np_610377, 'extract')
    # Calling extract(args, kwargs) (line 549)
    extract_call_result_610384 = invoke(stypy.reporting.localization.Localization(__file__, 549, 12), extract_610378, *[cond_610379, result_mul_610382], **kwargs_610383)
    
    list_610387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 12), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 549, 12), list_610387, extract_call_result_610384)
    # Assigning a type to the variable 'stypy_return_type' (line 549)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 549, 4), 'stypy_return_type', list_610387)
    
    # ################# End of 'argsreduce(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'argsreduce' in the type store
    # Getting the type of 'stypy_return_type' (line 524)
    stypy_return_type_610388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_610388)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'argsreduce'
    return stypy_return_type_610388

# Assigning a type to the variable 'argsreduce' (line 524)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 0), 'argsreduce', argsreduce)

# Assigning a Str to a Name (line 552):

# Assigning a Str to a Name (line 552):
str_610389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, (-1)), 'str', "\ndef _parse_args(self, %(shape_arg_str)s %(locscale_in)s):\n    return (%(shape_arg_str)s), %(locscale_out)s\n\ndef _parse_args_rvs(self, %(shape_arg_str)s %(locscale_in)s, size=None):\n    return self._argcheck_rvs(%(shape_arg_str)s %(locscale_out)s, size=size)\n\ndef _parse_args_stats(self, %(shape_arg_str)s %(locscale_in)s, moments='mv'):\n    return (%(shape_arg_str)s), %(locscale_out)s, moments\n")
# Assigning a type to the variable 'parse_arg_template' (line 552)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 0), 'parse_arg_template', str_610389)

@norecursion
def _ncx2_log_pdf(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_ncx2_log_pdf'
    module_type_store = module_type_store.open_function_context('_ncx2_log_pdf', 567, 0, False)
    
    # Passed parameters checking function
    _ncx2_log_pdf.stypy_localization = localization
    _ncx2_log_pdf.stypy_type_of_self = None
    _ncx2_log_pdf.stypy_type_store = module_type_store
    _ncx2_log_pdf.stypy_function_name = '_ncx2_log_pdf'
    _ncx2_log_pdf.stypy_param_names_list = ['x', 'df', 'nc']
    _ncx2_log_pdf.stypy_varargs_param_name = None
    _ncx2_log_pdf.stypy_kwargs_param_name = None
    _ncx2_log_pdf.stypy_call_defaults = defaults
    _ncx2_log_pdf.stypy_call_varargs = varargs
    _ncx2_log_pdf.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_ncx2_log_pdf', ['x', 'df', 'nc'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_ncx2_log_pdf', localization, ['x', 'df', 'nc'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_ncx2_log_pdf(...)' code ##################

    
    # Assigning a BinOp to a Name (line 571):
    
    # Assigning a BinOp to a Name (line 571):
    # Getting the type of 'df' (line 571)
    df_610390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 10), 'df')
    float_610391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 13), 'float')
    # Applying the binary operator 'div' (line 571)
    result_div_610392 = python_operator(stypy.reporting.localization.Localization(__file__, 571, 10), 'div', df_610390, float_610391)
    
    float_610393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 19), 'float')
    # Applying the binary operator '-' (line 571)
    result_sub_610394 = python_operator(stypy.reporting.localization.Localization(__file__, 571, 10), '-', result_div_610392, float_610393)
    
    # Assigning a type to the variable 'df2' (line 571)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 4), 'df2', result_sub_610394)
    
    # Assigning a Tuple to a Tuple (line 572):
    
    # Assigning a Call to a Name (line 572):
    
    # Call to sqrt(...): (line 572)
    # Processing the call arguments (line 572)
    # Getting the type of 'x' (line 572)
    x_610397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 21), 'x', False)
    # Processing the call keyword arguments (line 572)
    kwargs_610398 = {}
    # Getting the type of 'np' (line 572)
    np_610395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 13), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 572)
    sqrt_610396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 13), np_610395, 'sqrt')
    # Calling sqrt(args, kwargs) (line 572)
    sqrt_call_result_610399 = invoke(stypy.reporting.localization.Localization(__file__, 572, 13), sqrt_610396, *[x_610397], **kwargs_610398)
    
    # Assigning a type to the variable 'tuple_assignment_609240' (line 572)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 4), 'tuple_assignment_609240', sqrt_call_result_610399)
    
    # Assigning a Call to a Name (line 572):
    
    # Call to sqrt(...): (line 572)
    # Processing the call arguments (line 572)
    # Getting the type of 'nc' (line 572)
    nc_610402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 33), 'nc', False)
    # Processing the call keyword arguments (line 572)
    kwargs_610403 = {}
    # Getting the type of 'np' (line 572)
    np_610400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 25), 'np', False)
    # Obtaining the member 'sqrt' of a type (line 572)
    sqrt_610401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 25), np_610400, 'sqrt')
    # Calling sqrt(args, kwargs) (line 572)
    sqrt_call_result_610404 = invoke(stypy.reporting.localization.Localization(__file__, 572, 25), sqrt_610401, *[nc_610402], **kwargs_610403)
    
    # Assigning a type to the variable 'tuple_assignment_609241' (line 572)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 4), 'tuple_assignment_609241', sqrt_call_result_610404)
    
    # Assigning a Name to a Name (line 572):
    # Getting the type of 'tuple_assignment_609240' (line 572)
    tuple_assignment_609240_610405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 4), 'tuple_assignment_609240')
    # Assigning a type to the variable 'xs' (line 572)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 4), 'xs', tuple_assignment_609240_610405)
    
    # Assigning a Name to a Name (line 572):
    # Getting the type of 'tuple_assignment_609241' (line 572)
    tuple_assignment_609241_610406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 4), 'tuple_assignment_609241')
    # Assigning a type to the variable 'ns' (line 572)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 8), 'ns', tuple_assignment_609241_610406)
    
    # Assigning a BinOp to a Name (line 573):
    
    # Assigning a BinOp to a Name (line 573):
    
    # Call to xlogy(...): (line 573)
    # Processing the call arguments (line 573)
    # Getting the type of 'df2' (line 573)
    df2_610408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 16), 'df2', False)
    float_610409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 20), 'float')
    # Applying the binary operator 'div' (line 573)
    result_div_610410 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 16), 'div', df2_610408, float_610409)
    
    # Getting the type of 'x' (line 573)
    x_610411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 25), 'x', False)
    # Getting the type of 'nc' (line 573)
    nc_610412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 27), 'nc', False)
    # Applying the binary operator 'div' (line 573)
    result_div_610413 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 25), 'div', x_610411, nc_610412)
    
    # Processing the call keyword arguments (line 573)
    kwargs_610414 = {}
    # Getting the type of 'xlogy' (line 573)
    xlogy_610407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 10), 'xlogy', False)
    # Calling xlogy(args, kwargs) (line 573)
    xlogy_call_result_610415 = invoke(stypy.reporting.localization.Localization(__file__, 573, 10), xlogy_610407, *[result_div_610410, result_div_610413], **kwargs_610414)
    
    float_610416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 33), 'float')
    # Getting the type of 'xs' (line 573)
    xs_610417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 38), 'xs')
    # Getting the type of 'ns' (line 573)
    ns_610418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 43), 'ns')
    # Applying the binary operator '-' (line 573)
    result_sub_610419 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 38), '-', xs_610417, ns_610418)
    
    int_610420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 48), 'int')
    # Applying the binary operator '**' (line 573)
    result_pow_610421 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 37), '**', result_sub_610419, int_610420)
    
    # Applying the binary operator '*' (line 573)
    result_mul_610422 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 33), '*', float_610416, result_pow_610421)
    
    # Applying the binary operator '-' (line 573)
    result_sub_610423 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 10), '-', xlogy_call_result_610415, result_mul_610422)
    
    # Assigning a type to the variable 'res' (line 573)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 573, 4), 'res', result_sub_610423)
    
    # Getting the type of 'res' (line 574)
    res_610424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 4), 'res')
    
    # Call to log(...): (line 574)
    # Processing the call arguments (line 574)
    
    # Call to ive(...): (line 574)
    # Processing the call arguments (line 574)
    # Getting the type of 'df2' (line 574)
    df2_610428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 22), 'df2', False)
    # Getting the type of 'xs' (line 574)
    xs_610429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 27), 'xs', False)
    # Getting the type of 'ns' (line 574)
    ns_610430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 30), 'ns', False)
    # Applying the binary operator '*' (line 574)
    result_mul_610431 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 27), '*', xs_610429, ns_610430)
    
    # Processing the call keyword arguments (line 574)
    kwargs_610432 = {}
    # Getting the type of 'ive' (line 574)
    ive_610427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 18), 'ive', False)
    # Calling ive(args, kwargs) (line 574)
    ive_call_result_610433 = invoke(stypy.reporting.localization.Localization(__file__, 574, 18), ive_610427, *[df2_610428, result_mul_610431], **kwargs_610432)
    
    float_610434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 36), 'float')
    # Applying the binary operator 'div' (line 574)
    result_div_610435 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 18), 'div', ive_call_result_610433, float_610434)
    
    # Processing the call keyword arguments (line 574)
    kwargs_610436 = {}
    # Getting the type of 'np' (line 574)
    np_610425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 11), 'np', False)
    # Obtaining the member 'log' of a type (line 574)
    log_610426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 11), np_610425, 'log')
    # Calling log(args, kwargs) (line 574)
    log_call_result_610437 = invoke(stypy.reporting.localization.Localization(__file__, 574, 11), log_610426, *[result_div_610435], **kwargs_610436)
    
    # Applying the binary operator '+=' (line 574)
    result_iadd_610438 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 4), '+=', res_610424, log_call_result_610437)
    # Assigning a type to the variable 'res' (line 574)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 4), 'res', result_iadd_610438)
    
    # Getting the type of 'res' (line 575)
    res_610439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 11), 'res')
    # Assigning a type to the variable 'stypy_return_type' (line 575)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 4), 'stypy_return_type', res_610439)
    
    # ################# End of '_ncx2_log_pdf(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_ncx2_log_pdf' in the type store
    # Getting the type of 'stypy_return_type' (line 567)
    stypy_return_type_610440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_610440)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_ncx2_log_pdf'
    return stypy_return_type_610440

# Assigning a type to the variable '_ncx2_log_pdf' (line 567)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 567, 0), '_ncx2_log_pdf', _ncx2_log_pdf)

@norecursion
def _ncx2_pdf(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_ncx2_pdf'
    module_type_store = module_type_store.open_function_context('_ncx2_pdf', 578, 0, False)
    
    # Passed parameters checking function
    _ncx2_pdf.stypy_localization = localization
    _ncx2_pdf.stypy_type_of_self = None
    _ncx2_pdf.stypy_type_store = module_type_store
    _ncx2_pdf.stypy_function_name = '_ncx2_pdf'
    _ncx2_pdf.stypy_param_names_list = ['x', 'df', 'nc']
    _ncx2_pdf.stypy_varargs_param_name = None
    _ncx2_pdf.stypy_kwargs_param_name = None
    _ncx2_pdf.stypy_call_defaults = defaults
    _ncx2_pdf.stypy_call_varargs = varargs
    _ncx2_pdf.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_ncx2_pdf', ['x', 'df', 'nc'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_ncx2_pdf', localization, ['x', 'df', 'nc'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_ncx2_pdf(...)' code ##################

    
    # Call to exp(...): (line 579)
    # Processing the call arguments (line 579)
    
    # Call to _ncx2_log_pdf(...): (line 579)
    # Processing the call arguments (line 579)
    # Getting the type of 'x' (line 579)
    x_610444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 32), 'x', False)
    # Getting the type of 'df' (line 579)
    df_610445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 35), 'df', False)
    # Getting the type of 'nc' (line 579)
    nc_610446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 39), 'nc', False)
    # Processing the call keyword arguments (line 579)
    kwargs_610447 = {}
    # Getting the type of '_ncx2_log_pdf' (line 579)
    _ncx2_log_pdf_610443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 18), '_ncx2_log_pdf', False)
    # Calling _ncx2_log_pdf(args, kwargs) (line 579)
    _ncx2_log_pdf_call_result_610448 = invoke(stypy.reporting.localization.Localization(__file__, 579, 18), _ncx2_log_pdf_610443, *[x_610444, df_610445, nc_610446], **kwargs_610447)
    
    # Processing the call keyword arguments (line 579)
    kwargs_610449 = {}
    # Getting the type of 'np' (line 579)
    np_610441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 11), 'np', False)
    # Obtaining the member 'exp' of a type (line 579)
    exp_610442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 11), np_610441, 'exp')
    # Calling exp(args, kwargs) (line 579)
    exp_call_result_610450 = invoke(stypy.reporting.localization.Localization(__file__, 579, 11), exp_610442, *[_ncx2_log_pdf_call_result_610448], **kwargs_610449)
    
    # Assigning a type to the variable 'stypy_return_type' (line 579)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 4), 'stypy_return_type', exp_call_result_610450)
    
    # ################# End of '_ncx2_pdf(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_ncx2_pdf' in the type store
    # Getting the type of 'stypy_return_type' (line 578)
    stypy_return_type_610451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_610451)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_ncx2_pdf'
    return stypy_return_type_610451

# Assigning a type to the variable '_ncx2_pdf' (line 578)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 0), '_ncx2_pdf', _ncx2_pdf)

@norecursion
def _ncx2_cdf(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_ncx2_cdf'
    module_type_store = module_type_store.open_function_context('_ncx2_cdf', 582, 0, False)
    
    # Passed parameters checking function
    _ncx2_cdf.stypy_localization = localization
    _ncx2_cdf.stypy_type_of_self = None
    _ncx2_cdf.stypy_type_store = module_type_store
    _ncx2_cdf.stypy_function_name = '_ncx2_cdf'
    _ncx2_cdf.stypy_param_names_list = ['x', 'df', 'nc']
    _ncx2_cdf.stypy_varargs_param_name = None
    _ncx2_cdf.stypy_kwargs_param_name = None
    _ncx2_cdf.stypy_call_defaults = defaults
    _ncx2_cdf.stypy_call_varargs = varargs
    _ncx2_cdf.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_ncx2_cdf', ['x', 'df', 'nc'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_ncx2_cdf', localization, ['x', 'df', 'nc'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_ncx2_cdf(...)' code ##################

    
    # Call to chndtr(...): (line 583)
    # Processing the call arguments (line 583)
    # Getting the type of 'x' (line 583)
    x_610453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 18), 'x', False)
    # Getting the type of 'df' (line 583)
    df_610454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 21), 'df', False)
    # Getting the type of 'nc' (line 583)
    nc_610455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 25), 'nc', False)
    # Processing the call keyword arguments (line 583)
    kwargs_610456 = {}
    # Getting the type of 'chndtr' (line 583)
    chndtr_610452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 11), 'chndtr', False)
    # Calling chndtr(args, kwargs) (line 583)
    chndtr_call_result_610457 = invoke(stypy.reporting.localization.Localization(__file__, 583, 11), chndtr_610452, *[x_610453, df_610454, nc_610455], **kwargs_610456)
    
    # Assigning a type to the variable 'stypy_return_type' (line 583)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 4), 'stypy_return_type', chndtr_call_result_610457)
    
    # ################# End of '_ncx2_cdf(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_ncx2_cdf' in the type store
    # Getting the type of 'stypy_return_type' (line 582)
    stypy_return_type_610458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_610458)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_ncx2_cdf'
    return stypy_return_type_610458

# Assigning a type to the variable '_ncx2_cdf' (line 582)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 0), '_ncx2_cdf', _ncx2_cdf)
# Declaration of the 'rv_generic' class

class rv_generic(object, ):
    str_610459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, (-1)), 'str', 'Class which encapsulates common functionality between rv_discrete\n    and rv_continuous.\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 591)
        None_610460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 28), 'None')
        defaults = [None_610460]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 591, 4, False)
        # Assigning a type to the variable 'self' (line 592)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.__init__', ['seed'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['seed'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 592)
        # Processing the call keyword arguments (line 592)
        kwargs_610467 = {}
        
        # Call to super(...): (line 592)
        # Processing the call arguments (line 592)
        # Getting the type of 'rv_generic' (line 592)
        rv_generic_610462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 14), 'rv_generic', False)
        # Getting the type of 'self' (line 592)
        self_610463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 26), 'self', False)
        # Processing the call keyword arguments (line 592)
        kwargs_610464 = {}
        # Getting the type of 'super' (line 592)
        super_610461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 8), 'super', False)
        # Calling super(args, kwargs) (line 592)
        super_call_result_610465 = invoke(stypy.reporting.localization.Localization(__file__, 592, 8), super_610461, *[rv_generic_610462, self_610463], **kwargs_610464)
        
        # Obtaining the member '__init__' of a type (line 592)
        init___610466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 8), super_call_result_610465, '__init__')
        # Calling __init__(args, kwargs) (line 592)
        init___call_result_610468 = invoke(stypy.reporting.localization.Localization(__file__, 592, 8), init___610466, *[], **kwargs_610467)
        
        
        # Assigning a Call to a Name (line 595):
        
        # Assigning a Call to a Name (line 595):
        
        # Call to _getargspec(...): (line 595)
        # Processing the call arguments (line 595)
        # Getting the type of 'self' (line 595)
        self_610470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 27), 'self', False)
        # Obtaining the member '_stats' of a type (line 595)
        _stats_610471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 27), self_610470, '_stats')
        # Processing the call keyword arguments (line 595)
        kwargs_610472 = {}
        # Getting the type of '_getargspec' (line 595)
        _getargspec_610469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 15), '_getargspec', False)
        # Calling _getargspec(args, kwargs) (line 595)
        _getargspec_call_result_610473 = invoke(stypy.reporting.localization.Localization(__file__, 595, 15), _getargspec_610469, *[_stats_610471], **kwargs_610472)
        
        # Assigning a type to the variable 'sign' (line 595)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'sign', _getargspec_call_result_610473)
        
        # Assigning a BoolOp to a Attribute (line 596):
        
        # Assigning a BoolOp to a Attribute (line 596):
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        int_610474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 41), 'int')
        # Getting the type of 'sign' (line 596)
        sign_610475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 36), 'sign')
        # Obtaining the member '__getitem__' of a type (line 596)
        getitem___610476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 36), sign_610475, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 596)
        subscript_call_result_610477 = invoke(stypy.reporting.localization.Localization(__file__, 596, 36), getitem___610476, int_610474)
        
        # Getting the type of 'None' (line 596)
        None_610478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 51), 'None')
        # Applying the binary operator 'isnot' (line 596)
        result_is_not_610479 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 36), 'isnot', subscript_call_result_610477, None_610478)
        
        
        str_610480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 36), 'str', 'moments')
        
        # Obtaining the type of the subscript
        int_610481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 54), 'int')
        # Getting the type of 'sign' (line 597)
        sign_610482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 49), 'sign')
        # Obtaining the member '__getitem__' of a type (line 597)
        getitem___610483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 49), sign_610482, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 597)
        subscript_call_result_610484 = invoke(stypy.reporting.localization.Localization(__file__, 597, 49), getitem___610483, int_610481)
        
        # Applying the binary operator 'in' (line 597)
        result_contains_610485 = python_operator(stypy.reporting.localization.Localization(__file__, 597, 36), 'in', str_610480, subscript_call_result_610484)
        
        # Applying the binary operator 'or' (line 596)
        result_or_keyword_610486 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 35), 'or', result_is_not_610479, result_contains_610485)
        
        # Getting the type of 'self' (line 596)
        self_610487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'self')
        # Setting the type of the member '_stats_has_moments' of a type (line 596)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 8), self_610487, '_stats_has_moments', result_or_keyword_610486)
        
        # Assigning a Call to a Attribute (line 598):
        
        # Assigning a Call to a Attribute (line 598):
        
        # Call to check_random_state(...): (line 598)
        # Processing the call arguments (line 598)
        # Getting the type of 'seed' (line 598)
        seed_610489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 48), 'seed', False)
        # Processing the call keyword arguments (line 598)
        kwargs_610490 = {}
        # Getting the type of 'check_random_state' (line 598)
        check_random_state_610488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 29), 'check_random_state', False)
        # Calling check_random_state(args, kwargs) (line 598)
        check_random_state_call_result_610491 = invoke(stypy.reporting.localization.Localization(__file__, 598, 29), check_random_state_610488, *[seed_610489], **kwargs_610490)
        
        # Getting the type of 'self' (line 598)
        self_610492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'self')
        # Setting the type of the member '_random_state' of a type (line 598)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 8), self_610492, '_random_state', check_random_state_call_result_610491)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def random_state(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'random_state'
        module_type_store = module_type_store.open_function_context('random_state', 600, 4, False)
        # Assigning a type to the variable 'self' (line 601)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.random_state.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.random_state.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.random_state.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.random_state.__dict__.__setitem__('stypy_function_name', 'rv_generic.random_state')
        rv_generic.random_state.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.random_state.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_generic.random_state.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic.random_state.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.random_state.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.random_state.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.random_state.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.random_state', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'random_state', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'random_state(...)' code ##################

        str_610493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, (-1)), 'str', ' Get or set the RandomState object for generating random variates.\n\n        This can be either None or an existing RandomState object.\n\n        If None (or np.random), use the RandomState singleton used by np.random.\n        If already a RandomState instance, use it.\n        If an int, use a new RandomState instance seeded with seed.\n\n        ')
        # Getting the type of 'self' (line 611)
        self_610494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 15), 'self')
        # Obtaining the member '_random_state' of a type (line 611)
        _random_state_610495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 15), self_610494, '_random_state')
        # Assigning a type to the variable 'stypy_return_type' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'stypy_return_type', _random_state_610495)
        
        # ################# End of 'random_state(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'random_state' in the type store
        # Getting the type of 'stypy_return_type' (line 600)
        stypy_return_type_610496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610496)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'random_state'
        return stypy_return_type_610496


    @norecursion
    def random_state(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'random_state'
        module_type_store = module_type_store.open_function_context('random_state', 613, 4, False)
        # Assigning a type to the variable 'self' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.random_state.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.random_state.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.random_state.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.random_state.__dict__.__setitem__('stypy_function_name', 'rv_generic.random_state')
        rv_generic.random_state.__dict__.__setitem__('stypy_param_names_list', ['seed'])
        rv_generic.random_state.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_generic.random_state.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic.random_state.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.random_state.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.random_state.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.random_state.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.random_state', ['seed'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'random_state', localization, ['seed'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'random_state(...)' code ##################

        
        # Assigning a Call to a Attribute (line 615):
        
        # Assigning a Call to a Attribute (line 615):
        
        # Call to check_random_state(...): (line 615)
        # Processing the call arguments (line 615)
        # Getting the type of 'seed' (line 615)
        seed_610498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 48), 'seed', False)
        # Processing the call keyword arguments (line 615)
        kwargs_610499 = {}
        # Getting the type of 'check_random_state' (line 615)
        check_random_state_610497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 29), 'check_random_state', False)
        # Calling check_random_state(args, kwargs) (line 615)
        check_random_state_call_result_610500 = invoke(stypy.reporting.localization.Localization(__file__, 615, 29), check_random_state_610497, *[seed_610498], **kwargs_610499)
        
        # Getting the type of 'self' (line 615)
        self_610501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 8), 'self')
        # Setting the type of the member '_random_state' of a type (line 615)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 8), self_610501, '_random_state', check_random_state_call_result_610500)
        
        # ################# End of 'random_state(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'random_state' in the type store
        # Getting the type of 'stypy_return_type' (line 613)
        stypy_return_type_610502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610502)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'random_state'
        return stypy_return_type_610502


    @norecursion
    def __getstate__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__getstate__'
        module_type_store = module_type_store.open_function_context('__getstate__', 617, 4, False)
        # Assigning a type to the variable 'self' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.__getstate__.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.__getstate__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.__getstate__.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.__getstate__.__dict__.__setitem__('stypy_function_name', 'rv_generic.__getstate__')
        rv_generic.__getstate__.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.__getstate__.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_generic.__getstate__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic.__getstate__.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.__getstate__.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.__getstate__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.__getstate__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.__getstate__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__getstate__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__getstate__(...)' code ##################

        
        # Obtaining an instance of the builtin type 'tuple' (line 618)
        tuple_610503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 618)
        # Adding element type (line 618)
        
        # Call to _updated_ctor_param(...): (line 618)
        # Processing the call keyword arguments (line 618)
        kwargs_610506 = {}
        # Getting the type of 'self' (line 618)
        self_610504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 15), 'self', False)
        # Obtaining the member '_updated_ctor_param' of a type (line 618)
        _updated_ctor_param_610505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 15), self_610504, '_updated_ctor_param')
        # Calling _updated_ctor_param(args, kwargs) (line 618)
        _updated_ctor_param_call_result_610507 = invoke(stypy.reporting.localization.Localization(__file__, 618, 15), _updated_ctor_param_610505, *[], **kwargs_610506)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 618, 15), tuple_610503, _updated_ctor_param_call_result_610507)
        # Adding element type (line 618)
        # Getting the type of 'self' (line 618)
        self_610508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 43), 'self')
        # Obtaining the member '_random_state' of a type (line 618)
        _random_state_610509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 43), self_610508, '_random_state')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 618, 15), tuple_610503, _random_state_610509)
        
        # Assigning a type to the variable 'stypy_return_type' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'stypy_return_type', tuple_610503)
        
        # ################# End of '__getstate__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__getstate__' in the type store
        # Getting the type of 'stypy_return_type' (line 617)
        stypy_return_type_610510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610510)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__getstate__'
        return stypy_return_type_610510


    @norecursion
    def __setstate__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__setstate__'
        module_type_store = module_type_store.open_function_context('__setstate__', 620, 4, False)
        # Assigning a type to the variable 'self' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.__setstate__.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.__setstate__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.__setstate__.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.__setstate__.__dict__.__setitem__('stypy_function_name', 'rv_generic.__setstate__')
        rv_generic.__setstate__.__dict__.__setitem__('stypy_param_names_list', ['state'])
        rv_generic.__setstate__.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_generic.__setstate__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic.__setstate__.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.__setstate__.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.__setstate__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.__setstate__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.__setstate__', ['state'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__setstate__', localization, ['state'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__setstate__(...)' code ##################

        
        # Assigning a Name to a Tuple (line 621):
        
        # Assigning a Subscript to a Name (line 621):
        
        # Obtaining the type of the subscript
        int_610511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 8), 'int')
        # Getting the type of 'state' (line 621)
        state_610512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 24), 'state')
        # Obtaining the member '__getitem__' of a type (line 621)
        getitem___610513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 8), state_610512, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 621)
        subscript_call_result_610514 = invoke(stypy.reporting.localization.Localization(__file__, 621, 8), getitem___610513, int_610511)
        
        # Assigning a type to the variable 'tuple_var_assignment_609242' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'tuple_var_assignment_609242', subscript_call_result_610514)
        
        # Assigning a Subscript to a Name (line 621):
        
        # Obtaining the type of the subscript
        int_610515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 8), 'int')
        # Getting the type of 'state' (line 621)
        state_610516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 24), 'state')
        # Obtaining the member '__getitem__' of a type (line 621)
        getitem___610517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 8), state_610516, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 621)
        subscript_call_result_610518 = invoke(stypy.reporting.localization.Localization(__file__, 621, 8), getitem___610517, int_610515)
        
        # Assigning a type to the variable 'tuple_var_assignment_609243' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'tuple_var_assignment_609243', subscript_call_result_610518)
        
        # Assigning a Name to a Name (line 621):
        # Getting the type of 'tuple_var_assignment_609242' (line 621)
        tuple_var_assignment_609242_610519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'tuple_var_assignment_609242')
        # Assigning a type to the variable 'ctor_param' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'ctor_param', tuple_var_assignment_609242_610519)
        
        # Assigning a Name to a Name (line 621):
        # Getting the type of 'tuple_var_assignment_609243' (line 621)
        tuple_var_assignment_609243_610520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'tuple_var_assignment_609243')
        # Assigning a type to the variable 'r' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 20), 'r', tuple_var_assignment_609243_610520)
        
        # Call to __init__(...): (line 622)
        # Processing the call keyword arguments (line 622)
        # Getting the type of 'ctor_param' (line 622)
        ctor_param_610523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 24), 'ctor_param', False)
        kwargs_610524 = {'ctor_param_610523': ctor_param_610523}
        # Getting the type of 'self' (line 622)
        self_610521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 8), 'self', False)
        # Obtaining the member '__init__' of a type (line 622)
        init___610522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 8), self_610521, '__init__')
        # Calling __init__(args, kwargs) (line 622)
        init___call_result_610525 = invoke(stypy.reporting.localization.Localization(__file__, 622, 8), init___610522, *[], **kwargs_610524)
        
        
        # Assigning a Name to a Attribute (line 623):
        
        # Assigning a Name to a Attribute (line 623):
        # Getting the type of 'r' (line 623)
        r_610526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 29), 'r')
        # Getting the type of 'self' (line 623)
        self_610527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'self')
        # Setting the type of the member '_random_state' of a type (line 623)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 8), self_610527, '_random_state', r_610526)
        # Getting the type of 'self' (line 624)
        self_610528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 15), 'self')
        # Assigning a type to the variable 'stypy_return_type' (line 624)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 624, 8), 'stypy_return_type', self_610528)
        
        # ################# End of '__setstate__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__setstate__' in the type store
        # Getting the type of 'stypy_return_type' (line 620)
        stypy_return_type_610529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610529)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__setstate__'
        return stypy_return_type_610529


    @norecursion
    def _construct_argparser(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_construct_argparser'
        module_type_store = module_type_store.open_function_context('_construct_argparser', 626, 4, False)
        # Assigning a type to the variable 'self' (line 627)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_function_name', 'rv_generic._construct_argparser')
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_param_names_list', ['meths_to_inspect', 'locscale_in', 'locscale_out'])
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._construct_argparser.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._construct_argparser', ['meths_to_inspect', 'locscale_in', 'locscale_out'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_construct_argparser', localization, ['meths_to_inspect', 'locscale_in', 'locscale_out'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_construct_argparser(...)' code ##################

        str_610530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, (-1)), 'str', 'Construct the parser for the shape arguments.\n\n        Generates the argument-parsing functions dynamically and attaches\n        them to the instance.\n        Is supposed to be called in __init__ of a class for each distribution.\n\n        If self.shapes is a non-empty string, interprets it as a\n        comma-separated list of shape parameters.\n\n        Otherwise inspects the call signatures of `meths_to_inspect`\n        and constructs the argument-parsing functions from these.\n        In this case also sets `shapes` and `numargs`.\n        ')
        
        # Getting the type of 'self' (line 642)
        self_610531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 11), 'self')
        # Obtaining the member 'shapes' of a type (line 642)
        shapes_610532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 642, 11), self_610531, 'shapes')
        # Testing the type of an if condition (line 642)
        if_condition_610533 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 642, 8), shapes_610532)
        # Assigning a type to the variable 'if_condition_610533' (line 642)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 642, 8), 'if_condition_610533', if_condition_610533)
        # SSA begins for if statement (line 642)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        
        # Call to isinstance(...): (line 644)
        # Processing the call arguments (line 644)
        # Getting the type of 'self' (line 644)
        self_610535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 30), 'self', False)
        # Obtaining the member 'shapes' of a type (line 644)
        shapes_610536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 30), self_610535, 'shapes')
        # Getting the type of 'string_types' (line 644)
        string_types_610537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 43), 'string_types', False)
        # Processing the call keyword arguments (line 644)
        kwargs_610538 = {}
        # Getting the type of 'isinstance' (line 644)
        isinstance_610534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 19), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 644)
        isinstance_call_result_610539 = invoke(stypy.reporting.localization.Localization(__file__, 644, 19), isinstance_610534, *[shapes_610536, string_types_610537], **kwargs_610538)
        
        # Applying the 'not' unary operator (line 644)
        result_not__610540 = python_operator(stypy.reporting.localization.Localization(__file__, 644, 15), 'not', isinstance_call_result_610539)
        
        # Testing the type of an if condition (line 644)
        if_condition_610541 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 644, 12), result_not__610540)
        # Assigning a type to the variable 'if_condition_610541' (line 644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 12), 'if_condition_610541', if_condition_610541)
        # SSA begins for if statement (line 644)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to TypeError(...): (line 645)
        # Processing the call arguments (line 645)
        str_610543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 32), 'str', 'shapes must be a string.')
        # Processing the call keyword arguments (line 645)
        kwargs_610544 = {}
        # Getting the type of 'TypeError' (line 645)
        TypeError_610542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 22), 'TypeError', False)
        # Calling TypeError(args, kwargs) (line 645)
        TypeError_call_result_610545 = invoke(stypy.reporting.localization.Localization(__file__, 645, 22), TypeError_610542, *[str_610543], **kwargs_610544)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 645, 16), TypeError_call_result_610545, 'raise parameter', BaseException)
        # SSA join for if statement (line 644)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 647):
        
        # Assigning a Call to a Name (line 647):
        
        # Call to split(...): (line 647)
        # Processing the call keyword arguments (line 647)
        kwargs_610554 = {}
        
        # Call to replace(...): (line 647)
        # Processing the call arguments (line 647)
        str_610549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 41), 'str', ',')
        str_610550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 647, 46), 'str', ' ')
        # Processing the call keyword arguments (line 647)
        kwargs_610551 = {}
        # Getting the type of 'self' (line 647)
        self_610546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 21), 'self', False)
        # Obtaining the member 'shapes' of a type (line 647)
        shapes_610547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 21), self_610546, 'shapes')
        # Obtaining the member 'replace' of a type (line 647)
        replace_610548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 21), shapes_610547, 'replace')
        # Calling replace(args, kwargs) (line 647)
        replace_call_result_610552 = invoke(stypy.reporting.localization.Localization(__file__, 647, 21), replace_610548, *[str_610549, str_610550], **kwargs_610551)
        
        # Obtaining the member 'split' of a type (line 647)
        split_610553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 21), replace_call_result_610552, 'split')
        # Calling split(args, kwargs) (line 647)
        split_call_result_610555 = invoke(stypy.reporting.localization.Localization(__file__, 647, 21), split_610553, *[], **kwargs_610554)
        
        # Assigning a type to the variable 'shapes' (line 647)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 12), 'shapes', split_call_result_610555)
        
        # Getting the type of 'shapes' (line 649)
        shapes_610556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 25), 'shapes')
        # Testing the type of a for loop iterable (line 649)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 649, 12), shapes_610556)
        # Getting the type of the for loop variable (line 649)
        for_loop_var_610557 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 649, 12), shapes_610556)
        # Assigning a type to the variable 'field' (line 649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 12), 'field', for_loop_var_610557)
        # SSA begins for a for statement (line 649)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to iskeyword(...): (line 650)
        # Processing the call arguments (line 650)
        # Getting the type of 'field' (line 650)
        field_610560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 37), 'field', False)
        # Processing the call keyword arguments (line 650)
        kwargs_610561 = {}
        # Getting the type of 'keyword' (line 650)
        keyword_610558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 19), 'keyword', False)
        # Obtaining the member 'iskeyword' of a type (line 650)
        iskeyword_610559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 19), keyword_610558, 'iskeyword')
        # Calling iskeyword(args, kwargs) (line 650)
        iskeyword_call_result_610562 = invoke(stypy.reporting.localization.Localization(__file__, 650, 19), iskeyword_610559, *[field_610560], **kwargs_610561)
        
        # Testing the type of an if condition (line 650)
        if_condition_610563 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 650, 16), iskeyword_call_result_610562)
        # Assigning a type to the variable 'if_condition_610563' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 16), 'if_condition_610563', if_condition_610563)
        # SSA begins for if statement (line 650)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to SyntaxError(...): (line 651)
        # Processing the call arguments (line 651)
        str_610565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 38), 'str', 'keywords cannot be used as shapes.')
        # Processing the call keyword arguments (line 651)
        kwargs_610566 = {}
        # Getting the type of 'SyntaxError' (line 651)
        SyntaxError_610564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 26), 'SyntaxError', False)
        # Calling SyntaxError(args, kwargs) (line 651)
        SyntaxError_call_result_610567 = invoke(stypy.reporting.localization.Localization(__file__, 651, 26), SyntaxError_610564, *[str_610565], **kwargs_610566)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 651, 20), SyntaxError_call_result_610567, 'raise parameter', BaseException)
        # SSA join for if statement (line 650)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to match(...): (line 652)
        # Processing the call arguments (line 652)
        str_610570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 32), 'str', '^[_a-zA-Z][_a-zA-Z0-9]*$')
        # Getting the type of 'field' (line 652)
        field_610571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 60), 'field', False)
        # Processing the call keyword arguments (line 652)
        kwargs_610572 = {}
        # Getting the type of 're' (line 652)
        re_610568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 23), 're', False)
        # Obtaining the member 'match' of a type (line 652)
        match_610569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 652, 23), re_610568, 'match')
        # Calling match(args, kwargs) (line 652)
        match_call_result_610573 = invoke(stypy.reporting.localization.Localization(__file__, 652, 23), match_610569, *[str_610570, field_610571], **kwargs_610572)
        
        # Applying the 'not' unary operator (line 652)
        result_not__610574 = python_operator(stypy.reporting.localization.Localization(__file__, 652, 19), 'not', match_call_result_610573)
        
        # Testing the type of an if condition (line 652)
        if_condition_610575 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 652, 16), result_not__610574)
        # Assigning a type to the variable 'if_condition_610575' (line 652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 16), 'if_condition_610575', if_condition_610575)
        # SSA begins for if statement (line 652)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to SyntaxError(...): (line 653)
        # Processing the call arguments (line 653)
        str_610577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 654, 24), 'str', 'shapes must be valid python identifiers')
        # Processing the call keyword arguments (line 653)
        kwargs_610578 = {}
        # Getting the type of 'SyntaxError' (line 653)
        SyntaxError_610576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 26), 'SyntaxError', False)
        # Calling SyntaxError(args, kwargs) (line 653)
        SyntaxError_call_result_610579 = invoke(stypy.reporting.localization.Localization(__file__, 653, 26), SyntaxError_610576, *[str_610577], **kwargs_610578)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 653, 20), SyntaxError_call_result_610579, 'raise parameter', BaseException)
        # SSA join for if statement (line 652)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 642)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a List to a Name (line 659):
        
        # Assigning a List to a Name (line 659):
        
        # Obtaining an instance of the builtin type 'list' (line 659)
        list_610580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 659)
        
        # Assigning a type to the variable 'shapes_list' (line 659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 659, 12), 'shapes_list', list_610580)
        
        # Getting the type of 'meths_to_inspect' (line 660)
        meths_to_inspect_610581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 24), 'meths_to_inspect')
        # Testing the type of a for loop iterable (line 660)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 660, 12), meths_to_inspect_610581)
        # Getting the type of the for loop variable (line 660)
        for_loop_var_610582 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 660, 12), meths_to_inspect_610581)
        # Assigning a type to the variable 'meth' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 12), 'meth', for_loop_var_610582)
        # SSA begins for a for statement (line 660)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 661):
        
        # Assigning a Call to a Name (line 661):
        
        # Call to _getargspec(...): (line 661)
        # Processing the call arguments (line 661)
        # Getting the type of 'meth' (line 661)
        meth_610584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 42), 'meth', False)
        # Processing the call keyword arguments (line 661)
        kwargs_610585 = {}
        # Getting the type of '_getargspec' (line 661)
        _getargspec_610583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 30), '_getargspec', False)
        # Calling _getargspec(args, kwargs) (line 661)
        _getargspec_call_result_610586 = invoke(stypy.reporting.localization.Localization(__file__, 661, 30), _getargspec_610583, *[meth_610584], **kwargs_610585)
        
        # Assigning a type to the variable 'shapes_args' (line 661)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 661, 16), 'shapes_args', _getargspec_call_result_610586)
        
        # Assigning a Subscript to a Name (line 662):
        
        # Assigning a Subscript to a Name (line 662):
        
        # Obtaining the type of the subscript
        int_610587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 40), 'int')
        slice_610588 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 662, 23), int_610587, None, None)
        # Getting the type of 'shapes_args' (line 662)
        shapes_args_610589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 23), 'shapes_args')
        # Obtaining the member 'args' of a type (line 662)
        args_610590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 662, 23), shapes_args_610589, 'args')
        # Obtaining the member '__getitem__' of a type (line 662)
        getitem___610591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 662, 23), args_610590, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 662)
        subscript_call_result_610592 = invoke(stypy.reporting.localization.Localization(__file__, 662, 23), getitem___610591, slice_610588)
        
        # Assigning a type to the variable 'args' (line 662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 662, 16), 'args', subscript_call_result_610592)
        
        # Getting the type of 'args' (line 664)
        args_610593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 19), 'args')
        # Testing the type of an if condition (line 664)
        if_condition_610594 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 664, 16), args_610593)
        # Assigning a type to the variable 'if_condition_610594' (line 664)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 664, 16), 'if_condition_610594', if_condition_610594)
        # SSA begins for if statement (line 664)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 665)
        # Processing the call arguments (line 665)
        # Getting the type of 'args' (line 665)
        args_610597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 39), 'args', False)
        # Processing the call keyword arguments (line 665)
        kwargs_610598 = {}
        # Getting the type of 'shapes_list' (line 665)
        shapes_list_610595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 20), 'shapes_list', False)
        # Obtaining the member 'append' of a type (line 665)
        append_610596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 20), shapes_list_610595, 'append')
        # Calling append(args, kwargs) (line 665)
        append_call_result_610599 = invoke(stypy.reporting.localization.Localization(__file__, 665, 20), append_610596, *[args_610597], **kwargs_610598)
        
        
        
        # Getting the type of 'shapes_args' (line 668)
        shapes_args_610600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 23), 'shapes_args')
        # Obtaining the member 'varargs' of a type (line 668)
        varargs_610601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 668, 23), shapes_args_610600, 'varargs')
        # Getting the type of 'None' (line 668)
        None_610602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 50), 'None')
        # Applying the binary operator 'isnot' (line 668)
        result_is_not_610603 = python_operator(stypy.reporting.localization.Localization(__file__, 668, 23), 'isnot', varargs_610601, None_610602)
        
        # Testing the type of an if condition (line 668)
        if_condition_610604 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 668, 20), result_is_not_610603)
        # Assigning a type to the variable 'if_condition_610604' (line 668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 20), 'if_condition_610604', if_condition_610604)
        # SSA begins for if statement (line 668)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to TypeError(...): (line 669)
        # Processing the call arguments (line 669)
        str_610606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 670, 28), 'str', '*args are not allowed w/out explicit shapes')
        # Processing the call keyword arguments (line 669)
        kwargs_610607 = {}
        # Getting the type of 'TypeError' (line 669)
        TypeError_610605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 30), 'TypeError', False)
        # Calling TypeError(args, kwargs) (line 669)
        TypeError_call_result_610608 = invoke(stypy.reporting.localization.Localization(__file__, 669, 30), TypeError_610605, *[str_610606], **kwargs_610607)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 669, 24), TypeError_call_result_610608, 'raise parameter', BaseException)
        # SSA join for if statement (line 668)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'shapes_args' (line 671)
        shapes_args_610609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 23), 'shapes_args')
        # Obtaining the member 'keywords' of a type (line 671)
        keywords_610610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 671, 23), shapes_args_610609, 'keywords')
        # Getting the type of 'None' (line 671)
        None_610611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 51), 'None')
        # Applying the binary operator 'isnot' (line 671)
        result_is_not_610612 = python_operator(stypy.reporting.localization.Localization(__file__, 671, 23), 'isnot', keywords_610610, None_610611)
        
        # Testing the type of an if condition (line 671)
        if_condition_610613 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 671, 20), result_is_not_610612)
        # Assigning a type to the variable 'if_condition_610613' (line 671)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 671, 20), 'if_condition_610613', if_condition_610613)
        # SSA begins for if statement (line 671)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to TypeError(...): (line 672)
        # Processing the call arguments (line 672)
        str_610615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 28), 'str', '**kwds are not allowed w/out explicit shapes')
        # Processing the call keyword arguments (line 672)
        kwargs_610616 = {}
        # Getting the type of 'TypeError' (line 672)
        TypeError_610614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 30), 'TypeError', False)
        # Calling TypeError(args, kwargs) (line 672)
        TypeError_call_result_610617 = invoke(stypy.reporting.localization.Localization(__file__, 672, 30), TypeError_610614, *[str_610615], **kwargs_610616)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 672, 24), TypeError_call_result_610617, 'raise parameter', BaseException)
        # SSA join for if statement (line 671)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'shapes_args' (line 674)
        shapes_args_610618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 23), 'shapes_args')
        # Obtaining the member 'defaults' of a type (line 674)
        defaults_610619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 23), shapes_args_610618, 'defaults')
        # Getting the type of 'None' (line 674)
        None_610620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 51), 'None')
        # Applying the binary operator 'isnot' (line 674)
        result_is_not_610621 = python_operator(stypy.reporting.localization.Localization(__file__, 674, 23), 'isnot', defaults_610619, None_610620)
        
        # Testing the type of an if condition (line 674)
        if_condition_610622 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 674, 20), result_is_not_610621)
        # Assigning a type to the variable 'if_condition_610622' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 20), 'if_condition_610622', if_condition_610622)
        # SSA begins for if statement (line 674)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to TypeError(...): (line 675)
        # Processing the call arguments (line 675)
        str_610624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 40), 'str', 'defaults are not allowed for shapes')
        # Processing the call keyword arguments (line 675)
        kwargs_610625 = {}
        # Getting the type of 'TypeError' (line 675)
        TypeError_610623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 30), 'TypeError', False)
        # Calling TypeError(args, kwargs) (line 675)
        TypeError_call_result_610626 = invoke(stypy.reporting.localization.Localization(__file__, 675, 30), TypeError_610623, *[str_610624], **kwargs_610625)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 675, 24), TypeError_call_result_610626, 'raise parameter', BaseException)
        # SSA join for if statement (line 674)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 664)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'shapes_list' (line 677)
        shapes_list_610627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 15), 'shapes_list')
        # Testing the type of an if condition (line 677)
        if_condition_610628 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 677, 12), shapes_list_610627)
        # Assigning a type to the variable 'if_condition_610628' (line 677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 12), 'if_condition_610628', if_condition_610628)
        # SSA begins for if statement (line 677)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 678):
        
        # Assigning a Subscript to a Name (line 678):
        
        # Obtaining the type of the subscript
        int_610629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 678, 37), 'int')
        # Getting the type of 'shapes_list' (line 678)
        shapes_list_610630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 25), 'shapes_list')
        # Obtaining the member '__getitem__' of a type (line 678)
        getitem___610631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 25), shapes_list_610630, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 678)
        subscript_call_result_610632 = invoke(stypy.reporting.localization.Localization(__file__, 678, 25), getitem___610631, int_610629)
        
        # Assigning a type to the variable 'shapes' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 16), 'shapes', subscript_call_result_610632)
        
        # Getting the type of 'shapes_list' (line 681)
        shapes_list_610633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 28), 'shapes_list')
        # Testing the type of a for loop iterable (line 681)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 681, 16), shapes_list_610633)
        # Getting the type of the for loop variable (line 681)
        for_loop_var_610634 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 681, 16), shapes_list_610633)
        # Assigning a type to the variable 'item' (line 681)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 681, 16), 'item', for_loop_var_610634)
        # SSA begins for a for statement (line 681)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Getting the type of 'item' (line 682)
        item_610635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 23), 'item')
        # Getting the type of 'shapes' (line 682)
        shapes_610636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 31), 'shapes')
        # Applying the binary operator '!=' (line 682)
        result_ne_610637 = python_operator(stypy.reporting.localization.Localization(__file__, 682, 23), '!=', item_610635, shapes_610636)
        
        # Testing the type of an if condition (line 682)
        if_condition_610638 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 682, 20), result_ne_610637)
        # Assigning a type to the variable 'if_condition_610638' (line 682)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 682, 20), 'if_condition_610638', if_condition_610638)
        # SSA begins for if statement (line 682)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to TypeError(...): (line 683)
        # Processing the call arguments (line 683)
        str_610640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 40), 'str', 'Shape arguments are inconsistent.')
        # Processing the call keyword arguments (line 683)
        kwargs_610641 = {}
        # Getting the type of 'TypeError' (line 683)
        TypeError_610639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 30), 'TypeError', False)
        # Calling TypeError(args, kwargs) (line 683)
        TypeError_call_result_610642 = invoke(stypy.reporting.localization.Localization(__file__, 683, 30), TypeError_610639, *[str_610640], **kwargs_610641)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 683, 24), TypeError_call_result_610642, 'raise parameter', BaseException)
        # SSA join for if statement (line 682)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 677)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a List to a Name (line 685):
        
        # Assigning a List to a Name (line 685):
        
        # Obtaining an instance of the builtin type 'list' (line 685)
        list_610643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 685)
        
        # Assigning a type to the variable 'shapes' (line 685)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 16), 'shapes', list_610643)
        # SSA join for if statement (line 677)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 642)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a IfExp to a Name (line 688):
        
        # Assigning a IfExp to a Name (line 688):
        
        # Getting the type of 'shapes' (line 688)
        shapes_610644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 49), 'shapes')
        # Testing the type of an if expression (line 688)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 688, 21), shapes_610644)
        # SSA begins for if expression (line 688)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to join(...): (line 688)
        # Processing the call arguments (line 688)
        # Getting the type of 'shapes' (line 688)
        shapes_610647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 31), 'shapes', False)
        # Processing the call keyword arguments (line 688)
        kwargs_610648 = {}
        str_610645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 21), 'str', ', ')
        # Obtaining the member 'join' of a type (line 688)
        join_610646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 688, 21), str_610645, 'join')
        # Calling join(args, kwargs) (line 688)
        join_call_result_610649 = invoke(stypy.reporting.localization.Localization(__file__, 688, 21), join_610646, *[shapes_610647], **kwargs_610648)
        
        str_610650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 41), 'str', ', ')
        # Applying the binary operator '+' (line 688)
        result_add_610651 = python_operator(stypy.reporting.localization.Localization(__file__, 688, 21), '+', join_call_result_610649, str_610650)
        
        # SSA branch for the else part of an if expression (line 688)
        module_type_store.open_ssa_branch('if expression else')
        str_610652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 61), 'str', '')
        # SSA join for if expression (line 688)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_610653 = union_type.UnionType.add(result_add_610651, str_610652)
        
        # Assigning a type to the variable 'shapes_str' (line 688)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 8), 'shapes_str', if_exp_610653)
        
        # Assigning a Call to a Name (line 689):
        
        # Assigning a Call to a Name (line 689):
        
        # Call to dict(...): (line 689)
        # Processing the call keyword arguments (line 689)
        # Getting the type of 'shapes_str' (line 689)
        shapes_str_610655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 33), 'shapes_str', False)
        keyword_610656 = shapes_str_610655
        # Getting the type of 'locscale_in' (line 690)
        locscale_in_610657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 31), 'locscale_in', False)
        keyword_610658 = locscale_in_610657
        # Getting the type of 'locscale_out' (line 691)
        locscale_out_610659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 32), 'locscale_out', False)
        keyword_610660 = locscale_out_610659
        kwargs_610661 = {'shape_arg_str': keyword_610656, 'locscale_in': keyword_610658, 'locscale_out': keyword_610660}
        # Getting the type of 'dict' (line 689)
        dict_610654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 14), 'dict', False)
        # Calling dict(args, kwargs) (line 689)
        dict_call_result_610662 = invoke(stypy.reporting.localization.Localization(__file__, 689, 14), dict_610654, *[], **kwargs_610661)
        
        # Assigning a type to the variable 'dct' (line 689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'dct', dict_call_result_610662)
        
        # Assigning a Dict to a Name (line 693):
        
        # Assigning a Dict to a Name (line 693):
        
        # Obtaining an instance of the builtin type 'dict' (line 693)
        dict_610663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 13), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 693)
        
        # Assigning a type to the variable 'ns' (line 693)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 693, 8), 'ns', dict_610663)
        
        # Call to exec_(...): (line 694)
        # Processing the call arguments (line 694)
        # Getting the type of 'parse_arg_template' (line 694)
        parse_arg_template_610665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 14), 'parse_arg_template', False)
        # Getting the type of 'dct' (line 694)
        dct_610666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 35), 'dct', False)
        # Applying the binary operator '%' (line 694)
        result_mod_610667 = python_operator(stypy.reporting.localization.Localization(__file__, 694, 14), '%', parse_arg_template_610665, dct_610666)
        
        # Getting the type of 'ns' (line 694)
        ns_610668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 40), 'ns', False)
        # Processing the call keyword arguments (line 694)
        kwargs_610669 = {}
        # Getting the type of 'exec_' (line 694)
        exec__610664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 8), 'exec_', False)
        # Calling exec_(args, kwargs) (line 694)
        exec__call_result_610670 = invoke(stypy.reporting.localization.Localization(__file__, 694, 8), exec__610664, *[result_mod_610667, ns_610668], **kwargs_610669)
        
        
        
        # Obtaining an instance of the builtin type 'list' (line 696)
        list_610671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 696)
        # Adding element type (line 696)
        str_610672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 21), 'str', '_parse_args')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 696, 20), list_610671, str_610672)
        # Adding element type (line 696)
        str_610673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 36), 'str', '_parse_args_stats')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 696, 20), list_610671, str_610673)
        # Adding element type (line 696)
        str_610674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 57), 'str', '_parse_args_rvs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 696, 20), list_610671, str_610674)
        
        # Testing the type of a for loop iterable (line 696)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 696, 8), list_610671)
        # Getting the type of the for loop variable (line 696)
        for_loop_var_610675 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 696, 8), list_610671)
        # Assigning a type to the variable 'name' (line 696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 8), 'name', for_loop_var_610675)
        # SSA begins for a for statement (line 696)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to setattr(...): (line 697)
        # Processing the call arguments (line 697)
        # Getting the type of 'self' (line 697)
        self_610677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 20), 'self', False)
        # Getting the type of 'name' (line 697)
        name_610678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 26), 'name', False)
        
        # Call to instancemethod(...): (line 698)
        # Processing the call arguments (line 698)
        
        # Obtaining the type of the subscript
        # Getting the type of 'name' (line 698)
        name_610680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 38), 'name', False)
        # Getting the type of 'ns' (line 698)
        ns_610681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 35), 'ns', False)
        # Obtaining the member '__getitem__' of a type (line 698)
        getitem___610682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 35), ns_610681, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 698)
        subscript_call_result_610683 = invoke(stypy.reporting.localization.Localization(__file__, 698, 35), getitem___610682, name_610680)
        
        # Getting the type of 'self' (line 698)
        self_610684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 45), 'self', False)
        # Getting the type of 'self' (line 698)
        self_610685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 51), 'self', False)
        # Obtaining the member '__class__' of a type (line 698)
        class___610686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 51), self_610685, '__class__')
        # Processing the call keyword arguments (line 698)
        kwargs_610687 = {}
        # Getting the type of 'instancemethod' (line 698)
        instancemethod_610679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 20), 'instancemethod', False)
        # Calling instancemethod(args, kwargs) (line 698)
        instancemethod_call_result_610688 = invoke(stypy.reporting.localization.Localization(__file__, 698, 20), instancemethod_610679, *[subscript_call_result_610683, self_610684, class___610686], **kwargs_610687)
        
        # Processing the call keyword arguments (line 697)
        kwargs_610689 = {}
        # Getting the type of 'setattr' (line 697)
        setattr_610676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 12), 'setattr', False)
        # Calling setattr(args, kwargs) (line 697)
        setattr_call_result_610690 = invoke(stypy.reporting.localization.Localization(__file__, 697, 12), setattr_610676, *[self_610677, name_610678, instancemethod_call_result_610688], **kwargs_610689)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a IfExp to a Attribute (line 701):
        
        # Assigning a IfExp to a Attribute (line 701):
        
        # Getting the type of 'shapes' (line 701)
        shapes_610691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 43), 'shapes')
        # Testing the type of an if expression (line 701)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 701, 22), shapes_610691)
        # SSA begins for if expression (line 701)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to join(...): (line 701)
        # Processing the call arguments (line 701)
        # Getting the type of 'shapes' (line 701)
        shapes_610694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 32), 'shapes', False)
        # Processing the call keyword arguments (line 701)
        kwargs_610695 = {}
        str_610692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 22), 'str', ', ')
        # Obtaining the member 'join' of a type (line 701)
        join_610693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 22), str_610692, 'join')
        # Calling join(args, kwargs) (line 701)
        join_call_result_610696 = invoke(stypy.reporting.localization.Localization(__file__, 701, 22), join_610693, *[shapes_610694], **kwargs_610695)
        
        # SSA branch for the else part of an if expression (line 701)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'None' (line 701)
        None_610697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 55), 'None')
        # SSA join for if expression (line 701)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_610698 = union_type.UnionType.add(join_call_result_610696, None_610697)
        
        # Getting the type of 'self' (line 701)
        self_610699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'self')
        # Setting the type of the member 'shapes' of a type (line 701)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 8), self_610699, 'shapes', if_exp_610698)
        
        # Type idiom detected: calculating its left and rigth part (line 702)
        str_610700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 29), 'str', 'numargs')
        # Getting the type of 'self' (line 702)
        self_610701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 23), 'self')
        
        (may_be_610702, more_types_in_union_610703) = may_not_provide_member(str_610700, self_610701)

        if may_be_610702:

            if more_types_in_union_610703:
                # Runtime conditional SSA (line 702)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'self' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 8), 'self', remove_member_provider_from_union(self_610701, 'numargs'))
            
            # Assigning a Call to a Attribute (line 704):
            
            # Assigning a Call to a Attribute (line 704):
            
            # Call to len(...): (line 704)
            # Processing the call arguments (line 704)
            # Getting the type of 'shapes' (line 704)
            shapes_610705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 31), 'shapes', False)
            # Processing the call keyword arguments (line 704)
            kwargs_610706 = {}
            # Getting the type of 'len' (line 704)
            len_610704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 27), 'len', False)
            # Calling len(args, kwargs) (line 704)
            len_call_result_610707 = invoke(stypy.reporting.localization.Localization(__file__, 704, 27), len_610704, *[shapes_610705], **kwargs_610706)
            
            # Getting the type of 'self' (line 704)
            self_610708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 12), 'self')
            # Setting the type of the member 'numargs' of a type (line 704)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 12), self_610708, 'numargs', len_call_result_610707)

            if more_types_in_union_610703:
                # SSA join for if statement (line 702)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of '_construct_argparser(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_construct_argparser' in the type store
        # Getting the type of 'stypy_return_type' (line 626)
        stypy_return_type_610709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610709)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_construct_argparser'
        return stypy_return_type_610709


    @norecursion
    def _construct_doc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 706)
        None_610710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 50), 'None')
        defaults = [None_610710]
        # Create a new context for function '_construct_doc'
        module_type_store = module_type_store.open_function_context('_construct_doc', 706, 4, False)
        # Assigning a type to the variable 'self' (line 707)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._construct_doc.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._construct_doc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._construct_doc.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._construct_doc.__dict__.__setitem__('stypy_function_name', 'rv_generic._construct_doc')
        rv_generic._construct_doc.__dict__.__setitem__('stypy_param_names_list', ['docdict', 'shapes_vals'])
        rv_generic._construct_doc.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_generic._construct_doc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._construct_doc.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._construct_doc.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._construct_doc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._construct_doc.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._construct_doc', ['docdict', 'shapes_vals'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_construct_doc', localization, ['docdict', 'shapes_vals'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_construct_doc(...)' code ##################

        str_610711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 707, 8), 'str', 'Construct the instance docstring with string substitutions.')
        
        # Assigning a Call to a Name (line 708):
        
        # Assigning a Call to a Name (line 708):
        
        # Call to copy(...): (line 708)
        # Processing the call keyword arguments (line 708)
        kwargs_610714 = {}
        # Getting the type of 'docdict' (line 708)
        docdict_610712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 19), 'docdict', False)
        # Obtaining the member 'copy' of a type (line 708)
        copy_610713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 708, 19), docdict_610712, 'copy')
        # Calling copy(args, kwargs) (line 708)
        copy_call_result_610715 = invoke(stypy.reporting.localization.Localization(__file__, 708, 19), copy_610713, *[], **kwargs_610714)
        
        # Assigning a type to the variable 'tempdict' (line 708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 708, 8), 'tempdict', copy_call_result_610715)
        
        # Assigning a BoolOp to a Subscript (line 709):
        
        # Assigning a BoolOp to a Subscript (line 709):
        
        # Evaluating a boolean operation
        # Getting the type of 'self' (line 709)
        self_610716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 27), 'self')
        # Obtaining the member 'name' of a type (line 709)
        name_610717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 27), self_610716, 'name')
        str_610718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 40), 'str', 'distname')
        # Applying the binary operator 'or' (line 709)
        result_or_keyword_610719 = python_operator(stypy.reporting.localization.Localization(__file__, 709, 27), 'or', name_610717, str_610718)
        
        # Getting the type of 'tempdict' (line 709)
        tempdict_610720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 8), 'tempdict')
        str_610721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 17), 'str', 'name')
        # Storing an element on a container (line 709)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 8), tempdict_610720, (str_610721, result_or_keyword_610719))
        
        # Assigning a BoolOp to a Subscript (line 710):
        
        # Assigning a BoolOp to a Subscript (line 710):
        
        # Evaluating a boolean operation
        # Getting the type of 'self' (line 710)
        self_610722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 29), 'self')
        # Obtaining the member 'shapes' of a type (line 710)
        shapes_610723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 29), self_610722, 'shapes')
        str_610724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 44), 'str', '')
        # Applying the binary operator 'or' (line 710)
        result_or_keyword_610725 = python_operator(stypy.reporting.localization.Localization(__file__, 710, 29), 'or', shapes_610723, str_610724)
        
        # Getting the type of 'tempdict' (line 710)
        tempdict_610726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 'tempdict')
        str_610727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 17), 'str', 'shapes')
        # Storing an element on a container (line 710)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 8), tempdict_610726, (str_610727, result_or_keyword_610725))
        
        # Type idiom detected: calculating its left and rigth part (line 712)
        # Getting the type of 'shapes_vals' (line 712)
        shapes_vals_610728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 11), 'shapes_vals')
        # Getting the type of 'None' (line 712)
        None_610729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 26), 'None')
        
        (may_be_610730, more_types_in_union_610731) = may_be_none(shapes_vals_610728, None_610729)

        if may_be_610730:

            if more_types_in_union_610731:
                # Runtime conditional SSA (line 712)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Tuple to a Name (line 713):
            
            # Assigning a Tuple to a Name (line 713):
            
            # Obtaining an instance of the builtin type 'tuple' (line 713)
            tuple_610732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 26), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 713)
            
            # Assigning a type to the variable 'shapes_vals' (line 713)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 12), 'shapes_vals', tuple_610732)

            if more_types_in_union_610731:
                # SSA join for if statement (line 712)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 714):
        
        # Assigning a Call to a Name (line 714):
        
        # Call to join(...): (line 714)
        # Processing the call arguments (line 714)
        # Calculating generator expression
        module_type_store = module_type_store.open_function_context('list comprehension expression', 714, 25, True)
        # Calculating comprehension expression
        # Getting the type of 'shapes_vals' (line 714)
        shapes_vals_610738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 49), 'shapes_vals', False)
        comprehension_610739 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 25), shapes_vals_610738)
        # Assigning a type to the variable 'val' (line 714)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 25), 'val', comprehension_610739)
        str_610735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 25), 'str', '%.3g')
        # Getting the type of 'val' (line 714)
        val_610736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 34), 'val', False)
        # Applying the binary operator '%' (line 714)
        result_mod_610737 = python_operator(stypy.reporting.localization.Localization(__file__, 714, 25), '%', str_610735, val_610736)
        
        list_610740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 25), 'list')
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 25), list_610740, result_mod_610737)
        # Processing the call keyword arguments (line 714)
        kwargs_610741 = {}
        str_610733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 15), 'str', ', ')
        # Obtaining the member 'join' of a type (line 714)
        join_610734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 15), str_610733, 'join')
        # Calling join(args, kwargs) (line 714)
        join_call_result_610742 = invoke(stypy.reporting.localization.Localization(__file__, 714, 15), join_610734, *[list_610740], **kwargs_610741)
        
        # Assigning a type to the variable 'vals' (line 714)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'vals', join_call_result_610742)
        
        # Assigning a Name to a Subscript (line 715):
        
        # Assigning a Name to a Subscript (line 715):
        # Getting the type of 'vals' (line 715)
        vals_610743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 27), 'vals')
        # Getting the type of 'tempdict' (line 715)
        tempdict_610744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 8), 'tempdict')
        str_610745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 17), 'str', 'vals')
        # Storing an element on a container (line 715)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 715, 8), tempdict_610744, (str_610745, vals_610743))
        
        # Assigning a BoolOp to a Subscript (line 717):
        
        # Assigning a BoolOp to a Subscript (line 717):
        
        # Evaluating a boolean operation
        # Getting the type of 'self' (line 717)
        self_610746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 30), 'self')
        # Obtaining the member 'shapes' of a type (line 717)
        shapes_610747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 30), self_610746, 'shapes')
        str_610748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 45), 'str', '')
        # Applying the binary operator 'or' (line 717)
        result_or_keyword_610749 = python_operator(stypy.reporting.localization.Localization(__file__, 717, 30), 'or', shapes_610747, str_610748)
        
        # Getting the type of 'tempdict' (line 717)
        tempdict_610750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 8), 'tempdict')
        str_610751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 17), 'str', 'shapes_')
        # Storing an element on a container (line 717)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 717, 8), tempdict_610750, (str_610751, result_or_keyword_610749))
        
        
        # Evaluating a boolean operation
        # Getting the type of 'self' (line 718)
        self_610752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 11), 'self')
        # Obtaining the member 'shapes' of a type (line 718)
        shapes_610753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 11), self_610752, 'shapes')
        
        # Getting the type of 'self' (line 718)
        self_610754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 27), 'self')
        # Obtaining the member 'numargs' of a type (line 718)
        numargs_610755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 27), self_610754, 'numargs')
        int_610756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 43), 'int')
        # Applying the binary operator '==' (line 718)
        result_eq_610757 = python_operator(stypy.reporting.localization.Localization(__file__, 718, 27), '==', numargs_610755, int_610756)
        
        # Applying the binary operator 'and' (line 718)
        result_and_keyword_610758 = python_operator(stypy.reporting.localization.Localization(__file__, 718, 11), 'and', shapes_610753, result_eq_610757)
        
        # Testing the type of an if condition (line 718)
        if_condition_610759 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 718, 8), result_and_keyword_610758)
        # Assigning a type to the variable 'if_condition_610759' (line 718)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 718, 8), 'if_condition_610759', if_condition_610759)
        # SSA begins for if statement (line 718)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'tempdict' (line 719)
        tempdict_610760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 12), 'tempdict')
        
        # Obtaining the type of the subscript
        str_610761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 21), 'str', 'shapes_')
        # Getting the type of 'tempdict' (line 719)
        tempdict_610762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 12), 'tempdict')
        # Obtaining the member '__getitem__' of a type (line 719)
        getitem___610763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 12), tempdict_610762, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 719)
        subscript_call_result_610764 = invoke(stypy.reporting.localization.Localization(__file__, 719, 12), getitem___610763, str_610761)
        
        str_610765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 35), 'str', ',')
        # Applying the binary operator '+=' (line 719)
        result_iadd_610766 = python_operator(stypy.reporting.localization.Localization(__file__, 719, 12), '+=', subscript_call_result_610764, str_610765)
        # Getting the type of 'tempdict' (line 719)
        tempdict_610767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 12), 'tempdict')
        str_610768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 21), 'str', 'shapes_')
        # Storing an element on a container (line 719)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 12), tempdict_610767, (str_610768, result_iadd_610766))
        
        # SSA join for if statement (line 718)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'self' (line 721)
        self_610769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 11), 'self')
        # Obtaining the member 'shapes' of a type (line 721)
        shapes_610770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 11), self_610769, 'shapes')
        # Testing the type of an if condition (line 721)
        if_condition_610771 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 721, 8), shapes_610770)
        # Assigning a type to the variable 'if_condition_610771' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 8), 'if_condition_610771', if_condition_610771)
        # SSA begins for if statement (line 721)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Subscript (line 722):
        
        # Assigning a BinOp to a Subscript (line 722):
        str_610772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 40), 'str', '>>> %s = %s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 722)
        tuple_610773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 57), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 722)
        # Adding element type (line 722)
        # Getting the type of 'self' (line 722)
        self_610774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 57), 'self')
        # Obtaining the member 'shapes' of a type (line 722)
        shapes_610775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 57), self_610774, 'shapes')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 57), tuple_610773, shapes_610775)
        # Adding element type (line 722)
        # Getting the type of 'vals' (line 722)
        vals_610776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 70), 'vals')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 57), tuple_610773, vals_610776)
        
        # Applying the binary operator '%' (line 722)
        result_mod_610777 = python_operator(stypy.reporting.localization.Localization(__file__, 722, 40), '%', str_610772, tuple_610773)
        
        # Getting the type of 'tempdict' (line 722)
        tempdict_610778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 12), 'tempdict')
        str_610779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 21), 'str', 'set_vals_stmt')
        # Storing an element on a container (line 722)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 12), tempdict_610778, (str_610779, result_mod_610777))
        # SSA branch for the else part of an if statement (line 721)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Str to a Subscript (line 724):
        
        # Assigning a Str to a Subscript (line 724):
        str_610780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 40), 'str', '')
        # Getting the type of 'tempdict' (line 724)
        tempdict_610781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 12), 'tempdict')
        str_610782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 21), 'str', 'set_vals_stmt')
        # Storing an element on a container (line 724)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 12), tempdict_610781, (str_610782, str_610780))
        # SSA join for if statement (line 721)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 726)
        # Getting the type of 'self' (line 726)
        self_610783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 11), 'self')
        # Obtaining the member 'shapes' of a type (line 726)
        shapes_610784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 11), self_610783, 'shapes')
        # Getting the type of 'None' (line 726)
        None_610785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 26), 'None')
        
        (may_be_610786, more_types_in_union_610787) = may_be_none(shapes_610784, None_610785)

        if may_be_610786:

            if more_types_in_union_610787:
                # Runtime conditional SSA (line 726)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            
            # Obtaining an instance of the builtin type 'list' (line 728)
            list_610788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 24), 'list')
            # Adding type elements to the builtin type 'list' instance (line 728)
            # Adding element type (line 728)
            str_610789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 25), 'str', 'default')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 24), list_610788, str_610789)
            # Adding element type (line 728)
            str_610790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 36), 'str', 'before_notes')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 24), list_610788, str_610790)
            
            # Testing the type of a for loop iterable (line 728)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 728, 12), list_610788)
            # Getting the type of the for loop variable (line 728)
            for_loop_var_610791 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 728, 12), list_610788)
            # Assigning a type to the variable 'item' (line 728)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 728, 12), 'item', for_loop_var_610791)
            # SSA begins for a for statement (line 728)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Subscript (line 729):
            
            # Assigning a Call to a Subscript (line 729):
            
            # Call to replace(...): (line 729)
            # Processing the call arguments (line 729)
            str_610797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 20), 'str', '\n%(shapes)s : array_like\n    shape parameters')
            str_610798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 71), 'str', '')
            # Processing the call keyword arguments (line 729)
            kwargs_610799 = {}
            
            # Obtaining the type of the subscript
            # Getting the type of 'item' (line 729)
            item_610792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 42), 'item', False)
            # Getting the type of 'tempdict' (line 729)
            tempdict_610793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 33), 'tempdict', False)
            # Obtaining the member '__getitem__' of a type (line 729)
            getitem___610794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 33), tempdict_610793, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 729)
            subscript_call_result_610795 = invoke(stypy.reporting.localization.Localization(__file__, 729, 33), getitem___610794, item_610792)
            
            # Obtaining the member 'replace' of a type (line 729)
            replace_610796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 33), subscript_call_result_610795, 'replace')
            # Calling replace(args, kwargs) (line 729)
            replace_call_result_610800 = invoke(stypy.reporting.localization.Localization(__file__, 729, 33), replace_610796, *[str_610797, str_610798], **kwargs_610799)
            
            # Getting the type of 'tempdict' (line 729)
            tempdict_610801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 16), 'tempdict')
            # Getting the type of 'item' (line 729)
            item_610802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 25), 'item')
            # Storing an element on a container (line 729)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 729, 16), tempdict_610801, (item_610802, replace_call_result_610800))
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            

            if more_types_in_union_610787:
                # SSA join for if statement (line 726)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Call to range(...): (line 731)
        # Processing the call arguments (line 731)
        int_610804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 23), 'int')
        # Processing the call keyword arguments (line 731)
        kwargs_610805 = {}
        # Getting the type of 'range' (line 731)
        range_610803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 17), 'range', False)
        # Calling range(args, kwargs) (line 731)
        range_call_result_610806 = invoke(stypy.reporting.localization.Localization(__file__, 731, 17), range_610803, *[int_610804], **kwargs_610805)
        
        # Testing the type of a for loop iterable (line 731)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 731, 8), range_call_result_610806)
        # Getting the type of the for loop variable (line 731)
        for_loop_var_610807 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 731, 8), range_call_result_610806)
        # Assigning a type to the variable 'i' (line 731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 731, 8), 'i', for_loop_var_610807)
        # SSA begins for a for statement (line 731)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Type idiom detected: calculating its left and rigth part (line 732)
        # Getting the type of 'self' (line 732)
        self_610808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 15), 'self')
        # Obtaining the member 'shapes' of a type (line 732)
        shapes_610809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 732, 15), self_610808, 'shapes')
        # Getting the type of 'None' (line 732)
        None_610810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 30), 'None')
        
        (may_be_610811, more_types_in_union_610812) = may_be_none(shapes_610809, None_610810)

        if may_be_610811:

            if more_types_in_union_610812:
                # Runtime conditional SSA (line 732)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Attribute (line 734):
            
            # Assigning a Call to a Attribute (line 734):
            
            # Call to replace(...): (line 734)
            # Processing the call arguments (line 734)
            str_610816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 52), 'str', '%(shapes)s, ')
            str_610817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 68), 'str', '')
            # Processing the call keyword arguments (line 734)
            kwargs_610818 = {}
            # Getting the type of 'self' (line 734)
            self_610813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 31), 'self', False)
            # Obtaining the member '__doc__' of a type (line 734)
            doc___610814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 31), self_610813, '__doc__')
            # Obtaining the member 'replace' of a type (line 734)
            replace_610815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 31), doc___610814, 'replace')
            # Calling replace(args, kwargs) (line 734)
            replace_call_result_610819 = invoke(stypy.reporting.localization.Localization(__file__, 734, 31), replace_610815, *[str_610816, str_610817], **kwargs_610818)
            
            # Getting the type of 'self' (line 734)
            self_610820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 16), 'self')
            # Setting the type of the member '__doc__' of a type (line 734)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 16), self_610820, '__doc__', replace_call_result_610819)

            if more_types_in_union_610812:
                # SSA join for if statement (line 732)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Attribute (line 735):
        
        # Assigning a Call to a Attribute (line 735):
        
        # Call to docformat(...): (line 735)
        # Processing the call arguments (line 735)
        # Getting the type of 'self' (line 735)
        self_610823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 44), 'self', False)
        # Obtaining the member '__doc__' of a type (line 735)
        doc___610824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 44), self_610823, '__doc__')
        # Getting the type of 'tempdict' (line 735)
        tempdict_610825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 58), 'tempdict', False)
        # Processing the call keyword arguments (line 735)
        kwargs_610826 = {}
        # Getting the type of 'doccer' (line 735)
        doccer_610821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 27), 'doccer', False)
        # Obtaining the member 'docformat' of a type (line 735)
        docformat_610822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 27), doccer_610821, 'docformat')
        # Calling docformat(args, kwargs) (line 735)
        docformat_call_result_610827 = invoke(stypy.reporting.localization.Localization(__file__, 735, 27), docformat_610822, *[doc___610824, tempdict_610825], **kwargs_610826)
        
        # Getting the type of 'self' (line 735)
        self_610828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 12), 'self')
        # Setting the type of the member '__doc__' of a type (line 735)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 12), self_610828, '__doc__', docformat_call_result_610827)
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 738):
        
        # Assigning a Call to a Attribute (line 738):
        
        # Call to replace(...): (line 738)
        # Processing the call arguments (line 738)
        str_610837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 64), 'str', ', )')
        str_610838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 71), 'str', ')')
        # Processing the call keyword arguments (line 738)
        kwargs_610839 = {}
        
        # Call to replace(...): (line 738)
        # Processing the call arguments (line 738)
        str_610832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 44), 'str', '(, ')
        str_610833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 51), 'str', '(')
        # Processing the call keyword arguments (line 738)
        kwargs_610834 = {}
        # Getting the type of 'self' (line 738)
        self_610829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 23), 'self', False)
        # Obtaining the member '__doc__' of a type (line 738)
        doc___610830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 23), self_610829, '__doc__')
        # Obtaining the member 'replace' of a type (line 738)
        replace_610831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 23), doc___610830, 'replace')
        # Calling replace(args, kwargs) (line 738)
        replace_call_result_610835 = invoke(stypy.reporting.localization.Localization(__file__, 738, 23), replace_610831, *[str_610832, str_610833], **kwargs_610834)
        
        # Obtaining the member 'replace' of a type (line 738)
        replace_610836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 23), replace_call_result_610835, 'replace')
        # Calling replace(args, kwargs) (line 738)
        replace_call_result_610840 = invoke(stypy.reporting.localization.Localization(__file__, 738, 23), replace_610836, *[str_610837, str_610838], **kwargs_610839)
        
        # Getting the type of 'self' (line 738)
        self_610841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 8), 'self')
        # Setting the type of the member '__doc__' of a type (line 738)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 8), self_610841, '__doc__', replace_call_result_610840)
        
        # ################# End of '_construct_doc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_construct_doc' in the type store
        # Getting the type of 'stypy_return_type' (line 706)
        stypy_return_type_610842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610842)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_construct_doc'
        return stypy_return_type_610842


    @norecursion
    def _construct_default_doc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 740)
        None_610843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 46), 'None')
        # Getting the type of 'None' (line 740)
        None_610844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 61), 'None')
        # Getting the type of 'None' (line 741)
        None_610845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 24), 'None')
        str_610846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 741, 39), 'str', 'continuous')
        defaults = [None_610843, None_610844, None_610845, str_610846]
        # Create a new context for function '_construct_default_doc'
        module_type_store = module_type_store.open_function_context('_construct_default_doc', 740, 4, False)
        # Assigning a type to the variable 'self' (line 741)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 741, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_function_name', 'rv_generic._construct_default_doc')
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_param_names_list', ['longname', 'extradoc', 'docdict', 'discrete'])
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._construct_default_doc.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._construct_default_doc', ['longname', 'extradoc', 'docdict', 'discrete'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_construct_default_doc', localization, ['longname', 'extradoc', 'docdict', 'discrete'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_construct_default_doc(...)' code ##################

        str_610847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 8), 'str', 'Construct instance docstring from the default template.')
        
        # Type idiom detected: calculating its left and rigth part (line 743)
        # Getting the type of 'longname' (line 743)
        longname_610848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 11), 'longname')
        # Getting the type of 'None' (line 743)
        None_610849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 23), 'None')
        
        (may_be_610850, more_types_in_union_610851) = may_be_none(longname_610848, None_610849)

        if may_be_610850:

            if more_types_in_union_610851:
                # Runtime conditional SSA (line 743)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 744):
            
            # Assigning a Str to a Name (line 744):
            str_610852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 23), 'str', 'A')
            # Assigning a type to the variable 'longname' (line 744)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 744, 12), 'longname', str_610852)

            if more_types_in_union_610851:
                # SSA join for if statement (line 743)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 745)
        # Getting the type of 'extradoc' (line 745)
        extradoc_610853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 11), 'extradoc')
        # Getting the type of 'None' (line 745)
        None_610854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 23), 'None')
        
        (may_be_610855, more_types_in_union_610856) = may_be_none(extradoc_610853, None_610854)

        if may_be_610855:

            if more_types_in_union_610856:
                # Runtime conditional SSA (line 745)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 746):
            
            # Assigning a Str to a Name (line 746):
            str_610857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 23), 'str', '')
            # Assigning a type to the variable 'extradoc' (line 746)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 746, 12), 'extradoc', str_610857)

            if more_types_in_union_610856:
                # SSA join for if statement (line 745)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Call to startswith(...): (line 747)
        # Processing the call arguments (line 747)
        str_610860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 31), 'str', '\n\n')
        # Processing the call keyword arguments (line 747)
        kwargs_610861 = {}
        # Getting the type of 'extradoc' (line 747)
        extradoc_610858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 11), 'extradoc', False)
        # Obtaining the member 'startswith' of a type (line 747)
        startswith_610859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 11), extradoc_610858, 'startswith')
        # Calling startswith(args, kwargs) (line 747)
        startswith_call_result_610862 = invoke(stypy.reporting.localization.Localization(__file__, 747, 11), startswith_610859, *[str_610860], **kwargs_610861)
        
        # Testing the type of an if condition (line 747)
        if_condition_610863 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 747, 8), startswith_call_result_610862)
        # Assigning a type to the variable 'if_condition_610863' (line 747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'if_condition_610863', if_condition_610863)
        # SSA begins for if statement (line 747)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 748):
        
        # Assigning a Subscript to a Name (line 748):
        
        # Obtaining the type of the subscript
        int_610864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 32), 'int')
        slice_610865 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 748, 23), int_610864, None, None)
        # Getting the type of 'extradoc' (line 748)
        extradoc_610866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 23), 'extradoc')
        # Obtaining the member '__getitem__' of a type (line 748)
        getitem___610867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 23), extradoc_610866, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 748)
        subscript_call_result_610868 = invoke(stypy.reporting.localization.Localization(__file__, 748, 23), getitem___610867, slice_610865)
        
        # Assigning a type to the variable 'extradoc' (line 748)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 12), 'extradoc', subscript_call_result_610868)
        # SSA join for if statement (line 747)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Attribute (line 749):
        
        # Assigning a Call to a Attribute (line 749):
        
        # Call to join(...): (line 749)
        # Processing the call arguments (line 749)
        
        # Obtaining an instance of the builtin type 'list' (line 749)
        list_610871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 749)
        # Adding element type (line 749)
        str_610872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 32), 'str', '%s %s random variable.')
        
        # Obtaining an instance of the builtin type 'tuple' (line 749)
        tuple_610873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 749)
        # Adding element type (line 749)
        # Getting the type of 'longname' (line 749)
        longname_610874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 60), 'longname', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 749, 60), tuple_610873, longname_610874)
        # Adding element type (line 749)
        # Getting the type of 'discrete' (line 749)
        discrete_610875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 70), 'discrete', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 749, 60), tuple_610873, discrete_610875)
        
        # Applying the binary operator '%' (line 749)
        result_mod_610876 = python_operator(stypy.reporting.localization.Localization(__file__, 749, 32), '%', str_610872, tuple_610873)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 749, 31), list_610871, result_mod_610876)
        # Adding element type (line 749)
        str_610877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 32), 'str', '\n\n%(before_notes)s\n')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 749, 31), list_610871, str_610877)
        # Adding element type (line 749)
        
        # Obtaining the type of the subscript
        str_610878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 69), 'str', 'notes')
        # Getting the type of 'docheaders' (line 750)
        docheaders_610879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 58), 'docheaders', False)
        # Obtaining the member '__getitem__' of a type (line 750)
        getitem___610880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 58), docheaders_610879, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 750)
        subscript_call_result_610881 = invoke(stypy.reporting.localization.Localization(__file__, 750, 58), getitem___610880, str_610878)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 749, 31), list_610871, subscript_call_result_610881)
        # Adding element type (line 749)
        # Getting the type of 'extradoc' (line 751)
        extradoc_610882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 32), 'extradoc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 749, 31), list_610871, extradoc_610882)
        # Adding element type (line 749)
        str_610883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 751, 42), 'str', '\n%(example)s')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 749, 31), list_610871, str_610883)
        
        # Processing the call keyword arguments (line 749)
        kwargs_610884 = {}
        str_610869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 23), 'str', '')
        # Obtaining the member 'join' of a type (line 749)
        join_610870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 23), str_610869, 'join')
        # Calling join(args, kwargs) (line 749)
        join_call_result_610885 = invoke(stypy.reporting.localization.Localization(__file__, 749, 23), join_610870, *[list_610871], **kwargs_610884)
        
        # Getting the type of 'self' (line 749)
        self_610886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 8), 'self')
        # Setting the type of the member '__doc__' of a type (line 749)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 8), self_610886, '__doc__', join_call_result_610885)
        
        # Call to _construct_doc(...): (line 752)
        # Processing the call arguments (line 752)
        # Getting the type of 'docdict' (line 752)
        docdict_610889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 28), 'docdict', False)
        # Processing the call keyword arguments (line 752)
        kwargs_610890 = {}
        # Getting the type of 'self' (line 752)
        self_610887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 8), 'self', False)
        # Obtaining the member '_construct_doc' of a type (line 752)
        _construct_doc_610888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 8), self_610887, '_construct_doc')
        # Calling _construct_doc(args, kwargs) (line 752)
        _construct_doc_call_result_610891 = invoke(stypy.reporting.localization.Localization(__file__, 752, 8), _construct_doc_610888, *[docdict_610889], **kwargs_610890)
        
        
        # ################# End of '_construct_default_doc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_construct_default_doc' in the type store
        # Getting the type of 'stypy_return_type' (line 740)
        stypy_return_type_610892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610892)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_construct_default_doc'
        return stypy_return_type_610892


    @norecursion
    def freeze(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'freeze'
        module_type_store = module_type_store.open_function_context('freeze', 754, 4, False)
        # Assigning a type to the variable 'self' (line 755)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 755, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.freeze.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.freeze.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.freeze.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.freeze.__dict__.__setitem__('stypy_function_name', 'rv_generic.freeze')
        rv_generic.freeze.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.freeze.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.freeze.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.freeze.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.freeze.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.freeze.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.freeze.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.freeze', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'freeze', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'freeze(...)' code ##################

        str_610893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, (-1)), 'str', 'Freeze the distribution for the given arguments.\n\n        Parameters\n        ----------\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution.  Should include all\n            the non-optional arguments, may include ``loc`` and ``scale``.\n\n        Returns\n        -------\n        rv_frozen : rv_frozen instance\n            The frozen distribution.\n\n        ')
        
        # Call to rv_frozen(...): (line 769)
        # Processing the call arguments (line 769)
        # Getting the type of 'self' (line 769)
        self_610895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 25), 'self', False)
        # Getting the type of 'args' (line 769)
        args_610896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 32), 'args', False)
        # Processing the call keyword arguments (line 769)
        # Getting the type of 'kwds' (line 769)
        kwds_610897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 40), 'kwds', False)
        kwargs_610898 = {'kwds_610897': kwds_610897}
        # Getting the type of 'rv_frozen' (line 769)
        rv_frozen_610894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 15), 'rv_frozen', False)
        # Calling rv_frozen(args, kwargs) (line 769)
        rv_frozen_call_result_610899 = invoke(stypy.reporting.localization.Localization(__file__, 769, 15), rv_frozen_610894, *[self_610895, args_610896], **kwargs_610898)
        
        # Assigning a type to the variable 'stypy_return_type' (line 769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'stypy_return_type', rv_frozen_call_result_610899)
        
        # ################# End of 'freeze(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'freeze' in the type store
        # Getting the type of 'stypy_return_type' (line 754)
        stypy_return_type_610900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610900)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'freeze'
        return stypy_return_type_610900


    @norecursion
    def __call__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__call__'
        module_type_store = module_type_store.open_function_context('__call__', 771, 4, False)
        # Assigning a type to the variable 'self' (line 772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.__call__.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.__call__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.__call__.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.__call__.__dict__.__setitem__('stypy_function_name', 'rv_generic.__call__')
        rv_generic.__call__.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.__call__.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.__call__.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.__call__.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.__call__.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.__call__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.__call__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.__call__', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__call__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__call__(...)' code ##################

        
        # Call to freeze(...): (line 772)
        # Getting the type of 'args' (line 772)
        args_610903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 28), 'args', False)
        # Processing the call keyword arguments (line 772)
        # Getting the type of 'kwds' (line 772)
        kwds_610904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 36), 'kwds', False)
        kwargs_610905 = {'kwds_610904': kwds_610904}
        # Getting the type of 'self' (line 772)
        self_610901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 15), 'self', False)
        # Obtaining the member 'freeze' of a type (line 772)
        freeze_610902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 15), self_610901, 'freeze')
        # Calling freeze(args, kwargs) (line 772)
        freeze_call_result_610906 = invoke(stypy.reporting.localization.Localization(__file__, 772, 15), freeze_610902, *[args_610903], **kwargs_610905)
        
        # Assigning a type to the variable 'stypy_return_type' (line 772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 8), 'stypy_return_type', freeze_call_result_610906)
        
        # ################# End of '__call__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__call__' in the type store
        # Getting the type of 'stypy_return_type' (line 771)
        stypy_return_type_610907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610907)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__call__'
        return stypy_return_type_610907

    
    # Assigning a Attribute to a Attribute (line 773):

    @norecursion
    def _stats(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_stats'
        module_type_store = module_type_store.open_function_context('_stats', 778, 4, False)
        # Assigning a type to the variable 'self' (line 779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._stats.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._stats.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._stats.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._stats.__dict__.__setitem__('stypy_function_name', 'rv_generic._stats')
        rv_generic._stats.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic._stats.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._stats.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic._stats.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._stats.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._stats.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._stats.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._stats', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_stats', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_stats(...)' code ##################

        
        # Obtaining an instance of the builtin type 'tuple' (line 779)
        tuple_610908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 779)
        # Adding element type (line 779)
        # Getting the type of 'None' (line 779)
        None_610909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 15), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 15), tuple_610908, None_610909)
        # Adding element type (line 779)
        # Getting the type of 'None' (line 779)
        None_610910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 21), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 15), tuple_610908, None_610910)
        # Adding element type (line 779)
        # Getting the type of 'None' (line 779)
        None_610911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 27), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 15), tuple_610908, None_610911)
        # Adding element type (line 779)
        # Getting the type of 'None' (line 779)
        None_610912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 33), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 15), tuple_610908, None_610912)
        
        # Assigning a type to the variable 'stypy_return_type' (line 779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 8), 'stypy_return_type', tuple_610908)
        
        # ################# End of '_stats(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_stats' in the type store
        # Getting the type of 'stypy_return_type' (line 778)
        stypy_return_type_610913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610913)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_stats'
        return stypy_return_type_610913


    @norecursion
    def _munp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_munp'
        module_type_store = module_type_store.open_function_context('_munp', 782, 4, False)
        # Assigning a type to the variable 'self' (line 783)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 783, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._munp.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._munp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._munp.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._munp.__dict__.__setitem__('stypy_function_name', 'rv_generic._munp')
        rv_generic._munp.__dict__.__setitem__('stypy_param_names_list', ['n'])
        rv_generic._munp.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._munp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._munp.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._munp.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._munp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._munp.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._munp', ['n'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_munp', localization, ['n'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_munp(...)' code ##################

        
        # Assigning a Call to a Name (line 784):
        
        # Assigning a Call to a Name (line 784):
        
        # Call to seterr(...): (line 784)
        # Processing the call keyword arguments (line 784)
        str_610916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 31), 'str', 'ignore')
        keyword_610917 = str_610916
        kwargs_610918 = {'all': keyword_610917}
        # Getting the type of 'np' (line 784)
        np_610914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 17), 'np', False)
        # Obtaining the member 'seterr' of a type (line 784)
        seterr_610915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 784, 17), np_610914, 'seterr')
        # Calling seterr(args, kwargs) (line 784)
        seterr_call_result_610919 = invoke(stypy.reporting.localization.Localization(__file__, 784, 17), seterr_610915, *[], **kwargs_610918)
        
        # Assigning a type to the variable 'olderr' (line 784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 784, 8), 'olderr', seterr_call_result_610919)
        
        # Assigning a Call to a Name (line 785):
        
        # Assigning a Call to a Name (line 785):
        
        # Call to generic_moment(...): (line 785)
        # Processing the call arguments (line 785)
        # Getting the type of 'n' (line 785)
        n_610922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 35), 'n', False)
        # Getting the type of 'args' (line 785)
        args_610923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 39), 'args', False)
        # Processing the call keyword arguments (line 785)
        kwargs_610924 = {}
        # Getting the type of 'self' (line 785)
        self_610920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 15), 'self', False)
        # Obtaining the member 'generic_moment' of a type (line 785)
        generic_moment_610921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 15), self_610920, 'generic_moment')
        # Calling generic_moment(args, kwargs) (line 785)
        generic_moment_call_result_610925 = invoke(stypy.reporting.localization.Localization(__file__, 785, 15), generic_moment_610921, *[n_610922, args_610923], **kwargs_610924)
        
        # Assigning a type to the variable 'vals' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'vals', generic_moment_call_result_610925)
        
        # Call to seterr(...): (line 786)
        # Processing the call keyword arguments (line 786)
        # Getting the type of 'olderr' (line 786)
        olderr_610928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 20), 'olderr', False)
        kwargs_610929 = {'olderr_610928': olderr_610928}
        # Getting the type of 'np' (line 786)
        np_610926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 8), 'np', False)
        # Obtaining the member 'seterr' of a type (line 786)
        seterr_610927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 8), np_610926, 'seterr')
        # Calling seterr(args, kwargs) (line 786)
        seterr_call_result_610930 = invoke(stypy.reporting.localization.Localization(__file__, 786, 8), seterr_610927, *[], **kwargs_610929)
        
        # Getting the type of 'vals' (line 787)
        vals_610931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 15), 'vals')
        # Assigning a type to the variable 'stypy_return_type' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'stypy_return_type', vals_610931)
        
        # ################# End of '_munp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_munp' in the type store
        # Getting the type of 'stypy_return_type' (line 782)
        stypy_return_type_610932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_610932)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_munp'
        return stypy_return_type_610932


    @norecursion
    def _argcheck_rvs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_argcheck_rvs'
        module_type_store = module_type_store.open_function_context('_argcheck_rvs', 789, 4, False)
        # Assigning a type to the variable 'self' (line 790)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_function_name', 'rv_generic._argcheck_rvs')
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._argcheck_rvs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._argcheck_rvs', [], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_argcheck_rvs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_argcheck_rvs(...)' code ##################

        
        # Assigning a Call to a Name (line 800):
        
        # Assigning a Call to a Name (line 800):
        
        # Call to get(...): (line 800)
        # Processing the call arguments (line 800)
        str_610935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 800, 26), 'str', 'size')
        # Getting the type of 'None' (line 800)
        None_610936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 34), 'None', False)
        # Processing the call keyword arguments (line 800)
        kwargs_610937 = {}
        # Getting the type of 'kwargs' (line 800)
        kwargs_610933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 15), 'kwargs', False)
        # Obtaining the member 'get' of a type (line 800)
        get_610934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 15), kwargs_610933, 'get')
        # Calling get(args, kwargs) (line 800)
        get_call_result_610938 = invoke(stypy.reporting.localization.Localization(__file__, 800, 15), get_610934, *[str_610935, None_610936], **kwargs_610937)
        
        # Assigning a type to the variable 'size' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'size', get_call_result_610938)
        
        # Assigning a Call to a Name (line 801):
        
        # Assigning a Call to a Name (line 801):
        
        # Call to broadcast_arrays(...): (line 801)
        # Getting the type of 'args' (line 801)
        args_610941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 41), 'args', False)
        # Processing the call keyword arguments (line 801)
        kwargs_610942 = {}
        # Getting the type of 'np' (line 801)
        np_610939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 20), 'np', False)
        # Obtaining the member 'broadcast_arrays' of a type (line 801)
        broadcast_arrays_610940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 20), np_610939, 'broadcast_arrays')
        # Calling broadcast_arrays(args, kwargs) (line 801)
        broadcast_arrays_call_result_610943 = invoke(stypy.reporting.localization.Localization(__file__, 801, 20), broadcast_arrays_610940, *[args_610941], **kwargs_610942)
        
        # Assigning a type to the variable 'all_bcast' (line 801)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 801, 8), 'all_bcast', broadcast_arrays_call_result_610943)

        @norecursion
        def squeeze_left(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'squeeze_left'
            module_type_store = module_type_store.open_function_context('squeeze_left', 803, 8, False)
            
            # Passed parameters checking function
            squeeze_left.stypy_localization = localization
            squeeze_left.stypy_type_of_self = None
            squeeze_left.stypy_type_store = module_type_store
            squeeze_left.stypy_function_name = 'squeeze_left'
            squeeze_left.stypy_param_names_list = ['a']
            squeeze_left.stypy_varargs_param_name = None
            squeeze_left.stypy_kwargs_param_name = None
            squeeze_left.stypy_call_defaults = defaults
            squeeze_left.stypy_call_varargs = varargs
            squeeze_left.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'squeeze_left', ['a'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'squeeze_left', localization, ['a'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'squeeze_left(...)' code ##################

            
            
            # Evaluating a boolean operation
            
            # Getting the type of 'a' (line 804)
            a_610944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 18), 'a')
            # Obtaining the member 'ndim' of a type (line 804)
            ndim_610945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 18), a_610944, 'ndim')
            int_610946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 27), 'int')
            # Applying the binary operator '>' (line 804)
            result_gt_610947 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 18), '>', ndim_610945, int_610946)
            
            
            
            # Obtaining the type of the subscript
            int_610948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 41), 'int')
            # Getting the type of 'a' (line 804)
            a_610949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 33), 'a')
            # Obtaining the member 'shape' of a type (line 804)
            shape_610950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 33), a_610949, 'shape')
            # Obtaining the member '__getitem__' of a type (line 804)
            getitem___610951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 33), shape_610950, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 804)
            subscript_call_result_610952 = invoke(stypy.reporting.localization.Localization(__file__, 804, 33), getitem___610951, int_610948)
            
            int_610953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 47), 'int')
            # Applying the binary operator '==' (line 804)
            result_eq_610954 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 33), '==', subscript_call_result_610952, int_610953)
            
            # Applying the binary operator 'and' (line 804)
            result_and_keyword_610955 = python_operator(stypy.reporting.localization.Localization(__file__, 804, 18), 'and', result_gt_610947, result_eq_610954)
            
            # Testing the type of an if condition (line 804)
            is_suitable_condition(stypy.reporting.localization.Localization(__file__, 804, 12), result_and_keyword_610955)
            # SSA begins for while statement (line 804)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            # Assigning a Subscript to a Name (line 805):
            
            # Assigning a Subscript to a Name (line 805):
            
            # Obtaining the type of the subscript
            int_610956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 22), 'int')
            # Getting the type of 'a' (line 805)
            a_610957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 20), 'a')
            # Obtaining the member '__getitem__' of a type (line 805)
            getitem___610958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 20), a_610957, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 805)
            subscript_call_result_610959 = invoke(stypy.reporting.localization.Localization(__file__, 805, 20), getitem___610958, int_610956)
            
            # Assigning a type to the variable 'a' (line 805)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 16), 'a', subscript_call_result_610959)
            # SSA join for while statement (line 804)
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'a' (line 806)
            a_610960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 19), 'a')
            # Assigning a type to the variable 'stypy_return_type' (line 806)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 12), 'stypy_return_type', a_610960)
            
            # ################# End of 'squeeze_left(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'squeeze_left' in the type store
            # Getting the type of 'stypy_return_type' (line 803)
            stypy_return_type_610961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_610961)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'squeeze_left'
            return stypy_return_type_610961

        # Assigning a type to the variable 'squeeze_left' (line 803)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 803, 8), 'squeeze_left', squeeze_left)
        
        # Assigning a ListComp to a Name (line 819):
        
        # Assigning a ListComp to a Name (line 819):
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'all_bcast' (line 819)
        all_bcast_610966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 46), 'all_bcast')
        comprehension_610967 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 21), all_bcast_610966)
        # Assigning a type to the variable 'a' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 21), 'a', comprehension_610967)
        
        # Call to squeeze_left(...): (line 819)
        # Processing the call arguments (line 819)
        # Getting the type of 'a' (line 819)
        a_610963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 34), 'a', False)
        # Processing the call keyword arguments (line 819)
        kwargs_610964 = {}
        # Getting the type of 'squeeze_left' (line 819)
        squeeze_left_610962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 21), 'squeeze_left', False)
        # Calling squeeze_left(args, kwargs) (line 819)
        squeeze_left_call_result_610965 = invoke(stypy.reporting.localization.Localization(__file__, 819, 21), squeeze_left_610962, *[a_610963], **kwargs_610964)
        
        list_610968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 21), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 819, 21), list_610968, squeeze_left_call_result_610965)
        # Assigning a type to the variable 'all_bcast' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 8), 'all_bcast', list_610968)
        
        # Assigning a Attribute to a Name (line 820):
        
        # Assigning a Attribute to a Name (line 820):
        
        # Obtaining the type of the subscript
        int_610969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 32), 'int')
        # Getting the type of 'all_bcast' (line 820)
        all_bcast_610970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 22), 'all_bcast')
        # Obtaining the member '__getitem__' of a type (line 820)
        getitem___610971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 22), all_bcast_610970, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 820)
        subscript_call_result_610972 = invoke(stypy.reporting.localization.Localization(__file__, 820, 22), getitem___610971, int_610969)
        
        # Obtaining the member 'shape' of a type (line 820)
        shape_610973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 22), subscript_call_result_610972, 'shape')
        # Assigning a type to the variable 'bcast_shape' (line 820)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 8), 'bcast_shape', shape_610973)
        
        # Assigning a Attribute to a Name (line 821):
        
        # Assigning a Attribute to a Name (line 821):
        
        # Obtaining the type of the subscript
        int_610974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 31), 'int')
        # Getting the type of 'all_bcast' (line 821)
        all_bcast_610975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 21), 'all_bcast')
        # Obtaining the member '__getitem__' of a type (line 821)
        getitem___610976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 21), all_bcast_610975, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 821)
        subscript_call_result_610977 = invoke(stypy.reporting.localization.Localization(__file__, 821, 21), getitem___610976, int_610974)
        
        # Obtaining the member 'ndim' of a type (line 821)
        ndim_610978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 21), subscript_call_result_610977, 'ndim')
        # Assigning a type to the variable 'bcast_ndim' (line 821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 8), 'bcast_ndim', ndim_610978)
        
        # Type idiom detected: calculating its left and rigth part (line 823)
        # Getting the type of 'size' (line 823)
        size_610979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 11), 'size')
        # Getting the type of 'None' (line 823)
        None_610980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 19), 'None')
        
        (may_be_610981, more_types_in_union_610982) = may_be_none(size_610979, None_610980)

        if may_be_610981:

            if more_types_in_union_610982:
                # Runtime conditional SSA (line 823)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Name (line 824):
            
            # Assigning a Name to a Name (line 824):
            # Getting the type of 'bcast_shape' (line 824)
            bcast_shape_610983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 20), 'bcast_shape')
            # Assigning a type to the variable 'size_' (line 824)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 824, 12), 'size_', bcast_shape_610983)

            if more_types_in_union_610982:
                # Runtime conditional SSA for else branch (line 823)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_610981) or more_types_in_union_610982):
            
            # Assigning a Call to a Name (line 826):
            
            # Assigning a Call to a Name (line 826):
            
            # Call to tuple(...): (line 826)
            # Processing the call arguments (line 826)
            
            # Call to atleast_1d(...): (line 826)
            # Processing the call arguments (line 826)
            # Getting the type of 'size' (line 826)
            size_610987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 40), 'size', False)
            # Processing the call keyword arguments (line 826)
            kwargs_610988 = {}
            # Getting the type of 'np' (line 826)
            np_610985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 26), 'np', False)
            # Obtaining the member 'atleast_1d' of a type (line 826)
            atleast_1d_610986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 26), np_610985, 'atleast_1d')
            # Calling atleast_1d(args, kwargs) (line 826)
            atleast_1d_call_result_610989 = invoke(stypy.reporting.localization.Localization(__file__, 826, 26), atleast_1d_610986, *[size_610987], **kwargs_610988)
            
            # Processing the call keyword arguments (line 826)
            kwargs_610990 = {}
            # Getting the type of 'tuple' (line 826)
            tuple_610984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 20), 'tuple', False)
            # Calling tuple(args, kwargs) (line 826)
            tuple_call_result_610991 = invoke(stypy.reporting.localization.Localization(__file__, 826, 20), tuple_610984, *[atleast_1d_call_result_610989], **kwargs_610990)
            
            # Assigning a type to the variable 'size_' (line 826)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 12), 'size_', tuple_call_result_610991)

            if (may_be_610981 and more_types_in_union_610982):
                # SSA join for if statement (line 823)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a BinOp to a Name (line 838):
        
        # Assigning a BinOp to a Name (line 838):
        # Getting the type of 'bcast_ndim' (line 838)
        bcast_ndim_610992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 16), 'bcast_ndim')
        
        # Call to len(...): (line 838)
        # Processing the call arguments (line 838)
        # Getting the type of 'size_' (line 838)
        size__610994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 33), 'size_', False)
        # Processing the call keyword arguments (line 838)
        kwargs_610995 = {}
        # Getting the type of 'len' (line 838)
        len_610993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 29), 'len', False)
        # Calling len(args, kwargs) (line 838)
        len_call_result_610996 = invoke(stypy.reporting.localization.Localization(__file__, 838, 29), len_610993, *[size__610994], **kwargs_610995)
        
        # Applying the binary operator '-' (line 838)
        result_sub_610997 = python_operator(stypy.reporting.localization.Localization(__file__, 838, 16), '-', bcast_ndim_610992, len_call_result_610996)
        
        # Assigning a type to the variable 'ndiff' (line 838)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 8), 'ndiff', result_sub_610997)
        
        
        # Getting the type of 'ndiff' (line 839)
        ndiff_610998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 11), 'ndiff')
        int_610999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 19), 'int')
        # Applying the binary operator '<' (line 839)
        result_lt_611000 = python_operator(stypy.reporting.localization.Localization(__file__, 839, 11), '<', ndiff_610998, int_610999)
        
        # Testing the type of an if condition (line 839)
        if_condition_611001 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 839, 8), result_lt_611000)
        # Assigning a type to the variable 'if_condition_611001' (line 839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 839, 8), 'if_condition_611001', if_condition_611001)
        # SSA begins for if statement (line 839)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 840):
        
        # Assigning a BinOp to a Name (line 840):
        
        # Obtaining an instance of the builtin type 'tuple' (line 840)
        tuple_611002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 840)
        # Adding element type (line 840)
        int_611003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 27), tuple_611002, int_611003)
        
        
        # Getting the type of 'ndiff' (line 840)
        ndiff_611004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 33), 'ndiff')
        # Applying the 'usub' unary operator (line 840)
        result___neg___611005 = python_operator(stypy.reporting.localization.Localization(__file__, 840, 32), 'usub', ndiff_611004)
        
        # Applying the binary operator '*' (line 840)
        result_mul_611006 = python_operator(stypy.reporting.localization.Localization(__file__, 840, 26), '*', tuple_611002, result___neg___611005)
        
        # Getting the type of 'bcast_shape' (line 840)
        bcast_shape_611007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 42), 'bcast_shape')
        # Applying the binary operator '+' (line 840)
        result_add_611008 = python_operator(stypy.reporting.localization.Localization(__file__, 840, 26), '+', result_mul_611006, bcast_shape_611007)
        
        # Assigning a type to the variable 'bcast_shape' (line 840)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 840, 12), 'bcast_shape', result_add_611008)
        # SSA branch for the else part of an if statement (line 839)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'ndiff' (line 841)
        ndiff_611009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 13), 'ndiff')
        int_611010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 21), 'int')
        # Applying the binary operator '>' (line 841)
        result_gt_611011 = python_operator(stypy.reporting.localization.Localization(__file__, 841, 13), '>', ndiff_611009, int_611010)
        
        # Testing the type of an if condition (line 841)
        if_condition_611012 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 841, 13), result_gt_611011)
        # Assigning a type to the variable 'if_condition_611012' (line 841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 13), 'if_condition_611012', if_condition_611012)
        # SSA begins for if statement (line 841)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 842):
        
        # Assigning a BinOp to a Name (line 842):
        
        # Obtaining an instance of the builtin type 'tuple' (line 842)
        tuple_611013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 842)
        # Adding element type (line 842)
        int_611014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 842, 21), tuple_611013, int_611014)
        
        # Getting the type of 'ndiff' (line 842)
        ndiff_611015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 25), 'ndiff')
        # Applying the binary operator '*' (line 842)
        result_mul_611016 = python_operator(stypy.reporting.localization.Localization(__file__, 842, 20), '*', tuple_611013, ndiff_611015)
        
        # Getting the type of 'size_' (line 842)
        size__611017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 33), 'size_')
        # Applying the binary operator '+' (line 842)
        result_add_611018 = python_operator(stypy.reporting.localization.Localization(__file__, 842, 20), '+', result_mul_611016, size__611017)
        
        # Assigning a type to the variable 'size_' (line 842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 12), 'size_', result_add_611018)
        # SSA join for if statement (line 841)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 839)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 848):
        
        # Assigning a Call to a Name (line 848):
        
        # Call to all(...): (line 848)
        # Processing the call arguments (line 848)
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to zip(...): (line 849)
        # Processing the call arguments (line 849)
        # Getting the type of 'bcast_shape' (line 849)
        bcast_shape_611028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 44), 'bcast_shape', False)
        # Getting the type of 'size_' (line 849)
        size__611029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 57), 'size_', False)
        # Processing the call keyword arguments (line 849)
        kwargs_611030 = {}
        # Getting the type of 'zip' (line 849)
        zip_611027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 40), 'zip', False)
        # Calling zip(args, kwargs) (line 849)
        zip_call_result_611031 = invoke(stypy.reporting.localization.Localization(__file__, 849, 40), zip_611027, *[bcast_shape_611028, size__611029], **kwargs_611030)
        
        comprehension_611032 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 18), zip_call_result_611031)
        # Assigning a type to the variable 'bcdim' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 18), 'bcdim', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 18), comprehension_611032))
        # Assigning a type to the variable 'szdim' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 18), 'szdim', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 18), comprehension_611032))
        
        # Evaluating a boolean operation
        
        # Getting the type of 'bcdim' (line 848)
        bcdim_611020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 18), 'bcdim', False)
        int_611021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 27), 'int')
        # Applying the binary operator '==' (line 848)
        result_eq_611022 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 18), '==', bcdim_611020, int_611021)
        
        
        # Getting the type of 'bcdim' (line 848)
        bcdim_611023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 32), 'bcdim', False)
        # Getting the type of 'szdim' (line 848)
        szdim_611024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 41), 'szdim', False)
        # Applying the binary operator '==' (line 848)
        result_eq_611025 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 32), '==', bcdim_611023, szdim_611024)
        
        # Applying the binary operator 'or' (line 848)
        result_or_keyword_611026 = python_operator(stypy.reporting.localization.Localization(__file__, 848, 18), 'or', result_eq_611022, result_eq_611025)
        
        list_611033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 18), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 848, 18), list_611033, result_or_keyword_611026)
        # Processing the call keyword arguments (line 848)
        kwargs_611034 = {}
        # Getting the type of 'all' (line 848)
        all_611019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 13), 'all', False)
        # Calling all(args, kwargs) (line 848)
        all_call_result_611035 = invoke(stypy.reporting.localization.Localization(__file__, 848, 13), all_611019, *[list_611033], **kwargs_611034)
        
        # Assigning a type to the variable 'ok' (line 848)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 8), 'ok', all_call_result_611035)
        
        
        # Getting the type of 'ok' (line 850)
        ok_611036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 15), 'ok')
        # Applying the 'not' unary operator (line 850)
        result_not__611037 = python_operator(stypy.reporting.localization.Localization(__file__, 850, 11), 'not', ok_611036)
        
        # Testing the type of an if condition (line 850)
        if_condition_611038 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 850, 8), result_not__611037)
        # Assigning a type to the variable 'if_condition_611038' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'if_condition_611038', if_condition_611038)
        # SSA begins for if statement (line 850)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 851)
        # Processing the call arguments (line 851)
        str_611040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 29), 'str', 'size does not match the broadcast shape of the parameters.')
        # Processing the call keyword arguments (line 851)
        kwargs_611041 = {}
        # Getting the type of 'ValueError' (line 851)
        ValueError_611039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 851)
        ValueError_call_result_611042 = invoke(stypy.reporting.localization.Localization(__file__, 851, 18), ValueError_611039, *[str_611040], **kwargs_611041)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 851, 12), ValueError_call_result_611042, 'raise parameter', BaseException)
        # SSA join for if statement (line 850)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Subscript to a Name (line 854):
        
        # Assigning a Subscript to a Name (line 854):
        
        # Obtaining the type of the subscript
        int_611043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 33), 'int')
        slice_611044 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 854, 22), None, int_611043, None)
        # Getting the type of 'all_bcast' (line 854)
        all_bcast_611045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 22), 'all_bcast')
        # Obtaining the member '__getitem__' of a type (line 854)
        getitem___611046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 22), all_bcast_611045, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 854)
        subscript_call_result_611047 = invoke(stypy.reporting.localization.Localization(__file__, 854, 22), getitem___611046, slice_611044)
        
        # Assigning a type to the variable 'param_bcast' (line 854)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 854, 8), 'param_bcast', subscript_call_result_611047)
        
        # Assigning a Subscript to a Name (line 855):
        
        # Assigning a Subscript to a Name (line 855):
        
        # Obtaining the type of the subscript
        int_611048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 30), 'int')
        # Getting the type of 'all_bcast' (line 855)
        all_bcast_611049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 20), 'all_bcast')
        # Obtaining the member '__getitem__' of a type (line 855)
        getitem___611050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 20), all_bcast_611049, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 855)
        subscript_call_result_611051 = invoke(stypy.reporting.localization.Localization(__file__, 855, 20), getitem___611050, int_611048)
        
        # Assigning a type to the variable 'loc_bcast' (line 855)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 8), 'loc_bcast', subscript_call_result_611051)
        
        # Assigning a Subscript to a Name (line 856):
        
        # Assigning a Subscript to a Name (line 856):
        
        # Obtaining the type of the subscript
        int_611052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 32), 'int')
        # Getting the type of 'all_bcast' (line 856)
        all_bcast_611053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 22), 'all_bcast')
        # Obtaining the member '__getitem__' of a type (line 856)
        getitem___611054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 22), all_bcast_611053, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 856)
        subscript_call_result_611055 = invoke(stypy.reporting.localization.Localization(__file__, 856, 22), getitem___611054, int_611052)
        
        # Assigning a type to the variable 'scale_bcast' (line 856)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 856, 8), 'scale_bcast', subscript_call_result_611055)
        
        # Obtaining an instance of the builtin type 'tuple' (line 858)
        tuple_611056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 858)
        # Adding element type (line 858)
        # Getting the type of 'param_bcast' (line 858)
        param_bcast_611057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 15), 'param_bcast')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 15), tuple_611056, param_bcast_611057)
        # Adding element type (line 858)
        # Getting the type of 'loc_bcast' (line 858)
        loc_bcast_611058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 28), 'loc_bcast')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 15), tuple_611056, loc_bcast_611058)
        # Adding element type (line 858)
        # Getting the type of 'scale_bcast' (line 858)
        scale_bcast_611059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 39), 'scale_bcast')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 15), tuple_611056, scale_bcast_611059)
        # Adding element type (line 858)
        # Getting the type of 'size_' (line 858)
        size__611060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 52), 'size_')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 858, 15), tuple_611056, size__611060)
        
        # Assigning a type to the variable 'stypy_return_type' (line 858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 858, 8), 'stypy_return_type', tuple_611056)
        
        # ################# End of '_argcheck_rvs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_argcheck_rvs' in the type store
        # Getting the type of 'stypy_return_type' (line 789)
        stypy_return_type_611061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611061)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_argcheck_rvs'
        return stypy_return_type_611061


    @norecursion
    def _argcheck(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_argcheck'
        module_type_store = module_type_store.open_function_context('_argcheck', 863, 4, False)
        # Assigning a type to the variable 'self' (line 864)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 864, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._argcheck.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._argcheck.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._argcheck.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._argcheck.__dict__.__setitem__('stypy_function_name', 'rv_generic._argcheck')
        rv_generic._argcheck.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic._argcheck.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._argcheck.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._argcheck.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._argcheck.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._argcheck.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._argcheck.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._argcheck', [], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_argcheck', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_argcheck(...)' code ##################

        str_611062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, (-1)), 'str', "Default check for correct values on args and keywords.\n\n        Returns condition array of 1's where arguments are correct and\n         0's where they are not.\n\n        ")
        
        # Assigning a Num to a Name (line 870):
        
        # Assigning a Num to a Name (line 870):
        int_611063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 15), 'int')
        # Assigning a type to the variable 'cond' (line 870)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 870, 8), 'cond', int_611063)
        
        # Getting the type of 'args' (line 871)
        args_611064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 19), 'args')
        # Testing the type of a for loop iterable (line 871)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 871, 8), args_611064)
        # Getting the type of the for loop variable (line 871)
        for_loop_var_611065 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 871, 8), args_611064)
        # Assigning a type to the variable 'arg' (line 871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 8), 'arg', for_loop_var_611065)
        # SSA begins for a for statement (line 871)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 872):
        
        # Assigning a Call to a Name (line 872):
        
        # Call to logical_and(...): (line 872)
        # Processing the call arguments (line 872)
        # Getting the type of 'cond' (line 872)
        cond_611067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 31), 'cond', False)
        
        
        # Call to asarray(...): (line 872)
        # Processing the call arguments (line 872)
        # Getting the type of 'arg' (line 872)
        arg_611069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 46), 'arg', False)
        # Processing the call keyword arguments (line 872)
        kwargs_611070 = {}
        # Getting the type of 'asarray' (line 872)
        asarray_611068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 38), 'asarray', False)
        # Calling asarray(args, kwargs) (line 872)
        asarray_call_result_611071 = invoke(stypy.reporting.localization.Localization(__file__, 872, 38), asarray_611068, *[arg_611069], **kwargs_611070)
        
        int_611072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 53), 'int')
        # Applying the binary operator '>' (line 872)
        result_gt_611073 = python_operator(stypy.reporting.localization.Localization(__file__, 872, 38), '>', asarray_call_result_611071, int_611072)
        
        # Processing the call keyword arguments (line 872)
        kwargs_611074 = {}
        # Getting the type of 'logical_and' (line 872)
        logical_and_611066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 19), 'logical_and', False)
        # Calling logical_and(args, kwargs) (line 872)
        logical_and_call_result_611075 = invoke(stypy.reporting.localization.Localization(__file__, 872, 19), logical_and_611066, *[cond_611067, result_gt_611073], **kwargs_611074)
        
        # Assigning a type to the variable 'cond' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'cond', logical_and_call_result_611075)
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'cond' (line 873)
        cond_611076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 15), 'cond')
        # Assigning a type to the variable 'stypy_return_type' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'stypy_return_type', cond_611076)
        
        # ################# End of '_argcheck(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_argcheck' in the type store
        # Getting the type of 'stypy_return_type' (line 863)
        stypy_return_type_611077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611077)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_argcheck'
        return stypy_return_type_611077


    @norecursion
    def _support_mask(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_support_mask'
        module_type_store = module_type_store.open_function_context('_support_mask', 875, 4, False)
        # Assigning a type to the variable 'self' (line 876)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 876, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._support_mask.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._support_mask.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._support_mask.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._support_mask.__dict__.__setitem__('stypy_function_name', 'rv_generic._support_mask')
        rv_generic._support_mask.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_generic._support_mask.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_generic._support_mask.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._support_mask.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._support_mask.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._support_mask.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._support_mask.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._support_mask', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_support_mask', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_support_mask(...)' code ##################

        
        # Getting the type of 'self' (line 876)
        self_611078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 16), 'self')
        # Obtaining the member 'a' of a type (line 876)
        a_611079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 16), self_611078, 'a')
        # Getting the type of 'x' (line 876)
        x_611080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 26), 'x')
        # Applying the binary operator '<=' (line 876)
        result_le_611081 = python_operator(stypy.reporting.localization.Localization(__file__, 876, 16), '<=', a_611079, x_611080)
        
        
        # Getting the type of 'x' (line 876)
        x_611082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 32), 'x')
        # Getting the type of 'self' (line 876)
        self_611083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 37), 'self')
        # Obtaining the member 'b' of a type (line 876)
        b_611084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 37), self_611083, 'b')
        # Applying the binary operator '<=' (line 876)
        result_le_611085 = python_operator(stypy.reporting.localization.Localization(__file__, 876, 32), '<=', x_611082, b_611084)
        
        # Applying the binary operator '&' (line 876)
        result_and__611086 = python_operator(stypy.reporting.localization.Localization(__file__, 876, 15), '&', result_le_611081, result_le_611085)
        
        # Assigning a type to the variable 'stypy_return_type' (line 876)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 876, 8), 'stypy_return_type', result_and__611086)
        
        # ################# End of '_support_mask(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_support_mask' in the type store
        # Getting the type of 'stypy_return_type' (line 875)
        stypy_return_type_611087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611087)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_support_mask'
        return stypy_return_type_611087


    @norecursion
    def _open_support_mask(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_open_support_mask'
        module_type_store = module_type_store.open_function_context('_open_support_mask', 878, 4, False)
        # Assigning a type to the variable 'self' (line 879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 879, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_function_name', 'rv_generic._open_support_mask')
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._open_support_mask.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._open_support_mask', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_open_support_mask', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_open_support_mask(...)' code ##################

        
        # Getting the type of 'self' (line 879)
        self_611088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 16), 'self')
        # Obtaining the member 'a' of a type (line 879)
        a_611089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 16), self_611088, 'a')
        # Getting the type of 'x' (line 879)
        x_611090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 25), 'x')
        # Applying the binary operator '<' (line 879)
        result_lt_611091 = python_operator(stypy.reporting.localization.Localization(__file__, 879, 16), '<', a_611089, x_611090)
        
        
        # Getting the type of 'x' (line 879)
        x_611092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 31), 'x')
        # Getting the type of 'self' (line 879)
        self_611093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 35), 'self')
        # Obtaining the member 'b' of a type (line 879)
        b_611094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 35), self_611093, 'b')
        # Applying the binary operator '<' (line 879)
        result_lt_611095 = python_operator(stypy.reporting.localization.Localization(__file__, 879, 31), '<', x_611092, b_611094)
        
        # Applying the binary operator '&' (line 879)
        result_and__611096 = python_operator(stypy.reporting.localization.Localization(__file__, 879, 15), '&', result_lt_611091, result_lt_611095)
        
        # Assigning a type to the variable 'stypy_return_type' (line 879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 879, 8), 'stypy_return_type', result_and__611096)
        
        # ################# End of '_open_support_mask(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_open_support_mask' in the type store
        # Getting the type of 'stypy_return_type' (line 878)
        stypy_return_type_611097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611097)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_open_support_mask'
        return stypy_return_type_611097


    @norecursion
    def _rvs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_rvs'
        module_type_store = module_type_store.open_function_context('_rvs', 881, 4, False)
        # Assigning a type to the variable 'self' (line 882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 882, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._rvs.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._rvs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._rvs.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._rvs.__dict__.__setitem__('stypy_function_name', 'rv_generic._rvs')
        rv_generic._rvs.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic._rvs.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._rvs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._rvs.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._rvs.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._rvs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._rvs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._rvs', [], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_rvs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_rvs(...)' code ##################

        
        # Assigning a Call to a Name (line 888):
        
        # Assigning a Call to a Name (line 888):
        
        # Call to random_sample(...): (line 888)
        # Processing the call arguments (line 888)
        # Getting the type of 'self' (line 888)
        self_611101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 45), 'self', False)
        # Obtaining the member '_size' of a type (line 888)
        _size_611102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 45), self_611101, '_size')
        # Processing the call keyword arguments (line 888)
        kwargs_611103 = {}
        # Getting the type of 'self' (line 888)
        self_611098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 12), 'self', False)
        # Obtaining the member '_random_state' of a type (line 888)
        _random_state_611099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 12), self_611098, '_random_state')
        # Obtaining the member 'random_sample' of a type (line 888)
        random_sample_611100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 12), _random_state_611099, 'random_sample')
        # Calling random_sample(args, kwargs) (line 888)
        random_sample_call_result_611104 = invoke(stypy.reporting.localization.Localization(__file__, 888, 12), random_sample_611100, *[_size_611102], **kwargs_611103)
        
        # Assigning a type to the variable 'U' (line 888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 8), 'U', random_sample_call_result_611104)
        
        # Assigning a Call to a Name (line 889):
        
        # Assigning a Call to a Name (line 889):
        
        # Call to _ppf(...): (line 889)
        # Processing the call arguments (line 889)
        # Getting the type of 'U' (line 889)
        U_611107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 22), 'U', False)
        # Getting the type of 'args' (line 889)
        args_611108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 26), 'args', False)
        # Processing the call keyword arguments (line 889)
        kwargs_611109 = {}
        # Getting the type of 'self' (line 889)
        self_611105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 12), 'self', False)
        # Obtaining the member '_ppf' of a type (line 889)
        _ppf_611106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 12), self_611105, '_ppf')
        # Calling _ppf(args, kwargs) (line 889)
        _ppf_call_result_611110 = invoke(stypy.reporting.localization.Localization(__file__, 889, 12), _ppf_611106, *[U_611107, args_611108], **kwargs_611109)
        
        # Assigning a type to the variable 'Y' (line 889)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 8), 'Y', _ppf_call_result_611110)
        # Getting the type of 'Y' (line 890)
        Y_611111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 15), 'Y')
        # Assigning a type to the variable 'stypy_return_type' (line 890)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 890, 8), 'stypy_return_type', Y_611111)
        
        # ################# End of '_rvs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_rvs' in the type store
        # Getting the type of 'stypy_return_type' (line 881)
        stypy_return_type_611112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611112)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_rvs'
        return stypy_return_type_611112


    @norecursion
    def _logcdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_logcdf'
        module_type_store = module_type_store.open_function_context('_logcdf', 892, 4, False)
        # Assigning a type to the variable 'self' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._logcdf.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._logcdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._logcdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._logcdf.__dict__.__setitem__('stypy_function_name', 'rv_generic._logcdf')
        rv_generic._logcdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_generic._logcdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._logcdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._logcdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._logcdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._logcdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._logcdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._logcdf', ['x'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_logcdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_logcdf(...)' code ##################

        
        # Call to log(...): (line 893)
        # Processing the call arguments (line 893)
        
        # Call to _cdf(...): (line 893)
        # Processing the call arguments (line 893)
        # Getting the type of 'x' (line 893)
        x_611116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 29), 'x', False)
        # Getting the type of 'args' (line 893)
        args_611117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 33), 'args', False)
        # Processing the call keyword arguments (line 893)
        kwargs_611118 = {}
        # Getting the type of 'self' (line 893)
        self_611114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 19), 'self', False)
        # Obtaining the member '_cdf' of a type (line 893)
        _cdf_611115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 19), self_611114, '_cdf')
        # Calling _cdf(args, kwargs) (line 893)
        _cdf_call_result_611119 = invoke(stypy.reporting.localization.Localization(__file__, 893, 19), _cdf_611115, *[x_611116, args_611117], **kwargs_611118)
        
        # Processing the call keyword arguments (line 893)
        kwargs_611120 = {}
        # Getting the type of 'log' (line 893)
        log_611113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 15), 'log', False)
        # Calling log(args, kwargs) (line 893)
        log_call_result_611121 = invoke(stypy.reporting.localization.Localization(__file__, 893, 15), log_611113, *[_cdf_call_result_611119], **kwargs_611120)
        
        # Assigning a type to the variable 'stypy_return_type' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'stypy_return_type', log_call_result_611121)
        
        # ################# End of '_logcdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_logcdf' in the type store
        # Getting the type of 'stypy_return_type' (line 892)
        stypy_return_type_611122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611122)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_logcdf'
        return stypy_return_type_611122


    @norecursion
    def _sf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_sf'
        module_type_store = module_type_store.open_function_context('_sf', 895, 4, False)
        # Assigning a type to the variable 'self' (line 896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._sf.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._sf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._sf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._sf.__dict__.__setitem__('stypy_function_name', 'rv_generic._sf')
        rv_generic._sf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_generic._sf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._sf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._sf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._sf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._sf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._sf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._sf', ['x'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_sf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_sf(...)' code ##################

        float_611123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 15), 'float')
        
        # Call to _cdf(...): (line 896)
        # Processing the call arguments (line 896)
        # Getting the type of 'x' (line 896)
        x_611126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 29), 'x', False)
        # Getting the type of 'args' (line 896)
        args_611127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 33), 'args', False)
        # Processing the call keyword arguments (line 896)
        kwargs_611128 = {}
        # Getting the type of 'self' (line 896)
        self_611124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 19), 'self', False)
        # Obtaining the member '_cdf' of a type (line 896)
        _cdf_611125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 19), self_611124, '_cdf')
        # Calling _cdf(args, kwargs) (line 896)
        _cdf_call_result_611129 = invoke(stypy.reporting.localization.Localization(__file__, 896, 19), _cdf_611125, *[x_611126, args_611127], **kwargs_611128)
        
        # Applying the binary operator '-' (line 896)
        result_sub_611130 = python_operator(stypy.reporting.localization.Localization(__file__, 896, 15), '-', float_611123, _cdf_call_result_611129)
        
        # Assigning a type to the variable 'stypy_return_type' (line 896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 8), 'stypy_return_type', result_sub_611130)
        
        # ################# End of '_sf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_sf' in the type store
        # Getting the type of 'stypy_return_type' (line 895)
        stypy_return_type_611131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611131)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_sf'
        return stypy_return_type_611131


    @norecursion
    def _logsf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_logsf'
        module_type_store = module_type_store.open_function_context('_logsf', 898, 4, False)
        # Assigning a type to the variable 'self' (line 899)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 899, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._logsf.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._logsf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._logsf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._logsf.__dict__.__setitem__('stypy_function_name', 'rv_generic._logsf')
        rv_generic._logsf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_generic._logsf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._logsf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._logsf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._logsf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._logsf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._logsf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._logsf', ['x'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_logsf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_logsf(...)' code ##################

        
        # Call to log(...): (line 899)
        # Processing the call arguments (line 899)
        
        # Call to _sf(...): (line 899)
        # Processing the call arguments (line 899)
        # Getting the type of 'x' (line 899)
        x_611135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 28), 'x', False)
        # Getting the type of 'args' (line 899)
        args_611136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 32), 'args', False)
        # Processing the call keyword arguments (line 899)
        kwargs_611137 = {}
        # Getting the type of 'self' (line 899)
        self_611133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 19), 'self', False)
        # Obtaining the member '_sf' of a type (line 899)
        _sf_611134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 899, 19), self_611133, '_sf')
        # Calling _sf(args, kwargs) (line 899)
        _sf_call_result_611138 = invoke(stypy.reporting.localization.Localization(__file__, 899, 19), _sf_611134, *[x_611135, args_611136], **kwargs_611137)
        
        # Processing the call keyword arguments (line 899)
        kwargs_611139 = {}
        # Getting the type of 'log' (line 899)
        log_611132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 15), 'log', False)
        # Calling log(args, kwargs) (line 899)
        log_call_result_611140 = invoke(stypy.reporting.localization.Localization(__file__, 899, 15), log_611132, *[_sf_call_result_611138], **kwargs_611139)
        
        # Assigning a type to the variable 'stypy_return_type' (line 899)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 899, 8), 'stypy_return_type', log_call_result_611140)
        
        # ################# End of '_logsf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_logsf' in the type store
        # Getting the type of 'stypy_return_type' (line 898)
        stypy_return_type_611141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611141)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_logsf'
        return stypy_return_type_611141


    @norecursion
    def _ppf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_ppf'
        module_type_store = module_type_store.open_function_context('_ppf', 901, 4, False)
        # Assigning a type to the variable 'self' (line 902)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 902, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._ppf.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._ppf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._ppf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._ppf.__dict__.__setitem__('stypy_function_name', 'rv_generic._ppf')
        rv_generic._ppf.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_generic._ppf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._ppf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._ppf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._ppf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._ppf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._ppf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._ppf', ['q'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_ppf', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_ppf(...)' code ##################

        
        # Call to _ppfvec(...): (line 902)
        # Processing the call arguments (line 902)
        # Getting the type of 'q' (line 902)
        q_611144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 28), 'q', False)
        # Getting the type of 'args' (line 902)
        args_611145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 32), 'args', False)
        # Processing the call keyword arguments (line 902)
        kwargs_611146 = {}
        # Getting the type of 'self' (line 902)
        self_611142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 15), 'self', False)
        # Obtaining the member '_ppfvec' of a type (line 902)
        _ppfvec_611143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 902, 15), self_611142, '_ppfvec')
        # Calling _ppfvec(args, kwargs) (line 902)
        _ppfvec_call_result_611147 = invoke(stypy.reporting.localization.Localization(__file__, 902, 15), _ppfvec_611143, *[q_611144, args_611145], **kwargs_611146)
        
        # Assigning a type to the variable 'stypy_return_type' (line 902)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 902, 8), 'stypy_return_type', _ppfvec_call_result_611147)
        
        # ################# End of '_ppf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_ppf' in the type store
        # Getting the type of 'stypy_return_type' (line 901)
        stypy_return_type_611148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611148)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_ppf'
        return stypy_return_type_611148


    @norecursion
    def _isf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_isf'
        module_type_store = module_type_store.open_function_context('_isf', 904, 4, False)
        # Assigning a type to the variable 'self' (line 905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic._isf.__dict__.__setitem__('stypy_localization', localization)
        rv_generic._isf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic._isf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic._isf.__dict__.__setitem__('stypy_function_name', 'rv_generic._isf')
        rv_generic._isf.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_generic._isf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic._isf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_generic._isf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic._isf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic._isf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic._isf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic._isf', ['q'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_isf', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_isf(...)' code ##################

        
        # Call to _ppf(...): (line 905)
        # Processing the call arguments (line 905)
        float_611151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 25), 'float')
        # Getting the type of 'q' (line 905)
        q_611152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 29), 'q', False)
        # Applying the binary operator '-' (line 905)
        result_sub_611153 = python_operator(stypy.reporting.localization.Localization(__file__, 905, 25), '-', float_611151, q_611152)
        
        # Getting the type of 'args' (line 905)
        args_611154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 33), 'args', False)
        # Processing the call keyword arguments (line 905)
        kwargs_611155 = {}
        # Getting the type of 'self' (line 905)
        self_611149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 15), 'self', False)
        # Obtaining the member '_ppf' of a type (line 905)
        _ppf_611150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 905, 15), self_611149, '_ppf')
        # Calling _ppf(args, kwargs) (line 905)
        _ppf_call_result_611156 = invoke(stypy.reporting.localization.Localization(__file__, 905, 15), _ppf_611150, *[result_sub_611153, args_611154], **kwargs_611155)
        
        # Assigning a type to the variable 'stypy_return_type' (line 905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 8), 'stypy_return_type', _ppf_call_result_611156)
        
        # ################# End of '_isf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_isf' in the type store
        # Getting the type of 'stypy_return_type' (line 904)
        stypy_return_type_611157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611157)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_isf'
        return stypy_return_type_611157


    @norecursion
    def rvs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'rvs'
        module_type_store = module_type_store.open_function_context('rvs', 909, 4, False)
        # Assigning a type to the variable 'self' (line 910)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 910, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.rvs.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.rvs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.rvs.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.rvs.__dict__.__setitem__('stypy_function_name', 'rv_generic.rvs')
        rv_generic.rvs.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.rvs.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.rvs.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.rvs.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.rvs.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.rvs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.rvs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.rvs', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'rvs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'rvs(...)' code ##################

        str_611158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 934, (-1)), 'str', '\n        Random variates of given type.\n\n        Parameters\n        ----------\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter (default=0).\n        scale : array_like, optional\n            Scale parameter (default=1).\n        size : int or tuple of ints, optional\n            Defining number of random variates (default is 1).\n        random_state : None or int or ``np.random.RandomState`` instance, optional\n            If int or RandomState, use it for drawing the random variates.\n            If None, rely on ``self.random_state``.\n            Default is None.\n\n        Returns\n        -------\n        rvs : ndarray or scalar\n            Random variates of given `size`.\n\n        ')
        
        # Assigning a Call to a Name (line 935):
        
        # Assigning a Call to a Name (line 935):
        
        # Call to pop(...): (line 935)
        # Processing the call arguments (line 935)
        str_611161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 935, 28), 'str', 'discrete')
        # Getting the type of 'None' (line 935)
        None_611162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 40), 'None', False)
        # Processing the call keyword arguments (line 935)
        kwargs_611163 = {}
        # Getting the type of 'kwds' (line 935)
        kwds_611159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 19), 'kwds', False)
        # Obtaining the member 'pop' of a type (line 935)
        pop_611160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 935, 19), kwds_611159, 'pop')
        # Calling pop(args, kwargs) (line 935)
        pop_call_result_611164 = invoke(stypy.reporting.localization.Localization(__file__, 935, 19), pop_611160, *[str_611161, None_611162], **kwargs_611163)
        
        # Assigning a type to the variable 'discrete' (line 935)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 935, 8), 'discrete', pop_call_result_611164)
        
        # Assigning a Call to a Name (line 936):
        
        # Assigning a Call to a Name (line 936):
        
        # Call to pop(...): (line 936)
        # Processing the call arguments (line 936)
        str_611167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 936, 24), 'str', 'random_state')
        # Getting the type of 'None' (line 936)
        None_611168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 40), 'None', False)
        # Processing the call keyword arguments (line 936)
        kwargs_611169 = {}
        # Getting the type of 'kwds' (line 936)
        kwds_611165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 15), 'kwds', False)
        # Obtaining the member 'pop' of a type (line 936)
        pop_611166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 936, 15), kwds_611165, 'pop')
        # Calling pop(args, kwargs) (line 936)
        pop_call_result_611170 = invoke(stypy.reporting.localization.Localization(__file__, 936, 15), pop_611166, *[str_611167, None_611168], **kwargs_611169)
        
        # Assigning a type to the variable 'rndm' (line 936)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 936, 8), 'rndm', pop_call_result_611170)
        
        # Assigning a Call to a Tuple (line 937):
        
        # Assigning a Subscript to a Name (line 937):
        
        # Obtaining the type of the subscript
        int_611171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 8), 'int')
        
        # Call to _parse_args_rvs(...): (line 937)
        # Getting the type of 'args' (line 937)
        args_611174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 55), 'args', False)
        # Processing the call keyword arguments (line 937)
        # Getting the type of 'kwds' (line 937)
        kwds_611175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 63), 'kwds', False)
        kwargs_611176 = {'kwds_611175': kwds_611175}
        # Getting the type of 'self' (line 937)
        self_611172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 33), 'self', False)
        # Obtaining the member '_parse_args_rvs' of a type (line 937)
        _parse_args_rvs_611173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 33), self_611172, '_parse_args_rvs')
        # Calling _parse_args_rvs(args, kwargs) (line 937)
        _parse_args_rvs_call_result_611177 = invoke(stypy.reporting.localization.Localization(__file__, 937, 33), _parse_args_rvs_611173, *[args_611174], **kwargs_611176)
        
        # Obtaining the member '__getitem__' of a type (line 937)
        getitem___611178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 8), _parse_args_rvs_call_result_611177, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 937)
        subscript_call_result_611179 = invoke(stypy.reporting.localization.Localization(__file__, 937, 8), getitem___611178, int_611171)
        
        # Assigning a type to the variable 'tuple_var_assignment_609244' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'tuple_var_assignment_609244', subscript_call_result_611179)
        
        # Assigning a Subscript to a Name (line 937):
        
        # Obtaining the type of the subscript
        int_611180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 8), 'int')
        
        # Call to _parse_args_rvs(...): (line 937)
        # Getting the type of 'args' (line 937)
        args_611183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 55), 'args', False)
        # Processing the call keyword arguments (line 937)
        # Getting the type of 'kwds' (line 937)
        kwds_611184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 63), 'kwds', False)
        kwargs_611185 = {'kwds_611184': kwds_611184}
        # Getting the type of 'self' (line 937)
        self_611181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 33), 'self', False)
        # Obtaining the member '_parse_args_rvs' of a type (line 937)
        _parse_args_rvs_611182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 33), self_611181, '_parse_args_rvs')
        # Calling _parse_args_rvs(args, kwargs) (line 937)
        _parse_args_rvs_call_result_611186 = invoke(stypy.reporting.localization.Localization(__file__, 937, 33), _parse_args_rvs_611182, *[args_611183], **kwargs_611185)
        
        # Obtaining the member '__getitem__' of a type (line 937)
        getitem___611187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 8), _parse_args_rvs_call_result_611186, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 937)
        subscript_call_result_611188 = invoke(stypy.reporting.localization.Localization(__file__, 937, 8), getitem___611187, int_611180)
        
        # Assigning a type to the variable 'tuple_var_assignment_609245' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'tuple_var_assignment_609245', subscript_call_result_611188)
        
        # Assigning a Subscript to a Name (line 937):
        
        # Obtaining the type of the subscript
        int_611189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 8), 'int')
        
        # Call to _parse_args_rvs(...): (line 937)
        # Getting the type of 'args' (line 937)
        args_611192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 55), 'args', False)
        # Processing the call keyword arguments (line 937)
        # Getting the type of 'kwds' (line 937)
        kwds_611193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 63), 'kwds', False)
        kwargs_611194 = {'kwds_611193': kwds_611193}
        # Getting the type of 'self' (line 937)
        self_611190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 33), 'self', False)
        # Obtaining the member '_parse_args_rvs' of a type (line 937)
        _parse_args_rvs_611191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 33), self_611190, '_parse_args_rvs')
        # Calling _parse_args_rvs(args, kwargs) (line 937)
        _parse_args_rvs_call_result_611195 = invoke(stypy.reporting.localization.Localization(__file__, 937, 33), _parse_args_rvs_611191, *[args_611192], **kwargs_611194)
        
        # Obtaining the member '__getitem__' of a type (line 937)
        getitem___611196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 8), _parse_args_rvs_call_result_611195, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 937)
        subscript_call_result_611197 = invoke(stypy.reporting.localization.Localization(__file__, 937, 8), getitem___611196, int_611189)
        
        # Assigning a type to the variable 'tuple_var_assignment_609246' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'tuple_var_assignment_609246', subscript_call_result_611197)
        
        # Assigning a Subscript to a Name (line 937):
        
        # Obtaining the type of the subscript
        int_611198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 8), 'int')
        
        # Call to _parse_args_rvs(...): (line 937)
        # Getting the type of 'args' (line 937)
        args_611201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 55), 'args', False)
        # Processing the call keyword arguments (line 937)
        # Getting the type of 'kwds' (line 937)
        kwds_611202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 63), 'kwds', False)
        kwargs_611203 = {'kwds_611202': kwds_611202}
        # Getting the type of 'self' (line 937)
        self_611199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 33), 'self', False)
        # Obtaining the member '_parse_args_rvs' of a type (line 937)
        _parse_args_rvs_611200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 33), self_611199, '_parse_args_rvs')
        # Calling _parse_args_rvs(args, kwargs) (line 937)
        _parse_args_rvs_call_result_611204 = invoke(stypy.reporting.localization.Localization(__file__, 937, 33), _parse_args_rvs_611200, *[args_611201], **kwargs_611203)
        
        # Obtaining the member '__getitem__' of a type (line 937)
        getitem___611205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 8), _parse_args_rvs_call_result_611204, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 937)
        subscript_call_result_611206 = invoke(stypy.reporting.localization.Localization(__file__, 937, 8), getitem___611205, int_611198)
        
        # Assigning a type to the variable 'tuple_var_assignment_609247' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'tuple_var_assignment_609247', subscript_call_result_611206)
        
        # Assigning a Name to a Name (line 937):
        # Getting the type of 'tuple_var_assignment_609244' (line 937)
        tuple_var_assignment_609244_611207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'tuple_var_assignment_609244')
        # Assigning a type to the variable 'args' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'args', tuple_var_assignment_609244_611207)
        
        # Assigning a Name to a Name (line 937):
        # Getting the type of 'tuple_var_assignment_609245' (line 937)
        tuple_var_assignment_609245_611208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'tuple_var_assignment_609245')
        # Assigning a type to the variable 'loc' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 14), 'loc', tuple_var_assignment_609245_611208)
        
        # Assigning a Name to a Name (line 937):
        # Getting the type of 'tuple_var_assignment_609246' (line 937)
        tuple_var_assignment_609246_611209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'tuple_var_assignment_609246')
        # Assigning a type to the variable 'scale' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 19), 'scale', tuple_var_assignment_609246_611209)
        
        # Assigning a Name to a Name (line 937):
        # Getting the type of 'tuple_var_assignment_609247' (line 937)
        tuple_var_assignment_609247_611210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'tuple_var_assignment_609247')
        # Assigning a type to the variable 'size' (line 937)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 937, 26), 'size', tuple_var_assignment_609247_611210)
        
        # Assigning a Call to a Name (line 938):
        
        # Assigning a Call to a Name (line 938):
        
        # Call to logical_and(...): (line 938)
        # Processing the call arguments (line 938)
        
        # Call to _argcheck(...): (line 938)
        # Getting the type of 'args' (line 938)
        args_611214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 43), 'args', False)
        # Processing the call keyword arguments (line 938)
        kwargs_611215 = {}
        # Getting the type of 'self' (line 938)
        self_611212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 27), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 938)
        _argcheck_611213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 27), self_611212, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 938)
        _argcheck_call_result_611216 = invoke(stypy.reporting.localization.Localization(__file__, 938, 27), _argcheck_611213, *[args_611214], **kwargs_611215)
        
        
        # Getting the type of 'scale' (line 938)
        scale_611217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 51), 'scale', False)
        int_611218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 60), 'int')
        # Applying the binary operator '>=' (line 938)
        result_ge_611219 = python_operator(stypy.reporting.localization.Localization(__file__, 938, 51), '>=', scale_611217, int_611218)
        
        # Processing the call keyword arguments (line 938)
        kwargs_611220 = {}
        # Getting the type of 'logical_and' (line 938)
        logical_and_611211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 15), 'logical_and', False)
        # Calling logical_and(args, kwargs) (line 938)
        logical_and_call_result_611221 = invoke(stypy.reporting.localization.Localization(__file__, 938, 15), logical_and_611211, *[_argcheck_call_result_611216, result_ge_611219], **kwargs_611220)
        
        # Assigning a type to the variable 'cond' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'cond', logical_and_call_result_611221)
        
        
        
        # Call to all(...): (line 939)
        # Processing the call arguments (line 939)
        # Getting the type of 'cond' (line 939)
        cond_611224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 22), 'cond', False)
        # Processing the call keyword arguments (line 939)
        kwargs_611225 = {}
        # Getting the type of 'np' (line 939)
        np_611222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 15), 'np', False)
        # Obtaining the member 'all' of a type (line 939)
        all_611223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 939, 15), np_611222, 'all')
        # Calling all(args, kwargs) (line 939)
        all_call_result_611226 = invoke(stypy.reporting.localization.Localization(__file__, 939, 15), all_611223, *[cond_611224], **kwargs_611225)
        
        # Applying the 'not' unary operator (line 939)
        result_not__611227 = python_operator(stypy.reporting.localization.Localization(__file__, 939, 11), 'not', all_call_result_611226)
        
        # Testing the type of an if condition (line 939)
        if_condition_611228 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 939, 8), result_not__611227)
        # Assigning a type to the variable 'if_condition_611228' (line 939)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'if_condition_611228', if_condition_611228)
        # SSA begins for if statement (line 939)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 940)
        # Processing the call arguments (line 940)
        str_611230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 29), 'str', 'Domain error in arguments.')
        # Processing the call keyword arguments (line 940)
        kwargs_611231 = {}
        # Getting the type of 'ValueError' (line 940)
        ValueError_611229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 940)
        ValueError_call_result_611232 = invoke(stypy.reporting.localization.Localization(__file__, 940, 18), ValueError_611229, *[str_611230], **kwargs_611231)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 940, 12), ValueError_call_result_611232, 'raise parameter', BaseException)
        # SSA join for if statement (line 939)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to all(...): (line 942)
        # Processing the call arguments (line 942)
        
        # Getting the type of 'scale' (line 942)
        scale_611235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 18), 'scale', False)
        int_611236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 27), 'int')
        # Applying the binary operator '==' (line 942)
        result_eq_611237 = python_operator(stypy.reporting.localization.Localization(__file__, 942, 18), '==', scale_611235, int_611236)
        
        # Processing the call keyword arguments (line 942)
        kwargs_611238 = {}
        # Getting the type of 'np' (line 942)
        np_611233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 11), 'np', False)
        # Obtaining the member 'all' of a type (line 942)
        all_611234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 942, 11), np_611233, 'all')
        # Calling all(args, kwargs) (line 942)
        all_call_result_611239 = invoke(stypy.reporting.localization.Localization(__file__, 942, 11), all_611234, *[result_eq_611237], **kwargs_611238)
        
        # Testing the type of an if condition (line 942)
        if_condition_611240 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 942, 8), all_call_result_611239)
        # Assigning a type to the variable 'if_condition_611240' (line 942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 942, 8), 'if_condition_611240', if_condition_611240)
        # SSA begins for if statement (line 942)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'loc' (line 943)
        loc_611241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 19), 'loc')
        
        # Call to ones(...): (line 943)
        # Processing the call arguments (line 943)
        # Getting the type of 'size' (line 943)
        size_611243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 28), 'size', False)
        str_611244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 34), 'str', 'd')
        # Processing the call keyword arguments (line 943)
        kwargs_611245 = {}
        # Getting the type of 'ones' (line 943)
        ones_611242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 23), 'ones', False)
        # Calling ones(args, kwargs) (line 943)
        ones_call_result_611246 = invoke(stypy.reporting.localization.Localization(__file__, 943, 23), ones_611242, *[size_611243, str_611244], **kwargs_611245)
        
        # Applying the binary operator '*' (line 943)
        result_mul_611247 = python_operator(stypy.reporting.localization.Localization(__file__, 943, 19), '*', loc_611241, ones_call_result_611246)
        
        # Assigning a type to the variable 'stypy_return_type' (line 943)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 943, 12), 'stypy_return_type', result_mul_611247)
        # SSA join for if statement (line 942)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 946)
        # Getting the type of 'rndm' (line 946)
        rndm_611248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'rndm')
        # Getting the type of 'None' (line 946)
        None_611249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 23), 'None')
        
        (may_be_611250, more_types_in_union_611251) = may_not_be_none(rndm_611248, None_611249)

        if may_be_611250:

            if more_types_in_union_611251:
                # Runtime conditional SSA (line 946)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Attribute to a Name (line 947):
            
            # Assigning a Attribute to a Name (line 947):
            # Getting the type of 'self' (line 947)
            self_611252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 33), 'self')
            # Obtaining the member '_random_state' of a type (line 947)
            _random_state_611253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 947, 33), self_611252, '_random_state')
            # Assigning a type to the variable 'random_state_saved' (line 947)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 12), 'random_state_saved', _random_state_611253)
            
            # Assigning a Call to a Attribute (line 948):
            
            # Assigning a Call to a Attribute (line 948):
            
            # Call to check_random_state(...): (line 948)
            # Processing the call arguments (line 948)
            # Getting the type of 'rndm' (line 948)
            rndm_611255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 52), 'rndm', False)
            # Processing the call keyword arguments (line 948)
            kwargs_611256 = {}
            # Getting the type of 'check_random_state' (line 948)
            check_random_state_611254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 33), 'check_random_state', False)
            # Calling check_random_state(args, kwargs) (line 948)
            check_random_state_call_result_611257 = invoke(stypy.reporting.localization.Localization(__file__, 948, 33), check_random_state_611254, *[rndm_611255], **kwargs_611256)
            
            # Getting the type of 'self' (line 948)
            self_611258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 12), 'self')
            # Setting the type of the member '_random_state' of a type (line 948)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 12), self_611258, '_random_state', check_random_state_call_result_611257)

            if more_types_in_union_611251:
                # SSA join for if statement (line 946)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 953):
        
        # Assigning a Name to a Attribute (line 953):
        # Getting the type of 'size' (line 953)
        size_611259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 21), 'size')
        # Getting the type of 'self' (line 953)
        self_611260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'self')
        # Setting the type of the member '_size' of a type (line 953)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 8), self_611260, '_size', size_611259)
        
        # Assigning a Call to a Name (line 954):
        
        # Assigning a Call to a Name (line 954):
        
        # Call to _rvs(...): (line 954)
        # Getting the type of 'args' (line 954)
        args_611263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 26), 'args', False)
        # Processing the call keyword arguments (line 954)
        kwargs_611264 = {}
        # Getting the type of 'self' (line 954)
        self_611261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 15), 'self', False)
        # Obtaining the member '_rvs' of a type (line 954)
        _rvs_611262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 15), self_611261, '_rvs')
        # Calling _rvs(args, kwargs) (line 954)
        _rvs_call_result_611265 = invoke(stypy.reporting.localization.Localization(__file__, 954, 15), _rvs_611262, *[args_611263], **kwargs_611264)
        
        # Assigning a type to the variable 'vals' (line 954)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 954, 8), 'vals', _rvs_call_result_611265)
        
        # Assigning a BinOp to a Name (line 956):
        
        # Assigning a BinOp to a Name (line 956):
        # Getting the type of 'vals' (line 956)
        vals_611266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 15), 'vals')
        # Getting the type of 'scale' (line 956)
        scale_611267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 22), 'scale')
        # Applying the binary operator '*' (line 956)
        result_mul_611268 = python_operator(stypy.reporting.localization.Localization(__file__, 956, 15), '*', vals_611266, scale_611267)
        
        # Getting the type of 'loc' (line 956)
        loc_611269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 30), 'loc')
        # Applying the binary operator '+' (line 956)
        result_add_611270 = python_operator(stypy.reporting.localization.Localization(__file__, 956, 15), '+', result_mul_611268, loc_611269)
        
        # Assigning a type to the variable 'vals' (line 956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 956, 8), 'vals', result_add_611270)
        
        # Type idiom detected: calculating its left and rigth part (line 959)
        # Getting the type of 'rndm' (line 959)
        rndm_611271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'rndm')
        # Getting the type of 'None' (line 959)
        None_611272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 23), 'None')
        
        (may_be_611273, more_types_in_union_611274) = may_not_be_none(rndm_611271, None_611272)

        if may_be_611273:

            if more_types_in_union_611274:
                # Runtime conditional SSA (line 959)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Attribute (line 960):
            
            # Assigning a Name to a Attribute (line 960):
            # Getting the type of 'random_state_saved' (line 960)
            random_state_saved_611275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 33), 'random_state_saved')
            # Getting the type of 'self' (line 960)
            self_611276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 12), 'self')
            # Setting the type of the member '_random_state' of a type (line 960)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 12), self_611276, '_random_state', random_state_saved_611275)

            if more_types_in_union_611274:
                # SSA join for if statement (line 959)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Getting the type of 'discrete' (line 963)
        discrete_611277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 11), 'discrete')
        # Testing the type of an if condition (line 963)
        if_condition_611278 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 963, 8), discrete_611277)
        # Assigning a type to the variable 'if_condition_611278' (line 963)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 963, 8), 'if_condition_611278', if_condition_611278)
        # SSA begins for if statement (line 963)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        # Getting the type of 'size' (line 964)
        size_611279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 15), 'size')
        
        # Obtaining an instance of the builtin type 'tuple' (line 964)
        tuple_611280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 964, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 964)
        
        # Applying the binary operator '==' (line 964)
        result_eq_611281 = python_operator(stypy.reporting.localization.Localization(__file__, 964, 15), '==', size_611279, tuple_611280)
        
        # Testing the type of an if condition (line 964)
        if_condition_611282 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 964, 12), result_eq_611281)
        # Assigning a type to the variable 'if_condition_611282' (line 964)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 964, 12), 'if_condition_611282', if_condition_611282)
        # SSA begins for if statement (line 964)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 965):
        
        # Assigning a Call to a Name (line 965):
        
        # Call to int(...): (line 965)
        # Processing the call arguments (line 965)
        # Getting the type of 'vals' (line 965)
        vals_611284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 27), 'vals', False)
        # Processing the call keyword arguments (line 965)
        kwargs_611285 = {}
        # Getting the type of 'int' (line 965)
        int_611283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 23), 'int', False)
        # Calling int(args, kwargs) (line 965)
        int_call_result_611286 = invoke(stypy.reporting.localization.Localization(__file__, 965, 23), int_611283, *[vals_611284], **kwargs_611285)
        
        # Assigning a type to the variable 'vals' (line 965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 965, 16), 'vals', int_call_result_611286)
        # SSA branch for the else part of an if statement (line 964)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 967):
        
        # Assigning a Call to a Name (line 967):
        
        # Call to astype(...): (line 967)
        # Processing the call arguments (line 967)
        # Getting the type of 'int' (line 967)
        int_611289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 35), 'int', False)
        # Processing the call keyword arguments (line 967)
        kwargs_611290 = {}
        # Getting the type of 'vals' (line 967)
        vals_611287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 23), 'vals', False)
        # Obtaining the member 'astype' of a type (line 967)
        astype_611288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 967, 23), vals_611287, 'astype')
        # Calling astype(args, kwargs) (line 967)
        astype_call_result_611291 = invoke(stypy.reporting.localization.Localization(__file__, 967, 23), astype_611288, *[int_611289], **kwargs_611290)
        
        # Assigning a type to the variable 'vals' (line 967)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 967, 16), 'vals', astype_call_result_611291)
        # SSA join for if statement (line 964)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 963)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'vals' (line 969)
        vals_611292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 15), 'vals')
        # Assigning a type to the variable 'stypy_return_type' (line 969)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 969, 8), 'stypy_return_type', vals_611292)
        
        # ################# End of 'rvs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'rvs' in the type store
        # Getting the type of 'stypy_return_type' (line 909)
        stypy_return_type_611293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611293)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'rvs'
        return stypy_return_type_611293


    @norecursion
    def stats(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'stats'
        module_type_store = module_type_store.open_function_context('stats', 971, 4, False)
        # Assigning a type to the variable 'self' (line 972)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 972, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.stats.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.stats.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.stats.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.stats.__dict__.__setitem__('stypy_function_name', 'rv_generic.stats')
        rv_generic.stats.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.stats.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.stats.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.stats.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.stats.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.stats.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.stats.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.stats', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'stats', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'stats(...)' code ##################

        str_611294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, (-1)), 'str', "\n        Some statistics of the given RV.\n\n        Parameters\n        ----------\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional (continuous RVs only)\n            scale parameter (default=1)\n        moments : str, optional\n            composed of letters ['mvsk'] defining which moments to compute:\n            'm' = mean,\n            'v' = variance,\n            's' = (Fisher's) skew,\n            'k' = (Fisher's) kurtosis.\n            (default is 'mv')\n\n        Returns\n        -------\n        stats : sequence\n            of requested moments.\n\n        ")
        
        # Assigning a Call to a Tuple (line 998):
        
        # Assigning a Subscript to a Name (line 998):
        
        # Obtaining the type of the subscript
        int_611295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 8), 'int')
        
        # Call to _parse_args_stats(...): (line 998)
        # Getting the type of 'args' (line 998)
        args_611298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 60), 'args', False)
        # Processing the call keyword arguments (line 998)
        # Getting the type of 'kwds' (line 998)
        kwds_611299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 68), 'kwds', False)
        kwargs_611300 = {'kwds_611299': kwds_611299}
        # Getting the type of 'self' (line 998)
        self_611296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 36), 'self', False)
        # Obtaining the member '_parse_args_stats' of a type (line 998)
        _parse_args_stats_611297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 36), self_611296, '_parse_args_stats')
        # Calling _parse_args_stats(args, kwargs) (line 998)
        _parse_args_stats_call_result_611301 = invoke(stypy.reporting.localization.Localization(__file__, 998, 36), _parse_args_stats_611297, *[args_611298], **kwargs_611300)
        
        # Obtaining the member '__getitem__' of a type (line 998)
        getitem___611302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 8), _parse_args_stats_call_result_611301, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 998)
        subscript_call_result_611303 = invoke(stypy.reporting.localization.Localization(__file__, 998, 8), getitem___611302, int_611295)
        
        # Assigning a type to the variable 'tuple_var_assignment_609248' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'tuple_var_assignment_609248', subscript_call_result_611303)
        
        # Assigning a Subscript to a Name (line 998):
        
        # Obtaining the type of the subscript
        int_611304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 8), 'int')
        
        # Call to _parse_args_stats(...): (line 998)
        # Getting the type of 'args' (line 998)
        args_611307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 60), 'args', False)
        # Processing the call keyword arguments (line 998)
        # Getting the type of 'kwds' (line 998)
        kwds_611308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 68), 'kwds', False)
        kwargs_611309 = {'kwds_611308': kwds_611308}
        # Getting the type of 'self' (line 998)
        self_611305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 36), 'self', False)
        # Obtaining the member '_parse_args_stats' of a type (line 998)
        _parse_args_stats_611306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 36), self_611305, '_parse_args_stats')
        # Calling _parse_args_stats(args, kwargs) (line 998)
        _parse_args_stats_call_result_611310 = invoke(stypy.reporting.localization.Localization(__file__, 998, 36), _parse_args_stats_611306, *[args_611307], **kwargs_611309)
        
        # Obtaining the member '__getitem__' of a type (line 998)
        getitem___611311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 8), _parse_args_stats_call_result_611310, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 998)
        subscript_call_result_611312 = invoke(stypy.reporting.localization.Localization(__file__, 998, 8), getitem___611311, int_611304)
        
        # Assigning a type to the variable 'tuple_var_assignment_609249' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'tuple_var_assignment_609249', subscript_call_result_611312)
        
        # Assigning a Subscript to a Name (line 998):
        
        # Obtaining the type of the subscript
        int_611313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 8), 'int')
        
        # Call to _parse_args_stats(...): (line 998)
        # Getting the type of 'args' (line 998)
        args_611316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 60), 'args', False)
        # Processing the call keyword arguments (line 998)
        # Getting the type of 'kwds' (line 998)
        kwds_611317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 68), 'kwds', False)
        kwargs_611318 = {'kwds_611317': kwds_611317}
        # Getting the type of 'self' (line 998)
        self_611314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 36), 'self', False)
        # Obtaining the member '_parse_args_stats' of a type (line 998)
        _parse_args_stats_611315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 36), self_611314, '_parse_args_stats')
        # Calling _parse_args_stats(args, kwargs) (line 998)
        _parse_args_stats_call_result_611319 = invoke(stypy.reporting.localization.Localization(__file__, 998, 36), _parse_args_stats_611315, *[args_611316], **kwargs_611318)
        
        # Obtaining the member '__getitem__' of a type (line 998)
        getitem___611320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 8), _parse_args_stats_call_result_611319, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 998)
        subscript_call_result_611321 = invoke(stypy.reporting.localization.Localization(__file__, 998, 8), getitem___611320, int_611313)
        
        # Assigning a type to the variable 'tuple_var_assignment_609250' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'tuple_var_assignment_609250', subscript_call_result_611321)
        
        # Assigning a Subscript to a Name (line 998):
        
        # Obtaining the type of the subscript
        int_611322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 8), 'int')
        
        # Call to _parse_args_stats(...): (line 998)
        # Getting the type of 'args' (line 998)
        args_611325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 60), 'args', False)
        # Processing the call keyword arguments (line 998)
        # Getting the type of 'kwds' (line 998)
        kwds_611326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 68), 'kwds', False)
        kwargs_611327 = {'kwds_611326': kwds_611326}
        # Getting the type of 'self' (line 998)
        self_611323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 36), 'self', False)
        # Obtaining the member '_parse_args_stats' of a type (line 998)
        _parse_args_stats_611324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 36), self_611323, '_parse_args_stats')
        # Calling _parse_args_stats(args, kwargs) (line 998)
        _parse_args_stats_call_result_611328 = invoke(stypy.reporting.localization.Localization(__file__, 998, 36), _parse_args_stats_611324, *[args_611325], **kwargs_611327)
        
        # Obtaining the member '__getitem__' of a type (line 998)
        getitem___611329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 8), _parse_args_stats_call_result_611328, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 998)
        subscript_call_result_611330 = invoke(stypy.reporting.localization.Localization(__file__, 998, 8), getitem___611329, int_611322)
        
        # Assigning a type to the variable 'tuple_var_assignment_609251' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'tuple_var_assignment_609251', subscript_call_result_611330)
        
        # Assigning a Name to a Name (line 998):
        # Getting the type of 'tuple_var_assignment_609248' (line 998)
        tuple_var_assignment_609248_611331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'tuple_var_assignment_609248')
        # Assigning a type to the variable 'args' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'args', tuple_var_assignment_609248_611331)
        
        # Assigning a Name to a Name (line 998):
        # Getting the type of 'tuple_var_assignment_609249' (line 998)
        tuple_var_assignment_609249_611332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'tuple_var_assignment_609249')
        # Assigning a type to the variable 'loc' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 14), 'loc', tuple_var_assignment_609249_611332)
        
        # Assigning a Name to a Name (line 998):
        # Getting the type of 'tuple_var_assignment_609250' (line 998)
        tuple_var_assignment_609250_611333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'tuple_var_assignment_609250')
        # Assigning a type to the variable 'scale' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 19), 'scale', tuple_var_assignment_609250_611333)
        
        # Assigning a Name to a Name (line 998):
        # Getting the type of 'tuple_var_assignment_609251' (line 998)
        tuple_var_assignment_609251_611334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'tuple_var_assignment_609251')
        # Assigning a type to the variable 'moments' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 26), 'moments', tuple_var_assignment_609251_611334)
        
        # Assigning a Call to a Tuple (line 1000):
        
        # Assigning a Subscript to a Name (line 1000):
        
        # Obtaining the type of the subscript
        int_611335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 8), 'int')
        
        # Call to map(...): (line 1000)
        # Processing the call arguments (line 1000)
        # Getting the type of 'asarray' (line 1000)
        asarray_611337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 25), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1000)
        tuple_611338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1000)
        # Adding element type (line 1000)
        # Getting the type of 'loc' (line 1000)
        loc_611339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 35), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 35), tuple_611338, loc_611339)
        # Adding element type (line 1000)
        # Getting the type of 'scale' (line 1000)
        scale_611340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 40), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 35), tuple_611338, scale_611340)
        
        # Processing the call keyword arguments (line 1000)
        kwargs_611341 = {}
        # Getting the type of 'map' (line 1000)
        map_611336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 21), 'map', False)
        # Calling map(args, kwargs) (line 1000)
        map_call_result_611342 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 21), map_611336, *[asarray_611337, tuple_611338], **kwargs_611341)
        
        # Obtaining the member '__getitem__' of a type (line 1000)
        getitem___611343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 8), map_call_result_611342, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1000)
        subscript_call_result_611344 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 8), getitem___611343, int_611335)
        
        # Assigning a type to the variable 'tuple_var_assignment_609252' (line 1000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1000, 8), 'tuple_var_assignment_609252', subscript_call_result_611344)
        
        # Assigning a Subscript to a Name (line 1000):
        
        # Obtaining the type of the subscript
        int_611345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 8), 'int')
        
        # Call to map(...): (line 1000)
        # Processing the call arguments (line 1000)
        # Getting the type of 'asarray' (line 1000)
        asarray_611347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 25), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1000)
        tuple_611348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1000)
        # Adding element type (line 1000)
        # Getting the type of 'loc' (line 1000)
        loc_611349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 35), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 35), tuple_611348, loc_611349)
        # Adding element type (line 1000)
        # Getting the type of 'scale' (line 1000)
        scale_611350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 40), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 35), tuple_611348, scale_611350)
        
        # Processing the call keyword arguments (line 1000)
        kwargs_611351 = {}
        # Getting the type of 'map' (line 1000)
        map_611346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 21), 'map', False)
        # Calling map(args, kwargs) (line 1000)
        map_call_result_611352 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 21), map_611346, *[asarray_611347, tuple_611348], **kwargs_611351)
        
        # Obtaining the member '__getitem__' of a type (line 1000)
        getitem___611353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 8), map_call_result_611352, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1000)
        subscript_call_result_611354 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 8), getitem___611353, int_611345)
        
        # Assigning a type to the variable 'tuple_var_assignment_609253' (line 1000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1000, 8), 'tuple_var_assignment_609253', subscript_call_result_611354)
        
        # Assigning a Name to a Name (line 1000):
        # Getting the type of 'tuple_var_assignment_609252' (line 1000)
        tuple_var_assignment_609252_611355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 8), 'tuple_var_assignment_609252')
        # Assigning a type to the variable 'loc' (line 1000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1000, 8), 'loc', tuple_var_assignment_609252_611355)
        
        # Assigning a Name to a Name (line 1000):
        # Getting the type of 'tuple_var_assignment_609253' (line 1000)
        tuple_var_assignment_609253_611356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 8), 'tuple_var_assignment_609253')
        # Assigning a type to the variable 'scale' (line 1000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1000, 13), 'scale', tuple_var_assignment_609253_611356)
        
        # Assigning a Call to a Name (line 1001):
        
        # Assigning a Call to a Name (line 1001):
        
        # Call to tuple(...): (line 1001)
        # Processing the call arguments (line 1001)
        
        # Call to map(...): (line 1001)
        # Processing the call arguments (line 1001)
        # Getting the type of 'asarray' (line 1001)
        asarray_611359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 25), 'asarray', False)
        # Getting the type of 'args' (line 1001)
        args_611360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 34), 'args', False)
        # Processing the call keyword arguments (line 1001)
        kwargs_611361 = {}
        # Getting the type of 'map' (line 1001)
        map_611358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 21), 'map', False)
        # Calling map(args, kwargs) (line 1001)
        map_call_result_611362 = invoke(stypy.reporting.localization.Localization(__file__, 1001, 21), map_611358, *[asarray_611359, args_611360], **kwargs_611361)
        
        # Processing the call keyword arguments (line 1001)
        kwargs_611363 = {}
        # Getting the type of 'tuple' (line 1001)
        tuple_611357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1001)
        tuple_call_result_611364 = invoke(stypy.reporting.localization.Localization(__file__, 1001, 15), tuple_611357, *[map_call_result_611362], **kwargs_611363)
        
        # Assigning a type to the variable 'args' (line 1001)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1001, 8), 'args', tuple_call_result_611364)
        
        # Assigning a BinOp to a Name (line 1002):
        
        # Assigning a BinOp to a Name (line 1002):
        
        # Call to _argcheck(...): (line 1002)
        # Getting the type of 'args' (line 1002)
        args_611367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 31), 'args', False)
        # Processing the call keyword arguments (line 1002)
        kwargs_611368 = {}
        # Getting the type of 'self' (line 1002)
        self_611365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 15), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1002)
        _argcheck_611366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1002, 15), self_611365, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1002)
        _argcheck_call_result_611369 = invoke(stypy.reporting.localization.Localization(__file__, 1002, 15), _argcheck_611366, *[args_611367], **kwargs_611368)
        
        
        # Getting the type of 'scale' (line 1002)
        scale_611370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 40), 'scale')
        int_611371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1002, 48), 'int')
        # Applying the binary operator '>' (line 1002)
        result_gt_611372 = python_operator(stypy.reporting.localization.Localization(__file__, 1002, 40), '>', scale_611370, int_611371)
        
        # Applying the binary operator '&' (line 1002)
        result_and__611373 = python_operator(stypy.reporting.localization.Localization(__file__, 1002, 15), '&', _argcheck_call_result_611369, result_gt_611372)
        
        
        # Getting the type of 'loc' (line 1002)
        loc_611374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 54), 'loc')
        # Getting the type of 'loc' (line 1002)
        loc_611375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 61), 'loc')
        # Applying the binary operator '==' (line 1002)
        result_eq_611376 = python_operator(stypy.reporting.localization.Localization(__file__, 1002, 54), '==', loc_611374, loc_611375)
        
        # Applying the binary operator '&' (line 1002)
        result_and__611377 = python_operator(stypy.reporting.localization.Localization(__file__, 1002, 51), '&', result_and__611373, result_eq_611376)
        
        # Assigning a type to the variable 'cond' (line 1002)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1002, 8), 'cond', result_and__611377)
        
        # Assigning a List to a Name (line 1003):
        
        # Assigning a List to a Name (line 1003):
        
        # Obtaining an instance of the builtin type 'list' (line 1003)
        list_611378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1003)
        
        # Assigning a type to the variable 'output' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 8), 'output', list_611378)
        
        # Assigning a Call to a Name (line 1004):
        
        # Assigning a Call to a Name (line 1004):
        
        # Call to valarray(...): (line 1004)
        # Processing the call arguments (line 1004)
        
        # Call to shape(...): (line 1004)
        # Processing the call arguments (line 1004)
        # Getting the type of 'cond' (line 1004)
        cond_611381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 33), 'cond', False)
        # Processing the call keyword arguments (line 1004)
        kwargs_611382 = {}
        # Getting the type of 'shape' (line 1004)
        shape_611380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 27), 'shape', False)
        # Calling shape(args, kwargs) (line 1004)
        shape_call_result_611383 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 27), shape_611380, *[cond_611381], **kwargs_611382)
        
        # Getting the type of 'self' (line 1004)
        self_611384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 40), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1004)
        badvalue_611385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1004, 40), self_611384, 'badvalue')
        # Processing the call keyword arguments (line 1004)
        kwargs_611386 = {}
        # Getting the type of 'valarray' (line 1004)
        valarray_611379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 18), 'valarray', False)
        # Calling valarray(args, kwargs) (line 1004)
        valarray_call_result_611387 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 18), valarray_611379, *[shape_call_result_611383, badvalue_611385], **kwargs_611386)
        
        # Assigning a type to the variable 'default' (line 1004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 8), 'default', valarray_call_result_611387)
        
        
        # Call to any(...): (line 1007)
        # Processing the call arguments (line 1007)
        # Getting the type of 'cond' (line 1007)
        cond_611390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 18), 'cond', False)
        # Processing the call keyword arguments (line 1007)
        kwargs_611391 = {}
        # Getting the type of 'np' (line 1007)
        np_611388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1007)
        any_611389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 11), np_611388, 'any')
        # Calling any(args, kwargs) (line 1007)
        any_call_result_611392 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 11), any_611389, *[cond_611390], **kwargs_611391)
        
        # Testing the type of an if condition (line 1007)
        if_condition_611393 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1007, 8), any_call_result_611392)
        # Assigning a type to the variable 'if_condition_611393' (line 1007)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1007, 8), 'if_condition_611393', if_condition_611393)
        # SSA begins for if statement (line 1007)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1008):
        
        # Assigning a Call to a Name (line 1008):
        
        # Call to argsreduce(...): (line 1008)
        # Processing the call arguments (line 1008)
        # Getting the type of 'cond' (line 1008)
        cond_611395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 34), 'cond', False)
        # Getting the type of 'args' (line 1008)
        args_611396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 42), 'args', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1008)
        tuple_611397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1008)
        # Adding element type (line 1008)
        # Getting the type of 'scale' (line 1008)
        scale_611398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 48), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 48), tuple_611397, scale_611398)
        # Adding element type (line 1008)
        # Getting the type of 'loc' (line 1008)
        loc_611399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 55), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 48), tuple_611397, loc_611399)
        
        # Applying the binary operator '+' (line 1008)
        result_add_611400 = python_operator(stypy.reporting.localization.Localization(__file__, 1008, 42), '+', args_611396, tuple_611397)
        
        # Processing the call keyword arguments (line 1008)
        kwargs_611401 = {}
        # Getting the type of 'argsreduce' (line 1008)
        argsreduce_611394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1008)
        argsreduce_call_result_611402 = invoke(stypy.reporting.localization.Localization(__file__, 1008, 23), argsreduce_611394, *[cond_611395, result_add_611400], **kwargs_611401)
        
        # Assigning a type to the variable 'goodargs' (line 1008)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1008, 12), 'goodargs', argsreduce_call_result_611402)
        
        # Assigning a Tuple to a Tuple (line 1009):
        
        # Assigning a Subscript to a Name (line 1009):
        
        # Obtaining the type of the subscript
        int_611403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 44), 'int')
        # Getting the type of 'goodargs' (line 1009)
        goodargs_611404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 35), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1009)
        getitem___611405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 35), goodargs_611404, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1009)
        subscript_call_result_611406 = invoke(stypy.reporting.localization.Localization(__file__, 1009, 35), getitem___611405, int_611403)
        
        # Assigning a type to the variable 'tuple_assignment_609254' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 12), 'tuple_assignment_609254', subscript_call_result_611406)
        
        # Assigning a Subscript to a Name (line 1009):
        
        # Obtaining the type of the subscript
        int_611407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 58), 'int')
        # Getting the type of 'goodargs' (line 1009)
        goodargs_611408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 49), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1009)
        getitem___611409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 49), goodargs_611408, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1009)
        subscript_call_result_611410 = invoke(stypy.reporting.localization.Localization(__file__, 1009, 49), getitem___611409, int_611407)
        
        # Assigning a type to the variable 'tuple_assignment_609255' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 12), 'tuple_assignment_609255', subscript_call_result_611410)
        
        # Assigning a Subscript to a Name (line 1009):
        
        # Obtaining the type of the subscript
        int_611411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 73), 'int')
        slice_611412 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1009, 63), None, int_611411, None)
        # Getting the type of 'goodargs' (line 1009)
        goodargs_611413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 63), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1009)
        getitem___611414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1009, 63), goodargs_611413, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1009)
        subscript_call_result_611415 = invoke(stypy.reporting.localization.Localization(__file__, 1009, 63), getitem___611414, slice_611412)
        
        # Assigning a type to the variable 'tuple_assignment_609256' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 12), 'tuple_assignment_609256', subscript_call_result_611415)
        
        # Assigning a Name to a Name (line 1009):
        # Getting the type of 'tuple_assignment_609254' (line 1009)
        tuple_assignment_609254_611416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 12), 'tuple_assignment_609254')
        # Assigning a type to the variable 'scale' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 12), 'scale', tuple_assignment_609254_611416)
        
        # Assigning a Name to a Name (line 1009):
        # Getting the type of 'tuple_assignment_609255' (line 1009)
        tuple_assignment_609255_611417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 12), 'tuple_assignment_609255')
        # Assigning a type to the variable 'loc' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 19), 'loc', tuple_assignment_609255_611417)
        
        # Assigning a Name to a Name (line 1009):
        # Getting the type of 'tuple_assignment_609256' (line 1009)
        tuple_assignment_609256_611418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 12), 'tuple_assignment_609256')
        # Assigning a type to the variable 'goodargs' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 24), 'goodargs', tuple_assignment_609256_611418)
        
        # Getting the type of 'self' (line 1011)
        self_611419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 15), 'self')
        # Obtaining the member '_stats_has_moments' of a type (line 1011)
        _stats_has_moments_611420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1011, 15), self_611419, '_stats_has_moments')
        # Testing the type of an if condition (line 1011)
        if_condition_611421 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1011, 12), _stats_has_moments_611420)
        # Assigning a type to the variable 'if_condition_611421' (line 1011)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1011, 12), 'if_condition_611421', if_condition_611421)
        # SSA begins for if statement (line 1011)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 1012):
        
        # Assigning a Subscript to a Name (line 1012):
        
        # Obtaining the type of the subscript
        int_611422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 16), 'int')
        
        # Call to _stats(...): (line 1012)
        # Getting the type of 'goodargs' (line 1012)
        goodargs_611425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 47), 'goodargs', False)
        # Processing the call keyword arguments (line 1012)
        
        # Obtaining an instance of the builtin type 'dict' (line 1013)
        dict_611426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 48), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1013)
        # Adding element type (key, value) (line 1013)
        str_611427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 49), 'str', 'moments')
        # Getting the type of 'moments' (line 1013)
        moments_611428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 60), 'moments', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 48), dict_611426, (str_611427, moments_611428))
        
        kwargs_611429 = {'dict_611426': dict_611426}
        # Getting the type of 'self' (line 1012)
        self_611423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 34), 'self', False)
        # Obtaining the member '_stats' of a type (line 1012)
        _stats_611424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 34), self_611423, '_stats')
        # Calling _stats(args, kwargs) (line 1012)
        _stats_call_result_611430 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 34), _stats_611424, *[goodargs_611425], **kwargs_611429)
        
        # Obtaining the member '__getitem__' of a type (line 1012)
        getitem___611431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 16), _stats_call_result_611430, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1012)
        subscript_call_result_611432 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 16), getitem___611431, int_611422)
        
        # Assigning a type to the variable 'tuple_var_assignment_609257' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'tuple_var_assignment_609257', subscript_call_result_611432)
        
        # Assigning a Subscript to a Name (line 1012):
        
        # Obtaining the type of the subscript
        int_611433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 16), 'int')
        
        # Call to _stats(...): (line 1012)
        # Getting the type of 'goodargs' (line 1012)
        goodargs_611436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 47), 'goodargs', False)
        # Processing the call keyword arguments (line 1012)
        
        # Obtaining an instance of the builtin type 'dict' (line 1013)
        dict_611437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 48), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1013)
        # Adding element type (key, value) (line 1013)
        str_611438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 49), 'str', 'moments')
        # Getting the type of 'moments' (line 1013)
        moments_611439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 60), 'moments', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 48), dict_611437, (str_611438, moments_611439))
        
        kwargs_611440 = {'dict_611437': dict_611437}
        # Getting the type of 'self' (line 1012)
        self_611434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 34), 'self', False)
        # Obtaining the member '_stats' of a type (line 1012)
        _stats_611435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 34), self_611434, '_stats')
        # Calling _stats(args, kwargs) (line 1012)
        _stats_call_result_611441 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 34), _stats_611435, *[goodargs_611436], **kwargs_611440)
        
        # Obtaining the member '__getitem__' of a type (line 1012)
        getitem___611442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 16), _stats_call_result_611441, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1012)
        subscript_call_result_611443 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 16), getitem___611442, int_611433)
        
        # Assigning a type to the variable 'tuple_var_assignment_609258' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'tuple_var_assignment_609258', subscript_call_result_611443)
        
        # Assigning a Subscript to a Name (line 1012):
        
        # Obtaining the type of the subscript
        int_611444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 16), 'int')
        
        # Call to _stats(...): (line 1012)
        # Getting the type of 'goodargs' (line 1012)
        goodargs_611447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 47), 'goodargs', False)
        # Processing the call keyword arguments (line 1012)
        
        # Obtaining an instance of the builtin type 'dict' (line 1013)
        dict_611448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 48), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1013)
        # Adding element type (key, value) (line 1013)
        str_611449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 49), 'str', 'moments')
        # Getting the type of 'moments' (line 1013)
        moments_611450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 60), 'moments', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 48), dict_611448, (str_611449, moments_611450))
        
        kwargs_611451 = {'dict_611448': dict_611448}
        # Getting the type of 'self' (line 1012)
        self_611445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 34), 'self', False)
        # Obtaining the member '_stats' of a type (line 1012)
        _stats_611446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 34), self_611445, '_stats')
        # Calling _stats(args, kwargs) (line 1012)
        _stats_call_result_611452 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 34), _stats_611446, *[goodargs_611447], **kwargs_611451)
        
        # Obtaining the member '__getitem__' of a type (line 1012)
        getitem___611453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 16), _stats_call_result_611452, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1012)
        subscript_call_result_611454 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 16), getitem___611453, int_611444)
        
        # Assigning a type to the variable 'tuple_var_assignment_609259' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'tuple_var_assignment_609259', subscript_call_result_611454)
        
        # Assigning a Subscript to a Name (line 1012):
        
        # Obtaining the type of the subscript
        int_611455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 16), 'int')
        
        # Call to _stats(...): (line 1012)
        # Getting the type of 'goodargs' (line 1012)
        goodargs_611458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 47), 'goodargs', False)
        # Processing the call keyword arguments (line 1012)
        
        # Obtaining an instance of the builtin type 'dict' (line 1013)
        dict_611459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 48), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1013)
        # Adding element type (key, value) (line 1013)
        str_611460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 49), 'str', 'moments')
        # Getting the type of 'moments' (line 1013)
        moments_611461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 60), 'moments', False)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 48), dict_611459, (str_611460, moments_611461))
        
        kwargs_611462 = {'dict_611459': dict_611459}
        # Getting the type of 'self' (line 1012)
        self_611456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 34), 'self', False)
        # Obtaining the member '_stats' of a type (line 1012)
        _stats_611457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 34), self_611456, '_stats')
        # Calling _stats(args, kwargs) (line 1012)
        _stats_call_result_611463 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 34), _stats_611457, *[goodargs_611458], **kwargs_611462)
        
        # Obtaining the member '__getitem__' of a type (line 1012)
        getitem___611464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 16), _stats_call_result_611463, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1012)
        subscript_call_result_611465 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 16), getitem___611464, int_611455)
        
        # Assigning a type to the variable 'tuple_var_assignment_609260' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'tuple_var_assignment_609260', subscript_call_result_611465)
        
        # Assigning a Name to a Name (line 1012):
        # Getting the type of 'tuple_var_assignment_609257' (line 1012)
        tuple_var_assignment_609257_611466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'tuple_var_assignment_609257')
        # Assigning a type to the variable 'mu' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'mu', tuple_var_assignment_609257_611466)
        
        # Assigning a Name to a Name (line 1012):
        # Getting the type of 'tuple_var_assignment_609258' (line 1012)
        tuple_var_assignment_609258_611467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'tuple_var_assignment_609258')
        # Assigning a type to the variable 'mu2' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 20), 'mu2', tuple_var_assignment_609258_611467)
        
        # Assigning a Name to a Name (line 1012):
        # Getting the type of 'tuple_var_assignment_609259' (line 1012)
        tuple_var_assignment_609259_611468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'tuple_var_assignment_609259')
        # Assigning a type to the variable 'g1' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 25), 'g1', tuple_var_assignment_609259_611468)
        
        # Assigning a Name to a Name (line 1012):
        # Getting the type of 'tuple_var_assignment_609260' (line 1012)
        tuple_var_assignment_609260_611469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'tuple_var_assignment_609260')
        # Assigning a type to the variable 'g2' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 29), 'g2', tuple_var_assignment_609260_611469)
        # SSA branch for the else part of an if statement (line 1011)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 1015):
        
        # Assigning a Subscript to a Name (line 1015):
        
        # Obtaining the type of the subscript
        int_611470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 16), 'int')
        
        # Call to _stats(...): (line 1015)
        # Getting the type of 'goodargs' (line 1015)
        goodargs_611473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 47), 'goodargs', False)
        # Processing the call keyword arguments (line 1015)
        kwargs_611474 = {}
        # Getting the type of 'self' (line 1015)
        self_611471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 34), 'self', False)
        # Obtaining the member '_stats' of a type (line 1015)
        _stats_611472 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 34), self_611471, '_stats')
        # Calling _stats(args, kwargs) (line 1015)
        _stats_call_result_611475 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 34), _stats_611472, *[goodargs_611473], **kwargs_611474)
        
        # Obtaining the member '__getitem__' of a type (line 1015)
        getitem___611476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 16), _stats_call_result_611475, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1015)
        subscript_call_result_611477 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 16), getitem___611476, int_611470)
        
        # Assigning a type to the variable 'tuple_var_assignment_609261' (line 1015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'tuple_var_assignment_609261', subscript_call_result_611477)
        
        # Assigning a Subscript to a Name (line 1015):
        
        # Obtaining the type of the subscript
        int_611478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 16), 'int')
        
        # Call to _stats(...): (line 1015)
        # Getting the type of 'goodargs' (line 1015)
        goodargs_611481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 47), 'goodargs', False)
        # Processing the call keyword arguments (line 1015)
        kwargs_611482 = {}
        # Getting the type of 'self' (line 1015)
        self_611479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 34), 'self', False)
        # Obtaining the member '_stats' of a type (line 1015)
        _stats_611480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 34), self_611479, '_stats')
        # Calling _stats(args, kwargs) (line 1015)
        _stats_call_result_611483 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 34), _stats_611480, *[goodargs_611481], **kwargs_611482)
        
        # Obtaining the member '__getitem__' of a type (line 1015)
        getitem___611484 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 16), _stats_call_result_611483, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1015)
        subscript_call_result_611485 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 16), getitem___611484, int_611478)
        
        # Assigning a type to the variable 'tuple_var_assignment_609262' (line 1015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'tuple_var_assignment_609262', subscript_call_result_611485)
        
        # Assigning a Subscript to a Name (line 1015):
        
        # Obtaining the type of the subscript
        int_611486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 16), 'int')
        
        # Call to _stats(...): (line 1015)
        # Getting the type of 'goodargs' (line 1015)
        goodargs_611489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 47), 'goodargs', False)
        # Processing the call keyword arguments (line 1015)
        kwargs_611490 = {}
        # Getting the type of 'self' (line 1015)
        self_611487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 34), 'self', False)
        # Obtaining the member '_stats' of a type (line 1015)
        _stats_611488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 34), self_611487, '_stats')
        # Calling _stats(args, kwargs) (line 1015)
        _stats_call_result_611491 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 34), _stats_611488, *[goodargs_611489], **kwargs_611490)
        
        # Obtaining the member '__getitem__' of a type (line 1015)
        getitem___611492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 16), _stats_call_result_611491, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1015)
        subscript_call_result_611493 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 16), getitem___611492, int_611486)
        
        # Assigning a type to the variable 'tuple_var_assignment_609263' (line 1015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'tuple_var_assignment_609263', subscript_call_result_611493)
        
        # Assigning a Subscript to a Name (line 1015):
        
        # Obtaining the type of the subscript
        int_611494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 16), 'int')
        
        # Call to _stats(...): (line 1015)
        # Getting the type of 'goodargs' (line 1015)
        goodargs_611497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 47), 'goodargs', False)
        # Processing the call keyword arguments (line 1015)
        kwargs_611498 = {}
        # Getting the type of 'self' (line 1015)
        self_611495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 34), 'self', False)
        # Obtaining the member '_stats' of a type (line 1015)
        _stats_611496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 34), self_611495, '_stats')
        # Calling _stats(args, kwargs) (line 1015)
        _stats_call_result_611499 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 34), _stats_611496, *[goodargs_611497], **kwargs_611498)
        
        # Obtaining the member '__getitem__' of a type (line 1015)
        getitem___611500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 16), _stats_call_result_611499, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1015)
        subscript_call_result_611501 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 16), getitem___611500, int_611494)
        
        # Assigning a type to the variable 'tuple_var_assignment_609264' (line 1015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'tuple_var_assignment_609264', subscript_call_result_611501)
        
        # Assigning a Name to a Name (line 1015):
        # Getting the type of 'tuple_var_assignment_609261' (line 1015)
        tuple_var_assignment_609261_611502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'tuple_var_assignment_609261')
        # Assigning a type to the variable 'mu' (line 1015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'mu', tuple_var_assignment_609261_611502)
        
        # Assigning a Name to a Name (line 1015):
        # Getting the type of 'tuple_var_assignment_609262' (line 1015)
        tuple_var_assignment_609262_611503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'tuple_var_assignment_609262')
        # Assigning a type to the variable 'mu2' (line 1015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 20), 'mu2', tuple_var_assignment_609262_611503)
        
        # Assigning a Name to a Name (line 1015):
        # Getting the type of 'tuple_var_assignment_609263' (line 1015)
        tuple_var_assignment_609263_611504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'tuple_var_assignment_609263')
        # Assigning a type to the variable 'g1' (line 1015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 25), 'g1', tuple_var_assignment_609263_611504)
        
        # Assigning a Name to a Name (line 1015):
        # Getting the type of 'tuple_var_assignment_609264' (line 1015)
        tuple_var_assignment_609264_611505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'tuple_var_assignment_609264')
        # Assigning a type to the variable 'g2' (line 1015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1015, 29), 'g2', tuple_var_assignment_609264_611505)
        # SSA join for if statement (line 1011)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Type idiom detected: calculating its left and rigth part (line 1016)
        # Getting the type of 'g1' (line 1016)
        g1_611506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 15), 'g1')
        # Getting the type of 'None' (line 1016)
        None_611507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 21), 'None')
        
        (may_be_611508, more_types_in_union_611509) = may_be_none(g1_611506, None_611507)

        if may_be_611508:

            if more_types_in_union_611509:
                # Runtime conditional SSA (line 1016)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Name (line 1017):
            
            # Assigning a Name to a Name (line 1017):
            # Getting the type of 'None' (line 1017)
            None_611510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 22), 'None')
            # Assigning a type to the variable 'mu3' (line 1017)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 16), 'mu3', None_611510)

            if more_types_in_union_611509:
                # Runtime conditional SSA for else branch (line 1016)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_611508) or more_types_in_union_611509):
            
            # Type idiom detected: calculating its left and rigth part (line 1019)
            # Getting the type of 'mu2' (line 1019)
            mu2_611511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 19), 'mu2')
            # Getting the type of 'None' (line 1019)
            None_611512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 26), 'None')
            
            (may_be_611513, more_types_in_union_611514) = may_be_none(mu2_611511, None_611512)

            if may_be_611513:

                if more_types_in_union_611514:
                    # Runtime conditional SSA (line 1019)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1020):
                
                # Assigning a Call to a Name (line 1020):
                
                # Call to _munp(...): (line 1020)
                # Processing the call arguments (line 1020)
                int_611517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1020, 37), 'int')
                # Getting the type of 'goodargs' (line 1020)
                goodargs_611518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 41), 'goodargs', False)
                # Processing the call keyword arguments (line 1020)
                kwargs_611519 = {}
                # Getting the type of 'self' (line 1020)
                self_611515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 26), 'self', False)
                # Obtaining the member '_munp' of a type (line 1020)
                _munp_611516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1020, 26), self_611515, '_munp')
                # Calling _munp(args, kwargs) (line 1020)
                _munp_call_result_611520 = invoke(stypy.reporting.localization.Localization(__file__, 1020, 26), _munp_611516, *[int_611517, goodargs_611518], **kwargs_611519)
                
                # Assigning a type to the variable 'mu2' (line 1020)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1020, 20), 'mu2', _munp_call_result_611520)

                if more_types_in_union_611514:
                    # SSA join for if statement (line 1019)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Type idiom detected: calculating its left and rigth part (line 1021)
            # Getting the type of 'g2' (line 1021)
            g2_611521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 19), 'g2')
            # Getting the type of 'None' (line 1021)
            None_611522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 25), 'None')
            
            (may_be_611523, more_types_in_union_611524) = may_be_none(g2_611521, None_611522)

            if may_be_611523:

                if more_types_in_union_611524:
                    # Runtime conditional SSA (line 1021)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a BinOp to a Name (line 1023):
                
                # Assigning a BinOp to a Name (line 1023):
                # Getting the type of 'g1' (line 1023)
                g1_611525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 26), 'g1')
                
                # Call to power(...): (line 1023)
                # Processing the call arguments (line 1023)
                # Getting the type of 'mu2' (line 1023)
                mu2_611528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 40), 'mu2', False)
                float_611529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 45), 'float')
                # Processing the call keyword arguments (line 1023)
                kwargs_611530 = {}
                # Getting the type of 'np' (line 1023)
                np_611526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 31), 'np', False)
                # Obtaining the member 'power' of a type (line 1023)
                power_611527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1023, 31), np_611526, 'power')
                # Calling power(args, kwargs) (line 1023)
                power_call_result_611531 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 31), power_611527, *[mu2_611528, float_611529], **kwargs_611530)
                
                # Applying the binary operator '*' (line 1023)
                result_mul_611532 = python_operator(stypy.reporting.localization.Localization(__file__, 1023, 26), '*', g1_611525, power_call_result_611531)
                
                # Assigning a type to the variable 'mu3' (line 1023)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1023, 20), 'mu3', result_mul_611532)

                if more_types_in_union_611524:
                    # SSA join for if statement (line 1021)
                    module_type_store = module_type_store.join_ssa_context()


            

            if (may_be_611508 and more_types_in_union_611509):
                # SSA join for if statement (line 1016)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        str_611533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 15), 'str', 'm')
        # Getting the type of 'moments' (line 1025)
        moments_611534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 22), 'moments')
        # Applying the binary operator 'in' (line 1025)
        result_contains_611535 = python_operator(stypy.reporting.localization.Localization(__file__, 1025, 15), 'in', str_611533, moments_611534)
        
        # Testing the type of an if condition (line 1025)
        if_condition_611536 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1025, 12), result_contains_611535)
        # Assigning a type to the variable 'if_condition_611536' (line 1025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 12), 'if_condition_611536', if_condition_611536)
        # SSA begins for if statement (line 1025)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 1026)
        # Getting the type of 'mu' (line 1026)
        mu_611537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 19), 'mu')
        # Getting the type of 'None' (line 1026)
        None_611538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 25), 'None')
        
        (may_be_611539, more_types_in_union_611540) = may_be_none(mu_611537, None_611538)

        if may_be_611539:

            if more_types_in_union_611540:
                # Runtime conditional SSA (line 1026)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1027):
            
            # Assigning a Call to a Name (line 1027):
            
            # Call to _munp(...): (line 1027)
            # Processing the call arguments (line 1027)
            int_611543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1027, 36), 'int')
            # Getting the type of 'goodargs' (line 1027)
            goodargs_611544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 40), 'goodargs', False)
            # Processing the call keyword arguments (line 1027)
            kwargs_611545 = {}
            # Getting the type of 'self' (line 1027)
            self_611541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 25), 'self', False)
            # Obtaining the member '_munp' of a type (line 1027)
            _munp_611542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 25), self_611541, '_munp')
            # Calling _munp(args, kwargs) (line 1027)
            _munp_call_result_611546 = invoke(stypy.reporting.localization.Localization(__file__, 1027, 25), _munp_611542, *[int_611543, goodargs_611544], **kwargs_611545)
            
            # Assigning a type to the variable 'mu' (line 1027)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1027, 20), 'mu', _munp_call_result_611546)

            if more_types_in_union_611540:
                # SSA join for if statement (line 1026)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 1028):
        
        # Assigning a Call to a Name (line 1028):
        
        # Call to copy(...): (line 1028)
        # Processing the call keyword arguments (line 1028)
        kwargs_611549 = {}
        # Getting the type of 'default' (line 1028)
        default_611547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 23), 'default', False)
        # Obtaining the member 'copy' of a type (line 1028)
        copy_611548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1028, 23), default_611547, 'copy')
        # Calling copy(args, kwargs) (line 1028)
        copy_call_result_611550 = invoke(stypy.reporting.localization.Localization(__file__, 1028, 23), copy_611548, *[], **kwargs_611549)
        
        # Assigning a type to the variable 'out0' (line 1028)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1028, 16), 'out0', copy_call_result_611550)
        
        # Call to place(...): (line 1029)
        # Processing the call arguments (line 1029)
        # Getting the type of 'out0' (line 1029)
        out0_611552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 22), 'out0', False)
        # Getting the type of 'cond' (line 1029)
        cond_611553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 28), 'cond', False)
        # Getting the type of 'mu' (line 1029)
        mu_611554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 34), 'mu', False)
        # Getting the type of 'scale' (line 1029)
        scale_611555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 39), 'scale', False)
        # Applying the binary operator '*' (line 1029)
        result_mul_611556 = python_operator(stypy.reporting.localization.Localization(__file__, 1029, 34), '*', mu_611554, scale_611555)
        
        # Getting the type of 'loc' (line 1029)
        loc_611557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 47), 'loc', False)
        # Applying the binary operator '+' (line 1029)
        result_add_611558 = python_operator(stypy.reporting.localization.Localization(__file__, 1029, 34), '+', result_mul_611556, loc_611557)
        
        # Processing the call keyword arguments (line 1029)
        kwargs_611559 = {}
        # Getting the type of 'place' (line 1029)
        place_611551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 16), 'place', False)
        # Calling place(args, kwargs) (line 1029)
        place_call_result_611560 = invoke(stypy.reporting.localization.Localization(__file__, 1029, 16), place_611551, *[out0_611552, cond_611553, result_add_611558], **kwargs_611559)
        
        
        # Call to append(...): (line 1030)
        # Processing the call arguments (line 1030)
        # Getting the type of 'out0' (line 1030)
        out0_611563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 30), 'out0', False)
        # Processing the call keyword arguments (line 1030)
        kwargs_611564 = {}
        # Getting the type of 'output' (line 1030)
        output_611561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 16), 'output', False)
        # Obtaining the member 'append' of a type (line 1030)
        append_611562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1030, 16), output_611561, 'append')
        # Calling append(args, kwargs) (line 1030)
        append_call_result_611565 = invoke(stypy.reporting.localization.Localization(__file__, 1030, 16), append_611562, *[out0_611563], **kwargs_611564)
        
        # SSA join for if statement (line 1025)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        str_611566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 15), 'str', 'v')
        # Getting the type of 'moments' (line 1032)
        moments_611567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 22), 'moments')
        # Applying the binary operator 'in' (line 1032)
        result_contains_611568 = python_operator(stypy.reporting.localization.Localization(__file__, 1032, 15), 'in', str_611566, moments_611567)
        
        # Testing the type of an if condition (line 1032)
        if_condition_611569 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1032, 12), result_contains_611568)
        # Assigning a type to the variable 'if_condition_611569' (line 1032)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1032, 12), 'if_condition_611569', if_condition_611569)
        # SSA begins for if statement (line 1032)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 1033)
        # Getting the type of 'mu2' (line 1033)
        mu2_611570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 19), 'mu2')
        # Getting the type of 'None' (line 1033)
        None_611571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 26), 'None')
        
        (may_be_611572, more_types_in_union_611573) = may_be_none(mu2_611570, None_611571)

        if may_be_611572:

            if more_types_in_union_611573:
                # Runtime conditional SSA (line 1033)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1034):
            
            # Assigning a Call to a Name (line 1034):
            
            # Call to _munp(...): (line 1034)
            # Processing the call arguments (line 1034)
            int_611576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 38), 'int')
            # Getting the type of 'goodargs' (line 1034)
            goodargs_611577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 42), 'goodargs', False)
            # Processing the call keyword arguments (line 1034)
            kwargs_611578 = {}
            # Getting the type of 'self' (line 1034)
            self_611574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 27), 'self', False)
            # Obtaining the member '_munp' of a type (line 1034)
            _munp_611575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 27), self_611574, '_munp')
            # Calling _munp(args, kwargs) (line 1034)
            _munp_call_result_611579 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 27), _munp_611575, *[int_611576, goodargs_611577], **kwargs_611578)
            
            # Assigning a type to the variable 'mu2p' (line 1034)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 20), 'mu2p', _munp_call_result_611579)
            
            # Type idiom detected: calculating its left and rigth part (line 1035)
            # Getting the type of 'mu' (line 1035)
            mu_611580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 23), 'mu')
            # Getting the type of 'None' (line 1035)
            None_611581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 29), 'None')
            
            (may_be_611582, more_types_in_union_611583) = may_be_none(mu_611580, None_611581)

            if may_be_611582:

                if more_types_in_union_611583:
                    # Runtime conditional SSA (line 1035)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1036):
                
                # Assigning a Call to a Name (line 1036):
                
                # Call to _munp(...): (line 1036)
                # Processing the call arguments (line 1036)
                int_611586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 40), 'int')
                # Getting the type of 'goodargs' (line 1036)
                goodargs_611587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 44), 'goodargs', False)
                # Processing the call keyword arguments (line 1036)
                kwargs_611588 = {}
                # Getting the type of 'self' (line 1036)
                self_611584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 29), 'self', False)
                # Obtaining the member '_munp' of a type (line 1036)
                _munp_611585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 29), self_611584, '_munp')
                # Calling _munp(args, kwargs) (line 1036)
                _munp_call_result_611589 = invoke(stypy.reporting.localization.Localization(__file__, 1036, 29), _munp_611585, *[int_611586, goodargs_611587], **kwargs_611588)
                
                # Assigning a type to the variable 'mu' (line 1036)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1036, 24), 'mu', _munp_call_result_611589)

                if more_types_in_union_611583:
                    # SSA join for if statement (line 1035)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Assigning a BinOp to a Name (line 1037):
            
            # Assigning a BinOp to a Name (line 1037):
            # Getting the type of 'mu2p' (line 1037)
            mu2p_611590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 26), 'mu2p')
            # Getting the type of 'mu' (line 1037)
            mu_611591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 33), 'mu')
            # Getting the type of 'mu' (line 1037)
            mu_611592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 38), 'mu')
            # Applying the binary operator '*' (line 1037)
            result_mul_611593 = python_operator(stypy.reporting.localization.Localization(__file__, 1037, 33), '*', mu_611591, mu_611592)
            
            # Applying the binary operator '-' (line 1037)
            result_sub_611594 = python_operator(stypy.reporting.localization.Localization(__file__, 1037, 26), '-', mu2p_611590, result_mul_611593)
            
            # Assigning a type to the variable 'mu2' (line 1037)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1037, 20), 'mu2', result_sub_611594)
            
            
            # Call to isinf(...): (line 1038)
            # Processing the call arguments (line 1038)
            # Getting the type of 'mu' (line 1038)
            mu_611597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 32), 'mu', False)
            # Processing the call keyword arguments (line 1038)
            kwargs_611598 = {}
            # Getting the type of 'np' (line 1038)
            np_611595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 23), 'np', False)
            # Obtaining the member 'isinf' of a type (line 1038)
            isinf_611596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 23), np_611595, 'isinf')
            # Calling isinf(args, kwargs) (line 1038)
            isinf_call_result_611599 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 23), isinf_611596, *[mu_611597], **kwargs_611598)
            
            # Testing the type of an if condition (line 1038)
            if_condition_611600 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1038, 20), isinf_call_result_611599)
            # Assigning a type to the variable 'if_condition_611600' (line 1038)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1038, 20), 'if_condition_611600', if_condition_611600)
            # SSA begins for if statement (line 1038)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Attribute to a Name (line 1040):
            
            # Assigning a Attribute to a Name (line 1040):
            # Getting the type of 'np' (line 1040)
            np_611601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 30), 'np')
            # Obtaining the member 'inf' of a type (line 1040)
            inf_611602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 30), np_611601, 'inf')
            # Assigning a type to the variable 'mu2' (line 1040)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 24), 'mu2', inf_611602)
            # SSA join for if statement (line 1038)
            module_type_store = module_type_store.join_ssa_context()
            

            if more_types_in_union_611573:
                # SSA join for if statement (line 1033)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 1041):
        
        # Assigning a Call to a Name (line 1041):
        
        # Call to copy(...): (line 1041)
        # Processing the call keyword arguments (line 1041)
        kwargs_611605 = {}
        # Getting the type of 'default' (line 1041)
        default_611603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 23), 'default', False)
        # Obtaining the member 'copy' of a type (line 1041)
        copy_611604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1041, 23), default_611603, 'copy')
        # Calling copy(args, kwargs) (line 1041)
        copy_call_result_611606 = invoke(stypy.reporting.localization.Localization(__file__, 1041, 23), copy_611604, *[], **kwargs_611605)
        
        # Assigning a type to the variable 'out0' (line 1041)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1041, 16), 'out0', copy_call_result_611606)
        
        # Call to place(...): (line 1042)
        # Processing the call arguments (line 1042)
        # Getting the type of 'out0' (line 1042)
        out0_611608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 22), 'out0', False)
        # Getting the type of 'cond' (line 1042)
        cond_611609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 28), 'cond', False)
        # Getting the type of 'mu2' (line 1042)
        mu2_611610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 34), 'mu2', False)
        # Getting the type of 'scale' (line 1042)
        scale_611611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 40), 'scale', False)
        # Applying the binary operator '*' (line 1042)
        result_mul_611612 = python_operator(stypy.reporting.localization.Localization(__file__, 1042, 34), '*', mu2_611610, scale_611611)
        
        # Getting the type of 'scale' (line 1042)
        scale_611613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 48), 'scale', False)
        # Applying the binary operator '*' (line 1042)
        result_mul_611614 = python_operator(stypy.reporting.localization.Localization(__file__, 1042, 46), '*', result_mul_611612, scale_611613)
        
        # Processing the call keyword arguments (line 1042)
        kwargs_611615 = {}
        # Getting the type of 'place' (line 1042)
        place_611607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 16), 'place', False)
        # Calling place(args, kwargs) (line 1042)
        place_call_result_611616 = invoke(stypy.reporting.localization.Localization(__file__, 1042, 16), place_611607, *[out0_611608, cond_611609, result_mul_611614], **kwargs_611615)
        
        
        # Call to append(...): (line 1043)
        # Processing the call arguments (line 1043)
        # Getting the type of 'out0' (line 1043)
        out0_611619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 30), 'out0', False)
        # Processing the call keyword arguments (line 1043)
        kwargs_611620 = {}
        # Getting the type of 'output' (line 1043)
        output_611617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 16), 'output', False)
        # Obtaining the member 'append' of a type (line 1043)
        append_611618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 16), output_611617, 'append')
        # Calling append(args, kwargs) (line 1043)
        append_call_result_611621 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 16), append_611618, *[out0_611619], **kwargs_611620)
        
        # SSA join for if statement (line 1032)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        str_611622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 15), 'str', 's')
        # Getting the type of 'moments' (line 1045)
        moments_611623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 22), 'moments')
        # Applying the binary operator 'in' (line 1045)
        result_contains_611624 = python_operator(stypy.reporting.localization.Localization(__file__, 1045, 15), 'in', str_611622, moments_611623)
        
        # Testing the type of an if condition (line 1045)
        if_condition_611625 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1045, 12), result_contains_611624)
        # Assigning a type to the variable 'if_condition_611625' (line 1045)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1045, 12), 'if_condition_611625', if_condition_611625)
        # SSA begins for if statement (line 1045)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 1046)
        # Getting the type of 'g1' (line 1046)
        g1_611626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 19), 'g1')
        # Getting the type of 'None' (line 1046)
        None_611627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 25), 'None')
        
        (may_be_611628, more_types_in_union_611629) = may_be_none(g1_611626, None_611627)

        if may_be_611628:

            if more_types_in_union_611629:
                # Runtime conditional SSA (line 1046)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1047):
            
            # Assigning a Call to a Name (line 1047):
            
            # Call to _munp(...): (line 1047)
            # Processing the call arguments (line 1047)
            int_611632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 38), 'int')
            # Getting the type of 'goodargs' (line 1047)
            goodargs_611633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 42), 'goodargs', False)
            # Processing the call keyword arguments (line 1047)
            kwargs_611634 = {}
            # Getting the type of 'self' (line 1047)
            self_611630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 27), 'self', False)
            # Obtaining the member '_munp' of a type (line 1047)
            _munp_611631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1047, 27), self_611630, '_munp')
            # Calling _munp(args, kwargs) (line 1047)
            _munp_call_result_611635 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 27), _munp_611631, *[int_611632, goodargs_611633], **kwargs_611634)
            
            # Assigning a type to the variable 'mu3p' (line 1047)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1047, 20), 'mu3p', _munp_call_result_611635)
            
            # Type idiom detected: calculating its left and rigth part (line 1048)
            # Getting the type of 'mu' (line 1048)
            mu_611636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 23), 'mu')
            # Getting the type of 'None' (line 1048)
            None_611637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 29), 'None')
            
            (may_be_611638, more_types_in_union_611639) = may_be_none(mu_611636, None_611637)

            if may_be_611638:

                if more_types_in_union_611639:
                    # Runtime conditional SSA (line 1048)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1049):
                
                # Assigning a Call to a Name (line 1049):
                
                # Call to _munp(...): (line 1049)
                # Processing the call arguments (line 1049)
                int_611642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1049, 40), 'int')
                # Getting the type of 'goodargs' (line 1049)
                goodargs_611643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 44), 'goodargs', False)
                # Processing the call keyword arguments (line 1049)
                kwargs_611644 = {}
                # Getting the type of 'self' (line 1049)
                self_611640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 29), 'self', False)
                # Obtaining the member '_munp' of a type (line 1049)
                _munp_611641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1049, 29), self_611640, '_munp')
                # Calling _munp(args, kwargs) (line 1049)
                _munp_call_result_611645 = invoke(stypy.reporting.localization.Localization(__file__, 1049, 29), _munp_611641, *[int_611642, goodargs_611643], **kwargs_611644)
                
                # Assigning a type to the variable 'mu' (line 1049)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1049, 24), 'mu', _munp_call_result_611645)

                if more_types_in_union_611639:
                    # SSA join for if statement (line 1048)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Type idiom detected: calculating its left and rigth part (line 1050)
            # Getting the type of 'mu2' (line 1050)
            mu2_611646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 23), 'mu2')
            # Getting the type of 'None' (line 1050)
            None_611647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 30), 'None')
            
            (may_be_611648, more_types_in_union_611649) = may_be_none(mu2_611646, None_611647)

            if may_be_611648:

                if more_types_in_union_611649:
                    # Runtime conditional SSA (line 1050)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1051):
                
                # Assigning a Call to a Name (line 1051):
                
                # Call to _munp(...): (line 1051)
                # Processing the call arguments (line 1051)
                int_611652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1051, 42), 'int')
                # Getting the type of 'goodargs' (line 1051)
                goodargs_611653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 46), 'goodargs', False)
                # Processing the call keyword arguments (line 1051)
                kwargs_611654 = {}
                # Getting the type of 'self' (line 1051)
                self_611650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 31), 'self', False)
                # Obtaining the member '_munp' of a type (line 1051)
                _munp_611651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 31), self_611650, '_munp')
                # Calling _munp(args, kwargs) (line 1051)
                _munp_call_result_611655 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 31), _munp_611651, *[int_611652, goodargs_611653], **kwargs_611654)
                
                # Assigning a type to the variable 'mu2p' (line 1051)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1051, 24), 'mu2p', _munp_call_result_611655)
                
                # Assigning a BinOp to a Name (line 1052):
                
                # Assigning a BinOp to a Name (line 1052):
                # Getting the type of 'mu2p' (line 1052)
                mu2p_611656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 30), 'mu2p')
                # Getting the type of 'mu' (line 1052)
                mu_611657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 37), 'mu')
                # Getting the type of 'mu' (line 1052)
                mu_611658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 42), 'mu')
                # Applying the binary operator '*' (line 1052)
                result_mul_611659 = python_operator(stypy.reporting.localization.Localization(__file__, 1052, 37), '*', mu_611657, mu_611658)
                
                # Applying the binary operator '-' (line 1052)
                result_sub_611660 = python_operator(stypy.reporting.localization.Localization(__file__, 1052, 30), '-', mu2p_611656, result_mul_611659)
                
                # Assigning a type to the variable 'mu2' (line 1052)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1052, 24), 'mu2', result_sub_611660)

                if more_types_in_union_611649:
                    # SSA join for if statement (line 1050)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Call to errstate(...): (line 1053)
            # Processing the call keyword arguments (line 1053)
            str_611663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 45), 'str', 'ignore')
            keyword_611664 = str_611663
            kwargs_611665 = {'invalid': keyword_611664}
            # Getting the type of 'np' (line 1053)
            np_611661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 25), 'np', False)
            # Obtaining the member 'errstate' of a type (line 1053)
            errstate_611662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1053, 25), np_611661, 'errstate')
            # Calling errstate(args, kwargs) (line 1053)
            errstate_call_result_611666 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 25), errstate_611662, *[], **kwargs_611665)
            
            with_611667 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1053, 25), errstate_call_result_611666, 'with parameter', '__enter__', '__exit__')

            if with_611667:
                # Calling the __enter__ method to initiate a with section
                # Obtaining the member '__enter__' of a type (line 1053)
                enter___611668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1053, 25), errstate_call_result_611666, '__enter__')
                with_enter_611669 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 25), enter___611668)
                
                # Assigning a BinOp to a Name (line 1054):
                
                # Assigning a BinOp to a Name (line 1054):
                # Getting the type of 'mu3p' (line 1054)
                mu3p_611670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 30), 'mu3p')
                int_611671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 37), 'int')
                # Getting the type of 'mu' (line 1054)
                mu_611672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 41), 'mu')
                # Applying the binary operator '*' (line 1054)
                result_mul_611673 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 37), '*', int_611671, mu_611672)
                
                # Getting the type of 'mu2' (line 1054)
                mu2_611674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 46), 'mu2')
                # Applying the binary operator '*' (line 1054)
                result_mul_611675 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 44), '*', result_mul_611673, mu2_611674)
                
                # Applying the binary operator '-' (line 1054)
                result_sub_611676 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 30), '-', mu3p_611670, result_mul_611675)
                
                # Getting the type of 'mu' (line 1054)
                mu_611677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 52), 'mu')
                int_611678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1054, 56), 'int')
                # Applying the binary operator '**' (line 1054)
                result_pow_611679 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 52), '**', mu_611677, int_611678)
                
                # Applying the binary operator '-' (line 1054)
                result_sub_611680 = python_operator(stypy.reporting.localization.Localization(__file__, 1054, 50), '-', result_sub_611676, result_pow_611679)
                
                # Assigning a type to the variable 'mu3' (line 1054)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1054, 24), 'mu3', result_sub_611680)
                
                # Assigning a BinOp to a Name (line 1055):
                
                # Assigning a BinOp to a Name (line 1055):
                # Getting the type of 'mu3' (line 1055)
                mu3_611681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 29), 'mu3')
                
                # Call to power(...): (line 1055)
                # Processing the call arguments (line 1055)
                # Getting the type of 'mu2' (line 1055)
                mu2_611684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 44), 'mu2', False)
                float_611685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 49), 'float')
                # Processing the call keyword arguments (line 1055)
                kwargs_611686 = {}
                # Getting the type of 'np' (line 1055)
                np_611682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 35), 'np', False)
                # Obtaining the member 'power' of a type (line 1055)
                power_611683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1055, 35), np_611682, 'power')
                # Calling power(args, kwargs) (line 1055)
                power_call_result_611687 = invoke(stypy.reporting.localization.Localization(__file__, 1055, 35), power_611683, *[mu2_611684, float_611685], **kwargs_611686)
                
                # Applying the binary operator 'div' (line 1055)
                result_div_611688 = python_operator(stypy.reporting.localization.Localization(__file__, 1055, 29), 'div', mu3_611681, power_call_result_611687)
                
                # Assigning a type to the variable 'g1' (line 1055)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1055, 24), 'g1', result_div_611688)
                # Calling the __exit__ method to finish a with section
                # Obtaining the member '__exit__' of a type (line 1053)
                exit___611689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1053, 25), errstate_call_result_611666, '__exit__')
                with_exit_611690 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 25), exit___611689, None, None, None)


            if more_types_in_union_611629:
                # SSA join for if statement (line 1046)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 1056):
        
        # Assigning a Call to a Name (line 1056):
        
        # Call to copy(...): (line 1056)
        # Processing the call keyword arguments (line 1056)
        kwargs_611693 = {}
        # Getting the type of 'default' (line 1056)
        default_611691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 23), 'default', False)
        # Obtaining the member 'copy' of a type (line 1056)
        copy_611692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1056, 23), default_611691, 'copy')
        # Calling copy(args, kwargs) (line 1056)
        copy_call_result_611694 = invoke(stypy.reporting.localization.Localization(__file__, 1056, 23), copy_611692, *[], **kwargs_611693)
        
        # Assigning a type to the variable 'out0' (line 1056)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1056, 16), 'out0', copy_call_result_611694)
        
        # Call to place(...): (line 1057)
        # Processing the call arguments (line 1057)
        # Getting the type of 'out0' (line 1057)
        out0_611696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 22), 'out0', False)
        # Getting the type of 'cond' (line 1057)
        cond_611697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 28), 'cond', False)
        # Getting the type of 'g1' (line 1057)
        g1_611698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 34), 'g1', False)
        # Processing the call keyword arguments (line 1057)
        kwargs_611699 = {}
        # Getting the type of 'place' (line 1057)
        place_611695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 16), 'place', False)
        # Calling place(args, kwargs) (line 1057)
        place_call_result_611700 = invoke(stypy.reporting.localization.Localization(__file__, 1057, 16), place_611695, *[out0_611696, cond_611697, g1_611698], **kwargs_611699)
        
        
        # Call to append(...): (line 1058)
        # Processing the call arguments (line 1058)
        # Getting the type of 'out0' (line 1058)
        out0_611703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 30), 'out0', False)
        # Processing the call keyword arguments (line 1058)
        kwargs_611704 = {}
        # Getting the type of 'output' (line 1058)
        output_611701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 16), 'output', False)
        # Obtaining the member 'append' of a type (line 1058)
        append_611702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1058, 16), output_611701, 'append')
        # Calling append(args, kwargs) (line 1058)
        append_call_result_611705 = invoke(stypy.reporting.localization.Localization(__file__, 1058, 16), append_611702, *[out0_611703], **kwargs_611704)
        
        # SSA join for if statement (line 1045)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        str_611706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 15), 'str', 'k')
        # Getting the type of 'moments' (line 1060)
        moments_611707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 22), 'moments')
        # Applying the binary operator 'in' (line 1060)
        result_contains_611708 = python_operator(stypy.reporting.localization.Localization(__file__, 1060, 15), 'in', str_611706, moments_611707)
        
        # Testing the type of an if condition (line 1060)
        if_condition_611709 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1060, 12), result_contains_611708)
        # Assigning a type to the variable 'if_condition_611709' (line 1060)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 12), 'if_condition_611709', if_condition_611709)
        # SSA begins for if statement (line 1060)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 1061)
        # Getting the type of 'g2' (line 1061)
        g2_611710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 19), 'g2')
        # Getting the type of 'None' (line 1061)
        None_611711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 25), 'None')
        
        (may_be_611712, more_types_in_union_611713) = may_be_none(g2_611710, None_611711)

        if may_be_611712:

            if more_types_in_union_611713:
                # Runtime conditional SSA (line 1061)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1062):
            
            # Assigning a Call to a Name (line 1062):
            
            # Call to _munp(...): (line 1062)
            # Processing the call arguments (line 1062)
            int_611716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, 38), 'int')
            # Getting the type of 'goodargs' (line 1062)
            goodargs_611717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 42), 'goodargs', False)
            # Processing the call keyword arguments (line 1062)
            kwargs_611718 = {}
            # Getting the type of 'self' (line 1062)
            self_611714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 27), 'self', False)
            # Obtaining the member '_munp' of a type (line 1062)
            _munp_611715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 27), self_611714, '_munp')
            # Calling _munp(args, kwargs) (line 1062)
            _munp_call_result_611719 = invoke(stypy.reporting.localization.Localization(__file__, 1062, 27), _munp_611715, *[int_611716, goodargs_611717], **kwargs_611718)
            
            # Assigning a type to the variable 'mu4p' (line 1062)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1062, 20), 'mu4p', _munp_call_result_611719)
            
            # Type idiom detected: calculating its left and rigth part (line 1063)
            # Getting the type of 'mu' (line 1063)
            mu_611720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 23), 'mu')
            # Getting the type of 'None' (line 1063)
            None_611721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 29), 'None')
            
            (may_be_611722, more_types_in_union_611723) = may_be_none(mu_611720, None_611721)

            if may_be_611722:

                if more_types_in_union_611723:
                    # Runtime conditional SSA (line 1063)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1064):
                
                # Assigning a Call to a Name (line 1064):
                
                # Call to _munp(...): (line 1064)
                # Processing the call arguments (line 1064)
                int_611726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1064, 40), 'int')
                # Getting the type of 'goodargs' (line 1064)
                goodargs_611727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 44), 'goodargs', False)
                # Processing the call keyword arguments (line 1064)
                kwargs_611728 = {}
                # Getting the type of 'self' (line 1064)
                self_611724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 29), 'self', False)
                # Obtaining the member '_munp' of a type (line 1064)
                _munp_611725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1064, 29), self_611724, '_munp')
                # Calling _munp(args, kwargs) (line 1064)
                _munp_call_result_611729 = invoke(stypy.reporting.localization.Localization(__file__, 1064, 29), _munp_611725, *[int_611726, goodargs_611727], **kwargs_611728)
                
                # Assigning a type to the variable 'mu' (line 1064)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1064, 24), 'mu', _munp_call_result_611729)

                if more_types_in_union_611723:
                    # SSA join for if statement (line 1063)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Type idiom detected: calculating its left and rigth part (line 1065)
            # Getting the type of 'mu2' (line 1065)
            mu2_611730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 23), 'mu2')
            # Getting the type of 'None' (line 1065)
            None_611731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 30), 'None')
            
            (may_be_611732, more_types_in_union_611733) = may_be_none(mu2_611730, None_611731)

            if may_be_611732:

                if more_types_in_union_611733:
                    # Runtime conditional SSA (line 1065)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1066):
                
                # Assigning a Call to a Name (line 1066):
                
                # Call to _munp(...): (line 1066)
                # Processing the call arguments (line 1066)
                int_611736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1066, 42), 'int')
                # Getting the type of 'goodargs' (line 1066)
                goodargs_611737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 46), 'goodargs', False)
                # Processing the call keyword arguments (line 1066)
                kwargs_611738 = {}
                # Getting the type of 'self' (line 1066)
                self_611734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1066, 31), 'self', False)
                # Obtaining the member '_munp' of a type (line 1066)
                _munp_611735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1066, 31), self_611734, '_munp')
                # Calling _munp(args, kwargs) (line 1066)
                _munp_call_result_611739 = invoke(stypy.reporting.localization.Localization(__file__, 1066, 31), _munp_611735, *[int_611736, goodargs_611737], **kwargs_611738)
                
                # Assigning a type to the variable 'mu2p' (line 1066)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1066, 24), 'mu2p', _munp_call_result_611739)
                
                # Assigning a BinOp to a Name (line 1067):
                
                # Assigning a BinOp to a Name (line 1067):
                # Getting the type of 'mu2p' (line 1067)
                mu2p_611740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 30), 'mu2p')
                # Getting the type of 'mu' (line 1067)
                mu_611741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 37), 'mu')
                # Getting the type of 'mu' (line 1067)
                mu_611742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 42), 'mu')
                # Applying the binary operator '*' (line 1067)
                result_mul_611743 = python_operator(stypy.reporting.localization.Localization(__file__, 1067, 37), '*', mu_611741, mu_611742)
                
                # Applying the binary operator '-' (line 1067)
                result_sub_611744 = python_operator(stypy.reporting.localization.Localization(__file__, 1067, 30), '-', mu2p_611740, result_mul_611743)
                
                # Assigning a type to the variable 'mu2' (line 1067)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 24), 'mu2', result_sub_611744)

                if more_types_in_union_611733:
                    # SSA join for if statement (line 1065)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Type idiom detected: calculating its left and rigth part (line 1068)
            # Getting the type of 'mu3' (line 1068)
            mu3_611745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 23), 'mu3')
            # Getting the type of 'None' (line 1068)
            None_611746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 30), 'None')
            
            (may_be_611747, more_types_in_union_611748) = may_be_none(mu3_611745, None_611746)

            if may_be_611747:

                if more_types_in_union_611748:
                    # Runtime conditional SSA (line 1068)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Call to a Name (line 1069):
                
                # Assigning a Call to a Name (line 1069):
                
                # Call to _munp(...): (line 1069)
                # Processing the call arguments (line 1069)
                int_611751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1069, 42), 'int')
                # Getting the type of 'goodargs' (line 1069)
                goodargs_611752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 46), 'goodargs', False)
                # Processing the call keyword arguments (line 1069)
                kwargs_611753 = {}
                # Getting the type of 'self' (line 1069)
                self_611749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 31), 'self', False)
                # Obtaining the member '_munp' of a type (line 1069)
                _munp_611750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1069, 31), self_611749, '_munp')
                # Calling _munp(args, kwargs) (line 1069)
                _munp_call_result_611754 = invoke(stypy.reporting.localization.Localization(__file__, 1069, 31), _munp_611750, *[int_611751, goodargs_611752], **kwargs_611753)
                
                # Assigning a type to the variable 'mu3p' (line 1069)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1069, 24), 'mu3p', _munp_call_result_611754)
                
                # Call to errstate(...): (line 1070)
                # Processing the call keyword arguments (line 1070)
                str_611757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1070, 49), 'str', 'ignore')
                keyword_611758 = str_611757
                kwargs_611759 = {'invalid': keyword_611758}
                # Getting the type of 'np' (line 1070)
                np_611755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 29), 'np', False)
                # Obtaining the member 'errstate' of a type (line 1070)
                errstate_611756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1070, 29), np_611755, 'errstate')
                # Calling errstate(args, kwargs) (line 1070)
                errstate_call_result_611760 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 29), errstate_611756, *[], **kwargs_611759)
                
                with_611761 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1070, 29), errstate_call_result_611760, 'with parameter', '__enter__', '__exit__')

                if with_611761:
                    # Calling the __enter__ method to initiate a with section
                    # Obtaining the member '__enter__' of a type (line 1070)
                    enter___611762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1070, 29), errstate_call_result_611760, '__enter__')
                    with_enter_611763 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 29), enter___611762)
                    
                    # Assigning a BinOp to a Name (line 1071):
                    
                    # Assigning a BinOp to a Name (line 1071):
                    # Getting the type of 'mu3p' (line 1071)
                    mu3p_611764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 34), 'mu3p')
                    int_611765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1071, 41), 'int')
                    # Getting the type of 'mu' (line 1071)
                    mu_611766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 45), 'mu')
                    # Applying the binary operator '*' (line 1071)
                    result_mul_611767 = python_operator(stypy.reporting.localization.Localization(__file__, 1071, 41), '*', int_611765, mu_611766)
                    
                    # Getting the type of 'mu2' (line 1071)
                    mu2_611768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 50), 'mu2')
                    # Applying the binary operator '*' (line 1071)
                    result_mul_611769 = python_operator(stypy.reporting.localization.Localization(__file__, 1071, 48), '*', result_mul_611767, mu2_611768)
                    
                    # Applying the binary operator '-' (line 1071)
                    result_sub_611770 = python_operator(stypy.reporting.localization.Localization(__file__, 1071, 34), '-', mu3p_611764, result_mul_611769)
                    
                    # Getting the type of 'mu' (line 1071)
                    mu_611771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1071, 56), 'mu')
                    int_611772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1071, 60), 'int')
                    # Applying the binary operator '**' (line 1071)
                    result_pow_611773 = python_operator(stypy.reporting.localization.Localization(__file__, 1071, 56), '**', mu_611771, int_611772)
                    
                    # Applying the binary operator '-' (line 1071)
                    result_sub_611774 = python_operator(stypy.reporting.localization.Localization(__file__, 1071, 54), '-', result_sub_611770, result_pow_611773)
                    
                    # Assigning a type to the variable 'mu3' (line 1071)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1071, 28), 'mu3', result_sub_611774)
                    # Calling the __exit__ method to finish a with section
                    # Obtaining the member '__exit__' of a type (line 1070)
                    exit___611775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1070, 29), errstate_call_result_611760, '__exit__')
                    with_exit_611776 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 29), exit___611775, None, None, None)


                if more_types_in_union_611748:
                    # SSA join for if statement (line 1068)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Call to errstate(...): (line 1072)
            # Processing the call keyword arguments (line 1072)
            str_611779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 45), 'str', 'ignore')
            keyword_611780 = str_611779
            kwargs_611781 = {'invalid': keyword_611780}
            # Getting the type of 'np' (line 1072)
            np_611777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 25), 'np', False)
            # Obtaining the member 'errstate' of a type (line 1072)
            errstate_611778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1072, 25), np_611777, 'errstate')
            # Calling errstate(args, kwargs) (line 1072)
            errstate_call_result_611782 = invoke(stypy.reporting.localization.Localization(__file__, 1072, 25), errstate_611778, *[], **kwargs_611781)
            
            with_611783 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1072, 25), errstate_call_result_611782, 'with parameter', '__enter__', '__exit__')

            if with_611783:
                # Calling the __enter__ method to initiate a with section
                # Obtaining the member '__enter__' of a type (line 1072)
                enter___611784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1072, 25), errstate_call_result_611782, '__enter__')
                with_enter_611785 = invoke(stypy.reporting.localization.Localization(__file__, 1072, 25), enter___611784)
                
                # Assigning a BinOp to a Name (line 1073):
                
                # Assigning a BinOp to a Name (line 1073):
                # Getting the type of 'mu4p' (line 1073)
                mu4p_611786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 30), 'mu4p')
                int_611787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 37), 'int')
                # Getting the type of 'mu' (line 1073)
                mu_611788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 41), 'mu')
                # Applying the binary operator '*' (line 1073)
                result_mul_611789 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 37), '*', int_611787, mu_611788)
                
                # Getting the type of 'mu3' (line 1073)
                mu3_611790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 46), 'mu3')
                # Applying the binary operator '*' (line 1073)
                result_mul_611791 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 44), '*', result_mul_611789, mu3_611790)
                
                # Applying the binary operator '-' (line 1073)
                result_sub_611792 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 30), '-', mu4p_611786, result_mul_611791)
                
                int_611793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 52), 'int')
                # Getting the type of 'mu' (line 1073)
                mu_611794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 56), 'mu')
                # Applying the binary operator '*' (line 1073)
                result_mul_611795 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 52), '*', int_611793, mu_611794)
                
                # Getting the type of 'mu' (line 1073)
                mu_611796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 61), 'mu')
                # Applying the binary operator '*' (line 1073)
                result_mul_611797 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 59), '*', result_mul_611795, mu_611796)
                
                # Getting the type of 'mu2' (line 1073)
                mu2_611798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 66), 'mu2')
                # Applying the binary operator '*' (line 1073)
                result_mul_611799 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 64), '*', result_mul_611797, mu2_611798)
                
                # Applying the binary operator '-' (line 1073)
                result_sub_611800 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 50), '-', result_sub_611792, result_mul_611799)
                
                # Getting the type of 'mu' (line 1073)
                mu_611801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 72), 'mu')
                int_611802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 76), 'int')
                # Applying the binary operator '**' (line 1073)
                result_pow_611803 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 72), '**', mu_611801, int_611802)
                
                # Applying the binary operator '-' (line 1073)
                result_sub_611804 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 70), '-', result_sub_611800, result_pow_611803)
                
                # Assigning a type to the variable 'mu4' (line 1073)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 24), 'mu4', result_sub_611804)
                
                # Assigning a BinOp to a Name (line 1074):
                
                # Assigning a BinOp to a Name (line 1074):
                # Getting the type of 'mu4' (line 1074)
                mu4_611805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 29), 'mu4')
                # Getting the type of 'mu2' (line 1074)
                mu2_611806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 35), 'mu2')
                float_611807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 40), 'float')
                # Applying the binary operator '**' (line 1074)
                result_pow_611808 = python_operator(stypy.reporting.localization.Localization(__file__, 1074, 35), '**', mu2_611806, float_611807)
                
                # Applying the binary operator 'div' (line 1074)
                result_div_611809 = python_operator(stypy.reporting.localization.Localization(__file__, 1074, 29), 'div', mu4_611805, result_pow_611808)
                
                float_611810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 46), 'float')
                # Applying the binary operator '-' (line 1074)
                result_sub_611811 = python_operator(stypy.reporting.localization.Localization(__file__, 1074, 29), '-', result_div_611809, float_611810)
                
                # Assigning a type to the variable 'g2' (line 1074)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1074, 24), 'g2', result_sub_611811)
                # Calling the __exit__ method to finish a with section
                # Obtaining the member '__exit__' of a type (line 1072)
                exit___611812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1072, 25), errstate_call_result_611782, '__exit__')
                with_exit_611813 = invoke(stypy.reporting.localization.Localization(__file__, 1072, 25), exit___611812, None, None, None)


            if more_types_in_union_611713:
                # SSA join for if statement (line 1061)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 1075):
        
        # Assigning a Call to a Name (line 1075):
        
        # Call to copy(...): (line 1075)
        # Processing the call keyword arguments (line 1075)
        kwargs_611816 = {}
        # Getting the type of 'default' (line 1075)
        default_611814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 23), 'default', False)
        # Obtaining the member 'copy' of a type (line 1075)
        copy_611815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1075, 23), default_611814, 'copy')
        # Calling copy(args, kwargs) (line 1075)
        copy_call_result_611817 = invoke(stypy.reporting.localization.Localization(__file__, 1075, 23), copy_611815, *[], **kwargs_611816)
        
        # Assigning a type to the variable 'out0' (line 1075)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1075, 16), 'out0', copy_call_result_611817)
        
        # Call to place(...): (line 1076)
        # Processing the call arguments (line 1076)
        # Getting the type of 'out0' (line 1076)
        out0_611819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 22), 'out0', False)
        # Getting the type of 'cond' (line 1076)
        cond_611820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 28), 'cond', False)
        # Getting the type of 'g2' (line 1076)
        g2_611821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 34), 'g2', False)
        # Processing the call keyword arguments (line 1076)
        kwargs_611822 = {}
        # Getting the type of 'place' (line 1076)
        place_611818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 16), 'place', False)
        # Calling place(args, kwargs) (line 1076)
        place_call_result_611823 = invoke(stypy.reporting.localization.Localization(__file__, 1076, 16), place_611818, *[out0_611819, cond_611820, g2_611821], **kwargs_611822)
        
        
        # Call to append(...): (line 1077)
        # Processing the call arguments (line 1077)
        # Getting the type of 'out0' (line 1077)
        out0_611826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 30), 'out0', False)
        # Processing the call keyword arguments (line 1077)
        kwargs_611827 = {}
        # Getting the type of 'output' (line 1077)
        output_611824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 16), 'output', False)
        # Obtaining the member 'append' of a type (line 1077)
        append_611825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1077, 16), output_611824, 'append')
        # Calling append(args, kwargs) (line 1077)
        append_call_result_611828 = invoke(stypy.reporting.localization.Localization(__file__, 1077, 16), append_611825, *[out0_611826], **kwargs_611827)
        
        # SSA join for if statement (line 1060)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA branch for the else part of an if statement (line 1007)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a List to a Name (line 1079):
        
        # Assigning a List to a Name (line 1079):
        
        # Obtaining an instance of the builtin type 'list' (line 1079)
        list_611829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1079, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1079)
        
        # Assigning a type to the variable 'output' (line 1079)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1079, 12), 'output', list_611829)
        
        # Getting the type of 'moments' (line 1080)
        moments_611830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1080, 21), 'moments')
        # Testing the type of a for loop iterable (line 1080)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1080, 12), moments_611830)
        # Getting the type of the for loop variable (line 1080)
        for_loop_var_611831 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1080, 12), moments_611830)
        # Assigning a type to the variable '_' (line 1080)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1080, 12), '_', for_loop_var_611831)
        # SSA begins for a for statement (line 1080)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1081):
        
        # Assigning a Call to a Name (line 1081):
        
        # Call to copy(...): (line 1081)
        # Processing the call keyword arguments (line 1081)
        kwargs_611834 = {}
        # Getting the type of 'default' (line 1081)
        default_611832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1081, 23), 'default', False)
        # Obtaining the member 'copy' of a type (line 1081)
        copy_611833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1081, 23), default_611832, 'copy')
        # Calling copy(args, kwargs) (line 1081)
        copy_call_result_611835 = invoke(stypy.reporting.localization.Localization(__file__, 1081, 23), copy_611833, *[], **kwargs_611834)
        
        # Assigning a type to the variable 'out0' (line 1081)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1081, 16), 'out0', copy_call_result_611835)
        
        # Call to append(...): (line 1082)
        # Processing the call arguments (line 1082)
        # Getting the type of 'out0' (line 1082)
        out0_611838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 30), 'out0', False)
        # Processing the call keyword arguments (line 1082)
        kwargs_611839 = {}
        # Getting the type of 'output' (line 1082)
        output_611836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1082, 16), 'output', False)
        # Obtaining the member 'append' of a type (line 1082)
        append_611837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1082, 16), output_611836, 'append')
        # Calling append(args, kwargs) (line 1082)
        append_call_result_611840 = invoke(stypy.reporting.localization.Localization(__file__, 1082, 16), append_611837, *[out0_611838], **kwargs_611839)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1007)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 1084)
        # Processing the call arguments (line 1084)
        # Getting the type of 'output' (line 1084)
        output_611842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 15), 'output', False)
        # Processing the call keyword arguments (line 1084)
        kwargs_611843 = {}
        # Getting the type of 'len' (line 1084)
        len_611841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 11), 'len', False)
        # Calling len(args, kwargs) (line 1084)
        len_call_result_611844 = invoke(stypy.reporting.localization.Localization(__file__, 1084, 11), len_611841, *[output_611842], **kwargs_611843)
        
        int_611845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 26), 'int')
        # Applying the binary operator '==' (line 1084)
        result_eq_611846 = python_operator(stypy.reporting.localization.Localization(__file__, 1084, 11), '==', len_call_result_611844, int_611845)
        
        # Testing the type of an if condition (line 1084)
        if_condition_611847 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1084, 8), result_eq_611846)
        # Assigning a type to the variable 'if_condition_611847' (line 1084)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1084, 8), 'if_condition_611847', if_condition_611847)
        # SSA begins for if statement (line 1084)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        int_611848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1085, 26), 'int')
        # Getting the type of 'output' (line 1085)
        output_611849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1085, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 1085)
        getitem___611850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1085, 19), output_611849, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1085)
        subscript_call_result_611851 = invoke(stypy.reporting.localization.Localization(__file__, 1085, 19), getitem___611850, int_611848)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1085)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1085, 12), 'stypy_return_type', subscript_call_result_611851)
        # SSA branch for the else part of an if statement (line 1084)
        module_type_store.open_ssa_branch('else')
        
        # Call to tuple(...): (line 1087)
        # Processing the call arguments (line 1087)
        # Getting the type of 'output' (line 1087)
        output_611853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 25), 'output', False)
        # Processing the call keyword arguments (line 1087)
        kwargs_611854 = {}
        # Getting the type of 'tuple' (line 1087)
        tuple_611852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 19), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1087)
        tuple_call_result_611855 = invoke(stypy.reporting.localization.Localization(__file__, 1087, 19), tuple_611852, *[output_611853], **kwargs_611854)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1087)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1087, 12), 'stypy_return_type', tuple_call_result_611855)
        # SSA join for if statement (line 1084)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'stats(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'stats' in the type store
        # Getting the type of 'stypy_return_type' (line 971)
        stypy_return_type_611856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611856)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'stats'
        return stypy_return_type_611856


    @norecursion
    def entropy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'entropy'
        module_type_store = module_type_store.open_function_context('entropy', 1089, 4, False)
        # Assigning a type to the variable 'self' (line 1090)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1090, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.entropy.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.entropy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.entropy.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.entropy.__dict__.__setitem__('stypy_function_name', 'rv_generic.entropy')
        rv_generic.entropy.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.entropy.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.entropy.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.entropy.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.entropy.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.entropy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.entropy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.entropy', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'entropy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'entropy(...)' code ##################

        str_611857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1111, (-1)), 'str', '\n        Differential entropy of the RV.\n\n        Parameters\n        ----------\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter (default=0).\n        scale : array_like, optional  (continuous distributions only).\n            Scale parameter (default=1).\n\n        Notes\n        -----\n        Entropy is defined base `e`:\n\n        >>> drv = rv_discrete(values=((0, 1), (0.5, 0.5)))\n        >>> np.allclose(drv.entropy(), np.log(2.0))\n        True\n\n        ')
        
        # Assigning a Call to a Tuple (line 1112):
        
        # Assigning a Subscript to a Name (line 1112):
        
        # Obtaining the type of the subscript
        int_611858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 8), 'int')
        
        # Call to _parse_args(...): (line 1112)
        # Getting the type of 'args' (line 1112)
        args_611861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 45), 'args', False)
        # Processing the call keyword arguments (line 1112)
        # Getting the type of 'kwds' (line 1112)
        kwds_611862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 53), 'kwds', False)
        kwargs_611863 = {'kwds_611862': kwds_611862}
        # Getting the type of 'self' (line 1112)
        self_611859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1112)
        _parse_args_611860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1112, 27), self_611859, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1112)
        _parse_args_call_result_611864 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 27), _parse_args_611860, *[args_611861], **kwargs_611863)
        
        # Obtaining the member '__getitem__' of a type (line 1112)
        getitem___611865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1112, 8), _parse_args_call_result_611864, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1112)
        subscript_call_result_611866 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 8), getitem___611865, int_611858)
        
        # Assigning a type to the variable 'tuple_var_assignment_609265' (line 1112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 8), 'tuple_var_assignment_609265', subscript_call_result_611866)
        
        # Assigning a Subscript to a Name (line 1112):
        
        # Obtaining the type of the subscript
        int_611867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 8), 'int')
        
        # Call to _parse_args(...): (line 1112)
        # Getting the type of 'args' (line 1112)
        args_611870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 45), 'args', False)
        # Processing the call keyword arguments (line 1112)
        # Getting the type of 'kwds' (line 1112)
        kwds_611871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 53), 'kwds', False)
        kwargs_611872 = {'kwds_611871': kwds_611871}
        # Getting the type of 'self' (line 1112)
        self_611868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1112)
        _parse_args_611869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1112, 27), self_611868, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1112)
        _parse_args_call_result_611873 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 27), _parse_args_611869, *[args_611870], **kwargs_611872)
        
        # Obtaining the member '__getitem__' of a type (line 1112)
        getitem___611874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1112, 8), _parse_args_call_result_611873, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1112)
        subscript_call_result_611875 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 8), getitem___611874, int_611867)
        
        # Assigning a type to the variable 'tuple_var_assignment_609266' (line 1112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 8), 'tuple_var_assignment_609266', subscript_call_result_611875)
        
        # Assigning a Subscript to a Name (line 1112):
        
        # Obtaining the type of the subscript
        int_611876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1112, 8), 'int')
        
        # Call to _parse_args(...): (line 1112)
        # Getting the type of 'args' (line 1112)
        args_611879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 45), 'args', False)
        # Processing the call keyword arguments (line 1112)
        # Getting the type of 'kwds' (line 1112)
        kwds_611880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 53), 'kwds', False)
        kwargs_611881 = {'kwds_611880': kwds_611880}
        # Getting the type of 'self' (line 1112)
        self_611877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1112)
        _parse_args_611878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1112, 27), self_611877, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1112)
        _parse_args_call_result_611882 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 27), _parse_args_611878, *[args_611879], **kwargs_611881)
        
        # Obtaining the member '__getitem__' of a type (line 1112)
        getitem___611883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1112, 8), _parse_args_call_result_611882, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1112)
        subscript_call_result_611884 = invoke(stypy.reporting.localization.Localization(__file__, 1112, 8), getitem___611883, int_611876)
        
        # Assigning a type to the variable 'tuple_var_assignment_609267' (line 1112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 8), 'tuple_var_assignment_609267', subscript_call_result_611884)
        
        # Assigning a Name to a Name (line 1112):
        # Getting the type of 'tuple_var_assignment_609265' (line 1112)
        tuple_var_assignment_609265_611885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 8), 'tuple_var_assignment_609265')
        # Assigning a type to the variable 'args' (line 1112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 8), 'args', tuple_var_assignment_609265_611885)
        
        # Assigning a Name to a Name (line 1112):
        # Getting the type of 'tuple_var_assignment_609266' (line 1112)
        tuple_var_assignment_609266_611886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 8), 'tuple_var_assignment_609266')
        # Assigning a type to the variable 'loc' (line 1112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 14), 'loc', tuple_var_assignment_609266_611886)
        
        # Assigning a Name to a Name (line 1112):
        # Getting the type of 'tuple_var_assignment_609267' (line 1112)
        tuple_var_assignment_609267_611887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 8), 'tuple_var_assignment_609267')
        # Assigning a type to the variable 'scale' (line 1112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 19), 'scale', tuple_var_assignment_609267_611887)
        
        # Assigning a Call to a Name (line 1114):
        
        # Assigning a Call to a Name (line 1114):
        
        # Call to tuple(...): (line 1114)
        # Processing the call arguments (line 1114)
        
        # Call to map(...): (line 1114)
        # Processing the call arguments (line 1114)
        # Getting the type of 'asarray' (line 1114)
        asarray_611890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 25), 'asarray', False)
        # Getting the type of 'args' (line 1114)
        args_611891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 34), 'args', False)
        # Processing the call keyword arguments (line 1114)
        kwargs_611892 = {}
        # Getting the type of 'map' (line 1114)
        map_611889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 21), 'map', False)
        # Calling map(args, kwargs) (line 1114)
        map_call_result_611893 = invoke(stypy.reporting.localization.Localization(__file__, 1114, 21), map_611889, *[asarray_611890, args_611891], **kwargs_611892)
        
        # Processing the call keyword arguments (line 1114)
        kwargs_611894 = {}
        # Getting the type of 'tuple' (line 1114)
        tuple_611888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1114)
        tuple_call_result_611895 = invoke(stypy.reporting.localization.Localization(__file__, 1114, 15), tuple_611888, *[map_call_result_611893], **kwargs_611894)
        
        # Assigning a type to the variable 'args' (line 1114)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1114, 8), 'args', tuple_call_result_611895)
        
        # Assigning a BinOp to a Name (line 1115):
        
        # Assigning a BinOp to a Name (line 1115):
        
        # Call to _argcheck(...): (line 1115)
        # Getting the type of 'args' (line 1115)
        args_611898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 32), 'args', False)
        # Processing the call keyword arguments (line 1115)
        kwargs_611899 = {}
        # Getting the type of 'self' (line 1115)
        self_611896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1115)
        _argcheck_611897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1115, 16), self_611896, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1115)
        _argcheck_call_result_611900 = invoke(stypy.reporting.localization.Localization(__file__, 1115, 16), _argcheck_611897, *[args_611898], **kwargs_611899)
        
        
        # Getting the type of 'scale' (line 1115)
        scale_611901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 41), 'scale')
        int_611902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1115, 49), 'int')
        # Applying the binary operator '>' (line 1115)
        result_gt_611903 = python_operator(stypy.reporting.localization.Localization(__file__, 1115, 41), '>', scale_611901, int_611902)
        
        # Applying the binary operator '&' (line 1115)
        result_and__611904 = python_operator(stypy.reporting.localization.Localization(__file__, 1115, 16), '&', _argcheck_call_result_611900, result_gt_611903)
        
        
        # Getting the type of 'loc' (line 1115)
        loc_611905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 55), 'loc')
        # Getting the type of 'loc' (line 1115)
        loc_611906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1115, 62), 'loc')
        # Applying the binary operator '==' (line 1115)
        result_eq_611907 = python_operator(stypy.reporting.localization.Localization(__file__, 1115, 55), '==', loc_611905, loc_611906)
        
        # Applying the binary operator '&' (line 1115)
        result_and__611908 = python_operator(stypy.reporting.localization.Localization(__file__, 1115, 52), '&', result_and__611904, result_eq_611907)
        
        # Assigning a type to the variable 'cond0' (line 1115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1115, 8), 'cond0', result_and__611908)
        
        # Assigning a Call to a Name (line 1116):
        
        # Assigning a Call to a Name (line 1116):
        
        # Call to zeros(...): (line 1116)
        # Processing the call arguments (line 1116)
        
        # Call to shape(...): (line 1116)
        # Processing the call arguments (line 1116)
        # Getting the type of 'cond0' (line 1116)
        cond0_611911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 29), 'cond0', False)
        # Processing the call keyword arguments (line 1116)
        kwargs_611912 = {}
        # Getting the type of 'shape' (line 1116)
        shape_611910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 1116)
        shape_call_result_611913 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 23), shape_611910, *[cond0_611911], **kwargs_611912)
        
        str_611914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1116, 37), 'str', 'd')
        # Processing the call keyword arguments (line 1116)
        kwargs_611915 = {}
        # Getting the type of 'zeros' (line 1116)
        zeros_611909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 1116)
        zeros_call_result_611916 = invoke(stypy.reporting.localization.Localization(__file__, 1116, 17), zeros_611909, *[shape_call_result_611913, str_611914], **kwargs_611915)
        
        # Assigning a type to the variable 'output' (line 1116)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1116, 8), 'output', zeros_call_result_611916)
        
        # Call to place(...): (line 1117)
        # Processing the call arguments (line 1117)
        # Getting the type of 'output' (line 1117)
        output_611918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 14), 'output', False)
        int_611919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1117, 23), 'int')
        # Getting the type of 'cond0' (line 1117)
        cond0_611920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 25), 'cond0', False)
        # Applying the binary operator '-' (line 1117)
        result_sub_611921 = python_operator(stypy.reporting.localization.Localization(__file__, 1117, 23), '-', int_611919, cond0_611920)
        
        # Getting the type of 'self' (line 1117)
        self_611922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 33), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1117)
        badvalue_611923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1117, 33), self_611922, 'badvalue')
        # Processing the call keyword arguments (line 1117)
        kwargs_611924 = {}
        # Getting the type of 'place' (line 1117)
        place_611917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 8), 'place', False)
        # Calling place(args, kwargs) (line 1117)
        place_call_result_611925 = invoke(stypy.reporting.localization.Localization(__file__, 1117, 8), place_611917, *[output_611918, result_sub_611921, badvalue_611923], **kwargs_611924)
        
        
        # Assigning a Call to a Name (line 1118):
        
        # Assigning a Call to a Name (line 1118):
        
        # Call to argsreduce(...): (line 1118)
        # Processing the call arguments (line 1118)
        # Getting the type of 'cond0' (line 1118)
        cond0_611927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 30), 'cond0', False)
        # Getting the type of 'args' (line 1118)
        args_611928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 38), 'args', False)
        # Processing the call keyword arguments (line 1118)
        kwargs_611929 = {}
        # Getting the type of 'argsreduce' (line 1118)
        argsreduce_611926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 19), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1118)
        argsreduce_call_result_611930 = invoke(stypy.reporting.localization.Localization(__file__, 1118, 19), argsreduce_611926, *[cond0_611927, args_611928], **kwargs_611929)
        
        # Assigning a type to the variable 'goodargs' (line 1118)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1118, 8), 'goodargs', argsreduce_call_result_611930)
        
        # Call to place(...): (line 1119)
        # Processing the call arguments (line 1119)
        # Getting the type of 'output' (line 1119)
        output_611932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 14), 'output', False)
        # Getting the type of 'cond0' (line 1119)
        cond0_611933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 22), 'cond0', False)
        
        # Call to vecentropy(...): (line 1119)
        # Getting the type of 'goodargs' (line 1119)
        goodargs_611936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 46), 'goodargs', False)
        # Processing the call keyword arguments (line 1119)
        kwargs_611937 = {}
        # Getting the type of 'self' (line 1119)
        self_611934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 29), 'self', False)
        # Obtaining the member 'vecentropy' of a type (line 1119)
        vecentropy_611935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1119, 29), self_611934, 'vecentropy')
        # Calling vecentropy(args, kwargs) (line 1119)
        vecentropy_call_result_611938 = invoke(stypy.reporting.localization.Localization(__file__, 1119, 29), vecentropy_611935, *[goodargs_611936], **kwargs_611937)
        
        
        # Call to log(...): (line 1119)
        # Processing the call arguments (line 1119)
        # Getting the type of 'scale' (line 1119)
        scale_611940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 62), 'scale', False)
        # Processing the call keyword arguments (line 1119)
        kwargs_611941 = {}
        # Getting the type of 'log' (line 1119)
        log_611939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 58), 'log', False)
        # Calling log(args, kwargs) (line 1119)
        log_call_result_611942 = invoke(stypy.reporting.localization.Localization(__file__, 1119, 58), log_611939, *[scale_611940], **kwargs_611941)
        
        # Applying the binary operator '+' (line 1119)
        result_add_611943 = python_operator(stypy.reporting.localization.Localization(__file__, 1119, 29), '+', vecentropy_call_result_611938, log_call_result_611942)
        
        # Processing the call keyword arguments (line 1119)
        kwargs_611944 = {}
        # Getting the type of 'place' (line 1119)
        place_611931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1119, 8), 'place', False)
        # Calling place(args, kwargs) (line 1119)
        place_call_result_611945 = invoke(stypy.reporting.localization.Localization(__file__, 1119, 8), place_611931, *[output_611932, cond0_611933, result_add_611943], **kwargs_611944)
        
        # Getting the type of 'output' (line 1120)
        output_611946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 1120)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1120, 8), 'stypy_return_type', output_611946)
        
        # ################# End of 'entropy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'entropy' in the type store
        # Getting the type of 'stypy_return_type' (line 1089)
        stypy_return_type_611947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_611947)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'entropy'
        return stypy_return_type_611947


    @norecursion
    def moment(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'moment'
        module_type_store = module_type_store.open_function_context('moment', 1122, 4, False)
        # Assigning a type to the variable 'self' (line 1123)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1123, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.moment.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.moment.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.moment.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.moment.__dict__.__setitem__('stypy_function_name', 'rv_generic.moment')
        rv_generic.moment.__dict__.__setitem__('stypy_param_names_list', ['n'])
        rv_generic.moment.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.moment.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.moment.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.moment.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.moment.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.moment.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.moment', ['n'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'moment', localization, ['n'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'moment(...)' code ##################

        str_611948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1138, (-1)), 'str', '\n        n-th order non-central moment of distribution.\n\n        Parameters\n        ----------\n        n : int, n >= 1\n            Order of moment.\n        arg1, arg2, arg3,... : float\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        ')
        
        # Assigning a Call to a Tuple (line 1139):
        
        # Assigning a Subscript to a Name (line 1139):
        
        # Obtaining the type of the subscript
        int_611949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 8), 'int')
        
        # Call to _parse_args(...): (line 1139)
        # Getting the type of 'args' (line 1139)
        args_611952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 45), 'args', False)
        # Processing the call keyword arguments (line 1139)
        # Getting the type of 'kwds' (line 1139)
        kwds_611953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 53), 'kwds', False)
        kwargs_611954 = {'kwds_611953': kwds_611953}
        # Getting the type of 'self' (line 1139)
        self_611950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1139)
        _parse_args_611951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 27), self_611950, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1139)
        _parse_args_call_result_611955 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 27), _parse_args_611951, *[args_611952], **kwargs_611954)
        
        # Obtaining the member '__getitem__' of a type (line 1139)
        getitem___611956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 8), _parse_args_call_result_611955, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1139)
        subscript_call_result_611957 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 8), getitem___611956, int_611949)
        
        # Assigning a type to the variable 'tuple_var_assignment_609268' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 8), 'tuple_var_assignment_609268', subscript_call_result_611957)
        
        # Assigning a Subscript to a Name (line 1139):
        
        # Obtaining the type of the subscript
        int_611958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 8), 'int')
        
        # Call to _parse_args(...): (line 1139)
        # Getting the type of 'args' (line 1139)
        args_611961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 45), 'args', False)
        # Processing the call keyword arguments (line 1139)
        # Getting the type of 'kwds' (line 1139)
        kwds_611962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 53), 'kwds', False)
        kwargs_611963 = {'kwds_611962': kwds_611962}
        # Getting the type of 'self' (line 1139)
        self_611959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1139)
        _parse_args_611960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 27), self_611959, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1139)
        _parse_args_call_result_611964 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 27), _parse_args_611960, *[args_611961], **kwargs_611963)
        
        # Obtaining the member '__getitem__' of a type (line 1139)
        getitem___611965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 8), _parse_args_call_result_611964, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1139)
        subscript_call_result_611966 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 8), getitem___611965, int_611958)
        
        # Assigning a type to the variable 'tuple_var_assignment_609269' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 8), 'tuple_var_assignment_609269', subscript_call_result_611966)
        
        # Assigning a Subscript to a Name (line 1139):
        
        # Obtaining the type of the subscript
        int_611967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1139, 8), 'int')
        
        # Call to _parse_args(...): (line 1139)
        # Getting the type of 'args' (line 1139)
        args_611970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 45), 'args', False)
        # Processing the call keyword arguments (line 1139)
        # Getting the type of 'kwds' (line 1139)
        kwds_611971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 53), 'kwds', False)
        kwargs_611972 = {'kwds_611971': kwds_611971}
        # Getting the type of 'self' (line 1139)
        self_611968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1139)
        _parse_args_611969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 27), self_611968, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1139)
        _parse_args_call_result_611973 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 27), _parse_args_611969, *[args_611970], **kwargs_611972)
        
        # Obtaining the member '__getitem__' of a type (line 1139)
        getitem___611974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1139, 8), _parse_args_call_result_611973, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1139)
        subscript_call_result_611975 = invoke(stypy.reporting.localization.Localization(__file__, 1139, 8), getitem___611974, int_611967)
        
        # Assigning a type to the variable 'tuple_var_assignment_609270' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 8), 'tuple_var_assignment_609270', subscript_call_result_611975)
        
        # Assigning a Name to a Name (line 1139):
        # Getting the type of 'tuple_var_assignment_609268' (line 1139)
        tuple_var_assignment_609268_611976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 8), 'tuple_var_assignment_609268')
        # Assigning a type to the variable 'args' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 8), 'args', tuple_var_assignment_609268_611976)
        
        # Assigning a Name to a Name (line 1139):
        # Getting the type of 'tuple_var_assignment_609269' (line 1139)
        tuple_var_assignment_609269_611977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 8), 'tuple_var_assignment_609269')
        # Assigning a type to the variable 'loc' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 14), 'loc', tuple_var_assignment_609269_611977)
        
        # Assigning a Name to a Name (line 1139):
        # Getting the type of 'tuple_var_assignment_609270' (line 1139)
        tuple_var_assignment_609270_611978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 8), 'tuple_var_assignment_609270')
        # Assigning a type to the variable 'scale' (line 1139)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 19), 'scale', tuple_var_assignment_609270_611978)
        
        
        
        # Evaluating a boolean operation
        
        # Call to _argcheck(...): (line 1140)
        # Getting the type of 'args' (line 1140)
        args_611981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 32), 'args', False)
        # Processing the call keyword arguments (line 1140)
        kwargs_611982 = {}
        # Getting the type of 'self' (line 1140)
        self_611979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1140)
        _argcheck_611980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1140, 16), self_611979, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1140)
        _argcheck_call_result_611983 = invoke(stypy.reporting.localization.Localization(__file__, 1140, 16), _argcheck_611980, *[args_611981], **kwargs_611982)
        
        
        # Getting the type of 'scale' (line 1140)
        scale_611984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1140, 43), 'scale')
        int_611985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1140, 51), 'int')
        # Applying the binary operator '>' (line 1140)
        result_gt_611986 = python_operator(stypy.reporting.localization.Localization(__file__, 1140, 43), '>', scale_611984, int_611985)
        
        # Applying the binary operator 'and' (line 1140)
        result_and_keyword_611987 = python_operator(stypy.reporting.localization.Localization(__file__, 1140, 16), 'and', _argcheck_call_result_611983, result_gt_611986)
        
        # Applying the 'not' unary operator (line 1140)
        result_not__611988 = python_operator(stypy.reporting.localization.Localization(__file__, 1140, 11), 'not', result_and_keyword_611987)
        
        # Testing the type of an if condition (line 1140)
        if_condition_611989 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1140, 8), result_not__611988)
        # Assigning a type to the variable 'if_condition_611989' (line 1140)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1140, 8), 'if_condition_611989', if_condition_611989)
        # SSA begins for if statement (line 1140)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'nan' (line 1141)
        nan_611990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 19), 'nan')
        # Assigning a type to the variable 'stypy_return_type' (line 1141)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1141, 12), 'stypy_return_type', nan_611990)
        # SSA join for if statement (line 1140)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to floor(...): (line 1142)
        # Processing the call arguments (line 1142)
        # Getting the type of 'n' (line 1142)
        n_611992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 18), 'n', False)
        # Processing the call keyword arguments (line 1142)
        kwargs_611993 = {}
        # Getting the type of 'floor' (line 1142)
        floor_611991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 12), 'floor', False)
        # Calling floor(args, kwargs) (line 1142)
        floor_call_result_611994 = invoke(stypy.reporting.localization.Localization(__file__, 1142, 12), floor_611991, *[n_611992], **kwargs_611993)
        
        # Getting the type of 'n' (line 1142)
        n_611995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 24), 'n')
        # Applying the binary operator '!=' (line 1142)
        result_ne_611996 = python_operator(stypy.reporting.localization.Localization(__file__, 1142, 12), '!=', floor_call_result_611994, n_611995)
        
        # Testing the type of an if condition (line 1142)
        if_condition_611997 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1142, 8), result_ne_611996)
        # Assigning a type to the variable 'if_condition_611997' (line 1142)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1142, 8), 'if_condition_611997', if_condition_611997)
        # SSA begins for if statement (line 1142)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1143)
        # Processing the call arguments (line 1143)
        str_611999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1143, 29), 'str', 'Moment must be an integer.')
        # Processing the call keyword arguments (line 1143)
        kwargs_612000 = {}
        # Getting the type of 'ValueError' (line 1143)
        ValueError_611998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1143)
        ValueError_call_result_612001 = invoke(stypy.reporting.localization.Localization(__file__, 1143, 18), ValueError_611998, *[str_611999], **kwargs_612000)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1143, 12), ValueError_call_result_612001, 'raise parameter', BaseException)
        # SSA join for if statement (line 1142)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'n' (line 1144)
        n_612002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1144, 12), 'n')
        int_612003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1144, 16), 'int')
        # Applying the binary operator '<' (line 1144)
        result_lt_612004 = python_operator(stypy.reporting.localization.Localization(__file__, 1144, 12), '<', n_612002, int_612003)
        
        # Testing the type of an if condition (line 1144)
        if_condition_612005 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1144, 8), result_lt_612004)
        # Assigning a type to the variable 'if_condition_612005' (line 1144)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1144, 8), 'if_condition_612005', if_condition_612005)
        # SSA begins for if statement (line 1144)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1145)
        # Processing the call arguments (line 1145)
        str_612007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1145, 29), 'str', 'Moment must be positive.')
        # Processing the call keyword arguments (line 1145)
        kwargs_612008 = {}
        # Getting the type of 'ValueError' (line 1145)
        ValueError_612006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1145)
        ValueError_call_result_612009 = invoke(stypy.reporting.localization.Localization(__file__, 1145, 18), ValueError_612006, *[str_612007], **kwargs_612008)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1145, 12), ValueError_call_result_612009, 'raise parameter', BaseException)
        # SSA join for if statement (line 1144)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Tuple to a Tuple (line 1146):
        
        # Assigning a Name to a Name (line 1146):
        # Getting the type of 'None' (line 1146)
        None_612010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 26), 'None')
        # Assigning a type to the variable 'tuple_assignment_609271' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 8), 'tuple_assignment_609271', None_612010)
        
        # Assigning a Name to a Name (line 1146):
        # Getting the type of 'None' (line 1146)
        None_612011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 32), 'None')
        # Assigning a type to the variable 'tuple_assignment_609272' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 8), 'tuple_assignment_609272', None_612011)
        
        # Assigning a Name to a Name (line 1146):
        # Getting the type of 'None' (line 1146)
        None_612012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 38), 'None')
        # Assigning a type to the variable 'tuple_assignment_609273' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 8), 'tuple_assignment_609273', None_612012)
        
        # Assigning a Name to a Name (line 1146):
        # Getting the type of 'None' (line 1146)
        None_612013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 44), 'None')
        # Assigning a type to the variable 'tuple_assignment_609274' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 8), 'tuple_assignment_609274', None_612013)
        
        # Assigning a Name to a Name (line 1146):
        # Getting the type of 'tuple_assignment_609271' (line 1146)
        tuple_assignment_609271_612014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 8), 'tuple_assignment_609271')
        # Assigning a type to the variable 'mu' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 8), 'mu', tuple_assignment_609271_612014)
        
        # Assigning a Name to a Name (line 1146):
        # Getting the type of 'tuple_assignment_609272' (line 1146)
        tuple_assignment_609272_612015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 8), 'tuple_assignment_609272')
        # Assigning a type to the variable 'mu2' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 12), 'mu2', tuple_assignment_609272_612015)
        
        # Assigning a Name to a Name (line 1146):
        # Getting the type of 'tuple_assignment_609273' (line 1146)
        tuple_assignment_609273_612016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 8), 'tuple_assignment_609273')
        # Assigning a type to the variable 'g1' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 17), 'g1', tuple_assignment_609273_612016)
        
        # Assigning a Name to a Name (line 1146):
        # Getting the type of 'tuple_assignment_609274' (line 1146)
        tuple_assignment_609274_612017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 8), 'tuple_assignment_609274')
        # Assigning a type to the variable 'g2' (line 1146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1146, 21), 'g2', tuple_assignment_609274_612017)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'n' (line 1147)
        n_612018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'n')
        int_612019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 16), 'int')
        # Applying the binary operator '>' (line 1147)
        result_gt_612020 = python_operator(stypy.reporting.localization.Localization(__file__, 1147, 12), '>', n_612018, int_612019)
        
        
        # Getting the type of 'n' (line 1147)
        n_612021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 24), 'n')
        int_612022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1147, 28), 'int')
        # Applying the binary operator '<' (line 1147)
        result_lt_612023 = python_operator(stypy.reporting.localization.Localization(__file__, 1147, 24), '<', n_612021, int_612022)
        
        # Applying the binary operator 'and' (line 1147)
        result_and_keyword_612024 = python_operator(stypy.reporting.localization.Localization(__file__, 1147, 11), 'and', result_gt_612020, result_lt_612023)
        
        # Testing the type of an if condition (line 1147)
        if_condition_612025 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1147, 8), result_and_keyword_612024)
        # Assigning a type to the variable 'if_condition_612025' (line 1147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1147, 8), 'if_condition_612025', if_condition_612025)
        # SSA begins for if statement (line 1147)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'self' (line 1148)
        self_612026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1148, 15), 'self')
        # Obtaining the member '_stats_has_moments' of a type (line 1148)
        _stats_has_moments_612027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1148, 15), self_612026, '_stats_has_moments')
        # Testing the type of an if condition (line 1148)
        if_condition_612028 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1148, 12), _stats_has_moments_612027)
        # Assigning a type to the variable 'if_condition_612028' (line 1148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1148, 12), 'if_condition_612028', if_condition_612028)
        # SSA begins for if statement (line 1148)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Dict to a Name (line 1149):
        
        # Assigning a Dict to a Name (line 1149):
        
        # Obtaining an instance of the builtin type 'dict' (line 1149)
        dict_612029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 24), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1149)
        # Adding element type (key, value) (line 1149)
        str_612030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 25), 'str', 'moments')
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 1149)
        n_612031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 71), 'n')
        
        # Obtaining an instance of the builtin type 'dict' (line 1149)
        dict_612032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 36), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1149)
        # Adding element type (key, value) (line 1149)
        int_612033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 37), 'int')
        str_612034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 40), 'str', 'm')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1149, 36), dict_612032, (int_612033, str_612034))
        # Adding element type (key, value) (line 1149)
        int_612035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 45), 'int')
        str_612036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 48), 'str', 'v')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1149, 36), dict_612032, (int_612035, str_612036))
        # Adding element type (key, value) (line 1149)
        int_612037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 53), 'int')
        str_612038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 56), 'str', 'vs')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1149, 36), dict_612032, (int_612037, str_612038))
        # Adding element type (key, value) (line 1149)
        int_612039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 62), 'int')
        str_612040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 65), 'str', 'vk')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1149, 36), dict_612032, (int_612039, str_612040))
        
        # Obtaining the member '__getitem__' of a type (line 1149)
        getitem___612041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1149, 36), dict_612032, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1149)
        subscript_call_result_612042 = invoke(stypy.reporting.localization.Localization(__file__, 1149, 36), getitem___612041, n_612031)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1149, 24), dict_612029, (str_612030, subscript_call_result_612042))
        
        # Assigning a type to the variable 'mdict' (line 1149)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1149, 16), 'mdict', dict_612029)
        # SSA branch for the else part of an if statement (line 1148)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Dict to a Name (line 1151):
        
        # Assigning a Dict to a Name (line 1151):
        
        # Obtaining an instance of the builtin type 'dict' (line 1151)
        dict_612043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 24), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 1151)
        
        # Assigning a type to the variable 'mdict' (line 1151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1151, 16), 'mdict', dict_612043)
        # SSA join for if statement (line 1148)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 1152):
        
        # Assigning a Subscript to a Name (line 1152):
        
        # Obtaining the type of the subscript
        int_612044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1152, 12), 'int')
        
        # Call to _stats(...): (line 1152)
        # Getting the type of 'args' (line 1152)
        args_612047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 43), 'args', False)
        # Processing the call keyword arguments (line 1152)
        # Getting the type of 'mdict' (line 1152)
        mdict_612048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 51), 'mdict', False)
        kwargs_612049 = {'mdict_612048': mdict_612048}
        # Getting the type of 'self' (line 1152)
        self_612045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 30), 'self', False)
        # Obtaining the member '_stats' of a type (line 1152)
        _stats_612046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 30), self_612045, '_stats')
        # Calling _stats(args, kwargs) (line 1152)
        _stats_call_result_612050 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 30), _stats_612046, *[args_612047], **kwargs_612049)
        
        # Obtaining the member '__getitem__' of a type (line 1152)
        getitem___612051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 12), _stats_call_result_612050, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1152)
        subscript_call_result_612052 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 12), getitem___612051, int_612044)
        
        # Assigning a type to the variable 'tuple_var_assignment_609275' (line 1152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'tuple_var_assignment_609275', subscript_call_result_612052)
        
        # Assigning a Subscript to a Name (line 1152):
        
        # Obtaining the type of the subscript
        int_612053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1152, 12), 'int')
        
        # Call to _stats(...): (line 1152)
        # Getting the type of 'args' (line 1152)
        args_612056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 43), 'args', False)
        # Processing the call keyword arguments (line 1152)
        # Getting the type of 'mdict' (line 1152)
        mdict_612057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 51), 'mdict', False)
        kwargs_612058 = {'mdict_612057': mdict_612057}
        # Getting the type of 'self' (line 1152)
        self_612054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 30), 'self', False)
        # Obtaining the member '_stats' of a type (line 1152)
        _stats_612055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 30), self_612054, '_stats')
        # Calling _stats(args, kwargs) (line 1152)
        _stats_call_result_612059 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 30), _stats_612055, *[args_612056], **kwargs_612058)
        
        # Obtaining the member '__getitem__' of a type (line 1152)
        getitem___612060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 12), _stats_call_result_612059, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1152)
        subscript_call_result_612061 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 12), getitem___612060, int_612053)
        
        # Assigning a type to the variable 'tuple_var_assignment_609276' (line 1152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'tuple_var_assignment_609276', subscript_call_result_612061)
        
        # Assigning a Subscript to a Name (line 1152):
        
        # Obtaining the type of the subscript
        int_612062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1152, 12), 'int')
        
        # Call to _stats(...): (line 1152)
        # Getting the type of 'args' (line 1152)
        args_612065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 43), 'args', False)
        # Processing the call keyword arguments (line 1152)
        # Getting the type of 'mdict' (line 1152)
        mdict_612066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 51), 'mdict', False)
        kwargs_612067 = {'mdict_612066': mdict_612066}
        # Getting the type of 'self' (line 1152)
        self_612063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 30), 'self', False)
        # Obtaining the member '_stats' of a type (line 1152)
        _stats_612064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 30), self_612063, '_stats')
        # Calling _stats(args, kwargs) (line 1152)
        _stats_call_result_612068 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 30), _stats_612064, *[args_612065], **kwargs_612067)
        
        # Obtaining the member '__getitem__' of a type (line 1152)
        getitem___612069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 12), _stats_call_result_612068, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1152)
        subscript_call_result_612070 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 12), getitem___612069, int_612062)
        
        # Assigning a type to the variable 'tuple_var_assignment_609277' (line 1152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'tuple_var_assignment_609277', subscript_call_result_612070)
        
        # Assigning a Subscript to a Name (line 1152):
        
        # Obtaining the type of the subscript
        int_612071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1152, 12), 'int')
        
        # Call to _stats(...): (line 1152)
        # Getting the type of 'args' (line 1152)
        args_612074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 43), 'args', False)
        # Processing the call keyword arguments (line 1152)
        # Getting the type of 'mdict' (line 1152)
        mdict_612075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 51), 'mdict', False)
        kwargs_612076 = {'mdict_612075': mdict_612075}
        # Getting the type of 'self' (line 1152)
        self_612072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 30), 'self', False)
        # Obtaining the member '_stats' of a type (line 1152)
        _stats_612073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 30), self_612072, '_stats')
        # Calling _stats(args, kwargs) (line 1152)
        _stats_call_result_612077 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 30), _stats_612073, *[args_612074], **kwargs_612076)
        
        # Obtaining the member '__getitem__' of a type (line 1152)
        getitem___612078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 12), _stats_call_result_612077, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1152)
        subscript_call_result_612079 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 12), getitem___612078, int_612071)
        
        # Assigning a type to the variable 'tuple_var_assignment_609278' (line 1152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'tuple_var_assignment_609278', subscript_call_result_612079)
        
        # Assigning a Name to a Name (line 1152):
        # Getting the type of 'tuple_var_assignment_609275' (line 1152)
        tuple_var_assignment_609275_612080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'tuple_var_assignment_609275')
        # Assigning a type to the variable 'mu' (line 1152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'mu', tuple_var_assignment_609275_612080)
        
        # Assigning a Name to a Name (line 1152):
        # Getting the type of 'tuple_var_assignment_609276' (line 1152)
        tuple_var_assignment_609276_612081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'tuple_var_assignment_609276')
        # Assigning a type to the variable 'mu2' (line 1152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 16), 'mu2', tuple_var_assignment_609276_612081)
        
        # Assigning a Name to a Name (line 1152):
        # Getting the type of 'tuple_var_assignment_609277' (line 1152)
        tuple_var_assignment_609277_612082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'tuple_var_assignment_609277')
        # Assigning a type to the variable 'g1' (line 1152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 21), 'g1', tuple_var_assignment_609277_612082)
        
        # Assigning a Name to a Name (line 1152):
        # Getting the type of 'tuple_var_assignment_609278' (line 1152)
        tuple_var_assignment_609278_612083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'tuple_var_assignment_609278')
        # Assigning a type to the variable 'g2' (line 1152)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1152, 25), 'g2', tuple_var_assignment_609278_612083)
        # SSA join for if statement (line 1147)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1153):
        
        # Assigning a Call to a Name (line 1153):
        
        # Call to _moment_from_stats(...): (line 1153)
        # Processing the call arguments (line 1153)
        # Getting the type of 'n' (line 1153)
        n_612085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 33), 'n', False)
        # Getting the type of 'mu' (line 1153)
        mu_612086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 36), 'mu', False)
        # Getting the type of 'mu2' (line 1153)
        mu2_612087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 40), 'mu2', False)
        # Getting the type of 'g1' (line 1153)
        g1_612088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 45), 'g1', False)
        # Getting the type of 'g2' (line 1153)
        g2_612089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 49), 'g2', False)
        # Getting the type of 'self' (line 1153)
        self_612090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 53), 'self', False)
        # Obtaining the member '_munp' of a type (line 1153)
        _munp_612091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1153, 53), self_612090, '_munp')
        # Getting the type of 'args' (line 1153)
        args_612092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 65), 'args', False)
        # Processing the call keyword arguments (line 1153)
        kwargs_612093 = {}
        # Getting the type of '_moment_from_stats' (line 1153)
        _moment_from_stats_612084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 14), '_moment_from_stats', False)
        # Calling _moment_from_stats(args, kwargs) (line 1153)
        _moment_from_stats_call_result_612094 = invoke(stypy.reporting.localization.Localization(__file__, 1153, 14), _moment_from_stats_612084, *[n_612085, mu_612086, mu2_612087, g1_612088, g2_612089, _munp_612091, args_612092], **kwargs_612093)
        
        # Assigning a type to the variable 'val' (line 1153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1153, 8), 'val', _moment_from_stats_call_result_612094)
        
        
        # Getting the type of 'loc' (line 1157)
        loc_612095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1157, 11), 'loc')
        int_612096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1157, 18), 'int')
        # Applying the binary operator '==' (line 1157)
        result_eq_612097 = python_operator(stypy.reporting.localization.Localization(__file__, 1157, 11), '==', loc_612095, int_612096)
        
        # Testing the type of an if condition (line 1157)
        if_condition_612098 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1157, 8), result_eq_612097)
        # Assigning a type to the variable 'if_condition_612098' (line 1157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1157, 8), 'if_condition_612098', if_condition_612098)
        # SSA begins for if statement (line 1157)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'scale' (line 1158)
        scale_612099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 19), 'scale')
        # Getting the type of 'n' (line 1158)
        n_612100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 26), 'n')
        # Applying the binary operator '**' (line 1158)
        result_pow_612101 = python_operator(stypy.reporting.localization.Localization(__file__, 1158, 19), '**', scale_612099, n_612100)
        
        # Getting the type of 'val' (line 1158)
        val_612102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1158, 30), 'val')
        # Applying the binary operator '*' (line 1158)
        result_mul_612103 = python_operator(stypy.reporting.localization.Localization(__file__, 1158, 19), '*', result_pow_612101, val_612102)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1158, 12), 'stypy_return_type', result_mul_612103)
        # SSA branch for the else part of an if statement (line 1157)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 1160):
        
        # Assigning a Num to a Name (line 1160):
        int_612104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1160, 21), 'int')
        # Assigning a type to the variable 'result' (line 1160)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1160, 12), 'result', int_612104)
        
        # Assigning a BinOp to a Name (line 1161):
        
        # Assigning a BinOp to a Name (line 1161):
        
        # Call to float(...): (line 1161)
        # Processing the call arguments (line 1161)
        # Getting the type of 'scale' (line 1161)
        scale_612106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 24), 'scale', False)
        # Processing the call keyword arguments (line 1161)
        kwargs_612107 = {}
        # Getting the type of 'float' (line 1161)
        float_612105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 18), 'float', False)
        # Calling float(args, kwargs) (line 1161)
        float_call_result_612108 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 18), float_612105, *[scale_612106], **kwargs_612107)
        
        
        # Call to float(...): (line 1161)
        # Processing the call arguments (line 1161)
        # Getting the type of 'loc' (line 1161)
        loc_612110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 39), 'loc', False)
        # Processing the call keyword arguments (line 1161)
        kwargs_612111 = {}
        # Getting the type of 'float' (line 1161)
        float_612109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 33), 'float', False)
        # Calling float(args, kwargs) (line 1161)
        float_call_result_612112 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 33), float_612109, *[loc_612110], **kwargs_612111)
        
        # Applying the binary operator 'div' (line 1161)
        result_div_612113 = python_operator(stypy.reporting.localization.Localization(__file__, 1161, 18), 'div', float_call_result_612108, float_call_result_612112)
        
        # Assigning a type to the variable 'fac' (line 1161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1161, 12), 'fac', result_div_612113)
        
        
        # Call to range(...): (line 1162)
        # Processing the call arguments (line 1162)
        # Getting the type of 'n' (line 1162)
        n_612115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 27), 'n', False)
        # Processing the call keyword arguments (line 1162)
        kwargs_612116 = {}
        # Getting the type of 'range' (line 1162)
        range_612114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1162, 21), 'range', False)
        # Calling range(args, kwargs) (line 1162)
        range_call_result_612117 = invoke(stypy.reporting.localization.Localization(__file__, 1162, 21), range_612114, *[n_612115], **kwargs_612116)
        
        # Testing the type of a for loop iterable (line 1162)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1162, 12), range_call_result_612117)
        # Getting the type of the for loop variable (line 1162)
        for_loop_var_612118 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1162, 12), range_call_result_612117)
        # Assigning a type to the variable 'k' (line 1162)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1162, 12), 'k', for_loop_var_612118)
        # SSA begins for a for statement (line 1162)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1163):
        
        # Assigning a Call to a Name (line 1163):
        
        # Call to _moment_from_stats(...): (line 1163)
        # Processing the call arguments (line 1163)
        # Getting the type of 'k' (line 1163)
        k_612120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 42), 'k', False)
        # Getting the type of 'mu' (line 1163)
        mu_612121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 45), 'mu', False)
        # Getting the type of 'mu2' (line 1163)
        mu2_612122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 49), 'mu2', False)
        # Getting the type of 'g1' (line 1163)
        g1_612123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 54), 'g1', False)
        # Getting the type of 'g2' (line 1163)
        g2_612124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 58), 'g2', False)
        # Getting the type of 'self' (line 1163)
        self_612125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 62), 'self', False)
        # Obtaining the member '_munp' of a type (line 1163)
        _munp_612126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1163, 62), self_612125, '_munp')
        # Getting the type of 'args' (line 1163)
        args_612127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 74), 'args', False)
        # Processing the call keyword arguments (line 1163)
        kwargs_612128 = {}
        # Getting the type of '_moment_from_stats' (line 1163)
        _moment_from_stats_612119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1163, 23), '_moment_from_stats', False)
        # Calling _moment_from_stats(args, kwargs) (line 1163)
        _moment_from_stats_call_result_612129 = invoke(stypy.reporting.localization.Localization(__file__, 1163, 23), _moment_from_stats_612119, *[k_612120, mu_612121, mu2_612122, g1_612123, g2_612124, _munp_612126, args_612127], **kwargs_612128)
        
        # Assigning a type to the variable 'valk' (line 1163)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1163, 16), 'valk', _moment_from_stats_call_result_612129)
        
        # Getting the type of 'result' (line 1164)
        result_612130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 16), 'result')
        
        # Call to comb(...): (line 1164)
        # Processing the call arguments (line 1164)
        # Getting the type of 'n' (line 1164)
        n_612132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 31), 'n', False)
        # Getting the type of 'k' (line 1164)
        k_612133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 34), 'k', False)
        # Processing the call keyword arguments (line 1164)
        # Getting the type of 'True' (line 1164)
        True_612134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 43), 'True', False)
        keyword_612135 = True_612134
        kwargs_612136 = {'exact': keyword_612135}
        # Getting the type of 'comb' (line 1164)
        comb_612131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 26), 'comb', False)
        # Calling comb(args, kwargs) (line 1164)
        comb_call_result_612137 = invoke(stypy.reporting.localization.Localization(__file__, 1164, 26), comb_612131, *[n_612132, k_612133], **kwargs_612136)
        
        # Getting the type of 'fac' (line 1164)
        fac_612138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 50), 'fac')
        # Getting the type of 'k' (line 1164)
        k_612139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 55), 'k')
        # Applying the binary operator '**' (line 1164)
        result_pow_612140 = python_operator(stypy.reporting.localization.Localization(__file__, 1164, 50), '**', fac_612138, k_612139)
        
        # Applying the binary operator '*' (line 1164)
        result_mul_612141 = python_operator(stypy.reporting.localization.Localization(__file__, 1164, 26), '*', comb_call_result_612137, result_pow_612140)
        
        # Getting the type of 'valk' (line 1164)
        valk_612142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 60), 'valk')
        # Applying the binary operator '*' (line 1164)
        result_mul_612143 = python_operator(stypy.reporting.localization.Localization(__file__, 1164, 58), '*', result_mul_612141, valk_612142)
        
        # Applying the binary operator '+=' (line 1164)
        result_iadd_612144 = python_operator(stypy.reporting.localization.Localization(__file__, 1164, 16), '+=', result_612130, result_mul_612143)
        # Assigning a type to the variable 'result' (line 1164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1164, 16), 'result', result_iadd_612144)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'result' (line 1165)
        result_612145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 12), 'result')
        # Getting the type of 'fac' (line 1165)
        fac_612146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 22), 'fac')
        # Getting the type of 'n' (line 1165)
        n_612147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 27), 'n')
        # Applying the binary operator '**' (line 1165)
        result_pow_612148 = python_operator(stypy.reporting.localization.Localization(__file__, 1165, 22), '**', fac_612146, n_612147)
        
        # Getting the type of 'val' (line 1165)
        val_612149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1165, 31), 'val')
        # Applying the binary operator '*' (line 1165)
        result_mul_612150 = python_operator(stypy.reporting.localization.Localization(__file__, 1165, 22), '*', result_pow_612148, val_612149)
        
        # Applying the binary operator '+=' (line 1165)
        result_iadd_612151 = python_operator(stypy.reporting.localization.Localization(__file__, 1165, 12), '+=', result_612145, result_mul_612150)
        # Assigning a type to the variable 'result' (line 1165)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1165, 12), 'result', result_iadd_612151)
        
        # Getting the type of 'result' (line 1166)
        result_612152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 19), 'result')
        # Getting the type of 'loc' (line 1166)
        loc_612153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 28), 'loc')
        # Getting the type of 'n' (line 1166)
        n_612154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 33), 'n')
        # Applying the binary operator '**' (line 1166)
        result_pow_612155 = python_operator(stypy.reporting.localization.Localization(__file__, 1166, 28), '**', loc_612153, n_612154)
        
        # Applying the binary operator '*' (line 1166)
        result_mul_612156 = python_operator(stypy.reporting.localization.Localization(__file__, 1166, 19), '*', result_612152, result_pow_612155)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 12), 'stypy_return_type', result_mul_612156)
        # SSA join for if statement (line 1157)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'moment(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'moment' in the type store
        # Getting the type of 'stypy_return_type' (line 1122)
        stypy_return_type_612157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612157)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'moment'
        return stypy_return_type_612157


    @norecursion
    def median(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'median'
        module_type_store = module_type_store.open_function_context('median', 1168, 4, False)
        # Assigning a type to the variable 'self' (line 1169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1169, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.median.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.median.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.median.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.median.__dict__.__setitem__('stypy_function_name', 'rv_generic.median')
        rv_generic.median.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.median.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.median.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.median.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.median.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.median.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.median.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.median', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'median', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'median(...)' code ##################

        str_612158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1192, (-1)), 'str', '\n        Median of the distribution.\n\n        Parameters\n        ----------\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            Location parameter, Default is 0.\n        scale : array_like, optional\n            Scale parameter, Default is 1.\n\n        Returns\n        -------\n        median : float\n            The median of the distribution.\n\n        See Also\n        --------\n        stats.distributions.rv_discrete.ppf\n            Inverse of the CDF\n\n        ')
        
        # Call to ppf(...): (line 1193)
        # Processing the call arguments (line 1193)
        float_612161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1193, 24), 'float')
        # Getting the type of 'args' (line 1193)
        args_612162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 30), 'args', False)
        # Processing the call keyword arguments (line 1193)
        # Getting the type of 'kwds' (line 1193)
        kwds_612163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 38), 'kwds', False)
        kwargs_612164 = {'kwds_612163': kwds_612163}
        # Getting the type of 'self' (line 1193)
        self_612159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1193, 15), 'self', False)
        # Obtaining the member 'ppf' of a type (line 1193)
        ppf_612160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1193, 15), self_612159, 'ppf')
        # Calling ppf(args, kwargs) (line 1193)
        ppf_call_result_612165 = invoke(stypy.reporting.localization.Localization(__file__, 1193, 15), ppf_612160, *[float_612161, args_612162], **kwargs_612164)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1193, 8), 'stypy_return_type', ppf_call_result_612165)
        
        # ################# End of 'median(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'median' in the type store
        # Getting the type of 'stypy_return_type' (line 1168)
        stypy_return_type_612166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1168, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612166)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'median'
        return stypy_return_type_612166


    @norecursion
    def mean(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'mean'
        module_type_store = module_type_store.open_function_context('mean', 1195, 4, False)
        # Assigning a type to the variable 'self' (line 1196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1196, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.mean.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.mean.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.mean.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.mean.__dict__.__setitem__('stypy_function_name', 'rv_generic.mean')
        rv_generic.mean.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.mean.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.mean.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.mean.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.mean.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.mean.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.mean.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.mean', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'mean', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'mean(...)' code ##################

        str_612167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1214, (-1)), 'str', '\n        Mean of the distribution.\n\n        Parameters\n        ----------\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        mean : float\n            the mean of the distribution\n\n        ')
        
        # Assigning a Str to a Subscript (line 1215):
        
        # Assigning a Str to a Subscript (line 1215):
        str_612168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 26), 'str', 'm')
        # Getting the type of 'kwds' (line 1215)
        kwds_612169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1215, 8), 'kwds')
        str_612170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1215, 13), 'str', 'moments')
        # Storing an element on a container (line 1215)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1215, 8), kwds_612169, (str_612170, str_612168))
        
        # Assigning a Call to a Name (line 1216):
        
        # Assigning a Call to a Name (line 1216):
        
        # Call to stats(...): (line 1216)
        # Getting the type of 'args' (line 1216)
        args_612173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 26), 'args', False)
        # Processing the call keyword arguments (line 1216)
        # Getting the type of 'kwds' (line 1216)
        kwds_612174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 34), 'kwds', False)
        kwargs_612175 = {'kwds_612174': kwds_612174}
        # Getting the type of 'self' (line 1216)
        self_612171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1216, 14), 'self', False)
        # Obtaining the member 'stats' of a type (line 1216)
        stats_612172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1216, 14), self_612171, 'stats')
        # Calling stats(args, kwargs) (line 1216)
        stats_call_result_612176 = invoke(stypy.reporting.localization.Localization(__file__, 1216, 14), stats_612172, *[args_612173], **kwargs_612175)
        
        # Assigning a type to the variable 'res' (line 1216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1216, 8), 'res', stats_call_result_612176)
        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 1217)
        # Processing the call arguments (line 1217)
        # Getting the type of 'res' (line 1217)
        res_612178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 22), 'res', False)
        # Getting the type of 'ndarray' (line 1217)
        ndarray_612179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 27), 'ndarray', False)
        # Processing the call keyword arguments (line 1217)
        kwargs_612180 = {}
        # Getting the type of 'isinstance' (line 1217)
        isinstance_612177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1217)
        isinstance_call_result_612181 = invoke(stypy.reporting.localization.Localization(__file__, 1217, 11), isinstance_612177, *[res_612178, ndarray_612179], **kwargs_612180)
        
        
        # Getting the type of 'res' (line 1217)
        res_612182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1217, 40), 'res')
        # Obtaining the member 'ndim' of a type (line 1217)
        ndim_612183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1217, 40), res_612182, 'ndim')
        int_612184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1217, 52), 'int')
        # Applying the binary operator '==' (line 1217)
        result_eq_612185 = python_operator(stypy.reporting.localization.Localization(__file__, 1217, 40), '==', ndim_612183, int_612184)
        
        # Applying the binary operator 'and' (line 1217)
        result_and_keyword_612186 = python_operator(stypy.reporting.localization.Localization(__file__, 1217, 11), 'and', isinstance_call_result_612181, result_eq_612185)
        
        # Testing the type of an if condition (line 1217)
        if_condition_612187 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1217, 8), result_and_keyword_612186)
        # Assigning a type to the variable 'if_condition_612187' (line 1217)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1217, 8), 'if_condition_612187', if_condition_612187)
        # SSA begins for if statement (line 1217)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1218)
        tuple_612188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1218, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1218)
        
        # Getting the type of 'res' (line 1218)
        res_612189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1218, 19), 'res')
        # Obtaining the member '__getitem__' of a type (line 1218)
        getitem___612190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1218, 19), res_612189, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1218)
        subscript_call_result_612191 = invoke(stypy.reporting.localization.Localization(__file__, 1218, 19), getitem___612190, tuple_612188)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1218, 12), 'stypy_return_type', subscript_call_result_612191)
        # SSA join for if statement (line 1217)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'res' (line 1219)
        res_612192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1219, 15), 'res')
        # Assigning a type to the variable 'stypy_return_type' (line 1219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1219, 8), 'stypy_return_type', res_612192)
        
        # ################# End of 'mean(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'mean' in the type store
        # Getting the type of 'stypy_return_type' (line 1195)
        stypy_return_type_612193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1195, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612193)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'mean'
        return stypy_return_type_612193


    @norecursion
    def var(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'var'
        module_type_store = module_type_store.open_function_context('var', 1221, 4, False)
        # Assigning a type to the variable 'self' (line 1222)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1222, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.var.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.var.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.var.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.var.__dict__.__setitem__('stypy_function_name', 'rv_generic.var')
        rv_generic.var.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.var.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.var.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.var.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.var.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.var.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.var.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.var', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'var', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'var(...)' code ##################

        str_612194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1240, (-1)), 'str', '\n        Variance of the distribution.\n\n        Parameters\n        ----------\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        var : float\n            the variance of the distribution\n\n        ')
        
        # Assigning a Str to a Subscript (line 1241):
        
        # Assigning a Str to a Subscript (line 1241):
        str_612195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 26), 'str', 'v')
        # Getting the type of 'kwds' (line 1241)
        kwds_612196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1241, 8), 'kwds')
        str_612197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1241, 13), 'str', 'moments')
        # Storing an element on a container (line 1241)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1241, 8), kwds_612196, (str_612197, str_612195))
        
        # Assigning a Call to a Name (line 1242):
        
        # Assigning a Call to a Name (line 1242):
        
        # Call to stats(...): (line 1242)
        # Getting the type of 'args' (line 1242)
        args_612200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 26), 'args', False)
        # Processing the call keyword arguments (line 1242)
        # Getting the type of 'kwds' (line 1242)
        kwds_612201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 34), 'kwds', False)
        kwargs_612202 = {'kwds_612201': kwds_612201}
        # Getting the type of 'self' (line 1242)
        self_612198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1242, 14), 'self', False)
        # Obtaining the member 'stats' of a type (line 1242)
        stats_612199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1242, 14), self_612198, 'stats')
        # Calling stats(args, kwargs) (line 1242)
        stats_call_result_612203 = invoke(stypy.reporting.localization.Localization(__file__, 1242, 14), stats_612199, *[args_612200], **kwargs_612202)
        
        # Assigning a type to the variable 'res' (line 1242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1242, 8), 'res', stats_call_result_612203)
        
        
        # Evaluating a boolean operation
        
        # Call to isinstance(...): (line 1243)
        # Processing the call arguments (line 1243)
        # Getting the type of 'res' (line 1243)
        res_612205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 22), 'res', False)
        # Getting the type of 'ndarray' (line 1243)
        ndarray_612206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 27), 'ndarray', False)
        # Processing the call keyword arguments (line 1243)
        kwargs_612207 = {}
        # Getting the type of 'isinstance' (line 1243)
        isinstance_612204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 1243)
        isinstance_call_result_612208 = invoke(stypy.reporting.localization.Localization(__file__, 1243, 11), isinstance_612204, *[res_612205, ndarray_612206], **kwargs_612207)
        
        
        # Getting the type of 'res' (line 1243)
        res_612209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1243, 40), 'res')
        # Obtaining the member 'ndim' of a type (line 1243)
        ndim_612210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1243, 40), res_612209, 'ndim')
        int_612211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1243, 52), 'int')
        # Applying the binary operator '==' (line 1243)
        result_eq_612212 = python_operator(stypy.reporting.localization.Localization(__file__, 1243, 40), '==', ndim_612210, int_612211)
        
        # Applying the binary operator 'and' (line 1243)
        result_and_keyword_612213 = python_operator(stypy.reporting.localization.Localization(__file__, 1243, 11), 'and', isinstance_call_result_612208, result_eq_612212)
        
        # Testing the type of an if condition (line 1243)
        if_condition_612214 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1243, 8), result_and_keyword_612213)
        # Assigning a type to the variable 'if_condition_612214' (line 1243)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1243, 8), 'if_condition_612214', if_condition_612214)
        # SSA begins for if statement (line 1243)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1244)
        tuple_612215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1244, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1244)
        
        # Getting the type of 'res' (line 1244)
        res_612216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1244, 19), 'res')
        # Obtaining the member '__getitem__' of a type (line 1244)
        getitem___612217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1244, 19), res_612216, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1244)
        subscript_call_result_612218 = invoke(stypy.reporting.localization.Localization(__file__, 1244, 19), getitem___612217, tuple_612215)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1244, 12), 'stypy_return_type', subscript_call_result_612218)
        # SSA join for if statement (line 1243)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'res' (line 1245)
        res_612219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1245, 15), 'res')
        # Assigning a type to the variable 'stypy_return_type' (line 1245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1245, 8), 'stypy_return_type', res_612219)
        
        # ################# End of 'var(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'var' in the type store
        # Getting the type of 'stypy_return_type' (line 1221)
        stypy_return_type_612220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1221, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612220)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'var'
        return stypy_return_type_612220


    @norecursion
    def std(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'std'
        module_type_store = module_type_store.open_function_context('std', 1247, 4, False)
        # Assigning a type to the variable 'self' (line 1248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1248, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.std.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.std.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.std.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.std.__dict__.__setitem__('stypy_function_name', 'rv_generic.std')
        rv_generic.std.__dict__.__setitem__('stypy_param_names_list', [])
        rv_generic.std.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.std.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.std.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.std.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.std.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.std.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.std', [], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'std', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'std(...)' code ##################

        str_612221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1266, (-1)), 'str', '\n        Standard deviation of the distribution.\n\n        Parameters\n        ----------\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        std : float\n            standard deviation of the distribution\n\n        ')
        
        # Assigning a Str to a Subscript (line 1267):
        
        # Assigning a Str to a Subscript (line 1267):
        str_612222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 26), 'str', 'v')
        # Getting the type of 'kwds' (line 1267)
        kwds_612223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1267, 8), 'kwds')
        str_612224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1267, 13), 'str', 'moments')
        # Storing an element on a container (line 1267)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1267, 8), kwds_612223, (str_612224, str_612222))
        
        # Assigning a Call to a Name (line 1268):
        
        # Assigning a Call to a Name (line 1268):
        
        # Call to sqrt(...): (line 1268)
        # Processing the call arguments (line 1268)
        
        # Call to stats(...): (line 1268)
        # Getting the type of 'args' (line 1268)
        args_612228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 31), 'args', False)
        # Processing the call keyword arguments (line 1268)
        # Getting the type of 'kwds' (line 1268)
        kwds_612229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 39), 'kwds', False)
        kwargs_612230 = {'kwds_612229': kwds_612229}
        # Getting the type of 'self' (line 1268)
        self_612226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 19), 'self', False)
        # Obtaining the member 'stats' of a type (line 1268)
        stats_612227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1268, 19), self_612226, 'stats')
        # Calling stats(args, kwargs) (line 1268)
        stats_call_result_612231 = invoke(stypy.reporting.localization.Localization(__file__, 1268, 19), stats_612227, *[args_612228], **kwargs_612230)
        
        # Processing the call keyword arguments (line 1268)
        kwargs_612232 = {}
        # Getting the type of 'sqrt' (line 1268)
        sqrt_612225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1268, 14), 'sqrt', False)
        # Calling sqrt(args, kwargs) (line 1268)
        sqrt_call_result_612233 = invoke(stypy.reporting.localization.Localization(__file__, 1268, 14), sqrt_612225, *[stats_call_result_612231], **kwargs_612232)
        
        # Assigning a type to the variable 'res' (line 1268)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1268, 8), 'res', sqrt_call_result_612233)
        # Getting the type of 'res' (line 1269)
        res_612234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1269, 15), 'res')
        # Assigning a type to the variable 'stypy_return_type' (line 1269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1269, 8), 'stypy_return_type', res_612234)
        
        # ################# End of 'std(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'std' in the type store
        # Getting the type of 'stypy_return_type' (line 1247)
        stypy_return_type_612235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1247, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612235)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'std'
        return stypy_return_type_612235


    @norecursion
    def interval(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'interval'
        module_type_store = module_type_store.open_function_context('interval', 1271, 4, False)
        # Assigning a type to the variable 'self' (line 1272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1272, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_generic.interval.__dict__.__setitem__('stypy_localization', localization)
        rv_generic.interval.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_generic.interval.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_generic.interval.__dict__.__setitem__('stypy_function_name', 'rv_generic.interval')
        rv_generic.interval.__dict__.__setitem__('stypy_param_names_list', ['alpha'])
        rv_generic.interval.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_generic.interval.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_generic.interval.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_generic.interval.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_generic.interval.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_generic.interval.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_generic.interval', ['alpha'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'interval', localization, ['alpha'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'interval(...)' code ##################

        str_612236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1294, (-1)), 'str', "\n        Confidence interval with equal areas around the median.\n\n        Parameters\n        ----------\n        alpha : array_like of float\n            Probability that an rv will be drawn from the returned range.\n            Each value should be in the range [0, 1].\n        arg1, arg2, ... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            location parameter, Default is 0.\n        scale : array_like, optional\n            scale parameter, Default is 1.\n\n        Returns\n        -------\n        a, b : ndarray of float\n            end-points of range that contain ``100 * alpha %`` of the rv's\n            possible values.\n\n        ")
        
        # Assigning a Call to a Name (line 1295):
        
        # Assigning a Call to a Name (line 1295):
        
        # Call to asarray(...): (line 1295)
        # Processing the call arguments (line 1295)
        # Getting the type of 'alpha' (line 1295)
        alpha_612238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 24), 'alpha', False)
        # Processing the call keyword arguments (line 1295)
        kwargs_612239 = {}
        # Getting the type of 'asarray' (line 1295)
        asarray_612237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1295, 16), 'asarray', False)
        # Calling asarray(args, kwargs) (line 1295)
        asarray_call_result_612240 = invoke(stypy.reporting.localization.Localization(__file__, 1295, 16), asarray_612237, *[alpha_612238], **kwargs_612239)
        
        # Assigning a type to the variable 'alpha' (line 1295)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1295, 8), 'alpha', asarray_call_result_612240)
        
        
        # Call to any(...): (line 1296)
        # Processing the call arguments (line 1296)
        
        # Getting the type of 'alpha' (line 1296)
        alpha_612243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 19), 'alpha', False)
        int_612244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1296, 27), 'int')
        # Applying the binary operator '>' (line 1296)
        result_gt_612245 = python_operator(stypy.reporting.localization.Localization(__file__, 1296, 19), '>', alpha_612243, int_612244)
        
        
        # Getting the type of 'alpha' (line 1296)
        alpha_612246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 33), 'alpha', False)
        int_612247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1296, 41), 'int')
        # Applying the binary operator '<' (line 1296)
        result_lt_612248 = python_operator(stypy.reporting.localization.Localization(__file__, 1296, 33), '<', alpha_612246, int_612247)
        
        # Applying the binary operator '|' (line 1296)
        result_or__612249 = python_operator(stypy.reporting.localization.Localization(__file__, 1296, 18), '|', result_gt_612245, result_lt_612248)
        
        # Processing the call keyword arguments (line 1296)
        kwargs_612250 = {}
        # Getting the type of 'np' (line 1296)
        np_612241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1296, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1296)
        any_612242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1296, 11), np_612241, 'any')
        # Calling any(args, kwargs) (line 1296)
        any_call_result_612251 = invoke(stypy.reporting.localization.Localization(__file__, 1296, 11), any_612242, *[result_or__612249], **kwargs_612250)
        
        # Testing the type of an if condition (line 1296)
        if_condition_612252 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1296, 8), any_call_result_612251)
        # Assigning a type to the variable 'if_condition_612252' (line 1296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1296, 8), 'if_condition_612252', if_condition_612252)
        # SSA begins for if statement (line 1296)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 1297)
        # Processing the call arguments (line 1297)
        str_612254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1297, 29), 'str', 'alpha must be between 0 and 1 inclusive')
        # Processing the call keyword arguments (line 1297)
        kwargs_612255 = {}
        # Getting the type of 'ValueError' (line 1297)
        ValueError_612253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1297, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1297)
        ValueError_call_result_612256 = invoke(stypy.reporting.localization.Localization(__file__, 1297, 18), ValueError_612253, *[str_612254], **kwargs_612255)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1297, 12), ValueError_call_result_612256, 'raise parameter', BaseException)
        # SSA join for if statement (line 1296)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 1298):
        
        # Assigning a BinOp to a Name (line 1298):
        float_612257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1298, 14), 'float')
        # Getting the type of 'alpha' (line 1298)
        alpha_612258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1298, 18), 'alpha')
        # Applying the binary operator '-' (line 1298)
        result_sub_612259 = python_operator(stypy.reporting.localization.Localization(__file__, 1298, 14), '-', float_612257, alpha_612258)
        
        int_612260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1298, 25), 'int')
        # Applying the binary operator 'div' (line 1298)
        result_div_612261 = python_operator(stypy.reporting.localization.Localization(__file__, 1298, 13), 'div', result_sub_612259, int_612260)
        
        # Assigning a type to the variable 'q1' (line 1298)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1298, 8), 'q1', result_div_612261)
        
        # Assigning a BinOp to a Name (line 1299):
        
        # Assigning a BinOp to a Name (line 1299):
        float_612262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 14), 'float')
        # Getting the type of 'alpha' (line 1299)
        alpha_612263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1299, 18), 'alpha')
        # Applying the binary operator '+' (line 1299)
        result_add_612264 = python_operator(stypy.reporting.localization.Localization(__file__, 1299, 14), '+', float_612262, alpha_612263)
        
        int_612265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1299, 25), 'int')
        # Applying the binary operator 'div' (line 1299)
        result_div_612266 = python_operator(stypy.reporting.localization.Localization(__file__, 1299, 13), 'div', result_add_612264, int_612265)
        
        # Assigning a type to the variable 'q2' (line 1299)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1299, 8), 'q2', result_div_612266)
        
        # Assigning a Call to a Name (line 1300):
        
        # Assigning a Call to a Name (line 1300):
        
        # Call to ppf(...): (line 1300)
        # Processing the call arguments (line 1300)
        # Getting the type of 'q1' (line 1300)
        q1_612269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 21), 'q1', False)
        # Getting the type of 'args' (line 1300)
        args_612270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 26), 'args', False)
        # Processing the call keyword arguments (line 1300)
        # Getting the type of 'kwds' (line 1300)
        kwds_612271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 34), 'kwds', False)
        kwargs_612272 = {'kwds_612271': kwds_612271}
        # Getting the type of 'self' (line 1300)
        self_612267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1300, 12), 'self', False)
        # Obtaining the member 'ppf' of a type (line 1300)
        ppf_612268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1300, 12), self_612267, 'ppf')
        # Calling ppf(args, kwargs) (line 1300)
        ppf_call_result_612273 = invoke(stypy.reporting.localization.Localization(__file__, 1300, 12), ppf_612268, *[q1_612269, args_612270], **kwargs_612272)
        
        # Assigning a type to the variable 'a' (line 1300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1300, 8), 'a', ppf_call_result_612273)
        
        # Assigning a Call to a Name (line 1301):
        
        # Assigning a Call to a Name (line 1301):
        
        # Call to ppf(...): (line 1301)
        # Processing the call arguments (line 1301)
        # Getting the type of 'q2' (line 1301)
        q2_612276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 21), 'q2', False)
        # Getting the type of 'args' (line 1301)
        args_612277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 26), 'args', False)
        # Processing the call keyword arguments (line 1301)
        # Getting the type of 'kwds' (line 1301)
        kwds_612278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 34), 'kwds', False)
        kwargs_612279 = {'kwds_612278': kwds_612278}
        # Getting the type of 'self' (line 1301)
        self_612274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1301, 12), 'self', False)
        # Obtaining the member 'ppf' of a type (line 1301)
        ppf_612275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1301, 12), self_612274, 'ppf')
        # Calling ppf(args, kwargs) (line 1301)
        ppf_call_result_612280 = invoke(stypy.reporting.localization.Localization(__file__, 1301, 12), ppf_612275, *[q2_612276, args_612277], **kwargs_612279)
        
        # Assigning a type to the variable 'b' (line 1301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1301, 8), 'b', ppf_call_result_612280)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1302)
        tuple_612281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1302, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1302)
        # Adding element type (line 1302)
        # Getting the type of 'a' (line 1302)
        a_612282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 15), 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1302, 15), tuple_612281, a_612282)
        # Adding element type (line 1302)
        # Getting the type of 'b' (line 1302)
        b_612283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1302, 18), 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1302, 15), tuple_612281, b_612283)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1302, 8), 'stypy_return_type', tuple_612281)
        
        # ################# End of 'interval(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'interval' in the type store
        # Getting the type of 'stypy_return_type' (line 1271)
        stypy_return_type_612284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1271, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612284)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'interval'
        return stypy_return_type_612284


# Assigning a type to the variable 'rv_generic' (line 586)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 0), 'rv_generic', rv_generic)

# Assigning a Attribute to a Attribute (line 773):
# Getting the type of 'rv_generic'
rv_generic_612285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'rv_generic')
# Obtaining the member 'freeze' of a type
freeze_612286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), rv_generic_612285, 'freeze')
# Obtaining the member '__doc__' of a type (line 773)
doc___612287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 23), freeze_612286, '__doc__')
# Getting the type of 'rv_generic'
rv_generic_612288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'rv_generic')
# Obtaining the member '__call__' of a type
call___612289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), rv_generic_612288, '__call__')
# Setting the type of the member '__doc__' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), call___612289, '__doc__', doc___612287)
# Declaration of the 'rv_continuous' class
# Getting the type of 'rv_generic' (line 1313)
rv_generic_612290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1313, 20), 'rv_generic')

class rv_continuous(rv_generic_612290, ):
    str_612291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1486, (-1)), 'str', '\n    A generic continuous random variable class meant for subclassing.\n\n    `rv_continuous` is a base class to construct specific distribution classes\n    and instances for continuous random variables. It cannot be used\n    directly as a distribution.\n\n    Parameters\n    ----------\n    momtype : int, optional\n        The type of generic moment calculation to use: 0 for pdf, 1 (default)\n        for ppf.\n    a : float, optional\n        Lower bound of the support of the distribution, default is minus\n        infinity.\n    b : float, optional\n        Upper bound of the support of the distribution, default is plus\n        infinity.\n    xtol : float, optional\n        The tolerance for fixed point calculation for generic ppf.\n    badvalue : float, optional\n        The value in a result arrays that indicates a value that for which\n        some argument restriction is violated, default is np.nan.\n    name : str, optional\n        The name of the instance. This string is used to construct the default\n        example for distributions.\n    longname : str, optional\n        This string is used as part of the first line of the docstring returned\n        when a subclass has no docstring of its own. Note: `longname` exists\n        for backwards compatibility, do not use for new subclasses.\n    shapes : str, optional\n        The shape of the distribution. For example ``"m, n"`` for a\n        distribution that takes two integers as the two shape arguments for all\n        its methods. If not provided, shape parameters will be inferred from\n        the signature of the private methods, ``_pdf`` and ``_cdf`` of the\n        instance.\n    extradoc :  str, optional, deprecated\n        This string is used as the last part of the docstring returned when a\n        subclass has no docstring of its own. Note: `extradoc` exists for\n        backwards compatibility, do not use for new subclasses.\n    seed : None or int or ``numpy.random.RandomState`` instance, optional\n        This parameter defines the RandomState object to use for drawing\n        random variates.\n        If None (or np.random), the global np.random state is used.\n        If integer, it is used to seed the local RandomState instance.\n        Default is None.\n\n    Methods\n    -------\n    rvs\n    pdf\n    logpdf\n    cdf\n    logcdf\n    sf\n    logsf\n    ppf\n    isf\n    moment\n    stats\n    entropy\n    expect\n    median\n    mean\n    std\n    var\n    interval\n    __call__\n    fit\n    fit_loc_scale\n    nnlf\n\n    Notes\n    -----\n    Public methods of an instance of a distribution class (e.g., ``pdf``,\n    ``cdf``) check their arguments and pass valid arguments to private,\n    computational methods (``_pdf``, ``_cdf``). For ``pdf(x)``, ``x`` is valid\n    if it is within the support of a distribution, ``self.a <= x <= self.b``.\n    Whether a shape parameter is valid is decided by an ``_argcheck`` method\n    (which defaults to checking that its arguments are strictly positive.)\n\n    **Subclassing**\n\n    New random variables can be defined by subclassing the `rv_continuous` class\n    and re-defining at least the ``_pdf`` or the ``_cdf`` method (normalized\n    to location 0 and scale 1).\n\n    If positive argument checking is not correct for your RV\n    then you will also need to re-define the ``_argcheck`` method.\n\n    Correct, but potentially slow defaults exist for the remaining\n    methods but for speed and/or accuracy you can over-ride::\n\n      _logpdf, _cdf, _logcdf, _ppf, _rvs, _isf, _sf, _logsf\n\n    Rarely would you override ``_isf``, ``_sf`` or ``_logsf``, but you could.\n\n    **Methods that can be overwritten by subclasses**\n    ::\n\n      _rvs\n      _pdf\n      _cdf\n      _sf\n      _ppf\n      _isf\n      _stats\n      _munp\n      _entropy\n      _argcheck\n\n    There are additional (internal and private) generic methods that can\n    be useful for cross-checking and for debugging, but might work in all\n    cases when directly called.\n\n    A note on ``shapes``: subclasses need not specify them explicitly. In this\n    case, `shapes` will be automatically deduced from the signatures of the\n    overridden methods (`pdf`, `cdf` etc).\n    If, for some reason, you prefer to avoid relying on introspection, you can\n    specify ``shapes`` explicitly as an argument to the instance constructor.\n\n\n    **Frozen Distributions**\n\n    Normally, you must provide shape parameters (and, optionally, location and\n    scale parameters to each call of a method of a distribution.\n\n    Alternatively, the object may be called (as a function) to fix the shape,\n    location, and scale parameters returning a "frozen" continuous RV object:\n\n    rv = generic(<shape(s)>, loc=0, scale=1)\n        frozen RV object with the same methods but holding the given shape,\n        location, and scale fixed\n\n    **Statistics**\n\n    Statistics are computed using numerical integration by default.\n    For speed you can redefine this using ``_stats``:\n\n     - take shape parameters and return mu, mu2, g1, g2\n     - If you can\'t compute one of these, return it as None\n     - Can also be defined with a keyword argument ``moments``, which is a\n       string composed of "m", "v", "s", and/or "k".\n       Only the components appearing in string should be computed and\n       returned in the order "m", "v", "s", or "k"  with missing values\n       returned as None.\n\n    Alternatively, you can override ``_munp``, which takes ``n`` and shape\n    parameters and returns the n-th non-central moment of the distribution.\n\n    Examples\n    --------\n    To create a new Gaussian distribution, we would do the following:\n\n    >>> from scipy.stats import rv_continuous\n    >>> class gaussian_gen(rv_continuous):\n    ...     "Gaussian distribution"\n    ...     def _pdf(self, x):\n    ...         return np.exp(-x**2 / 2.) / np.sqrt(2.0 * np.pi)\n    >>> gaussian = gaussian_gen(name=\'gaussian\')\n\n    ``scipy.stats`` distributions are *instances*, so here we subclass\n    `rv_continuous` and create an instance. With this, we now have\n    a fully functional distribution with all relevant methods automagically\n    generated by the framework.\n\n    Note that above we defined a standard normal distribution, with zero mean\n    and unit variance. Shifting and scaling of the distribution can be done\n    by using ``loc`` and ``scale`` parameters: ``gaussian.pdf(x, loc, scale)``\n    essentially computes ``y = (x - loc) / scale`` and\n    ``gaussian._pdf(y) / scale``.\n\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_612292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1487, 31), 'int')
        # Getting the type of 'None' (line 1487)
        None_612293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 36), 'None')
        # Getting the type of 'None' (line 1487)
        None_612294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1487, 44), 'None')
        float_612295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1487, 55), 'float')
        # Getting the type of 'None' (line 1488)
        None_612296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 26), 'None')
        # Getting the type of 'None' (line 1488)
        None_612297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 37), 'None')
        # Getting the type of 'None' (line 1488)
        None_612298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1488, 52), 'None')
        # Getting the type of 'None' (line 1489)
        None_612299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 24), 'None')
        # Getting the type of 'None' (line 1489)
        None_612300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 39), 'None')
        # Getting the type of 'None' (line 1489)
        None_612301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1489, 50), 'None')
        defaults = [int_612292, None_612293, None_612294, float_612295, None_612296, None_612297, None_612298, None_612299, None_612300, None_612301]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 1487, 4, False)
        # Assigning a type to the variable 'self' (line 1488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1488, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.__init__', ['momtype', 'a', 'b', 'xtol', 'badvalue', 'name', 'longname', 'shapes', 'extradoc', 'seed'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['momtype', 'a', 'b', 'xtol', 'badvalue', 'name', 'longname', 'shapes', 'extradoc', 'seed'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 1491)
        # Processing the call arguments (line 1491)
        # Getting the type of 'seed' (line 1491)
        seed_612308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1491, 44), 'seed', False)
        # Processing the call keyword arguments (line 1491)
        kwargs_612309 = {}
        
        # Call to super(...): (line 1491)
        # Processing the call arguments (line 1491)
        # Getting the type of 'rv_continuous' (line 1491)
        rv_continuous_612303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1491, 14), 'rv_continuous', False)
        # Getting the type of 'self' (line 1491)
        self_612304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1491, 29), 'self', False)
        # Processing the call keyword arguments (line 1491)
        kwargs_612305 = {}
        # Getting the type of 'super' (line 1491)
        super_612302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1491, 8), 'super', False)
        # Calling super(args, kwargs) (line 1491)
        super_call_result_612306 = invoke(stypy.reporting.localization.Localization(__file__, 1491, 8), super_612302, *[rv_continuous_612303, self_612304], **kwargs_612305)
        
        # Obtaining the member '__init__' of a type (line 1491)
        init___612307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1491, 8), super_call_result_612306, '__init__')
        # Calling __init__(args, kwargs) (line 1491)
        init___call_result_612310 = invoke(stypy.reporting.localization.Localization(__file__, 1491, 8), init___612307, *[seed_612308], **kwargs_612309)
        
        
        # Assigning a Call to a Attribute (line 1494):
        
        # Assigning a Call to a Attribute (line 1494):
        
        # Call to dict(...): (line 1494)
        # Processing the call keyword arguments (line 1494)
        # Getting the type of 'momtype' (line 1495)
        momtype_612312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 20), 'momtype', False)
        keyword_612313 = momtype_612312
        # Getting the type of 'a' (line 1495)
        a_612314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 31), 'a', False)
        keyword_612315 = a_612314
        # Getting the type of 'b' (line 1495)
        b_612316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 36), 'b', False)
        keyword_612317 = b_612316
        # Getting the type of 'xtol' (line 1495)
        xtol_612318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1495, 44), 'xtol', False)
        keyword_612319 = xtol_612318
        # Getting the type of 'badvalue' (line 1496)
        badvalue_612320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 21), 'badvalue', False)
        keyword_612321 = badvalue_612320
        # Getting the type of 'name' (line 1496)
        name_612322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 36), 'name', False)
        keyword_612323 = name_612322
        # Getting the type of 'longname' (line 1496)
        longname_612324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1496, 51), 'longname', False)
        keyword_612325 = longname_612324
        # Getting the type of 'shapes' (line 1497)
        shapes_612326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 19), 'shapes', False)
        keyword_612327 = shapes_612326
        # Getting the type of 'extradoc' (line 1497)
        extradoc_612328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 36), 'extradoc', False)
        keyword_612329 = extradoc_612328
        # Getting the type of 'seed' (line 1497)
        seed_612330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1497, 51), 'seed', False)
        keyword_612331 = seed_612330
        kwargs_612332 = {'a': keyword_612315, 'extradoc': keyword_612329, 'b': keyword_612317, 'name': keyword_612323, 'momtype': keyword_612313, 'shapes': keyword_612327, 'seed': keyword_612331, 'longname': keyword_612325, 'badvalue': keyword_612321, 'xtol': keyword_612319}
        # Getting the type of 'dict' (line 1494)
        dict_612311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 27), 'dict', False)
        # Calling dict(args, kwargs) (line 1494)
        dict_call_result_612333 = invoke(stypy.reporting.localization.Localization(__file__, 1494, 27), dict_612311, *[], **kwargs_612332)
        
        # Getting the type of 'self' (line 1494)
        self_612334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1494, 8), 'self')
        # Setting the type of the member '_ctor_param' of a type (line 1494)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1494, 8), self_612334, '_ctor_param', dict_call_result_612333)
        
        # Type idiom detected: calculating its left and rigth part (line 1499)
        # Getting the type of 'badvalue' (line 1499)
        badvalue_612335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 11), 'badvalue')
        # Getting the type of 'None' (line 1499)
        None_612336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1499, 23), 'None')
        
        (may_be_612337, more_types_in_union_612338) = may_be_none(badvalue_612335, None_612336)

        if may_be_612337:

            if more_types_in_union_612338:
                # Runtime conditional SSA (line 1499)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Name (line 1500):
            
            # Assigning a Name to a Name (line 1500):
            # Getting the type of 'nan' (line 1500)
            nan_612339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1500, 23), 'nan')
            # Assigning a type to the variable 'badvalue' (line 1500)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1500, 12), 'badvalue', nan_612339)

            if more_types_in_union_612338:
                # SSA join for if statement (line 1499)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1501)
        # Getting the type of 'name' (line 1501)
        name_612340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 11), 'name')
        # Getting the type of 'None' (line 1501)
        None_612341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1501, 19), 'None')
        
        (may_be_612342, more_types_in_union_612343) = may_be_none(name_612340, None_612341)

        if may_be_612342:

            if more_types_in_union_612343:
                # Runtime conditional SSA (line 1501)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 1502):
            
            # Assigning a Str to a Name (line 1502):
            str_612344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1502, 19), 'str', 'Distribution')
            # Assigning a type to the variable 'name' (line 1502)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1502, 12), 'name', str_612344)

            if more_types_in_union_612343:
                # SSA join for if statement (line 1501)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 1503):
        
        # Assigning a Name to a Attribute (line 1503):
        # Getting the type of 'badvalue' (line 1503)
        badvalue_612345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 24), 'badvalue')
        # Getting the type of 'self' (line 1503)
        self_612346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1503, 8), 'self')
        # Setting the type of the member 'badvalue' of a type (line 1503)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1503, 8), self_612346, 'badvalue', badvalue_612345)
        
        # Assigning a Name to a Attribute (line 1504):
        
        # Assigning a Name to a Attribute (line 1504):
        # Getting the type of 'name' (line 1504)
        name_612347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 20), 'name')
        # Getting the type of 'self' (line 1504)
        self_612348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1504, 8), 'self')
        # Setting the type of the member 'name' of a type (line 1504)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1504, 8), self_612348, 'name', name_612347)
        
        # Assigning a Name to a Attribute (line 1505):
        
        # Assigning a Name to a Attribute (line 1505):
        # Getting the type of 'a' (line 1505)
        a_612349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 17), 'a')
        # Getting the type of 'self' (line 1505)
        self_612350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1505, 8), 'self')
        # Setting the type of the member 'a' of a type (line 1505)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1505, 8), self_612350, 'a', a_612349)
        
        # Assigning a Name to a Attribute (line 1506):
        
        # Assigning a Name to a Attribute (line 1506):
        # Getting the type of 'b' (line 1506)
        b_612351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1506, 17), 'b')
        # Getting the type of 'self' (line 1506)
        self_612352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1506, 8), 'self')
        # Setting the type of the member 'b' of a type (line 1506)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1506, 8), self_612352, 'b', b_612351)
        
        # Type idiom detected: calculating its left and rigth part (line 1507)
        # Getting the type of 'a' (line 1507)
        a_612353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1507, 11), 'a')
        # Getting the type of 'None' (line 1507)
        None_612354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1507, 16), 'None')
        
        (may_be_612355, more_types_in_union_612356) = may_be_none(a_612353, None_612354)

        if may_be_612355:

            if more_types_in_union_612356:
                # Runtime conditional SSA (line 1507)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a UnaryOp to a Attribute (line 1508):
            
            # Assigning a UnaryOp to a Attribute (line 1508):
            
            # Getting the type of 'inf' (line 1508)
            inf_612357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 22), 'inf')
            # Applying the 'usub' unary operator (line 1508)
            result___neg___612358 = python_operator(stypy.reporting.localization.Localization(__file__, 1508, 21), 'usub', inf_612357)
            
            # Getting the type of 'self' (line 1508)
            self_612359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1508, 12), 'self')
            # Setting the type of the member 'a' of a type (line 1508)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1508, 12), self_612359, 'a', result___neg___612358)

            if more_types_in_union_612356:
                # SSA join for if statement (line 1507)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 1509)
        # Getting the type of 'b' (line 1509)
        b_612360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 11), 'b')
        # Getting the type of 'None' (line 1509)
        None_612361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1509, 16), 'None')
        
        (may_be_612362, more_types_in_union_612363) = may_be_none(b_612360, None_612361)

        if may_be_612362:

            if more_types_in_union_612363:
                # Runtime conditional SSA (line 1509)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Attribute (line 1510):
            
            # Assigning a Name to a Attribute (line 1510):
            # Getting the type of 'inf' (line 1510)
            inf_612364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 21), 'inf')
            # Getting the type of 'self' (line 1510)
            self_612365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1510, 12), 'self')
            # Setting the type of the member 'b' of a type (line 1510)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1510, 12), self_612365, 'b', inf_612364)

            if more_types_in_union_612363:
                # SSA join for if statement (line 1509)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 1511):
        
        # Assigning a Name to a Attribute (line 1511):
        # Getting the type of 'xtol' (line 1511)
        xtol_612366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 20), 'xtol')
        # Getting the type of 'self' (line 1511)
        self_612367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1511, 8), 'self')
        # Setting the type of the member 'xtol' of a type (line 1511)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1511, 8), self_612367, 'xtol', xtol_612366)
        
        # Assigning a Name to a Attribute (line 1512):
        
        # Assigning a Name to a Attribute (line 1512):
        # Getting the type of 'momtype' (line 1512)
        momtype_612368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 27), 'momtype')
        # Getting the type of 'self' (line 1512)
        self_612369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1512, 8), 'self')
        # Setting the type of the member 'moment_type' of a type (line 1512)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1512, 8), self_612369, 'moment_type', momtype_612368)
        
        # Assigning a Name to a Attribute (line 1513):
        
        # Assigning a Name to a Attribute (line 1513):
        # Getting the type of 'shapes' (line 1513)
        shapes_612370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 22), 'shapes')
        # Getting the type of 'self' (line 1513)
        self_612371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1513, 8), 'self')
        # Setting the type of the member 'shapes' of a type (line 1513)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1513, 8), self_612371, 'shapes', shapes_612370)
        
        # Call to _construct_argparser(...): (line 1514)
        # Processing the call keyword arguments (line 1514)
        
        # Obtaining an instance of the builtin type 'list' (line 1514)
        list_612374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1514, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1514)
        # Adding element type (line 1514)
        # Getting the type of 'self' (line 1514)
        self_612375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 52), 'self', False)
        # Obtaining the member '_pdf' of a type (line 1514)
        _pdf_612376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1514, 52), self_612375, '_pdf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1514, 51), list_612374, _pdf_612376)
        # Adding element type (line 1514)
        # Getting the type of 'self' (line 1514)
        self_612377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 63), 'self', False)
        # Obtaining the member '_cdf' of a type (line 1514)
        _cdf_612378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1514, 63), self_612377, '_cdf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1514, 51), list_612374, _cdf_612378)
        
        keyword_612379 = list_612374
        str_612380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1515, 46), 'str', 'loc=0, scale=1')
        keyword_612381 = str_612380
        str_612382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1516, 47), 'str', 'loc, scale')
        keyword_612383 = str_612382
        kwargs_612384 = {'locscale_in': keyword_612381, 'meths_to_inspect': keyword_612379, 'locscale_out': keyword_612383}
        # Getting the type of 'self' (line 1514)
        self_612372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1514, 8), 'self', False)
        # Obtaining the member '_construct_argparser' of a type (line 1514)
        _construct_argparser_612373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1514, 8), self_612372, '_construct_argparser')
        # Calling _construct_argparser(args, kwargs) (line 1514)
        _construct_argparser_call_result_612385 = invoke(stypy.reporting.localization.Localization(__file__, 1514, 8), _construct_argparser_612373, *[], **kwargs_612384)
        
        
        # Assigning a Call to a Attribute (line 1519):
        
        # Assigning a Call to a Attribute (line 1519):
        
        # Call to vectorize(...): (line 1519)
        # Processing the call arguments (line 1519)
        # Getting the type of 'self' (line 1519)
        self_612387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1519, 33), 'self', False)
        # Obtaining the member '_ppf_single' of a type (line 1519)
        _ppf_single_612388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1519, 33), self_612387, '_ppf_single')
        # Processing the call keyword arguments (line 1519)
        str_612389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1519, 58), 'str', 'd')
        keyword_612390 = str_612389
        kwargs_612391 = {'otypes': keyword_612390}
        # Getting the type of 'vectorize' (line 1519)
        vectorize_612386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1519, 23), 'vectorize', False)
        # Calling vectorize(args, kwargs) (line 1519)
        vectorize_call_result_612392 = invoke(stypy.reporting.localization.Localization(__file__, 1519, 23), vectorize_612386, *[_ppf_single_612388], **kwargs_612391)
        
        # Getting the type of 'self' (line 1519)
        self_612393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1519, 8), 'self')
        # Setting the type of the member '_ppfvec' of a type (line 1519)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1519, 8), self_612393, '_ppfvec', vectorize_call_result_612392)
        
        # Assigning a BinOp to a Attribute (line 1520):
        
        # Assigning a BinOp to a Attribute (line 1520):
        # Getting the type of 'self' (line 1520)
        self_612394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 27), 'self')
        # Obtaining the member 'numargs' of a type (line 1520)
        numargs_612395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1520, 27), self_612394, 'numargs')
        int_612396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1520, 42), 'int')
        # Applying the binary operator '+' (line 1520)
        result_add_612397 = python_operator(stypy.reporting.localization.Localization(__file__, 1520, 27), '+', numargs_612395, int_612396)
        
        # Getting the type of 'self' (line 1520)
        self_612398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1520, 8), 'self')
        # Obtaining the member '_ppfvec' of a type (line 1520)
        _ppfvec_612399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1520, 8), self_612398, '_ppfvec')
        # Setting the type of the member 'nin' of a type (line 1520)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1520, 8), _ppfvec_612399, 'nin', result_add_612397)
        
        # Assigning a Call to a Attribute (line 1521):
        
        # Assigning a Call to a Attribute (line 1521):
        
        # Call to vectorize(...): (line 1521)
        # Processing the call arguments (line 1521)
        # Getting the type of 'self' (line 1521)
        self_612401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 36), 'self', False)
        # Obtaining the member '_entropy' of a type (line 1521)
        _entropy_612402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1521, 36), self_612401, '_entropy')
        # Processing the call keyword arguments (line 1521)
        str_612403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1521, 58), 'str', 'd')
        keyword_612404 = str_612403
        kwargs_612405 = {'otypes': keyword_612404}
        # Getting the type of 'vectorize' (line 1521)
        vectorize_612400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 26), 'vectorize', False)
        # Calling vectorize(args, kwargs) (line 1521)
        vectorize_call_result_612406 = invoke(stypy.reporting.localization.Localization(__file__, 1521, 26), vectorize_612400, *[_entropy_612402], **kwargs_612405)
        
        # Getting the type of 'self' (line 1521)
        self_612407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1521, 8), 'self')
        # Setting the type of the member 'vecentropy' of a type (line 1521)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1521, 8), self_612407, 'vecentropy', vectorize_call_result_612406)
        
        # Assigning a Call to a Attribute (line 1522):
        
        # Assigning a Call to a Attribute (line 1522):
        
        # Call to vectorize(...): (line 1522)
        # Processing the call arguments (line 1522)
        # Getting the type of 'self' (line 1522)
        self_612409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 33), 'self', False)
        # Obtaining the member '_cdf_single' of a type (line 1522)
        _cdf_single_612410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1522, 33), self_612409, '_cdf_single')
        # Processing the call keyword arguments (line 1522)
        str_612411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1522, 58), 'str', 'd')
        keyword_612412 = str_612411
        kwargs_612413 = {'otypes': keyword_612412}
        # Getting the type of 'vectorize' (line 1522)
        vectorize_612408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 23), 'vectorize', False)
        # Calling vectorize(args, kwargs) (line 1522)
        vectorize_call_result_612414 = invoke(stypy.reporting.localization.Localization(__file__, 1522, 23), vectorize_612408, *[_cdf_single_612410], **kwargs_612413)
        
        # Getting the type of 'self' (line 1522)
        self_612415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1522, 8), 'self')
        # Setting the type of the member '_cdfvec' of a type (line 1522)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1522, 8), self_612415, '_cdfvec', vectorize_call_result_612414)
        
        # Assigning a BinOp to a Attribute (line 1523):
        
        # Assigning a BinOp to a Attribute (line 1523):
        # Getting the type of 'self' (line 1523)
        self_612416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1523, 27), 'self')
        # Obtaining the member 'numargs' of a type (line 1523)
        numargs_612417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1523, 27), self_612416, 'numargs')
        int_612418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1523, 42), 'int')
        # Applying the binary operator '+' (line 1523)
        result_add_612419 = python_operator(stypy.reporting.localization.Localization(__file__, 1523, 27), '+', numargs_612417, int_612418)
        
        # Getting the type of 'self' (line 1523)
        self_612420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1523, 8), 'self')
        # Obtaining the member '_cdfvec' of a type (line 1523)
        _cdfvec_612421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1523, 8), self_612420, '_cdfvec')
        # Setting the type of the member 'nin' of a type (line 1523)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1523, 8), _cdfvec_612421, 'nin', result_add_612419)
        
        # Assigning a Name to a Attribute (line 1525):
        
        # Assigning a Name to a Attribute (line 1525):
        # Getting the type of 'extradoc' (line 1525)
        extradoc_612422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1525, 24), 'extradoc')
        # Getting the type of 'self' (line 1525)
        self_612423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1525, 8), 'self')
        # Setting the type of the member 'extradoc' of a type (line 1525)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1525, 8), self_612423, 'extradoc', extradoc_612422)
        
        
        # Getting the type of 'momtype' (line 1526)
        momtype_612424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1526, 11), 'momtype')
        int_612425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1526, 22), 'int')
        # Applying the binary operator '==' (line 1526)
        result_eq_612426 = python_operator(stypy.reporting.localization.Localization(__file__, 1526, 11), '==', momtype_612424, int_612425)
        
        # Testing the type of an if condition (line 1526)
        if_condition_612427 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1526, 8), result_eq_612426)
        # Assigning a type to the variable 'if_condition_612427' (line 1526)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1526, 8), 'if_condition_612427', if_condition_612427)
        # SSA begins for if statement (line 1526)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Attribute (line 1527):
        
        # Assigning a Call to a Attribute (line 1527):
        
        # Call to vectorize(...): (line 1527)
        # Processing the call arguments (line 1527)
        # Getting the type of 'self' (line 1527)
        self_612429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 44), 'self', False)
        # Obtaining the member '_mom0_sc' of a type (line 1527)
        _mom0_sc_612430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1527, 44), self_612429, '_mom0_sc')
        # Processing the call keyword arguments (line 1527)
        str_612431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1527, 66), 'str', 'd')
        keyword_612432 = str_612431
        kwargs_612433 = {'otypes': keyword_612432}
        # Getting the type of 'vectorize' (line 1527)
        vectorize_612428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 34), 'vectorize', False)
        # Calling vectorize(args, kwargs) (line 1527)
        vectorize_call_result_612434 = invoke(stypy.reporting.localization.Localization(__file__, 1527, 34), vectorize_612428, *[_mom0_sc_612430], **kwargs_612433)
        
        # Getting the type of 'self' (line 1527)
        self_612435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1527, 12), 'self')
        # Setting the type of the member 'generic_moment' of a type (line 1527)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1527, 12), self_612435, 'generic_moment', vectorize_call_result_612434)
        # SSA branch for the else part of an if statement (line 1526)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Attribute (line 1529):
        
        # Assigning a Call to a Attribute (line 1529):
        
        # Call to vectorize(...): (line 1529)
        # Processing the call arguments (line 1529)
        # Getting the type of 'self' (line 1529)
        self_612437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1529, 44), 'self', False)
        # Obtaining the member '_mom1_sc' of a type (line 1529)
        _mom1_sc_612438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1529, 44), self_612437, '_mom1_sc')
        # Processing the call keyword arguments (line 1529)
        str_612439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1529, 66), 'str', 'd')
        keyword_612440 = str_612439
        kwargs_612441 = {'otypes': keyword_612440}
        # Getting the type of 'vectorize' (line 1529)
        vectorize_612436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1529, 34), 'vectorize', False)
        # Calling vectorize(args, kwargs) (line 1529)
        vectorize_call_result_612442 = invoke(stypy.reporting.localization.Localization(__file__, 1529, 34), vectorize_612436, *[_mom1_sc_612438], **kwargs_612441)
        
        # Getting the type of 'self' (line 1529)
        self_612443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1529, 12), 'self')
        # Setting the type of the member 'generic_moment' of a type (line 1529)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1529, 12), self_612443, 'generic_moment', vectorize_call_result_612442)
        # SSA join for if statement (line 1526)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Attribute (line 1532):
        
        # Assigning a BinOp to a Attribute (line 1532):
        # Getting the type of 'self' (line 1532)
        self_612444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 34), 'self')
        # Obtaining the member 'numargs' of a type (line 1532)
        numargs_612445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1532, 34), self_612444, 'numargs')
        int_612446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1532, 49), 'int')
        # Applying the binary operator '+' (line 1532)
        result_add_612447 = python_operator(stypy.reporting.localization.Localization(__file__, 1532, 34), '+', numargs_612445, int_612446)
        
        # Getting the type of 'self' (line 1532)
        self_612448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1532, 8), 'self')
        # Obtaining the member 'generic_moment' of a type (line 1532)
        generic_moment_612449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1532, 8), self_612448, 'generic_moment')
        # Setting the type of the member 'nin' of a type (line 1532)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1532, 8), generic_moment_612449, 'nin', result_add_612447)
        
        # Type idiom detected: calculating its left and rigth part (line 1534)
        # Getting the type of 'longname' (line 1534)
        longname_612450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 11), 'longname')
        # Getting the type of 'None' (line 1534)
        None_612451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1534, 23), 'None')
        
        (may_be_612452, more_types_in_union_612453) = may_be_none(longname_612450, None_612451)

        if may_be_612452:

            if more_types_in_union_612453:
                # Runtime conditional SSA (line 1534)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            
            
            # Obtaining the type of the subscript
            int_612454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1535, 20), 'int')
            # Getting the type of 'name' (line 1535)
            name_612455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1535, 15), 'name')
            # Obtaining the member '__getitem__' of a type (line 1535)
            getitem___612456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1535, 15), name_612455, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 1535)
            subscript_call_result_612457 = invoke(stypy.reporting.localization.Localization(__file__, 1535, 15), getitem___612456, int_612454)
            
            
            # Obtaining an instance of the builtin type 'list' (line 1535)
            list_612458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1535, 26), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1535)
            # Adding element type (line 1535)
            str_612459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1535, 27), 'str', 'aeiouAEIOU')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1535, 26), list_612458, str_612459)
            
            # Applying the binary operator 'in' (line 1535)
            result_contains_612460 = python_operator(stypy.reporting.localization.Localization(__file__, 1535, 15), 'in', subscript_call_result_612457, list_612458)
            
            # Testing the type of an if condition (line 1535)
            if_condition_612461 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1535, 12), result_contains_612460)
            # Assigning a type to the variable 'if_condition_612461' (line 1535)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1535, 12), 'if_condition_612461', if_condition_612461)
            # SSA begins for if statement (line 1535)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Str to a Name (line 1536):
            
            # Assigning a Str to a Name (line 1536):
            str_612462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1536, 23), 'str', 'An ')
            # Assigning a type to the variable 'hstr' (line 1536)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1536, 16), 'hstr', str_612462)
            # SSA branch for the else part of an if statement (line 1535)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Str to a Name (line 1538):
            
            # Assigning a Str to a Name (line 1538):
            str_612463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1538, 23), 'str', 'A ')
            # Assigning a type to the variable 'hstr' (line 1538)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1538, 16), 'hstr', str_612463)
            # SSA join for if statement (line 1535)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a BinOp to a Name (line 1539):
            
            # Assigning a BinOp to a Name (line 1539):
            # Getting the type of 'hstr' (line 1539)
            hstr_612464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1539, 23), 'hstr')
            # Getting the type of 'name' (line 1539)
            name_612465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1539, 30), 'name')
            # Applying the binary operator '+' (line 1539)
            result_add_612466 = python_operator(stypy.reporting.localization.Localization(__file__, 1539, 23), '+', hstr_612464, name_612465)
            
            # Assigning a type to the variable 'longname' (line 1539)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1539, 12), 'longname', result_add_612466)

            if more_types_in_union_612453:
                # SSA join for if statement (line 1534)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Getting the type of 'sys' (line 1541)
        sys_612467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1541, 11), 'sys')
        # Obtaining the member 'flags' of a type (line 1541)
        flags_612468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1541, 11), sys_612467, 'flags')
        # Obtaining the member 'optimize' of a type (line 1541)
        optimize_612469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1541, 11), flags_612468, 'optimize')
        int_612470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1541, 32), 'int')
        # Applying the binary operator '<' (line 1541)
        result_lt_612471 = python_operator(stypy.reporting.localization.Localization(__file__, 1541, 11), '<', optimize_612469, int_612470)
        
        # Testing the type of an if condition (line 1541)
        if_condition_612472 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1541, 8), result_lt_612471)
        # Assigning a type to the variable 'if_condition_612472' (line 1541)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1541, 8), 'if_condition_612472', if_condition_612472)
        # SSA begins for if statement (line 1541)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 1543)
        # Getting the type of 'self' (line 1543)
        self_612473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 15), 'self')
        # Obtaining the member '__doc__' of a type (line 1543)
        doc___612474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1543, 15), self_612473, '__doc__')
        # Getting the type of 'None' (line 1543)
        None_612475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1543, 31), 'None')
        
        (may_be_612476, more_types_in_union_612477) = may_be_none(doc___612474, None_612475)

        if may_be_612476:

            if more_types_in_union_612477:
                # Runtime conditional SSA (line 1543)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to _construct_default_doc(...): (line 1544)
            # Processing the call keyword arguments (line 1544)
            # Getting the type of 'longname' (line 1544)
            longname_612480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1544, 53), 'longname', False)
            keyword_612481 = longname_612480
            # Getting the type of 'extradoc' (line 1545)
            extradoc_612482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1545, 53), 'extradoc', False)
            keyword_612483 = extradoc_612482
            # Getting the type of 'docdict' (line 1546)
            docdict_612484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1546, 52), 'docdict', False)
            keyword_612485 = docdict_612484
            str_612486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1547, 53), 'str', 'continuous')
            keyword_612487 = str_612486
            kwargs_612488 = {'extradoc': keyword_612483, 'docdict': keyword_612485, 'discrete': keyword_612487, 'longname': keyword_612481}
            # Getting the type of 'self' (line 1544)
            self_612478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1544, 16), 'self', False)
            # Obtaining the member '_construct_default_doc' of a type (line 1544)
            _construct_default_doc_612479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1544, 16), self_612478, '_construct_default_doc')
            # Calling _construct_default_doc(args, kwargs) (line 1544)
            _construct_default_doc_call_result_612489 = invoke(stypy.reporting.localization.Localization(__file__, 1544, 16), _construct_default_doc_612479, *[], **kwargs_612488)
            

            if more_types_in_union_612477:
                # Runtime conditional SSA for else branch (line 1543)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_612476) or more_types_in_union_612477):
            
            # Assigning a Call to a Name (line 1549):
            
            # Assigning a Call to a Name (line 1549):
            
            # Call to dict(...): (line 1549)
            # Processing the call arguments (line 1549)
            # Getting the type of 'distcont' (line 1549)
            distcont_612491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 27), 'distcont', False)
            # Processing the call keyword arguments (line 1549)
            kwargs_612492 = {}
            # Getting the type of 'dict' (line 1549)
            dict_612490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1549, 22), 'dict', False)
            # Calling dict(args, kwargs) (line 1549)
            dict_call_result_612493 = invoke(stypy.reporting.localization.Localization(__file__, 1549, 22), dict_612490, *[distcont_612491], **kwargs_612492)
            
            # Assigning a type to the variable 'dct' (line 1549)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1549, 16), 'dct', dict_call_result_612493)
            
            # Call to _construct_doc(...): (line 1550)
            # Processing the call arguments (line 1550)
            # Getting the type of 'docdict' (line 1550)
            docdict_612496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 36), 'docdict', False)
            
            # Call to get(...): (line 1550)
            # Processing the call arguments (line 1550)
            # Getting the type of 'self' (line 1550)
            self_612499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 53), 'self', False)
            # Obtaining the member 'name' of a type (line 1550)
            name_612500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1550, 53), self_612499, 'name')
            # Processing the call keyword arguments (line 1550)
            kwargs_612501 = {}
            # Getting the type of 'dct' (line 1550)
            dct_612497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 45), 'dct', False)
            # Obtaining the member 'get' of a type (line 1550)
            get_612498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1550, 45), dct_612497, 'get')
            # Calling get(args, kwargs) (line 1550)
            get_call_result_612502 = invoke(stypy.reporting.localization.Localization(__file__, 1550, 45), get_612498, *[name_612500], **kwargs_612501)
            
            # Processing the call keyword arguments (line 1550)
            kwargs_612503 = {}
            # Getting the type of 'self' (line 1550)
            self_612494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1550, 16), 'self', False)
            # Obtaining the member '_construct_doc' of a type (line 1550)
            _construct_doc_612495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1550, 16), self_612494, '_construct_doc')
            # Calling _construct_doc(args, kwargs) (line 1550)
            _construct_doc_call_result_612504 = invoke(stypy.reporting.localization.Localization(__file__, 1550, 16), _construct_doc_612495, *[docdict_612496, get_call_result_612502], **kwargs_612503)
            

            if (may_be_612476 and more_types_in_union_612477):
                # SSA join for if statement (line 1543)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for if statement (line 1541)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _updated_ctor_param(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_updated_ctor_param'
        module_type_store = module_type_store.open_function_context('_updated_ctor_param', 1552, 4, False)
        # Assigning a type to the variable 'self' (line 1553)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1553, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_function_name', 'rv_continuous._updated_ctor_param')
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_param_names_list', [])
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._updated_ctor_param.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._updated_ctor_param', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_updated_ctor_param', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_updated_ctor_param(...)' code ##################

        str_612505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1557, (-1)), 'str', ' Return the current version of _ctor_param, possibly updated by user.\n\n            Used by freezing and pickling.\n            Keep this in sync with the signature of __init__.\n        ')
        
        # Assigning a Call to a Name (line 1558):
        
        # Assigning a Call to a Name (line 1558):
        
        # Call to copy(...): (line 1558)
        # Processing the call keyword arguments (line 1558)
        kwargs_612509 = {}
        # Getting the type of 'self' (line 1558)
        self_612506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1558, 14), 'self', False)
        # Obtaining the member '_ctor_param' of a type (line 1558)
        _ctor_param_612507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1558, 14), self_612506, '_ctor_param')
        # Obtaining the member 'copy' of a type (line 1558)
        copy_612508 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1558, 14), _ctor_param_612507, 'copy')
        # Calling copy(args, kwargs) (line 1558)
        copy_call_result_612510 = invoke(stypy.reporting.localization.Localization(__file__, 1558, 14), copy_612508, *[], **kwargs_612509)
        
        # Assigning a type to the variable 'dct' (line 1558)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1558, 8), 'dct', copy_call_result_612510)
        
        # Assigning a Attribute to a Subscript (line 1559):
        
        # Assigning a Attribute to a Subscript (line 1559):
        # Getting the type of 'self' (line 1559)
        self_612511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 19), 'self')
        # Obtaining the member 'a' of a type (line 1559)
        a_612512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1559, 19), self_612511, 'a')
        # Getting the type of 'dct' (line 1559)
        dct_612513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1559, 8), 'dct')
        str_612514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1559, 12), 'str', 'a')
        # Storing an element on a container (line 1559)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1559, 8), dct_612513, (str_612514, a_612512))
        
        # Assigning a Attribute to a Subscript (line 1560):
        
        # Assigning a Attribute to a Subscript (line 1560):
        # Getting the type of 'self' (line 1560)
        self_612515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 19), 'self')
        # Obtaining the member 'b' of a type (line 1560)
        b_612516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1560, 19), self_612515, 'b')
        # Getting the type of 'dct' (line 1560)
        dct_612517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1560, 8), 'dct')
        str_612518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1560, 12), 'str', 'b')
        # Storing an element on a container (line 1560)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1560, 8), dct_612517, (str_612518, b_612516))
        
        # Assigning a Attribute to a Subscript (line 1561):
        
        # Assigning a Attribute to a Subscript (line 1561):
        # Getting the type of 'self' (line 1561)
        self_612519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 22), 'self')
        # Obtaining the member 'xtol' of a type (line 1561)
        xtol_612520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1561, 22), self_612519, 'xtol')
        # Getting the type of 'dct' (line 1561)
        dct_612521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1561, 8), 'dct')
        str_612522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1561, 12), 'str', 'xtol')
        # Storing an element on a container (line 1561)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1561, 8), dct_612521, (str_612522, xtol_612520))
        
        # Assigning a Attribute to a Subscript (line 1562):
        
        # Assigning a Attribute to a Subscript (line 1562):
        # Getting the type of 'self' (line 1562)
        self_612523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 26), 'self')
        # Obtaining the member 'badvalue' of a type (line 1562)
        badvalue_612524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1562, 26), self_612523, 'badvalue')
        # Getting the type of 'dct' (line 1562)
        dct_612525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1562, 8), 'dct')
        str_612526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1562, 12), 'str', 'badvalue')
        # Storing an element on a container (line 1562)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1562, 8), dct_612525, (str_612526, badvalue_612524))
        
        # Assigning a Attribute to a Subscript (line 1563):
        
        # Assigning a Attribute to a Subscript (line 1563):
        # Getting the type of 'self' (line 1563)
        self_612527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1563, 22), 'self')
        # Obtaining the member 'name' of a type (line 1563)
        name_612528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1563, 22), self_612527, 'name')
        # Getting the type of 'dct' (line 1563)
        dct_612529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1563, 8), 'dct')
        str_612530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1563, 12), 'str', 'name')
        # Storing an element on a container (line 1563)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1563, 8), dct_612529, (str_612530, name_612528))
        
        # Assigning a Attribute to a Subscript (line 1564):
        
        # Assigning a Attribute to a Subscript (line 1564):
        # Getting the type of 'self' (line 1564)
        self_612531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1564, 24), 'self')
        # Obtaining the member 'shapes' of a type (line 1564)
        shapes_612532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1564, 24), self_612531, 'shapes')
        # Getting the type of 'dct' (line 1564)
        dct_612533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1564, 8), 'dct')
        str_612534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1564, 12), 'str', 'shapes')
        # Storing an element on a container (line 1564)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1564, 8), dct_612533, (str_612534, shapes_612532))
        
        # Assigning a Attribute to a Subscript (line 1565):
        
        # Assigning a Attribute to a Subscript (line 1565):
        # Getting the type of 'self' (line 1565)
        self_612535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 26), 'self')
        # Obtaining the member 'extradoc' of a type (line 1565)
        extradoc_612536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1565, 26), self_612535, 'extradoc')
        # Getting the type of 'dct' (line 1565)
        dct_612537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1565, 8), 'dct')
        str_612538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1565, 12), 'str', 'extradoc')
        # Storing an element on a container (line 1565)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1565, 8), dct_612537, (str_612538, extradoc_612536))
        # Getting the type of 'dct' (line 1566)
        dct_612539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1566, 15), 'dct')
        # Assigning a type to the variable 'stypy_return_type' (line 1566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1566, 8), 'stypy_return_type', dct_612539)
        
        # ################# End of '_updated_ctor_param(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_updated_ctor_param' in the type store
        # Getting the type of 'stypy_return_type' (line 1552)
        stypy_return_type_612540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1552, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612540)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_updated_ctor_param'
        return stypy_return_type_612540


    @norecursion
    def _ppf_to_solve(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_ppf_to_solve'
        module_type_store = module_type_store.open_function_context('_ppf_to_solve', 1568, 4, False)
        # Assigning a type to the variable 'self' (line 1569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1569, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_function_name', 'rv_continuous._ppf_to_solve')
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_param_names_list', ['x', 'q'])
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._ppf_to_solve.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._ppf_to_solve', ['x', 'q'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_ppf_to_solve', localization, ['x', 'q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_ppf_to_solve(...)' code ##################

        
        # Call to cdf(...): (line 1569)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1569)
        tuple_612543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1569, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1569)
        # Adding element type (line 1569)
        # Getting the type of 'x' (line 1569)
        x_612544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 26), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1569, 26), tuple_612543, x_612544)
        
        # Getting the type of 'args' (line 1569)
        args_612545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 31), 'args', False)
        # Applying the binary operator '+' (line 1569)
        result_add_612546 = python_operator(stypy.reporting.localization.Localization(__file__, 1569, 25), '+', tuple_612543, args_612545)
        
        # Processing the call keyword arguments (line 1569)
        kwargs_612547 = {}
        # Getting the type of 'self' (line 1569)
        self_612541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 15), 'self', False)
        # Obtaining the member 'cdf' of a type (line 1569)
        cdf_612542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1569, 15), self_612541, 'cdf')
        # Calling cdf(args, kwargs) (line 1569)
        cdf_call_result_612548 = invoke(stypy.reporting.localization.Localization(__file__, 1569, 15), cdf_612542, *[result_add_612546], **kwargs_612547)
        
        # Getting the type of 'q' (line 1569)
        q_612549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1569, 37), 'q')
        # Applying the binary operator '-' (line 1569)
        result_sub_612550 = python_operator(stypy.reporting.localization.Localization(__file__, 1569, 15), '-', cdf_call_result_612548, q_612549)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1569, 8), 'stypy_return_type', result_sub_612550)
        
        # ################# End of '_ppf_to_solve(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_ppf_to_solve' in the type store
        # Getting the type of 'stypy_return_type' (line 1568)
        stypy_return_type_612551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1568, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612551)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_ppf_to_solve'
        return stypy_return_type_612551


    @norecursion
    def _ppf_single(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_ppf_single'
        module_type_store = module_type_store.open_function_context('_ppf_single', 1571, 4, False)
        # Assigning a type to the variable 'self' (line 1572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1572, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_function_name', 'rv_continuous._ppf_single')
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._ppf_single.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._ppf_single', ['q'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_ppf_single', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_ppf_single(...)' code ##################

        
        # Multiple assignment of 2 elements.
        
        # Assigning a Name to a Name (line 1572):
        # Getting the type of 'None' (line 1572)
        None_612552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 23), 'None')
        # Assigning a type to the variable 'right' (line 1572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1572, 15), 'right', None_612552)
        
        # Assigning a Name to a Name (line 1572):
        # Getting the type of 'right' (line 1572)
        right_612553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1572, 15), 'right')
        # Assigning a type to the variable 'left' (line 1572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1572, 8), 'left', right_612553)
        
        
        # Getting the type of 'self' (line 1573)
        self_612554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1573, 11), 'self')
        # Obtaining the member 'a' of a type (line 1573)
        a_612555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1573, 11), self_612554, 'a')
        
        # Getting the type of 'np' (line 1573)
        np_612556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1573, 21), 'np')
        # Obtaining the member 'inf' of a type (line 1573)
        inf_612557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1573, 21), np_612556, 'inf')
        # Applying the 'usub' unary operator (line 1573)
        result___neg___612558 = python_operator(stypy.reporting.localization.Localization(__file__, 1573, 20), 'usub', inf_612557)
        
        # Applying the binary operator '>' (line 1573)
        result_gt_612559 = python_operator(stypy.reporting.localization.Localization(__file__, 1573, 11), '>', a_612555, result___neg___612558)
        
        # Testing the type of an if condition (line 1573)
        if_condition_612560 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1573, 8), result_gt_612559)
        # Assigning a type to the variable 'if_condition_612560' (line 1573)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1573, 8), 'if_condition_612560', if_condition_612560)
        # SSA begins for if statement (line 1573)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 1574):
        
        # Assigning a Attribute to a Name (line 1574):
        # Getting the type of 'self' (line 1574)
        self_612561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1574, 19), 'self')
        # Obtaining the member 'a' of a type (line 1574)
        a_612562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1574, 19), self_612561, 'a')
        # Assigning a type to the variable 'left' (line 1574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1574, 12), 'left', a_612562)
        # SSA join for if statement (line 1573)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'self' (line 1575)
        self_612563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 11), 'self')
        # Obtaining the member 'b' of a type (line 1575)
        b_612564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1575, 11), self_612563, 'b')
        # Getting the type of 'np' (line 1575)
        np_612565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1575, 20), 'np')
        # Obtaining the member 'inf' of a type (line 1575)
        inf_612566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1575, 20), np_612565, 'inf')
        # Applying the binary operator '<' (line 1575)
        result_lt_612567 = python_operator(stypy.reporting.localization.Localization(__file__, 1575, 11), '<', b_612564, inf_612566)
        
        # Testing the type of an if condition (line 1575)
        if_condition_612568 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1575, 8), result_lt_612567)
        # Assigning a type to the variable 'if_condition_612568' (line 1575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1575, 8), 'if_condition_612568', if_condition_612568)
        # SSA begins for if statement (line 1575)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 1576):
        
        # Assigning a Attribute to a Name (line 1576):
        # Getting the type of 'self' (line 1576)
        self_612569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1576, 20), 'self')
        # Obtaining the member 'b' of a type (line 1576)
        b_612570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1576, 20), self_612569, 'b')
        # Assigning a type to the variable 'right' (line 1576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1576, 12), 'right', b_612570)
        # SSA join for if statement (line 1575)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Num to a Name (line 1578):
        
        # Assigning a Num to a Name (line 1578):
        float_612571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1578, 17), 'float')
        # Assigning a type to the variable 'factor' (line 1578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1578, 8), 'factor', float_612571)
        
        
        # Getting the type of 'left' (line 1579)
        left_612572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1579, 15), 'left')
        # Applying the 'not' unary operator (line 1579)
        result_not__612573 = python_operator(stypy.reporting.localization.Localization(__file__, 1579, 11), 'not', left_612572)
        
        # Testing the type of an if condition (line 1579)
        if_condition_612574 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1579, 8), result_not__612573)
        # Assigning a type to the variable 'if_condition_612574' (line 1579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1579, 8), 'if_condition_612574', if_condition_612574)
        # SSA begins for if statement (line 1579)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 1580):
        
        # Assigning a BinOp to a Name (line 1580):
        float_612575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1580, 19), 'float')
        # Getting the type of 'factor' (line 1580)
        factor_612576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1580, 23), 'factor')
        # Applying the binary operator '*' (line 1580)
        result_mul_612577 = python_operator(stypy.reporting.localization.Localization(__file__, 1580, 19), '*', float_612575, factor_612576)
        
        # Assigning a type to the variable 'left' (line 1580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1580, 12), 'left', result_mul_612577)
        
        
        
        # Call to _ppf_to_solve(...): (line 1581)
        # Processing the call arguments (line 1581)
        # Getting the type of 'left' (line 1581)
        left_612580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 37), 'left', False)
        # Getting the type of 'q' (line 1581)
        q_612581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 43), 'q', False)
        # Getting the type of 'args' (line 1581)
        args_612582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 47), 'args', False)
        # Processing the call keyword arguments (line 1581)
        kwargs_612583 = {}
        # Getting the type of 'self' (line 1581)
        self_612578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1581, 18), 'self', False)
        # Obtaining the member '_ppf_to_solve' of a type (line 1581)
        _ppf_to_solve_612579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1581, 18), self_612578, '_ppf_to_solve')
        # Calling _ppf_to_solve(args, kwargs) (line 1581)
        _ppf_to_solve_call_result_612584 = invoke(stypy.reporting.localization.Localization(__file__, 1581, 18), _ppf_to_solve_612579, *[left_612580, q_612581, args_612582], **kwargs_612583)
        
        float_612585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1581, 55), 'float')
        # Applying the binary operator '>' (line 1581)
        result_gt_612586 = python_operator(stypy.reporting.localization.Localization(__file__, 1581, 18), '>', _ppf_to_solve_call_result_612584, float_612585)
        
        # Testing the type of an if condition (line 1581)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1581, 12), result_gt_612586)
        # SSA begins for while statement (line 1581)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Assigning a Name to a Name (line 1582):
        
        # Assigning a Name to a Name (line 1582):
        # Getting the type of 'left' (line 1582)
        left_612587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1582, 24), 'left')
        # Assigning a type to the variable 'right' (line 1582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1582, 16), 'right', left_612587)
        
        # Getting the type of 'left' (line 1583)
        left_612588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 16), 'left')
        # Getting the type of 'factor' (line 1583)
        factor_612589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1583, 24), 'factor')
        # Applying the binary operator '*=' (line 1583)
        result_imul_612590 = python_operator(stypy.reporting.localization.Localization(__file__, 1583, 16), '*=', left_612588, factor_612589)
        # Assigning a type to the variable 'left' (line 1583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1583, 16), 'left', result_imul_612590)
        
        # SSA join for while statement (line 1581)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1579)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'right' (line 1585)
        right_612591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1585, 15), 'right')
        # Applying the 'not' unary operator (line 1585)
        result_not__612592 = python_operator(stypy.reporting.localization.Localization(__file__, 1585, 11), 'not', right_612591)
        
        # Testing the type of an if condition (line 1585)
        if_condition_612593 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1585, 8), result_not__612592)
        # Assigning a type to the variable 'if_condition_612593' (line 1585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1585, 8), 'if_condition_612593', if_condition_612593)
        # SSA begins for if statement (line 1585)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 1586):
        
        # Assigning a Name to a Name (line 1586):
        # Getting the type of 'factor' (line 1586)
        factor_612594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1586, 20), 'factor')
        # Assigning a type to the variable 'right' (line 1586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1586, 12), 'right', factor_612594)
        
        
        
        # Call to _ppf_to_solve(...): (line 1587)
        # Processing the call arguments (line 1587)
        # Getting the type of 'right' (line 1587)
        right_612597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 37), 'right', False)
        # Getting the type of 'q' (line 1587)
        q_612598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 44), 'q', False)
        # Getting the type of 'args' (line 1587)
        args_612599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 48), 'args', False)
        # Processing the call keyword arguments (line 1587)
        kwargs_612600 = {}
        # Getting the type of 'self' (line 1587)
        self_612595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1587, 18), 'self', False)
        # Obtaining the member '_ppf_to_solve' of a type (line 1587)
        _ppf_to_solve_612596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1587, 18), self_612595, '_ppf_to_solve')
        # Calling _ppf_to_solve(args, kwargs) (line 1587)
        _ppf_to_solve_call_result_612601 = invoke(stypy.reporting.localization.Localization(__file__, 1587, 18), _ppf_to_solve_612596, *[right_612597, q_612598, args_612599], **kwargs_612600)
        
        float_612602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1587, 56), 'float')
        # Applying the binary operator '<' (line 1587)
        result_lt_612603 = python_operator(stypy.reporting.localization.Localization(__file__, 1587, 18), '<', _ppf_to_solve_call_result_612601, float_612602)
        
        # Testing the type of an if condition (line 1587)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1587, 12), result_lt_612603)
        # SSA begins for while statement (line 1587)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Assigning a Name to a Name (line 1588):
        
        # Assigning a Name to a Name (line 1588):
        # Getting the type of 'right' (line 1588)
        right_612604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1588, 23), 'right')
        # Assigning a type to the variable 'left' (line 1588)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1588, 16), 'left', right_612604)
        
        # Getting the type of 'right' (line 1589)
        right_612605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1589, 16), 'right')
        # Getting the type of 'factor' (line 1589)
        factor_612606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1589, 25), 'factor')
        # Applying the binary operator '*=' (line 1589)
        result_imul_612607 = python_operator(stypy.reporting.localization.Localization(__file__, 1589, 16), '*=', right_612605, factor_612606)
        # Assigning a type to the variable 'right' (line 1589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1589, 16), 'right', result_imul_612607)
        
        # SSA join for while statement (line 1587)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 1585)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to brentq(...): (line 1592)
        # Processing the call arguments (line 1592)
        # Getting the type of 'self' (line 1592)
        self_612610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1592, 31), 'self', False)
        # Obtaining the member '_ppf_to_solve' of a type (line 1592)
        _ppf_to_solve_612611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1592, 31), self_612610, '_ppf_to_solve')
        # Getting the type of 'left' (line 1593)
        left_612612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 31), 'left', False)
        # Getting the type of 'right' (line 1593)
        right_612613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 37), 'right', False)
        # Processing the call keyword arguments (line 1592)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1593)
        tuple_612614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1593, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1593)
        # Adding element type (line 1593)
        # Getting the type of 'q' (line 1593)
        q_612615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 50), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1593, 50), tuple_612614, q_612615)
        
        # Getting the type of 'args' (line 1593)
        args_612616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 54), 'args', False)
        # Applying the binary operator '+' (line 1593)
        result_add_612617 = python_operator(stypy.reporting.localization.Localization(__file__, 1593, 49), '+', tuple_612614, args_612616)
        
        keyword_612618 = result_add_612617
        # Getting the type of 'self' (line 1593)
        self_612619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1593, 65), 'self', False)
        # Obtaining the member 'xtol' of a type (line 1593)
        xtol_612620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1593, 65), self_612619, 'xtol')
        keyword_612621 = xtol_612620
        kwargs_612622 = {'xtol': keyword_612621, 'args': keyword_612618}
        # Getting the type of 'optimize' (line 1592)
        optimize_612608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1592, 15), 'optimize', False)
        # Obtaining the member 'brentq' of a type (line 1592)
        brentq_612609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1592, 15), optimize_612608, 'brentq')
        # Calling brentq(args, kwargs) (line 1592)
        brentq_call_result_612623 = invoke(stypy.reporting.localization.Localization(__file__, 1592, 15), brentq_612609, *[_ppf_to_solve_612611, left_612612, right_612613], **kwargs_612622)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1592)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1592, 8), 'stypy_return_type', brentq_call_result_612623)
        
        # ################# End of '_ppf_single(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_ppf_single' in the type store
        # Getting the type of 'stypy_return_type' (line 1571)
        stypy_return_type_612624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1571, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612624)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_ppf_single'
        return stypy_return_type_612624


    @norecursion
    def _mom_integ0(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_mom_integ0'
        module_type_store = module_type_store.open_function_context('_mom_integ0', 1596, 4, False)
        # Assigning a type to the variable 'self' (line 1597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1597, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_function_name', 'rv_continuous._mom_integ0')
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_param_names_list', ['x', 'm'])
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._mom_integ0.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._mom_integ0', ['x', 'm'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_mom_integ0', localization, ['x', 'm'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_mom_integ0(...)' code ##################

        # Getting the type of 'x' (line 1597)
        x_612625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 15), 'x')
        # Getting the type of 'm' (line 1597)
        m_612626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 18), 'm')
        # Applying the binary operator '**' (line 1597)
        result_pow_612627 = python_operator(stypy.reporting.localization.Localization(__file__, 1597, 15), '**', x_612625, m_612626)
        
        
        # Call to pdf(...): (line 1597)
        # Processing the call arguments (line 1597)
        # Getting the type of 'x' (line 1597)
        x_612630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 31), 'x', False)
        # Getting the type of 'args' (line 1597)
        args_612631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 35), 'args', False)
        # Processing the call keyword arguments (line 1597)
        kwargs_612632 = {}
        # Getting the type of 'self' (line 1597)
        self_612628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1597, 22), 'self', False)
        # Obtaining the member 'pdf' of a type (line 1597)
        pdf_612629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1597, 22), self_612628, 'pdf')
        # Calling pdf(args, kwargs) (line 1597)
        pdf_call_result_612633 = invoke(stypy.reporting.localization.Localization(__file__, 1597, 22), pdf_612629, *[x_612630, args_612631], **kwargs_612632)
        
        # Applying the binary operator '*' (line 1597)
        result_mul_612634 = python_operator(stypy.reporting.localization.Localization(__file__, 1597, 15), '*', result_pow_612627, pdf_call_result_612633)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1597, 8), 'stypy_return_type', result_mul_612634)
        
        # ################# End of '_mom_integ0(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_mom_integ0' in the type store
        # Getting the type of 'stypy_return_type' (line 1596)
        stypy_return_type_612635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1596, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612635)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_mom_integ0'
        return stypy_return_type_612635


    @norecursion
    def _mom0_sc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_mom0_sc'
        module_type_store = module_type_store.open_function_context('_mom0_sc', 1599, 4, False)
        # Assigning a type to the variable 'self' (line 1600)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1600, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_function_name', 'rv_continuous._mom0_sc')
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_param_names_list', ['m'])
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._mom0_sc.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._mom0_sc', ['m'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_mom0_sc', localization, ['m'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_mom0_sc(...)' code ##################

        
        # Obtaining the type of the subscript
        int_612636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 46), 'int')
        
        # Call to quad(...): (line 1600)
        # Processing the call arguments (line 1600)
        # Getting the type of 'self' (line 1600)
        self_612639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 30), 'self', False)
        # Obtaining the member '_mom_integ0' of a type (line 1600)
        _mom_integ0_612640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1600, 30), self_612639, '_mom_integ0')
        # Getting the type of 'self' (line 1600)
        self_612641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 48), 'self', False)
        # Obtaining the member 'a' of a type (line 1600)
        a_612642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1600, 48), self_612641, 'a')
        # Getting the type of 'self' (line 1600)
        self_612643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 56), 'self', False)
        # Obtaining the member 'b' of a type (line 1600)
        b_612644 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1600, 56), self_612643, 'b')
        # Processing the call keyword arguments (line 1600)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1601)
        tuple_612645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1601, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1601)
        # Adding element type (line 1601)
        # Getting the type of 'm' (line 1601)
        m_612646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 36), 'm', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1601, 36), tuple_612645, m_612646)
        
        # Getting the type of 'args' (line 1601)
        args_612647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1601, 40), 'args', False)
        # Applying the binary operator '+' (line 1601)
        result_add_612648 = python_operator(stypy.reporting.localization.Localization(__file__, 1601, 35), '+', tuple_612645, args_612647)
        
        keyword_612649 = result_add_612648
        kwargs_612650 = {'args': keyword_612649}
        # Getting the type of 'integrate' (line 1600)
        integrate_612637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1600, 15), 'integrate', False)
        # Obtaining the member 'quad' of a type (line 1600)
        quad_612638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1600, 15), integrate_612637, 'quad')
        # Calling quad(args, kwargs) (line 1600)
        quad_call_result_612651 = invoke(stypy.reporting.localization.Localization(__file__, 1600, 15), quad_612638, *[_mom_integ0_612640, a_612642, b_612644], **kwargs_612650)
        
        # Obtaining the member '__getitem__' of a type (line 1600)
        getitem___612652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1600, 15), quad_call_result_612651, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1600)
        subscript_call_result_612653 = invoke(stypy.reporting.localization.Localization(__file__, 1600, 15), getitem___612652, int_612636)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1600)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1600, 8), 'stypy_return_type', subscript_call_result_612653)
        
        # ################# End of '_mom0_sc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_mom0_sc' in the type store
        # Getting the type of 'stypy_return_type' (line 1599)
        stypy_return_type_612654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1599, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612654)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_mom0_sc'
        return stypy_return_type_612654


    @norecursion
    def _mom_integ1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_mom_integ1'
        module_type_store = module_type_store.open_function_context('_mom_integ1', 1604, 4, False)
        # Assigning a type to the variable 'self' (line 1605)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1605, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_function_name', 'rv_continuous._mom_integ1')
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_param_names_list', ['q', 'm'])
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._mom_integ1.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._mom_integ1', ['q', 'm'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_mom_integ1', localization, ['q', 'm'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_mom_integ1(...)' code ##################

        
        # Call to ppf(...): (line 1605)
        # Processing the call arguments (line 1605)
        # Getting the type of 'q' (line 1605)
        q_612657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 25), 'q', False)
        # Getting the type of 'args' (line 1605)
        args_612658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 29), 'args', False)
        # Processing the call keyword arguments (line 1605)
        kwargs_612659 = {}
        # Getting the type of 'self' (line 1605)
        self_612655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 16), 'self', False)
        # Obtaining the member 'ppf' of a type (line 1605)
        ppf_612656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1605, 16), self_612655, 'ppf')
        # Calling ppf(args, kwargs) (line 1605)
        ppf_call_result_612660 = invoke(stypy.reporting.localization.Localization(__file__, 1605, 16), ppf_612656, *[q_612657, args_612658], **kwargs_612659)
        
        # Getting the type of 'm' (line 1605)
        m_612661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1605, 37), 'm')
        # Applying the binary operator '**' (line 1605)
        result_pow_612662 = python_operator(stypy.reporting.localization.Localization(__file__, 1605, 15), '**', ppf_call_result_612660, m_612661)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1605)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1605, 8), 'stypy_return_type', result_pow_612662)
        
        # ################# End of '_mom_integ1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_mom_integ1' in the type store
        # Getting the type of 'stypy_return_type' (line 1604)
        stypy_return_type_612663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1604, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612663)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_mom_integ1'
        return stypy_return_type_612663


    @norecursion
    def _mom1_sc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_mom1_sc'
        module_type_store = module_type_store.open_function_context('_mom1_sc', 1607, 4, False)
        # Assigning a type to the variable 'self' (line 1608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1608, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_function_name', 'rv_continuous._mom1_sc')
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_param_names_list', ['m'])
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._mom1_sc.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._mom1_sc', ['m'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_mom1_sc', localization, ['m'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_mom1_sc(...)' code ##################

        
        # Obtaining the type of the subscript
        int_612664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1608, 70), 'int')
        
        # Call to quad(...): (line 1608)
        # Processing the call arguments (line 1608)
        # Getting the type of 'self' (line 1608)
        self_612667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1608, 30), 'self', False)
        # Obtaining the member '_mom_integ1' of a type (line 1608)
        _mom_integ1_612668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1608, 30), self_612667, '_mom_integ1')
        int_612669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1608, 48), 'int')
        int_612670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1608, 51), 'int')
        # Processing the call keyword arguments (line 1608)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1608)
        tuple_612671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1608, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1608)
        # Adding element type (line 1608)
        # Getting the type of 'm' (line 1608)
        m_612672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1608, 60), 'm', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1608, 60), tuple_612671, m_612672)
        
        # Getting the type of 'args' (line 1608)
        args_612673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1608, 64), 'args', False)
        # Applying the binary operator '+' (line 1608)
        result_add_612674 = python_operator(stypy.reporting.localization.Localization(__file__, 1608, 59), '+', tuple_612671, args_612673)
        
        keyword_612675 = result_add_612674
        kwargs_612676 = {'args': keyword_612675}
        # Getting the type of 'integrate' (line 1608)
        integrate_612665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1608, 15), 'integrate', False)
        # Obtaining the member 'quad' of a type (line 1608)
        quad_612666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1608, 15), integrate_612665, 'quad')
        # Calling quad(args, kwargs) (line 1608)
        quad_call_result_612677 = invoke(stypy.reporting.localization.Localization(__file__, 1608, 15), quad_612666, *[_mom_integ1_612668, int_612669, int_612670], **kwargs_612676)
        
        # Obtaining the member '__getitem__' of a type (line 1608)
        getitem___612678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1608, 15), quad_call_result_612677, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1608)
        subscript_call_result_612679 = invoke(stypy.reporting.localization.Localization(__file__, 1608, 15), getitem___612678, int_612664)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1608, 8), 'stypy_return_type', subscript_call_result_612679)
        
        # ################# End of '_mom1_sc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_mom1_sc' in the type store
        # Getting the type of 'stypy_return_type' (line 1607)
        stypy_return_type_612680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1607, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612680)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_mom1_sc'
        return stypy_return_type_612680


    @norecursion
    def _pdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_pdf'
        module_type_store = module_type_store.open_function_context('_pdf', 1610, 4, False)
        # Assigning a type to the variable 'self' (line 1611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1611, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._pdf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._pdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._pdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._pdf.__dict__.__setitem__('stypy_function_name', 'rv_continuous._pdf')
        rv_continuous._pdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous._pdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._pdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._pdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._pdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._pdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._pdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._pdf', ['x'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_pdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_pdf(...)' code ##################

        
        # Call to derivative(...): (line 1611)
        # Processing the call arguments (line 1611)
        # Getting the type of 'self' (line 1611)
        self_612682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 26), 'self', False)
        # Obtaining the member '_cdf' of a type (line 1611)
        _cdf_612683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1611, 26), self_612682, '_cdf')
        # Getting the type of 'x' (line 1611)
        x_612684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 37), 'x', False)
        # Processing the call keyword arguments (line 1611)
        float_612685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1611, 43), 'float')
        keyword_612686 = float_612685
        # Getting the type of 'args' (line 1611)
        args_612687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 54), 'args', False)
        keyword_612688 = args_612687
        int_612689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1611, 66), 'int')
        keyword_612690 = int_612689
        kwargs_612691 = {'args': keyword_612688, 'order': keyword_612690, 'dx': keyword_612686}
        # Getting the type of 'derivative' (line 1611)
        derivative_612681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1611, 15), 'derivative', False)
        # Calling derivative(args, kwargs) (line 1611)
        derivative_call_result_612692 = invoke(stypy.reporting.localization.Localization(__file__, 1611, 15), derivative_612681, *[_cdf_612683, x_612684], **kwargs_612691)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1611, 8), 'stypy_return_type', derivative_call_result_612692)
        
        # ################# End of '_pdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_pdf' in the type store
        # Getting the type of 'stypy_return_type' (line 1610)
        stypy_return_type_612693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1610, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612693)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_pdf'
        return stypy_return_type_612693


    @norecursion
    def _logpdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_logpdf'
        module_type_store = module_type_store.open_function_context('_logpdf', 1614, 4, False)
        # Assigning a type to the variable 'self' (line 1615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1615, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._logpdf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._logpdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._logpdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._logpdf.__dict__.__setitem__('stypy_function_name', 'rv_continuous._logpdf')
        rv_continuous._logpdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous._logpdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._logpdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._logpdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._logpdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._logpdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._logpdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._logpdf', ['x'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_logpdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_logpdf(...)' code ##################

        
        # Call to log(...): (line 1615)
        # Processing the call arguments (line 1615)
        
        # Call to _pdf(...): (line 1615)
        # Processing the call arguments (line 1615)
        # Getting the type of 'x' (line 1615)
        x_612697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 29), 'x', False)
        # Getting the type of 'args' (line 1615)
        args_612698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 33), 'args', False)
        # Processing the call keyword arguments (line 1615)
        kwargs_612699 = {}
        # Getting the type of 'self' (line 1615)
        self_612695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 19), 'self', False)
        # Obtaining the member '_pdf' of a type (line 1615)
        _pdf_612696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1615, 19), self_612695, '_pdf')
        # Calling _pdf(args, kwargs) (line 1615)
        _pdf_call_result_612700 = invoke(stypy.reporting.localization.Localization(__file__, 1615, 19), _pdf_612696, *[x_612697, args_612698], **kwargs_612699)
        
        # Processing the call keyword arguments (line 1615)
        kwargs_612701 = {}
        # Getting the type of 'log' (line 1615)
        log_612694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1615, 15), 'log', False)
        # Calling log(args, kwargs) (line 1615)
        log_call_result_612702 = invoke(stypy.reporting.localization.Localization(__file__, 1615, 15), log_612694, *[_pdf_call_result_612700], **kwargs_612701)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1615, 8), 'stypy_return_type', log_call_result_612702)
        
        # ################# End of '_logpdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_logpdf' in the type store
        # Getting the type of 'stypy_return_type' (line 1614)
        stypy_return_type_612703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1614, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612703)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_logpdf'
        return stypy_return_type_612703


    @norecursion
    def _cdf_single(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_cdf_single'
        module_type_store = module_type_store.open_function_context('_cdf_single', 1617, 4, False)
        # Assigning a type to the variable 'self' (line 1618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1618, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_function_name', 'rv_continuous._cdf_single')
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._cdf_single.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._cdf_single', ['x'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_cdf_single', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_cdf_single(...)' code ##################

        
        # Obtaining the type of the subscript
        int_612704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1618, 63), 'int')
        
        # Call to quad(...): (line 1618)
        # Processing the call arguments (line 1618)
        # Getting the type of 'self' (line 1618)
        self_612707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 30), 'self', False)
        # Obtaining the member '_pdf' of a type (line 1618)
        _pdf_612708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1618, 30), self_612707, '_pdf')
        # Getting the type of 'self' (line 1618)
        self_612709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 41), 'self', False)
        # Obtaining the member 'a' of a type (line 1618)
        a_612710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1618, 41), self_612709, 'a')
        # Getting the type of 'x' (line 1618)
        x_612711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 49), 'x', False)
        # Processing the call keyword arguments (line 1618)
        # Getting the type of 'args' (line 1618)
        args_612712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 57), 'args', False)
        keyword_612713 = args_612712
        kwargs_612714 = {'args': keyword_612713}
        # Getting the type of 'integrate' (line 1618)
        integrate_612705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1618, 15), 'integrate', False)
        # Obtaining the member 'quad' of a type (line 1618)
        quad_612706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1618, 15), integrate_612705, 'quad')
        # Calling quad(args, kwargs) (line 1618)
        quad_call_result_612715 = invoke(stypy.reporting.localization.Localization(__file__, 1618, 15), quad_612706, *[_pdf_612708, a_612710, x_612711], **kwargs_612714)
        
        # Obtaining the member '__getitem__' of a type (line 1618)
        getitem___612716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1618, 15), quad_call_result_612715, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1618)
        subscript_call_result_612717 = invoke(stypy.reporting.localization.Localization(__file__, 1618, 15), getitem___612716, int_612704)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1618, 8), 'stypy_return_type', subscript_call_result_612717)
        
        # ################# End of '_cdf_single(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_cdf_single' in the type store
        # Getting the type of 'stypy_return_type' (line 1617)
        stypy_return_type_612718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1617, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612718)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_cdf_single'
        return stypy_return_type_612718


    @norecursion
    def _cdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_cdf'
        module_type_store = module_type_store.open_function_context('_cdf', 1620, 4, False)
        # Assigning a type to the variable 'self' (line 1621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1621, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._cdf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._cdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._cdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._cdf.__dict__.__setitem__('stypy_function_name', 'rv_continuous._cdf')
        rv_continuous._cdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous._cdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._cdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._cdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._cdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._cdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._cdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._cdf', ['x'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_cdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_cdf(...)' code ##################

        
        # Call to _cdfvec(...): (line 1621)
        # Processing the call arguments (line 1621)
        # Getting the type of 'x' (line 1621)
        x_612721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 28), 'x', False)
        # Getting the type of 'args' (line 1621)
        args_612722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 32), 'args', False)
        # Processing the call keyword arguments (line 1621)
        kwargs_612723 = {}
        # Getting the type of 'self' (line 1621)
        self_612719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1621, 15), 'self', False)
        # Obtaining the member '_cdfvec' of a type (line 1621)
        _cdfvec_612720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1621, 15), self_612719, '_cdfvec')
        # Calling _cdfvec(args, kwargs) (line 1621)
        _cdfvec_call_result_612724 = invoke(stypy.reporting.localization.Localization(__file__, 1621, 15), _cdfvec_612720, *[x_612721, args_612722], **kwargs_612723)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1621, 8), 'stypy_return_type', _cdfvec_call_result_612724)
        
        # ################# End of '_cdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_cdf' in the type store
        # Getting the type of 'stypy_return_type' (line 1620)
        stypy_return_type_612725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1620, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612725)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_cdf'
        return stypy_return_type_612725


    @norecursion
    def pdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pdf'
        module_type_store = module_type_store.open_function_context('pdf', 1626, 4, False)
        # Assigning a type to the variable 'self' (line 1627)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1627, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.pdf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.pdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.pdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.pdf.__dict__.__setitem__('stypy_function_name', 'rv_continuous.pdf')
        rv_continuous.pdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous.pdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.pdf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.pdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.pdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.pdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.pdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.pdf', ['x'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pdf(...)' code ##################

        str_612726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1647, (-1)), 'str', '\n        Probability density function at x of the given RV.\n\n        Parameters\n        ----------\n        x : array_like\n            quantiles\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        pdf : ndarray\n            Probability density function evaluated at x\n\n        ')
        
        # Assigning a Call to a Tuple (line 1648):
        
        # Assigning a Subscript to a Name (line 1648):
        
        # Obtaining the type of the subscript
        int_612727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 8), 'int')
        
        # Call to _parse_args(...): (line 1648)
        # Getting the type of 'args' (line 1648)
        args_612730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 45), 'args', False)
        # Processing the call keyword arguments (line 1648)
        # Getting the type of 'kwds' (line 1648)
        kwds_612731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 53), 'kwds', False)
        kwargs_612732 = {'kwds_612731': kwds_612731}
        # Getting the type of 'self' (line 1648)
        self_612728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1648)
        _parse_args_612729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1648, 27), self_612728, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1648)
        _parse_args_call_result_612733 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 27), _parse_args_612729, *[args_612730], **kwargs_612732)
        
        # Obtaining the member '__getitem__' of a type (line 1648)
        getitem___612734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1648, 8), _parse_args_call_result_612733, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1648)
        subscript_call_result_612735 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 8), getitem___612734, int_612727)
        
        # Assigning a type to the variable 'tuple_var_assignment_609279' (line 1648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1648, 8), 'tuple_var_assignment_609279', subscript_call_result_612735)
        
        # Assigning a Subscript to a Name (line 1648):
        
        # Obtaining the type of the subscript
        int_612736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 8), 'int')
        
        # Call to _parse_args(...): (line 1648)
        # Getting the type of 'args' (line 1648)
        args_612739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 45), 'args', False)
        # Processing the call keyword arguments (line 1648)
        # Getting the type of 'kwds' (line 1648)
        kwds_612740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 53), 'kwds', False)
        kwargs_612741 = {'kwds_612740': kwds_612740}
        # Getting the type of 'self' (line 1648)
        self_612737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1648)
        _parse_args_612738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1648, 27), self_612737, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1648)
        _parse_args_call_result_612742 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 27), _parse_args_612738, *[args_612739], **kwargs_612741)
        
        # Obtaining the member '__getitem__' of a type (line 1648)
        getitem___612743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1648, 8), _parse_args_call_result_612742, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1648)
        subscript_call_result_612744 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 8), getitem___612743, int_612736)
        
        # Assigning a type to the variable 'tuple_var_assignment_609280' (line 1648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1648, 8), 'tuple_var_assignment_609280', subscript_call_result_612744)
        
        # Assigning a Subscript to a Name (line 1648):
        
        # Obtaining the type of the subscript
        int_612745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1648, 8), 'int')
        
        # Call to _parse_args(...): (line 1648)
        # Getting the type of 'args' (line 1648)
        args_612748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 45), 'args', False)
        # Processing the call keyword arguments (line 1648)
        # Getting the type of 'kwds' (line 1648)
        kwds_612749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 53), 'kwds', False)
        kwargs_612750 = {'kwds_612749': kwds_612749}
        # Getting the type of 'self' (line 1648)
        self_612746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1648)
        _parse_args_612747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1648, 27), self_612746, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1648)
        _parse_args_call_result_612751 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 27), _parse_args_612747, *[args_612748], **kwargs_612750)
        
        # Obtaining the member '__getitem__' of a type (line 1648)
        getitem___612752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1648, 8), _parse_args_call_result_612751, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1648)
        subscript_call_result_612753 = invoke(stypy.reporting.localization.Localization(__file__, 1648, 8), getitem___612752, int_612745)
        
        # Assigning a type to the variable 'tuple_var_assignment_609281' (line 1648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1648, 8), 'tuple_var_assignment_609281', subscript_call_result_612753)
        
        # Assigning a Name to a Name (line 1648):
        # Getting the type of 'tuple_var_assignment_609279' (line 1648)
        tuple_var_assignment_609279_612754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 8), 'tuple_var_assignment_609279')
        # Assigning a type to the variable 'args' (line 1648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1648, 8), 'args', tuple_var_assignment_609279_612754)
        
        # Assigning a Name to a Name (line 1648):
        # Getting the type of 'tuple_var_assignment_609280' (line 1648)
        tuple_var_assignment_609280_612755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 8), 'tuple_var_assignment_609280')
        # Assigning a type to the variable 'loc' (line 1648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1648, 14), 'loc', tuple_var_assignment_609280_612755)
        
        # Assigning a Name to a Name (line 1648):
        # Getting the type of 'tuple_var_assignment_609281' (line 1648)
        tuple_var_assignment_609281_612756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1648, 8), 'tuple_var_assignment_609281')
        # Assigning a type to the variable 'scale' (line 1648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1648, 19), 'scale', tuple_var_assignment_609281_612756)
        
        # Assigning a Call to a Tuple (line 1649):
        
        # Assigning a Subscript to a Name (line 1649):
        
        # Obtaining the type of the subscript
        int_612757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 8), 'int')
        
        # Call to map(...): (line 1649)
        # Processing the call arguments (line 1649)
        # Getting the type of 'asarray' (line 1649)
        asarray_612759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1649)
        tuple_612760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1649)
        # Adding element type (line 1649)
        # Getting the type of 'x' (line 1649)
        x_612761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 38), tuple_612760, x_612761)
        # Adding element type (line 1649)
        # Getting the type of 'loc' (line 1649)
        loc_612762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 38), tuple_612760, loc_612762)
        # Adding element type (line 1649)
        # Getting the type of 'scale' (line 1649)
        scale_612763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 38), tuple_612760, scale_612763)
        
        # Processing the call keyword arguments (line 1649)
        kwargs_612764 = {}
        # Getting the type of 'map' (line 1649)
        map_612758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 24), 'map', False)
        # Calling map(args, kwargs) (line 1649)
        map_call_result_612765 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 24), map_612758, *[asarray_612759, tuple_612760], **kwargs_612764)
        
        # Obtaining the member '__getitem__' of a type (line 1649)
        getitem___612766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 8), map_call_result_612765, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
        subscript_call_result_612767 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 8), getitem___612766, int_612757)
        
        # Assigning a type to the variable 'tuple_var_assignment_609282' (line 1649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 8), 'tuple_var_assignment_609282', subscript_call_result_612767)
        
        # Assigning a Subscript to a Name (line 1649):
        
        # Obtaining the type of the subscript
        int_612768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 8), 'int')
        
        # Call to map(...): (line 1649)
        # Processing the call arguments (line 1649)
        # Getting the type of 'asarray' (line 1649)
        asarray_612770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1649)
        tuple_612771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1649)
        # Adding element type (line 1649)
        # Getting the type of 'x' (line 1649)
        x_612772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 38), tuple_612771, x_612772)
        # Adding element type (line 1649)
        # Getting the type of 'loc' (line 1649)
        loc_612773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 38), tuple_612771, loc_612773)
        # Adding element type (line 1649)
        # Getting the type of 'scale' (line 1649)
        scale_612774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 38), tuple_612771, scale_612774)
        
        # Processing the call keyword arguments (line 1649)
        kwargs_612775 = {}
        # Getting the type of 'map' (line 1649)
        map_612769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 24), 'map', False)
        # Calling map(args, kwargs) (line 1649)
        map_call_result_612776 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 24), map_612769, *[asarray_612770, tuple_612771], **kwargs_612775)
        
        # Obtaining the member '__getitem__' of a type (line 1649)
        getitem___612777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 8), map_call_result_612776, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
        subscript_call_result_612778 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 8), getitem___612777, int_612768)
        
        # Assigning a type to the variable 'tuple_var_assignment_609283' (line 1649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 8), 'tuple_var_assignment_609283', subscript_call_result_612778)
        
        # Assigning a Subscript to a Name (line 1649):
        
        # Obtaining the type of the subscript
        int_612779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 8), 'int')
        
        # Call to map(...): (line 1649)
        # Processing the call arguments (line 1649)
        # Getting the type of 'asarray' (line 1649)
        asarray_612781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1649)
        tuple_612782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1649, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1649)
        # Adding element type (line 1649)
        # Getting the type of 'x' (line 1649)
        x_612783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 38), tuple_612782, x_612783)
        # Adding element type (line 1649)
        # Getting the type of 'loc' (line 1649)
        loc_612784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 38), tuple_612782, loc_612784)
        # Adding element type (line 1649)
        # Getting the type of 'scale' (line 1649)
        scale_612785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1649, 38), tuple_612782, scale_612785)
        
        # Processing the call keyword arguments (line 1649)
        kwargs_612786 = {}
        # Getting the type of 'map' (line 1649)
        map_612780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 24), 'map', False)
        # Calling map(args, kwargs) (line 1649)
        map_call_result_612787 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 24), map_612780, *[asarray_612781, tuple_612782], **kwargs_612786)
        
        # Obtaining the member '__getitem__' of a type (line 1649)
        getitem___612788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1649, 8), map_call_result_612787, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1649)
        subscript_call_result_612789 = invoke(stypy.reporting.localization.Localization(__file__, 1649, 8), getitem___612788, int_612779)
        
        # Assigning a type to the variable 'tuple_var_assignment_609284' (line 1649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 8), 'tuple_var_assignment_609284', subscript_call_result_612789)
        
        # Assigning a Name to a Name (line 1649):
        # Getting the type of 'tuple_var_assignment_609282' (line 1649)
        tuple_var_assignment_609282_612790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 8), 'tuple_var_assignment_609282')
        # Assigning a type to the variable 'x' (line 1649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 8), 'x', tuple_var_assignment_609282_612790)
        
        # Assigning a Name to a Name (line 1649):
        # Getting the type of 'tuple_var_assignment_609283' (line 1649)
        tuple_var_assignment_609283_612791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 8), 'tuple_var_assignment_609283')
        # Assigning a type to the variable 'loc' (line 1649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 11), 'loc', tuple_var_assignment_609283_612791)
        
        # Assigning a Name to a Name (line 1649):
        # Getting the type of 'tuple_var_assignment_609284' (line 1649)
        tuple_var_assignment_609284_612792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1649, 8), 'tuple_var_assignment_609284')
        # Assigning a type to the variable 'scale' (line 1649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1649, 16), 'scale', tuple_var_assignment_609284_612792)
        
        # Assigning a Call to a Name (line 1650):
        
        # Assigning a Call to a Name (line 1650):
        
        # Call to tuple(...): (line 1650)
        # Processing the call arguments (line 1650)
        
        # Call to map(...): (line 1650)
        # Processing the call arguments (line 1650)
        # Getting the type of 'asarray' (line 1650)
        asarray_612795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 25), 'asarray', False)
        # Getting the type of 'args' (line 1650)
        args_612796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 34), 'args', False)
        # Processing the call keyword arguments (line 1650)
        kwargs_612797 = {}
        # Getting the type of 'map' (line 1650)
        map_612794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 21), 'map', False)
        # Calling map(args, kwargs) (line 1650)
        map_call_result_612798 = invoke(stypy.reporting.localization.Localization(__file__, 1650, 21), map_612794, *[asarray_612795, args_612796], **kwargs_612797)
        
        # Processing the call keyword arguments (line 1650)
        kwargs_612799 = {}
        # Getting the type of 'tuple' (line 1650)
        tuple_612793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1650, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1650)
        tuple_call_result_612800 = invoke(stypy.reporting.localization.Localization(__file__, 1650, 15), tuple_612793, *[map_call_result_612798], **kwargs_612799)
        
        # Assigning a type to the variable 'args' (line 1650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1650, 8), 'args', tuple_call_result_612800)
        
        # Assigning a Call to a Name (line 1651):
        
        # Assigning a Call to a Name (line 1651):
        
        # Call to find_common_type(...): (line 1651)
        # Processing the call arguments (line 1651)
        
        # Obtaining an instance of the builtin type 'list' (line 1651)
        list_612803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1651, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1651)
        # Adding element type (line 1651)
        # Getting the type of 'x' (line 1651)
        x_612804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1651, 36), 'x', False)
        # Obtaining the member 'dtype' of a type (line 1651)
        dtype_612805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1651, 36), x_612804, 'dtype')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1651, 35), list_612803, dtype_612805)
        # Adding element type (line 1651)
        # Getting the type of 'np' (line 1651)
        np_612806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1651, 45), 'np', False)
        # Obtaining the member 'float64' of a type (line 1651)
        float64_612807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1651, 45), np_612806, 'float64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1651, 35), list_612803, float64_612807)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1651)
        list_612808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1651, 58), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1651)
        
        # Processing the call keyword arguments (line 1651)
        kwargs_612809 = {}
        # Getting the type of 'np' (line 1651)
        np_612801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1651, 15), 'np', False)
        # Obtaining the member 'find_common_type' of a type (line 1651)
        find_common_type_612802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1651, 15), np_612801, 'find_common_type')
        # Calling find_common_type(args, kwargs) (line 1651)
        find_common_type_call_result_612810 = invoke(stypy.reporting.localization.Localization(__file__, 1651, 15), find_common_type_612802, *[list_612803, list_612808], **kwargs_612809)
        
        # Assigning a type to the variable 'dtyp' (line 1651)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1651, 8), 'dtyp', find_common_type_call_result_612810)
        
        # Assigning a Call to a Name (line 1652):
        
        # Assigning a Call to a Name (line 1652):
        
        # Call to asarray(...): (line 1652)
        # Processing the call arguments (line 1652)
        # Getting the type of 'x' (line 1652)
        x_612813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 24), 'x', False)
        # Getting the type of 'loc' (line 1652)
        loc_612814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 28), 'loc', False)
        # Applying the binary operator '-' (line 1652)
        result_sub_612815 = python_operator(stypy.reporting.localization.Localization(__file__, 1652, 24), '-', x_612813, loc_612814)
        
        # Getting the type of 'scale' (line 1652)
        scale_612816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 33), 'scale', False)
        # Applying the binary operator 'div' (line 1652)
        result_div_612817 = python_operator(stypy.reporting.localization.Localization(__file__, 1652, 23), 'div', result_sub_612815, scale_612816)
        
        # Processing the call keyword arguments (line 1652)
        # Getting the type of 'dtyp' (line 1652)
        dtyp_612818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 46), 'dtyp', False)
        keyword_612819 = dtyp_612818
        kwargs_612820 = {'dtype': keyword_612819}
        # Getting the type of 'np' (line 1652)
        np_612811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1652, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1652)
        asarray_612812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1652, 12), np_612811, 'asarray')
        # Calling asarray(args, kwargs) (line 1652)
        asarray_call_result_612821 = invoke(stypy.reporting.localization.Localization(__file__, 1652, 12), asarray_612812, *[result_div_612817], **kwargs_612820)
        
        # Assigning a type to the variable 'x' (line 1652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1652, 8), 'x', asarray_call_result_612821)
        
        # Assigning a BinOp to a Name (line 1653):
        
        # Assigning a BinOp to a Name (line 1653):
        
        # Call to _argcheck(...): (line 1653)
        # Getting the type of 'args' (line 1653)
        args_612824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 32), 'args', False)
        # Processing the call keyword arguments (line 1653)
        kwargs_612825 = {}
        # Getting the type of 'self' (line 1653)
        self_612822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1653)
        _argcheck_612823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1653, 16), self_612822, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1653)
        _argcheck_call_result_612826 = invoke(stypy.reporting.localization.Localization(__file__, 1653, 16), _argcheck_612823, *[args_612824], **kwargs_612825)
        
        
        # Getting the type of 'scale' (line 1653)
        scale_612827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1653, 41), 'scale')
        int_612828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1653, 49), 'int')
        # Applying the binary operator '>' (line 1653)
        result_gt_612829 = python_operator(stypy.reporting.localization.Localization(__file__, 1653, 41), '>', scale_612827, int_612828)
        
        # Applying the binary operator '&' (line 1653)
        result_and__612830 = python_operator(stypy.reporting.localization.Localization(__file__, 1653, 16), '&', _argcheck_call_result_612826, result_gt_612829)
        
        # Assigning a type to the variable 'cond0' (line 1653)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1653, 8), 'cond0', result_and__612830)
        
        # Assigning a BinOp to a Name (line 1654):
        
        # Assigning a BinOp to a Name (line 1654):
        
        # Call to _support_mask(...): (line 1654)
        # Processing the call arguments (line 1654)
        # Getting the type of 'x' (line 1654)
        x_612833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 35), 'x', False)
        # Processing the call keyword arguments (line 1654)
        kwargs_612834 = {}
        # Getting the type of 'self' (line 1654)
        self_612831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 16), 'self', False)
        # Obtaining the member '_support_mask' of a type (line 1654)
        _support_mask_612832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1654, 16), self_612831, '_support_mask')
        # Calling _support_mask(args, kwargs) (line 1654)
        _support_mask_call_result_612835 = invoke(stypy.reporting.localization.Localization(__file__, 1654, 16), _support_mask_612832, *[x_612833], **kwargs_612834)
        
        
        # Getting the type of 'scale' (line 1654)
        scale_612836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1654, 41), 'scale')
        int_612837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1654, 49), 'int')
        # Applying the binary operator '>' (line 1654)
        result_gt_612838 = python_operator(stypy.reporting.localization.Localization(__file__, 1654, 41), '>', scale_612836, int_612837)
        
        # Applying the binary operator '&' (line 1654)
        result_and__612839 = python_operator(stypy.reporting.localization.Localization(__file__, 1654, 16), '&', _support_mask_call_result_612835, result_gt_612838)
        
        # Assigning a type to the variable 'cond1' (line 1654)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1654, 8), 'cond1', result_and__612839)
        
        # Assigning a BinOp to a Name (line 1655):
        
        # Assigning a BinOp to a Name (line 1655):
        # Getting the type of 'cond0' (line 1655)
        cond0_612840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 15), 'cond0')
        # Getting the type of 'cond1' (line 1655)
        cond1_612841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1655, 23), 'cond1')
        # Applying the binary operator '&' (line 1655)
        result_and__612842 = python_operator(stypy.reporting.localization.Localization(__file__, 1655, 15), '&', cond0_612840, cond1_612841)
        
        # Assigning a type to the variable 'cond' (line 1655)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1655, 8), 'cond', result_and__612842)
        
        # Assigning a Call to a Name (line 1656):
        
        # Assigning a Call to a Name (line 1656):
        
        # Call to zeros(...): (line 1656)
        # Processing the call arguments (line 1656)
        
        # Call to shape(...): (line 1656)
        # Processing the call arguments (line 1656)
        # Getting the type of 'cond' (line 1656)
        cond_612845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 29), 'cond', False)
        # Processing the call keyword arguments (line 1656)
        kwargs_612846 = {}
        # Getting the type of 'shape' (line 1656)
        shape_612844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 1656)
        shape_call_result_612847 = invoke(stypy.reporting.localization.Localization(__file__, 1656, 23), shape_612844, *[cond_612845], **kwargs_612846)
        
        # Getting the type of 'dtyp' (line 1656)
        dtyp_612848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 36), 'dtyp', False)
        # Processing the call keyword arguments (line 1656)
        kwargs_612849 = {}
        # Getting the type of 'zeros' (line 1656)
        zeros_612843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1656, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 1656)
        zeros_call_result_612850 = invoke(stypy.reporting.localization.Localization(__file__, 1656, 17), zeros_612843, *[shape_call_result_612847, dtyp_612848], **kwargs_612849)
        
        # Assigning a type to the variable 'output' (line 1656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1656, 8), 'output', zeros_call_result_612850)
        
        # Call to putmask(...): (line 1657)
        # Processing the call arguments (line 1657)
        # Getting the type of 'output' (line 1657)
        output_612852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1657, 16), 'output', False)
        int_612853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1657, 25), 'int')
        # Getting the type of 'cond0' (line 1657)
        cond0_612854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1657, 27), 'cond0', False)
        # Applying the binary operator '-' (line 1657)
        result_sub_612855 = python_operator(stypy.reporting.localization.Localization(__file__, 1657, 25), '-', int_612853, cond0_612854)
        
        
        # Call to isnan(...): (line 1657)
        # Processing the call arguments (line 1657)
        # Getting the type of 'x' (line 1657)
        x_612858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1657, 43), 'x', False)
        # Processing the call keyword arguments (line 1657)
        kwargs_612859 = {}
        # Getting the type of 'np' (line 1657)
        np_612856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1657, 34), 'np', False)
        # Obtaining the member 'isnan' of a type (line 1657)
        isnan_612857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1657, 34), np_612856, 'isnan')
        # Calling isnan(args, kwargs) (line 1657)
        isnan_call_result_612860 = invoke(stypy.reporting.localization.Localization(__file__, 1657, 34), isnan_612857, *[x_612858], **kwargs_612859)
        
        # Applying the binary operator '+' (line 1657)
        result_add_612861 = python_operator(stypy.reporting.localization.Localization(__file__, 1657, 24), '+', result_sub_612855, isnan_call_result_612860)
        
        # Getting the type of 'self' (line 1657)
        self_612862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1657, 47), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1657)
        badvalue_612863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1657, 47), self_612862, 'badvalue')
        # Processing the call keyword arguments (line 1657)
        kwargs_612864 = {}
        # Getting the type of 'putmask' (line 1657)
        putmask_612851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1657, 8), 'putmask', False)
        # Calling putmask(args, kwargs) (line 1657)
        putmask_call_result_612865 = invoke(stypy.reporting.localization.Localization(__file__, 1657, 8), putmask_612851, *[output_612852, result_add_612861, badvalue_612863], **kwargs_612864)
        
        
        
        # Call to any(...): (line 1658)
        # Processing the call arguments (line 1658)
        # Getting the type of 'cond' (line 1658)
        cond_612868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 18), 'cond', False)
        # Processing the call keyword arguments (line 1658)
        kwargs_612869 = {}
        # Getting the type of 'np' (line 1658)
        np_612866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1658, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1658)
        any_612867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1658, 11), np_612866, 'any')
        # Calling any(args, kwargs) (line 1658)
        any_call_result_612870 = invoke(stypy.reporting.localization.Localization(__file__, 1658, 11), any_612867, *[cond_612868], **kwargs_612869)
        
        # Testing the type of an if condition (line 1658)
        if_condition_612871 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1658, 8), any_call_result_612870)
        # Assigning a type to the variable 'if_condition_612871' (line 1658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1658, 8), 'if_condition_612871', if_condition_612871)
        # SSA begins for if statement (line 1658)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1659):
        
        # Assigning a Call to a Name (line 1659):
        
        # Call to argsreduce(...): (line 1659)
        # Processing the call arguments (line 1659)
        # Getting the type of 'cond' (line 1659)
        cond_612873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1659)
        tuple_612874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1659, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1659)
        # Adding element type (line 1659)
        # Getting the type of 'x' (line 1659)
        x_612875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 43), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1659, 43), tuple_612874, x_612875)
        
        # Getting the type of 'args' (line 1659)
        args_612876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 47), 'args', False)
        # Applying the binary operator '+' (line 1659)
        result_add_612877 = python_operator(stypy.reporting.localization.Localization(__file__, 1659, 42), '+', tuple_612874, args_612876)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1659)
        tuple_612878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1659, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1659)
        # Adding element type (line 1659)
        # Getting the type of 'scale' (line 1659)
        scale_612879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 53), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1659, 53), tuple_612878, scale_612879)
        
        # Applying the binary operator '+' (line 1659)
        result_add_612880 = python_operator(stypy.reporting.localization.Localization(__file__, 1659, 51), '+', result_add_612877, tuple_612878)
        
        # Processing the call keyword arguments (line 1659)
        kwargs_612881 = {}
        # Getting the type of 'argsreduce' (line 1659)
        argsreduce_612872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1659, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1659)
        argsreduce_call_result_612882 = invoke(stypy.reporting.localization.Localization(__file__, 1659, 23), argsreduce_612872, *[cond_612873, result_add_612880], **kwargs_612881)
        
        # Assigning a type to the variable 'goodargs' (line 1659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1659, 12), 'goodargs', argsreduce_call_result_612882)
        
        # Assigning a Tuple to a Tuple (line 1660):
        
        # Assigning a Subscript to a Name (line 1660):
        
        # Obtaining the type of the subscript
        int_612883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1660, 39), 'int')
        # Getting the type of 'goodargs' (line 1660)
        goodargs_612884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 30), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1660)
        getitem___612885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1660, 30), goodargs_612884, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1660)
        subscript_call_result_612886 = invoke(stypy.reporting.localization.Localization(__file__, 1660, 30), getitem___612885, int_612883)
        
        # Assigning a type to the variable 'tuple_assignment_609285' (line 1660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1660, 12), 'tuple_assignment_609285', subscript_call_result_612886)
        
        # Assigning a Subscript to a Name (line 1660):
        
        # Obtaining the type of the subscript
        int_612887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1660, 54), 'int')
        slice_612888 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1660, 44), None, int_612887, None)
        # Getting the type of 'goodargs' (line 1660)
        goodargs_612889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 44), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1660)
        getitem___612890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1660, 44), goodargs_612889, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1660)
        subscript_call_result_612891 = invoke(stypy.reporting.localization.Localization(__file__, 1660, 44), getitem___612890, slice_612888)
        
        # Assigning a type to the variable 'tuple_assignment_609286' (line 1660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1660, 12), 'tuple_assignment_609286', subscript_call_result_612891)
        
        # Assigning a Name to a Name (line 1660):
        # Getting the type of 'tuple_assignment_609285' (line 1660)
        tuple_assignment_609285_612892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 12), 'tuple_assignment_609285')
        # Assigning a type to the variable 'scale' (line 1660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1660, 12), 'scale', tuple_assignment_609285_612892)
        
        # Assigning a Name to a Name (line 1660):
        # Getting the type of 'tuple_assignment_609286' (line 1660)
        tuple_assignment_609286_612893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1660, 12), 'tuple_assignment_609286')
        # Assigning a type to the variable 'goodargs' (line 1660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1660, 19), 'goodargs', tuple_assignment_609286_612893)
        
        # Call to place(...): (line 1661)
        # Processing the call arguments (line 1661)
        # Getting the type of 'output' (line 1661)
        output_612895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 18), 'output', False)
        # Getting the type of 'cond' (line 1661)
        cond_612896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 26), 'cond', False)
        
        # Call to _pdf(...): (line 1661)
        # Getting the type of 'goodargs' (line 1661)
        goodargs_612899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 43), 'goodargs', False)
        # Processing the call keyword arguments (line 1661)
        kwargs_612900 = {}
        # Getting the type of 'self' (line 1661)
        self_612897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 32), 'self', False)
        # Obtaining the member '_pdf' of a type (line 1661)
        _pdf_612898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1661, 32), self_612897, '_pdf')
        # Calling _pdf(args, kwargs) (line 1661)
        _pdf_call_result_612901 = invoke(stypy.reporting.localization.Localization(__file__, 1661, 32), _pdf_612898, *[goodargs_612899], **kwargs_612900)
        
        # Getting the type of 'scale' (line 1661)
        scale_612902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 55), 'scale', False)
        # Applying the binary operator 'div' (line 1661)
        result_div_612903 = python_operator(stypy.reporting.localization.Localization(__file__, 1661, 32), 'div', _pdf_call_result_612901, scale_612902)
        
        # Processing the call keyword arguments (line 1661)
        kwargs_612904 = {}
        # Getting the type of 'place' (line 1661)
        place_612894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1661, 12), 'place', False)
        # Calling place(args, kwargs) (line 1661)
        place_call_result_612905 = invoke(stypy.reporting.localization.Localization(__file__, 1661, 12), place_612894, *[output_612895, cond_612896, result_div_612903], **kwargs_612904)
        
        # SSA join for if statement (line 1658)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 1662)
        output_612906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1662, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 1662)
        ndim_612907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1662, 11), output_612906, 'ndim')
        int_612908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1662, 26), 'int')
        # Applying the binary operator '==' (line 1662)
        result_eq_612909 = python_operator(stypy.reporting.localization.Localization(__file__, 1662, 11), '==', ndim_612907, int_612908)
        
        # Testing the type of an if condition (line 1662)
        if_condition_612910 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1662, 8), result_eq_612909)
        # Assigning a type to the variable 'if_condition_612910' (line 1662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1662, 8), 'if_condition_612910', if_condition_612910)
        # SSA begins for if statement (line 1662)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1663)
        tuple_612911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1663, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1663)
        
        # Getting the type of 'output' (line 1663)
        output_612912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1663, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 1663)
        getitem___612913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1663, 19), output_612912, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1663)
        subscript_call_result_612914 = invoke(stypy.reporting.localization.Localization(__file__, 1663, 19), getitem___612913, tuple_612911)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1663, 12), 'stypy_return_type', subscript_call_result_612914)
        # SSA join for if statement (line 1662)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 1664)
        output_612915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1664, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 1664)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1664, 8), 'stypy_return_type', output_612915)
        
        # ################# End of 'pdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pdf' in the type store
        # Getting the type of 'stypy_return_type' (line 1626)
        stypy_return_type_612916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1626, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_612916)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pdf'
        return stypy_return_type_612916


    @norecursion
    def logpdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logpdf'
        module_type_store = module_type_store.open_function_context('logpdf', 1666, 4, False)
        # Assigning a type to the variable 'self' (line 1667)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1667, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.logpdf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.logpdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.logpdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.logpdf.__dict__.__setitem__('stypy_function_name', 'rv_continuous.logpdf')
        rv_continuous.logpdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous.logpdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.logpdf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.logpdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.logpdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.logpdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.logpdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.logpdf', ['x'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logpdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logpdf(...)' code ##################

        str_612917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1689, (-1)), 'str', '\n        Log of the probability density function at x of the given RV.\n\n        This uses a more numerically accurate calculation if available.\n\n        Parameters\n        ----------\n        x : array_like\n            quantiles\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        logpdf : array_like\n            Log of the probability density function evaluated at x\n\n        ')
        
        # Assigning a Call to a Tuple (line 1690):
        
        # Assigning a Subscript to a Name (line 1690):
        
        # Obtaining the type of the subscript
        int_612918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1690, 8), 'int')
        
        # Call to _parse_args(...): (line 1690)
        # Getting the type of 'args' (line 1690)
        args_612921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 45), 'args', False)
        # Processing the call keyword arguments (line 1690)
        # Getting the type of 'kwds' (line 1690)
        kwds_612922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 53), 'kwds', False)
        kwargs_612923 = {'kwds_612922': kwds_612922}
        # Getting the type of 'self' (line 1690)
        self_612919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1690)
        _parse_args_612920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 27), self_612919, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1690)
        _parse_args_call_result_612924 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 27), _parse_args_612920, *[args_612921], **kwargs_612923)
        
        # Obtaining the member '__getitem__' of a type (line 1690)
        getitem___612925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 8), _parse_args_call_result_612924, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1690)
        subscript_call_result_612926 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 8), getitem___612925, int_612918)
        
        # Assigning a type to the variable 'tuple_var_assignment_609287' (line 1690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 8), 'tuple_var_assignment_609287', subscript_call_result_612926)
        
        # Assigning a Subscript to a Name (line 1690):
        
        # Obtaining the type of the subscript
        int_612927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1690, 8), 'int')
        
        # Call to _parse_args(...): (line 1690)
        # Getting the type of 'args' (line 1690)
        args_612930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 45), 'args', False)
        # Processing the call keyword arguments (line 1690)
        # Getting the type of 'kwds' (line 1690)
        kwds_612931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 53), 'kwds', False)
        kwargs_612932 = {'kwds_612931': kwds_612931}
        # Getting the type of 'self' (line 1690)
        self_612928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1690)
        _parse_args_612929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 27), self_612928, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1690)
        _parse_args_call_result_612933 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 27), _parse_args_612929, *[args_612930], **kwargs_612932)
        
        # Obtaining the member '__getitem__' of a type (line 1690)
        getitem___612934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 8), _parse_args_call_result_612933, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1690)
        subscript_call_result_612935 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 8), getitem___612934, int_612927)
        
        # Assigning a type to the variable 'tuple_var_assignment_609288' (line 1690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 8), 'tuple_var_assignment_609288', subscript_call_result_612935)
        
        # Assigning a Subscript to a Name (line 1690):
        
        # Obtaining the type of the subscript
        int_612936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1690, 8), 'int')
        
        # Call to _parse_args(...): (line 1690)
        # Getting the type of 'args' (line 1690)
        args_612939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 45), 'args', False)
        # Processing the call keyword arguments (line 1690)
        # Getting the type of 'kwds' (line 1690)
        kwds_612940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 53), 'kwds', False)
        kwargs_612941 = {'kwds_612940': kwds_612940}
        # Getting the type of 'self' (line 1690)
        self_612937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1690)
        _parse_args_612938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 27), self_612937, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1690)
        _parse_args_call_result_612942 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 27), _parse_args_612938, *[args_612939], **kwargs_612941)
        
        # Obtaining the member '__getitem__' of a type (line 1690)
        getitem___612943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1690, 8), _parse_args_call_result_612942, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1690)
        subscript_call_result_612944 = invoke(stypy.reporting.localization.Localization(__file__, 1690, 8), getitem___612943, int_612936)
        
        # Assigning a type to the variable 'tuple_var_assignment_609289' (line 1690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 8), 'tuple_var_assignment_609289', subscript_call_result_612944)
        
        # Assigning a Name to a Name (line 1690):
        # Getting the type of 'tuple_var_assignment_609287' (line 1690)
        tuple_var_assignment_609287_612945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 8), 'tuple_var_assignment_609287')
        # Assigning a type to the variable 'args' (line 1690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 8), 'args', tuple_var_assignment_609287_612945)
        
        # Assigning a Name to a Name (line 1690):
        # Getting the type of 'tuple_var_assignment_609288' (line 1690)
        tuple_var_assignment_609288_612946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 8), 'tuple_var_assignment_609288')
        # Assigning a type to the variable 'loc' (line 1690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 14), 'loc', tuple_var_assignment_609288_612946)
        
        # Assigning a Name to a Name (line 1690):
        # Getting the type of 'tuple_var_assignment_609289' (line 1690)
        tuple_var_assignment_609289_612947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1690, 8), 'tuple_var_assignment_609289')
        # Assigning a type to the variable 'scale' (line 1690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1690, 19), 'scale', tuple_var_assignment_609289_612947)
        
        # Assigning a Call to a Tuple (line 1691):
        
        # Assigning a Subscript to a Name (line 1691):
        
        # Obtaining the type of the subscript
        int_612948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 8), 'int')
        
        # Call to map(...): (line 1691)
        # Processing the call arguments (line 1691)
        # Getting the type of 'asarray' (line 1691)
        asarray_612950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1691)
        tuple_612951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1691)
        # Adding element type (line 1691)
        # Getting the type of 'x' (line 1691)
        x_612952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1691, 38), tuple_612951, x_612952)
        # Adding element type (line 1691)
        # Getting the type of 'loc' (line 1691)
        loc_612953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1691, 38), tuple_612951, loc_612953)
        # Adding element type (line 1691)
        # Getting the type of 'scale' (line 1691)
        scale_612954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1691, 38), tuple_612951, scale_612954)
        
        # Processing the call keyword arguments (line 1691)
        kwargs_612955 = {}
        # Getting the type of 'map' (line 1691)
        map_612949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 24), 'map', False)
        # Calling map(args, kwargs) (line 1691)
        map_call_result_612956 = invoke(stypy.reporting.localization.Localization(__file__, 1691, 24), map_612949, *[asarray_612950, tuple_612951], **kwargs_612955)
        
        # Obtaining the member '__getitem__' of a type (line 1691)
        getitem___612957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1691, 8), map_call_result_612956, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1691)
        subscript_call_result_612958 = invoke(stypy.reporting.localization.Localization(__file__, 1691, 8), getitem___612957, int_612948)
        
        # Assigning a type to the variable 'tuple_var_assignment_609290' (line 1691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1691, 8), 'tuple_var_assignment_609290', subscript_call_result_612958)
        
        # Assigning a Subscript to a Name (line 1691):
        
        # Obtaining the type of the subscript
        int_612959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 8), 'int')
        
        # Call to map(...): (line 1691)
        # Processing the call arguments (line 1691)
        # Getting the type of 'asarray' (line 1691)
        asarray_612961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1691)
        tuple_612962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1691)
        # Adding element type (line 1691)
        # Getting the type of 'x' (line 1691)
        x_612963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1691, 38), tuple_612962, x_612963)
        # Adding element type (line 1691)
        # Getting the type of 'loc' (line 1691)
        loc_612964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1691, 38), tuple_612962, loc_612964)
        # Adding element type (line 1691)
        # Getting the type of 'scale' (line 1691)
        scale_612965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1691, 38), tuple_612962, scale_612965)
        
        # Processing the call keyword arguments (line 1691)
        kwargs_612966 = {}
        # Getting the type of 'map' (line 1691)
        map_612960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 24), 'map', False)
        # Calling map(args, kwargs) (line 1691)
        map_call_result_612967 = invoke(stypy.reporting.localization.Localization(__file__, 1691, 24), map_612960, *[asarray_612961, tuple_612962], **kwargs_612966)
        
        # Obtaining the member '__getitem__' of a type (line 1691)
        getitem___612968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1691, 8), map_call_result_612967, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1691)
        subscript_call_result_612969 = invoke(stypy.reporting.localization.Localization(__file__, 1691, 8), getitem___612968, int_612959)
        
        # Assigning a type to the variable 'tuple_var_assignment_609291' (line 1691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1691, 8), 'tuple_var_assignment_609291', subscript_call_result_612969)
        
        # Assigning a Subscript to a Name (line 1691):
        
        # Obtaining the type of the subscript
        int_612970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 8), 'int')
        
        # Call to map(...): (line 1691)
        # Processing the call arguments (line 1691)
        # Getting the type of 'asarray' (line 1691)
        asarray_612972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1691)
        tuple_612973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1691, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1691)
        # Adding element type (line 1691)
        # Getting the type of 'x' (line 1691)
        x_612974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1691, 38), tuple_612973, x_612974)
        # Adding element type (line 1691)
        # Getting the type of 'loc' (line 1691)
        loc_612975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1691, 38), tuple_612973, loc_612975)
        # Adding element type (line 1691)
        # Getting the type of 'scale' (line 1691)
        scale_612976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1691, 38), tuple_612973, scale_612976)
        
        # Processing the call keyword arguments (line 1691)
        kwargs_612977 = {}
        # Getting the type of 'map' (line 1691)
        map_612971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 24), 'map', False)
        # Calling map(args, kwargs) (line 1691)
        map_call_result_612978 = invoke(stypy.reporting.localization.Localization(__file__, 1691, 24), map_612971, *[asarray_612972, tuple_612973], **kwargs_612977)
        
        # Obtaining the member '__getitem__' of a type (line 1691)
        getitem___612979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1691, 8), map_call_result_612978, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1691)
        subscript_call_result_612980 = invoke(stypy.reporting.localization.Localization(__file__, 1691, 8), getitem___612979, int_612970)
        
        # Assigning a type to the variable 'tuple_var_assignment_609292' (line 1691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1691, 8), 'tuple_var_assignment_609292', subscript_call_result_612980)
        
        # Assigning a Name to a Name (line 1691):
        # Getting the type of 'tuple_var_assignment_609290' (line 1691)
        tuple_var_assignment_609290_612981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 8), 'tuple_var_assignment_609290')
        # Assigning a type to the variable 'x' (line 1691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1691, 8), 'x', tuple_var_assignment_609290_612981)
        
        # Assigning a Name to a Name (line 1691):
        # Getting the type of 'tuple_var_assignment_609291' (line 1691)
        tuple_var_assignment_609291_612982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 8), 'tuple_var_assignment_609291')
        # Assigning a type to the variable 'loc' (line 1691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1691, 11), 'loc', tuple_var_assignment_609291_612982)
        
        # Assigning a Name to a Name (line 1691):
        # Getting the type of 'tuple_var_assignment_609292' (line 1691)
        tuple_var_assignment_609292_612983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1691, 8), 'tuple_var_assignment_609292')
        # Assigning a type to the variable 'scale' (line 1691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1691, 16), 'scale', tuple_var_assignment_609292_612983)
        
        # Assigning a Call to a Name (line 1692):
        
        # Assigning a Call to a Name (line 1692):
        
        # Call to tuple(...): (line 1692)
        # Processing the call arguments (line 1692)
        
        # Call to map(...): (line 1692)
        # Processing the call arguments (line 1692)
        # Getting the type of 'asarray' (line 1692)
        asarray_612986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1692, 25), 'asarray', False)
        # Getting the type of 'args' (line 1692)
        args_612987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1692, 34), 'args', False)
        # Processing the call keyword arguments (line 1692)
        kwargs_612988 = {}
        # Getting the type of 'map' (line 1692)
        map_612985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1692, 21), 'map', False)
        # Calling map(args, kwargs) (line 1692)
        map_call_result_612989 = invoke(stypy.reporting.localization.Localization(__file__, 1692, 21), map_612985, *[asarray_612986, args_612987], **kwargs_612988)
        
        # Processing the call keyword arguments (line 1692)
        kwargs_612990 = {}
        # Getting the type of 'tuple' (line 1692)
        tuple_612984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1692, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1692)
        tuple_call_result_612991 = invoke(stypy.reporting.localization.Localization(__file__, 1692, 15), tuple_612984, *[map_call_result_612989], **kwargs_612990)
        
        # Assigning a type to the variable 'args' (line 1692)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1692, 8), 'args', tuple_call_result_612991)
        
        # Assigning a Call to a Name (line 1693):
        
        # Assigning a Call to a Name (line 1693):
        
        # Call to find_common_type(...): (line 1693)
        # Processing the call arguments (line 1693)
        
        # Obtaining an instance of the builtin type 'list' (line 1693)
        list_612994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1693, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1693)
        # Adding element type (line 1693)
        # Getting the type of 'x' (line 1693)
        x_612995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 36), 'x', False)
        # Obtaining the member 'dtype' of a type (line 1693)
        dtype_612996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 36), x_612995, 'dtype')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1693, 35), list_612994, dtype_612996)
        # Adding element type (line 1693)
        # Getting the type of 'np' (line 1693)
        np_612997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 45), 'np', False)
        # Obtaining the member 'float64' of a type (line 1693)
        float64_612998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 45), np_612997, 'float64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1693, 35), list_612994, float64_612998)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1693)
        list_612999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1693, 58), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1693)
        
        # Processing the call keyword arguments (line 1693)
        kwargs_613000 = {}
        # Getting the type of 'np' (line 1693)
        np_612992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1693, 15), 'np', False)
        # Obtaining the member 'find_common_type' of a type (line 1693)
        find_common_type_612993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1693, 15), np_612992, 'find_common_type')
        # Calling find_common_type(args, kwargs) (line 1693)
        find_common_type_call_result_613001 = invoke(stypy.reporting.localization.Localization(__file__, 1693, 15), find_common_type_612993, *[list_612994, list_612999], **kwargs_613000)
        
        # Assigning a type to the variable 'dtyp' (line 1693)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1693, 8), 'dtyp', find_common_type_call_result_613001)
        
        # Assigning a Call to a Name (line 1694):
        
        # Assigning a Call to a Name (line 1694):
        
        # Call to asarray(...): (line 1694)
        # Processing the call arguments (line 1694)
        # Getting the type of 'x' (line 1694)
        x_613004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 24), 'x', False)
        # Getting the type of 'loc' (line 1694)
        loc_613005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 28), 'loc', False)
        # Applying the binary operator '-' (line 1694)
        result_sub_613006 = python_operator(stypy.reporting.localization.Localization(__file__, 1694, 24), '-', x_613004, loc_613005)
        
        # Getting the type of 'scale' (line 1694)
        scale_613007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 33), 'scale', False)
        # Applying the binary operator 'div' (line 1694)
        result_div_613008 = python_operator(stypy.reporting.localization.Localization(__file__, 1694, 23), 'div', result_sub_613006, scale_613007)
        
        # Processing the call keyword arguments (line 1694)
        # Getting the type of 'dtyp' (line 1694)
        dtyp_613009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 46), 'dtyp', False)
        keyword_613010 = dtyp_613009
        kwargs_613011 = {'dtype': keyword_613010}
        # Getting the type of 'np' (line 1694)
        np_613002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1694, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1694)
        asarray_613003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1694, 12), np_613002, 'asarray')
        # Calling asarray(args, kwargs) (line 1694)
        asarray_call_result_613012 = invoke(stypy.reporting.localization.Localization(__file__, 1694, 12), asarray_613003, *[result_div_613008], **kwargs_613011)
        
        # Assigning a type to the variable 'x' (line 1694)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1694, 8), 'x', asarray_call_result_613012)
        
        # Assigning a BinOp to a Name (line 1695):
        
        # Assigning a BinOp to a Name (line 1695):
        
        # Call to _argcheck(...): (line 1695)
        # Getting the type of 'args' (line 1695)
        args_613015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 32), 'args', False)
        # Processing the call keyword arguments (line 1695)
        kwargs_613016 = {}
        # Getting the type of 'self' (line 1695)
        self_613013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1695)
        _argcheck_613014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1695, 16), self_613013, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1695)
        _argcheck_call_result_613017 = invoke(stypy.reporting.localization.Localization(__file__, 1695, 16), _argcheck_613014, *[args_613015], **kwargs_613016)
        
        
        # Getting the type of 'scale' (line 1695)
        scale_613018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1695, 41), 'scale')
        int_613019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1695, 49), 'int')
        # Applying the binary operator '>' (line 1695)
        result_gt_613020 = python_operator(stypy.reporting.localization.Localization(__file__, 1695, 41), '>', scale_613018, int_613019)
        
        # Applying the binary operator '&' (line 1695)
        result_and__613021 = python_operator(stypy.reporting.localization.Localization(__file__, 1695, 16), '&', _argcheck_call_result_613017, result_gt_613020)
        
        # Assigning a type to the variable 'cond0' (line 1695)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1695, 8), 'cond0', result_and__613021)
        
        # Assigning a BinOp to a Name (line 1696):
        
        # Assigning a BinOp to a Name (line 1696):
        
        # Call to _support_mask(...): (line 1696)
        # Processing the call arguments (line 1696)
        # Getting the type of 'x' (line 1696)
        x_613024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 35), 'x', False)
        # Processing the call keyword arguments (line 1696)
        kwargs_613025 = {}
        # Getting the type of 'self' (line 1696)
        self_613022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 16), 'self', False)
        # Obtaining the member '_support_mask' of a type (line 1696)
        _support_mask_613023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1696, 16), self_613022, '_support_mask')
        # Calling _support_mask(args, kwargs) (line 1696)
        _support_mask_call_result_613026 = invoke(stypy.reporting.localization.Localization(__file__, 1696, 16), _support_mask_613023, *[x_613024], **kwargs_613025)
        
        
        # Getting the type of 'scale' (line 1696)
        scale_613027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1696, 41), 'scale')
        int_613028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1696, 49), 'int')
        # Applying the binary operator '>' (line 1696)
        result_gt_613029 = python_operator(stypy.reporting.localization.Localization(__file__, 1696, 41), '>', scale_613027, int_613028)
        
        # Applying the binary operator '&' (line 1696)
        result_and__613030 = python_operator(stypy.reporting.localization.Localization(__file__, 1696, 16), '&', _support_mask_call_result_613026, result_gt_613029)
        
        # Assigning a type to the variable 'cond1' (line 1696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1696, 8), 'cond1', result_and__613030)
        
        # Assigning a BinOp to a Name (line 1697):
        
        # Assigning a BinOp to a Name (line 1697):
        # Getting the type of 'cond0' (line 1697)
        cond0_613031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 15), 'cond0')
        # Getting the type of 'cond1' (line 1697)
        cond1_613032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1697, 23), 'cond1')
        # Applying the binary operator '&' (line 1697)
        result_and__613033 = python_operator(stypy.reporting.localization.Localization(__file__, 1697, 15), '&', cond0_613031, cond1_613032)
        
        # Assigning a type to the variable 'cond' (line 1697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1697, 8), 'cond', result_and__613033)
        
        # Assigning a Call to a Name (line 1698):
        
        # Assigning a Call to a Name (line 1698):
        
        # Call to empty(...): (line 1698)
        # Processing the call arguments (line 1698)
        
        # Call to shape(...): (line 1698)
        # Processing the call arguments (line 1698)
        # Getting the type of 'cond' (line 1698)
        cond_613036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 29), 'cond', False)
        # Processing the call keyword arguments (line 1698)
        kwargs_613037 = {}
        # Getting the type of 'shape' (line 1698)
        shape_613035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 1698)
        shape_call_result_613038 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 23), shape_613035, *[cond_613036], **kwargs_613037)
        
        # Getting the type of 'dtyp' (line 1698)
        dtyp_613039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 36), 'dtyp', False)
        # Processing the call keyword arguments (line 1698)
        kwargs_613040 = {}
        # Getting the type of 'empty' (line 1698)
        empty_613034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1698, 17), 'empty', False)
        # Calling empty(args, kwargs) (line 1698)
        empty_call_result_613041 = invoke(stypy.reporting.localization.Localization(__file__, 1698, 17), empty_613034, *[shape_call_result_613038, dtyp_613039], **kwargs_613040)
        
        # Assigning a type to the variable 'output' (line 1698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1698, 8), 'output', empty_call_result_613041)
        
        # Call to fill(...): (line 1699)
        # Processing the call arguments (line 1699)
        # Getting the type of 'NINF' (line 1699)
        NINF_613044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 20), 'NINF', False)
        # Processing the call keyword arguments (line 1699)
        kwargs_613045 = {}
        # Getting the type of 'output' (line 1699)
        output_613042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1699, 8), 'output', False)
        # Obtaining the member 'fill' of a type (line 1699)
        fill_613043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1699, 8), output_613042, 'fill')
        # Calling fill(args, kwargs) (line 1699)
        fill_call_result_613046 = invoke(stypy.reporting.localization.Localization(__file__, 1699, 8), fill_613043, *[NINF_613044], **kwargs_613045)
        
        
        # Call to putmask(...): (line 1700)
        # Processing the call arguments (line 1700)
        # Getting the type of 'output' (line 1700)
        output_613048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 16), 'output', False)
        int_613049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1700, 25), 'int')
        # Getting the type of 'cond0' (line 1700)
        cond0_613050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 27), 'cond0', False)
        # Applying the binary operator '-' (line 1700)
        result_sub_613051 = python_operator(stypy.reporting.localization.Localization(__file__, 1700, 25), '-', int_613049, cond0_613050)
        
        
        # Call to isnan(...): (line 1700)
        # Processing the call arguments (line 1700)
        # Getting the type of 'x' (line 1700)
        x_613054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 43), 'x', False)
        # Processing the call keyword arguments (line 1700)
        kwargs_613055 = {}
        # Getting the type of 'np' (line 1700)
        np_613052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 34), 'np', False)
        # Obtaining the member 'isnan' of a type (line 1700)
        isnan_613053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1700, 34), np_613052, 'isnan')
        # Calling isnan(args, kwargs) (line 1700)
        isnan_call_result_613056 = invoke(stypy.reporting.localization.Localization(__file__, 1700, 34), isnan_613053, *[x_613054], **kwargs_613055)
        
        # Applying the binary operator '+' (line 1700)
        result_add_613057 = python_operator(stypy.reporting.localization.Localization(__file__, 1700, 24), '+', result_sub_613051, isnan_call_result_613056)
        
        # Getting the type of 'self' (line 1700)
        self_613058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 47), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1700)
        badvalue_613059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1700, 47), self_613058, 'badvalue')
        # Processing the call keyword arguments (line 1700)
        kwargs_613060 = {}
        # Getting the type of 'putmask' (line 1700)
        putmask_613047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1700, 8), 'putmask', False)
        # Calling putmask(args, kwargs) (line 1700)
        putmask_call_result_613061 = invoke(stypy.reporting.localization.Localization(__file__, 1700, 8), putmask_613047, *[output_613048, result_add_613057, badvalue_613059], **kwargs_613060)
        
        
        
        # Call to any(...): (line 1701)
        # Processing the call arguments (line 1701)
        # Getting the type of 'cond' (line 1701)
        cond_613064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1701, 18), 'cond', False)
        # Processing the call keyword arguments (line 1701)
        kwargs_613065 = {}
        # Getting the type of 'np' (line 1701)
        np_613062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1701, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1701)
        any_613063 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1701, 11), np_613062, 'any')
        # Calling any(args, kwargs) (line 1701)
        any_call_result_613066 = invoke(stypy.reporting.localization.Localization(__file__, 1701, 11), any_613063, *[cond_613064], **kwargs_613065)
        
        # Testing the type of an if condition (line 1701)
        if_condition_613067 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1701, 8), any_call_result_613066)
        # Assigning a type to the variable 'if_condition_613067' (line 1701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1701, 8), 'if_condition_613067', if_condition_613067)
        # SSA begins for if statement (line 1701)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1702):
        
        # Assigning a Call to a Name (line 1702):
        
        # Call to argsreduce(...): (line 1702)
        # Processing the call arguments (line 1702)
        # Getting the type of 'cond' (line 1702)
        cond_613069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1702)
        tuple_613070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1702, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1702)
        # Adding element type (line 1702)
        # Getting the type of 'x' (line 1702)
        x_613071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 43), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1702, 43), tuple_613070, x_613071)
        
        # Getting the type of 'args' (line 1702)
        args_613072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 47), 'args', False)
        # Applying the binary operator '+' (line 1702)
        result_add_613073 = python_operator(stypy.reporting.localization.Localization(__file__, 1702, 42), '+', tuple_613070, args_613072)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1702)
        tuple_613074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1702, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1702)
        # Adding element type (line 1702)
        # Getting the type of 'scale' (line 1702)
        scale_613075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 53), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1702, 53), tuple_613074, scale_613075)
        
        # Applying the binary operator '+' (line 1702)
        result_add_613076 = python_operator(stypy.reporting.localization.Localization(__file__, 1702, 51), '+', result_add_613073, tuple_613074)
        
        # Processing the call keyword arguments (line 1702)
        kwargs_613077 = {}
        # Getting the type of 'argsreduce' (line 1702)
        argsreduce_613068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1702, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1702)
        argsreduce_call_result_613078 = invoke(stypy.reporting.localization.Localization(__file__, 1702, 23), argsreduce_613068, *[cond_613069, result_add_613076], **kwargs_613077)
        
        # Assigning a type to the variable 'goodargs' (line 1702)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1702, 12), 'goodargs', argsreduce_call_result_613078)
        
        # Assigning a Tuple to a Tuple (line 1703):
        
        # Assigning a Subscript to a Name (line 1703):
        
        # Obtaining the type of the subscript
        int_613079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1703, 39), 'int')
        # Getting the type of 'goodargs' (line 1703)
        goodargs_613080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 30), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1703)
        getitem___613081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1703, 30), goodargs_613080, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1703)
        subscript_call_result_613082 = invoke(stypy.reporting.localization.Localization(__file__, 1703, 30), getitem___613081, int_613079)
        
        # Assigning a type to the variable 'tuple_assignment_609293' (line 1703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1703, 12), 'tuple_assignment_609293', subscript_call_result_613082)
        
        # Assigning a Subscript to a Name (line 1703):
        
        # Obtaining the type of the subscript
        int_613083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1703, 54), 'int')
        slice_613084 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1703, 44), None, int_613083, None)
        # Getting the type of 'goodargs' (line 1703)
        goodargs_613085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 44), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1703)
        getitem___613086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1703, 44), goodargs_613085, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1703)
        subscript_call_result_613087 = invoke(stypy.reporting.localization.Localization(__file__, 1703, 44), getitem___613086, slice_613084)
        
        # Assigning a type to the variable 'tuple_assignment_609294' (line 1703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1703, 12), 'tuple_assignment_609294', subscript_call_result_613087)
        
        # Assigning a Name to a Name (line 1703):
        # Getting the type of 'tuple_assignment_609293' (line 1703)
        tuple_assignment_609293_613088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 12), 'tuple_assignment_609293')
        # Assigning a type to the variable 'scale' (line 1703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1703, 12), 'scale', tuple_assignment_609293_613088)
        
        # Assigning a Name to a Name (line 1703):
        # Getting the type of 'tuple_assignment_609294' (line 1703)
        tuple_assignment_609294_613089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1703, 12), 'tuple_assignment_609294')
        # Assigning a type to the variable 'goodargs' (line 1703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1703, 19), 'goodargs', tuple_assignment_609294_613089)
        
        # Call to place(...): (line 1704)
        # Processing the call arguments (line 1704)
        # Getting the type of 'output' (line 1704)
        output_613091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 18), 'output', False)
        # Getting the type of 'cond' (line 1704)
        cond_613092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 26), 'cond', False)
        
        # Call to _logpdf(...): (line 1704)
        # Getting the type of 'goodargs' (line 1704)
        goodargs_613095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 46), 'goodargs', False)
        # Processing the call keyword arguments (line 1704)
        kwargs_613096 = {}
        # Getting the type of 'self' (line 1704)
        self_613093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 32), 'self', False)
        # Obtaining the member '_logpdf' of a type (line 1704)
        _logpdf_613094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1704, 32), self_613093, '_logpdf')
        # Calling _logpdf(args, kwargs) (line 1704)
        _logpdf_call_result_613097 = invoke(stypy.reporting.localization.Localization(__file__, 1704, 32), _logpdf_613094, *[goodargs_613095], **kwargs_613096)
        
        
        # Call to log(...): (line 1704)
        # Processing the call arguments (line 1704)
        # Getting the type of 'scale' (line 1704)
        scale_613099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 62), 'scale', False)
        # Processing the call keyword arguments (line 1704)
        kwargs_613100 = {}
        # Getting the type of 'log' (line 1704)
        log_613098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 58), 'log', False)
        # Calling log(args, kwargs) (line 1704)
        log_call_result_613101 = invoke(stypy.reporting.localization.Localization(__file__, 1704, 58), log_613098, *[scale_613099], **kwargs_613100)
        
        # Applying the binary operator '-' (line 1704)
        result_sub_613102 = python_operator(stypy.reporting.localization.Localization(__file__, 1704, 32), '-', _logpdf_call_result_613097, log_call_result_613101)
        
        # Processing the call keyword arguments (line 1704)
        kwargs_613103 = {}
        # Getting the type of 'place' (line 1704)
        place_613090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1704, 12), 'place', False)
        # Calling place(args, kwargs) (line 1704)
        place_call_result_613104 = invoke(stypy.reporting.localization.Localization(__file__, 1704, 12), place_613090, *[output_613091, cond_613092, result_sub_613102], **kwargs_613103)
        
        # SSA join for if statement (line 1701)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 1705)
        output_613105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1705, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 1705)
        ndim_613106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1705, 11), output_613105, 'ndim')
        int_613107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1705, 26), 'int')
        # Applying the binary operator '==' (line 1705)
        result_eq_613108 = python_operator(stypy.reporting.localization.Localization(__file__, 1705, 11), '==', ndim_613106, int_613107)
        
        # Testing the type of an if condition (line 1705)
        if_condition_613109 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1705, 8), result_eq_613108)
        # Assigning a type to the variable 'if_condition_613109' (line 1705)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1705, 8), 'if_condition_613109', if_condition_613109)
        # SSA begins for if statement (line 1705)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1706)
        tuple_613110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1706, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1706)
        
        # Getting the type of 'output' (line 1706)
        output_613111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1706, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 1706)
        getitem___613112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1706, 19), output_613111, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1706)
        subscript_call_result_613113 = invoke(stypy.reporting.localization.Localization(__file__, 1706, 19), getitem___613112, tuple_613110)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1706)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1706, 12), 'stypy_return_type', subscript_call_result_613113)
        # SSA join for if statement (line 1705)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 1707)
        output_613114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1707, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 1707)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1707, 8), 'stypy_return_type', output_613114)
        
        # ################# End of 'logpdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logpdf' in the type store
        # Getting the type of 'stypy_return_type' (line 1666)
        stypy_return_type_613115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1666, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_613115)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logpdf'
        return stypy_return_type_613115


    @norecursion
    def cdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'cdf'
        module_type_store = module_type_store.open_function_context('cdf', 1709, 4, False)
        # Assigning a type to the variable 'self' (line 1710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1710, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.cdf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.cdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.cdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.cdf.__dict__.__setitem__('stypy_function_name', 'rv_continuous.cdf')
        rv_continuous.cdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous.cdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.cdf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.cdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.cdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.cdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.cdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.cdf', ['x'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'cdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'cdf(...)' code ##################

        str_613116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1730, (-1)), 'str', '\n        Cumulative distribution function of the given RV.\n\n        Parameters\n        ----------\n        x : array_like\n            quantiles\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        cdf : ndarray\n            Cumulative distribution function evaluated at `x`\n\n        ')
        
        # Assigning a Call to a Tuple (line 1731):
        
        # Assigning a Subscript to a Name (line 1731):
        
        # Obtaining the type of the subscript
        int_613117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1731, 8), 'int')
        
        # Call to _parse_args(...): (line 1731)
        # Getting the type of 'args' (line 1731)
        args_613120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 45), 'args', False)
        # Processing the call keyword arguments (line 1731)
        # Getting the type of 'kwds' (line 1731)
        kwds_613121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 53), 'kwds', False)
        kwargs_613122 = {'kwds_613121': kwds_613121}
        # Getting the type of 'self' (line 1731)
        self_613118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1731)
        _parse_args_613119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1731, 27), self_613118, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1731)
        _parse_args_call_result_613123 = invoke(stypy.reporting.localization.Localization(__file__, 1731, 27), _parse_args_613119, *[args_613120], **kwargs_613122)
        
        # Obtaining the member '__getitem__' of a type (line 1731)
        getitem___613124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1731, 8), _parse_args_call_result_613123, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1731)
        subscript_call_result_613125 = invoke(stypy.reporting.localization.Localization(__file__, 1731, 8), getitem___613124, int_613117)
        
        # Assigning a type to the variable 'tuple_var_assignment_609295' (line 1731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'tuple_var_assignment_609295', subscript_call_result_613125)
        
        # Assigning a Subscript to a Name (line 1731):
        
        # Obtaining the type of the subscript
        int_613126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1731, 8), 'int')
        
        # Call to _parse_args(...): (line 1731)
        # Getting the type of 'args' (line 1731)
        args_613129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 45), 'args', False)
        # Processing the call keyword arguments (line 1731)
        # Getting the type of 'kwds' (line 1731)
        kwds_613130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 53), 'kwds', False)
        kwargs_613131 = {'kwds_613130': kwds_613130}
        # Getting the type of 'self' (line 1731)
        self_613127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1731)
        _parse_args_613128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1731, 27), self_613127, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1731)
        _parse_args_call_result_613132 = invoke(stypy.reporting.localization.Localization(__file__, 1731, 27), _parse_args_613128, *[args_613129], **kwargs_613131)
        
        # Obtaining the member '__getitem__' of a type (line 1731)
        getitem___613133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1731, 8), _parse_args_call_result_613132, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1731)
        subscript_call_result_613134 = invoke(stypy.reporting.localization.Localization(__file__, 1731, 8), getitem___613133, int_613126)
        
        # Assigning a type to the variable 'tuple_var_assignment_609296' (line 1731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'tuple_var_assignment_609296', subscript_call_result_613134)
        
        # Assigning a Subscript to a Name (line 1731):
        
        # Obtaining the type of the subscript
        int_613135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1731, 8), 'int')
        
        # Call to _parse_args(...): (line 1731)
        # Getting the type of 'args' (line 1731)
        args_613138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 45), 'args', False)
        # Processing the call keyword arguments (line 1731)
        # Getting the type of 'kwds' (line 1731)
        kwds_613139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 53), 'kwds', False)
        kwargs_613140 = {'kwds_613139': kwds_613139}
        # Getting the type of 'self' (line 1731)
        self_613136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1731)
        _parse_args_613137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1731, 27), self_613136, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1731)
        _parse_args_call_result_613141 = invoke(stypy.reporting.localization.Localization(__file__, 1731, 27), _parse_args_613137, *[args_613138], **kwargs_613140)
        
        # Obtaining the member '__getitem__' of a type (line 1731)
        getitem___613142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1731, 8), _parse_args_call_result_613141, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1731)
        subscript_call_result_613143 = invoke(stypy.reporting.localization.Localization(__file__, 1731, 8), getitem___613142, int_613135)
        
        # Assigning a type to the variable 'tuple_var_assignment_609297' (line 1731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'tuple_var_assignment_609297', subscript_call_result_613143)
        
        # Assigning a Name to a Name (line 1731):
        # Getting the type of 'tuple_var_assignment_609295' (line 1731)
        tuple_var_assignment_609295_613144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'tuple_var_assignment_609295')
        # Assigning a type to the variable 'args' (line 1731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'args', tuple_var_assignment_609295_613144)
        
        # Assigning a Name to a Name (line 1731):
        # Getting the type of 'tuple_var_assignment_609296' (line 1731)
        tuple_var_assignment_609296_613145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'tuple_var_assignment_609296')
        # Assigning a type to the variable 'loc' (line 1731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 14), 'loc', tuple_var_assignment_609296_613145)
        
        # Assigning a Name to a Name (line 1731):
        # Getting the type of 'tuple_var_assignment_609297' (line 1731)
        tuple_var_assignment_609297_613146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1731, 8), 'tuple_var_assignment_609297')
        # Assigning a type to the variable 'scale' (line 1731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1731, 19), 'scale', tuple_var_assignment_609297_613146)
        
        # Assigning a Call to a Tuple (line 1732):
        
        # Assigning a Subscript to a Name (line 1732):
        
        # Obtaining the type of the subscript
        int_613147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1732, 8), 'int')
        
        # Call to map(...): (line 1732)
        # Processing the call arguments (line 1732)
        # Getting the type of 'asarray' (line 1732)
        asarray_613149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1732)
        tuple_613150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1732, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1732)
        # Adding element type (line 1732)
        # Getting the type of 'x' (line 1732)
        x_613151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1732, 38), tuple_613150, x_613151)
        # Adding element type (line 1732)
        # Getting the type of 'loc' (line 1732)
        loc_613152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1732, 38), tuple_613150, loc_613152)
        # Adding element type (line 1732)
        # Getting the type of 'scale' (line 1732)
        scale_613153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1732, 38), tuple_613150, scale_613153)
        
        # Processing the call keyword arguments (line 1732)
        kwargs_613154 = {}
        # Getting the type of 'map' (line 1732)
        map_613148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 24), 'map', False)
        # Calling map(args, kwargs) (line 1732)
        map_call_result_613155 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 24), map_613148, *[asarray_613149, tuple_613150], **kwargs_613154)
        
        # Obtaining the member '__getitem__' of a type (line 1732)
        getitem___613156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1732, 8), map_call_result_613155, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1732)
        subscript_call_result_613157 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 8), getitem___613156, int_613147)
        
        # Assigning a type to the variable 'tuple_var_assignment_609298' (line 1732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 8), 'tuple_var_assignment_609298', subscript_call_result_613157)
        
        # Assigning a Subscript to a Name (line 1732):
        
        # Obtaining the type of the subscript
        int_613158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1732, 8), 'int')
        
        # Call to map(...): (line 1732)
        # Processing the call arguments (line 1732)
        # Getting the type of 'asarray' (line 1732)
        asarray_613160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1732)
        tuple_613161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1732, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1732)
        # Adding element type (line 1732)
        # Getting the type of 'x' (line 1732)
        x_613162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1732, 38), tuple_613161, x_613162)
        # Adding element type (line 1732)
        # Getting the type of 'loc' (line 1732)
        loc_613163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1732, 38), tuple_613161, loc_613163)
        # Adding element type (line 1732)
        # Getting the type of 'scale' (line 1732)
        scale_613164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1732, 38), tuple_613161, scale_613164)
        
        # Processing the call keyword arguments (line 1732)
        kwargs_613165 = {}
        # Getting the type of 'map' (line 1732)
        map_613159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 24), 'map', False)
        # Calling map(args, kwargs) (line 1732)
        map_call_result_613166 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 24), map_613159, *[asarray_613160, tuple_613161], **kwargs_613165)
        
        # Obtaining the member '__getitem__' of a type (line 1732)
        getitem___613167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1732, 8), map_call_result_613166, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1732)
        subscript_call_result_613168 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 8), getitem___613167, int_613158)
        
        # Assigning a type to the variable 'tuple_var_assignment_609299' (line 1732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 8), 'tuple_var_assignment_609299', subscript_call_result_613168)
        
        # Assigning a Subscript to a Name (line 1732):
        
        # Obtaining the type of the subscript
        int_613169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1732, 8), 'int')
        
        # Call to map(...): (line 1732)
        # Processing the call arguments (line 1732)
        # Getting the type of 'asarray' (line 1732)
        asarray_613171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1732)
        tuple_613172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1732, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1732)
        # Adding element type (line 1732)
        # Getting the type of 'x' (line 1732)
        x_613173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1732, 38), tuple_613172, x_613173)
        # Adding element type (line 1732)
        # Getting the type of 'loc' (line 1732)
        loc_613174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1732, 38), tuple_613172, loc_613174)
        # Adding element type (line 1732)
        # Getting the type of 'scale' (line 1732)
        scale_613175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1732, 38), tuple_613172, scale_613175)
        
        # Processing the call keyword arguments (line 1732)
        kwargs_613176 = {}
        # Getting the type of 'map' (line 1732)
        map_613170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 24), 'map', False)
        # Calling map(args, kwargs) (line 1732)
        map_call_result_613177 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 24), map_613170, *[asarray_613171, tuple_613172], **kwargs_613176)
        
        # Obtaining the member '__getitem__' of a type (line 1732)
        getitem___613178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1732, 8), map_call_result_613177, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1732)
        subscript_call_result_613179 = invoke(stypy.reporting.localization.Localization(__file__, 1732, 8), getitem___613178, int_613169)
        
        # Assigning a type to the variable 'tuple_var_assignment_609300' (line 1732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 8), 'tuple_var_assignment_609300', subscript_call_result_613179)
        
        # Assigning a Name to a Name (line 1732):
        # Getting the type of 'tuple_var_assignment_609298' (line 1732)
        tuple_var_assignment_609298_613180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 8), 'tuple_var_assignment_609298')
        # Assigning a type to the variable 'x' (line 1732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 8), 'x', tuple_var_assignment_609298_613180)
        
        # Assigning a Name to a Name (line 1732):
        # Getting the type of 'tuple_var_assignment_609299' (line 1732)
        tuple_var_assignment_609299_613181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 8), 'tuple_var_assignment_609299')
        # Assigning a type to the variable 'loc' (line 1732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 11), 'loc', tuple_var_assignment_609299_613181)
        
        # Assigning a Name to a Name (line 1732):
        # Getting the type of 'tuple_var_assignment_609300' (line 1732)
        tuple_var_assignment_609300_613182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1732, 8), 'tuple_var_assignment_609300')
        # Assigning a type to the variable 'scale' (line 1732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1732, 16), 'scale', tuple_var_assignment_609300_613182)
        
        # Assigning a Call to a Name (line 1733):
        
        # Assigning a Call to a Name (line 1733):
        
        # Call to tuple(...): (line 1733)
        # Processing the call arguments (line 1733)
        
        # Call to map(...): (line 1733)
        # Processing the call arguments (line 1733)
        # Getting the type of 'asarray' (line 1733)
        asarray_613185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 25), 'asarray', False)
        # Getting the type of 'args' (line 1733)
        args_613186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 34), 'args', False)
        # Processing the call keyword arguments (line 1733)
        kwargs_613187 = {}
        # Getting the type of 'map' (line 1733)
        map_613184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 21), 'map', False)
        # Calling map(args, kwargs) (line 1733)
        map_call_result_613188 = invoke(stypy.reporting.localization.Localization(__file__, 1733, 21), map_613184, *[asarray_613185, args_613186], **kwargs_613187)
        
        # Processing the call keyword arguments (line 1733)
        kwargs_613189 = {}
        # Getting the type of 'tuple' (line 1733)
        tuple_613183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1733, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1733)
        tuple_call_result_613190 = invoke(stypy.reporting.localization.Localization(__file__, 1733, 15), tuple_613183, *[map_call_result_613188], **kwargs_613189)
        
        # Assigning a type to the variable 'args' (line 1733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1733, 8), 'args', tuple_call_result_613190)
        
        # Assigning a Call to a Name (line 1734):
        
        # Assigning a Call to a Name (line 1734):
        
        # Call to find_common_type(...): (line 1734)
        # Processing the call arguments (line 1734)
        
        # Obtaining an instance of the builtin type 'list' (line 1734)
        list_613193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1734, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1734)
        # Adding element type (line 1734)
        # Getting the type of 'x' (line 1734)
        x_613194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 36), 'x', False)
        # Obtaining the member 'dtype' of a type (line 1734)
        dtype_613195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1734, 36), x_613194, 'dtype')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1734, 35), list_613193, dtype_613195)
        # Adding element type (line 1734)
        # Getting the type of 'np' (line 1734)
        np_613196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 45), 'np', False)
        # Obtaining the member 'float64' of a type (line 1734)
        float64_613197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1734, 45), np_613196, 'float64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1734, 35), list_613193, float64_613197)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1734)
        list_613198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1734, 58), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1734)
        
        # Processing the call keyword arguments (line 1734)
        kwargs_613199 = {}
        # Getting the type of 'np' (line 1734)
        np_613191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1734, 15), 'np', False)
        # Obtaining the member 'find_common_type' of a type (line 1734)
        find_common_type_613192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1734, 15), np_613191, 'find_common_type')
        # Calling find_common_type(args, kwargs) (line 1734)
        find_common_type_call_result_613200 = invoke(stypy.reporting.localization.Localization(__file__, 1734, 15), find_common_type_613192, *[list_613193, list_613198], **kwargs_613199)
        
        # Assigning a type to the variable 'dtyp' (line 1734)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1734, 8), 'dtyp', find_common_type_call_result_613200)
        
        # Assigning a Call to a Name (line 1735):
        
        # Assigning a Call to a Name (line 1735):
        
        # Call to asarray(...): (line 1735)
        # Processing the call arguments (line 1735)
        # Getting the type of 'x' (line 1735)
        x_613203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 24), 'x', False)
        # Getting the type of 'loc' (line 1735)
        loc_613204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 28), 'loc', False)
        # Applying the binary operator '-' (line 1735)
        result_sub_613205 = python_operator(stypy.reporting.localization.Localization(__file__, 1735, 24), '-', x_613203, loc_613204)
        
        # Getting the type of 'scale' (line 1735)
        scale_613206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 33), 'scale', False)
        # Applying the binary operator 'div' (line 1735)
        result_div_613207 = python_operator(stypy.reporting.localization.Localization(__file__, 1735, 23), 'div', result_sub_613205, scale_613206)
        
        # Processing the call keyword arguments (line 1735)
        # Getting the type of 'dtyp' (line 1735)
        dtyp_613208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 46), 'dtyp', False)
        keyword_613209 = dtyp_613208
        kwargs_613210 = {'dtype': keyword_613209}
        # Getting the type of 'np' (line 1735)
        np_613201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1735, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1735)
        asarray_613202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1735, 12), np_613201, 'asarray')
        # Calling asarray(args, kwargs) (line 1735)
        asarray_call_result_613211 = invoke(stypy.reporting.localization.Localization(__file__, 1735, 12), asarray_613202, *[result_div_613207], **kwargs_613210)
        
        # Assigning a type to the variable 'x' (line 1735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1735, 8), 'x', asarray_call_result_613211)
        
        # Assigning a BinOp to a Name (line 1736):
        
        # Assigning a BinOp to a Name (line 1736):
        
        # Call to _argcheck(...): (line 1736)
        # Getting the type of 'args' (line 1736)
        args_613214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 32), 'args', False)
        # Processing the call keyword arguments (line 1736)
        kwargs_613215 = {}
        # Getting the type of 'self' (line 1736)
        self_613212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1736)
        _argcheck_613213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1736, 16), self_613212, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1736)
        _argcheck_call_result_613216 = invoke(stypy.reporting.localization.Localization(__file__, 1736, 16), _argcheck_613213, *[args_613214], **kwargs_613215)
        
        
        # Getting the type of 'scale' (line 1736)
        scale_613217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1736, 41), 'scale')
        int_613218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1736, 49), 'int')
        # Applying the binary operator '>' (line 1736)
        result_gt_613219 = python_operator(stypy.reporting.localization.Localization(__file__, 1736, 41), '>', scale_613217, int_613218)
        
        # Applying the binary operator '&' (line 1736)
        result_and__613220 = python_operator(stypy.reporting.localization.Localization(__file__, 1736, 16), '&', _argcheck_call_result_613216, result_gt_613219)
        
        # Assigning a type to the variable 'cond0' (line 1736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1736, 8), 'cond0', result_and__613220)
        
        # Assigning a BinOp to a Name (line 1737):
        
        # Assigning a BinOp to a Name (line 1737):
        
        # Call to _open_support_mask(...): (line 1737)
        # Processing the call arguments (line 1737)
        # Getting the type of 'x' (line 1737)
        x_613223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 40), 'x', False)
        # Processing the call keyword arguments (line 1737)
        kwargs_613224 = {}
        # Getting the type of 'self' (line 1737)
        self_613221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 16), 'self', False)
        # Obtaining the member '_open_support_mask' of a type (line 1737)
        _open_support_mask_613222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1737, 16), self_613221, '_open_support_mask')
        # Calling _open_support_mask(args, kwargs) (line 1737)
        _open_support_mask_call_result_613225 = invoke(stypy.reporting.localization.Localization(__file__, 1737, 16), _open_support_mask_613222, *[x_613223], **kwargs_613224)
        
        
        # Getting the type of 'scale' (line 1737)
        scale_613226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1737, 46), 'scale')
        int_613227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1737, 54), 'int')
        # Applying the binary operator '>' (line 1737)
        result_gt_613228 = python_operator(stypy.reporting.localization.Localization(__file__, 1737, 46), '>', scale_613226, int_613227)
        
        # Applying the binary operator '&' (line 1737)
        result_and__613229 = python_operator(stypy.reporting.localization.Localization(__file__, 1737, 16), '&', _open_support_mask_call_result_613225, result_gt_613228)
        
        # Assigning a type to the variable 'cond1' (line 1737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1737, 8), 'cond1', result_and__613229)
        
        # Assigning a BinOp to a Name (line 1738):
        
        # Assigning a BinOp to a Name (line 1738):
        
        # Getting the type of 'x' (line 1738)
        x_613230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1738, 17), 'x')
        # Getting the type of 'self' (line 1738)
        self_613231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1738, 22), 'self')
        # Obtaining the member 'b' of a type (line 1738)
        b_613232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1738, 22), self_613231, 'b')
        # Applying the binary operator '>=' (line 1738)
        result_ge_613233 = python_operator(stypy.reporting.localization.Localization(__file__, 1738, 17), '>=', x_613230, b_613232)
        
        # Getting the type of 'cond0' (line 1738)
        cond0_613234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1738, 32), 'cond0')
        # Applying the binary operator '&' (line 1738)
        result_and__613235 = python_operator(stypy.reporting.localization.Localization(__file__, 1738, 16), '&', result_ge_613233, cond0_613234)
        
        # Assigning a type to the variable 'cond2' (line 1738)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1738, 8), 'cond2', result_and__613235)
        
        # Assigning a BinOp to a Name (line 1739):
        
        # Assigning a BinOp to a Name (line 1739):
        # Getting the type of 'cond0' (line 1739)
        cond0_613236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1739, 15), 'cond0')
        # Getting the type of 'cond1' (line 1739)
        cond1_613237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1739, 23), 'cond1')
        # Applying the binary operator '&' (line 1739)
        result_and__613238 = python_operator(stypy.reporting.localization.Localization(__file__, 1739, 15), '&', cond0_613236, cond1_613237)
        
        # Assigning a type to the variable 'cond' (line 1739)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1739, 8), 'cond', result_and__613238)
        
        # Assigning a Call to a Name (line 1740):
        
        # Assigning a Call to a Name (line 1740):
        
        # Call to zeros(...): (line 1740)
        # Processing the call arguments (line 1740)
        
        # Call to shape(...): (line 1740)
        # Processing the call arguments (line 1740)
        # Getting the type of 'cond' (line 1740)
        cond_613241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 29), 'cond', False)
        # Processing the call keyword arguments (line 1740)
        kwargs_613242 = {}
        # Getting the type of 'shape' (line 1740)
        shape_613240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 1740)
        shape_call_result_613243 = invoke(stypy.reporting.localization.Localization(__file__, 1740, 23), shape_613240, *[cond_613241], **kwargs_613242)
        
        # Getting the type of 'dtyp' (line 1740)
        dtyp_613244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 36), 'dtyp', False)
        # Processing the call keyword arguments (line 1740)
        kwargs_613245 = {}
        # Getting the type of 'zeros' (line 1740)
        zeros_613239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1740, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 1740)
        zeros_call_result_613246 = invoke(stypy.reporting.localization.Localization(__file__, 1740, 17), zeros_613239, *[shape_call_result_613243, dtyp_613244], **kwargs_613245)
        
        # Assigning a type to the variable 'output' (line 1740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1740, 8), 'output', zeros_call_result_613246)
        
        # Call to place(...): (line 1741)
        # Processing the call arguments (line 1741)
        # Getting the type of 'output' (line 1741)
        output_613248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 14), 'output', False)
        int_613249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1741, 23), 'int')
        # Getting the type of 'cond0' (line 1741)
        cond0_613250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 25), 'cond0', False)
        # Applying the binary operator '-' (line 1741)
        result_sub_613251 = python_operator(stypy.reporting.localization.Localization(__file__, 1741, 23), '-', int_613249, cond0_613250)
        
        
        # Call to isnan(...): (line 1741)
        # Processing the call arguments (line 1741)
        # Getting the type of 'x' (line 1741)
        x_613254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 41), 'x', False)
        # Processing the call keyword arguments (line 1741)
        kwargs_613255 = {}
        # Getting the type of 'np' (line 1741)
        np_613252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 32), 'np', False)
        # Obtaining the member 'isnan' of a type (line 1741)
        isnan_613253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1741, 32), np_613252, 'isnan')
        # Calling isnan(args, kwargs) (line 1741)
        isnan_call_result_613256 = invoke(stypy.reporting.localization.Localization(__file__, 1741, 32), isnan_613253, *[x_613254], **kwargs_613255)
        
        # Applying the binary operator '+' (line 1741)
        result_add_613257 = python_operator(stypy.reporting.localization.Localization(__file__, 1741, 22), '+', result_sub_613251, isnan_call_result_613256)
        
        # Getting the type of 'self' (line 1741)
        self_613258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 45), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1741)
        badvalue_613259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1741, 45), self_613258, 'badvalue')
        # Processing the call keyword arguments (line 1741)
        kwargs_613260 = {}
        # Getting the type of 'place' (line 1741)
        place_613247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1741, 8), 'place', False)
        # Calling place(args, kwargs) (line 1741)
        place_call_result_613261 = invoke(stypy.reporting.localization.Localization(__file__, 1741, 8), place_613247, *[output_613248, result_add_613257, badvalue_613259], **kwargs_613260)
        
        
        # Call to place(...): (line 1742)
        # Processing the call arguments (line 1742)
        # Getting the type of 'output' (line 1742)
        output_613263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 14), 'output', False)
        # Getting the type of 'cond2' (line 1742)
        cond2_613264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 22), 'cond2', False)
        float_613265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1742, 29), 'float')
        # Processing the call keyword arguments (line 1742)
        kwargs_613266 = {}
        # Getting the type of 'place' (line 1742)
        place_613262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1742, 8), 'place', False)
        # Calling place(args, kwargs) (line 1742)
        place_call_result_613267 = invoke(stypy.reporting.localization.Localization(__file__, 1742, 8), place_613262, *[output_613263, cond2_613264, float_613265], **kwargs_613266)
        
        
        
        # Call to any(...): (line 1743)
        # Processing the call arguments (line 1743)
        # Getting the type of 'cond' (line 1743)
        cond_613270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1743, 18), 'cond', False)
        # Processing the call keyword arguments (line 1743)
        kwargs_613271 = {}
        # Getting the type of 'np' (line 1743)
        np_613268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1743, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1743)
        any_613269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1743, 11), np_613268, 'any')
        # Calling any(args, kwargs) (line 1743)
        any_call_result_613272 = invoke(stypy.reporting.localization.Localization(__file__, 1743, 11), any_613269, *[cond_613270], **kwargs_613271)
        
        # Testing the type of an if condition (line 1743)
        if_condition_613273 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1743, 8), any_call_result_613272)
        # Assigning a type to the variable 'if_condition_613273' (line 1743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1743, 8), 'if_condition_613273', if_condition_613273)
        # SSA begins for if statement (line 1743)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1744):
        
        # Assigning a Call to a Name (line 1744):
        
        # Call to argsreduce(...): (line 1744)
        # Processing the call arguments (line 1744)
        # Getting the type of 'cond' (line 1744)
        cond_613275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1744)
        tuple_613276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1744, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1744)
        # Adding element type (line 1744)
        # Getting the type of 'x' (line 1744)
        x_613277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 43), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1744, 43), tuple_613276, x_613277)
        
        # Getting the type of 'args' (line 1744)
        args_613278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 47), 'args', False)
        # Applying the binary operator '+' (line 1744)
        result_add_613279 = python_operator(stypy.reporting.localization.Localization(__file__, 1744, 42), '+', tuple_613276, args_613278)
        
        # Processing the call keyword arguments (line 1744)
        kwargs_613280 = {}
        # Getting the type of 'argsreduce' (line 1744)
        argsreduce_613274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1744, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1744)
        argsreduce_call_result_613281 = invoke(stypy.reporting.localization.Localization(__file__, 1744, 23), argsreduce_613274, *[cond_613275, result_add_613279], **kwargs_613280)
        
        # Assigning a type to the variable 'goodargs' (line 1744)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1744, 12), 'goodargs', argsreduce_call_result_613281)
        
        # Call to place(...): (line 1745)
        # Processing the call arguments (line 1745)
        # Getting the type of 'output' (line 1745)
        output_613283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 18), 'output', False)
        # Getting the type of 'cond' (line 1745)
        cond_613284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 26), 'cond', False)
        
        # Call to _cdf(...): (line 1745)
        # Getting the type of 'goodargs' (line 1745)
        goodargs_613287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 43), 'goodargs', False)
        # Processing the call keyword arguments (line 1745)
        kwargs_613288 = {}
        # Getting the type of 'self' (line 1745)
        self_613285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 32), 'self', False)
        # Obtaining the member '_cdf' of a type (line 1745)
        _cdf_613286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1745, 32), self_613285, '_cdf')
        # Calling _cdf(args, kwargs) (line 1745)
        _cdf_call_result_613289 = invoke(stypy.reporting.localization.Localization(__file__, 1745, 32), _cdf_613286, *[goodargs_613287], **kwargs_613288)
        
        # Processing the call keyword arguments (line 1745)
        kwargs_613290 = {}
        # Getting the type of 'place' (line 1745)
        place_613282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1745, 12), 'place', False)
        # Calling place(args, kwargs) (line 1745)
        place_call_result_613291 = invoke(stypy.reporting.localization.Localization(__file__, 1745, 12), place_613282, *[output_613283, cond_613284, _cdf_call_result_613289], **kwargs_613290)
        
        # SSA join for if statement (line 1743)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 1746)
        output_613292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1746, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 1746)
        ndim_613293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1746, 11), output_613292, 'ndim')
        int_613294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1746, 26), 'int')
        # Applying the binary operator '==' (line 1746)
        result_eq_613295 = python_operator(stypy.reporting.localization.Localization(__file__, 1746, 11), '==', ndim_613293, int_613294)
        
        # Testing the type of an if condition (line 1746)
        if_condition_613296 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1746, 8), result_eq_613295)
        # Assigning a type to the variable 'if_condition_613296' (line 1746)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1746, 8), 'if_condition_613296', if_condition_613296)
        # SSA begins for if statement (line 1746)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1747)
        tuple_613297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1747, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1747)
        
        # Getting the type of 'output' (line 1747)
        output_613298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1747, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 1747)
        getitem___613299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1747, 19), output_613298, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1747)
        subscript_call_result_613300 = invoke(stypy.reporting.localization.Localization(__file__, 1747, 19), getitem___613299, tuple_613297)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1747, 12), 'stypy_return_type', subscript_call_result_613300)
        # SSA join for if statement (line 1746)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 1748)
        output_613301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1748, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 1748)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1748, 8), 'stypy_return_type', output_613301)
        
        # ################# End of 'cdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'cdf' in the type store
        # Getting the type of 'stypy_return_type' (line 1709)
        stypy_return_type_613302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1709, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_613302)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'cdf'
        return stypy_return_type_613302


    @norecursion
    def logcdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logcdf'
        module_type_store = module_type_store.open_function_context('logcdf', 1750, 4, False)
        # Assigning a type to the variable 'self' (line 1751)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1751, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.logcdf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.logcdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.logcdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.logcdf.__dict__.__setitem__('stypy_function_name', 'rv_continuous.logcdf')
        rv_continuous.logcdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous.logcdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.logcdf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.logcdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.logcdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.logcdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.logcdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.logcdf', ['x'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logcdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logcdf(...)' code ##################

        str_613303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1771, (-1)), 'str', '\n        Log of the cumulative distribution function at x of the given RV.\n\n        Parameters\n        ----------\n        x : array_like\n            quantiles\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        logcdf : array_like\n            Log of the cumulative distribution function evaluated at x\n\n        ')
        
        # Assigning a Call to a Tuple (line 1772):
        
        # Assigning a Subscript to a Name (line 1772):
        
        # Obtaining the type of the subscript
        int_613304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1772, 8), 'int')
        
        # Call to _parse_args(...): (line 1772)
        # Getting the type of 'args' (line 1772)
        args_613307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 45), 'args', False)
        # Processing the call keyword arguments (line 1772)
        # Getting the type of 'kwds' (line 1772)
        kwds_613308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 53), 'kwds', False)
        kwargs_613309 = {'kwds_613308': kwds_613308}
        # Getting the type of 'self' (line 1772)
        self_613305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1772)
        _parse_args_613306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1772, 27), self_613305, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1772)
        _parse_args_call_result_613310 = invoke(stypy.reporting.localization.Localization(__file__, 1772, 27), _parse_args_613306, *[args_613307], **kwargs_613309)
        
        # Obtaining the member '__getitem__' of a type (line 1772)
        getitem___613311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1772, 8), _parse_args_call_result_613310, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1772)
        subscript_call_result_613312 = invoke(stypy.reporting.localization.Localization(__file__, 1772, 8), getitem___613311, int_613304)
        
        # Assigning a type to the variable 'tuple_var_assignment_609301' (line 1772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1772, 8), 'tuple_var_assignment_609301', subscript_call_result_613312)
        
        # Assigning a Subscript to a Name (line 1772):
        
        # Obtaining the type of the subscript
        int_613313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1772, 8), 'int')
        
        # Call to _parse_args(...): (line 1772)
        # Getting the type of 'args' (line 1772)
        args_613316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 45), 'args', False)
        # Processing the call keyword arguments (line 1772)
        # Getting the type of 'kwds' (line 1772)
        kwds_613317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 53), 'kwds', False)
        kwargs_613318 = {'kwds_613317': kwds_613317}
        # Getting the type of 'self' (line 1772)
        self_613314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1772)
        _parse_args_613315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1772, 27), self_613314, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1772)
        _parse_args_call_result_613319 = invoke(stypy.reporting.localization.Localization(__file__, 1772, 27), _parse_args_613315, *[args_613316], **kwargs_613318)
        
        # Obtaining the member '__getitem__' of a type (line 1772)
        getitem___613320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1772, 8), _parse_args_call_result_613319, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1772)
        subscript_call_result_613321 = invoke(stypy.reporting.localization.Localization(__file__, 1772, 8), getitem___613320, int_613313)
        
        # Assigning a type to the variable 'tuple_var_assignment_609302' (line 1772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1772, 8), 'tuple_var_assignment_609302', subscript_call_result_613321)
        
        # Assigning a Subscript to a Name (line 1772):
        
        # Obtaining the type of the subscript
        int_613322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1772, 8), 'int')
        
        # Call to _parse_args(...): (line 1772)
        # Getting the type of 'args' (line 1772)
        args_613325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 45), 'args', False)
        # Processing the call keyword arguments (line 1772)
        # Getting the type of 'kwds' (line 1772)
        kwds_613326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 53), 'kwds', False)
        kwargs_613327 = {'kwds_613326': kwds_613326}
        # Getting the type of 'self' (line 1772)
        self_613323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1772)
        _parse_args_613324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1772, 27), self_613323, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1772)
        _parse_args_call_result_613328 = invoke(stypy.reporting.localization.Localization(__file__, 1772, 27), _parse_args_613324, *[args_613325], **kwargs_613327)
        
        # Obtaining the member '__getitem__' of a type (line 1772)
        getitem___613329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1772, 8), _parse_args_call_result_613328, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1772)
        subscript_call_result_613330 = invoke(stypy.reporting.localization.Localization(__file__, 1772, 8), getitem___613329, int_613322)
        
        # Assigning a type to the variable 'tuple_var_assignment_609303' (line 1772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1772, 8), 'tuple_var_assignment_609303', subscript_call_result_613330)
        
        # Assigning a Name to a Name (line 1772):
        # Getting the type of 'tuple_var_assignment_609301' (line 1772)
        tuple_var_assignment_609301_613331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 8), 'tuple_var_assignment_609301')
        # Assigning a type to the variable 'args' (line 1772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1772, 8), 'args', tuple_var_assignment_609301_613331)
        
        # Assigning a Name to a Name (line 1772):
        # Getting the type of 'tuple_var_assignment_609302' (line 1772)
        tuple_var_assignment_609302_613332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 8), 'tuple_var_assignment_609302')
        # Assigning a type to the variable 'loc' (line 1772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1772, 14), 'loc', tuple_var_assignment_609302_613332)
        
        # Assigning a Name to a Name (line 1772):
        # Getting the type of 'tuple_var_assignment_609303' (line 1772)
        tuple_var_assignment_609303_613333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1772, 8), 'tuple_var_assignment_609303')
        # Assigning a type to the variable 'scale' (line 1772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1772, 19), 'scale', tuple_var_assignment_609303_613333)
        
        # Assigning a Call to a Tuple (line 1773):
        
        # Assigning a Subscript to a Name (line 1773):
        
        # Obtaining the type of the subscript
        int_613334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1773, 8), 'int')
        
        # Call to map(...): (line 1773)
        # Processing the call arguments (line 1773)
        # Getting the type of 'asarray' (line 1773)
        asarray_613336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1773)
        tuple_613337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1773, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1773)
        # Adding element type (line 1773)
        # Getting the type of 'x' (line 1773)
        x_613338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1773, 38), tuple_613337, x_613338)
        # Adding element type (line 1773)
        # Getting the type of 'loc' (line 1773)
        loc_613339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1773, 38), tuple_613337, loc_613339)
        # Adding element type (line 1773)
        # Getting the type of 'scale' (line 1773)
        scale_613340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1773, 38), tuple_613337, scale_613340)
        
        # Processing the call keyword arguments (line 1773)
        kwargs_613341 = {}
        # Getting the type of 'map' (line 1773)
        map_613335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 24), 'map', False)
        # Calling map(args, kwargs) (line 1773)
        map_call_result_613342 = invoke(stypy.reporting.localization.Localization(__file__, 1773, 24), map_613335, *[asarray_613336, tuple_613337], **kwargs_613341)
        
        # Obtaining the member '__getitem__' of a type (line 1773)
        getitem___613343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1773, 8), map_call_result_613342, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1773)
        subscript_call_result_613344 = invoke(stypy.reporting.localization.Localization(__file__, 1773, 8), getitem___613343, int_613334)
        
        # Assigning a type to the variable 'tuple_var_assignment_609304' (line 1773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1773, 8), 'tuple_var_assignment_609304', subscript_call_result_613344)
        
        # Assigning a Subscript to a Name (line 1773):
        
        # Obtaining the type of the subscript
        int_613345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1773, 8), 'int')
        
        # Call to map(...): (line 1773)
        # Processing the call arguments (line 1773)
        # Getting the type of 'asarray' (line 1773)
        asarray_613347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1773)
        tuple_613348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1773, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1773)
        # Adding element type (line 1773)
        # Getting the type of 'x' (line 1773)
        x_613349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1773, 38), tuple_613348, x_613349)
        # Adding element type (line 1773)
        # Getting the type of 'loc' (line 1773)
        loc_613350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1773, 38), tuple_613348, loc_613350)
        # Adding element type (line 1773)
        # Getting the type of 'scale' (line 1773)
        scale_613351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1773, 38), tuple_613348, scale_613351)
        
        # Processing the call keyword arguments (line 1773)
        kwargs_613352 = {}
        # Getting the type of 'map' (line 1773)
        map_613346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 24), 'map', False)
        # Calling map(args, kwargs) (line 1773)
        map_call_result_613353 = invoke(stypy.reporting.localization.Localization(__file__, 1773, 24), map_613346, *[asarray_613347, tuple_613348], **kwargs_613352)
        
        # Obtaining the member '__getitem__' of a type (line 1773)
        getitem___613354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1773, 8), map_call_result_613353, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1773)
        subscript_call_result_613355 = invoke(stypy.reporting.localization.Localization(__file__, 1773, 8), getitem___613354, int_613345)
        
        # Assigning a type to the variable 'tuple_var_assignment_609305' (line 1773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1773, 8), 'tuple_var_assignment_609305', subscript_call_result_613355)
        
        # Assigning a Subscript to a Name (line 1773):
        
        # Obtaining the type of the subscript
        int_613356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1773, 8), 'int')
        
        # Call to map(...): (line 1773)
        # Processing the call arguments (line 1773)
        # Getting the type of 'asarray' (line 1773)
        asarray_613358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1773)
        tuple_613359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1773, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1773)
        # Adding element type (line 1773)
        # Getting the type of 'x' (line 1773)
        x_613360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1773, 38), tuple_613359, x_613360)
        # Adding element type (line 1773)
        # Getting the type of 'loc' (line 1773)
        loc_613361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1773, 38), tuple_613359, loc_613361)
        # Adding element type (line 1773)
        # Getting the type of 'scale' (line 1773)
        scale_613362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1773, 38), tuple_613359, scale_613362)
        
        # Processing the call keyword arguments (line 1773)
        kwargs_613363 = {}
        # Getting the type of 'map' (line 1773)
        map_613357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 24), 'map', False)
        # Calling map(args, kwargs) (line 1773)
        map_call_result_613364 = invoke(stypy.reporting.localization.Localization(__file__, 1773, 24), map_613357, *[asarray_613358, tuple_613359], **kwargs_613363)
        
        # Obtaining the member '__getitem__' of a type (line 1773)
        getitem___613365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1773, 8), map_call_result_613364, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1773)
        subscript_call_result_613366 = invoke(stypy.reporting.localization.Localization(__file__, 1773, 8), getitem___613365, int_613356)
        
        # Assigning a type to the variable 'tuple_var_assignment_609306' (line 1773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1773, 8), 'tuple_var_assignment_609306', subscript_call_result_613366)
        
        # Assigning a Name to a Name (line 1773):
        # Getting the type of 'tuple_var_assignment_609304' (line 1773)
        tuple_var_assignment_609304_613367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 8), 'tuple_var_assignment_609304')
        # Assigning a type to the variable 'x' (line 1773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1773, 8), 'x', tuple_var_assignment_609304_613367)
        
        # Assigning a Name to a Name (line 1773):
        # Getting the type of 'tuple_var_assignment_609305' (line 1773)
        tuple_var_assignment_609305_613368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 8), 'tuple_var_assignment_609305')
        # Assigning a type to the variable 'loc' (line 1773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1773, 11), 'loc', tuple_var_assignment_609305_613368)
        
        # Assigning a Name to a Name (line 1773):
        # Getting the type of 'tuple_var_assignment_609306' (line 1773)
        tuple_var_assignment_609306_613369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1773, 8), 'tuple_var_assignment_609306')
        # Assigning a type to the variable 'scale' (line 1773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1773, 16), 'scale', tuple_var_assignment_609306_613369)
        
        # Assigning a Call to a Name (line 1774):
        
        # Assigning a Call to a Name (line 1774):
        
        # Call to tuple(...): (line 1774)
        # Processing the call arguments (line 1774)
        
        # Call to map(...): (line 1774)
        # Processing the call arguments (line 1774)
        # Getting the type of 'asarray' (line 1774)
        asarray_613372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 25), 'asarray', False)
        # Getting the type of 'args' (line 1774)
        args_613373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 34), 'args', False)
        # Processing the call keyword arguments (line 1774)
        kwargs_613374 = {}
        # Getting the type of 'map' (line 1774)
        map_613371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 21), 'map', False)
        # Calling map(args, kwargs) (line 1774)
        map_call_result_613375 = invoke(stypy.reporting.localization.Localization(__file__, 1774, 21), map_613371, *[asarray_613372, args_613373], **kwargs_613374)
        
        # Processing the call keyword arguments (line 1774)
        kwargs_613376 = {}
        # Getting the type of 'tuple' (line 1774)
        tuple_613370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1774, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1774)
        tuple_call_result_613377 = invoke(stypy.reporting.localization.Localization(__file__, 1774, 15), tuple_613370, *[map_call_result_613375], **kwargs_613376)
        
        # Assigning a type to the variable 'args' (line 1774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1774, 8), 'args', tuple_call_result_613377)
        
        # Assigning a Call to a Name (line 1775):
        
        # Assigning a Call to a Name (line 1775):
        
        # Call to find_common_type(...): (line 1775)
        # Processing the call arguments (line 1775)
        
        # Obtaining an instance of the builtin type 'list' (line 1775)
        list_613380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1775, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1775)
        # Adding element type (line 1775)
        # Getting the type of 'x' (line 1775)
        x_613381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 36), 'x', False)
        # Obtaining the member 'dtype' of a type (line 1775)
        dtype_613382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1775, 36), x_613381, 'dtype')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1775, 35), list_613380, dtype_613382)
        # Adding element type (line 1775)
        # Getting the type of 'np' (line 1775)
        np_613383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 45), 'np', False)
        # Obtaining the member 'float64' of a type (line 1775)
        float64_613384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1775, 45), np_613383, 'float64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1775, 35), list_613380, float64_613384)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1775)
        list_613385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1775, 58), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1775)
        
        # Processing the call keyword arguments (line 1775)
        kwargs_613386 = {}
        # Getting the type of 'np' (line 1775)
        np_613378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1775, 15), 'np', False)
        # Obtaining the member 'find_common_type' of a type (line 1775)
        find_common_type_613379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1775, 15), np_613378, 'find_common_type')
        # Calling find_common_type(args, kwargs) (line 1775)
        find_common_type_call_result_613387 = invoke(stypy.reporting.localization.Localization(__file__, 1775, 15), find_common_type_613379, *[list_613380, list_613385], **kwargs_613386)
        
        # Assigning a type to the variable 'dtyp' (line 1775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1775, 8), 'dtyp', find_common_type_call_result_613387)
        
        # Assigning a Call to a Name (line 1776):
        
        # Assigning a Call to a Name (line 1776):
        
        # Call to asarray(...): (line 1776)
        # Processing the call arguments (line 1776)
        # Getting the type of 'x' (line 1776)
        x_613390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 24), 'x', False)
        # Getting the type of 'loc' (line 1776)
        loc_613391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 28), 'loc', False)
        # Applying the binary operator '-' (line 1776)
        result_sub_613392 = python_operator(stypy.reporting.localization.Localization(__file__, 1776, 24), '-', x_613390, loc_613391)
        
        # Getting the type of 'scale' (line 1776)
        scale_613393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 33), 'scale', False)
        # Applying the binary operator 'div' (line 1776)
        result_div_613394 = python_operator(stypy.reporting.localization.Localization(__file__, 1776, 23), 'div', result_sub_613392, scale_613393)
        
        # Processing the call keyword arguments (line 1776)
        # Getting the type of 'dtyp' (line 1776)
        dtyp_613395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 46), 'dtyp', False)
        keyword_613396 = dtyp_613395
        kwargs_613397 = {'dtype': keyword_613396}
        # Getting the type of 'np' (line 1776)
        np_613388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1776, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1776)
        asarray_613389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1776, 12), np_613388, 'asarray')
        # Calling asarray(args, kwargs) (line 1776)
        asarray_call_result_613398 = invoke(stypy.reporting.localization.Localization(__file__, 1776, 12), asarray_613389, *[result_div_613394], **kwargs_613397)
        
        # Assigning a type to the variable 'x' (line 1776)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1776, 8), 'x', asarray_call_result_613398)
        
        # Assigning a BinOp to a Name (line 1777):
        
        # Assigning a BinOp to a Name (line 1777):
        
        # Call to _argcheck(...): (line 1777)
        # Getting the type of 'args' (line 1777)
        args_613401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 32), 'args', False)
        # Processing the call keyword arguments (line 1777)
        kwargs_613402 = {}
        # Getting the type of 'self' (line 1777)
        self_613399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1777)
        _argcheck_613400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1777, 16), self_613399, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1777)
        _argcheck_call_result_613403 = invoke(stypy.reporting.localization.Localization(__file__, 1777, 16), _argcheck_613400, *[args_613401], **kwargs_613402)
        
        
        # Getting the type of 'scale' (line 1777)
        scale_613404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1777, 41), 'scale')
        int_613405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1777, 49), 'int')
        # Applying the binary operator '>' (line 1777)
        result_gt_613406 = python_operator(stypy.reporting.localization.Localization(__file__, 1777, 41), '>', scale_613404, int_613405)
        
        # Applying the binary operator '&' (line 1777)
        result_and__613407 = python_operator(stypy.reporting.localization.Localization(__file__, 1777, 16), '&', _argcheck_call_result_613403, result_gt_613406)
        
        # Assigning a type to the variable 'cond0' (line 1777)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1777, 8), 'cond0', result_and__613407)
        
        # Assigning a BinOp to a Name (line 1778):
        
        # Assigning a BinOp to a Name (line 1778):
        
        # Call to _open_support_mask(...): (line 1778)
        # Processing the call arguments (line 1778)
        # Getting the type of 'x' (line 1778)
        x_613410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1778, 40), 'x', False)
        # Processing the call keyword arguments (line 1778)
        kwargs_613411 = {}
        # Getting the type of 'self' (line 1778)
        self_613408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1778, 16), 'self', False)
        # Obtaining the member '_open_support_mask' of a type (line 1778)
        _open_support_mask_613409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1778, 16), self_613408, '_open_support_mask')
        # Calling _open_support_mask(args, kwargs) (line 1778)
        _open_support_mask_call_result_613412 = invoke(stypy.reporting.localization.Localization(__file__, 1778, 16), _open_support_mask_613409, *[x_613410], **kwargs_613411)
        
        
        # Getting the type of 'scale' (line 1778)
        scale_613413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1778, 46), 'scale')
        int_613414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1778, 54), 'int')
        # Applying the binary operator '>' (line 1778)
        result_gt_613415 = python_operator(stypy.reporting.localization.Localization(__file__, 1778, 46), '>', scale_613413, int_613414)
        
        # Applying the binary operator '&' (line 1778)
        result_and__613416 = python_operator(stypy.reporting.localization.Localization(__file__, 1778, 16), '&', _open_support_mask_call_result_613412, result_gt_613415)
        
        # Assigning a type to the variable 'cond1' (line 1778)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1778, 8), 'cond1', result_and__613416)
        
        # Assigning a BinOp to a Name (line 1779):
        
        # Assigning a BinOp to a Name (line 1779):
        
        # Getting the type of 'x' (line 1779)
        x_613417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1779, 17), 'x')
        # Getting the type of 'self' (line 1779)
        self_613418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1779, 22), 'self')
        # Obtaining the member 'b' of a type (line 1779)
        b_613419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1779, 22), self_613418, 'b')
        # Applying the binary operator '>=' (line 1779)
        result_ge_613420 = python_operator(stypy.reporting.localization.Localization(__file__, 1779, 17), '>=', x_613417, b_613419)
        
        # Getting the type of 'cond0' (line 1779)
        cond0_613421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1779, 32), 'cond0')
        # Applying the binary operator '&' (line 1779)
        result_and__613422 = python_operator(stypy.reporting.localization.Localization(__file__, 1779, 16), '&', result_ge_613420, cond0_613421)
        
        # Assigning a type to the variable 'cond2' (line 1779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1779, 8), 'cond2', result_and__613422)
        
        # Assigning a BinOp to a Name (line 1780):
        
        # Assigning a BinOp to a Name (line 1780):
        # Getting the type of 'cond0' (line 1780)
        cond0_613423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1780, 15), 'cond0')
        # Getting the type of 'cond1' (line 1780)
        cond1_613424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1780, 23), 'cond1')
        # Applying the binary operator '&' (line 1780)
        result_and__613425 = python_operator(stypy.reporting.localization.Localization(__file__, 1780, 15), '&', cond0_613423, cond1_613424)
        
        # Assigning a type to the variable 'cond' (line 1780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1780, 8), 'cond', result_and__613425)
        
        # Assigning a Call to a Name (line 1781):
        
        # Assigning a Call to a Name (line 1781):
        
        # Call to empty(...): (line 1781)
        # Processing the call arguments (line 1781)
        
        # Call to shape(...): (line 1781)
        # Processing the call arguments (line 1781)
        # Getting the type of 'cond' (line 1781)
        cond_613428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 29), 'cond', False)
        # Processing the call keyword arguments (line 1781)
        kwargs_613429 = {}
        # Getting the type of 'shape' (line 1781)
        shape_613427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 1781)
        shape_call_result_613430 = invoke(stypy.reporting.localization.Localization(__file__, 1781, 23), shape_613427, *[cond_613428], **kwargs_613429)
        
        # Getting the type of 'dtyp' (line 1781)
        dtyp_613431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 36), 'dtyp', False)
        # Processing the call keyword arguments (line 1781)
        kwargs_613432 = {}
        # Getting the type of 'empty' (line 1781)
        empty_613426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1781, 17), 'empty', False)
        # Calling empty(args, kwargs) (line 1781)
        empty_call_result_613433 = invoke(stypy.reporting.localization.Localization(__file__, 1781, 17), empty_613426, *[shape_call_result_613430, dtyp_613431], **kwargs_613432)
        
        # Assigning a type to the variable 'output' (line 1781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1781, 8), 'output', empty_call_result_613433)
        
        # Call to fill(...): (line 1782)
        # Processing the call arguments (line 1782)
        # Getting the type of 'NINF' (line 1782)
        NINF_613436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1782, 20), 'NINF', False)
        # Processing the call keyword arguments (line 1782)
        kwargs_613437 = {}
        # Getting the type of 'output' (line 1782)
        output_613434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1782, 8), 'output', False)
        # Obtaining the member 'fill' of a type (line 1782)
        fill_613435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1782, 8), output_613434, 'fill')
        # Calling fill(args, kwargs) (line 1782)
        fill_call_result_613438 = invoke(stypy.reporting.localization.Localization(__file__, 1782, 8), fill_613435, *[NINF_613436], **kwargs_613437)
        
        
        # Call to place(...): (line 1783)
        # Processing the call arguments (line 1783)
        # Getting the type of 'output' (line 1783)
        output_613440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 14), 'output', False)
        int_613441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1783, 23), 'int')
        # Getting the type of 'cond0' (line 1783)
        cond0_613442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 25), 'cond0', False)
        # Applying the binary operator '-' (line 1783)
        result_sub_613443 = python_operator(stypy.reporting.localization.Localization(__file__, 1783, 23), '-', int_613441, cond0_613442)
        
        
        # Getting the type of 'cond1' (line 1783)
        cond1_613444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 33), 'cond1', False)
        # Getting the type of 'cond1' (line 1783)
        cond1_613445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 42), 'cond1', False)
        # Applying the binary operator '==' (line 1783)
        result_eq_613446 = python_operator(stypy.reporting.localization.Localization(__file__, 1783, 33), '==', cond1_613444, cond1_613445)
        
        # Applying the binary operator '*' (line 1783)
        result_mul_613447 = python_operator(stypy.reporting.localization.Localization(__file__, 1783, 22), '*', result_sub_613443, result_eq_613446)
        
        
        # Call to isnan(...): (line 1783)
        # Processing the call arguments (line 1783)
        # Getting the type of 'x' (line 1783)
        x_613450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 58), 'x', False)
        # Processing the call keyword arguments (line 1783)
        kwargs_613451 = {}
        # Getting the type of 'np' (line 1783)
        np_613448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 49), 'np', False)
        # Obtaining the member 'isnan' of a type (line 1783)
        isnan_613449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1783, 49), np_613448, 'isnan')
        # Calling isnan(args, kwargs) (line 1783)
        isnan_call_result_613452 = invoke(stypy.reporting.localization.Localization(__file__, 1783, 49), isnan_613449, *[x_613450], **kwargs_613451)
        
        # Applying the binary operator '+' (line 1783)
        result_add_613453 = python_operator(stypy.reporting.localization.Localization(__file__, 1783, 22), '+', result_mul_613447, isnan_call_result_613452)
        
        # Getting the type of 'self' (line 1783)
        self_613454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 62), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1783)
        badvalue_613455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1783, 62), self_613454, 'badvalue')
        # Processing the call keyword arguments (line 1783)
        kwargs_613456 = {}
        # Getting the type of 'place' (line 1783)
        place_613439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1783, 8), 'place', False)
        # Calling place(args, kwargs) (line 1783)
        place_call_result_613457 = invoke(stypy.reporting.localization.Localization(__file__, 1783, 8), place_613439, *[output_613440, result_add_613453, badvalue_613455], **kwargs_613456)
        
        
        # Call to place(...): (line 1784)
        # Processing the call arguments (line 1784)
        # Getting the type of 'output' (line 1784)
        output_613459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1784, 14), 'output', False)
        # Getting the type of 'cond2' (line 1784)
        cond2_613460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1784, 22), 'cond2', False)
        float_613461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1784, 29), 'float')
        # Processing the call keyword arguments (line 1784)
        kwargs_613462 = {}
        # Getting the type of 'place' (line 1784)
        place_613458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1784, 8), 'place', False)
        # Calling place(args, kwargs) (line 1784)
        place_call_result_613463 = invoke(stypy.reporting.localization.Localization(__file__, 1784, 8), place_613458, *[output_613459, cond2_613460, float_613461], **kwargs_613462)
        
        
        
        # Call to any(...): (line 1785)
        # Processing the call arguments (line 1785)
        # Getting the type of 'cond' (line 1785)
        cond_613466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 18), 'cond', False)
        # Processing the call keyword arguments (line 1785)
        kwargs_613467 = {}
        # Getting the type of 'np' (line 1785)
        np_613464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1785, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1785)
        any_613465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1785, 11), np_613464, 'any')
        # Calling any(args, kwargs) (line 1785)
        any_call_result_613468 = invoke(stypy.reporting.localization.Localization(__file__, 1785, 11), any_613465, *[cond_613466], **kwargs_613467)
        
        # Testing the type of an if condition (line 1785)
        if_condition_613469 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1785, 8), any_call_result_613468)
        # Assigning a type to the variable 'if_condition_613469' (line 1785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1785, 8), 'if_condition_613469', if_condition_613469)
        # SSA begins for if statement (line 1785)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1786):
        
        # Assigning a Call to a Name (line 1786):
        
        # Call to argsreduce(...): (line 1786)
        # Processing the call arguments (line 1786)
        # Getting the type of 'cond' (line 1786)
        cond_613471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1786)
        tuple_613472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1786, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1786)
        # Adding element type (line 1786)
        # Getting the type of 'x' (line 1786)
        x_613473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 43), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1786, 43), tuple_613472, x_613473)
        
        # Getting the type of 'args' (line 1786)
        args_613474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 47), 'args', False)
        # Applying the binary operator '+' (line 1786)
        result_add_613475 = python_operator(stypy.reporting.localization.Localization(__file__, 1786, 42), '+', tuple_613472, args_613474)
        
        # Processing the call keyword arguments (line 1786)
        kwargs_613476 = {}
        # Getting the type of 'argsreduce' (line 1786)
        argsreduce_613470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1786, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1786)
        argsreduce_call_result_613477 = invoke(stypy.reporting.localization.Localization(__file__, 1786, 23), argsreduce_613470, *[cond_613471, result_add_613475], **kwargs_613476)
        
        # Assigning a type to the variable 'goodargs' (line 1786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1786, 12), 'goodargs', argsreduce_call_result_613477)
        
        # Call to place(...): (line 1787)
        # Processing the call arguments (line 1787)
        # Getting the type of 'output' (line 1787)
        output_613479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 18), 'output', False)
        # Getting the type of 'cond' (line 1787)
        cond_613480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 26), 'cond', False)
        
        # Call to _logcdf(...): (line 1787)
        # Getting the type of 'goodargs' (line 1787)
        goodargs_613483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 46), 'goodargs', False)
        # Processing the call keyword arguments (line 1787)
        kwargs_613484 = {}
        # Getting the type of 'self' (line 1787)
        self_613481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 32), 'self', False)
        # Obtaining the member '_logcdf' of a type (line 1787)
        _logcdf_613482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1787, 32), self_613481, '_logcdf')
        # Calling _logcdf(args, kwargs) (line 1787)
        _logcdf_call_result_613485 = invoke(stypy.reporting.localization.Localization(__file__, 1787, 32), _logcdf_613482, *[goodargs_613483], **kwargs_613484)
        
        # Processing the call keyword arguments (line 1787)
        kwargs_613486 = {}
        # Getting the type of 'place' (line 1787)
        place_613478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1787, 12), 'place', False)
        # Calling place(args, kwargs) (line 1787)
        place_call_result_613487 = invoke(stypy.reporting.localization.Localization(__file__, 1787, 12), place_613478, *[output_613479, cond_613480, _logcdf_call_result_613485], **kwargs_613486)
        
        # SSA join for if statement (line 1785)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 1788)
        output_613488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1788, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 1788)
        ndim_613489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1788, 11), output_613488, 'ndim')
        int_613490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1788, 26), 'int')
        # Applying the binary operator '==' (line 1788)
        result_eq_613491 = python_operator(stypy.reporting.localization.Localization(__file__, 1788, 11), '==', ndim_613489, int_613490)
        
        # Testing the type of an if condition (line 1788)
        if_condition_613492 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1788, 8), result_eq_613491)
        # Assigning a type to the variable 'if_condition_613492' (line 1788)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1788, 8), 'if_condition_613492', if_condition_613492)
        # SSA begins for if statement (line 1788)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1789)
        tuple_613493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1789, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1789)
        
        # Getting the type of 'output' (line 1789)
        output_613494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1789, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 1789)
        getitem___613495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1789, 19), output_613494, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1789)
        subscript_call_result_613496 = invoke(stypy.reporting.localization.Localization(__file__, 1789, 19), getitem___613495, tuple_613493)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1789, 12), 'stypy_return_type', subscript_call_result_613496)
        # SSA join for if statement (line 1788)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 1790)
        output_613497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1790, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 1790)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1790, 8), 'stypy_return_type', output_613497)
        
        # ################# End of 'logcdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logcdf' in the type store
        # Getting the type of 'stypy_return_type' (line 1750)
        stypy_return_type_613498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1750, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_613498)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logcdf'
        return stypy_return_type_613498


    @norecursion
    def sf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'sf'
        module_type_store = module_type_store.open_function_context('sf', 1792, 4, False)
        # Assigning a type to the variable 'self' (line 1793)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1793, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.sf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.sf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.sf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.sf.__dict__.__setitem__('stypy_function_name', 'rv_continuous.sf')
        rv_continuous.sf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous.sf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.sf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.sf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.sf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.sf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.sf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.sf', ['x'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'sf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'sf(...)' code ##################

        str_613499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1813, (-1)), 'str', '\n        Survival function (1 - `cdf`) at x of the given RV.\n\n        Parameters\n        ----------\n        x : array_like\n            quantiles\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        sf : array_like\n            Survival function evaluated at x\n\n        ')
        
        # Assigning a Call to a Tuple (line 1814):
        
        # Assigning a Subscript to a Name (line 1814):
        
        # Obtaining the type of the subscript
        int_613500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1814, 8), 'int')
        
        # Call to _parse_args(...): (line 1814)
        # Getting the type of 'args' (line 1814)
        args_613503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 45), 'args', False)
        # Processing the call keyword arguments (line 1814)
        # Getting the type of 'kwds' (line 1814)
        kwds_613504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 53), 'kwds', False)
        kwargs_613505 = {'kwds_613504': kwds_613504}
        # Getting the type of 'self' (line 1814)
        self_613501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1814)
        _parse_args_613502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1814, 27), self_613501, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1814)
        _parse_args_call_result_613506 = invoke(stypy.reporting.localization.Localization(__file__, 1814, 27), _parse_args_613502, *[args_613503], **kwargs_613505)
        
        # Obtaining the member '__getitem__' of a type (line 1814)
        getitem___613507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1814, 8), _parse_args_call_result_613506, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1814)
        subscript_call_result_613508 = invoke(stypy.reporting.localization.Localization(__file__, 1814, 8), getitem___613507, int_613500)
        
        # Assigning a type to the variable 'tuple_var_assignment_609307' (line 1814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 8), 'tuple_var_assignment_609307', subscript_call_result_613508)
        
        # Assigning a Subscript to a Name (line 1814):
        
        # Obtaining the type of the subscript
        int_613509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1814, 8), 'int')
        
        # Call to _parse_args(...): (line 1814)
        # Getting the type of 'args' (line 1814)
        args_613512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 45), 'args', False)
        # Processing the call keyword arguments (line 1814)
        # Getting the type of 'kwds' (line 1814)
        kwds_613513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 53), 'kwds', False)
        kwargs_613514 = {'kwds_613513': kwds_613513}
        # Getting the type of 'self' (line 1814)
        self_613510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1814)
        _parse_args_613511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1814, 27), self_613510, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1814)
        _parse_args_call_result_613515 = invoke(stypy.reporting.localization.Localization(__file__, 1814, 27), _parse_args_613511, *[args_613512], **kwargs_613514)
        
        # Obtaining the member '__getitem__' of a type (line 1814)
        getitem___613516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1814, 8), _parse_args_call_result_613515, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1814)
        subscript_call_result_613517 = invoke(stypy.reporting.localization.Localization(__file__, 1814, 8), getitem___613516, int_613509)
        
        # Assigning a type to the variable 'tuple_var_assignment_609308' (line 1814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 8), 'tuple_var_assignment_609308', subscript_call_result_613517)
        
        # Assigning a Subscript to a Name (line 1814):
        
        # Obtaining the type of the subscript
        int_613518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1814, 8), 'int')
        
        # Call to _parse_args(...): (line 1814)
        # Getting the type of 'args' (line 1814)
        args_613521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 45), 'args', False)
        # Processing the call keyword arguments (line 1814)
        # Getting the type of 'kwds' (line 1814)
        kwds_613522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 53), 'kwds', False)
        kwargs_613523 = {'kwds_613522': kwds_613522}
        # Getting the type of 'self' (line 1814)
        self_613519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1814)
        _parse_args_613520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1814, 27), self_613519, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1814)
        _parse_args_call_result_613524 = invoke(stypy.reporting.localization.Localization(__file__, 1814, 27), _parse_args_613520, *[args_613521], **kwargs_613523)
        
        # Obtaining the member '__getitem__' of a type (line 1814)
        getitem___613525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1814, 8), _parse_args_call_result_613524, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1814)
        subscript_call_result_613526 = invoke(stypy.reporting.localization.Localization(__file__, 1814, 8), getitem___613525, int_613518)
        
        # Assigning a type to the variable 'tuple_var_assignment_609309' (line 1814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 8), 'tuple_var_assignment_609309', subscript_call_result_613526)
        
        # Assigning a Name to a Name (line 1814):
        # Getting the type of 'tuple_var_assignment_609307' (line 1814)
        tuple_var_assignment_609307_613527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 8), 'tuple_var_assignment_609307')
        # Assigning a type to the variable 'args' (line 1814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 8), 'args', tuple_var_assignment_609307_613527)
        
        # Assigning a Name to a Name (line 1814):
        # Getting the type of 'tuple_var_assignment_609308' (line 1814)
        tuple_var_assignment_609308_613528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 8), 'tuple_var_assignment_609308')
        # Assigning a type to the variable 'loc' (line 1814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 14), 'loc', tuple_var_assignment_609308_613528)
        
        # Assigning a Name to a Name (line 1814):
        # Getting the type of 'tuple_var_assignment_609309' (line 1814)
        tuple_var_assignment_609309_613529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1814, 8), 'tuple_var_assignment_609309')
        # Assigning a type to the variable 'scale' (line 1814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1814, 19), 'scale', tuple_var_assignment_609309_613529)
        
        # Assigning a Call to a Tuple (line 1815):
        
        # Assigning a Subscript to a Name (line 1815):
        
        # Obtaining the type of the subscript
        int_613530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 8), 'int')
        
        # Call to map(...): (line 1815)
        # Processing the call arguments (line 1815)
        # Getting the type of 'asarray' (line 1815)
        asarray_613532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1815)
        tuple_613533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1815)
        # Adding element type (line 1815)
        # Getting the type of 'x' (line 1815)
        x_613534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 38), tuple_613533, x_613534)
        # Adding element type (line 1815)
        # Getting the type of 'loc' (line 1815)
        loc_613535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 38), tuple_613533, loc_613535)
        # Adding element type (line 1815)
        # Getting the type of 'scale' (line 1815)
        scale_613536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 38), tuple_613533, scale_613536)
        
        # Processing the call keyword arguments (line 1815)
        kwargs_613537 = {}
        # Getting the type of 'map' (line 1815)
        map_613531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 24), 'map', False)
        # Calling map(args, kwargs) (line 1815)
        map_call_result_613538 = invoke(stypy.reporting.localization.Localization(__file__, 1815, 24), map_613531, *[asarray_613532, tuple_613533], **kwargs_613537)
        
        # Obtaining the member '__getitem__' of a type (line 1815)
        getitem___613539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1815, 8), map_call_result_613538, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1815)
        subscript_call_result_613540 = invoke(stypy.reporting.localization.Localization(__file__, 1815, 8), getitem___613539, int_613530)
        
        # Assigning a type to the variable 'tuple_var_assignment_609310' (line 1815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'tuple_var_assignment_609310', subscript_call_result_613540)
        
        # Assigning a Subscript to a Name (line 1815):
        
        # Obtaining the type of the subscript
        int_613541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 8), 'int')
        
        # Call to map(...): (line 1815)
        # Processing the call arguments (line 1815)
        # Getting the type of 'asarray' (line 1815)
        asarray_613543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1815)
        tuple_613544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1815)
        # Adding element type (line 1815)
        # Getting the type of 'x' (line 1815)
        x_613545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 38), tuple_613544, x_613545)
        # Adding element type (line 1815)
        # Getting the type of 'loc' (line 1815)
        loc_613546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 38), tuple_613544, loc_613546)
        # Adding element type (line 1815)
        # Getting the type of 'scale' (line 1815)
        scale_613547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 38), tuple_613544, scale_613547)
        
        # Processing the call keyword arguments (line 1815)
        kwargs_613548 = {}
        # Getting the type of 'map' (line 1815)
        map_613542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 24), 'map', False)
        # Calling map(args, kwargs) (line 1815)
        map_call_result_613549 = invoke(stypy.reporting.localization.Localization(__file__, 1815, 24), map_613542, *[asarray_613543, tuple_613544], **kwargs_613548)
        
        # Obtaining the member '__getitem__' of a type (line 1815)
        getitem___613550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1815, 8), map_call_result_613549, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1815)
        subscript_call_result_613551 = invoke(stypy.reporting.localization.Localization(__file__, 1815, 8), getitem___613550, int_613541)
        
        # Assigning a type to the variable 'tuple_var_assignment_609311' (line 1815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'tuple_var_assignment_609311', subscript_call_result_613551)
        
        # Assigning a Subscript to a Name (line 1815):
        
        # Obtaining the type of the subscript
        int_613552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 8), 'int')
        
        # Call to map(...): (line 1815)
        # Processing the call arguments (line 1815)
        # Getting the type of 'asarray' (line 1815)
        asarray_613554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1815)
        tuple_613555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1815, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1815)
        # Adding element type (line 1815)
        # Getting the type of 'x' (line 1815)
        x_613556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 38), tuple_613555, x_613556)
        # Adding element type (line 1815)
        # Getting the type of 'loc' (line 1815)
        loc_613557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 38), tuple_613555, loc_613557)
        # Adding element type (line 1815)
        # Getting the type of 'scale' (line 1815)
        scale_613558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1815, 38), tuple_613555, scale_613558)
        
        # Processing the call keyword arguments (line 1815)
        kwargs_613559 = {}
        # Getting the type of 'map' (line 1815)
        map_613553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 24), 'map', False)
        # Calling map(args, kwargs) (line 1815)
        map_call_result_613560 = invoke(stypy.reporting.localization.Localization(__file__, 1815, 24), map_613553, *[asarray_613554, tuple_613555], **kwargs_613559)
        
        # Obtaining the member '__getitem__' of a type (line 1815)
        getitem___613561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1815, 8), map_call_result_613560, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1815)
        subscript_call_result_613562 = invoke(stypy.reporting.localization.Localization(__file__, 1815, 8), getitem___613561, int_613552)
        
        # Assigning a type to the variable 'tuple_var_assignment_609312' (line 1815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'tuple_var_assignment_609312', subscript_call_result_613562)
        
        # Assigning a Name to a Name (line 1815):
        # Getting the type of 'tuple_var_assignment_609310' (line 1815)
        tuple_var_assignment_609310_613563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'tuple_var_assignment_609310')
        # Assigning a type to the variable 'x' (line 1815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'x', tuple_var_assignment_609310_613563)
        
        # Assigning a Name to a Name (line 1815):
        # Getting the type of 'tuple_var_assignment_609311' (line 1815)
        tuple_var_assignment_609311_613564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'tuple_var_assignment_609311')
        # Assigning a type to the variable 'loc' (line 1815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1815, 11), 'loc', tuple_var_assignment_609311_613564)
        
        # Assigning a Name to a Name (line 1815):
        # Getting the type of 'tuple_var_assignment_609312' (line 1815)
        tuple_var_assignment_609312_613565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1815, 8), 'tuple_var_assignment_609312')
        # Assigning a type to the variable 'scale' (line 1815)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1815, 16), 'scale', tuple_var_assignment_609312_613565)
        
        # Assigning a Call to a Name (line 1816):
        
        # Assigning a Call to a Name (line 1816):
        
        # Call to tuple(...): (line 1816)
        # Processing the call arguments (line 1816)
        
        # Call to map(...): (line 1816)
        # Processing the call arguments (line 1816)
        # Getting the type of 'asarray' (line 1816)
        asarray_613568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1816, 25), 'asarray', False)
        # Getting the type of 'args' (line 1816)
        args_613569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1816, 34), 'args', False)
        # Processing the call keyword arguments (line 1816)
        kwargs_613570 = {}
        # Getting the type of 'map' (line 1816)
        map_613567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1816, 21), 'map', False)
        # Calling map(args, kwargs) (line 1816)
        map_call_result_613571 = invoke(stypy.reporting.localization.Localization(__file__, 1816, 21), map_613567, *[asarray_613568, args_613569], **kwargs_613570)
        
        # Processing the call keyword arguments (line 1816)
        kwargs_613572 = {}
        # Getting the type of 'tuple' (line 1816)
        tuple_613566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1816, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1816)
        tuple_call_result_613573 = invoke(stypy.reporting.localization.Localization(__file__, 1816, 15), tuple_613566, *[map_call_result_613571], **kwargs_613572)
        
        # Assigning a type to the variable 'args' (line 1816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1816, 8), 'args', tuple_call_result_613573)
        
        # Assigning a Call to a Name (line 1817):
        
        # Assigning a Call to a Name (line 1817):
        
        # Call to find_common_type(...): (line 1817)
        # Processing the call arguments (line 1817)
        
        # Obtaining an instance of the builtin type 'list' (line 1817)
        list_613576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1817, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1817)
        # Adding element type (line 1817)
        # Getting the type of 'x' (line 1817)
        x_613577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1817, 36), 'x', False)
        # Obtaining the member 'dtype' of a type (line 1817)
        dtype_613578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1817, 36), x_613577, 'dtype')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1817, 35), list_613576, dtype_613578)
        # Adding element type (line 1817)
        # Getting the type of 'np' (line 1817)
        np_613579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1817, 45), 'np', False)
        # Obtaining the member 'float64' of a type (line 1817)
        float64_613580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1817, 45), np_613579, 'float64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1817, 35), list_613576, float64_613580)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1817)
        list_613581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1817, 58), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1817)
        
        # Processing the call keyword arguments (line 1817)
        kwargs_613582 = {}
        # Getting the type of 'np' (line 1817)
        np_613574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1817, 15), 'np', False)
        # Obtaining the member 'find_common_type' of a type (line 1817)
        find_common_type_613575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1817, 15), np_613574, 'find_common_type')
        # Calling find_common_type(args, kwargs) (line 1817)
        find_common_type_call_result_613583 = invoke(stypy.reporting.localization.Localization(__file__, 1817, 15), find_common_type_613575, *[list_613576, list_613581], **kwargs_613582)
        
        # Assigning a type to the variable 'dtyp' (line 1817)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1817, 8), 'dtyp', find_common_type_call_result_613583)
        
        # Assigning a Call to a Name (line 1818):
        
        # Assigning a Call to a Name (line 1818):
        
        # Call to asarray(...): (line 1818)
        # Processing the call arguments (line 1818)
        # Getting the type of 'x' (line 1818)
        x_613586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 24), 'x', False)
        # Getting the type of 'loc' (line 1818)
        loc_613587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 28), 'loc', False)
        # Applying the binary operator '-' (line 1818)
        result_sub_613588 = python_operator(stypy.reporting.localization.Localization(__file__, 1818, 24), '-', x_613586, loc_613587)
        
        # Getting the type of 'scale' (line 1818)
        scale_613589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 33), 'scale', False)
        # Applying the binary operator 'div' (line 1818)
        result_div_613590 = python_operator(stypy.reporting.localization.Localization(__file__, 1818, 23), 'div', result_sub_613588, scale_613589)
        
        # Processing the call keyword arguments (line 1818)
        # Getting the type of 'dtyp' (line 1818)
        dtyp_613591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 46), 'dtyp', False)
        keyword_613592 = dtyp_613591
        kwargs_613593 = {'dtype': keyword_613592}
        # Getting the type of 'np' (line 1818)
        np_613584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1818, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1818)
        asarray_613585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1818, 12), np_613584, 'asarray')
        # Calling asarray(args, kwargs) (line 1818)
        asarray_call_result_613594 = invoke(stypy.reporting.localization.Localization(__file__, 1818, 12), asarray_613585, *[result_div_613590], **kwargs_613593)
        
        # Assigning a type to the variable 'x' (line 1818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1818, 8), 'x', asarray_call_result_613594)
        
        # Assigning a BinOp to a Name (line 1819):
        
        # Assigning a BinOp to a Name (line 1819):
        
        # Call to _argcheck(...): (line 1819)
        # Getting the type of 'args' (line 1819)
        args_613597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 32), 'args', False)
        # Processing the call keyword arguments (line 1819)
        kwargs_613598 = {}
        # Getting the type of 'self' (line 1819)
        self_613595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1819)
        _argcheck_613596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1819, 16), self_613595, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1819)
        _argcheck_call_result_613599 = invoke(stypy.reporting.localization.Localization(__file__, 1819, 16), _argcheck_613596, *[args_613597], **kwargs_613598)
        
        
        # Getting the type of 'scale' (line 1819)
        scale_613600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1819, 41), 'scale')
        int_613601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1819, 49), 'int')
        # Applying the binary operator '>' (line 1819)
        result_gt_613602 = python_operator(stypy.reporting.localization.Localization(__file__, 1819, 41), '>', scale_613600, int_613601)
        
        # Applying the binary operator '&' (line 1819)
        result_and__613603 = python_operator(stypy.reporting.localization.Localization(__file__, 1819, 16), '&', _argcheck_call_result_613599, result_gt_613602)
        
        # Assigning a type to the variable 'cond0' (line 1819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1819, 8), 'cond0', result_and__613603)
        
        # Assigning a BinOp to a Name (line 1820):
        
        # Assigning a BinOp to a Name (line 1820):
        
        # Call to _open_support_mask(...): (line 1820)
        # Processing the call arguments (line 1820)
        # Getting the type of 'x' (line 1820)
        x_613606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 40), 'x', False)
        # Processing the call keyword arguments (line 1820)
        kwargs_613607 = {}
        # Getting the type of 'self' (line 1820)
        self_613604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 16), 'self', False)
        # Obtaining the member '_open_support_mask' of a type (line 1820)
        _open_support_mask_613605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1820, 16), self_613604, '_open_support_mask')
        # Calling _open_support_mask(args, kwargs) (line 1820)
        _open_support_mask_call_result_613608 = invoke(stypy.reporting.localization.Localization(__file__, 1820, 16), _open_support_mask_613605, *[x_613606], **kwargs_613607)
        
        
        # Getting the type of 'scale' (line 1820)
        scale_613609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1820, 46), 'scale')
        int_613610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1820, 54), 'int')
        # Applying the binary operator '>' (line 1820)
        result_gt_613611 = python_operator(stypy.reporting.localization.Localization(__file__, 1820, 46), '>', scale_613609, int_613610)
        
        # Applying the binary operator '&' (line 1820)
        result_and__613612 = python_operator(stypy.reporting.localization.Localization(__file__, 1820, 16), '&', _open_support_mask_call_result_613608, result_gt_613611)
        
        # Assigning a type to the variable 'cond1' (line 1820)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1820, 8), 'cond1', result_and__613612)
        
        # Assigning a BinOp to a Name (line 1821):
        
        # Assigning a BinOp to a Name (line 1821):
        # Getting the type of 'cond0' (line 1821)
        cond0_613613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1821, 16), 'cond0')
        
        # Getting the type of 'x' (line 1821)
        x_613614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1821, 25), 'x')
        # Getting the type of 'self' (line 1821)
        self_613615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1821, 30), 'self')
        # Obtaining the member 'a' of a type (line 1821)
        a_613616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1821, 30), self_613615, 'a')
        # Applying the binary operator '<=' (line 1821)
        result_le_613617 = python_operator(stypy.reporting.localization.Localization(__file__, 1821, 25), '<=', x_613614, a_613616)
        
        # Applying the binary operator '&' (line 1821)
        result_and__613618 = python_operator(stypy.reporting.localization.Localization(__file__, 1821, 16), '&', cond0_613613, result_le_613617)
        
        # Assigning a type to the variable 'cond2' (line 1821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1821, 8), 'cond2', result_and__613618)
        
        # Assigning a BinOp to a Name (line 1822):
        
        # Assigning a BinOp to a Name (line 1822):
        # Getting the type of 'cond0' (line 1822)
        cond0_613619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 15), 'cond0')
        # Getting the type of 'cond1' (line 1822)
        cond1_613620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1822, 23), 'cond1')
        # Applying the binary operator '&' (line 1822)
        result_and__613621 = python_operator(stypy.reporting.localization.Localization(__file__, 1822, 15), '&', cond0_613619, cond1_613620)
        
        # Assigning a type to the variable 'cond' (line 1822)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1822, 8), 'cond', result_and__613621)
        
        # Assigning a Call to a Name (line 1823):
        
        # Assigning a Call to a Name (line 1823):
        
        # Call to zeros(...): (line 1823)
        # Processing the call arguments (line 1823)
        
        # Call to shape(...): (line 1823)
        # Processing the call arguments (line 1823)
        # Getting the type of 'cond' (line 1823)
        cond_613624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 29), 'cond', False)
        # Processing the call keyword arguments (line 1823)
        kwargs_613625 = {}
        # Getting the type of 'shape' (line 1823)
        shape_613623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 1823)
        shape_call_result_613626 = invoke(stypy.reporting.localization.Localization(__file__, 1823, 23), shape_613623, *[cond_613624], **kwargs_613625)
        
        # Getting the type of 'dtyp' (line 1823)
        dtyp_613627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 36), 'dtyp', False)
        # Processing the call keyword arguments (line 1823)
        kwargs_613628 = {}
        # Getting the type of 'zeros' (line 1823)
        zeros_613622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1823, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 1823)
        zeros_call_result_613629 = invoke(stypy.reporting.localization.Localization(__file__, 1823, 17), zeros_613622, *[shape_call_result_613626, dtyp_613627], **kwargs_613628)
        
        # Assigning a type to the variable 'output' (line 1823)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1823, 8), 'output', zeros_call_result_613629)
        
        # Call to place(...): (line 1824)
        # Processing the call arguments (line 1824)
        # Getting the type of 'output' (line 1824)
        output_613631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 14), 'output', False)
        int_613632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1824, 23), 'int')
        # Getting the type of 'cond0' (line 1824)
        cond0_613633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 25), 'cond0', False)
        # Applying the binary operator '-' (line 1824)
        result_sub_613634 = python_operator(stypy.reporting.localization.Localization(__file__, 1824, 23), '-', int_613632, cond0_613633)
        
        
        # Call to isnan(...): (line 1824)
        # Processing the call arguments (line 1824)
        # Getting the type of 'x' (line 1824)
        x_613637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 41), 'x', False)
        # Processing the call keyword arguments (line 1824)
        kwargs_613638 = {}
        # Getting the type of 'np' (line 1824)
        np_613635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 32), 'np', False)
        # Obtaining the member 'isnan' of a type (line 1824)
        isnan_613636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1824, 32), np_613635, 'isnan')
        # Calling isnan(args, kwargs) (line 1824)
        isnan_call_result_613639 = invoke(stypy.reporting.localization.Localization(__file__, 1824, 32), isnan_613636, *[x_613637], **kwargs_613638)
        
        # Applying the binary operator '+' (line 1824)
        result_add_613640 = python_operator(stypy.reporting.localization.Localization(__file__, 1824, 22), '+', result_sub_613634, isnan_call_result_613639)
        
        # Getting the type of 'self' (line 1824)
        self_613641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 45), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1824)
        badvalue_613642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1824, 45), self_613641, 'badvalue')
        # Processing the call keyword arguments (line 1824)
        kwargs_613643 = {}
        # Getting the type of 'place' (line 1824)
        place_613630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1824, 8), 'place', False)
        # Calling place(args, kwargs) (line 1824)
        place_call_result_613644 = invoke(stypy.reporting.localization.Localization(__file__, 1824, 8), place_613630, *[output_613631, result_add_613640, badvalue_613642], **kwargs_613643)
        
        
        # Call to place(...): (line 1825)
        # Processing the call arguments (line 1825)
        # Getting the type of 'output' (line 1825)
        output_613646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 14), 'output', False)
        # Getting the type of 'cond2' (line 1825)
        cond2_613647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 22), 'cond2', False)
        float_613648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1825, 29), 'float')
        # Processing the call keyword arguments (line 1825)
        kwargs_613649 = {}
        # Getting the type of 'place' (line 1825)
        place_613645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1825, 8), 'place', False)
        # Calling place(args, kwargs) (line 1825)
        place_call_result_613650 = invoke(stypy.reporting.localization.Localization(__file__, 1825, 8), place_613645, *[output_613646, cond2_613647, float_613648], **kwargs_613649)
        
        
        
        # Call to any(...): (line 1826)
        # Processing the call arguments (line 1826)
        # Getting the type of 'cond' (line 1826)
        cond_613653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 18), 'cond', False)
        # Processing the call keyword arguments (line 1826)
        kwargs_613654 = {}
        # Getting the type of 'np' (line 1826)
        np_613651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1826, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1826)
        any_613652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1826, 11), np_613651, 'any')
        # Calling any(args, kwargs) (line 1826)
        any_call_result_613655 = invoke(stypy.reporting.localization.Localization(__file__, 1826, 11), any_613652, *[cond_613653], **kwargs_613654)
        
        # Testing the type of an if condition (line 1826)
        if_condition_613656 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1826, 8), any_call_result_613655)
        # Assigning a type to the variable 'if_condition_613656' (line 1826)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1826, 8), 'if_condition_613656', if_condition_613656)
        # SSA begins for if statement (line 1826)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1827):
        
        # Assigning a Call to a Name (line 1827):
        
        # Call to argsreduce(...): (line 1827)
        # Processing the call arguments (line 1827)
        # Getting the type of 'cond' (line 1827)
        cond_613658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1827, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1827)
        tuple_613659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1827, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1827)
        # Adding element type (line 1827)
        # Getting the type of 'x' (line 1827)
        x_613660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1827, 43), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1827, 43), tuple_613659, x_613660)
        
        # Getting the type of 'args' (line 1827)
        args_613661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1827, 47), 'args', False)
        # Applying the binary operator '+' (line 1827)
        result_add_613662 = python_operator(stypy.reporting.localization.Localization(__file__, 1827, 42), '+', tuple_613659, args_613661)
        
        # Processing the call keyword arguments (line 1827)
        kwargs_613663 = {}
        # Getting the type of 'argsreduce' (line 1827)
        argsreduce_613657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1827, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1827)
        argsreduce_call_result_613664 = invoke(stypy.reporting.localization.Localization(__file__, 1827, 23), argsreduce_613657, *[cond_613658, result_add_613662], **kwargs_613663)
        
        # Assigning a type to the variable 'goodargs' (line 1827)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1827, 12), 'goodargs', argsreduce_call_result_613664)
        
        # Call to place(...): (line 1828)
        # Processing the call arguments (line 1828)
        # Getting the type of 'output' (line 1828)
        output_613666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1828, 18), 'output', False)
        # Getting the type of 'cond' (line 1828)
        cond_613667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1828, 26), 'cond', False)
        
        # Call to _sf(...): (line 1828)
        # Getting the type of 'goodargs' (line 1828)
        goodargs_613670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1828, 42), 'goodargs', False)
        # Processing the call keyword arguments (line 1828)
        kwargs_613671 = {}
        # Getting the type of 'self' (line 1828)
        self_613668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1828, 32), 'self', False)
        # Obtaining the member '_sf' of a type (line 1828)
        _sf_613669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1828, 32), self_613668, '_sf')
        # Calling _sf(args, kwargs) (line 1828)
        _sf_call_result_613672 = invoke(stypy.reporting.localization.Localization(__file__, 1828, 32), _sf_613669, *[goodargs_613670], **kwargs_613671)
        
        # Processing the call keyword arguments (line 1828)
        kwargs_613673 = {}
        # Getting the type of 'place' (line 1828)
        place_613665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1828, 12), 'place', False)
        # Calling place(args, kwargs) (line 1828)
        place_call_result_613674 = invoke(stypy.reporting.localization.Localization(__file__, 1828, 12), place_613665, *[output_613666, cond_613667, _sf_call_result_613672], **kwargs_613673)
        
        # SSA join for if statement (line 1826)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 1829)
        output_613675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1829, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 1829)
        ndim_613676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1829, 11), output_613675, 'ndim')
        int_613677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1829, 26), 'int')
        # Applying the binary operator '==' (line 1829)
        result_eq_613678 = python_operator(stypy.reporting.localization.Localization(__file__, 1829, 11), '==', ndim_613676, int_613677)
        
        # Testing the type of an if condition (line 1829)
        if_condition_613679 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1829, 8), result_eq_613678)
        # Assigning a type to the variable 'if_condition_613679' (line 1829)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1829, 8), 'if_condition_613679', if_condition_613679)
        # SSA begins for if statement (line 1829)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1830)
        tuple_613680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1830, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1830)
        
        # Getting the type of 'output' (line 1830)
        output_613681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1830, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 1830)
        getitem___613682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1830, 19), output_613681, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1830)
        subscript_call_result_613683 = invoke(stypy.reporting.localization.Localization(__file__, 1830, 19), getitem___613682, tuple_613680)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1830, 12), 'stypy_return_type', subscript_call_result_613683)
        # SSA join for if statement (line 1829)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 1831)
        output_613684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1831, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 1831)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1831, 8), 'stypy_return_type', output_613684)
        
        # ################# End of 'sf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'sf' in the type store
        # Getting the type of 'stypy_return_type' (line 1792)
        stypy_return_type_613685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1792, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_613685)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'sf'
        return stypy_return_type_613685


    @norecursion
    def logsf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logsf'
        module_type_store = module_type_store.open_function_context('logsf', 1833, 4, False)
        # Assigning a type to the variable 'self' (line 1834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1834, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.logsf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.logsf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.logsf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.logsf.__dict__.__setitem__('stypy_function_name', 'rv_continuous.logsf')
        rv_continuous.logsf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous.logsf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.logsf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.logsf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.logsf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.logsf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.logsf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.logsf', ['x'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logsf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logsf(...)' code ##################

        str_613686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1857, (-1)), 'str', '\n        Log of the survival function of the given RV.\n\n        Returns the log of the "survival function," defined as (1 - `cdf`),\n        evaluated at `x`.\n\n        Parameters\n        ----------\n        x : array_like\n            quantiles\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        logsf : ndarray\n            Log of the survival function evaluated at `x`.\n\n        ')
        
        # Assigning a Call to a Tuple (line 1858):
        
        # Assigning a Subscript to a Name (line 1858):
        
        # Obtaining the type of the subscript
        int_613687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1858, 8), 'int')
        
        # Call to _parse_args(...): (line 1858)
        # Getting the type of 'args' (line 1858)
        args_613690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 45), 'args', False)
        # Processing the call keyword arguments (line 1858)
        # Getting the type of 'kwds' (line 1858)
        kwds_613691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 53), 'kwds', False)
        kwargs_613692 = {'kwds_613691': kwds_613691}
        # Getting the type of 'self' (line 1858)
        self_613688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1858)
        _parse_args_613689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1858, 27), self_613688, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1858)
        _parse_args_call_result_613693 = invoke(stypy.reporting.localization.Localization(__file__, 1858, 27), _parse_args_613689, *[args_613690], **kwargs_613692)
        
        # Obtaining the member '__getitem__' of a type (line 1858)
        getitem___613694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1858, 8), _parse_args_call_result_613693, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1858)
        subscript_call_result_613695 = invoke(stypy.reporting.localization.Localization(__file__, 1858, 8), getitem___613694, int_613687)
        
        # Assigning a type to the variable 'tuple_var_assignment_609313' (line 1858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1858, 8), 'tuple_var_assignment_609313', subscript_call_result_613695)
        
        # Assigning a Subscript to a Name (line 1858):
        
        # Obtaining the type of the subscript
        int_613696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1858, 8), 'int')
        
        # Call to _parse_args(...): (line 1858)
        # Getting the type of 'args' (line 1858)
        args_613699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 45), 'args', False)
        # Processing the call keyword arguments (line 1858)
        # Getting the type of 'kwds' (line 1858)
        kwds_613700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 53), 'kwds', False)
        kwargs_613701 = {'kwds_613700': kwds_613700}
        # Getting the type of 'self' (line 1858)
        self_613697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1858)
        _parse_args_613698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1858, 27), self_613697, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1858)
        _parse_args_call_result_613702 = invoke(stypy.reporting.localization.Localization(__file__, 1858, 27), _parse_args_613698, *[args_613699], **kwargs_613701)
        
        # Obtaining the member '__getitem__' of a type (line 1858)
        getitem___613703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1858, 8), _parse_args_call_result_613702, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1858)
        subscript_call_result_613704 = invoke(stypy.reporting.localization.Localization(__file__, 1858, 8), getitem___613703, int_613696)
        
        # Assigning a type to the variable 'tuple_var_assignment_609314' (line 1858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1858, 8), 'tuple_var_assignment_609314', subscript_call_result_613704)
        
        # Assigning a Subscript to a Name (line 1858):
        
        # Obtaining the type of the subscript
        int_613705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1858, 8), 'int')
        
        # Call to _parse_args(...): (line 1858)
        # Getting the type of 'args' (line 1858)
        args_613708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 45), 'args', False)
        # Processing the call keyword arguments (line 1858)
        # Getting the type of 'kwds' (line 1858)
        kwds_613709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 53), 'kwds', False)
        kwargs_613710 = {'kwds_613709': kwds_613709}
        # Getting the type of 'self' (line 1858)
        self_613706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1858)
        _parse_args_613707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1858, 27), self_613706, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1858)
        _parse_args_call_result_613711 = invoke(stypy.reporting.localization.Localization(__file__, 1858, 27), _parse_args_613707, *[args_613708], **kwargs_613710)
        
        # Obtaining the member '__getitem__' of a type (line 1858)
        getitem___613712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1858, 8), _parse_args_call_result_613711, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1858)
        subscript_call_result_613713 = invoke(stypy.reporting.localization.Localization(__file__, 1858, 8), getitem___613712, int_613705)
        
        # Assigning a type to the variable 'tuple_var_assignment_609315' (line 1858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1858, 8), 'tuple_var_assignment_609315', subscript_call_result_613713)
        
        # Assigning a Name to a Name (line 1858):
        # Getting the type of 'tuple_var_assignment_609313' (line 1858)
        tuple_var_assignment_609313_613714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 8), 'tuple_var_assignment_609313')
        # Assigning a type to the variable 'args' (line 1858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1858, 8), 'args', tuple_var_assignment_609313_613714)
        
        # Assigning a Name to a Name (line 1858):
        # Getting the type of 'tuple_var_assignment_609314' (line 1858)
        tuple_var_assignment_609314_613715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 8), 'tuple_var_assignment_609314')
        # Assigning a type to the variable 'loc' (line 1858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1858, 14), 'loc', tuple_var_assignment_609314_613715)
        
        # Assigning a Name to a Name (line 1858):
        # Getting the type of 'tuple_var_assignment_609315' (line 1858)
        tuple_var_assignment_609315_613716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1858, 8), 'tuple_var_assignment_609315')
        # Assigning a type to the variable 'scale' (line 1858)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1858, 19), 'scale', tuple_var_assignment_609315_613716)
        
        # Assigning a Call to a Tuple (line 1859):
        
        # Assigning a Subscript to a Name (line 1859):
        
        # Obtaining the type of the subscript
        int_613717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1859, 8), 'int')
        
        # Call to map(...): (line 1859)
        # Processing the call arguments (line 1859)
        # Getting the type of 'asarray' (line 1859)
        asarray_613719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1859)
        tuple_613720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1859, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1859)
        # Adding element type (line 1859)
        # Getting the type of 'x' (line 1859)
        x_613721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1859, 38), tuple_613720, x_613721)
        # Adding element type (line 1859)
        # Getting the type of 'loc' (line 1859)
        loc_613722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1859, 38), tuple_613720, loc_613722)
        # Adding element type (line 1859)
        # Getting the type of 'scale' (line 1859)
        scale_613723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1859, 38), tuple_613720, scale_613723)
        
        # Processing the call keyword arguments (line 1859)
        kwargs_613724 = {}
        # Getting the type of 'map' (line 1859)
        map_613718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 24), 'map', False)
        # Calling map(args, kwargs) (line 1859)
        map_call_result_613725 = invoke(stypy.reporting.localization.Localization(__file__, 1859, 24), map_613718, *[asarray_613719, tuple_613720], **kwargs_613724)
        
        # Obtaining the member '__getitem__' of a type (line 1859)
        getitem___613726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1859, 8), map_call_result_613725, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1859)
        subscript_call_result_613727 = invoke(stypy.reporting.localization.Localization(__file__, 1859, 8), getitem___613726, int_613717)
        
        # Assigning a type to the variable 'tuple_var_assignment_609316' (line 1859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1859, 8), 'tuple_var_assignment_609316', subscript_call_result_613727)
        
        # Assigning a Subscript to a Name (line 1859):
        
        # Obtaining the type of the subscript
        int_613728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1859, 8), 'int')
        
        # Call to map(...): (line 1859)
        # Processing the call arguments (line 1859)
        # Getting the type of 'asarray' (line 1859)
        asarray_613730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1859)
        tuple_613731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1859, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1859)
        # Adding element type (line 1859)
        # Getting the type of 'x' (line 1859)
        x_613732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1859, 38), tuple_613731, x_613732)
        # Adding element type (line 1859)
        # Getting the type of 'loc' (line 1859)
        loc_613733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1859, 38), tuple_613731, loc_613733)
        # Adding element type (line 1859)
        # Getting the type of 'scale' (line 1859)
        scale_613734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1859, 38), tuple_613731, scale_613734)
        
        # Processing the call keyword arguments (line 1859)
        kwargs_613735 = {}
        # Getting the type of 'map' (line 1859)
        map_613729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 24), 'map', False)
        # Calling map(args, kwargs) (line 1859)
        map_call_result_613736 = invoke(stypy.reporting.localization.Localization(__file__, 1859, 24), map_613729, *[asarray_613730, tuple_613731], **kwargs_613735)
        
        # Obtaining the member '__getitem__' of a type (line 1859)
        getitem___613737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1859, 8), map_call_result_613736, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1859)
        subscript_call_result_613738 = invoke(stypy.reporting.localization.Localization(__file__, 1859, 8), getitem___613737, int_613728)
        
        # Assigning a type to the variable 'tuple_var_assignment_609317' (line 1859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1859, 8), 'tuple_var_assignment_609317', subscript_call_result_613738)
        
        # Assigning a Subscript to a Name (line 1859):
        
        # Obtaining the type of the subscript
        int_613739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1859, 8), 'int')
        
        # Call to map(...): (line 1859)
        # Processing the call arguments (line 1859)
        # Getting the type of 'asarray' (line 1859)
        asarray_613741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1859)
        tuple_613742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1859, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1859)
        # Adding element type (line 1859)
        # Getting the type of 'x' (line 1859)
        x_613743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 38), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1859, 38), tuple_613742, x_613743)
        # Adding element type (line 1859)
        # Getting the type of 'loc' (line 1859)
        loc_613744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1859, 38), tuple_613742, loc_613744)
        # Adding element type (line 1859)
        # Getting the type of 'scale' (line 1859)
        scale_613745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1859, 38), tuple_613742, scale_613745)
        
        # Processing the call keyword arguments (line 1859)
        kwargs_613746 = {}
        # Getting the type of 'map' (line 1859)
        map_613740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 24), 'map', False)
        # Calling map(args, kwargs) (line 1859)
        map_call_result_613747 = invoke(stypy.reporting.localization.Localization(__file__, 1859, 24), map_613740, *[asarray_613741, tuple_613742], **kwargs_613746)
        
        # Obtaining the member '__getitem__' of a type (line 1859)
        getitem___613748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1859, 8), map_call_result_613747, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1859)
        subscript_call_result_613749 = invoke(stypy.reporting.localization.Localization(__file__, 1859, 8), getitem___613748, int_613739)
        
        # Assigning a type to the variable 'tuple_var_assignment_609318' (line 1859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1859, 8), 'tuple_var_assignment_609318', subscript_call_result_613749)
        
        # Assigning a Name to a Name (line 1859):
        # Getting the type of 'tuple_var_assignment_609316' (line 1859)
        tuple_var_assignment_609316_613750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 8), 'tuple_var_assignment_609316')
        # Assigning a type to the variable 'x' (line 1859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1859, 8), 'x', tuple_var_assignment_609316_613750)
        
        # Assigning a Name to a Name (line 1859):
        # Getting the type of 'tuple_var_assignment_609317' (line 1859)
        tuple_var_assignment_609317_613751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 8), 'tuple_var_assignment_609317')
        # Assigning a type to the variable 'loc' (line 1859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1859, 11), 'loc', tuple_var_assignment_609317_613751)
        
        # Assigning a Name to a Name (line 1859):
        # Getting the type of 'tuple_var_assignment_609318' (line 1859)
        tuple_var_assignment_609318_613752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1859, 8), 'tuple_var_assignment_609318')
        # Assigning a type to the variable 'scale' (line 1859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1859, 16), 'scale', tuple_var_assignment_609318_613752)
        
        # Assigning a Call to a Name (line 1860):
        
        # Assigning a Call to a Name (line 1860):
        
        # Call to tuple(...): (line 1860)
        # Processing the call arguments (line 1860)
        
        # Call to map(...): (line 1860)
        # Processing the call arguments (line 1860)
        # Getting the type of 'asarray' (line 1860)
        asarray_613755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1860, 25), 'asarray', False)
        # Getting the type of 'args' (line 1860)
        args_613756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1860, 34), 'args', False)
        # Processing the call keyword arguments (line 1860)
        kwargs_613757 = {}
        # Getting the type of 'map' (line 1860)
        map_613754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1860, 21), 'map', False)
        # Calling map(args, kwargs) (line 1860)
        map_call_result_613758 = invoke(stypy.reporting.localization.Localization(__file__, 1860, 21), map_613754, *[asarray_613755, args_613756], **kwargs_613757)
        
        # Processing the call keyword arguments (line 1860)
        kwargs_613759 = {}
        # Getting the type of 'tuple' (line 1860)
        tuple_613753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1860, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1860)
        tuple_call_result_613760 = invoke(stypy.reporting.localization.Localization(__file__, 1860, 15), tuple_613753, *[map_call_result_613758], **kwargs_613759)
        
        # Assigning a type to the variable 'args' (line 1860)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1860, 8), 'args', tuple_call_result_613760)
        
        # Assigning a Call to a Name (line 1861):
        
        # Assigning a Call to a Name (line 1861):
        
        # Call to find_common_type(...): (line 1861)
        # Processing the call arguments (line 1861)
        
        # Obtaining an instance of the builtin type 'list' (line 1861)
        list_613763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1861)
        # Adding element type (line 1861)
        # Getting the type of 'x' (line 1861)
        x_613764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 36), 'x', False)
        # Obtaining the member 'dtype' of a type (line 1861)
        dtype_613765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1861, 36), x_613764, 'dtype')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1861, 35), list_613763, dtype_613765)
        # Adding element type (line 1861)
        # Getting the type of 'np' (line 1861)
        np_613766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 45), 'np', False)
        # Obtaining the member 'float64' of a type (line 1861)
        float64_613767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1861, 45), np_613766, 'float64')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1861, 35), list_613763, float64_613767)
        
        
        # Obtaining an instance of the builtin type 'list' (line 1861)
        list_613768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1861, 58), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1861)
        
        # Processing the call keyword arguments (line 1861)
        kwargs_613769 = {}
        # Getting the type of 'np' (line 1861)
        np_613761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1861, 15), 'np', False)
        # Obtaining the member 'find_common_type' of a type (line 1861)
        find_common_type_613762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1861, 15), np_613761, 'find_common_type')
        # Calling find_common_type(args, kwargs) (line 1861)
        find_common_type_call_result_613770 = invoke(stypy.reporting.localization.Localization(__file__, 1861, 15), find_common_type_613762, *[list_613763, list_613768], **kwargs_613769)
        
        # Assigning a type to the variable 'dtyp' (line 1861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1861, 8), 'dtyp', find_common_type_call_result_613770)
        
        # Assigning a Call to a Name (line 1862):
        
        # Assigning a Call to a Name (line 1862):
        
        # Call to asarray(...): (line 1862)
        # Processing the call arguments (line 1862)
        # Getting the type of 'x' (line 1862)
        x_613773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 24), 'x', False)
        # Getting the type of 'loc' (line 1862)
        loc_613774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 28), 'loc', False)
        # Applying the binary operator '-' (line 1862)
        result_sub_613775 = python_operator(stypy.reporting.localization.Localization(__file__, 1862, 24), '-', x_613773, loc_613774)
        
        # Getting the type of 'scale' (line 1862)
        scale_613776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 33), 'scale', False)
        # Applying the binary operator 'div' (line 1862)
        result_div_613777 = python_operator(stypy.reporting.localization.Localization(__file__, 1862, 23), 'div', result_sub_613775, scale_613776)
        
        # Processing the call keyword arguments (line 1862)
        # Getting the type of 'dtyp' (line 1862)
        dtyp_613778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 46), 'dtyp', False)
        keyword_613779 = dtyp_613778
        kwargs_613780 = {'dtype': keyword_613779}
        # Getting the type of 'np' (line 1862)
        np_613771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1862, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 1862)
        asarray_613772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1862, 12), np_613771, 'asarray')
        # Calling asarray(args, kwargs) (line 1862)
        asarray_call_result_613781 = invoke(stypy.reporting.localization.Localization(__file__, 1862, 12), asarray_613772, *[result_div_613777], **kwargs_613780)
        
        # Assigning a type to the variable 'x' (line 1862)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1862, 8), 'x', asarray_call_result_613781)
        
        # Assigning a BinOp to a Name (line 1863):
        
        # Assigning a BinOp to a Name (line 1863):
        
        # Call to _argcheck(...): (line 1863)
        # Getting the type of 'args' (line 1863)
        args_613784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1863, 32), 'args', False)
        # Processing the call keyword arguments (line 1863)
        kwargs_613785 = {}
        # Getting the type of 'self' (line 1863)
        self_613782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1863, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1863)
        _argcheck_613783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1863, 16), self_613782, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1863)
        _argcheck_call_result_613786 = invoke(stypy.reporting.localization.Localization(__file__, 1863, 16), _argcheck_613783, *[args_613784], **kwargs_613785)
        
        
        # Getting the type of 'scale' (line 1863)
        scale_613787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1863, 41), 'scale')
        int_613788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1863, 49), 'int')
        # Applying the binary operator '>' (line 1863)
        result_gt_613789 = python_operator(stypy.reporting.localization.Localization(__file__, 1863, 41), '>', scale_613787, int_613788)
        
        # Applying the binary operator '&' (line 1863)
        result_and__613790 = python_operator(stypy.reporting.localization.Localization(__file__, 1863, 16), '&', _argcheck_call_result_613786, result_gt_613789)
        
        # Assigning a type to the variable 'cond0' (line 1863)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1863, 8), 'cond0', result_and__613790)
        
        # Assigning a BinOp to a Name (line 1864):
        
        # Assigning a BinOp to a Name (line 1864):
        
        # Call to _open_support_mask(...): (line 1864)
        # Processing the call arguments (line 1864)
        # Getting the type of 'x' (line 1864)
        x_613793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1864, 40), 'x', False)
        # Processing the call keyword arguments (line 1864)
        kwargs_613794 = {}
        # Getting the type of 'self' (line 1864)
        self_613791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1864, 16), 'self', False)
        # Obtaining the member '_open_support_mask' of a type (line 1864)
        _open_support_mask_613792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1864, 16), self_613791, '_open_support_mask')
        # Calling _open_support_mask(args, kwargs) (line 1864)
        _open_support_mask_call_result_613795 = invoke(stypy.reporting.localization.Localization(__file__, 1864, 16), _open_support_mask_613792, *[x_613793], **kwargs_613794)
        
        
        # Getting the type of 'scale' (line 1864)
        scale_613796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1864, 46), 'scale')
        int_613797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1864, 54), 'int')
        # Applying the binary operator '>' (line 1864)
        result_gt_613798 = python_operator(stypy.reporting.localization.Localization(__file__, 1864, 46), '>', scale_613796, int_613797)
        
        # Applying the binary operator '&' (line 1864)
        result_and__613799 = python_operator(stypy.reporting.localization.Localization(__file__, 1864, 16), '&', _open_support_mask_call_result_613795, result_gt_613798)
        
        # Assigning a type to the variable 'cond1' (line 1864)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1864, 8), 'cond1', result_and__613799)
        
        # Assigning a BinOp to a Name (line 1865):
        
        # Assigning a BinOp to a Name (line 1865):
        # Getting the type of 'cond0' (line 1865)
        cond0_613800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 16), 'cond0')
        
        # Getting the type of 'x' (line 1865)
        x_613801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 25), 'x')
        # Getting the type of 'self' (line 1865)
        self_613802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1865, 30), 'self')
        # Obtaining the member 'a' of a type (line 1865)
        a_613803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1865, 30), self_613802, 'a')
        # Applying the binary operator '<=' (line 1865)
        result_le_613804 = python_operator(stypy.reporting.localization.Localization(__file__, 1865, 25), '<=', x_613801, a_613803)
        
        # Applying the binary operator '&' (line 1865)
        result_and__613805 = python_operator(stypy.reporting.localization.Localization(__file__, 1865, 16), '&', cond0_613800, result_le_613804)
        
        # Assigning a type to the variable 'cond2' (line 1865)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1865, 8), 'cond2', result_and__613805)
        
        # Assigning a BinOp to a Name (line 1866):
        
        # Assigning a BinOp to a Name (line 1866):
        # Getting the type of 'cond0' (line 1866)
        cond0_613806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1866, 15), 'cond0')
        # Getting the type of 'cond1' (line 1866)
        cond1_613807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1866, 23), 'cond1')
        # Applying the binary operator '&' (line 1866)
        result_and__613808 = python_operator(stypy.reporting.localization.Localization(__file__, 1866, 15), '&', cond0_613806, cond1_613807)
        
        # Assigning a type to the variable 'cond' (line 1866)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1866, 8), 'cond', result_and__613808)
        
        # Assigning a Call to a Name (line 1867):
        
        # Assigning a Call to a Name (line 1867):
        
        # Call to empty(...): (line 1867)
        # Processing the call arguments (line 1867)
        
        # Call to shape(...): (line 1867)
        # Processing the call arguments (line 1867)
        # Getting the type of 'cond' (line 1867)
        cond_613811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 29), 'cond', False)
        # Processing the call keyword arguments (line 1867)
        kwargs_613812 = {}
        # Getting the type of 'shape' (line 1867)
        shape_613810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 1867)
        shape_call_result_613813 = invoke(stypy.reporting.localization.Localization(__file__, 1867, 23), shape_613810, *[cond_613811], **kwargs_613812)
        
        # Getting the type of 'dtyp' (line 1867)
        dtyp_613814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 36), 'dtyp', False)
        # Processing the call keyword arguments (line 1867)
        kwargs_613815 = {}
        # Getting the type of 'empty' (line 1867)
        empty_613809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1867, 17), 'empty', False)
        # Calling empty(args, kwargs) (line 1867)
        empty_call_result_613816 = invoke(stypy.reporting.localization.Localization(__file__, 1867, 17), empty_613809, *[shape_call_result_613813, dtyp_613814], **kwargs_613815)
        
        # Assigning a type to the variable 'output' (line 1867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1867, 8), 'output', empty_call_result_613816)
        
        # Call to fill(...): (line 1868)
        # Processing the call arguments (line 1868)
        # Getting the type of 'NINF' (line 1868)
        NINF_613819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1868, 20), 'NINF', False)
        # Processing the call keyword arguments (line 1868)
        kwargs_613820 = {}
        # Getting the type of 'output' (line 1868)
        output_613817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1868, 8), 'output', False)
        # Obtaining the member 'fill' of a type (line 1868)
        fill_613818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1868, 8), output_613817, 'fill')
        # Calling fill(args, kwargs) (line 1868)
        fill_call_result_613821 = invoke(stypy.reporting.localization.Localization(__file__, 1868, 8), fill_613818, *[NINF_613819], **kwargs_613820)
        
        
        # Call to place(...): (line 1869)
        # Processing the call arguments (line 1869)
        # Getting the type of 'output' (line 1869)
        output_613823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1869, 14), 'output', False)
        int_613824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1869, 23), 'int')
        # Getting the type of 'cond0' (line 1869)
        cond0_613825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1869, 25), 'cond0', False)
        # Applying the binary operator '-' (line 1869)
        result_sub_613826 = python_operator(stypy.reporting.localization.Localization(__file__, 1869, 23), '-', int_613824, cond0_613825)
        
        
        # Call to isnan(...): (line 1869)
        # Processing the call arguments (line 1869)
        # Getting the type of 'x' (line 1869)
        x_613829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1869, 41), 'x', False)
        # Processing the call keyword arguments (line 1869)
        kwargs_613830 = {}
        # Getting the type of 'np' (line 1869)
        np_613827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1869, 32), 'np', False)
        # Obtaining the member 'isnan' of a type (line 1869)
        isnan_613828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1869, 32), np_613827, 'isnan')
        # Calling isnan(args, kwargs) (line 1869)
        isnan_call_result_613831 = invoke(stypy.reporting.localization.Localization(__file__, 1869, 32), isnan_613828, *[x_613829], **kwargs_613830)
        
        # Applying the binary operator '+' (line 1869)
        result_add_613832 = python_operator(stypy.reporting.localization.Localization(__file__, 1869, 22), '+', result_sub_613826, isnan_call_result_613831)
        
        # Getting the type of 'self' (line 1869)
        self_613833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1869, 45), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1869)
        badvalue_613834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1869, 45), self_613833, 'badvalue')
        # Processing the call keyword arguments (line 1869)
        kwargs_613835 = {}
        # Getting the type of 'place' (line 1869)
        place_613822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1869, 8), 'place', False)
        # Calling place(args, kwargs) (line 1869)
        place_call_result_613836 = invoke(stypy.reporting.localization.Localization(__file__, 1869, 8), place_613822, *[output_613823, result_add_613832, badvalue_613834], **kwargs_613835)
        
        
        # Call to place(...): (line 1870)
        # Processing the call arguments (line 1870)
        # Getting the type of 'output' (line 1870)
        output_613838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1870, 14), 'output', False)
        # Getting the type of 'cond2' (line 1870)
        cond2_613839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1870, 22), 'cond2', False)
        float_613840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1870, 29), 'float')
        # Processing the call keyword arguments (line 1870)
        kwargs_613841 = {}
        # Getting the type of 'place' (line 1870)
        place_613837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1870, 8), 'place', False)
        # Calling place(args, kwargs) (line 1870)
        place_call_result_613842 = invoke(stypy.reporting.localization.Localization(__file__, 1870, 8), place_613837, *[output_613838, cond2_613839, float_613840], **kwargs_613841)
        
        
        
        # Call to any(...): (line 1871)
        # Processing the call arguments (line 1871)
        # Getting the type of 'cond' (line 1871)
        cond_613845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1871, 18), 'cond', False)
        # Processing the call keyword arguments (line 1871)
        kwargs_613846 = {}
        # Getting the type of 'np' (line 1871)
        np_613843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1871, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1871)
        any_613844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1871, 11), np_613843, 'any')
        # Calling any(args, kwargs) (line 1871)
        any_call_result_613847 = invoke(stypy.reporting.localization.Localization(__file__, 1871, 11), any_613844, *[cond_613845], **kwargs_613846)
        
        # Testing the type of an if condition (line 1871)
        if_condition_613848 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1871, 8), any_call_result_613847)
        # Assigning a type to the variable 'if_condition_613848' (line 1871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1871, 8), 'if_condition_613848', if_condition_613848)
        # SSA begins for if statement (line 1871)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1872):
        
        # Assigning a Call to a Name (line 1872):
        
        # Call to argsreduce(...): (line 1872)
        # Processing the call arguments (line 1872)
        # Getting the type of 'cond' (line 1872)
        cond_613850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1872)
        tuple_613851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1872, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1872)
        # Adding element type (line 1872)
        # Getting the type of 'x' (line 1872)
        x_613852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 43), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1872, 43), tuple_613851, x_613852)
        
        # Getting the type of 'args' (line 1872)
        args_613853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 47), 'args', False)
        # Applying the binary operator '+' (line 1872)
        result_add_613854 = python_operator(stypy.reporting.localization.Localization(__file__, 1872, 42), '+', tuple_613851, args_613853)
        
        # Processing the call keyword arguments (line 1872)
        kwargs_613855 = {}
        # Getting the type of 'argsreduce' (line 1872)
        argsreduce_613849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1872, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1872)
        argsreduce_call_result_613856 = invoke(stypy.reporting.localization.Localization(__file__, 1872, 23), argsreduce_613849, *[cond_613850, result_add_613854], **kwargs_613855)
        
        # Assigning a type to the variable 'goodargs' (line 1872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1872, 12), 'goodargs', argsreduce_call_result_613856)
        
        # Call to place(...): (line 1873)
        # Processing the call arguments (line 1873)
        # Getting the type of 'output' (line 1873)
        output_613858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 18), 'output', False)
        # Getting the type of 'cond' (line 1873)
        cond_613859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 26), 'cond', False)
        
        # Call to _logsf(...): (line 1873)
        # Getting the type of 'goodargs' (line 1873)
        goodargs_613862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 45), 'goodargs', False)
        # Processing the call keyword arguments (line 1873)
        kwargs_613863 = {}
        # Getting the type of 'self' (line 1873)
        self_613860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 32), 'self', False)
        # Obtaining the member '_logsf' of a type (line 1873)
        _logsf_613861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1873, 32), self_613860, '_logsf')
        # Calling _logsf(args, kwargs) (line 1873)
        _logsf_call_result_613864 = invoke(stypy.reporting.localization.Localization(__file__, 1873, 32), _logsf_613861, *[goodargs_613862], **kwargs_613863)
        
        # Processing the call keyword arguments (line 1873)
        kwargs_613865 = {}
        # Getting the type of 'place' (line 1873)
        place_613857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1873, 12), 'place', False)
        # Calling place(args, kwargs) (line 1873)
        place_call_result_613866 = invoke(stypy.reporting.localization.Localization(__file__, 1873, 12), place_613857, *[output_613858, cond_613859, _logsf_call_result_613864], **kwargs_613865)
        
        # SSA join for if statement (line 1871)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 1874)
        output_613867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1874, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 1874)
        ndim_613868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1874, 11), output_613867, 'ndim')
        int_613869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1874, 26), 'int')
        # Applying the binary operator '==' (line 1874)
        result_eq_613870 = python_operator(stypy.reporting.localization.Localization(__file__, 1874, 11), '==', ndim_613868, int_613869)
        
        # Testing the type of an if condition (line 1874)
        if_condition_613871 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1874, 8), result_eq_613870)
        # Assigning a type to the variable 'if_condition_613871' (line 1874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1874, 8), 'if_condition_613871', if_condition_613871)
        # SSA begins for if statement (line 1874)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1875)
        tuple_613872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1875, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1875)
        
        # Getting the type of 'output' (line 1875)
        output_613873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1875, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 1875)
        getitem___613874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1875, 19), output_613873, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1875)
        subscript_call_result_613875 = invoke(stypy.reporting.localization.Localization(__file__, 1875, 19), getitem___613874, tuple_613872)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1875)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1875, 12), 'stypy_return_type', subscript_call_result_613875)
        # SSA join for if statement (line 1874)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 1876)
        output_613876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1876, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 1876)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1876, 8), 'stypy_return_type', output_613876)
        
        # ################# End of 'logsf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logsf' in the type store
        # Getting the type of 'stypy_return_type' (line 1833)
        stypy_return_type_613877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1833, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_613877)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logsf'
        return stypy_return_type_613877


    @norecursion
    def ppf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'ppf'
        module_type_store = module_type_store.open_function_context('ppf', 1878, 4, False)
        # Assigning a type to the variable 'self' (line 1879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1879, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.ppf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.ppf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.ppf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.ppf.__dict__.__setitem__('stypy_function_name', 'rv_continuous.ppf')
        rv_continuous.ppf.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_continuous.ppf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.ppf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.ppf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.ppf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.ppf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.ppf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.ppf', ['q'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'ppf', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'ppf(...)' code ##################

        str_613878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1899, (-1)), 'str', '\n        Percent point function (inverse of `cdf`) at q of the given RV.\n\n        Parameters\n        ----------\n        q : array_like\n            lower tail probability\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        x : array_like\n            quantile corresponding to the lower tail probability q.\n\n        ')
        
        # Assigning a Call to a Tuple (line 1900):
        
        # Assigning a Subscript to a Name (line 1900):
        
        # Obtaining the type of the subscript
        int_613879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1900, 8), 'int')
        
        # Call to _parse_args(...): (line 1900)
        # Getting the type of 'args' (line 1900)
        args_613882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 45), 'args', False)
        # Processing the call keyword arguments (line 1900)
        # Getting the type of 'kwds' (line 1900)
        kwds_613883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 53), 'kwds', False)
        kwargs_613884 = {'kwds_613883': kwds_613883}
        # Getting the type of 'self' (line 1900)
        self_613880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1900)
        _parse_args_613881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1900, 27), self_613880, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1900)
        _parse_args_call_result_613885 = invoke(stypy.reporting.localization.Localization(__file__, 1900, 27), _parse_args_613881, *[args_613882], **kwargs_613884)
        
        # Obtaining the member '__getitem__' of a type (line 1900)
        getitem___613886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1900, 8), _parse_args_call_result_613885, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1900)
        subscript_call_result_613887 = invoke(stypy.reporting.localization.Localization(__file__, 1900, 8), getitem___613886, int_613879)
        
        # Assigning a type to the variable 'tuple_var_assignment_609319' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 8), 'tuple_var_assignment_609319', subscript_call_result_613887)
        
        # Assigning a Subscript to a Name (line 1900):
        
        # Obtaining the type of the subscript
        int_613888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1900, 8), 'int')
        
        # Call to _parse_args(...): (line 1900)
        # Getting the type of 'args' (line 1900)
        args_613891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 45), 'args', False)
        # Processing the call keyword arguments (line 1900)
        # Getting the type of 'kwds' (line 1900)
        kwds_613892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 53), 'kwds', False)
        kwargs_613893 = {'kwds_613892': kwds_613892}
        # Getting the type of 'self' (line 1900)
        self_613889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1900)
        _parse_args_613890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1900, 27), self_613889, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1900)
        _parse_args_call_result_613894 = invoke(stypy.reporting.localization.Localization(__file__, 1900, 27), _parse_args_613890, *[args_613891], **kwargs_613893)
        
        # Obtaining the member '__getitem__' of a type (line 1900)
        getitem___613895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1900, 8), _parse_args_call_result_613894, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1900)
        subscript_call_result_613896 = invoke(stypy.reporting.localization.Localization(__file__, 1900, 8), getitem___613895, int_613888)
        
        # Assigning a type to the variable 'tuple_var_assignment_609320' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 8), 'tuple_var_assignment_609320', subscript_call_result_613896)
        
        # Assigning a Subscript to a Name (line 1900):
        
        # Obtaining the type of the subscript
        int_613897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1900, 8), 'int')
        
        # Call to _parse_args(...): (line 1900)
        # Getting the type of 'args' (line 1900)
        args_613900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 45), 'args', False)
        # Processing the call keyword arguments (line 1900)
        # Getting the type of 'kwds' (line 1900)
        kwds_613901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 53), 'kwds', False)
        kwargs_613902 = {'kwds_613901': kwds_613901}
        # Getting the type of 'self' (line 1900)
        self_613898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1900)
        _parse_args_613899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1900, 27), self_613898, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1900)
        _parse_args_call_result_613903 = invoke(stypy.reporting.localization.Localization(__file__, 1900, 27), _parse_args_613899, *[args_613900], **kwargs_613902)
        
        # Obtaining the member '__getitem__' of a type (line 1900)
        getitem___613904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1900, 8), _parse_args_call_result_613903, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1900)
        subscript_call_result_613905 = invoke(stypy.reporting.localization.Localization(__file__, 1900, 8), getitem___613904, int_613897)
        
        # Assigning a type to the variable 'tuple_var_assignment_609321' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 8), 'tuple_var_assignment_609321', subscript_call_result_613905)
        
        # Assigning a Name to a Name (line 1900):
        # Getting the type of 'tuple_var_assignment_609319' (line 1900)
        tuple_var_assignment_609319_613906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 8), 'tuple_var_assignment_609319')
        # Assigning a type to the variable 'args' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 8), 'args', tuple_var_assignment_609319_613906)
        
        # Assigning a Name to a Name (line 1900):
        # Getting the type of 'tuple_var_assignment_609320' (line 1900)
        tuple_var_assignment_609320_613907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 8), 'tuple_var_assignment_609320')
        # Assigning a type to the variable 'loc' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 14), 'loc', tuple_var_assignment_609320_613907)
        
        # Assigning a Name to a Name (line 1900):
        # Getting the type of 'tuple_var_assignment_609321' (line 1900)
        tuple_var_assignment_609321_613908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1900, 8), 'tuple_var_assignment_609321')
        # Assigning a type to the variable 'scale' (line 1900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1900, 19), 'scale', tuple_var_assignment_609321_613908)
        
        # Assigning a Call to a Tuple (line 1901):
        
        # Assigning a Subscript to a Name (line 1901):
        
        # Obtaining the type of the subscript
        int_613909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, 8), 'int')
        
        # Call to map(...): (line 1901)
        # Processing the call arguments (line 1901)
        # Getting the type of 'asarray' (line 1901)
        asarray_613911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1901)
        tuple_613912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1901)
        # Adding element type (line 1901)
        # Getting the type of 'q' (line 1901)
        q_613913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 38), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 38), tuple_613912, q_613913)
        # Adding element type (line 1901)
        # Getting the type of 'loc' (line 1901)
        loc_613914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 38), tuple_613912, loc_613914)
        # Adding element type (line 1901)
        # Getting the type of 'scale' (line 1901)
        scale_613915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 38), tuple_613912, scale_613915)
        
        # Processing the call keyword arguments (line 1901)
        kwargs_613916 = {}
        # Getting the type of 'map' (line 1901)
        map_613910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 24), 'map', False)
        # Calling map(args, kwargs) (line 1901)
        map_call_result_613917 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 24), map_613910, *[asarray_613911, tuple_613912], **kwargs_613916)
        
        # Obtaining the member '__getitem__' of a type (line 1901)
        getitem___613918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1901, 8), map_call_result_613917, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1901)
        subscript_call_result_613919 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 8), getitem___613918, int_613909)
        
        # Assigning a type to the variable 'tuple_var_assignment_609322' (line 1901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1901, 8), 'tuple_var_assignment_609322', subscript_call_result_613919)
        
        # Assigning a Subscript to a Name (line 1901):
        
        # Obtaining the type of the subscript
        int_613920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, 8), 'int')
        
        # Call to map(...): (line 1901)
        # Processing the call arguments (line 1901)
        # Getting the type of 'asarray' (line 1901)
        asarray_613922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1901)
        tuple_613923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1901)
        # Adding element type (line 1901)
        # Getting the type of 'q' (line 1901)
        q_613924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 38), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 38), tuple_613923, q_613924)
        # Adding element type (line 1901)
        # Getting the type of 'loc' (line 1901)
        loc_613925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 38), tuple_613923, loc_613925)
        # Adding element type (line 1901)
        # Getting the type of 'scale' (line 1901)
        scale_613926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 38), tuple_613923, scale_613926)
        
        # Processing the call keyword arguments (line 1901)
        kwargs_613927 = {}
        # Getting the type of 'map' (line 1901)
        map_613921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 24), 'map', False)
        # Calling map(args, kwargs) (line 1901)
        map_call_result_613928 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 24), map_613921, *[asarray_613922, tuple_613923], **kwargs_613927)
        
        # Obtaining the member '__getitem__' of a type (line 1901)
        getitem___613929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1901, 8), map_call_result_613928, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1901)
        subscript_call_result_613930 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 8), getitem___613929, int_613920)
        
        # Assigning a type to the variable 'tuple_var_assignment_609323' (line 1901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1901, 8), 'tuple_var_assignment_609323', subscript_call_result_613930)
        
        # Assigning a Subscript to a Name (line 1901):
        
        # Obtaining the type of the subscript
        int_613931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, 8), 'int')
        
        # Call to map(...): (line 1901)
        # Processing the call arguments (line 1901)
        # Getting the type of 'asarray' (line 1901)
        asarray_613933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1901)
        tuple_613934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1901, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1901)
        # Adding element type (line 1901)
        # Getting the type of 'q' (line 1901)
        q_613935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 38), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 38), tuple_613934, q_613935)
        # Adding element type (line 1901)
        # Getting the type of 'loc' (line 1901)
        loc_613936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 38), tuple_613934, loc_613936)
        # Adding element type (line 1901)
        # Getting the type of 'scale' (line 1901)
        scale_613937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1901, 38), tuple_613934, scale_613937)
        
        # Processing the call keyword arguments (line 1901)
        kwargs_613938 = {}
        # Getting the type of 'map' (line 1901)
        map_613932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 24), 'map', False)
        # Calling map(args, kwargs) (line 1901)
        map_call_result_613939 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 24), map_613932, *[asarray_613933, tuple_613934], **kwargs_613938)
        
        # Obtaining the member '__getitem__' of a type (line 1901)
        getitem___613940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1901, 8), map_call_result_613939, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1901)
        subscript_call_result_613941 = invoke(stypy.reporting.localization.Localization(__file__, 1901, 8), getitem___613940, int_613931)
        
        # Assigning a type to the variable 'tuple_var_assignment_609324' (line 1901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1901, 8), 'tuple_var_assignment_609324', subscript_call_result_613941)
        
        # Assigning a Name to a Name (line 1901):
        # Getting the type of 'tuple_var_assignment_609322' (line 1901)
        tuple_var_assignment_609322_613942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 8), 'tuple_var_assignment_609322')
        # Assigning a type to the variable 'q' (line 1901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1901, 8), 'q', tuple_var_assignment_609322_613942)
        
        # Assigning a Name to a Name (line 1901):
        # Getting the type of 'tuple_var_assignment_609323' (line 1901)
        tuple_var_assignment_609323_613943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 8), 'tuple_var_assignment_609323')
        # Assigning a type to the variable 'loc' (line 1901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1901, 11), 'loc', tuple_var_assignment_609323_613943)
        
        # Assigning a Name to a Name (line 1901):
        # Getting the type of 'tuple_var_assignment_609324' (line 1901)
        tuple_var_assignment_609324_613944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1901, 8), 'tuple_var_assignment_609324')
        # Assigning a type to the variable 'scale' (line 1901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1901, 16), 'scale', tuple_var_assignment_609324_613944)
        
        # Assigning a Call to a Name (line 1902):
        
        # Assigning a Call to a Name (line 1902):
        
        # Call to tuple(...): (line 1902)
        # Processing the call arguments (line 1902)
        
        # Call to map(...): (line 1902)
        # Processing the call arguments (line 1902)
        # Getting the type of 'asarray' (line 1902)
        asarray_613947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 25), 'asarray', False)
        # Getting the type of 'args' (line 1902)
        args_613948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 34), 'args', False)
        # Processing the call keyword arguments (line 1902)
        kwargs_613949 = {}
        # Getting the type of 'map' (line 1902)
        map_613946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 21), 'map', False)
        # Calling map(args, kwargs) (line 1902)
        map_call_result_613950 = invoke(stypy.reporting.localization.Localization(__file__, 1902, 21), map_613946, *[asarray_613947, args_613948], **kwargs_613949)
        
        # Processing the call keyword arguments (line 1902)
        kwargs_613951 = {}
        # Getting the type of 'tuple' (line 1902)
        tuple_613945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1902, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1902)
        tuple_call_result_613952 = invoke(stypy.reporting.localization.Localization(__file__, 1902, 15), tuple_613945, *[map_call_result_613950], **kwargs_613951)
        
        # Assigning a type to the variable 'args' (line 1902)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1902, 8), 'args', tuple_call_result_613952)
        
        # Assigning a BinOp to a Name (line 1903):
        
        # Assigning a BinOp to a Name (line 1903):
        
        # Call to _argcheck(...): (line 1903)
        # Getting the type of 'args' (line 1903)
        args_613955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1903, 32), 'args', False)
        # Processing the call keyword arguments (line 1903)
        kwargs_613956 = {}
        # Getting the type of 'self' (line 1903)
        self_613953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1903, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1903)
        _argcheck_613954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1903, 16), self_613953, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1903)
        _argcheck_call_result_613957 = invoke(stypy.reporting.localization.Localization(__file__, 1903, 16), _argcheck_613954, *[args_613955], **kwargs_613956)
        
        
        # Getting the type of 'scale' (line 1903)
        scale_613958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1903, 41), 'scale')
        int_613959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1903, 49), 'int')
        # Applying the binary operator '>' (line 1903)
        result_gt_613960 = python_operator(stypy.reporting.localization.Localization(__file__, 1903, 41), '>', scale_613958, int_613959)
        
        # Applying the binary operator '&' (line 1903)
        result_and__613961 = python_operator(stypy.reporting.localization.Localization(__file__, 1903, 16), '&', _argcheck_call_result_613957, result_gt_613960)
        
        
        # Getting the type of 'loc' (line 1903)
        loc_613962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1903, 55), 'loc')
        # Getting the type of 'loc' (line 1903)
        loc_613963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1903, 62), 'loc')
        # Applying the binary operator '==' (line 1903)
        result_eq_613964 = python_operator(stypy.reporting.localization.Localization(__file__, 1903, 55), '==', loc_613962, loc_613963)
        
        # Applying the binary operator '&' (line 1903)
        result_and__613965 = python_operator(stypy.reporting.localization.Localization(__file__, 1903, 52), '&', result_and__613961, result_eq_613964)
        
        # Assigning a type to the variable 'cond0' (line 1903)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1903, 8), 'cond0', result_and__613965)
        
        # Assigning a BinOp to a Name (line 1904):
        
        # Assigning a BinOp to a Name (line 1904):
        
        int_613966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1904, 17), 'int')
        # Getting the type of 'q' (line 1904)
        q_613967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 21), 'q')
        # Applying the binary operator '<' (line 1904)
        result_lt_613968 = python_operator(stypy.reporting.localization.Localization(__file__, 1904, 17), '<', int_613966, q_613967)
        
        
        # Getting the type of 'q' (line 1904)
        q_613969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1904, 27), 'q')
        int_613970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1904, 31), 'int')
        # Applying the binary operator '<' (line 1904)
        result_lt_613971 = python_operator(stypy.reporting.localization.Localization(__file__, 1904, 27), '<', q_613969, int_613970)
        
        # Applying the binary operator '&' (line 1904)
        result_and__613972 = python_operator(stypy.reporting.localization.Localization(__file__, 1904, 16), '&', result_lt_613968, result_lt_613971)
        
        # Assigning a type to the variable 'cond1' (line 1904)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1904, 8), 'cond1', result_and__613972)
        
        # Assigning a BinOp to a Name (line 1905):
        
        # Assigning a BinOp to a Name (line 1905):
        # Getting the type of 'cond0' (line 1905)
        cond0_613973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1905, 16), 'cond0')
        
        # Getting the type of 'q' (line 1905)
        q_613974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1905, 25), 'q')
        int_613975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1905, 30), 'int')
        # Applying the binary operator '==' (line 1905)
        result_eq_613976 = python_operator(stypy.reporting.localization.Localization(__file__, 1905, 25), '==', q_613974, int_613975)
        
        # Applying the binary operator '&' (line 1905)
        result_and__613977 = python_operator(stypy.reporting.localization.Localization(__file__, 1905, 16), '&', cond0_613973, result_eq_613976)
        
        # Assigning a type to the variable 'cond2' (line 1905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1905, 8), 'cond2', result_and__613977)
        
        # Assigning a BinOp to a Name (line 1906):
        
        # Assigning a BinOp to a Name (line 1906):
        # Getting the type of 'cond0' (line 1906)
        cond0_613978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1906, 16), 'cond0')
        
        # Getting the type of 'q' (line 1906)
        q_613979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1906, 25), 'q')
        int_613980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1906, 30), 'int')
        # Applying the binary operator '==' (line 1906)
        result_eq_613981 = python_operator(stypy.reporting.localization.Localization(__file__, 1906, 25), '==', q_613979, int_613980)
        
        # Applying the binary operator '&' (line 1906)
        result_and__613982 = python_operator(stypy.reporting.localization.Localization(__file__, 1906, 16), '&', cond0_613978, result_eq_613981)
        
        # Assigning a type to the variable 'cond3' (line 1906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1906, 8), 'cond3', result_and__613982)
        
        # Assigning a BinOp to a Name (line 1907):
        
        # Assigning a BinOp to a Name (line 1907):
        # Getting the type of 'cond0' (line 1907)
        cond0_613983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1907, 15), 'cond0')
        # Getting the type of 'cond1' (line 1907)
        cond1_613984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1907, 23), 'cond1')
        # Applying the binary operator '&' (line 1907)
        result_and__613985 = python_operator(stypy.reporting.localization.Localization(__file__, 1907, 15), '&', cond0_613983, cond1_613984)
        
        # Assigning a type to the variable 'cond' (line 1907)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1907, 8), 'cond', result_and__613985)
        
        # Assigning a Call to a Name (line 1908):
        
        # Assigning a Call to a Name (line 1908):
        
        # Call to valarray(...): (line 1908)
        # Processing the call arguments (line 1908)
        
        # Call to shape(...): (line 1908)
        # Processing the call arguments (line 1908)
        # Getting the type of 'cond' (line 1908)
        cond_613988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1908, 32), 'cond', False)
        # Processing the call keyword arguments (line 1908)
        kwargs_613989 = {}
        # Getting the type of 'shape' (line 1908)
        shape_613987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1908, 26), 'shape', False)
        # Calling shape(args, kwargs) (line 1908)
        shape_call_result_613990 = invoke(stypy.reporting.localization.Localization(__file__, 1908, 26), shape_613987, *[cond_613988], **kwargs_613989)
        
        # Processing the call keyword arguments (line 1908)
        # Getting the type of 'self' (line 1908)
        self_613991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1908, 45), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1908)
        badvalue_613992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1908, 45), self_613991, 'badvalue')
        keyword_613993 = badvalue_613992
        kwargs_613994 = {'value': keyword_613993}
        # Getting the type of 'valarray' (line 1908)
        valarray_613986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1908, 17), 'valarray', False)
        # Calling valarray(args, kwargs) (line 1908)
        valarray_call_result_613995 = invoke(stypy.reporting.localization.Localization(__file__, 1908, 17), valarray_613986, *[shape_call_result_613990], **kwargs_613994)
        
        # Assigning a type to the variable 'output' (line 1908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1908, 8), 'output', valarray_call_result_613995)
        
        # Assigning a BinOp to a Name (line 1910):
        
        # Assigning a BinOp to a Name (line 1910):
        # Getting the type of 'self' (line 1910)
        self_613996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1910, 22), 'self')
        # Obtaining the member 'a' of a type (line 1910)
        a_613997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1910, 22), self_613996, 'a')
        # Getting the type of 'scale' (line 1910)
        scale_613998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1910, 31), 'scale')
        # Applying the binary operator '*' (line 1910)
        result_mul_613999 = python_operator(stypy.reporting.localization.Localization(__file__, 1910, 22), '*', a_613997, scale_613998)
        
        # Getting the type of 'loc' (line 1910)
        loc_614000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1910, 39), 'loc')
        # Applying the binary operator '+' (line 1910)
        result_add_614001 = python_operator(stypy.reporting.localization.Localization(__file__, 1910, 22), '+', result_mul_613999, loc_614000)
        
        # Assigning a type to the variable 'lower_bound' (line 1910)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1910, 8), 'lower_bound', result_add_614001)
        
        # Assigning a BinOp to a Name (line 1911):
        
        # Assigning a BinOp to a Name (line 1911):
        # Getting the type of 'self' (line 1911)
        self_614002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 22), 'self')
        # Obtaining the member 'b' of a type (line 1911)
        b_614003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1911, 22), self_614002, 'b')
        # Getting the type of 'scale' (line 1911)
        scale_614004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 31), 'scale')
        # Applying the binary operator '*' (line 1911)
        result_mul_614005 = python_operator(stypy.reporting.localization.Localization(__file__, 1911, 22), '*', b_614003, scale_614004)
        
        # Getting the type of 'loc' (line 1911)
        loc_614006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1911, 39), 'loc')
        # Applying the binary operator '+' (line 1911)
        result_add_614007 = python_operator(stypy.reporting.localization.Localization(__file__, 1911, 22), '+', result_mul_614005, loc_614006)
        
        # Assigning a type to the variable 'upper_bound' (line 1911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1911, 8), 'upper_bound', result_add_614007)
        
        # Call to place(...): (line 1912)
        # Processing the call arguments (line 1912)
        # Getting the type of 'output' (line 1912)
        output_614009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1912, 14), 'output', False)
        # Getting the type of 'cond2' (line 1912)
        cond2_614010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1912, 22), 'cond2', False)
        
        # Obtaining the type of the subscript
        int_614011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1912, 60), 'int')
        
        # Call to argsreduce(...): (line 1912)
        # Processing the call arguments (line 1912)
        # Getting the type of 'cond2' (line 1912)
        cond2_614013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1912, 40), 'cond2', False)
        # Getting the type of 'lower_bound' (line 1912)
        lower_bound_614014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1912, 47), 'lower_bound', False)
        # Processing the call keyword arguments (line 1912)
        kwargs_614015 = {}
        # Getting the type of 'argsreduce' (line 1912)
        argsreduce_614012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1912, 29), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1912)
        argsreduce_call_result_614016 = invoke(stypy.reporting.localization.Localization(__file__, 1912, 29), argsreduce_614012, *[cond2_614013, lower_bound_614014], **kwargs_614015)
        
        # Obtaining the member '__getitem__' of a type (line 1912)
        getitem___614017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1912, 29), argsreduce_call_result_614016, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1912)
        subscript_call_result_614018 = invoke(stypy.reporting.localization.Localization(__file__, 1912, 29), getitem___614017, int_614011)
        
        # Processing the call keyword arguments (line 1912)
        kwargs_614019 = {}
        # Getting the type of 'place' (line 1912)
        place_614008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1912, 8), 'place', False)
        # Calling place(args, kwargs) (line 1912)
        place_call_result_614020 = invoke(stypy.reporting.localization.Localization(__file__, 1912, 8), place_614008, *[output_614009, cond2_614010, subscript_call_result_614018], **kwargs_614019)
        
        
        # Call to place(...): (line 1913)
        # Processing the call arguments (line 1913)
        # Getting the type of 'output' (line 1913)
        output_614022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 14), 'output', False)
        # Getting the type of 'cond3' (line 1913)
        cond3_614023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 22), 'cond3', False)
        
        # Obtaining the type of the subscript
        int_614024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1913, 60), 'int')
        
        # Call to argsreduce(...): (line 1913)
        # Processing the call arguments (line 1913)
        # Getting the type of 'cond3' (line 1913)
        cond3_614026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 40), 'cond3', False)
        # Getting the type of 'upper_bound' (line 1913)
        upper_bound_614027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 47), 'upper_bound', False)
        # Processing the call keyword arguments (line 1913)
        kwargs_614028 = {}
        # Getting the type of 'argsreduce' (line 1913)
        argsreduce_614025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 29), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1913)
        argsreduce_call_result_614029 = invoke(stypy.reporting.localization.Localization(__file__, 1913, 29), argsreduce_614025, *[cond3_614026, upper_bound_614027], **kwargs_614028)
        
        # Obtaining the member '__getitem__' of a type (line 1913)
        getitem___614030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1913, 29), argsreduce_call_result_614029, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1913)
        subscript_call_result_614031 = invoke(stypy.reporting.localization.Localization(__file__, 1913, 29), getitem___614030, int_614024)
        
        # Processing the call keyword arguments (line 1913)
        kwargs_614032 = {}
        # Getting the type of 'place' (line 1913)
        place_614021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1913, 8), 'place', False)
        # Calling place(args, kwargs) (line 1913)
        place_call_result_614033 = invoke(stypy.reporting.localization.Localization(__file__, 1913, 8), place_614021, *[output_614022, cond3_614023, subscript_call_result_614031], **kwargs_614032)
        
        
        
        # Call to any(...): (line 1915)
        # Processing the call arguments (line 1915)
        # Getting the type of 'cond' (line 1915)
        cond_614036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 18), 'cond', False)
        # Processing the call keyword arguments (line 1915)
        kwargs_614037 = {}
        # Getting the type of 'np' (line 1915)
        np_614034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1915, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1915)
        any_614035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1915, 11), np_614034, 'any')
        # Calling any(args, kwargs) (line 1915)
        any_call_result_614038 = invoke(stypy.reporting.localization.Localization(__file__, 1915, 11), any_614035, *[cond_614036], **kwargs_614037)
        
        # Testing the type of an if condition (line 1915)
        if_condition_614039 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1915, 8), any_call_result_614038)
        # Assigning a type to the variable 'if_condition_614039' (line 1915)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1915, 8), 'if_condition_614039', if_condition_614039)
        # SSA begins for if statement (line 1915)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1916):
        
        # Assigning a Call to a Name (line 1916):
        
        # Call to argsreduce(...): (line 1916)
        # Processing the call arguments (line 1916)
        # Getting the type of 'cond' (line 1916)
        cond_614041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1916, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1916)
        tuple_614042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1916, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1916)
        # Adding element type (line 1916)
        # Getting the type of 'q' (line 1916)
        q_614043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1916, 43), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1916, 43), tuple_614042, q_614043)
        
        # Getting the type of 'args' (line 1916)
        args_614044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1916, 47), 'args', False)
        # Applying the binary operator '+' (line 1916)
        result_add_614045 = python_operator(stypy.reporting.localization.Localization(__file__, 1916, 42), '+', tuple_614042, args_614044)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1916)
        tuple_614046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1916, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1916)
        # Adding element type (line 1916)
        # Getting the type of 'scale' (line 1916)
        scale_614047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1916, 53), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1916, 53), tuple_614046, scale_614047)
        # Adding element type (line 1916)
        # Getting the type of 'loc' (line 1916)
        loc_614048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1916, 60), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1916, 53), tuple_614046, loc_614048)
        
        # Applying the binary operator '+' (line 1916)
        result_add_614049 = python_operator(stypy.reporting.localization.Localization(__file__, 1916, 51), '+', result_add_614045, tuple_614046)
        
        # Processing the call keyword arguments (line 1916)
        kwargs_614050 = {}
        # Getting the type of 'argsreduce' (line 1916)
        argsreduce_614040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1916, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1916)
        argsreduce_call_result_614051 = invoke(stypy.reporting.localization.Localization(__file__, 1916, 23), argsreduce_614040, *[cond_614041, result_add_614049], **kwargs_614050)
        
        # Assigning a type to the variable 'goodargs' (line 1916)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1916, 12), 'goodargs', argsreduce_call_result_614051)
        
        # Assigning a Tuple to a Tuple (line 1917):
        
        # Assigning a Subscript to a Name (line 1917):
        
        # Obtaining the type of the subscript
        int_614052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1917, 44), 'int')
        # Getting the type of 'goodargs' (line 1917)
        goodargs_614053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 35), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1917)
        getitem___614054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1917, 35), goodargs_614053, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1917)
        subscript_call_result_614055 = invoke(stypy.reporting.localization.Localization(__file__, 1917, 35), getitem___614054, int_614052)
        
        # Assigning a type to the variable 'tuple_assignment_609325' (line 1917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1917, 12), 'tuple_assignment_609325', subscript_call_result_614055)
        
        # Assigning a Subscript to a Name (line 1917):
        
        # Obtaining the type of the subscript
        int_614056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1917, 58), 'int')
        # Getting the type of 'goodargs' (line 1917)
        goodargs_614057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 49), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1917)
        getitem___614058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1917, 49), goodargs_614057, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1917)
        subscript_call_result_614059 = invoke(stypy.reporting.localization.Localization(__file__, 1917, 49), getitem___614058, int_614056)
        
        # Assigning a type to the variable 'tuple_assignment_609326' (line 1917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1917, 12), 'tuple_assignment_609326', subscript_call_result_614059)
        
        # Assigning a Subscript to a Name (line 1917):
        
        # Obtaining the type of the subscript
        int_614060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1917, 73), 'int')
        slice_614061 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1917, 63), None, int_614060, None)
        # Getting the type of 'goodargs' (line 1917)
        goodargs_614062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 63), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1917)
        getitem___614063 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1917, 63), goodargs_614062, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1917)
        subscript_call_result_614064 = invoke(stypy.reporting.localization.Localization(__file__, 1917, 63), getitem___614063, slice_614061)
        
        # Assigning a type to the variable 'tuple_assignment_609327' (line 1917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1917, 12), 'tuple_assignment_609327', subscript_call_result_614064)
        
        # Assigning a Name to a Name (line 1917):
        # Getting the type of 'tuple_assignment_609325' (line 1917)
        tuple_assignment_609325_614065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 12), 'tuple_assignment_609325')
        # Assigning a type to the variable 'scale' (line 1917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1917, 12), 'scale', tuple_assignment_609325_614065)
        
        # Assigning a Name to a Name (line 1917):
        # Getting the type of 'tuple_assignment_609326' (line 1917)
        tuple_assignment_609326_614066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 12), 'tuple_assignment_609326')
        # Assigning a type to the variable 'loc' (line 1917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1917, 19), 'loc', tuple_assignment_609326_614066)
        
        # Assigning a Name to a Name (line 1917):
        # Getting the type of 'tuple_assignment_609327' (line 1917)
        tuple_assignment_609327_614067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1917, 12), 'tuple_assignment_609327')
        # Assigning a type to the variable 'goodargs' (line 1917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1917, 24), 'goodargs', tuple_assignment_609327_614067)
        
        # Call to place(...): (line 1918)
        # Processing the call arguments (line 1918)
        # Getting the type of 'output' (line 1918)
        output_614069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 18), 'output', False)
        # Getting the type of 'cond' (line 1918)
        cond_614070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 26), 'cond', False)
        
        # Call to _ppf(...): (line 1918)
        # Getting the type of 'goodargs' (line 1918)
        goodargs_614073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 43), 'goodargs', False)
        # Processing the call keyword arguments (line 1918)
        kwargs_614074 = {}
        # Getting the type of 'self' (line 1918)
        self_614071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 32), 'self', False)
        # Obtaining the member '_ppf' of a type (line 1918)
        _ppf_614072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1918, 32), self_614071, '_ppf')
        # Calling _ppf(args, kwargs) (line 1918)
        _ppf_call_result_614075 = invoke(stypy.reporting.localization.Localization(__file__, 1918, 32), _ppf_614072, *[goodargs_614073], **kwargs_614074)
        
        # Getting the type of 'scale' (line 1918)
        scale_614076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 55), 'scale', False)
        # Applying the binary operator '*' (line 1918)
        result_mul_614077 = python_operator(stypy.reporting.localization.Localization(__file__, 1918, 32), '*', _ppf_call_result_614075, scale_614076)
        
        # Getting the type of 'loc' (line 1918)
        loc_614078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 63), 'loc', False)
        # Applying the binary operator '+' (line 1918)
        result_add_614079 = python_operator(stypy.reporting.localization.Localization(__file__, 1918, 32), '+', result_mul_614077, loc_614078)
        
        # Processing the call keyword arguments (line 1918)
        kwargs_614080 = {}
        # Getting the type of 'place' (line 1918)
        place_614068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1918, 12), 'place', False)
        # Calling place(args, kwargs) (line 1918)
        place_call_result_614081 = invoke(stypy.reporting.localization.Localization(__file__, 1918, 12), place_614068, *[output_614069, cond_614070, result_add_614079], **kwargs_614080)
        
        # SSA join for if statement (line 1915)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 1919)
        output_614082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1919, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 1919)
        ndim_614083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1919, 11), output_614082, 'ndim')
        int_614084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1919, 26), 'int')
        # Applying the binary operator '==' (line 1919)
        result_eq_614085 = python_operator(stypy.reporting.localization.Localization(__file__, 1919, 11), '==', ndim_614083, int_614084)
        
        # Testing the type of an if condition (line 1919)
        if_condition_614086 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1919, 8), result_eq_614085)
        # Assigning a type to the variable 'if_condition_614086' (line 1919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1919, 8), 'if_condition_614086', if_condition_614086)
        # SSA begins for if statement (line 1919)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1920)
        tuple_614087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1920, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1920)
        
        # Getting the type of 'output' (line 1920)
        output_614088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1920, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 1920)
        getitem___614089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1920, 19), output_614088, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1920)
        subscript_call_result_614090 = invoke(stypy.reporting.localization.Localization(__file__, 1920, 19), getitem___614089, tuple_614087)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1920)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1920, 12), 'stypy_return_type', subscript_call_result_614090)
        # SSA join for if statement (line 1919)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 1921)
        output_614091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1921, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 1921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1921, 8), 'stypy_return_type', output_614091)
        
        # ################# End of 'ppf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'ppf' in the type store
        # Getting the type of 'stypy_return_type' (line 1878)
        stypy_return_type_614092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1878, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614092)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'ppf'
        return stypy_return_type_614092


    @norecursion
    def isf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'isf'
        module_type_store = module_type_store.open_function_context('isf', 1923, 4, False)
        # Assigning a type to the variable 'self' (line 1924)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1924, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.isf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.isf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.isf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.isf.__dict__.__setitem__('stypy_function_name', 'rv_continuous.isf')
        rv_continuous.isf.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_continuous.isf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.isf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.isf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.isf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.isf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.isf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.isf', ['q'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'isf', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'isf(...)' code ##################

        str_614093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1944, (-1)), 'str', '\n        Inverse survival function (inverse of `sf`) at q of the given RV.\n\n        Parameters\n        ----------\n        q : array_like\n            upper tail probability\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            location parameter (default=0)\n        scale : array_like, optional\n            scale parameter (default=1)\n\n        Returns\n        -------\n        x : ndarray or scalar\n            Quantile corresponding to the upper tail probability q.\n\n        ')
        
        # Assigning a Call to a Tuple (line 1945):
        
        # Assigning a Subscript to a Name (line 1945):
        
        # Obtaining the type of the subscript
        int_614094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1945, 8), 'int')
        
        # Call to _parse_args(...): (line 1945)
        # Getting the type of 'args' (line 1945)
        args_614097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 45), 'args', False)
        # Processing the call keyword arguments (line 1945)
        # Getting the type of 'kwds' (line 1945)
        kwds_614098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 53), 'kwds', False)
        kwargs_614099 = {'kwds_614098': kwds_614098}
        # Getting the type of 'self' (line 1945)
        self_614095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1945)
        _parse_args_614096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1945, 27), self_614095, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1945)
        _parse_args_call_result_614100 = invoke(stypy.reporting.localization.Localization(__file__, 1945, 27), _parse_args_614096, *[args_614097], **kwargs_614099)
        
        # Obtaining the member '__getitem__' of a type (line 1945)
        getitem___614101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1945, 8), _parse_args_call_result_614100, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1945)
        subscript_call_result_614102 = invoke(stypy.reporting.localization.Localization(__file__, 1945, 8), getitem___614101, int_614094)
        
        # Assigning a type to the variable 'tuple_var_assignment_609328' (line 1945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 8), 'tuple_var_assignment_609328', subscript_call_result_614102)
        
        # Assigning a Subscript to a Name (line 1945):
        
        # Obtaining the type of the subscript
        int_614103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1945, 8), 'int')
        
        # Call to _parse_args(...): (line 1945)
        # Getting the type of 'args' (line 1945)
        args_614106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 45), 'args', False)
        # Processing the call keyword arguments (line 1945)
        # Getting the type of 'kwds' (line 1945)
        kwds_614107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 53), 'kwds', False)
        kwargs_614108 = {'kwds_614107': kwds_614107}
        # Getting the type of 'self' (line 1945)
        self_614104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1945)
        _parse_args_614105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1945, 27), self_614104, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1945)
        _parse_args_call_result_614109 = invoke(stypy.reporting.localization.Localization(__file__, 1945, 27), _parse_args_614105, *[args_614106], **kwargs_614108)
        
        # Obtaining the member '__getitem__' of a type (line 1945)
        getitem___614110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1945, 8), _parse_args_call_result_614109, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1945)
        subscript_call_result_614111 = invoke(stypy.reporting.localization.Localization(__file__, 1945, 8), getitem___614110, int_614103)
        
        # Assigning a type to the variable 'tuple_var_assignment_609329' (line 1945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 8), 'tuple_var_assignment_609329', subscript_call_result_614111)
        
        # Assigning a Subscript to a Name (line 1945):
        
        # Obtaining the type of the subscript
        int_614112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1945, 8), 'int')
        
        # Call to _parse_args(...): (line 1945)
        # Getting the type of 'args' (line 1945)
        args_614115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 45), 'args', False)
        # Processing the call keyword arguments (line 1945)
        # Getting the type of 'kwds' (line 1945)
        kwds_614116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 53), 'kwds', False)
        kwargs_614117 = {'kwds_614116': kwds_614116}
        # Getting the type of 'self' (line 1945)
        self_614113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 27), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 1945)
        _parse_args_614114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1945, 27), self_614113, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 1945)
        _parse_args_call_result_614118 = invoke(stypy.reporting.localization.Localization(__file__, 1945, 27), _parse_args_614114, *[args_614115], **kwargs_614117)
        
        # Obtaining the member '__getitem__' of a type (line 1945)
        getitem___614119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1945, 8), _parse_args_call_result_614118, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1945)
        subscript_call_result_614120 = invoke(stypy.reporting.localization.Localization(__file__, 1945, 8), getitem___614119, int_614112)
        
        # Assigning a type to the variable 'tuple_var_assignment_609330' (line 1945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 8), 'tuple_var_assignment_609330', subscript_call_result_614120)
        
        # Assigning a Name to a Name (line 1945):
        # Getting the type of 'tuple_var_assignment_609328' (line 1945)
        tuple_var_assignment_609328_614121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 8), 'tuple_var_assignment_609328')
        # Assigning a type to the variable 'args' (line 1945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 8), 'args', tuple_var_assignment_609328_614121)
        
        # Assigning a Name to a Name (line 1945):
        # Getting the type of 'tuple_var_assignment_609329' (line 1945)
        tuple_var_assignment_609329_614122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 8), 'tuple_var_assignment_609329')
        # Assigning a type to the variable 'loc' (line 1945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 14), 'loc', tuple_var_assignment_609329_614122)
        
        # Assigning a Name to a Name (line 1945):
        # Getting the type of 'tuple_var_assignment_609330' (line 1945)
        tuple_var_assignment_609330_614123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1945, 8), 'tuple_var_assignment_609330')
        # Assigning a type to the variable 'scale' (line 1945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1945, 19), 'scale', tuple_var_assignment_609330_614123)
        
        # Assigning a Call to a Tuple (line 1946):
        
        # Assigning a Subscript to a Name (line 1946):
        
        # Obtaining the type of the subscript
        int_614124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1946, 8), 'int')
        
        # Call to map(...): (line 1946)
        # Processing the call arguments (line 1946)
        # Getting the type of 'asarray' (line 1946)
        asarray_614126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1946)
        tuple_614127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1946, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1946)
        # Adding element type (line 1946)
        # Getting the type of 'q' (line 1946)
        q_614128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 38), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 38), tuple_614127, q_614128)
        # Adding element type (line 1946)
        # Getting the type of 'loc' (line 1946)
        loc_614129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 38), tuple_614127, loc_614129)
        # Adding element type (line 1946)
        # Getting the type of 'scale' (line 1946)
        scale_614130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 38), tuple_614127, scale_614130)
        
        # Processing the call keyword arguments (line 1946)
        kwargs_614131 = {}
        # Getting the type of 'map' (line 1946)
        map_614125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 24), 'map', False)
        # Calling map(args, kwargs) (line 1946)
        map_call_result_614132 = invoke(stypy.reporting.localization.Localization(__file__, 1946, 24), map_614125, *[asarray_614126, tuple_614127], **kwargs_614131)
        
        # Obtaining the member '__getitem__' of a type (line 1946)
        getitem___614133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1946, 8), map_call_result_614132, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1946)
        subscript_call_result_614134 = invoke(stypy.reporting.localization.Localization(__file__, 1946, 8), getitem___614133, int_614124)
        
        # Assigning a type to the variable 'tuple_var_assignment_609331' (line 1946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1946, 8), 'tuple_var_assignment_609331', subscript_call_result_614134)
        
        # Assigning a Subscript to a Name (line 1946):
        
        # Obtaining the type of the subscript
        int_614135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1946, 8), 'int')
        
        # Call to map(...): (line 1946)
        # Processing the call arguments (line 1946)
        # Getting the type of 'asarray' (line 1946)
        asarray_614137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1946)
        tuple_614138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1946, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1946)
        # Adding element type (line 1946)
        # Getting the type of 'q' (line 1946)
        q_614139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 38), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 38), tuple_614138, q_614139)
        # Adding element type (line 1946)
        # Getting the type of 'loc' (line 1946)
        loc_614140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 38), tuple_614138, loc_614140)
        # Adding element type (line 1946)
        # Getting the type of 'scale' (line 1946)
        scale_614141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 38), tuple_614138, scale_614141)
        
        # Processing the call keyword arguments (line 1946)
        kwargs_614142 = {}
        # Getting the type of 'map' (line 1946)
        map_614136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 24), 'map', False)
        # Calling map(args, kwargs) (line 1946)
        map_call_result_614143 = invoke(stypy.reporting.localization.Localization(__file__, 1946, 24), map_614136, *[asarray_614137, tuple_614138], **kwargs_614142)
        
        # Obtaining the member '__getitem__' of a type (line 1946)
        getitem___614144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1946, 8), map_call_result_614143, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1946)
        subscript_call_result_614145 = invoke(stypy.reporting.localization.Localization(__file__, 1946, 8), getitem___614144, int_614135)
        
        # Assigning a type to the variable 'tuple_var_assignment_609332' (line 1946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1946, 8), 'tuple_var_assignment_609332', subscript_call_result_614145)
        
        # Assigning a Subscript to a Name (line 1946):
        
        # Obtaining the type of the subscript
        int_614146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1946, 8), 'int')
        
        # Call to map(...): (line 1946)
        # Processing the call arguments (line 1946)
        # Getting the type of 'asarray' (line 1946)
        asarray_614148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 28), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1946)
        tuple_614149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1946, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1946)
        # Adding element type (line 1946)
        # Getting the type of 'q' (line 1946)
        q_614150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 38), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 38), tuple_614149, q_614150)
        # Adding element type (line 1946)
        # Getting the type of 'loc' (line 1946)
        loc_614151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 41), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 38), tuple_614149, loc_614151)
        # Adding element type (line 1946)
        # Getting the type of 'scale' (line 1946)
        scale_614152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 46), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1946, 38), tuple_614149, scale_614152)
        
        # Processing the call keyword arguments (line 1946)
        kwargs_614153 = {}
        # Getting the type of 'map' (line 1946)
        map_614147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 24), 'map', False)
        # Calling map(args, kwargs) (line 1946)
        map_call_result_614154 = invoke(stypy.reporting.localization.Localization(__file__, 1946, 24), map_614147, *[asarray_614148, tuple_614149], **kwargs_614153)
        
        # Obtaining the member '__getitem__' of a type (line 1946)
        getitem___614155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1946, 8), map_call_result_614154, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1946)
        subscript_call_result_614156 = invoke(stypy.reporting.localization.Localization(__file__, 1946, 8), getitem___614155, int_614146)
        
        # Assigning a type to the variable 'tuple_var_assignment_609333' (line 1946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1946, 8), 'tuple_var_assignment_609333', subscript_call_result_614156)
        
        # Assigning a Name to a Name (line 1946):
        # Getting the type of 'tuple_var_assignment_609331' (line 1946)
        tuple_var_assignment_609331_614157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 8), 'tuple_var_assignment_609331')
        # Assigning a type to the variable 'q' (line 1946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1946, 8), 'q', tuple_var_assignment_609331_614157)
        
        # Assigning a Name to a Name (line 1946):
        # Getting the type of 'tuple_var_assignment_609332' (line 1946)
        tuple_var_assignment_609332_614158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 8), 'tuple_var_assignment_609332')
        # Assigning a type to the variable 'loc' (line 1946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1946, 11), 'loc', tuple_var_assignment_609332_614158)
        
        # Assigning a Name to a Name (line 1946):
        # Getting the type of 'tuple_var_assignment_609333' (line 1946)
        tuple_var_assignment_609333_614159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1946, 8), 'tuple_var_assignment_609333')
        # Assigning a type to the variable 'scale' (line 1946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1946, 16), 'scale', tuple_var_assignment_609333_614159)
        
        # Assigning a Call to a Name (line 1947):
        
        # Assigning a Call to a Name (line 1947):
        
        # Call to tuple(...): (line 1947)
        # Processing the call arguments (line 1947)
        
        # Call to map(...): (line 1947)
        # Processing the call arguments (line 1947)
        # Getting the type of 'asarray' (line 1947)
        asarray_614162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1947, 25), 'asarray', False)
        # Getting the type of 'args' (line 1947)
        args_614163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1947, 34), 'args', False)
        # Processing the call keyword arguments (line 1947)
        kwargs_614164 = {}
        # Getting the type of 'map' (line 1947)
        map_614161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1947, 21), 'map', False)
        # Calling map(args, kwargs) (line 1947)
        map_call_result_614165 = invoke(stypy.reporting.localization.Localization(__file__, 1947, 21), map_614161, *[asarray_614162, args_614163], **kwargs_614164)
        
        # Processing the call keyword arguments (line 1947)
        kwargs_614166 = {}
        # Getting the type of 'tuple' (line 1947)
        tuple_614160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1947, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1947)
        tuple_call_result_614167 = invoke(stypy.reporting.localization.Localization(__file__, 1947, 15), tuple_614160, *[map_call_result_614165], **kwargs_614166)
        
        # Assigning a type to the variable 'args' (line 1947)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1947, 8), 'args', tuple_call_result_614167)
        
        # Assigning a BinOp to a Name (line 1948):
        
        # Assigning a BinOp to a Name (line 1948):
        
        # Call to _argcheck(...): (line 1948)
        # Getting the type of 'args' (line 1948)
        args_614170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 32), 'args', False)
        # Processing the call keyword arguments (line 1948)
        kwargs_614171 = {}
        # Getting the type of 'self' (line 1948)
        self_614168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1948)
        _argcheck_614169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1948, 16), self_614168, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1948)
        _argcheck_call_result_614172 = invoke(stypy.reporting.localization.Localization(__file__, 1948, 16), _argcheck_614169, *[args_614170], **kwargs_614171)
        
        
        # Getting the type of 'scale' (line 1948)
        scale_614173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 41), 'scale')
        int_614174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1948, 49), 'int')
        # Applying the binary operator '>' (line 1948)
        result_gt_614175 = python_operator(stypy.reporting.localization.Localization(__file__, 1948, 41), '>', scale_614173, int_614174)
        
        # Applying the binary operator '&' (line 1948)
        result_and__614176 = python_operator(stypy.reporting.localization.Localization(__file__, 1948, 16), '&', _argcheck_call_result_614172, result_gt_614175)
        
        
        # Getting the type of 'loc' (line 1948)
        loc_614177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 55), 'loc')
        # Getting the type of 'loc' (line 1948)
        loc_614178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1948, 62), 'loc')
        # Applying the binary operator '==' (line 1948)
        result_eq_614179 = python_operator(stypy.reporting.localization.Localization(__file__, 1948, 55), '==', loc_614177, loc_614178)
        
        # Applying the binary operator '&' (line 1948)
        result_and__614180 = python_operator(stypy.reporting.localization.Localization(__file__, 1948, 52), '&', result_and__614176, result_eq_614179)
        
        # Assigning a type to the variable 'cond0' (line 1948)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1948, 8), 'cond0', result_and__614180)
        
        # Assigning a BinOp to a Name (line 1949):
        
        # Assigning a BinOp to a Name (line 1949):
        
        int_614181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1949, 17), 'int')
        # Getting the type of 'q' (line 1949)
        q_614182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1949, 21), 'q')
        # Applying the binary operator '<' (line 1949)
        result_lt_614183 = python_operator(stypy.reporting.localization.Localization(__file__, 1949, 17), '<', int_614181, q_614182)
        
        
        # Getting the type of 'q' (line 1949)
        q_614184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1949, 27), 'q')
        int_614185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1949, 31), 'int')
        # Applying the binary operator '<' (line 1949)
        result_lt_614186 = python_operator(stypy.reporting.localization.Localization(__file__, 1949, 27), '<', q_614184, int_614185)
        
        # Applying the binary operator '&' (line 1949)
        result_and__614187 = python_operator(stypy.reporting.localization.Localization(__file__, 1949, 16), '&', result_lt_614183, result_lt_614186)
        
        # Assigning a type to the variable 'cond1' (line 1949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1949, 8), 'cond1', result_and__614187)
        
        # Assigning a BinOp to a Name (line 1950):
        
        # Assigning a BinOp to a Name (line 1950):
        # Getting the type of 'cond0' (line 1950)
        cond0_614188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 16), 'cond0')
        
        # Getting the type of 'q' (line 1950)
        q_614189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1950, 25), 'q')
        int_614190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1950, 30), 'int')
        # Applying the binary operator '==' (line 1950)
        result_eq_614191 = python_operator(stypy.reporting.localization.Localization(__file__, 1950, 25), '==', q_614189, int_614190)
        
        # Applying the binary operator '&' (line 1950)
        result_and__614192 = python_operator(stypy.reporting.localization.Localization(__file__, 1950, 16), '&', cond0_614188, result_eq_614191)
        
        # Assigning a type to the variable 'cond2' (line 1950)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1950, 8), 'cond2', result_and__614192)
        
        # Assigning a BinOp to a Name (line 1951):
        
        # Assigning a BinOp to a Name (line 1951):
        # Getting the type of 'cond0' (line 1951)
        cond0_614193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1951, 16), 'cond0')
        
        # Getting the type of 'q' (line 1951)
        q_614194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1951, 25), 'q')
        int_614195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1951, 30), 'int')
        # Applying the binary operator '==' (line 1951)
        result_eq_614196 = python_operator(stypy.reporting.localization.Localization(__file__, 1951, 25), '==', q_614194, int_614195)
        
        # Applying the binary operator '&' (line 1951)
        result_and__614197 = python_operator(stypy.reporting.localization.Localization(__file__, 1951, 16), '&', cond0_614193, result_eq_614196)
        
        # Assigning a type to the variable 'cond3' (line 1951)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1951, 8), 'cond3', result_and__614197)
        
        # Assigning a BinOp to a Name (line 1952):
        
        # Assigning a BinOp to a Name (line 1952):
        # Getting the type of 'cond0' (line 1952)
        cond0_614198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1952, 15), 'cond0')
        # Getting the type of 'cond1' (line 1952)
        cond1_614199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1952, 23), 'cond1')
        # Applying the binary operator '&' (line 1952)
        result_and__614200 = python_operator(stypy.reporting.localization.Localization(__file__, 1952, 15), '&', cond0_614198, cond1_614199)
        
        # Assigning a type to the variable 'cond' (line 1952)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1952, 8), 'cond', result_and__614200)
        
        # Assigning a Call to a Name (line 1953):
        
        # Assigning a Call to a Name (line 1953):
        
        # Call to valarray(...): (line 1953)
        # Processing the call arguments (line 1953)
        
        # Call to shape(...): (line 1953)
        # Processing the call arguments (line 1953)
        # Getting the type of 'cond' (line 1953)
        cond_614203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 32), 'cond', False)
        # Processing the call keyword arguments (line 1953)
        kwargs_614204 = {}
        # Getting the type of 'shape' (line 1953)
        shape_614202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 26), 'shape', False)
        # Calling shape(args, kwargs) (line 1953)
        shape_call_result_614205 = invoke(stypy.reporting.localization.Localization(__file__, 1953, 26), shape_614202, *[cond_614203], **kwargs_614204)
        
        # Processing the call keyword arguments (line 1953)
        # Getting the type of 'self' (line 1953)
        self_614206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 45), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 1953)
        badvalue_614207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1953, 45), self_614206, 'badvalue')
        keyword_614208 = badvalue_614207
        kwargs_614209 = {'value': keyword_614208}
        # Getting the type of 'valarray' (line 1953)
        valarray_614201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1953, 17), 'valarray', False)
        # Calling valarray(args, kwargs) (line 1953)
        valarray_call_result_614210 = invoke(stypy.reporting.localization.Localization(__file__, 1953, 17), valarray_614201, *[shape_call_result_614205], **kwargs_614209)
        
        # Assigning a type to the variable 'output' (line 1953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1953, 8), 'output', valarray_call_result_614210)
        
        # Assigning a BinOp to a Name (line 1955):
        
        # Assigning a BinOp to a Name (line 1955):
        # Getting the type of 'self' (line 1955)
        self_614211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 22), 'self')
        # Obtaining the member 'a' of a type (line 1955)
        a_614212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1955, 22), self_614211, 'a')
        # Getting the type of 'scale' (line 1955)
        scale_614213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 31), 'scale')
        # Applying the binary operator '*' (line 1955)
        result_mul_614214 = python_operator(stypy.reporting.localization.Localization(__file__, 1955, 22), '*', a_614212, scale_614213)
        
        # Getting the type of 'loc' (line 1955)
        loc_614215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1955, 39), 'loc')
        # Applying the binary operator '+' (line 1955)
        result_add_614216 = python_operator(stypy.reporting.localization.Localization(__file__, 1955, 22), '+', result_mul_614214, loc_614215)
        
        # Assigning a type to the variable 'lower_bound' (line 1955)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1955, 8), 'lower_bound', result_add_614216)
        
        # Assigning a BinOp to a Name (line 1956):
        
        # Assigning a BinOp to a Name (line 1956):
        # Getting the type of 'self' (line 1956)
        self_614217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 22), 'self')
        # Obtaining the member 'b' of a type (line 1956)
        b_614218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1956, 22), self_614217, 'b')
        # Getting the type of 'scale' (line 1956)
        scale_614219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 31), 'scale')
        # Applying the binary operator '*' (line 1956)
        result_mul_614220 = python_operator(stypy.reporting.localization.Localization(__file__, 1956, 22), '*', b_614218, scale_614219)
        
        # Getting the type of 'loc' (line 1956)
        loc_614221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1956, 39), 'loc')
        # Applying the binary operator '+' (line 1956)
        result_add_614222 = python_operator(stypy.reporting.localization.Localization(__file__, 1956, 22), '+', result_mul_614220, loc_614221)
        
        # Assigning a type to the variable 'upper_bound' (line 1956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1956, 8), 'upper_bound', result_add_614222)
        
        # Call to place(...): (line 1957)
        # Processing the call arguments (line 1957)
        # Getting the type of 'output' (line 1957)
        output_614224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 14), 'output', False)
        # Getting the type of 'cond2' (line 1957)
        cond2_614225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 22), 'cond2', False)
        
        # Obtaining the type of the subscript
        int_614226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1957, 60), 'int')
        
        # Call to argsreduce(...): (line 1957)
        # Processing the call arguments (line 1957)
        # Getting the type of 'cond2' (line 1957)
        cond2_614228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 40), 'cond2', False)
        # Getting the type of 'lower_bound' (line 1957)
        lower_bound_614229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 47), 'lower_bound', False)
        # Processing the call keyword arguments (line 1957)
        kwargs_614230 = {}
        # Getting the type of 'argsreduce' (line 1957)
        argsreduce_614227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 29), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1957)
        argsreduce_call_result_614231 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 29), argsreduce_614227, *[cond2_614228, lower_bound_614229], **kwargs_614230)
        
        # Obtaining the member '__getitem__' of a type (line 1957)
        getitem___614232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1957, 29), argsreduce_call_result_614231, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1957)
        subscript_call_result_614233 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 29), getitem___614232, int_614226)
        
        # Processing the call keyword arguments (line 1957)
        kwargs_614234 = {}
        # Getting the type of 'place' (line 1957)
        place_614223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1957, 8), 'place', False)
        # Calling place(args, kwargs) (line 1957)
        place_call_result_614235 = invoke(stypy.reporting.localization.Localization(__file__, 1957, 8), place_614223, *[output_614224, cond2_614225, subscript_call_result_614233], **kwargs_614234)
        
        
        # Call to place(...): (line 1958)
        # Processing the call arguments (line 1958)
        # Getting the type of 'output' (line 1958)
        output_614237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 14), 'output', False)
        # Getting the type of 'cond3' (line 1958)
        cond3_614238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 22), 'cond3', False)
        
        # Obtaining the type of the subscript
        int_614239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1958, 60), 'int')
        
        # Call to argsreduce(...): (line 1958)
        # Processing the call arguments (line 1958)
        # Getting the type of 'cond3' (line 1958)
        cond3_614241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 40), 'cond3', False)
        # Getting the type of 'upper_bound' (line 1958)
        upper_bound_614242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 47), 'upper_bound', False)
        # Processing the call keyword arguments (line 1958)
        kwargs_614243 = {}
        # Getting the type of 'argsreduce' (line 1958)
        argsreduce_614240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 29), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1958)
        argsreduce_call_result_614244 = invoke(stypy.reporting.localization.Localization(__file__, 1958, 29), argsreduce_614240, *[cond3_614241, upper_bound_614242], **kwargs_614243)
        
        # Obtaining the member '__getitem__' of a type (line 1958)
        getitem___614245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1958, 29), argsreduce_call_result_614244, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1958)
        subscript_call_result_614246 = invoke(stypy.reporting.localization.Localization(__file__, 1958, 29), getitem___614245, int_614239)
        
        # Processing the call keyword arguments (line 1958)
        kwargs_614247 = {}
        # Getting the type of 'place' (line 1958)
        place_614236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1958, 8), 'place', False)
        # Calling place(args, kwargs) (line 1958)
        place_call_result_614248 = invoke(stypy.reporting.localization.Localization(__file__, 1958, 8), place_614236, *[output_614237, cond3_614238, subscript_call_result_614246], **kwargs_614247)
        
        
        
        # Call to any(...): (line 1960)
        # Processing the call arguments (line 1960)
        # Getting the type of 'cond' (line 1960)
        cond_614251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 18), 'cond', False)
        # Processing the call keyword arguments (line 1960)
        kwargs_614252 = {}
        # Getting the type of 'np' (line 1960)
        np_614249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1960, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1960)
        any_614250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1960, 11), np_614249, 'any')
        # Calling any(args, kwargs) (line 1960)
        any_call_result_614253 = invoke(stypy.reporting.localization.Localization(__file__, 1960, 11), any_614250, *[cond_614251], **kwargs_614252)
        
        # Testing the type of an if condition (line 1960)
        if_condition_614254 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1960, 8), any_call_result_614253)
        # Assigning a type to the variable 'if_condition_614254' (line 1960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1960, 8), 'if_condition_614254', if_condition_614254)
        # SSA begins for if statement (line 1960)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 1961):
        
        # Assigning a Call to a Name (line 1961):
        
        # Call to argsreduce(...): (line 1961)
        # Processing the call arguments (line 1961)
        # Getting the type of 'cond' (line 1961)
        cond_614256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1961)
        tuple_614257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1961, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1961)
        # Adding element type (line 1961)
        # Getting the type of 'q' (line 1961)
        q_614258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 43), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1961, 43), tuple_614257, q_614258)
        
        # Getting the type of 'args' (line 1961)
        args_614259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 47), 'args', False)
        # Applying the binary operator '+' (line 1961)
        result_add_614260 = python_operator(stypy.reporting.localization.Localization(__file__, 1961, 42), '+', tuple_614257, args_614259)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1961)
        tuple_614261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1961, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1961)
        # Adding element type (line 1961)
        # Getting the type of 'scale' (line 1961)
        scale_614262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 53), 'scale', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1961, 53), tuple_614261, scale_614262)
        # Adding element type (line 1961)
        # Getting the type of 'loc' (line 1961)
        loc_614263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 60), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1961, 53), tuple_614261, loc_614263)
        
        # Applying the binary operator '+' (line 1961)
        result_add_614264 = python_operator(stypy.reporting.localization.Localization(__file__, 1961, 51), '+', result_add_614260, tuple_614261)
        
        # Processing the call keyword arguments (line 1961)
        kwargs_614265 = {}
        # Getting the type of 'argsreduce' (line 1961)
        argsreduce_614255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1961, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 1961)
        argsreduce_call_result_614266 = invoke(stypy.reporting.localization.Localization(__file__, 1961, 23), argsreduce_614255, *[cond_614256, result_add_614264], **kwargs_614265)
        
        # Assigning a type to the variable 'goodargs' (line 1961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1961, 12), 'goodargs', argsreduce_call_result_614266)
        
        # Assigning a Tuple to a Tuple (line 1962):
        
        # Assigning a Subscript to a Name (line 1962):
        
        # Obtaining the type of the subscript
        int_614267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1962, 44), 'int')
        # Getting the type of 'goodargs' (line 1962)
        goodargs_614268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 35), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1962)
        getitem___614269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1962, 35), goodargs_614268, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1962)
        subscript_call_result_614270 = invoke(stypy.reporting.localization.Localization(__file__, 1962, 35), getitem___614269, int_614267)
        
        # Assigning a type to the variable 'tuple_assignment_609334' (line 1962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1962, 12), 'tuple_assignment_609334', subscript_call_result_614270)
        
        # Assigning a Subscript to a Name (line 1962):
        
        # Obtaining the type of the subscript
        int_614271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1962, 58), 'int')
        # Getting the type of 'goodargs' (line 1962)
        goodargs_614272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 49), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1962)
        getitem___614273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1962, 49), goodargs_614272, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1962)
        subscript_call_result_614274 = invoke(stypy.reporting.localization.Localization(__file__, 1962, 49), getitem___614273, int_614271)
        
        # Assigning a type to the variable 'tuple_assignment_609335' (line 1962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1962, 12), 'tuple_assignment_609335', subscript_call_result_614274)
        
        # Assigning a Subscript to a Name (line 1962):
        
        # Obtaining the type of the subscript
        int_614275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1962, 73), 'int')
        slice_614276 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1962, 63), None, int_614275, None)
        # Getting the type of 'goodargs' (line 1962)
        goodargs_614277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 63), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 1962)
        getitem___614278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1962, 63), goodargs_614277, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1962)
        subscript_call_result_614279 = invoke(stypy.reporting.localization.Localization(__file__, 1962, 63), getitem___614278, slice_614276)
        
        # Assigning a type to the variable 'tuple_assignment_609336' (line 1962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1962, 12), 'tuple_assignment_609336', subscript_call_result_614279)
        
        # Assigning a Name to a Name (line 1962):
        # Getting the type of 'tuple_assignment_609334' (line 1962)
        tuple_assignment_609334_614280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 12), 'tuple_assignment_609334')
        # Assigning a type to the variable 'scale' (line 1962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1962, 12), 'scale', tuple_assignment_609334_614280)
        
        # Assigning a Name to a Name (line 1962):
        # Getting the type of 'tuple_assignment_609335' (line 1962)
        tuple_assignment_609335_614281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 12), 'tuple_assignment_609335')
        # Assigning a type to the variable 'loc' (line 1962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1962, 19), 'loc', tuple_assignment_609335_614281)
        
        # Assigning a Name to a Name (line 1962):
        # Getting the type of 'tuple_assignment_609336' (line 1962)
        tuple_assignment_609336_614282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1962, 12), 'tuple_assignment_609336')
        # Assigning a type to the variable 'goodargs' (line 1962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1962, 24), 'goodargs', tuple_assignment_609336_614282)
        
        # Call to place(...): (line 1963)
        # Processing the call arguments (line 1963)
        # Getting the type of 'output' (line 1963)
        output_614284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 18), 'output', False)
        # Getting the type of 'cond' (line 1963)
        cond_614285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 26), 'cond', False)
        
        # Call to _isf(...): (line 1963)
        # Getting the type of 'goodargs' (line 1963)
        goodargs_614288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 43), 'goodargs', False)
        # Processing the call keyword arguments (line 1963)
        kwargs_614289 = {}
        # Getting the type of 'self' (line 1963)
        self_614286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 32), 'self', False)
        # Obtaining the member '_isf' of a type (line 1963)
        _isf_614287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1963, 32), self_614286, '_isf')
        # Calling _isf(args, kwargs) (line 1963)
        _isf_call_result_614290 = invoke(stypy.reporting.localization.Localization(__file__, 1963, 32), _isf_614287, *[goodargs_614288], **kwargs_614289)
        
        # Getting the type of 'scale' (line 1963)
        scale_614291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 55), 'scale', False)
        # Applying the binary operator '*' (line 1963)
        result_mul_614292 = python_operator(stypy.reporting.localization.Localization(__file__, 1963, 32), '*', _isf_call_result_614290, scale_614291)
        
        # Getting the type of 'loc' (line 1963)
        loc_614293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 63), 'loc', False)
        # Applying the binary operator '+' (line 1963)
        result_add_614294 = python_operator(stypy.reporting.localization.Localization(__file__, 1963, 32), '+', result_mul_614292, loc_614293)
        
        # Processing the call keyword arguments (line 1963)
        kwargs_614295 = {}
        # Getting the type of 'place' (line 1963)
        place_614283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1963, 12), 'place', False)
        # Calling place(args, kwargs) (line 1963)
        place_call_result_614296 = invoke(stypy.reporting.localization.Localization(__file__, 1963, 12), place_614283, *[output_614284, cond_614285, result_add_614294], **kwargs_614295)
        
        # SSA join for if statement (line 1960)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 1964)
        output_614297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1964, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 1964)
        ndim_614298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1964, 11), output_614297, 'ndim')
        int_614299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1964, 26), 'int')
        # Applying the binary operator '==' (line 1964)
        result_eq_614300 = python_operator(stypy.reporting.localization.Localization(__file__, 1964, 11), '==', ndim_614298, int_614299)
        
        # Testing the type of an if condition (line 1964)
        if_condition_614301 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1964, 8), result_eq_614300)
        # Assigning a type to the variable 'if_condition_614301' (line 1964)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1964, 8), 'if_condition_614301', if_condition_614301)
        # SSA begins for if statement (line 1964)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 1965)
        tuple_614302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1965, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1965)
        
        # Getting the type of 'output' (line 1965)
        output_614303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1965, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 1965)
        getitem___614304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1965, 19), output_614303, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1965)
        subscript_call_result_614305 = invoke(stypy.reporting.localization.Localization(__file__, 1965, 19), getitem___614304, tuple_614302)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1965, 12), 'stypy_return_type', subscript_call_result_614305)
        # SSA join for if statement (line 1964)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 1966)
        output_614306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1966, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 1966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1966, 8), 'stypy_return_type', output_614306)
        
        # ################# End of 'isf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'isf' in the type store
        # Getting the type of 'stypy_return_type' (line 1923)
        stypy_return_type_614307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1923, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614307)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'isf'
        return stypy_return_type_614307


    @norecursion
    def _nnlf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_nnlf'
        module_type_store = module_type_store.open_function_context('_nnlf', 1968, 4, False)
        # Assigning a type to the variable 'self' (line 1969)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1969, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._nnlf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._nnlf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._nnlf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._nnlf.__dict__.__setitem__('stypy_function_name', 'rv_continuous._nnlf')
        rv_continuous._nnlf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_continuous._nnlf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._nnlf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._nnlf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._nnlf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._nnlf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._nnlf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._nnlf', ['x'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_nnlf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_nnlf(...)' code ##################

        
        
        # Call to sum(...): (line 1969)
        # Processing the call arguments (line 1969)
        
        # Call to _logpdf(...): (line 1969)
        # Processing the call arguments (line 1969)
        # Getting the type of 'x' (line 1969)
        x_614312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1969, 36), 'x', False)
        # Getting the type of 'args' (line 1969)
        args_614313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1969, 40), 'args', False)
        # Processing the call keyword arguments (line 1969)
        kwargs_614314 = {}
        # Getting the type of 'self' (line 1969)
        self_614310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1969, 23), 'self', False)
        # Obtaining the member '_logpdf' of a type (line 1969)
        _logpdf_614311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1969, 23), self_614310, '_logpdf')
        # Calling _logpdf(args, kwargs) (line 1969)
        _logpdf_call_result_614315 = invoke(stypy.reporting.localization.Localization(__file__, 1969, 23), _logpdf_614311, *[x_614312, args_614313], **kwargs_614314)
        
        # Processing the call keyword arguments (line 1969)
        int_614316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1969, 52), 'int')
        keyword_614317 = int_614316
        kwargs_614318 = {'axis': keyword_614317}
        # Getting the type of 'np' (line 1969)
        np_614308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1969, 16), 'np', False)
        # Obtaining the member 'sum' of a type (line 1969)
        sum_614309 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1969, 16), np_614308, 'sum')
        # Calling sum(args, kwargs) (line 1969)
        sum_call_result_614319 = invoke(stypy.reporting.localization.Localization(__file__, 1969, 16), sum_614309, *[_logpdf_call_result_614315], **kwargs_614318)
        
        # Applying the 'usub' unary operator (line 1969)
        result___neg___614320 = python_operator(stypy.reporting.localization.Localization(__file__, 1969, 15), 'usub', sum_call_result_614319)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1969)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1969, 8), 'stypy_return_type', result___neg___614320)
        
        # ################# End of '_nnlf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_nnlf' in the type store
        # Getting the type of 'stypy_return_type' (line 1968)
        stypy_return_type_614321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1968, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614321)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_nnlf'
        return stypy_return_type_614321


    @norecursion
    def _unpack_loc_scale(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_unpack_loc_scale'
        module_type_store = module_type_store.open_function_context('_unpack_loc_scale', 1971, 4, False)
        # Assigning a type to the variable 'self' (line 1972)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1972, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_function_name', 'rv_continuous._unpack_loc_scale')
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_param_names_list', ['theta'])
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._unpack_loc_scale.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._unpack_loc_scale', ['theta'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_unpack_loc_scale', localization, ['theta'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_unpack_loc_scale(...)' code ##################

        
        
        # SSA begins for try-except statement (line 1972)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Subscript to a Name (line 1973):
        
        # Assigning a Subscript to a Name (line 1973):
        
        # Obtaining the type of the subscript
        int_614322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1973, 24), 'int')
        # Getting the type of 'theta' (line 1973)
        theta_614323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1973, 18), 'theta')
        # Obtaining the member '__getitem__' of a type (line 1973)
        getitem___614324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1973, 18), theta_614323, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1973)
        subscript_call_result_614325 = invoke(stypy.reporting.localization.Localization(__file__, 1973, 18), getitem___614324, int_614322)
        
        # Assigning a type to the variable 'loc' (line 1973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1973, 12), 'loc', subscript_call_result_614325)
        
        # Assigning a Subscript to a Name (line 1974):
        
        # Assigning a Subscript to a Name (line 1974):
        
        # Obtaining the type of the subscript
        int_614326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1974, 26), 'int')
        # Getting the type of 'theta' (line 1974)
        theta_614327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1974, 20), 'theta')
        # Obtaining the member '__getitem__' of a type (line 1974)
        getitem___614328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1974, 20), theta_614327, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1974)
        subscript_call_result_614329 = invoke(stypy.reporting.localization.Localization(__file__, 1974, 20), getitem___614328, int_614326)
        
        # Assigning a type to the variable 'scale' (line 1974)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1974, 12), 'scale', subscript_call_result_614329)
        
        # Assigning a Call to a Name (line 1975):
        
        # Assigning a Call to a Name (line 1975):
        
        # Call to tuple(...): (line 1975)
        # Processing the call arguments (line 1975)
        
        # Obtaining the type of the subscript
        int_614331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1975, 32), 'int')
        slice_614332 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1975, 25), None, int_614331, None)
        # Getting the type of 'theta' (line 1975)
        theta_614333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1975, 25), 'theta', False)
        # Obtaining the member '__getitem__' of a type (line 1975)
        getitem___614334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1975, 25), theta_614333, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1975)
        subscript_call_result_614335 = invoke(stypy.reporting.localization.Localization(__file__, 1975, 25), getitem___614334, slice_614332)
        
        # Processing the call keyword arguments (line 1975)
        kwargs_614336 = {}
        # Getting the type of 'tuple' (line 1975)
        tuple_614330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1975, 19), 'tuple', False)
        # Calling tuple(args, kwargs) (line 1975)
        tuple_call_result_614337 = invoke(stypy.reporting.localization.Localization(__file__, 1975, 19), tuple_614330, *[subscript_call_result_614335], **kwargs_614336)
        
        # Assigning a type to the variable 'args' (line 1975)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1975, 12), 'args', tuple_call_result_614337)
        # SSA branch for the except part of a try statement (line 1972)
        # SSA branch for the except 'IndexError' branch of a try statement (line 1972)
        module_type_store.open_ssa_branch('except')
        
        # Call to ValueError(...): (line 1977)
        # Processing the call arguments (line 1977)
        str_614339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1977, 29), 'str', 'Not enough input arguments.')
        # Processing the call keyword arguments (line 1977)
        kwargs_614340 = {}
        # Getting the type of 'ValueError' (line 1977)
        ValueError_614338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1977, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 1977)
        ValueError_call_result_614341 = invoke(stypy.reporting.localization.Localization(__file__, 1977, 18), ValueError_614338, *[str_614339], **kwargs_614340)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1977, 12), ValueError_call_result_614341, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 1972)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1978)
        tuple_614342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1978, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1978)
        # Adding element type (line 1978)
        # Getting the type of 'loc' (line 1978)
        loc_614343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 15), 'loc')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1978, 15), tuple_614342, loc_614343)
        # Adding element type (line 1978)
        # Getting the type of 'scale' (line 1978)
        scale_614344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 20), 'scale')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1978, 15), tuple_614342, scale_614344)
        # Adding element type (line 1978)
        # Getting the type of 'args' (line 1978)
        args_614345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1978, 27), 'args')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1978, 15), tuple_614342, args_614345)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1978)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1978, 8), 'stypy_return_type', tuple_614342)
        
        # ################# End of '_unpack_loc_scale(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_unpack_loc_scale' in the type store
        # Getting the type of 'stypy_return_type' (line 1971)
        stypy_return_type_614346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1971, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614346)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_unpack_loc_scale'
        return stypy_return_type_614346


    @norecursion
    def nnlf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'nnlf'
        module_type_store = module_type_store.open_function_context('nnlf', 1980, 4, False)
        # Assigning a type to the variable 'self' (line 1981)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1981, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.nnlf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.nnlf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.nnlf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.nnlf.__dict__.__setitem__('stypy_function_name', 'rv_continuous.nnlf')
        rv_continuous.nnlf.__dict__.__setitem__('stypy_param_names_list', ['theta', 'x'])
        rv_continuous.nnlf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_continuous.nnlf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous.nnlf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.nnlf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.nnlf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.nnlf.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.nnlf', ['theta', 'x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'nnlf', localization, ['theta', 'x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'nnlf(...)' code ##################

        str_614347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1987, (-1)), 'str', 'Return negative loglikelihood function.\n\n        Notes\n        -----\n        This is ``-sum(log pdf(x, theta), axis=0)`` where `theta` are the\n        parameters (including loc and scale).\n        ')
        
        # Assigning a Call to a Tuple (line 1988):
        
        # Assigning a Subscript to a Name (line 1988):
        
        # Obtaining the type of the subscript
        int_614348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1988, 8), 'int')
        
        # Call to _unpack_loc_scale(...): (line 1988)
        # Processing the call arguments (line 1988)
        # Getting the type of 'theta' (line 1988)
        theta_614351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 50), 'theta', False)
        # Processing the call keyword arguments (line 1988)
        kwargs_614352 = {}
        # Getting the type of 'self' (line 1988)
        self_614349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 27), 'self', False)
        # Obtaining the member '_unpack_loc_scale' of a type (line 1988)
        _unpack_loc_scale_614350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1988, 27), self_614349, '_unpack_loc_scale')
        # Calling _unpack_loc_scale(args, kwargs) (line 1988)
        _unpack_loc_scale_call_result_614353 = invoke(stypy.reporting.localization.Localization(__file__, 1988, 27), _unpack_loc_scale_614350, *[theta_614351], **kwargs_614352)
        
        # Obtaining the member '__getitem__' of a type (line 1988)
        getitem___614354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1988, 8), _unpack_loc_scale_call_result_614353, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1988)
        subscript_call_result_614355 = invoke(stypy.reporting.localization.Localization(__file__, 1988, 8), getitem___614354, int_614348)
        
        # Assigning a type to the variable 'tuple_var_assignment_609337' (line 1988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1988, 8), 'tuple_var_assignment_609337', subscript_call_result_614355)
        
        # Assigning a Subscript to a Name (line 1988):
        
        # Obtaining the type of the subscript
        int_614356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1988, 8), 'int')
        
        # Call to _unpack_loc_scale(...): (line 1988)
        # Processing the call arguments (line 1988)
        # Getting the type of 'theta' (line 1988)
        theta_614359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 50), 'theta', False)
        # Processing the call keyword arguments (line 1988)
        kwargs_614360 = {}
        # Getting the type of 'self' (line 1988)
        self_614357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 27), 'self', False)
        # Obtaining the member '_unpack_loc_scale' of a type (line 1988)
        _unpack_loc_scale_614358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1988, 27), self_614357, '_unpack_loc_scale')
        # Calling _unpack_loc_scale(args, kwargs) (line 1988)
        _unpack_loc_scale_call_result_614361 = invoke(stypy.reporting.localization.Localization(__file__, 1988, 27), _unpack_loc_scale_614358, *[theta_614359], **kwargs_614360)
        
        # Obtaining the member '__getitem__' of a type (line 1988)
        getitem___614362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1988, 8), _unpack_loc_scale_call_result_614361, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1988)
        subscript_call_result_614363 = invoke(stypy.reporting.localization.Localization(__file__, 1988, 8), getitem___614362, int_614356)
        
        # Assigning a type to the variable 'tuple_var_assignment_609338' (line 1988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1988, 8), 'tuple_var_assignment_609338', subscript_call_result_614363)
        
        # Assigning a Subscript to a Name (line 1988):
        
        # Obtaining the type of the subscript
        int_614364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1988, 8), 'int')
        
        # Call to _unpack_loc_scale(...): (line 1988)
        # Processing the call arguments (line 1988)
        # Getting the type of 'theta' (line 1988)
        theta_614367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 50), 'theta', False)
        # Processing the call keyword arguments (line 1988)
        kwargs_614368 = {}
        # Getting the type of 'self' (line 1988)
        self_614365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 27), 'self', False)
        # Obtaining the member '_unpack_loc_scale' of a type (line 1988)
        _unpack_loc_scale_614366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1988, 27), self_614365, '_unpack_loc_scale')
        # Calling _unpack_loc_scale(args, kwargs) (line 1988)
        _unpack_loc_scale_call_result_614369 = invoke(stypy.reporting.localization.Localization(__file__, 1988, 27), _unpack_loc_scale_614366, *[theta_614367], **kwargs_614368)
        
        # Obtaining the member '__getitem__' of a type (line 1988)
        getitem___614370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1988, 8), _unpack_loc_scale_call_result_614369, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1988)
        subscript_call_result_614371 = invoke(stypy.reporting.localization.Localization(__file__, 1988, 8), getitem___614370, int_614364)
        
        # Assigning a type to the variable 'tuple_var_assignment_609339' (line 1988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1988, 8), 'tuple_var_assignment_609339', subscript_call_result_614371)
        
        # Assigning a Name to a Name (line 1988):
        # Getting the type of 'tuple_var_assignment_609337' (line 1988)
        tuple_var_assignment_609337_614372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 8), 'tuple_var_assignment_609337')
        # Assigning a type to the variable 'loc' (line 1988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1988, 8), 'loc', tuple_var_assignment_609337_614372)
        
        # Assigning a Name to a Name (line 1988):
        # Getting the type of 'tuple_var_assignment_609338' (line 1988)
        tuple_var_assignment_609338_614373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 8), 'tuple_var_assignment_609338')
        # Assigning a type to the variable 'scale' (line 1988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1988, 13), 'scale', tuple_var_assignment_609338_614373)
        
        # Assigning a Name to a Name (line 1988):
        # Getting the type of 'tuple_var_assignment_609339' (line 1988)
        tuple_var_assignment_609339_614374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1988, 8), 'tuple_var_assignment_609339')
        # Assigning a type to the variable 'args' (line 1988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1988, 20), 'args', tuple_var_assignment_609339_614374)
        
        
        # Evaluating a boolean operation
        
        
        # Call to _argcheck(...): (line 1989)
        # Getting the type of 'args' (line 1989)
        args_614377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1989, 31), 'args', False)
        # Processing the call keyword arguments (line 1989)
        kwargs_614378 = {}
        # Getting the type of 'self' (line 1989)
        self_614375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1989, 15), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 1989)
        _argcheck_614376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1989, 15), self_614375, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 1989)
        _argcheck_call_result_614379 = invoke(stypy.reporting.localization.Localization(__file__, 1989, 15), _argcheck_614376, *[args_614377], **kwargs_614378)
        
        # Applying the 'not' unary operator (line 1989)
        result_not__614380 = python_operator(stypy.reporting.localization.Localization(__file__, 1989, 11), 'not', _argcheck_call_result_614379)
        
        
        # Getting the type of 'scale' (line 1989)
        scale_614381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1989, 40), 'scale')
        int_614382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1989, 49), 'int')
        # Applying the binary operator '<=' (line 1989)
        result_le_614383 = python_operator(stypy.reporting.localization.Localization(__file__, 1989, 40), '<=', scale_614381, int_614382)
        
        # Applying the binary operator 'or' (line 1989)
        result_or_keyword_614384 = python_operator(stypy.reporting.localization.Localization(__file__, 1989, 11), 'or', result_not__614380, result_le_614383)
        
        # Testing the type of an if condition (line 1989)
        if_condition_614385 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1989, 8), result_or_keyword_614384)
        # Assigning a type to the variable 'if_condition_614385' (line 1989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1989, 8), 'if_condition_614385', if_condition_614385)
        # SSA begins for if statement (line 1989)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'inf' (line 1990)
        inf_614386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1990, 19), 'inf')
        # Assigning a type to the variable 'stypy_return_type' (line 1990)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1990, 12), 'stypy_return_type', inf_614386)
        # SSA join for if statement (line 1989)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 1991):
        
        # Assigning a Call to a Name (line 1991):
        
        # Call to asarray(...): (line 1991)
        # Processing the call arguments (line 1991)
        # Getting the type of 'x' (line 1991)
        x_614388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 21), 'x', False)
        # Getting the type of 'loc' (line 1991)
        loc_614389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 23), 'loc', False)
        # Applying the binary operator '-' (line 1991)
        result_sub_614390 = python_operator(stypy.reporting.localization.Localization(__file__, 1991, 21), '-', x_614388, loc_614389)
        
        # Getting the type of 'scale' (line 1991)
        scale_614391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 30), 'scale', False)
        # Applying the binary operator 'div' (line 1991)
        result_div_614392 = python_operator(stypy.reporting.localization.Localization(__file__, 1991, 20), 'div', result_sub_614390, scale_614391)
        
        # Processing the call keyword arguments (line 1991)
        kwargs_614393 = {}
        # Getting the type of 'asarray' (line 1991)
        asarray_614387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1991, 12), 'asarray', False)
        # Calling asarray(args, kwargs) (line 1991)
        asarray_call_result_614394 = invoke(stypy.reporting.localization.Localization(__file__, 1991, 12), asarray_614387, *[result_div_614392], **kwargs_614393)
        
        # Assigning a type to the variable 'x' (line 1991)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1991, 8), 'x', asarray_call_result_614394)
        
        # Assigning a BinOp to a Name (line 1992):
        
        # Assigning a BinOp to a Name (line 1992):
        
        # Call to len(...): (line 1992)
        # Processing the call arguments (line 1992)
        # Getting the type of 'x' (line 1992)
        x_614396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 26), 'x', False)
        # Processing the call keyword arguments (line 1992)
        kwargs_614397 = {}
        # Getting the type of 'len' (line 1992)
        len_614395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 22), 'len', False)
        # Calling len(args, kwargs) (line 1992)
        len_call_result_614398 = invoke(stypy.reporting.localization.Localization(__file__, 1992, 22), len_614395, *[x_614396], **kwargs_614397)
        
        
        # Call to log(...): (line 1992)
        # Processing the call arguments (line 1992)
        # Getting the type of 'scale' (line 1992)
        scale_614400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 35), 'scale', False)
        # Processing the call keyword arguments (line 1992)
        kwargs_614401 = {}
        # Getting the type of 'log' (line 1992)
        log_614399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1992, 31), 'log', False)
        # Calling log(args, kwargs) (line 1992)
        log_call_result_614402 = invoke(stypy.reporting.localization.Localization(__file__, 1992, 31), log_614399, *[scale_614400], **kwargs_614401)
        
        # Applying the binary operator '*' (line 1992)
        result_mul_614403 = python_operator(stypy.reporting.localization.Localization(__file__, 1992, 22), '*', len_call_result_614398, log_call_result_614402)
        
        # Assigning a type to the variable 'n_log_scale' (line 1992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1992, 8), 'n_log_scale', result_mul_614403)
        
        
        # Call to any(...): (line 1993)
        # Processing the call arguments (line 1993)
        
        
        # Call to _support_mask(...): (line 1993)
        # Processing the call arguments (line 1993)
        # Getting the type of 'x' (line 1993)
        x_614408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1993, 38), 'x', False)
        # Processing the call keyword arguments (line 1993)
        kwargs_614409 = {}
        # Getting the type of 'self' (line 1993)
        self_614406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1993, 19), 'self', False)
        # Obtaining the member '_support_mask' of a type (line 1993)
        _support_mask_614407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1993, 19), self_614406, '_support_mask')
        # Calling _support_mask(args, kwargs) (line 1993)
        _support_mask_call_result_614410 = invoke(stypy.reporting.localization.Localization(__file__, 1993, 19), _support_mask_614407, *[x_614408], **kwargs_614409)
        
        # Applying the '~' unary operator (line 1993)
        result_inv_614411 = python_operator(stypy.reporting.localization.Localization(__file__, 1993, 18), '~', _support_mask_call_result_614410)
        
        # Processing the call keyword arguments (line 1993)
        kwargs_614412 = {}
        # Getting the type of 'np' (line 1993)
        np_614404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1993, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 1993)
        any_614405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1993, 11), np_614404, 'any')
        # Calling any(args, kwargs) (line 1993)
        any_call_result_614413 = invoke(stypy.reporting.localization.Localization(__file__, 1993, 11), any_614405, *[result_inv_614411], **kwargs_614412)
        
        # Testing the type of an if condition (line 1993)
        if_condition_614414 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1993, 8), any_call_result_614413)
        # Assigning a type to the variable 'if_condition_614414' (line 1993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1993, 8), 'if_condition_614414', if_condition_614414)
        # SSA begins for if statement (line 1993)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'inf' (line 1994)
        inf_614415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1994, 19), 'inf')
        # Assigning a type to the variable 'stypy_return_type' (line 1994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1994, 12), 'stypy_return_type', inf_614415)
        # SSA join for if statement (line 1993)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to _nnlf(...): (line 1995)
        # Processing the call arguments (line 1995)
        # Getting the type of 'x' (line 1995)
        x_614418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1995, 26), 'x', False)
        # Getting the type of 'args' (line 1995)
        args_614419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1995, 30), 'args', False)
        # Processing the call keyword arguments (line 1995)
        kwargs_614420 = {}
        # Getting the type of 'self' (line 1995)
        self_614416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1995, 15), 'self', False)
        # Obtaining the member '_nnlf' of a type (line 1995)
        _nnlf_614417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1995, 15), self_614416, '_nnlf')
        # Calling _nnlf(args, kwargs) (line 1995)
        _nnlf_call_result_614421 = invoke(stypy.reporting.localization.Localization(__file__, 1995, 15), _nnlf_614417, *[x_614418, args_614419], **kwargs_614420)
        
        # Getting the type of 'n_log_scale' (line 1995)
        n_log_scale_614422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1995, 38), 'n_log_scale')
        # Applying the binary operator '+' (line 1995)
        result_add_614423 = python_operator(stypy.reporting.localization.Localization(__file__, 1995, 15), '+', _nnlf_call_result_614421, n_log_scale_614422)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1995, 8), 'stypy_return_type', result_add_614423)
        
        # ################# End of 'nnlf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'nnlf' in the type store
        # Getting the type of 'stypy_return_type' (line 1980)
        stypy_return_type_614424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1980, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614424)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'nnlf'
        return stypy_return_type_614424


    @norecursion
    def _nnlf_and_penalty(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_nnlf_and_penalty'
        module_type_store = module_type_store.open_function_context('_nnlf_and_penalty', 1997, 4, False)
        # Assigning a type to the variable 'self' (line 1998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1998, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_function_name', 'rv_continuous._nnlf_and_penalty')
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_param_names_list', ['x', 'args'])
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._nnlf_and_penalty.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._nnlf_and_penalty', ['x', 'args'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_nnlf_and_penalty', localization, ['x', 'args'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_nnlf_and_penalty(...)' code ##################

        
        # Assigning a UnaryOp to a Name (line 1998):
        
        # Assigning a UnaryOp to a Name (line 1998):
        
        
        # Call to _support_mask(...): (line 1998)
        # Processing the call arguments (line 1998)
        # Getting the type of 'x' (line 1998)
        x_614427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1998, 36), 'x', False)
        # Processing the call keyword arguments (line 1998)
        kwargs_614428 = {}
        # Getting the type of 'self' (line 1998)
        self_614425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1998, 17), 'self', False)
        # Obtaining the member '_support_mask' of a type (line 1998)
        _support_mask_614426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1998, 17), self_614425, '_support_mask')
        # Calling _support_mask(args, kwargs) (line 1998)
        _support_mask_call_result_614429 = invoke(stypy.reporting.localization.Localization(__file__, 1998, 17), _support_mask_614426, *[x_614427], **kwargs_614428)
        
        # Applying the '~' unary operator (line 1998)
        result_inv_614430 = python_operator(stypy.reporting.localization.Localization(__file__, 1998, 16), '~', _support_mask_call_result_614429)
        
        # Assigning a type to the variable 'cond0' (line 1998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1998, 8), 'cond0', result_inv_614430)
        
        # Assigning a Call to a Name (line 1999):
        
        # Assigning a Call to a Name (line 1999):
        
        # Call to count_nonzero(...): (line 1999)
        # Processing the call arguments (line 1999)
        # Getting the type of 'cond0' (line 1999)
        cond0_614433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 33), 'cond0', False)
        # Processing the call keyword arguments (line 1999)
        int_614434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1999, 45), 'int')
        keyword_614435 = int_614434
        kwargs_614436 = {'axis': keyword_614435}
        # Getting the type of 'np' (line 1999)
        np_614431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1999, 16), 'np', False)
        # Obtaining the member 'count_nonzero' of a type (line 1999)
        count_nonzero_614432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1999, 16), np_614431, 'count_nonzero')
        # Calling count_nonzero(args, kwargs) (line 1999)
        count_nonzero_call_result_614437 = invoke(stypy.reporting.localization.Localization(__file__, 1999, 16), count_nonzero_614432, *[cond0_614433], **kwargs_614436)
        
        # Assigning a type to the variable 'n_bad' (line 1999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1999, 8), 'n_bad', count_nonzero_call_result_614437)
        
        
        # Getting the type of 'n_bad' (line 2000)
        n_bad_614438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2000, 11), 'n_bad')
        int_614439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2000, 19), 'int')
        # Applying the binary operator '>' (line 2000)
        result_gt_614440 = python_operator(stypy.reporting.localization.Localization(__file__, 2000, 11), '>', n_bad_614438, int_614439)
        
        # Testing the type of an if condition (line 2000)
        if_condition_614441 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2000, 8), result_gt_614440)
        # Assigning a type to the variable 'if_condition_614441' (line 2000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2000, 8), 'if_condition_614441', if_condition_614441)
        # SSA begins for if statement (line 2000)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 2001):
        
        # Assigning a Subscript to a Name (line 2001):
        
        # Obtaining the type of the subscript
        int_614442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2001, 38), 'int')
        
        # Call to argsreduce(...): (line 2001)
        # Processing the call arguments (line 2001)
        
        # Getting the type of 'cond0' (line 2001)
        cond0_614444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 28), 'cond0', False)
        # Applying the '~' unary operator (line 2001)
        result_inv_614445 = python_operator(stypy.reporting.localization.Localization(__file__, 2001, 27), '~', cond0_614444)
        
        # Getting the type of 'x' (line 2001)
        x_614446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 35), 'x', False)
        # Processing the call keyword arguments (line 2001)
        kwargs_614447 = {}
        # Getting the type of 'argsreduce' (line 2001)
        argsreduce_614443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2001, 16), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 2001)
        argsreduce_call_result_614448 = invoke(stypy.reporting.localization.Localization(__file__, 2001, 16), argsreduce_614443, *[result_inv_614445, x_614446], **kwargs_614447)
        
        # Obtaining the member '__getitem__' of a type (line 2001)
        getitem___614449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2001, 16), argsreduce_call_result_614448, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2001)
        subscript_call_result_614450 = invoke(stypy.reporting.localization.Localization(__file__, 2001, 16), getitem___614449, int_614442)
        
        # Assigning a type to the variable 'x' (line 2001)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2001, 12), 'x', subscript_call_result_614450)
        # SSA join for if statement (line 2000)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2002):
        
        # Assigning a Call to a Name (line 2002):
        
        # Call to _logpdf(...): (line 2002)
        # Processing the call arguments (line 2002)
        # Getting the type of 'x' (line 2002)
        x_614453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 30), 'x', False)
        # Getting the type of 'args' (line 2002)
        args_614454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 34), 'args', False)
        # Processing the call keyword arguments (line 2002)
        kwargs_614455 = {}
        # Getting the type of 'self' (line 2002)
        self_614451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2002, 17), 'self', False)
        # Obtaining the member '_logpdf' of a type (line 2002)
        _logpdf_614452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2002, 17), self_614451, '_logpdf')
        # Calling _logpdf(args, kwargs) (line 2002)
        _logpdf_call_result_614456 = invoke(stypy.reporting.localization.Localization(__file__, 2002, 17), _logpdf_614452, *[x_614453, args_614454], **kwargs_614455)
        
        # Assigning a type to the variable 'logpdf' (line 2002)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2002, 8), 'logpdf', _logpdf_call_result_614456)
        
        # Assigning a Call to a Name (line 2003):
        
        # Assigning a Call to a Name (line 2003):
        
        # Call to isfinite(...): (line 2003)
        # Processing the call arguments (line 2003)
        # Getting the type of 'logpdf' (line 2003)
        logpdf_614459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2003, 36), 'logpdf', False)
        # Processing the call keyword arguments (line 2003)
        kwargs_614460 = {}
        # Getting the type of 'np' (line 2003)
        np_614457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2003, 24), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 2003)
        isfinite_614458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2003, 24), np_614457, 'isfinite')
        # Calling isfinite(args, kwargs) (line 2003)
        isfinite_call_result_614461 = invoke(stypy.reporting.localization.Localization(__file__, 2003, 24), isfinite_614458, *[logpdf_614459], **kwargs_614460)
        
        # Assigning a type to the variable 'finite_logpdf' (line 2003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2003, 8), 'finite_logpdf', isfinite_call_result_614461)
        
        # Getting the type of 'n_bad' (line 2004)
        n_bad_614462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 8), 'n_bad')
        
        # Call to sum(...): (line 2004)
        # Processing the call arguments (line 2004)
        
        # Getting the type of 'finite_logpdf' (line 2004)
        finite_logpdf_614465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 25), 'finite_logpdf', False)
        # Applying the '~' unary operator (line 2004)
        result_inv_614466 = python_operator(stypy.reporting.localization.Localization(__file__, 2004, 24), '~', finite_logpdf_614465)
        
        # Processing the call keyword arguments (line 2004)
        int_614467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2004, 45), 'int')
        keyword_614468 = int_614467
        kwargs_614469 = {'axis': keyword_614468}
        # Getting the type of 'np' (line 2004)
        np_614463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2004, 17), 'np', False)
        # Obtaining the member 'sum' of a type (line 2004)
        sum_614464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2004, 17), np_614463, 'sum')
        # Calling sum(args, kwargs) (line 2004)
        sum_call_result_614470 = invoke(stypy.reporting.localization.Localization(__file__, 2004, 17), sum_614464, *[result_inv_614466], **kwargs_614469)
        
        # Applying the binary operator '+=' (line 2004)
        result_iadd_614471 = python_operator(stypy.reporting.localization.Localization(__file__, 2004, 8), '+=', n_bad_614462, sum_call_result_614470)
        # Assigning a type to the variable 'n_bad' (line 2004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2004, 8), 'n_bad', result_iadd_614471)
        
        
        
        # Getting the type of 'n_bad' (line 2005)
        n_bad_614472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2005, 11), 'n_bad')
        int_614473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2005, 19), 'int')
        # Applying the binary operator '>' (line 2005)
        result_gt_614474 = python_operator(stypy.reporting.localization.Localization(__file__, 2005, 11), '>', n_bad_614472, int_614473)
        
        # Testing the type of an if condition (line 2005)
        if_condition_614475 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2005, 8), result_gt_614474)
        # Assigning a type to the variable 'if_condition_614475' (line 2005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2005, 8), 'if_condition_614475', if_condition_614475)
        # SSA begins for if statement (line 2005)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 2006):
        
        # Assigning a BinOp to a Name (line 2006):
        # Getting the type of 'n_bad' (line 2006)
        n_bad_614476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2006, 22), 'n_bad')
        
        # Call to log(...): (line 2006)
        # Processing the call arguments (line 2006)
        # Getting the type of '_XMAX' (line 2006)
        _XMAX_614478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2006, 34), '_XMAX', False)
        # Processing the call keyword arguments (line 2006)
        kwargs_614479 = {}
        # Getting the type of 'log' (line 2006)
        log_614477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2006, 30), 'log', False)
        # Calling log(args, kwargs) (line 2006)
        log_call_result_614480 = invoke(stypy.reporting.localization.Localization(__file__, 2006, 30), log_614477, *[_XMAX_614478], **kwargs_614479)
        
        # Applying the binary operator '*' (line 2006)
        result_mul_614481 = python_operator(stypy.reporting.localization.Localization(__file__, 2006, 22), '*', n_bad_614476, log_call_result_614480)
        
        int_614482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2006, 43), 'int')
        # Applying the binary operator '*' (line 2006)
        result_mul_614483 = python_operator(stypy.reporting.localization.Localization(__file__, 2006, 41), '*', result_mul_614481, int_614482)
        
        # Assigning a type to the variable 'penalty' (line 2006)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2006, 12), 'penalty', result_mul_614483)
        
        
        # Call to sum(...): (line 2007)
        # Processing the call arguments (line 2007)
        
        # Obtaining the type of the subscript
        # Getting the type of 'finite_logpdf' (line 2007)
        finite_logpdf_614486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 34), 'finite_logpdf', False)
        # Getting the type of 'logpdf' (line 2007)
        logpdf_614487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 27), 'logpdf', False)
        # Obtaining the member '__getitem__' of a type (line 2007)
        getitem___614488 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2007, 27), logpdf_614487, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2007)
        subscript_call_result_614489 = invoke(stypy.reporting.localization.Localization(__file__, 2007, 27), getitem___614488, finite_logpdf_614486)
        
        # Processing the call keyword arguments (line 2007)
        int_614490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2007, 55), 'int')
        keyword_614491 = int_614490
        kwargs_614492 = {'axis': keyword_614491}
        # Getting the type of 'np' (line 2007)
        np_614484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 20), 'np', False)
        # Obtaining the member 'sum' of a type (line 2007)
        sum_614485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2007, 20), np_614484, 'sum')
        # Calling sum(args, kwargs) (line 2007)
        sum_call_result_614493 = invoke(stypy.reporting.localization.Localization(__file__, 2007, 20), sum_614485, *[subscript_call_result_614489], **kwargs_614492)
        
        # Applying the 'usub' unary operator (line 2007)
        result___neg___614494 = python_operator(stypy.reporting.localization.Localization(__file__, 2007, 19), 'usub', sum_call_result_614493)
        
        # Getting the type of 'penalty' (line 2007)
        penalty_614495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2007, 60), 'penalty')
        # Applying the binary operator '+' (line 2007)
        result_add_614496 = python_operator(stypy.reporting.localization.Localization(__file__, 2007, 19), '+', result___neg___614494, penalty_614495)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2007)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2007, 12), 'stypy_return_type', result_add_614496)
        # SSA join for if statement (line 2005)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to sum(...): (line 2008)
        # Processing the call arguments (line 2008)
        # Getting the type of 'logpdf' (line 2008)
        logpdf_614499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2008, 23), 'logpdf', False)
        # Processing the call keyword arguments (line 2008)
        int_614500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2008, 36), 'int')
        keyword_614501 = int_614500
        kwargs_614502 = {'axis': keyword_614501}
        # Getting the type of 'np' (line 2008)
        np_614497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2008, 16), 'np', False)
        # Obtaining the member 'sum' of a type (line 2008)
        sum_614498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2008, 16), np_614497, 'sum')
        # Calling sum(args, kwargs) (line 2008)
        sum_call_result_614503 = invoke(stypy.reporting.localization.Localization(__file__, 2008, 16), sum_614498, *[logpdf_614499], **kwargs_614502)
        
        # Applying the 'usub' unary operator (line 2008)
        result___neg___614504 = python_operator(stypy.reporting.localization.Localization(__file__, 2008, 15), 'usub', sum_call_result_614503)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2008)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2008, 8), 'stypy_return_type', result___neg___614504)
        
        # ################# End of '_nnlf_and_penalty(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_nnlf_and_penalty' in the type store
        # Getting the type of 'stypy_return_type' (line 1997)
        stypy_return_type_614505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1997, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614505)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_nnlf_and_penalty'
        return stypy_return_type_614505


    @norecursion
    def _penalized_nnlf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_penalized_nnlf'
        module_type_store = module_type_store.open_function_context('_penalized_nnlf', 2010, 4, False)
        # Assigning a type to the variable 'self' (line 2011)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2011, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_function_name', 'rv_continuous._penalized_nnlf')
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_param_names_list', ['theta', 'x'])
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._penalized_nnlf.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._penalized_nnlf', ['theta', 'x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_penalized_nnlf', localization, ['theta', 'x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_penalized_nnlf(...)' code ##################

        str_614506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2014, (-1)), 'str', ' Return penalized negative loglikelihood function,\n        i.e., - sum (log pdf(x, theta), axis=0) + penalty\n           where theta are the parameters (including loc and scale)\n        ')
        
        # Assigning a Call to a Tuple (line 2015):
        
        # Assigning a Subscript to a Name (line 2015):
        
        # Obtaining the type of the subscript
        int_614507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2015, 8), 'int')
        
        # Call to _unpack_loc_scale(...): (line 2015)
        # Processing the call arguments (line 2015)
        # Getting the type of 'theta' (line 2015)
        theta_614510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 50), 'theta', False)
        # Processing the call keyword arguments (line 2015)
        kwargs_614511 = {}
        # Getting the type of 'self' (line 2015)
        self_614508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 27), 'self', False)
        # Obtaining the member '_unpack_loc_scale' of a type (line 2015)
        _unpack_loc_scale_614509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 27), self_614508, '_unpack_loc_scale')
        # Calling _unpack_loc_scale(args, kwargs) (line 2015)
        _unpack_loc_scale_call_result_614512 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 27), _unpack_loc_scale_614509, *[theta_614510], **kwargs_614511)
        
        # Obtaining the member '__getitem__' of a type (line 2015)
        getitem___614513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 8), _unpack_loc_scale_call_result_614512, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2015)
        subscript_call_result_614514 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 8), getitem___614513, int_614507)
        
        # Assigning a type to the variable 'tuple_var_assignment_609340' (line 2015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2015, 8), 'tuple_var_assignment_609340', subscript_call_result_614514)
        
        # Assigning a Subscript to a Name (line 2015):
        
        # Obtaining the type of the subscript
        int_614515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2015, 8), 'int')
        
        # Call to _unpack_loc_scale(...): (line 2015)
        # Processing the call arguments (line 2015)
        # Getting the type of 'theta' (line 2015)
        theta_614518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 50), 'theta', False)
        # Processing the call keyword arguments (line 2015)
        kwargs_614519 = {}
        # Getting the type of 'self' (line 2015)
        self_614516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 27), 'self', False)
        # Obtaining the member '_unpack_loc_scale' of a type (line 2015)
        _unpack_loc_scale_614517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 27), self_614516, '_unpack_loc_scale')
        # Calling _unpack_loc_scale(args, kwargs) (line 2015)
        _unpack_loc_scale_call_result_614520 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 27), _unpack_loc_scale_614517, *[theta_614518], **kwargs_614519)
        
        # Obtaining the member '__getitem__' of a type (line 2015)
        getitem___614521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 8), _unpack_loc_scale_call_result_614520, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2015)
        subscript_call_result_614522 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 8), getitem___614521, int_614515)
        
        # Assigning a type to the variable 'tuple_var_assignment_609341' (line 2015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2015, 8), 'tuple_var_assignment_609341', subscript_call_result_614522)
        
        # Assigning a Subscript to a Name (line 2015):
        
        # Obtaining the type of the subscript
        int_614523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2015, 8), 'int')
        
        # Call to _unpack_loc_scale(...): (line 2015)
        # Processing the call arguments (line 2015)
        # Getting the type of 'theta' (line 2015)
        theta_614526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 50), 'theta', False)
        # Processing the call keyword arguments (line 2015)
        kwargs_614527 = {}
        # Getting the type of 'self' (line 2015)
        self_614524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 27), 'self', False)
        # Obtaining the member '_unpack_loc_scale' of a type (line 2015)
        _unpack_loc_scale_614525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 27), self_614524, '_unpack_loc_scale')
        # Calling _unpack_loc_scale(args, kwargs) (line 2015)
        _unpack_loc_scale_call_result_614528 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 27), _unpack_loc_scale_614525, *[theta_614526], **kwargs_614527)
        
        # Obtaining the member '__getitem__' of a type (line 2015)
        getitem___614529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2015, 8), _unpack_loc_scale_call_result_614528, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2015)
        subscript_call_result_614530 = invoke(stypy.reporting.localization.Localization(__file__, 2015, 8), getitem___614529, int_614523)
        
        # Assigning a type to the variable 'tuple_var_assignment_609342' (line 2015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2015, 8), 'tuple_var_assignment_609342', subscript_call_result_614530)
        
        # Assigning a Name to a Name (line 2015):
        # Getting the type of 'tuple_var_assignment_609340' (line 2015)
        tuple_var_assignment_609340_614531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 8), 'tuple_var_assignment_609340')
        # Assigning a type to the variable 'loc' (line 2015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2015, 8), 'loc', tuple_var_assignment_609340_614531)
        
        # Assigning a Name to a Name (line 2015):
        # Getting the type of 'tuple_var_assignment_609341' (line 2015)
        tuple_var_assignment_609341_614532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 8), 'tuple_var_assignment_609341')
        # Assigning a type to the variable 'scale' (line 2015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2015, 13), 'scale', tuple_var_assignment_609341_614532)
        
        # Assigning a Name to a Name (line 2015):
        # Getting the type of 'tuple_var_assignment_609342' (line 2015)
        tuple_var_assignment_609342_614533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2015, 8), 'tuple_var_assignment_609342')
        # Assigning a type to the variable 'args' (line 2015)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2015, 20), 'args', tuple_var_assignment_609342_614533)
        
        
        # Evaluating a boolean operation
        
        
        # Call to _argcheck(...): (line 2016)
        # Getting the type of 'args' (line 2016)
        args_614536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2016, 31), 'args', False)
        # Processing the call keyword arguments (line 2016)
        kwargs_614537 = {}
        # Getting the type of 'self' (line 2016)
        self_614534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2016, 15), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 2016)
        _argcheck_614535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2016, 15), self_614534, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 2016)
        _argcheck_call_result_614538 = invoke(stypy.reporting.localization.Localization(__file__, 2016, 15), _argcheck_614535, *[args_614536], **kwargs_614537)
        
        # Applying the 'not' unary operator (line 2016)
        result_not__614539 = python_operator(stypy.reporting.localization.Localization(__file__, 2016, 11), 'not', _argcheck_call_result_614538)
        
        
        # Getting the type of 'scale' (line 2016)
        scale_614540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2016, 40), 'scale')
        int_614541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2016, 49), 'int')
        # Applying the binary operator '<=' (line 2016)
        result_le_614542 = python_operator(stypy.reporting.localization.Localization(__file__, 2016, 40), '<=', scale_614540, int_614541)
        
        # Applying the binary operator 'or' (line 2016)
        result_or_keyword_614543 = python_operator(stypy.reporting.localization.Localization(__file__, 2016, 11), 'or', result_not__614539, result_le_614542)
        
        # Testing the type of an if condition (line 2016)
        if_condition_614544 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2016, 8), result_or_keyword_614543)
        # Assigning a type to the variable 'if_condition_614544' (line 2016)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2016, 8), 'if_condition_614544', if_condition_614544)
        # SSA begins for if statement (line 2016)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'inf' (line 2017)
        inf_614545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2017, 19), 'inf')
        # Assigning a type to the variable 'stypy_return_type' (line 2017)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2017, 12), 'stypy_return_type', inf_614545)
        # SSA join for if statement (line 2016)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2018):
        
        # Assigning a Call to a Name (line 2018):
        
        # Call to asarray(...): (line 2018)
        # Processing the call arguments (line 2018)
        # Getting the type of 'x' (line 2018)
        x_614547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2018, 21), 'x', False)
        # Getting the type of 'loc' (line 2018)
        loc_614548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2018, 23), 'loc', False)
        # Applying the binary operator '-' (line 2018)
        result_sub_614549 = python_operator(stypy.reporting.localization.Localization(__file__, 2018, 21), '-', x_614547, loc_614548)
        
        # Getting the type of 'scale' (line 2018)
        scale_614550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2018, 30), 'scale', False)
        # Applying the binary operator 'div' (line 2018)
        result_div_614551 = python_operator(stypy.reporting.localization.Localization(__file__, 2018, 20), 'div', result_sub_614549, scale_614550)
        
        # Processing the call keyword arguments (line 2018)
        kwargs_614552 = {}
        # Getting the type of 'asarray' (line 2018)
        asarray_614546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2018, 12), 'asarray', False)
        # Calling asarray(args, kwargs) (line 2018)
        asarray_call_result_614553 = invoke(stypy.reporting.localization.Localization(__file__, 2018, 12), asarray_614546, *[result_div_614551], **kwargs_614552)
        
        # Assigning a type to the variable 'x' (line 2018)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2018, 8), 'x', asarray_call_result_614553)
        
        # Assigning a BinOp to a Name (line 2019):
        
        # Assigning a BinOp to a Name (line 2019):
        
        # Call to len(...): (line 2019)
        # Processing the call arguments (line 2019)
        # Getting the type of 'x' (line 2019)
        x_614555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2019, 26), 'x', False)
        # Processing the call keyword arguments (line 2019)
        kwargs_614556 = {}
        # Getting the type of 'len' (line 2019)
        len_614554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2019, 22), 'len', False)
        # Calling len(args, kwargs) (line 2019)
        len_call_result_614557 = invoke(stypy.reporting.localization.Localization(__file__, 2019, 22), len_614554, *[x_614555], **kwargs_614556)
        
        
        # Call to log(...): (line 2019)
        # Processing the call arguments (line 2019)
        # Getting the type of 'scale' (line 2019)
        scale_614559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2019, 35), 'scale', False)
        # Processing the call keyword arguments (line 2019)
        kwargs_614560 = {}
        # Getting the type of 'log' (line 2019)
        log_614558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2019, 31), 'log', False)
        # Calling log(args, kwargs) (line 2019)
        log_call_result_614561 = invoke(stypy.reporting.localization.Localization(__file__, 2019, 31), log_614558, *[scale_614559], **kwargs_614560)
        
        # Applying the binary operator '*' (line 2019)
        result_mul_614562 = python_operator(stypy.reporting.localization.Localization(__file__, 2019, 22), '*', len_call_result_614557, log_call_result_614561)
        
        # Assigning a type to the variable 'n_log_scale' (line 2019)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2019, 8), 'n_log_scale', result_mul_614562)
        
        # Call to _nnlf_and_penalty(...): (line 2020)
        # Processing the call arguments (line 2020)
        # Getting the type of 'x' (line 2020)
        x_614565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2020, 38), 'x', False)
        # Getting the type of 'args' (line 2020)
        args_614566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2020, 41), 'args', False)
        # Processing the call keyword arguments (line 2020)
        kwargs_614567 = {}
        # Getting the type of 'self' (line 2020)
        self_614563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2020, 15), 'self', False)
        # Obtaining the member '_nnlf_and_penalty' of a type (line 2020)
        _nnlf_and_penalty_614564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2020, 15), self_614563, '_nnlf_and_penalty')
        # Calling _nnlf_and_penalty(args, kwargs) (line 2020)
        _nnlf_and_penalty_call_result_614568 = invoke(stypy.reporting.localization.Localization(__file__, 2020, 15), _nnlf_and_penalty_614564, *[x_614565, args_614566], **kwargs_614567)
        
        # Getting the type of 'n_log_scale' (line 2020)
        n_log_scale_614569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2020, 49), 'n_log_scale')
        # Applying the binary operator '+' (line 2020)
        result_add_614570 = python_operator(stypy.reporting.localization.Localization(__file__, 2020, 15), '+', _nnlf_and_penalty_call_result_614568, n_log_scale_614569)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2020)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2020, 8), 'stypy_return_type', result_add_614570)
        
        # ################# End of '_penalized_nnlf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_penalized_nnlf' in the type store
        # Getting the type of 'stypy_return_type' (line 2010)
        stypy_return_type_614571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2010, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614571)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_penalized_nnlf'
        return stypy_return_type_614571


    @norecursion
    def _fitstart(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 2023)
        None_614572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 35), 'None')
        defaults = [None_614572]
        # Create a new context for function '_fitstart'
        module_type_store = module_type_store.open_function_context('_fitstart', 2023, 4, False)
        # Assigning a type to the variable 'self' (line 2024)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2024, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._fitstart.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._fitstart.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._fitstart.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._fitstart.__dict__.__setitem__('stypy_function_name', 'rv_continuous._fitstart')
        rv_continuous._fitstart.__dict__.__setitem__('stypy_param_names_list', ['data', 'args'])
        rv_continuous._fitstart.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_continuous._fitstart.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._fitstart.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._fitstart.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._fitstart.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._fitstart.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._fitstart', ['data', 'args'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_fitstart', localization, ['data', 'args'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_fitstart(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 2024)
        # Getting the type of 'args' (line 2024)
        args_614573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2024, 11), 'args')
        # Getting the type of 'None' (line 2024)
        None_614574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2024, 19), 'None')
        
        (may_be_614575, more_types_in_union_614576) = may_be_none(args_614573, None_614574)

        if may_be_614575:

            if more_types_in_union_614576:
                # Runtime conditional SSA (line 2024)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 2025):
            
            # Assigning a BinOp to a Name (line 2025):
            
            # Obtaining an instance of the builtin type 'tuple' (line 2025)
            tuple_614577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2025, 20), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 2025)
            # Adding element type (line 2025)
            float_614578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2025, 20), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2025, 20), tuple_614577, float_614578)
            
            # Getting the type of 'self' (line 2025)
            self_614579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2025, 26), 'self')
            # Obtaining the member 'numargs' of a type (line 2025)
            numargs_614580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2025, 26), self_614579, 'numargs')
            # Applying the binary operator '*' (line 2025)
            result_mul_614581 = python_operator(stypy.reporting.localization.Localization(__file__, 2025, 19), '*', tuple_614577, numargs_614580)
            
            # Assigning a type to the variable 'args' (line 2025)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2025, 12), 'args', result_mul_614581)

            if more_types_in_union_614576:
                # SSA join for if statement (line 2024)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Tuple (line 2026):
        
        # Assigning a Subscript to a Name (line 2026):
        
        # Obtaining the type of the subscript
        int_614582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2026, 8), 'int')
        
        # Call to _fit_loc_scale_support(...): (line 2026)
        # Processing the call arguments (line 2026)
        # Getting the type of 'data' (line 2026)
        data_614585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 49), 'data', False)
        # Getting the type of 'args' (line 2026)
        args_614586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 56), 'args', False)
        # Processing the call keyword arguments (line 2026)
        kwargs_614587 = {}
        # Getting the type of 'self' (line 2026)
        self_614583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 21), 'self', False)
        # Obtaining the member '_fit_loc_scale_support' of a type (line 2026)
        _fit_loc_scale_support_614584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2026, 21), self_614583, '_fit_loc_scale_support')
        # Calling _fit_loc_scale_support(args, kwargs) (line 2026)
        _fit_loc_scale_support_call_result_614588 = invoke(stypy.reporting.localization.Localization(__file__, 2026, 21), _fit_loc_scale_support_614584, *[data_614585, args_614586], **kwargs_614587)
        
        # Obtaining the member '__getitem__' of a type (line 2026)
        getitem___614589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2026, 8), _fit_loc_scale_support_call_result_614588, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2026)
        subscript_call_result_614590 = invoke(stypy.reporting.localization.Localization(__file__, 2026, 8), getitem___614589, int_614582)
        
        # Assigning a type to the variable 'tuple_var_assignment_609343' (line 2026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2026, 8), 'tuple_var_assignment_609343', subscript_call_result_614590)
        
        # Assigning a Subscript to a Name (line 2026):
        
        # Obtaining the type of the subscript
        int_614591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2026, 8), 'int')
        
        # Call to _fit_loc_scale_support(...): (line 2026)
        # Processing the call arguments (line 2026)
        # Getting the type of 'data' (line 2026)
        data_614594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 49), 'data', False)
        # Getting the type of 'args' (line 2026)
        args_614595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 56), 'args', False)
        # Processing the call keyword arguments (line 2026)
        kwargs_614596 = {}
        # Getting the type of 'self' (line 2026)
        self_614592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 21), 'self', False)
        # Obtaining the member '_fit_loc_scale_support' of a type (line 2026)
        _fit_loc_scale_support_614593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2026, 21), self_614592, '_fit_loc_scale_support')
        # Calling _fit_loc_scale_support(args, kwargs) (line 2026)
        _fit_loc_scale_support_call_result_614597 = invoke(stypy.reporting.localization.Localization(__file__, 2026, 21), _fit_loc_scale_support_614593, *[data_614594, args_614595], **kwargs_614596)
        
        # Obtaining the member '__getitem__' of a type (line 2026)
        getitem___614598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2026, 8), _fit_loc_scale_support_call_result_614597, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2026)
        subscript_call_result_614599 = invoke(stypy.reporting.localization.Localization(__file__, 2026, 8), getitem___614598, int_614591)
        
        # Assigning a type to the variable 'tuple_var_assignment_609344' (line 2026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2026, 8), 'tuple_var_assignment_609344', subscript_call_result_614599)
        
        # Assigning a Name to a Name (line 2026):
        # Getting the type of 'tuple_var_assignment_609343' (line 2026)
        tuple_var_assignment_609343_614600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 8), 'tuple_var_assignment_609343')
        # Assigning a type to the variable 'loc' (line 2026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2026, 8), 'loc', tuple_var_assignment_609343_614600)
        
        # Assigning a Name to a Name (line 2026):
        # Getting the type of 'tuple_var_assignment_609344' (line 2026)
        tuple_var_assignment_609344_614601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2026, 8), 'tuple_var_assignment_609344')
        # Assigning a type to the variable 'scale' (line 2026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2026, 13), 'scale', tuple_var_assignment_609344_614601)
        # Getting the type of 'args' (line 2027)
        args_614602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 15), 'args')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2027)
        tuple_614603 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2027, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2027)
        # Adding element type (line 2027)
        # Getting the type of 'loc' (line 2027)
        loc_614604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 23), 'loc')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2027, 23), tuple_614603, loc_614604)
        # Adding element type (line 2027)
        # Getting the type of 'scale' (line 2027)
        scale_614605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2027, 28), 'scale')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2027, 23), tuple_614603, scale_614605)
        
        # Applying the binary operator '+' (line 2027)
        result_add_614606 = python_operator(stypy.reporting.localization.Localization(__file__, 2027, 15), '+', args_614602, tuple_614603)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2027)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2027, 8), 'stypy_return_type', result_add_614606)
        
        # ################# End of '_fitstart(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_fitstart' in the type store
        # Getting the type of 'stypy_return_type' (line 2023)
        stypy_return_type_614607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2023, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614607)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_fitstart'
        return stypy_return_type_614607


    @norecursion
    def _reduce_func(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_reduce_func'
        module_type_store = module_type_store.open_function_context('_reduce_func', 2031, 4, False)
        # Assigning a type to the variable 'self' (line 2032)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2032, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_function_name', 'rv_continuous._reduce_func')
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_param_names_list', ['args', 'kwds'])
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._reduce_func.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._reduce_func', ['args', 'kwds'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_reduce_func', localization, ['args', 'kwds'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_reduce_func(...)' code ##################

        
        # Getting the type of 'self' (line 2035)
        self_614608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2035, 11), 'self')
        # Obtaining the member 'shapes' of a type (line 2035)
        shapes_614609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2035, 11), self_614608, 'shapes')
        # Testing the type of an if condition (line 2035)
        if_condition_614610 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2035, 8), shapes_614609)
        # Assigning a type to the variable 'if_condition_614610' (line 2035)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2035, 8), 'if_condition_614610', if_condition_614610)
        # SSA begins for if statement (line 2035)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2036):
        
        # Assigning a Call to a Name (line 2036):
        
        # Call to split(...): (line 2036)
        # Processing the call keyword arguments (line 2036)
        kwargs_614619 = {}
        
        # Call to replace(...): (line 2036)
        # Processing the call arguments (line 2036)
        str_614614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2036, 41), 'str', ',')
        str_614615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2036, 46), 'str', ' ')
        # Processing the call keyword arguments (line 2036)
        kwargs_614616 = {}
        # Getting the type of 'self' (line 2036)
        self_614611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2036, 21), 'self', False)
        # Obtaining the member 'shapes' of a type (line 2036)
        shapes_614612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2036, 21), self_614611, 'shapes')
        # Obtaining the member 'replace' of a type (line 2036)
        replace_614613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2036, 21), shapes_614612, 'replace')
        # Calling replace(args, kwargs) (line 2036)
        replace_call_result_614617 = invoke(stypy.reporting.localization.Localization(__file__, 2036, 21), replace_614613, *[str_614614, str_614615], **kwargs_614616)
        
        # Obtaining the member 'split' of a type (line 2036)
        split_614618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2036, 21), replace_call_result_614617, 'split')
        # Calling split(args, kwargs) (line 2036)
        split_call_result_614620 = invoke(stypy.reporting.localization.Localization(__file__, 2036, 21), split_614618, *[], **kwargs_614619)
        
        # Assigning a type to the variable 'shapes' (line 2036)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2036, 12), 'shapes', split_call_result_614620)
        
        
        # Call to enumerate(...): (line 2037)
        # Processing the call arguments (line 2037)
        # Getting the type of 'shapes' (line 2037)
        shapes_614622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2037, 34), 'shapes', False)
        # Processing the call keyword arguments (line 2037)
        kwargs_614623 = {}
        # Getting the type of 'enumerate' (line 2037)
        enumerate_614621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2037, 24), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 2037)
        enumerate_call_result_614624 = invoke(stypy.reporting.localization.Localization(__file__, 2037, 24), enumerate_614621, *[shapes_614622], **kwargs_614623)
        
        # Testing the type of a for loop iterable (line 2037)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2037, 12), enumerate_call_result_614624)
        # Getting the type of the for loop variable (line 2037)
        for_loop_var_614625 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2037, 12), enumerate_call_result_614624)
        # Assigning a type to the variable 'j' (line 2037)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2037, 12), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2037, 12), for_loop_var_614625))
        # Assigning a type to the variable 's' (line 2037)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2037, 12), 's', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2037, 12), for_loop_var_614625))
        # SSA begins for a for statement (line 2037)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a BoolOp to a Name (line 2038):
        
        # Assigning a BoolOp to a Name (line 2038):
        
        # Evaluating a boolean operation
        
        # Call to pop(...): (line 2038)
        # Processing the call arguments (line 2038)
        str_614628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2038, 31), 'str', 'f')
        # Getting the type of 's' (line 2038)
        s_614629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 37), 's', False)
        # Applying the binary operator '+' (line 2038)
        result_add_614630 = python_operator(stypy.reporting.localization.Localization(__file__, 2038, 31), '+', str_614628, s_614629)
        
        # Getting the type of 'None' (line 2038)
        None_614631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 40), 'None', False)
        # Processing the call keyword arguments (line 2038)
        kwargs_614632 = {}
        # Getting the type of 'kwds' (line 2038)
        kwds_614626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 22), 'kwds', False)
        # Obtaining the member 'pop' of a type (line 2038)
        pop_614627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2038, 22), kwds_614626, 'pop')
        # Calling pop(args, kwargs) (line 2038)
        pop_call_result_614633 = invoke(stypy.reporting.localization.Localization(__file__, 2038, 22), pop_614627, *[result_add_614630, None_614631], **kwargs_614632)
        
        
        # Call to pop(...): (line 2038)
        # Processing the call arguments (line 2038)
        str_614636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2038, 58), 'str', 'fix_')
        # Getting the type of 's' (line 2038)
        s_614637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 67), 's', False)
        # Applying the binary operator '+' (line 2038)
        result_add_614638 = python_operator(stypy.reporting.localization.Localization(__file__, 2038, 58), '+', str_614636, s_614637)
        
        # Getting the type of 'None' (line 2038)
        None_614639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 70), 'None', False)
        # Processing the call keyword arguments (line 2038)
        kwargs_614640 = {}
        # Getting the type of 'kwds' (line 2038)
        kwds_614634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2038, 49), 'kwds', False)
        # Obtaining the member 'pop' of a type (line 2038)
        pop_614635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2038, 49), kwds_614634, 'pop')
        # Calling pop(args, kwargs) (line 2038)
        pop_call_result_614641 = invoke(stypy.reporting.localization.Localization(__file__, 2038, 49), pop_614635, *[result_add_614638, None_614639], **kwargs_614640)
        
        # Applying the binary operator 'or' (line 2038)
        result_or_keyword_614642 = python_operator(stypy.reporting.localization.Localization(__file__, 2038, 22), 'or', pop_call_result_614633, pop_call_result_614641)
        
        # Assigning a type to the variable 'val' (line 2038)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2038, 16), 'val', result_or_keyword_614642)
        
        # Type idiom detected: calculating its left and rigth part (line 2039)
        # Getting the type of 'val' (line 2039)
        val_614643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2039, 16), 'val')
        # Getting the type of 'None' (line 2039)
        None_614644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2039, 30), 'None')
        
        (may_be_614645, more_types_in_union_614646) = may_not_be_none(val_614643, None_614644)

        if may_be_614645:

            if more_types_in_union_614646:
                # Runtime conditional SSA (line 2039)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 2040):
            
            # Assigning a BinOp to a Name (line 2040):
            str_614647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2040, 26), 'str', 'f%d')
            # Getting the type of 'j' (line 2040)
            j_614648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2040, 34), 'j')
            # Applying the binary operator '%' (line 2040)
            result_mod_614649 = python_operator(stypy.reporting.localization.Localization(__file__, 2040, 26), '%', str_614647, j_614648)
            
            # Assigning a type to the variable 'key' (line 2040)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2040, 20), 'key', result_mod_614649)
            
            
            # Getting the type of 'key' (line 2041)
            key_614650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2041, 23), 'key')
            # Getting the type of 'kwds' (line 2041)
            kwds_614651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2041, 30), 'kwds')
            # Applying the binary operator 'in' (line 2041)
            result_contains_614652 = python_operator(stypy.reporting.localization.Localization(__file__, 2041, 23), 'in', key_614650, kwds_614651)
            
            # Testing the type of an if condition (line 2041)
            if_condition_614653 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2041, 20), result_contains_614652)
            # Assigning a type to the variable 'if_condition_614653' (line 2041)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2041, 20), 'if_condition_614653', if_condition_614653)
            # SSA begins for if statement (line 2041)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to ValueError(...): (line 2042)
            # Processing the call arguments (line 2042)
            str_614655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2042, 41), 'str', 'Duplicate entry for %s.')
            # Getting the type of 'key' (line 2042)
            key_614656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2042, 69), 'key', False)
            # Applying the binary operator '%' (line 2042)
            result_mod_614657 = python_operator(stypy.reporting.localization.Localization(__file__, 2042, 41), '%', str_614655, key_614656)
            
            # Processing the call keyword arguments (line 2042)
            kwargs_614658 = {}
            # Getting the type of 'ValueError' (line 2042)
            ValueError_614654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2042, 30), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 2042)
            ValueError_call_result_614659 = invoke(stypy.reporting.localization.Localization(__file__, 2042, 30), ValueError_614654, *[result_mod_614657], **kwargs_614658)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2042, 24), ValueError_call_result_614659, 'raise parameter', BaseException)
            # SSA branch for the else part of an if statement (line 2041)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Name to a Subscript (line 2044):
            
            # Assigning a Name to a Subscript (line 2044):
            # Getting the type of 'val' (line 2044)
            val_614660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2044, 36), 'val')
            # Getting the type of 'kwds' (line 2044)
            kwds_614661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2044, 24), 'kwds')
            # Getting the type of 'key' (line 2044)
            key_614662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2044, 29), 'key')
            # Storing an element on a container (line 2044)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2044, 24), kwds_614661, (key_614662, val_614660))
            # SSA join for if statement (line 2041)
            module_type_store = module_type_store.join_ssa_context()
            

            if more_types_in_union_614646:
                # SSA join for if statement (line 2039)
                module_type_store = module_type_store.join_ssa_context()


        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2035)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2046):
        
        # Assigning a Call to a Name (line 2046):
        
        # Call to list(...): (line 2046)
        # Processing the call arguments (line 2046)
        # Getting the type of 'args' (line 2046)
        args_614664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2046, 20), 'args', False)
        # Processing the call keyword arguments (line 2046)
        kwargs_614665 = {}
        # Getting the type of 'list' (line 2046)
        list_614663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2046, 15), 'list', False)
        # Calling list(args, kwargs) (line 2046)
        list_call_result_614666 = invoke(stypy.reporting.localization.Localization(__file__, 2046, 15), list_614663, *[args_614664], **kwargs_614665)
        
        # Assigning a type to the variable 'args' (line 2046)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2046, 8), 'args', list_call_result_614666)
        
        # Assigning a Call to a Name (line 2047):
        
        # Assigning a Call to a Name (line 2047):
        
        # Call to len(...): (line 2047)
        # Processing the call arguments (line 2047)
        # Getting the type of 'args' (line 2047)
        args_614668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2047, 20), 'args', False)
        # Processing the call keyword arguments (line 2047)
        kwargs_614669 = {}
        # Getting the type of 'len' (line 2047)
        len_614667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2047, 16), 'len', False)
        # Calling len(args, kwargs) (line 2047)
        len_call_result_614670 = invoke(stypy.reporting.localization.Localization(__file__, 2047, 16), len_614667, *[args_614668], **kwargs_614669)
        
        # Assigning a type to the variable 'Nargs' (line 2047)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2047, 8), 'Nargs', len_call_result_614670)
        
        # Assigning a List to a Name (line 2048):
        
        # Assigning a List to a Name (line 2048):
        
        # Obtaining an instance of the builtin type 'list' (line 2048)
        list_614671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2048, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2048)
        
        # Assigning a type to the variable 'fixedn' (line 2048)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2048, 8), 'fixedn', list_614671)
        
        # Assigning a BinOp to a Name (line 2049):
        
        # Assigning a BinOp to a Name (line 2049):
        # Calculating list comprehension
        # Calculating comprehension expression
        
        # Call to range(...): (line 2049)
        # Processing the call arguments (line 2049)
        # Getting the type of 'Nargs' (line 2049)
        Nargs_614676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2049, 42), 'Nargs', False)
        int_614677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2049, 50), 'int')
        # Applying the binary operator '-' (line 2049)
        result_sub_614678 = python_operator(stypy.reporting.localization.Localization(__file__, 2049, 42), '-', Nargs_614676, int_614677)
        
        # Processing the call keyword arguments (line 2049)
        kwargs_614679 = {}
        # Getting the type of 'range' (line 2049)
        range_614675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2049, 36), 'range', False)
        # Calling range(args, kwargs) (line 2049)
        range_call_result_614680 = invoke(stypy.reporting.localization.Localization(__file__, 2049, 36), range_614675, *[result_sub_614678], **kwargs_614679)
        
        comprehension_614681 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2049, 17), range_call_result_614680)
        # Assigning a type to the variable 'n' (line 2049)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2049, 17), 'n', comprehension_614681)
        str_614672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2049, 17), 'str', 'f%d')
        # Getting the type of 'n' (line 2049)
        n_614673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2049, 25), 'n')
        # Applying the binary operator '%' (line 2049)
        result_mod_614674 = python_operator(stypy.reporting.localization.Localization(__file__, 2049, 17), '%', str_614672, n_614673)
        
        list_614682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2049, 17), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2049, 17), list_614682, result_mod_614674)
        
        # Obtaining an instance of the builtin type 'list' (line 2049)
        list_614683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2049, 56), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2049)
        # Adding element type (line 2049)
        str_614684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2049, 57), 'str', 'floc')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2049, 56), list_614683, str_614684)
        # Adding element type (line 2049)
        str_614685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2049, 65), 'str', 'fscale')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2049, 56), list_614683, str_614685)
        
        # Applying the binary operator '+' (line 2049)
        result_add_614686 = python_operator(stypy.reporting.localization.Localization(__file__, 2049, 16), '+', list_614682, list_614683)
        
        # Assigning a type to the variable 'names' (line 2049)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2049, 8), 'names', result_add_614686)
        
        # Assigning a List to a Name (line 2050):
        
        # Assigning a List to a Name (line 2050):
        
        # Obtaining an instance of the builtin type 'list' (line 2050)
        list_614687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2050, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2050)
        
        # Assigning a type to the variable 'x0' (line 2050)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2050, 8), 'x0', list_614687)
        
        
        # Call to enumerate(...): (line 2051)
        # Processing the call arguments (line 2051)
        # Getting the type of 'names' (line 2051)
        names_614689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2051, 32), 'names', False)
        # Processing the call keyword arguments (line 2051)
        kwargs_614690 = {}
        # Getting the type of 'enumerate' (line 2051)
        enumerate_614688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2051, 22), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 2051)
        enumerate_call_result_614691 = invoke(stypy.reporting.localization.Localization(__file__, 2051, 22), enumerate_614688, *[names_614689], **kwargs_614690)
        
        # Testing the type of a for loop iterable (line 2051)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2051, 8), enumerate_call_result_614691)
        # Getting the type of the for loop variable (line 2051)
        for_loop_var_614692 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2051, 8), enumerate_call_result_614691)
        # Assigning a type to the variable 'n' (line 2051)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2051, 8), 'n', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2051, 8), for_loop_var_614692))
        # Assigning a type to the variable 'key' (line 2051)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2051, 8), 'key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2051, 8), for_loop_var_614692))
        # SSA begins for a for statement (line 2051)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Getting the type of 'key' (line 2052)
        key_614693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2052, 15), 'key')
        # Getting the type of 'kwds' (line 2052)
        kwds_614694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2052, 22), 'kwds')
        # Applying the binary operator 'in' (line 2052)
        result_contains_614695 = python_operator(stypy.reporting.localization.Localization(__file__, 2052, 15), 'in', key_614693, kwds_614694)
        
        # Testing the type of an if condition (line 2052)
        if_condition_614696 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2052, 12), result_contains_614695)
        # Assigning a type to the variable 'if_condition_614696' (line 2052)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2052, 12), 'if_condition_614696', if_condition_614696)
        # SSA begins for if statement (line 2052)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to append(...): (line 2053)
        # Processing the call arguments (line 2053)
        # Getting the type of 'n' (line 2053)
        n_614699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 30), 'n', False)
        # Processing the call keyword arguments (line 2053)
        kwargs_614700 = {}
        # Getting the type of 'fixedn' (line 2053)
        fixedn_614697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2053, 16), 'fixedn', False)
        # Obtaining the member 'append' of a type (line 2053)
        append_614698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2053, 16), fixedn_614697, 'append')
        # Calling append(args, kwargs) (line 2053)
        append_call_result_614701 = invoke(stypy.reporting.localization.Localization(__file__, 2053, 16), append_614698, *[n_614699], **kwargs_614700)
        
        
        # Assigning a Call to a Subscript (line 2054):
        
        # Assigning a Call to a Subscript (line 2054):
        
        # Call to pop(...): (line 2054)
        # Processing the call arguments (line 2054)
        # Getting the type of 'key' (line 2054)
        key_614704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2054, 35), 'key', False)
        # Processing the call keyword arguments (line 2054)
        kwargs_614705 = {}
        # Getting the type of 'kwds' (line 2054)
        kwds_614702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2054, 26), 'kwds', False)
        # Obtaining the member 'pop' of a type (line 2054)
        pop_614703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2054, 26), kwds_614702, 'pop')
        # Calling pop(args, kwargs) (line 2054)
        pop_call_result_614706 = invoke(stypy.reporting.localization.Localization(__file__, 2054, 26), pop_614703, *[key_614704], **kwargs_614705)
        
        # Getting the type of 'args' (line 2054)
        args_614707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2054, 16), 'args')
        # Getting the type of 'n' (line 2054)
        n_614708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2054, 21), 'n')
        # Storing an element on a container (line 2054)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2054, 16), args_614707, (n_614708, pop_call_result_614706))
        # SSA branch for the else part of an if statement (line 2052)
        module_type_store.open_ssa_branch('else')
        
        # Call to append(...): (line 2056)
        # Processing the call arguments (line 2056)
        
        # Obtaining the type of the subscript
        # Getting the type of 'n' (line 2056)
        n_614711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2056, 31), 'n', False)
        # Getting the type of 'args' (line 2056)
        args_614712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2056, 26), 'args', False)
        # Obtaining the member '__getitem__' of a type (line 2056)
        getitem___614713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2056, 26), args_614712, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2056)
        subscript_call_result_614714 = invoke(stypy.reporting.localization.Localization(__file__, 2056, 26), getitem___614713, n_614711)
        
        # Processing the call keyword arguments (line 2056)
        kwargs_614715 = {}
        # Getting the type of 'x0' (line 2056)
        x0_614709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2056, 16), 'x0', False)
        # Obtaining the member 'append' of a type (line 2056)
        append_614710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2056, 16), x0_614709, 'append')
        # Calling append(args, kwargs) (line 2056)
        append_call_result_614716 = invoke(stypy.reporting.localization.Localization(__file__, 2056, 16), append_614710, *[subscript_call_result_614714], **kwargs_614715)
        
        # SSA join for if statement (line 2052)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to len(...): (line 2058)
        # Processing the call arguments (line 2058)
        # Getting the type of 'fixedn' (line 2058)
        fixedn_614718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2058, 15), 'fixedn', False)
        # Processing the call keyword arguments (line 2058)
        kwargs_614719 = {}
        # Getting the type of 'len' (line 2058)
        len_614717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2058, 11), 'len', False)
        # Calling len(args, kwargs) (line 2058)
        len_call_result_614720 = invoke(stypy.reporting.localization.Localization(__file__, 2058, 11), len_614717, *[fixedn_614718], **kwargs_614719)
        
        int_614721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2058, 26), 'int')
        # Applying the binary operator '==' (line 2058)
        result_eq_614722 = python_operator(stypy.reporting.localization.Localization(__file__, 2058, 11), '==', len_call_result_614720, int_614721)
        
        # Testing the type of an if condition (line 2058)
        if_condition_614723 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2058, 8), result_eq_614722)
        # Assigning a type to the variable 'if_condition_614723' (line 2058)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2058, 8), 'if_condition_614723', if_condition_614723)
        # SSA begins for if statement (line 2058)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Attribute to a Name (line 2059):
        
        # Assigning a Attribute to a Name (line 2059):
        # Getting the type of 'self' (line 2059)
        self_614724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2059, 19), 'self')
        # Obtaining the member '_penalized_nnlf' of a type (line 2059)
        _penalized_nnlf_614725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2059, 19), self_614724, '_penalized_nnlf')
        # Assigning a type to the variable 'func' (line 2059)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2059, 12), 'func', _penalized_nnlf_614725)
        
        # Assigning a Name to a Name (line 2060):
        
        # Assigning a Name to a Name (line 2060):
        # Getting the type of 'None' (line 2060)
        None_614726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2060, 22), 'None')
        # Assigning a type to the variable 'restore' (line 2060)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2060, 12), 'restore', None_614726)
        # SSA branch for the else part of an if statement (line 2058)
        module_type_store.open_ssa_branch('else')
        
        
        
        # Call to len(...): (line 2062)
        # Processing the call arguments (line 2062)
        # Getting the type of 'fixedn' (line 2062)
        fixedn_614728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2062, 19), 'fixedn', False)
        # Processing the call keyword arguments (line 2062)
        kwargs_614729 = {}
        # Getting the type of 'len' (line 2062)
        len_614727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2062, 15), 'len', False)
        # Calling len(args, kwargs) (line 2062)
        len_call_result_614730 = invoke(stypy.reporting.localization.Localization(__file__, 2062, 15), len_614727, *[fixedn_614728], **kwargs_614729)
        
        # Getting the type of 'Nargs' (line 2062)
        Nargs_614731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2062, 30), 'Nargs')
        # Applying the binary operator '==' (line 2062)
        result_eq_614732 = python_operator(stypy.reporting.localization.Localization(__file__, 2062, 15), '==', len_call_result_614730, Nargs_614731)
        
        # Testing the type of an if condition (line 2062)
        if_condition_614733 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2062, 12), result_eq_614732)
        # Assigning a type to the variable 'if_condition_614733' (line 2062)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2062, 12), 'if_condition_614733', if_condition_614733)
        # SSA begins for if statement (line 2062)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 2063)
        # Processing the call arguments (line 2063)
        str_614735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2064, 20), 'str', 'All parameters fixed. There is nothing to optimize.')
        # Processing the call keyword arguments (line 2063)
        kwargs_614736 = {}
        # Getting the type of 'ValueError' (line 2063)
        ValueError_614734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2063, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 2063)
        ValueError_call_result_614737 = invoke(stypy.reporting.localization.Localization(__file__, 2063, 22), ValueError_614734, *[str_614735], **kwargs_614736)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2063, 16), ValueError_call_result_614737, 'raise parameter', BaseException)
        # SSA join for if statement (line 2062)
        module_type_store = module_type_store.join_ssa_context()
        

        @norecursion
        def restore(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'restore'
            module_type_store = module_type_store.open_function_context('restore', 2066, 12, False)
            
            # Passed parameters checking function
            restore.stypy_localization = localization
            restore.stypy_type_of_self = None
            restore.stypy_type_store = module_type_store
            restore.stypy_function_name = 'restore'
            restore.stypy_param_names_list = ['args', 'theta']
            restore.stypy_varargs_param_name = None
            restore.stypy_kwargs_param_name = None
            restore.stypy_call_defaults = defaults
            restore.stypy_call_varargs = varargs
            restore.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'restore', ['args', 'theta'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'restore', localization, ['args', 'theta'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'restore(...)' code ##################

            
            # Assigning a Num to a Name (line 2070):
            
            # Assigning a Num to a Name (line 2070):
            int_614738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2070, 20), 'int')
            # Assigning a type to the variable 'i' (line 2070)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2070, 16), 'i', int_614738)
            
            
            # Call to range(...): (line 2071)
            # Processing the call arguments (line 2071)
            # Getting the type of 'Nargs' (line 2071)
            Nargs_614740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2071, 31), 'Nargs', False)
            # Processing the call keyword arguments (line 2071)
            kwargs_614741 = {}
            # Getting the type of 'range' (line 2071)
            range_614739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2071, 25), 'range', False)
            # Calling range(args, kwargs) (line 2071)
            range_call_result_614742 = invoke(stypy.reporting.localization.Localization(__file__, 2071, 25), range_614739, *[Nargs_614740], **kwargs_614741)
            
            # Testing the type of a for loop iterable (line 2071)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 2071, 16), range_call_result_614742)
            # Getting the type of the for loop variable (line 2071)
            for_loop_var_614743 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 2071, 16), range_call_result_614742)
            # Assigning a type to the variable 'n' (line 2071)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2071, 16), 'n', for_loop_var_614743)
            # SSA begins for a for statement (line 2071)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Getting the type of 'n' (line 2072)
            n_614744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2072, 23), 'n')
            # Getting the type of 'fixedn' (line 2072)
            fixedn_614745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2072, 32), 'fixedn')
            # Applying the binary operator 'notin' (line 2072)
            result_contains_614746 = python_operator(stypy.reporting.localization.Localization(__file__, 2072, 23), 'notin', n_614744, fixedn_614745)
            
            # Testing the type of an if condition (line 2072)
            if_condition_614747 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2072, 20), result_contains_614746)
            # Assigning a type to the variable 'if_condition_614747' (line 2072)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2072, 20), 'if_condition_614747', if_condition_614747)
            # SSA begins for if statement (line 2072)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Subscript (line 2073):
            
            # Assigning a Subscript to a Subscript (line 2073):
            
            # Obtaining the type of the subscript
            # Getting the type of 'i' (line 2073)
            i_614748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2073, 40), 'i')
            # Getting the type of 'theta' (line 2073)
            theta_614749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2073, 34), 'theta')
            # Obtaining the member '__getitem__' of a type (line 2073)
            getitem___614750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2073, 34), theta_614749, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2073)
            subscript_call_result_614751 = invoke(stypy.reporting.localization.Localization(__file__, 2073, 34), getitem___614750, i_614748)
            
            # Getting the type of 'args' (line 2073)
            args_614752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2073, 24), 'args')
            # Getting the type of 'n' (line 2073)
            n_614753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2073, 29), 'n')
            # Storing an element on a container (line 2073)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2073, 24), args_614752, (n_614753, subscript_call_result_614751))
            
            # Getting the type of 'i' (line 2074)
            i_614754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2074, 24), 'i')
            int_614755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2074, 29), 'int')
            # Applying the binary operator '+=' (line 2074)
            result_iadd_614756 = python_operator(stypy.reporting.localization.Localization(__file__, 2074, 24), '+=', i_614754, int_614755)
            # Assigning a type to the variable 'i' (line 2074)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2074, 24), 'i', result_iadd_614756)
            
            # SSA join for if statement (line 2072)
            module_type_store = module_type_store.join_ssa_context()
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            # Getting the type of 'args' (line 2075)
            args_614757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2075, 23), 'args')
            # Assigning a type to the variable 'stypy_return_type' (line 2075)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2075, 16), 'stypy_return_type', args_614757)
            
            # ################# End of 'restore(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'restore' in the type store
            # Getting the type of 'stypy_return_type' (line 2066)
            stypy_return_type_614758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2066, 12), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_614758)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'restore'
            return stypy_return_type_614758

        # Assigning a type to the variable 'restore' (line 2066)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2066, 12), 'restore', restore)

        @norecursion
        def func(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'func'
            module_type_store = module_type_store.open_function_context('func', 2077, 12, False)
            
            # Passed parameters checking function
            func.stypy_localization = localization
            func.stypy_type_of_self = None
            func.stypy_type_store = module_type_store
            func.stypy_function_name = 'func'
            func.stypy_param_names_list = ['theta', 'x']
            func.stypy_varargs_param_name = None
            func.stypy_kwargs_param_name = None
            func.stypy_call_defaults = defaults
            func.stypy_call_varargs = varargs
            func.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'func', ['theta', 'x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'func', localization, ['theta', 'x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'func(...)' code ##################

            
            # Assigning a Call to a Name (line 2078):
            
            # Assigning a Call to a Name (line 2078):
            
            # Call to restore(...): (line 2078)
            # Processing the call arguments (line 2078)
            
            # Obtaining the type of the subscript
            slice_614760 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2078, 35), None, None, None)
            # Getting the type of 'args' (line 2078)
            args_614761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2078, 35), 'args', False)
            # Obtaining the member '__getitem__' of a type (line 2078)
            getitem___614762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2078, 35), args_614761, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2078)
            subscript_call_result_614763 = invoke(stypy.reporting.localization.Localization(__file__, 2078, 35), getitem___614762, slice_614760)
            
            # Getting the type of 'theta' (line 2078)
            theta_614764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2078, 44), 'theta', False)
            # Processing the call keyword arguments (line 2078)
            kwargs_614765 = {}
            # Getting the type of 'restore' (line 2078)
            restore_614759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2078, 27), 'restore', False)
            # Calling restore(args, kwargs) (line 2078)
            restore_call_result_614766 = invoke(stypy.reporting.localization.Localization(__file__, 2078, 27), restore_614759, *[subscript_call_result_614763, theta_614764], **kwargs_614765)
            
            # Assigning a type to the variable 'newtheta' (line 2078)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2078, 16), 'newtheta', restore_call_result_614766)
            
            # Call to _penalized_nnlf(...): (line 2079)
            # Processing the call arguments (line 2079)
            # Getting the type of 'newtheta' (line 2079)
            newtheta_614769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 44), 'newtheta', False)
            # Getting the type of 'x' (line 2079)
            x_614770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 54), 'x', False)
            # Processing the call keyword arguments (line 2079)
            kwargs_614771 = {}
            # Getting the type of 'self' (line 2079)
            self_614767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2079, 23), 'self', False)
            # Obtaining the member '_penalized_nnlf' of a type (line 2079)
            _penalized_nnlf_614768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2079, 23), self_614767, '_penalized_nnlf')
            # Calling _penalized_nnlf(args, kwargs) (line 2079)
            _penalized_nnlf_call_result_614772 = invoke(stypy.reporting.localization.Localization(__file__, 2079, 23), _penalized_nnlf_614768, *[newtheta_614769, x_614770], **kwargs_614771)
            
            # Assigning a type to the variable 'stypy_return_type' (line 2079)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2079, 16), 'stypy_return_type', _penalized_nnlf_call_result_614772)
            
            # ################# End of 'func(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'func' in the type store
            # Getting the type of 'stypy_return_type' (line 2077)
            stypy_return_type_614773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2077, 12), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_614773)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'func'
            return stypy_return_type_614773

        # Assigning a type to the variable 'func' (line 2077)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2077, 12), 'func', func)
        # SSA join for if statement (line 2058)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 2081)
        tuple_614774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2081, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2081)
        # Adding element type (line 2081)
        # Getting the type of 'x0' (line 2081)
        x0_614775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2081, 15), 'x0')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2081, 15), tuple_614774, x0_614775)
        # Adding element type (line 2081)
        # Getting the type of 'func' (line 2081)
        func_614776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2081, 19), 'func')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2081, 15), tuple_614774, func_614776)
        # Adding element type (line 2081)
        # Getting the type of 'restore' (line 2081)
        restore_614777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2081, 25), 'restore')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2081, 15), tuple_614774, restore_614777)
        # Adding element type (line 2081)
        # Getting the type of 'args' (line 2081)
        args_614778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2081, 34), 'args')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2081, 15), tuple_614774, args_614778)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2081)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2081, 8), 'stypy_return_type', tuple_614774)
        
        # ################# End of '_reduce_func(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_reduce_func' in the type store
        # Getting the type of 'stypy_return_type' (line 2031)
        stypy_return_type_614779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2031, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614779)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_reduce_func'
        return stypy_return_type_614779


    @norecursion
    def fit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'fit'
        module_type_store = module_type_store.open_function_context('fit', 2083, 4, False)
        # Assigning a type to the variable 'self' (line 2084)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2084, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.fit.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.fit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.fit.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.fit.__dict__.__setitem__('stypy_function_name', 'rv_continuous.fit')
        rv_continuous.fit.__dict__.__setitem__('stypy_param_names_list', ['data'])
        rv_continuous.fit.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.fit.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.fit.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.fit.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.fit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.fit.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.fit', ['data'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'fit', localization, ['data'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'fit(...)' code ##################

        str_614780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2179, (-1)), 'str', '\n        Return MLEs for shape (if applicable), location, and scale\n        parameters from data.\n\n        MLE stands for Maximum Likelihood Estimate.  Starting estimates for\n        the fit are given by input arguments; for any arguments not provided\n        with starting estimates, ``self._fitstart(data)`` is called to generate\n        such.\n\n        One can hold some parameters fixed to specific values by passing in\n        keyword arguments ``f0``, ``f1``, ..., ``fn`` (for shape parameters)\n        and ``floc`` and ``fscale`` (for location and scale parameters,\n        respectively).\n\n        Parameters\n        ----------\n        data : array_like\n            Data to use in calculating the MLEs.\n        args : floats, optional\n            Starting value(s) for any shape-characterizing arguments (those not\n            provided will be determined by a call to ``_fitstart(data)``).\n            No default value.\n        kwds : floats, optional\n            Starting values for the location and scale parameters; no default.\n            Special keyword arguments are recognized as holding certain\n            parameters fixed:\n\n            - f0...fn : hold respective shape parameters fixed.\n              Alternatively, shape parameters to fix can be specified by name.\n              For example, if ``self.shapes == "a, b"``, ``fa``and ``fix_a``\n              are equivalent to ``f0``, and ``fb`` and ``fix_b`` are\n              equivalent to ``f1``.\n\n            - floc : hold location parameter fixed to specified value.\n\n            - fscale : hold scale parameter fixed to specified value.\n\n            - optimizer : The optimizer to use.  The optimizer must take ``func``,\n              and starting position as the first two arguments,\n              plus ``args`` (for extra arguments to pass to the\n              function to be optimized) and ``disp=0`` to suppress\n              output as keyword arguments.\n\n        Returns\n        -------\n        mle_tuple : tuple of floats\n            MLEs for any shape parameters (if applicable), followed by those\n            for location and scale. For most random variables, shape statistics\n            will be returned, but there are exceptions (e.g. ``norm``).\n\n        Notes\n        -----\n        This fit is computed by maximizing a log-likelihood function, with\n        penalty applied for samples outside of range of the distribution. The\n        returned answer is not guaranteed to be the globally optimal MLE, it\n        may only be locally optimal, or the optimization may fail altogether.\n\n\n        Examples\n        --------\n\n        Generate some data to fit: draw random variates from the `beta`\n        distribution\n\n        >>> from scipy.stats import beta\n        >>> a, b = 1., 2.\n        >>> x = beta.rvs(a, b, size=1000)\n\n        Now we can fit all four parameters (``a``, ``b``, ``loc`` and ``scale``):\n\n        >>> a1, b1, loc1, scale1 = beta.fit(x)\n\n        We can also use some prior knowledge about the dataset: let\'s keep\n        ``loc`` and ``scale`` fixed:\n\n        >>> a1, b1, loc1, scale1 = beta.fit(x, floc=0, fscale=1)\n        >>> loc1, scale1\n        (0, 1)\n\n        We can also keep shape parameters fixed by using ``f``-keywords. To\n        keep the zero-th shape parameter ``a`` equal 1, use ``f0=1`` or,\n        equivalently, ``fa=1``:\n\n        >>> a1, b1, loc1, scale1 = beta.fit(x, fa=1, floc=0, fscale=1)\n        >>> a1\n        1\n\n        Not all distributions return estimates for the shape parameters.\n        ``norm`` for example just returns estimates for location and scale:\n\n        >>> from scipy.stats import norm\n        >>> x = norm.rvs(a, b, size=1000, random_state=123)\n        >>> loc1, scale1 = norm.fit(x)\n        >>> loc1, scale1\n        (0.92087172783841631, 2.0015750750324668)\n        ')
        
        # Assigning a Call to a Name (line 2180):
        
        # Assigning a Call to a Name (line 2180):
        
        # Call to len(...): (line 2180)
        # Processing the call arguments (line 2180)
        # Getting the type of 'args' (line 2180)
        args_614782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2180, 19), 'args', False)
        # Processing the call keyword arguments (line 2180)
        kwargs_614783 = {}
        # Getting the type of 'len' (line 2180)
        len_614781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2180, 15), 'len', False)
        # Calling len(args, kwargs) (line 2180)
        len_call_result_614784 = invoke(stypy.reporting.localization.Localization(__file__, 2180, 15), len_614781, *[args_614782], **kwargs_614783)
        
        # Assigning a type to the variable 'Narg' (line 2180)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2180, 8), 'Narg', len_call_result_614784)
        
        
        # Getting the type of 'Narg' (line 2181)
        Narg_614785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2181, 11), 'Narg')
        # Getting the type of 'self' (line 2181)
        self_614786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2181, 18), 'self')
        # Obtaining the member 'numargs' of a type (line 2181)
        numargs_614787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2181, 18), self_614786, 'numargs')
        # Applying the binary operator '>' (line 2181)
        result_gt_614788 = python_operator(stypy.reporting.localization.Localization(__file__, 2181, 11), '>', Narg_614785, numargs_614787)
        
        # Testing the type of an if condition (line 2181)
        if_condition_614789 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2181, 8), result_gt_614788)
        # Assigning a type to the variable 'if_condition_614789' (line 2181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2181, 8), 'if_condition_614789', if_condition_614789)
        # SSA begins for if statement (line 2181)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to TypeError(...): (line 2182)
        # Processing the call arguments (line 2182)
        str_614791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2182, 28), 'str', 'Too many input arguments.')
        # Processing the call keyword arguments (line 2182)
        kwargs_614792 = {}
        # Getting the type of 'TypeError' (line 2182)
        TypeError_614790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2182, 18), 'TypeError', False)
        # Calling TypeError(args, kwargs) (line 2182)
        TypeError_call_result_614793 = invoke(stypy.reporting.localization.Localization(__file__, 2182, 18), TypeError_614790, *[str_614791], **kwargs_614792)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2182, 12), TypeError_call_result_614793, 'raise parameter', BaseException)
        # SSA join for if statement (line 2181)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 2184):
        
        # Assigning a BinOp to a Name (line 2184):
        
        # Obtaining an instance of the builtin type 'list' (line 2184)
        list_614794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2184, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2184)
        # Adding element type (line 2184)
        # Getting the type of 'None' (line 2184)
        None_614795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2184, 17), 'None')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2184, 16), list_614794, None_614795)
        
        int_614796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2184, 23), 'int')
        # Applying the binary operator '*' (line 2184)
        result_mul_614797 = python_operator(stypy.reporting.localization.Localization(__file__, 2184, 16), '*', list_614794, int_614796)
        
        # Assigning a type to the variable 'start' (line 2184)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2184, 8), 'start', result_mul_614797)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'Narg' (line 2185)
        Narg_614798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2185, 12), 'Narg')
        # Getting the type of 'self' (line 2185)
        self_614799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2185, 19), 'self')
        # Obtaining the member 'numargs' of a type (line 2185)
        numargs_614800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2185, 19), self_614799, 'numargs')
        # Applying the binary operator '<' (line 2185)
        result_lt_614801 = python_operator(stypy.reporting.localization.Localization(__file__, 2185, 12), '<', Narg_614798, numargs_614800)
        
        
        
        # Evaluating a boolean operation
        
        str_614802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2185, 41), 'str', 'loc')
        # Getting the type of 'kwds' (line 2185)
        kwds_614803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2185, 50), 'kwds')
        # Applying the binary operator 'in' (line 2185)
        result_contains_614804 = python_operator(stypy.reporting.localization.Localization(__file__, 2185, 41), 'in', str_614802, kwds_614803)
        
        
        str_614805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2186, 41), 'str', 'scale')
        # Getting the type of 'kwds' (line 2186)
        kwds_614806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2186, 52), 'kwds')
        # Applying the binary operator 'in' (line 2186)
        result_contains_614807 = python_operator(stypy.reporting.localization.Localization(__file__, 2186, 41), 'in', str_614805, kwds_614806)
        
        # Applying the binary operator 'and' (line 2185)
        result_and_keyword_614808 = python_operator(stypy.reporting.localization.Localization(__file__, 2185, 41), 'and', result_contains_614804, result_contains_614807)
        
        # Applying the 'not' unary operator (line 2185)
        result_not__614809 = python_operator(stypy.reporting.localization.Localization(__file__, 2185, 36), 'not', result_and_keyword_614808)
        
        # Applying the binary operator 'or' (line 2185)
        result_or_keyword_614810 = python_operator(stypy.reporting.localization.Localization(__file__, 2185, 11), 'or', result_lt_614801, result_not__614809)
        
        # Testing the type of an if condition (line 2185)
        if_condition_614811 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2185, 8), result_or_keyword_614810)
        # Assigning a type to the variable 'if_condition_614811' (line 2185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2185, 8), 'if_condition_614811', if_condition_614811)
        # SSA begins for if statement (line 2185)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2188):
        
        # Assigning a Call to a Name (line 2188):
        
        # Call to _fitstart(...): (line 2188)
        # Processing the call arguments (line 2188)
        # Getting the type of 'data' (line 2188)
        data_614814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 35), 'data', False)
        # Processing the call keyword arguments (line 2188)
        kwargs_614815 = {}
        # Getting the type of 'self' (line 2188)
        self_614812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2188, 20), 'self', False)
        # Obtaining the member '_fitstart' of a type (line 2188)
        _fitstart_614813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2188, 20), self_614812, '_fitstart')
        # Calling _fitstart(args, kwargs) (line 2188)
        _fitstart_call_result_614816 = invoke(stypy.reporting.localization.Localization(__file__, 2188, 20), _fitstart_614813, *[data_614814], **kwargs_614815)
        
        # Assigning a type to the variable 'start' (line 2188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2188, 12), 'start', _fitstart_call_result_614816)
        
        # Getting the type of 'args' (line 2189)
        args_614817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2189, 12), 'args')
        
        # Obtaining the type of the subscript
        # Getting the type of 'Narg' (line 2189)
        Narg_614818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2189, 26), 'Narg')
        int_614819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2189, 31), 'int')
        slice_614820 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 2189, 20), Narg_614818, int_614819, None)
        # Getting the type of 'start' (line 2189)
        start_614821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2189, 20), 'start')
        # Obtaining the member '__getitem__' of a type (line 2189)
        getitem___614822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2189, 20), start_614821, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2189)
        subscript_call_result_614823 = invoke(stypy.reporting.localization.Localization(__file__, 2189, 20), getitem___614822, slice_614820)
        
        # Applying the binary operator '+=' (line 2189)
        result_iadd_614824 = python_operator(stypy.reporting.localization.Localization(__file__, 2189, 12), '+=', args_614817, subscript_call_result_614823)
        # Assigning a type to the variable 'args' (line 2189)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2189, 12), 'args', result_iadd_614824)
        
        # SSA join for if statement (line 2185)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2190):
        
        # Assigning a Call to a Name (line 2190):
        
        # Call to pop(...): (line 2190)
        # Processing the call arguments (line 2190)
        str_614827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2190, 23), 'str', 'loc')
        
        # Obtaining the type of the subscript
        int_614828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2190, 36), 'int')
        # Getting the type of 'start' (line 2190)
        start_614829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2190, 30), 'start', False)
        # Obtaining the member '__getitem__' of a type (line 2190)
        getitem___614830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2190, 30), start_614829, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2190)
        subscript_call_result_614831 = invoke(stypy.reporting.localization.Localization(__file__, 2190, 30), getitem___614830, int_614828)
        
        # Processing the call keyword arguments (line 2190)
        kwargs_614832 = {}
        # Getting the type of 'kwds' (line 2190)
        kwds_614825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2190, 14), 'kwds', False)
        # Obtaining the member 'pop' of a type (line 2190)
        pop_614826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2190, 14), kwds_614825, 'pop')
        # Calling pop(args, kwargs) (line 2190)
        pop_call_result_614833 = invoke(stypy.reporting.localization.Localization(__file__, 2190, 14), pop_614826, *[str_614827, subscript_call_result_614831], **kwargs_614832)
        
        # Assigning a type to the variable 'loc' (line 2190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2190, 8), 'loc', pop_call_result_614833)
        
        # Assigning a Call to a Name (line 2191):
        
        # Assigning a Call to a Name (line 2191):
        
        # Call to pop(...): (line 2191)
        # Processing the call arguments (line 2191)
        str_614836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2191, 25), 'str', 'scale')
        
        # Obtaining the type of the subscript
        int_614837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2191, 40), 'int')
        # Getting the type of 'start' (line 2191)
        start_614838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 34), 'start', False)
        # Obtaining the member '__getitem__' of a type (line 2191)
        getitem___614839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2191, 34), start_614838, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2191)
        subscript_call_result_614840 = invoke(stypy.reporting.localization.Localization(__file__, 2191, 34), getitem___614839, int_614837)
        
        # Processing the call keyword arguments (line 2191)
        kwargs_614841 = {}
        # Getting the type of 'kwds' (line 2191)
        kwds_614834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2191, 16), 'kwds', False)
        # Obtaining the member 'pop' of a type (line 2191)
        pop_614835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2191, 16), kwds_614834, 'pop')
        # Calling pop(args, kwargs) (line 2191)
        pop_call_result_614842 = invoke(stypy.reporting.localization.Localization(__file__, 2191, 16), pop_614835, *[str_614836, subscript_call_result_614840], **kwargs_614841)
        
        # Assigning a type to the variable 'scale' (line 2191)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2191, 8), 'scale', pop_call_result_614842)
        
        # Getting the type of 'args' (line 2192)
        args_614843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 8), 'args')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2192)
        tuple_614844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2192, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2192)
        # Adding element type (line 2192)
        # Getting the type of 'loc' (line 2192)
        loc_614845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 17), 'loc')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2192, 17), tuple_614844, loc_614845)
        # Adding element type (line 2192)
        # Getting the type of 'scale' (line 2192)
        scale_614846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2192, 22), 'scale')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2192, 17), tuple_614844, scale_614846)
        
        # Applying the binary operator '+=' (line 2192)
        result_iadd_614847 = python_operator(stypy.reporting.localization.Localization(__file__, 2192, 8), '+=', args_614843, tuple_614844)
        # Assigning a type to the variable 'args' (line 2192)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2192, 8), 'args', result_iadd_614847)
        
        
        # Assigning a Call to a Tuple (line 2193):
        
        # Assigning a Subscript to a Name (line 2193):
        
        # Obtaining the type of the subscript
        int_614848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 8), 'int')
        
        # Call to _reduce_func(...): (line 2193)
        # Processing the call arguments (line 2193)
        # Getting the type of 'args' (line 2193)
        args_614851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 52), 'args', False)
        # Getting the type of 'kwds' (line 2193)
        kwds_614852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 58), 'kwds', False)
        # Processing the call keyword arguments (line 2193)
        kwargs_614853 = {}
        # Getting the type of 'self' (line 2193)
        self_614849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 34), 'self', False)
        # Obtaining the member '_reduce_func' of a type (line 2193)
        _reduce_func_614850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 34), self_614849, '_reduce_func')
        # Calling _reduce_func(args, kwargs) (line 2193)
        _reduce_func_call_result_614854 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 34), _reduce_func_614850, *[args_614851, kwds_614852], **kwargs_614853)
        
        # Obtaining the member '__getitem__' of a type (line 2193)
        getitem___614855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 8), _reduce_func_call_result_614854, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2193)
        subscript_call_result_614856 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 8), getitem___614855, int_614848)
        
        # Assigning a type to the variable 'tuple_var_assignment_609345' (line 2193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'tuple_var_assignment_609345', subscript_call_result_614856)
        
        # Assigning a Subscript to a Name (line 2193):
        
        # Obtaining the type of the subscript
        int_614857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 8), 'int')
        
        # Call to _reduce_func(...): (line 2193)
        # Processing the call arguments (line 2193)
        # Getting the type of 'args' (line 2193)
        args_614860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 52), 'args', False)
        # Getting the type of 'kwds' (line 2193)
        kwds_614861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 58), 'kwds', False)
        # Processing the call keyword arguments (line 2193)
        kwargs_614862 = {}
        # Getting the type of 'self' (line 2193)
        self_614858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 34), 'self', False)
        # Obtaining the member '_reduce_func' of a type (line 2193)
        _reduce_func_614859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 34), self_614858, '_reduce_func')
        # Calling _reduce_func(args, kwargs) (line 2193)
        _reduce_func_call_result_614863 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 34), _reduce_func_614859, *[args_614860, kwds_614861], **kwargs_614862)
        
        # Obtaining the member '__getitem__' of a type (line 2193)
        getitem___614864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 8), _reduce_func_call_result_614863, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2193)
        subscript_call_result_614865 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 8), getitem___614864, int_614857)
        
        # Assigning a type to the variable 'tuple_var_assignment_609346' (line 2193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'tuple_var_assignment_609346', subscript_call_result_614865)
        
        # Assigning a Subscript to a Name (line 2193):
        
        # Obtaining the type of the subscript
        int_614866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 8), 'int')
        
        # Call to _reduce_func(...): (line 2193)
        # Processing the call arguments (line 2193)
        # Getting the type of 'args' (line 2193)
        args_614869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 52), 'args', False)
        # Getting the type of 'kwds' (line 2193)
        kwds_614870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 58), 'kwds', False)
        # Processing the call keyword arguments (line 2193)
        kwargs_614871 = {}
        # Getting the type of 'self' (line 2193)
        self_614867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 34), 'self', False)
        # Obtaining the member '_reduce_func' of a type (line 2193)
        _reduce_func_614868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 34), self_614867, '_reduce_func')
        # Calling _reduce_func(args, kwargs) (line 2193)
        _reduce_func_call_result_614872 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 34), _reduce_func_614868, *[args_614869, kwds_614870], **kwargs_614871)
        
        # Obtaining the member '__getitem__' of a type (line 2193)
        getitem___614873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 8), _reduce_func_call_result_614872, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2193)
        subscript_call_result_614874 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 8), getitem___614873, int_614866)
        
        # Assigning a type to the variable 'tuple_var_assignment_609347' (line 2193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'tuple_var_assignment_609347', subscript_call_result_614874)
        
        # Assigning a Subscript to a Name (line 2193):
        
        # Obtaining the type of the subscript
        int_614875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2193, 8), 'int')
        
        # Call to _reduce_func(...): (line 2193)
        # Processing the call arguments (line 2193)
        # Getting the type of 'args' (line 2193)
        args_614878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 52), 'args', False)
        # Getting the type of 'kwds' (line 2193)
        kwds_614879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 58), 'kwds', False)
        # Processing the call keyword arguments (line 2193)
        kwargs_614880 = {}
        # Getting the type of 'self' (line 2193)
        self_614876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 34), 'self', False)
        # Obtaining the member '_reduce_func' of a type (line 2193)
        _reduce_func_614877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 34), self_614876, '_reduce_func')
        # Calling _reduce_func(args, kwargs) (line 2193)
        _reduce_func_call_result_614881 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 34), _reduce_func_614877, *[args_614878, kwds_614879], **kwargs_614880)
        
        # Obtaining the member '__getitem__' of a type (line 2193)
        getitem___614882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2193, 8), _reduce_func_call_result_614881, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2193)
        subscript_call_result_614883 = invoke(stypy.reporting.localization.Localization(__file__, 2193, 8), getitem___614882, int_614875)
        
        # Assigning a type to the variable 'tuple_var_assignment_609348' (line 2193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'tuple_var_assignment_609348', subscript_call_result_614883)
        
        # Assigning a Name to a Name (line 2193):
        # Getting the type of 'tuple_var_assignment_609345' (line 2193)
        tuple_var_assignment_609345_614884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'tuple_var_assignment_609345')
        # Assigning a type to the variable 'x0' (line 2193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'x0', tuple_var_assignment_609345_614884)
        
        # Assigning a Name to a Name (line 2193):
        # Getting the type of 'tuple_var_assignment_609346' (line 2193)
        tuple_var_assignment_609346_614885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'tuple_var_assignment_609346')
        # Assigning a type to the variable 'func' (line 2193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2193, 12), 'func', tuple_var_assignment_609346_614885)
        
        # Assigning a Name to a Name (line 2193):
        # Getting the type of 'tuple_var_assignment_609347' (line 2193)
        tuple_var_assignment_609347_614886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'tuple_var_assignment_609347')
        # Assigning a type to the variable 'restore' (line 2193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2193, 18), 'restore', tuple_var_assignment_609347_614886)
        
        # Assigning a Name to a Name (line 2193):
        # Getting the type of 'tuple_var_assignment_609348' (line 2193)
        tuple_var_assignment_609348_614887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2193, 8), 'tuple_var_assignment_609348')
        # Assigning a type to the variable 'args' (line 2193)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2193, 27), 'args', tuple_var_assignment_609348_614887)
        
        # Assigning a Call to a Name (line 2195):
        
        # Assigning a Call to a Name (line 2195):
        
        # Call to pop(...): (line 2195)
        # Processing the call arguments (line 2195)
        str_614890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2195, 29), 'str', 'optimizer')
        # Getting the type of 'optimize' (line 2195)
        optimize_614891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2195, 42), 'optimize', False)
        # Obtaining the member 'fmin' of a type (line 2195)
        fmin_614892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2195, 42), optimize_614891, 'fmin')
        # Processing the call keyword arguments (line 2195)
        kwargs_614893 = {}
        # Getting the type of 'kwds' (line 2195)
        kwds_614888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2195, 20), 'kwds', False)
        # Obtaining the member 'pop' of a type (line 2195)
        pop_614889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2195, 20), kwds_614888, 'pop')
        # Calling pop(args, kwargs) (line 2195)
        pop_call_result_614894 = invoke(stypy.reporting.localization.Localization(__file__, 2195, 20), pop_614889, *[str_614890, fmin_614892], **kwargs_614893)
        
        # Assigning a type to the variable 'optimizer' (line 2195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2195, 8), 'optimizer', pop_call_result_614894)
        
        
        # Evaluating a boolean operation
        
        
        # Call to callable(...): (line 2197)
        # Processing the call arguments (line 2197)
        # Getting the type of 'optimizer' (line 2197)
        optimizer_614896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 24), 'optimizer', False)
        # Processing the call keyword arguments (line 2197)
        kwargs_614897 = {}
        # Getting the type of 'callable' (line 2197)
        callable_614895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 15), 'callable', False)
        # Calling callable(args, kwargs) (line 2197)
        callable_call_result_614898 = invoke(stypy.reporting.localization.Localization(__file__, 2197, 15), callable_614895, *[optimizer_614896], **kwargs_614897)
        
        # Applying the 'not' unary operator (line 2197)
        result_not__614899 = python_operator(stypy.reporting.localization.Localization(__file__, 2197, 11), 'not', callable_call_result_614898)
        
        
        # Call to isinstance(...): (line 2197)
        # Processing the call arguments (line 2197)
        # Getting the type of 'optimizer' (line 2197)
        optimizer_614901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 50), 'optimizer', False)
        # Getting the type of 'string_types' (line 2197)
        string_types_614902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 61), 'string_types', False)
        # Processing the call keyword arguments (line 2197)
        kwargs_614903 = {}
        # Getting the type of 'isinstance' (line 2197)
        isinstance_614900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2197, 39), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 2197)
        isinstance_call_result_614904 = invoke(stypy.reporting.localization.Localization(__file__, 2197, 39), isinstance_614900, *[optimizer_614901, string_types_614902], **kwargs_614903)
        
        # Applying the binary operator 'and' (line 2197)
        result_and_keyword_614905 = python_operator(stypy.reporting.localization.Localization(__file__, 2197, 11), 'and', result_not__614899, isinstance_call_result_614904)
        
        # Testing the type of an if condition (line 2197)
        if_condition_614906 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2197, 8), result_and_keyword_614905)
        # Assigning a type to the variable 'if_condition_614906' (line 2197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2197, 8), 'if_condition_614906', if_condition_614906)
        # SSA begins for if statement (line 2197)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        
        
        # Call to startswith(...): (line 2198)
        # Processing the call arguments (line 2198)
        str_614909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2198, 40), 'str', 'fmin_')
        # Processing the call keyword arguments (line 2198)
        kwargs_614910 = {}
        # Getting the type of 'optimizer' (line 2198)
        optimizer_614907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2198, 19), 'optimizer', False)
        # Obtaining the member 'startswith' of a type (line 2198)
        startswith_614908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2198, 19), optimizer_614907, 'startswith')
        # Calling startswith(args, kwargs) (line 2198)
        startswith_call_result_614911 = invoke(stypy.reporting.localization.Localization(__file__, 2198, 19), startswith_614908, *[str_614909], **kwargs_614910)
        
        # Applying the 'not' unary operator (line 2198)
        result_not__614912 = python_operator(stypy.reporting.localization.Localization(__file__, 2198, 15), 'not', startswith_call_result_614911)
        
        # Testing the type of an if condition (line 2198)
        if_condition_614913 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2198, 12), result_not__614912)
        # Assigning a type to the variable 'if_condition_614913' (line 2198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2198, 12), 'if_condition_614913', if_condition_614913)
        # SSA begins for if statement (line 2198)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 2199):
        
        # Assigning a BinOp to a Name (line 2199):
        str_614914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2199, 28), 'str', 'fmin_')
        # Getting the type of 'optimizer' (line 2199)
        optimizer_614915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2199, 36), 'optimizer')
        # Applying the binary operator '+' (line 2199)
        result_add_614916 = python_operator(stypy.reporting.localization.Localization(__file__, 2199, 28), '+', str_614914, optimizer_614915)
        
        # Assigning a type to the variable 'optimizer' (line 2199)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2199, 16), 'optimizer', result_add_614916)
        # SSA join for if statement (line 2198)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'optimizer' (line 2200)
        optimizer_614917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2200, 15), 'optimizer')
        str_614918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2200, 28), 'str', 'fmin_')
        # Applying the binary operator '==' (line 2200)
        result_eq_614919 = python_operator(stypy.reporting.localization.Localization(__file__, 2200, 15), '==', optimizer_614917, str_614918)
        
        # Testing the type of an if condition (line 2200)
        if_condition_614920 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2200, 12), result_eq_614919)
        # Assigning a type to the variable 'if_condition_614920' (line 2200)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2200, 12), 'if_condition_614920', if_condition_614920)
        # SSA begins for if statement (line 2200)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Str to a Name (line 2201):
        
        # Assigning a Str to a Name (line 2201):
        str_614921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2201, 28), 'str', 'fmin')
        # Assigning a type to the variable 'optimizer' (line 2201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2201, 16), 'optimizer', str_614921)
        # SSA join for if statement (line 2200)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # SSA begins for try-except statement (line 2202)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 2203):
        
        # Assigning a Call to a Name (line 2203):
        
        # Call to getattr(...): (line 2203)
        # Processing the call arguments (line 2203)
        # Getting the type of 'optimize' (line 2203)
        optimize_614923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2203, 36), 'optimize', False)
        # Getting the type of 'optimizer' (line 2203)
        optimizer_614924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2203, 46), 'optimizer', False)
        # Processing the call keyword arguments (line 2203)
        kwargs_614925 = {}
        # Getting the type of 'getattr' (line 2203)
        getattr_614922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2203, 28), 'getattr', False)
        # Calling getattr(args, kwargs) (line 2203)
        getattr_call_result_614926 = invoke(stypy.reporting.localization.Localization(__file__, 2203, 28), getattr_614922, *[optimize_614923, optimizer_614924], **kwargs_614925)
        
        # Assigning a type to the variable 'optimizer' (line 2203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2203, 16), 'optimizer', getattr_call_result_614926)
        # SSA branch for the except part of a try statement (line 2202)
        # SSA branch for the except 'AttributeError' branch of a try statement (line 2202)
        module_type_store.open_ssa_branch('except')
        
        # Call to ValueError(...): (line 2205)
        # Processing the call arguments (line 2205)
        str_614928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2205, 33), 'str', '%s is not a valid optimizer')
        # Getting the type of 'optimizer' (line 2205)
        optimizer_614929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2205, 65), 'optimizer', False)
        # Applying the binary operator '%' (line 2205)
        result_mod_614930 = python_operator(stypy.reporting.localization.Localization(__file__, 2205, 33), '%', str_614928, optimizer_614929)
        
        # Processing the call keyword arguments (line 2205)
        kwargs_614931 = {}
        # Getting the type of 'ValueError' (line 2205)
        ValueError_614927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2205, 22), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 2205)
        ValueError_call_result_614932 = invoke(stypy.reporting.localization.Localization(__file__, 2205, 22), ValueError_614927, *[result_mod_614930], **kwargs_614931)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2205, 16), ValueError_call_result_614932, 'raise parameter', BaseException)
        # SSA join for try-except statement (line 2202)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2197)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'kwds' (line 2208)
        kwds_614933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2208, 11), 'kwds')
        # Testing the type of an if condition (line 2208)
        if_condition_614934 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2208, 8), kwds_614933)
        # Assigning a type to the variable 'if_condition_614934' (line 2208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2208, 8), 'if_condition_614934', if_condition_614934)
        # SSA begins for if statement (line 2208)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to TypeError(...): (line 2209)
        # Processing the call arguments (line 2209)
        str_614936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2209, 28), 'str', 'Unknown arguments: %s.')
        # Getting the type of 'kwds' (line 2209)
        kwds_614937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2209, 55), 'kwds', False)
        # Applying the binary operator '%' (line 2209)
        result_mod_614938 = python_operator(stypy.reporting.localization.Localization(__file__, 2209, 28), '%', str_614936, kwds_614937)
        
        # Processing the call keyword arguments (line 2209)
        kwargs_614939 = {}
        # Getting the type of 'TypeError' (line 2209)
        TypeError_614935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2209, 18), 'TypeError', False)
        # Calling TypeError(args, kwargs) (line 2209)
        TypeError_call_result_614940 = invoke(stypy.reporting.localization.Localization(__file__, 2209, 18), TypeError_614935, *[result_mod_614938], **kwargs_614939)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2209, 12), TypeError_call_result_614940, 'raise parameter', BaseException)
        # SSA join for if statement (line 2208)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 2211):
        
        # Assigning a Call to a Name (line 2211):
        
        # Call to optimizer(...): (line 2211)
        # Processing the call arguments (line 2211)
        # Getting the type of 'func' (line 2211)
        func_614942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2211, 25), 'func', False)
        # Getting the type of 'x0' (line 2211)
        x0_614943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2211, 31), 'x0', False)
        # Processing the call keyword arguments (line 2211)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2211)
        tuple_614944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2211, 41), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2211)
        # Adding element type (line 2211)
        
        # Call to ravel(...): (line 2211)
        # Processing the call arguments (line 2211)
        # Getting the type of 'data' (line 2211)
        data_614946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2211, 47), 'data', False)
        # Processing the call keyword arguments (line 2211)
        kwargs_614947 = {}
        # Getting the type of 'ravel' (line 2211)
        ravel_614945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2211, 41), 'ravel', False)
        # Calling ravel(args, kwargs) (line 2211)
        ravel_call_result_614948 = invoke(stypy.reporting.localization.Localization(__file__, 2211, 41), ravel_614945, *[data_614946], **kwargs_614947)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2211, 41), tuple_614944, ravel_call_result_614948)
        
        keyword_614949 = tuple_614944
        int_614950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2211, 61), 'int')
        keyword_614951 = int_614950
        kwargs_614952 = {'disp': keyword_614951, 'args': keyword_614949}
        # Getting the type of 'optimizer' (line 2211)
        optimizer_614941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2211, 15), 'optimizer', False)
        # Calling optimizer(args, kwargs) (line 2211)
        optimizer_call_result_614953 = invoke(stypy.reporting.localization.Localization(__file__, 2211, 15), optimizer_614941, *[func_614942, x0_614943], **kwargs_614952)
        
        # Assigning a type to the variable 'vals' (line 2211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2211, 8), 'vals', optimizer_call_result_614953)
        
        # Type idiom detected: calculating its left and rigth part (line 2212)
        # Getting the type of 'restore' (line 2212)
        restore_614954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2212, 8), 'restore')
        # Getting the type of 'None' (line 2212)
        None_614955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2212, 26), 'None')
        
        (may_be_614956, more_types_in_union_614957) = may_not_be_none(restore_614954, None_614955)

        if may_be_614956:

            if more_types_in_union_614957:
                # Runtime conditional SSA (line 2212)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 2213):
            
            # Assigning a Call to a Name (line 2213):
            
            # Call to restore(...): (line 2213)
            # Processing the call arguments (line 2213)
            # Getting the type of 'args' (line 2213)
            args_614959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2213, 27), 'args', False)
            # Getting the type of 'vals' (line 2213)
            vals_614960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2213, 33), 'vals', False)
            # Processing the call keyword arguments (line 2213)
            kwargs_614961 = {}
            # Getting the type of 'restore' (line 2213)
            restore_614958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2213, 19), 'restore', False)
            # Calling restore(args, kwargs) (line 2213)
            restore_call_result_614962 = invoke(stypy.reporting.localization.Localization(__file__, 2213, 19), restore_614958, *[args_614959, vals_614960], **kwargs_614961)
            
            # Assigning a type to the variable 'vals' (line 2213)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2213, 12), 'vals', restore_call_result_614962)

            if more_types_in_union_614957:
                # SSA join for if statement (line 2212)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 2214):
        
        # Assigning a Call to a Name (line 2214):
        
        # Call to tuple(...): (line 2214)
        # Processing the call arguments (line 2214)
        # Getting the type of 'vals' (line 2214)
        vals_614964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2214, 21), 'vals', False)
        # Processing the call keyword arguments (line 2214)
        kwargs_614965 = {}
        # Getting the type of 'tuple' (line 2214)
        tuple_614963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2214, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 2214)
        tuple_call_result_614966 = invoke(stypy.reporting.localization.Localization(__file__, 2214, 15), tuple_614963, *[vals_614964], **kwargs_614965)
        
        # Assigning a type to the variable 'vals' (line 2214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2214, 8), 'vals', tuple_call_result_614966)
        # Getting the type of 'vals' (line 2215)
        vals_614967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2215, 15), 'vals')
        # Assigning a type to the variable 'stypy_return_type' (line 2215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2215, 8), 'stypy_return_type', vals_614967)
        
        # ################# End of 'fit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'fit' in the type store
        # Getting the type of 'stypy_return_type' (line 2083)
        stypy_return_type_614968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2083, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_614968)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'fit'
        return stypy_return_type_614968


    @norecursion
    def _fit_loc_scale_support(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_fit_loc_scale_support'
        module_type_store = module_type_store.open_function_context('_fit_loc_scale_support', 2217, 4, False)
        # Assigning a type to the variable 'self' (line 2218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2218, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_function_name', 'rv_continuous._fit_loc_scale_support')
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_param_names_list', ['data'])
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._fit_loc_scale_support.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._fit_loc_scale_support', ['data'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_fit_loc_scale_support', localization, ['data'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_fit_loc_scale_support(...)' code ##################

        str_614969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2236, (-1)), 'str', '\n        Estimate loc and scale parameters from data accounting for support.\n\n        Parameters\n        ----------\n        data : array_like\n            Data to fit.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n\n        Returns\n        -------\n        Lhat : float\n            Estimated location parameter for the data.\n        Shat : float\n            Estimated scale parameter for the data.\n\n        ')
        
        # Assigning a Call to a Name (line 2237):
        
        # Assigning a Call to a Name (line 2237):
        
        # Call to asarray(...): (line 2237)
        # Processing the call arguments (line 2237)
        # Getting the type of 'data' (line 2237)
        data_614972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2237, 26), 'data', False)
        # Processing the call keyword arguments (line 2237)
        kwargs_614973 = {}
        # Getting the type of 'np' (line 2237)
        np_614970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2237, 15), 'np', False)
        # Obtaining the member 'asarray' of a type (line 2237)
        asarray_614971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2237, 15), np_614970, 'asarray')
        # Calling asarray(args, kwargs) (line 2237)
        asarray_call_result_614974 = invoke(stypy.reporting.localization.Localization(__file__, 2237, 15), asarray_614971, *[data_614972], **kwargs_614973)
        
        # Assigning a type to the variable 'data' (line 2237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2237, 8), 'data', asarray_call_result_614974)
        
        # Assigning a Call to a Tuple (line 2240):
        
        # Assigning a Subscript to a Name (line 2240):
        
        # Obtaining the type of the subscript
        int_614975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2240, 8), 'int')
        
        # Call to fit_loc_scale(...): (line 2240)
        # Processing the call arguments (line 2240)
        # Getting the type of 'data' (line 2240)
        data_614978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 48), 'data', False)
        # Getting the type of 'args' (line 2240)
        args_614979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 55), 'args', False)
        # Processing the call keyword arguments (line 2240)
        kwargs_614980 = {}
        # Getting the type of 'self' (line 2240)
        self_614976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 29), 'self', False)
        # Obtaining the member 'fit_loc_scale' of a type (line 2240)
        fit_loc_scale_614977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2240, 29), self_614976, 'fit_loc_scale')
        # Calling fit_loc_scale(args, kwargs) (line 2240)
        fit_loc_scale_call_result_614981 = invoke(stypy.reporting.localization.Localization(__file__, 2240, 29), fit_loc_scale_614977, *[data_614978, args_614979], **kwargs_614980)
        
        # Obtaining the member '__getitem__' of a type (line 2240)
        getitem___614982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2240, 8), fit_loc_scale_call_result_614981, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2240)
        subscript_call_result_614983 = invoke(stypy.reporting.localization.Localization(__file__, 2240, 8), getitem___614982, int_614975)
        
        # Assigning a type to the variable 'tuple_var_assignment_609349' (line 2240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2240, 8), 'tuple_var_assignment_609349', subscript_call_result_614983)
        
        # Assigning a Subscript to a Name (line 2240):
        
        # Obtaining the type of the subscript
        int_614984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2240, 8), 'int')
        
        # Call to fit_loc_scale(...): (line 2240)
        # Processing the call arguments (line 2240)
        # Getting the type of 'data' (line 2240)
        data_614987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 48), 'data', False)
        # Getting the type of 'args' (line 2240)
        args_614988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 55), 'args', False)
        # Processing the call keyword arguments (line 2240)
        kwargs_614989 = {}
        # Getting the type of 'self' (line 2240)
        self_614985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 29), 'self', False)
        # Obtaining the member 'fit_loc_scale' of a type (line 2240)
        fit_loc_scale_614986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2240, 29), self_614985, 'fit_loc_scale')
        # Calling fit_loc_scale(args, kwargs) (line 2240)
        fit_loc_scale_call_result_614990 = invoke(stypy.reporting.localization.Localization(__file__, 2240, 29), fit_loc_scale_614986, *[data_614987, args_614988], **kwargs_614989)
        
        # Obtaining the member '__getitem__' of a type (line 2240)
        getitem___614991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2240, 8), fit_loc_scale_call_result_614990, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2240)
        subscript_call_result_614992 = invoke(stypy.reporting.localization.Localization(__file__, 2240, 8), getitem___614991, int_614984)
        
        # Assigning a type to the variable 'tuple_var_assignment_609350' (line 2240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2240, 8), 'tuple_var_assignment_609350', subscript_call_result_614992)
        
        # Assigning a Name to a Name (line 2240):
        # Getting the type of 'tuple_var_assignment_609349' (line 2240)
        tuple_var_assignment_609349_614993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 8), 'tuple_var_assignment_609349')
        # Assigning a type to the variable 'loc_hat' (line 2240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2240, 8), 'loc_hat', tuple_var_assignment_609349_614993)
        
        # Assigning a Name to a Name (line 2240):
        # Getting the type of 'tuple_var_assignment_609350' (line 2240)
        tuple_var_assignment_609350_614994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2240, 8), 'tuple_var_assignment_609350')
        # Assigning a type to the variable 'scale_hat' (line 2240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2240, 17), 'scale_hat', tuple_var_assignment_609350_614994)
        
        # Call to _argcheck(...): (line 2243)
        # Getting the type of 'args' (line 2243)
        args_614997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2243, 24), 'args', False)
        # Processing the call keyword arguments (line 2243)
        kwargs_614998 = {}
        # Getting the type of 'self' (line 2243)
        self_614995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2243, 8), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 2243)
        _argcheck_614996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2243, 8), self_614995, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 2243)
        _argcheck_call_result_614999 = invoke(stypy.reporting.localization.Localization(__file__, 2243, 8), _argcheck_614996, *[args_614997], **kwargs_614998)
        
        
        # Assigning a Tuple to a Tuple (line 2244):
        
        # Assigning a Attribute to a Name (line 2244):
        # Getting the type of 'self' (line 2244)
        self_615000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2244, 15), 'self')
        # Obtaining the member 'a' of a type (line 2244)
        a_615001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2244, 15), self_615000, 'a')
        # Assigning a type to the variable 'tuple_assignment_609351' (line 2244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2244, 8), 'tuple_assignment_609351', a_615001)
        
        # Assigning a Attribute to a Name (line 2244):
        # Getting the type of 'self' (line 2244)
        self_615002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2244, 23), 'self')
        # Obtaining the member 'b' of a type (line 2244)
        b_615003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2244, 23), self_615002, 'b')
        # Assigning a type to the variable 'tuple_assignment_609352' (line 2244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2244, 8), 'tuple_assignment_609352', b_615003)
        
        # Assigning a Name to a Name (line 2244):
        # Getting the type of 'tuple_assignment_609351' (line 2244)
        tuple_assignment_609351_615004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2244, 8), 'tuple_assignment_609351')
        # Assigning a type to the variable 'a' (line 2244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2244, 8), 'a', tuple_assignment_609351_615004)
        
        # Assigning a Name to a Name (line 2244):
        # Getting the type of 'tuple_assignment_609352' (line 2244)
        tuple_assignment_609352_615005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2244, 8), 'tuple_assignment_609352')
        # Assigning a type to the variable 'b' (line 2244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2244, 11), 'b', tuple_assignment_609352_615005)
        
        # Assigning a BinOp to a Name (line 2245):
        
        # Assigning a BinOp to a Name (line 2245):
        # Getting the type of 'b' (line 2245)
        b_615006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2245, 24), 'b')
        # Getting the type of 'a' (line 2245)
        a_615007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2245, 28), 'a')
        # Applying the binary operator '-' (line 2245)
        result_sub_615008 = python_operator(stypy.reporting.localization.Localization(__file__, 2245, 24), '-', b_615006, a_615007)
        
        # Assigning a type to the variable 'support_width' (line 2245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2245, 8), 'support_width', result_sub_615008)
        
        
        # Getting the type of 'support_width' (line 2248)
        support_width_615009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2248, 11), 'support_width')
        int_615010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2248, 28), 'int')
        # Applying the binary operator '<=' (line 2248)
        result_le_615011 = python_operator(stypy.reporting.localization.Localization(__file__, 2248, 11), '<=', support_width_615009, int_615010)
        
        # Testing the type of an if condition (line 2248)
        if_condition_615012 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2248, 8), result_le_615011)
        # Assigning a type to the variable 'if_condition_615012' (line 2248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2248, 8), 'if_condition_615012', if_condition_615012)
        # SSA begins for if statement (line 2248)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2249)
        tuple_615013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2249, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2249)
        # Adding element type (line 2249)
        # Getting the type of 'loc_hat' (line 2249)
        loc_hat_615014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2249, 19), 'loc_hat')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2249, 19), tuple_615013, loc_hat_615014)
        # Adding element type (line 2249)
        # Getting the type of 'scale_hat' (line 2249)
        scale_hat_615015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2249, 28), 'scale_hat')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2249, 19), tuple_615013, scale_hat_615015)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2249)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2249, 12), 'stypy_return_type', tuple_615013)
        # SSA join for if statement (line 2248)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 2252):
        
        # Assigning a BinOp to a Name (line 2252):
        # Getting the type of 'loc_hat' (line 2252)
        loc_hat_615016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2252, 16), 'loc_hat')
        # Getting the type of 'a' (line 2252)
        a_615017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2252, 26), 'a')
        # Getting the type of 'scale_hat' (line 2252)
        scale_hat_615018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2252, 30), 'scale_hat')
        # Applying the binary operator '*' (line 2252)
        result_mul_615019 = python_operator(stypy.reporting.localization.Localization(__file__, 2252, 26), '*', a_615017, scale_hat_615018)
        
        # Applying the binary operator '+' (line 2252)
        result_add_615020 = python_operator(stypy.reporting.localization.Localization(__file__, 2252, 16), '+', loc_hat_615016, result_mul_615019)
        
        # Assigning a type to the variable 'a_hat' (line 2252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2252, 8), 'a_hat', result_add_615020)
        
        # Assigning a BinOp to a Name (line 2253):
        
        # Assigning a BinOp to a Name (line 2253):
        # Getting the type of 'loc_hat' (line 2253)
        loc_hat_615021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2253, 16), 'loc_hat')
        # Getting the type of 'b' (line 2253)
        b_615022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2253, 26), 'b')
        # Getting the type of 'scale_hat' (line 2253)
        scale_hat_615023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2253, 30), 'scale_hat')
        # Applying the binary operator '*' (line 2253)
        result_mul_615024 = python_operator(stypy.reporting.localization.Localization(__file__, 2253, 26), '*', b_615022, scale_hat_615023)
        
        # Applying the binary operator '+' (line 2253)
        result_add_615025 = python_operator(stypy.reporting.localization.Localization(__file__, 2253, 16), '+', loc_hat_615021, result_mul_615024)
        
        # Assigning a type to the variable 'b_hat' (line 2253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2253, 8), 'b_hat', result_add_615025)
        
        # Assigning a Call to a Name (line 2256):
        
        # Assigning a Call to a Name (line 2256):
        
        # Call to min(...): (line 2256)
        # Processing the call arguments (line 2256)
        # Getting the type of 'data' (line 2256)
        data_615028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2256, 24), 'data', False)
        # Processing the call keyword arguments (line 2256)
        kwargs_615029 = {}
        # Getting the type of 'np' (line 2256)
        np_615026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2256, 17), 'np', False)
        # Obtaining the member 'min' of a type (line 2256)
        min_615027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2256, 17), np_615026, 'min')
        # Calling min(args, kwargs) (line 2256)
        min_call_result_615030 = invoke(stypy.reporting.localization.Localization(__file__, 2256, 17), min_615027, *[data_615028], **kwargs_615029)
        
        # Assigning a type to the variable 'data_a' (line 2256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2256, 8), 'data_a', min_call_result_615030)
        
        # Assigning a Call to a Name (line 2257):
        
        # Assigning a Call to a Name (line 2257):
        
        # Call to max(...): (line 2257)
        # Processing the call arguments (line 2257)
        # Getting the type of 'data' (line 2257)
        data_615033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2257, 24), 'data', False)
        # Processing the call keyword arguments (line 2257)
        kwargs_615034 = {}
        # Getting the type of 'np' (line 2257)
        np_615031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2257, 17), 'np', False)
        # Obtaining the member 'max' of a type (line 2257)
        max_615032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2257, 17), np_615031, 'max')
        # Calling max(args, kwargs) (line 2257)
        max_call_result_615035 = invoke(stypy.reporting.localization.Localization(__file__, 2257, 17), max_615032, *[data_615033], **kwargs_615034)
        
        # Assigning a type to the variable 'data_b' (line 2257)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2257, 8), 'data_b', max_call_result_615035)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'a_hat' (line 2258)
        a_hat_615036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2258, 11), 'a_hat')
        # Getting the type of 'data_a' (line 2258)
        data_a_615037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2258, 19), 'data_a')
        # Applying the binary operator '<' (line 2258)
        result_lt_615038 = python_operator(stypy.reporting.localization.Localization(__file__, 2258, 11), '<', a_hat_615036, data_a_615037)
        
        
        # Getting the type of 'data_b' (line 2258)
        data_b_615039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2258, 30), 'data_b')
        # Getting the type of 'b_hat' (line 2258)
        b_hat_615040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2258, 39), 'b_hat')
        # Applying the binary operator '<' (line 2258)
        result_lt_615041 = python_operator(stypy.reporting.localization.Localization(__file__, 2258, 30), '<', data_b_615039, b_hat_615040)
        
        # Applying the binary operator 'and' (line 2258)
        result_and_keyword_615042 = python_operator(stypy.reporting.localization.Localization(__file__, 2258, 11), 'and', result_lt_615038, result_lt_615041)
        
        # Testing the type of an if condition (line 2258)
        if_condition_615043 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2258, 8), result_and_keyword_615042)
        # Assigning a type to the variable 'if_condition_615043' (line 2258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2258, 8), 'if_condition_615043', if_condition_615043)
        # SSA begins for if statement (line 2258)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2259)
        tuple_615044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2259, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2259)
        # Adding element type (line 2259)
        # Getting the type of 'loc_hat' (line 2259)
        loc_hat_615045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2259, 19), 'loc_hat')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2259, 19), tuple_615044, loc_hat_615045)
        # Adding element type (line 2259)
        # Getting the type of 'scale_hat' (line 2259)
        scale_hat_615046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2259, 28), 'scale_hat')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2259, 19), tuple_615044, scale_hat_615046)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2259, 12), 'stypy_return_type', tuple_615044)
        # SSA join for if statement (line 2258)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 2262):
        
        # Assigning a BinOp to a Name (line 2262):
        # Getting the type of 'data_b' (line 2262)
        data_b_615047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2262, 21), 'data_b')
        # Getting the type of 'data_a' (line 2262)
        data_a_615048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2262, 30), 'data_a')
        # Applying the binary operator '-' (line 2262)
        result_sub_615049 = python_operator(stypy.reporting.localization.Localization(__file__, 2262, 21), '-', data_b_615047, data_a_615048)
        
        # Assigning a type to the variable 'data_width' (line 2262)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2262, 8), 'data_width', result_sub_615049)
        
        # Assigning a Num to a Name (line 2263):
        
        # Assigning a Num to a Name (line 2263):
        float_615050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2263, 21), 'float')
        # Assigning a type to the variable 'rel_margin' (line 2263)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2263, 8), 'rel_margin', float_615050)
        
        # Assigning a BinOp to a Name (line 2264):
        
        # Assigning a BinOp to a Name (line 2264):
        # Getting the type of 'data_width' (line 2264)
        data_width_615051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2264, 17), 'data_width')
        # Getting the type of 'rel_margin' (line 2264)
        rel_margin_615052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2264, 30), 'rel_margin')
        # Applying the binary operator '*' (line 2264)
        result_mul_615053 = python_operator(stypy.reporting.localization.Localization(__file__, 2264, 17), '*', data_width_615051, rel_margin_615052)
        
        # Assigning a type to the variable 'margin' (line 2264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2264, 8), 'margin', result_mul_615053)
        
        
        # Getting the type of 'support_width' (line 2268)
        support_width_615054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2268, 11), 'support_width')
        # Getting the type of 'np' (line 2268)
        np_615055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2268, 27), 'np')
        # Obtaining the member 'inf' of a type (line 2268)
        inf_615056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2268, 27), np_615055, 'inf')
        # Applying the binary operator '<' (line 2268)
        result_lt_615057 = python_operator(stypy.reporting.localization.Localization(__file__, 2268, 11), '<', support_width_615054, inf_615056)
        
        # Testing the type of an if condition (line 2268)
        if_condition_615058 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2268, 8), result_lt_615057)
        # Assigning a type to the variable 'if_condition_615058' (line 2268)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2268, 8), 'if_condition_615058', if_condition_615058)
        # SSA begins for if statement (line 2268)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 2269):
        
        # Assigning a BinOp to a Name (line 2269):
        # Getting the type of 'data_a' (line 2269)
        data_a_615059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2269, 23), 'data_a')
        # Getting the type of 'a' (line 2269)
        a_615060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2269, 32), 'a')
        # Applying the binary operator '-' (line 2269)
        result_sub_615061 = python_operator(stypy.reporting.localization.Localization(__file__, 2269, 23), '-', data_a_615059, a_615060)
        
        # Getting the type of 'margin' (line 2269)
        margin_615062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2269, 37), 'margin')
        # Applying the binary operator '-' (line 2269)
        result_sub_615063 = python_operator(stypy.reporting.localization.Localization(__file__, 2269, 22), '-', result_sub_615061, margin_615062)
        
        # Assigning a type to the variable 'loc_hat' (line 2269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2269, 12), 'loc_hat', result_sub_615063)
        
        # Assigning a BinOp to a Name (line 2270):
        
        # Assigning a BinOp to a Name (line 2270):
        # Getting the type of 'data_width' (line 2270)
        data_width_615064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2270, 25), 'data_width')
        int_615065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2270, 38), 'int')
        # Getting the type of 'margin' (line 2270)
        margin_615066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2270, 42), 'margin')
        # Applying the binary operator '*' (line 2270)
        result_mul_615067 = python_operator(stypy.reporting.localization.Localization(__file__, 2270, 38), '*', int_615065, margin_615066)
        
        # Applying the binary operator '+' (line 2270)
        result_add_615068 = python_operator(stypy.reporting.localization.Localization(__file__, 2270, 25), '+', data_width_615064, result_mul_615067)
        
        # Getting the type of 'support_width' (line 2270)
        support_width_615069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2270, 52), 'support_width')
        # Applying the binary operator 'div' (line 2270)
        result_div_615070 = python_operator(stypy.reporting.localization.Localization(__file__, 2270, 24), 'div', result_add_615068, support_width_615069)
        
        # Assigning a type to the variable 'scale_hat' (line 2270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2270, 12), 'scale_hat', result_div_615070)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2271)
        tuple_615071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2271, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2271)
        # Adding element type (line 2271)
        # Getting the type of 'loc_hat' (line 2271)
        loc_hat_615072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2271, 19), 'loc_hat')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2271, 19), tuple_615071, loc_hat_615072)
        # Adding element type (line 2271)
        # Getting the type of 'scale_hat' (line 2271)
        scale_hat_615073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2271, 28), 'scale_hat')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2271, 19), tuple_615071, scale_hat_615073)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2271, 12), 'stypy_return_type', tuple_615071)
        # SSA join for if statement (line 2268)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'a' (line 2274)
        a_615074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2274, 11), 'a')
        
        # Getting the type of 'np' (line 2274)
        np_615075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2274, 16), 'np')
        # Obtaining the member 'inf' of a type (line 2274)
        inf_615076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2274, 16), np_615075, 'inf')
        # Applying the 'usub' unary operator (line 2274)
        result___neg___615077 = python_operator(stypy.reporting.localization.Localization(__file__, 2274, 15), 'usub', inf_615076)
        
        # Applying the binary operator '>' (line 2274)
        result_gt_615078 = python_operator(stypy.reporting.localization.Localization(__file__, 2274, 11), '>', a_615074, result___neg___615077)
        
        # Testing the type of an if condition (line 2274)
        if_condition_615079 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2274, 8), result_gt_615078)
        # Assigning a type to the variable 'if_condition_615079' (line 2274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2274, 8), 'if_condition_615079', if_condition_615079)
        # SSA begins for if statement (line 2274)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2275)
        tuple_615080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2275, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2275)
        # Adding element type (line 2275)
        # Getting the type of 'data_a' (line 2275)
        data_a_615081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2275, 20), 'data_a')
        # Getting the type of 'a' (line 2275)
        a_615082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2275, 29), 'a')
        # Applying the binary operator '-' (line 2275)
        result_sub_615083 = python_operator(stypy.reporting.localization.Localization(__file__, 2275, 20), '-', data_a_615081, a_615082)
        
        # Getting the type of 'margin' (line 2275)
        margin_615084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2275, 34), 'margin')
        # Applying the binary operator '-' (line 2275)
        result_sub_615085 = python_operator(stypy.reporting.localization.Localization(__file__, 2275, 19), '-', result_sub_615083, margin_615084)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2275, 19), tuple_615080, result_sub_615085)
        # Adding element type (line 2275)
        int_615086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2275, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2275, 19), tuple_615080, int_615086)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2275, 12), 'stypy_return_type', tuple_615080)
        # SSA branch for the else part of an if statement (line 2274)
        module_type_store.open_ssa_branch('else')
        
        
        # Getting the type of 'b' (line 2276)
        b_615087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2276, 13), 'b')
        # Getting the type of 'np' (line 2276)
        np_615088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2276, 17), 'np')
        # Obtaining the member 'inf' of a type (line 2276)
        inf_615089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2276, 17), np_615088, 'inf')
        # Applying the binary operator '<' (line 2276)
        result_lt_615090 = python_operator(stypy.reporting.localization.Localization(__file__, 2276, 13), '<', b_615087, inf_615089)
        
        # Testing the type of an if condition (line 2276)
        if_condition_615091 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2276, 13), result_lt_615090)
        # Assigning a type to the variable 'if_condition_615091' (line 2276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2276, 13), 'if_condition_615091', if_condition_615091)
        # SSA begins for if statement (line 2276)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2277)
        tuple_615092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2277, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2277)
        # Adding element type (line 2277)
        # Getting the type of 'data_b' (line 2277)
        data_b_615093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2277, 20), 'data_b')
        # Getting the type of 'b' (line 2277)
        b_615094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2277, 29), 'b')
        # Applying the binary operator '-' (line 2277)
        result_sub_615095 = python_operator(stypy.reporting.localization.Localization(__file__, 2277, 20), '-', data_b_615093, b_615094)
        
        # Getting the type of 'margin' (line 2277)
        margin_615096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2277, 34), 'margin')
        # Applying the binary operator '+' (line 2277)
        result_add_615097 = python_operator(stypy.reporting.localization.Localization(__file__, 2277, 19), '+', result_sub_615095, margin_615096)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2277, 19), tuple_615092, result_add_615097)
        # Adding element type (line 2277)
        int_615098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2277, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2277, 19), tuple_615092, int_615098)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2277)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2277, 12), 'stypy_return_type', tuple_615092)
        # SSA branch for the else part of an if statement (line 2276)
        module_type_store.open_ssa_branch('else')
        # Getting the type of 'RuntimeError' (line 2279)
        RuntimeError_615099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2279, 18), 'RuntimeError')
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2279, 12), RuntimeError_615099, 'raise parameter', BaseException)
        # SSA join for if statement (line 2276)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 2274)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_fit_loc_scale_support(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_fit_loc_scale_support' in the type store
        # Getting the type of 'stypy_return_type' (line 2217)
        stypy_return_type_615100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2217, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615100)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_fit_loc_scale_support'
        return stypy_return_type_615100


    @norecursion
    def fit_loc_scale(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'fit_loc_scale'
        module_type_store = module_type_store.open_function_context('fit_loc_scale', 2281, 4, False)
        # Assigning a type to the variable 'self' (line 2282)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2282, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_function_name', 'rv_continuous.fit_loc_scale')
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_param_names_list', ['data'])
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.fit_loc_scale.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.fit_loc_scale', ['data'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'fit_loc_scale', localization, ['data'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'fit_loc_scale(...)' code ##################

        str_615101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2300, (-1)), 'str', '\n        Estimate loc and scale parameters from data using 1st and 2nd moments.\n\n        Parameters\n        ----------\n        data : array_like\n            Data to fit.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n\n        Returns\n        -------\n        Lhat : float\n            Estimated location parameter for the data.\n        Shat : float\n            Estimated scale parameter for the data.\n\n        ')
        
        # Assigning a Call to a Tuple (line 2301):
        
        # Assigning a Subscript to a Name (line 2301):
        
        # Obtaining the type of the subscript
        int_615102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2301, 8), 'int')
        
        # Call to stats(...): (line 2301)
        # Getting the type of 'args' (line 2301)
        args_615105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2301, 30), 'args', False)
        # Processing the call keyword arguments (line 2301)
        
        # Obtaining an instance of the builtin type 'dict' (line 2301)
        dict_615106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2301, 38), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 2301)
        # Adding element type (key, value) (line 2301)
        str_615107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2301, 39), 'str', 'moments')
        str_615108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2301, 50), 'str', 'mv')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2301, 38), dict_615106, (str_615107, str_615108))
        
        kwargs_615109 = {'dict_615106': dict_615106}
        # Getting the type of 'self' (line 2301)
        self_615103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2301, 18), 'self', False)
        # Obtaining the member 'stats' of a type (line 2301)
        stats_615104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2301, 18), self_615103, 'stats')
        # Calling stats(args, kwargs) (line 2301)
        stats_call_result_615110 = invoke(stypy.reporting.localization.Localization(__file__, 2301, 18), stats_615104, *[args_615105], **kwargs_615109)
        
        # Obtaining the member '__getitem__' of a type (line 2301)
        getitem___615111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2301, 8), stats_call_result_615110, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2301)
        subscript_call_result_615112 = invoke(stypy.reporting.localization.Localization(__file__, 2301, 8), getitem___615111, int_615102)
        
        # Assigning a type to the variable 'tuple_var_assignment_609353' (line 2301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2301, 8), 'tuple_var_assignment_609353', subscript_call_result_615112)
        
        # Assigning a Subscript to a Name (line 2301):
        
        # Obtaining the type of the subscript
        int_615113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2301, 8), 'int')
        
        # Call to stats(...): (line 2301)
        # Getting the type of 'args' (line 2301)
        args_615116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2301, 30), 'args', False)
        # Processing the call keyword arguments (line 2301)
        
        # Obtaining an instance of the builtin type 'dict' (line 2301)
        dict_615117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2301, 38), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 2301)
        # Adding element type (key, value) (line 2301)
        str_615118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2301, 39), 'str', 'moments')
        str_615119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2301, 50), 'str', 'mv')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2301, 38), dict_615117, (str_615118, str_615119))
        
        kwargs_615120 = {'dict_615117': dict_615117}
        # Getting the type of 'self' (line 2301)
        self_615114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2301, 18), 'self', False)
        # Obtaining the member 'stats' of a type (line 2301)
        stats_615115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2301, 18), self_615114, 'stats')
        # Calling stats(args, kwargs) (line 2301)
        stats_call_result_615121 = invoke(stypy.reporting.localization.Localization(__file__, 2301, 18), stats_615115, *[args_615116], **kwargs_615120)
        
        # Obtaining the member '__getitem__' of a type (line 2301)
        getitem___615122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2301, 8), stats_call_result_615121, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2301)
        subscript_call_result_615123 = invoke(stypy.reporting.localization.Localization(__file__, 2301, 8), getitem___615122, int_615113)
        
        # Assigning a type to the variable 'tuple_var_assignment_609354' (line 2301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2301, 8), 'tuple_var_assignment_609354', subscript_call_result_615123)
        
        # Assigning a Name to a Name (line 2301):
        # Getting the type of 'tuple_var_assignment_609353' (line 2301)
        tuple_var_assignment_609353_615124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2301, 8), 'tuple_var_assignment_609353')
        # Assigning a type to the variable 'mu' (line 2301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2301, 8), 'mu', tuple_var_assignment_609353_615124)
        
        # Assigning a Name to a Name (line 2301):
        # Getting the type of 'tuple_var_assignment_609354' (line 2301)
        tuple_var_assignment_609354_615125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2301, 8), 'tuple_var_assignment_609354')
        # Assigning a type to the variable 'mu2' (line 2301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2301, 12), 'mu2', tuple_var_assignment_609354_615125)
        
        # Assigning a Call to a Name (line 2302):
        
        # Assigning a Call to a Name (line 2302):
        
        # Call to asarray(...): (line 2302)
        # Processing the call arguments (line 2302)
        # Getting the type of 'data' (line 2302)
        data_615127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2302, 22), 'data', False)
        # Processing the call keyword arguments (line 2302)
        kwargs_615128 = {}
        # Getting the type of 'asarray' (line 2302)
        asarray_615126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2302, 14), 'asarray', False)
        # Calling asarray(args, kwargs) (line 2302)
        asarray_call_result_615129 = invoke(stypy.reporting.localization.Localization(__file__, 2302, 14), asarray_615126, *[data_615127], **kwargs_615128)
        
        # Assigning a type to the variable 'tmp' (line 2302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2302, 8), 'tmp', asarray_call_result_615129)
        
        # Assigning a Call to a Name (line 2303):
        
        # Assigning a Call to a Name (line 2303):
        
        # Call to mean(...): (line 2303)
        # Processing the call keyword arguments (line 2303)
        kwargs_615132 = {}
        # Getting the type of 'tmp' (line 2303)
        tmp_615130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2303, 16), 'tmp', False)
        # Obtaining the member 'mean' of a type (line 2303)
        mean_615131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2303, 16), tmp_615130, 'mean')
        # Calling mean(args, kwargs) (line 2303)
        mean_call_result_615133 = invoke(stypy.reporting.localization.Localization(__file__, 2303, 16), mean_615131, *[], **kwargs_615132)
        
        # Assigning a type to the variable 'muhat' (line 2303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2303, 8), 'muhat', mean_call_result_615133)
        
        # Assigning a Call to a Name (line 2304):
        
        # Assigning a Call to a Name (line 2304):
        
        # Call to var(...): (line 2304)
        # Processing the call keyword arguments (line 2304)
        kwargs_615136 = {}
        # Getting the type of 'tmp' (line 2304)
        tmp_615134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2304, 17), 'tmp', False)
        # Obtaining the member 'var' of a type (line 2304)
        var_615135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2304, 17), tmp_615134, 'var')
        # Calling var(args, kwargs) (line 2304)
        var_call_result_615137 = invoke(stypy.reporting.localization.Localization(__file__, 2304, 17), var_615135, *[], **kwargs_615136)
        
        # Assigning a type to the variable 'mu2hat' (line 2304)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2304, 8), 'mu2hat', var_call_result_615137)
        
        # Assigning a Call to a Name (line 2305):
        
        # Assigning a Call to a Name (line 2305):
        
        # Call to sqrt(...): (line 2305)
        # Processing the call arguments (line 2305)
        # Getting the type of 'mu2hat' (line 2305)
        mu2hat_615139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2305, 20), 'mu2hat', False)
        # Getting the type of 'mu2' (line 2305)
        mu2_615140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2305, 29), 'mu2', False)
        # Applying the binary operator 'div' (line 2305)
        result_div_615141 = python_operator(stypy.reporting.localization.Localization(__file__, 2305, 20), 'div', mu2hat_615139, mu2_615140)
        
        # Processing the call keyword arguments (line 2305)
        kwargs_615142 = {}
        # Getting the type of 'sqrt' (line 2305)
        sqrt_615138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2305, 15), 'sqrt', False)
        # Calling sqrt(args, kwargs) (line 2305)
        sqrt_call_result_615143 = invoke(stypy.reporting.localization.Localization(__file__, 2305, 15), sqrt_615138, *[result_div_615141], **kwargs_615142)
        
        # Assigning a type to the variable 'Shat' (line 2305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2305, 8), 'Shat', sqrt_call_result_615143)
        
        # Assigning a BinOp to a Name (line 2306):
        
        # Assigning a BinOp to a Name (line 2306):
        # Getting the type of 'muhat' (line 2306)
        muhat_615144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2306, 15), 'muhat')
        # Getting the type of 'Shat' (line 2306)
        Shat_615145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2306, 23), 'Shat')
        # Getting the type of 'mu' (line 2306)
        mu_615146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2306, 28), 'mu')
        # Applying the binary operator '*' (line 2306)
        result_mul_615147 = python_operator(stypy.reporting.localization.Localization(__file__, 2306, 23), '*', Shat_615145, mu_615146)
        
        # Applying the binary operator '-' (line 2306)
        result_sub_615148 = python_operator(stypy.reporting.localization.Localization(__file__, 2306, 15), '-', muhat_615144, result_mul_615147)
        
        # Assigning a type to the variable 'Lhat' (line 2306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2306, 8), 'Lhat', result_sub_615148)
        
        
        
        # Call to isfinite(...): (line 2307)
        # Processing the call arguments (line 2307)
        # Getting the type of 'Lhat' (line 2307)
        Lhat_615151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2307, 27), 'Lhat', False)
        # Processing the call keyword arguments (line 2307)
        kwargs_615152 = {}
        # Getting the type of 'np' (line 2307)
        np_615149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2307, 15), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 2307)
        isfinite_615150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2307, 15), np_615149, 'isfinite')
        # Calling isfinite(args, kwargs) (line 2307)
        isfinite_call_result_615153 = invoke(stypy.reporting.localization.Localization(__file__, 2307, 15), isfinite_615150, *[Lhat_615151], **kwargs_615152)
        
        # Applying the 'not' unary operator (line 2307)
        result_not__615154 = python_operator(stypy.reporting.localization.Localization(__file__, 2307, 11), 'not', isfinite_call_result_615153)
        
        # Testing the type of an if condition (line 2307)
        if_condition_615155 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2307, 8), result_not__615154)
        # Assigning a type to the variable 'if_condition_615155' (line 2307)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2307, 8), 'if_condition_615155', if_condition_615155)
        # SSA begins for if statement (line 2307)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 2308):
        
        # Assigning a Num to a Name (line 2308):
        int_615156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2308, 19), 'int')
        # Assigning a type to the variable 'Lhat' (line 2308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2308, 12), 'Lhat', int_615156)
        # SSA join for if statement (line 2307)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Evaluating a boolean operation
        
        # Call to isfinite(...): (line 2309)
        # Processing the call arguments (line 2309)
        # Getting the type of 'Shat' (line 2309)
        Shat_615159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2309, 28), 'Shat', False)
        # Processing the call keyword arguments (line 2309)
        kwargs_615160 = {}
        # Getting the type of 'np' (line 2309)
        np_615157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2309, 16), 'np', False)
        # Obtaining the member 'isfinite' of a type (line 2309)
        isfinite_615158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2309, 16), np_615157, 'isfinite')
        # Calling isfinite(args, kwargs) (line 2309)
        isfinite_call_result_615161 = invoke(stypy.reporting.localization.Localization(__file__, 2309, 16), isfinite_615158, *[Shat_615159], **kwargs_615160)
        
        
        int_615162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2309, 39), 'int')
        # Getting the type of 'Shat' (line 2309)
        Shat_615163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2309, 43), 'Shat')
        # Applying the binary operator '<' (line 2309)
        result_lt_615164 = python_operator(stypy.reporting.localization.Localization(__file__, 2309, 39), '<', int_615162, Shat_615163)
        
        # Applying the binary operator 'and' (line 2309)
        result_and_keyword_615165 = python_operator(stypy.reporting.localization.Localization(__file__, 2309, 16), 'and', isfinite_call_result_615161, result_lt_615164)
        
        # Applying the 'not' unary operator (line 2309)
        result_not__615166 = python_operator(stypy.reporting.localization.Localization(__file__, 2309, 11), 'not', result_and_keyword_615165)
        
        # Testing the type of an if condition (line 2309)
        if_condition_615167 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2309, 8), result_not__615166)
        # Assigning a type to the variable 'if_condition_615167' (line 2309)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2309, 8), 'if_condition_615167', if_condition_615167)
        # SSA begins for if statement (line 2309)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Num to a Name (line 2310):
        
        # Assigning a Num to a Name (line 2310):
        int_615168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2310, 19), 'int')
        # Assigning a type to the variable 'Shat' (line 2310)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2310, 12), 'Shat', int_615168)
        # SSA join for if statement (line 2309)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 2311)
        tuple_615169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2311, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2311)
        # Adding element type (line 2311)
        # Getting the type of 'Lhat' (line 2311)
        Lhat_615170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2311, 15), 'Lhat')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2311, 15), tuple_615169, Lhat_615170)
        # Adding element type (line 2311)
        # Getting the type of 'Shat' (line 2311)
        Shat_615171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2311, 21), 'Shat')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2311, 15), tuple_615169, Shat_615171)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2311)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2311, 8), 'stypy_return_type', tuple_615169)
        
        # ################# End of 'fit_loc_scale(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'fit_loc_scale' in the type store
        # Getting the type of 'stypy_return_type' (line 2281)
        stypy_return_type_615172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2281, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615172)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'fit_loc_scale'
        return stypy_return_type_615172


    @norecursion
    def _entropy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_entropy'
        module_type_store = module_type_store.open_function_context('_entropy', 2313, 4, False)
        # Assigning a type to the variable 'self' (line 2314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2314, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous._entropy.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous._entropy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous._entropy.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous._entropy.__dict__.__setitem__('stypy_function_name', 'rv_continuous._entropy')
        rv_continuous._entropy.__dict__.__setitem__('stypy_param_names_list', [])
        rv_continuous._entropy.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_continuous._entropy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_continuous._entropy.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous._entropy.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous._entropy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous._entropy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous._entropy', [], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_entropy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_entropy(...)' code ##################


        @norecursion
        def integ(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'integ'
            module_type_store = module_type_store.open_function_context('integ', 2314, 8, False)
            
            # Passed parameters checking function
            integ.stypy_localization = localization
            integ.stypy_type_of_self = None
            integ.stypy_type_store = module_type_store
            integ.stypy_function_name = 'integ'
            integ.stypy_param_names_list = ['x']
            integ.stypy_varargs_param_name = None
            integ.stypy_kwargs_param_name = None
            integ.stypy_call_defaults = defaults
            integ.stypy_call_varargs = varargs
            integ.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'integ', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'integ', localization, ['x'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'integ(...)' code ##################

            
            # Assigning a Call to a Name (line 2315):
            
            # Assigning a Call to a Name (line 2315):
            
            # Call to _pdf(...): (line 2315)
            # Processing the call arguments (line 2315)
            # Getting the type of 'x' (line 2315)
            x_615175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2315, 28), 'x', False)
            # Getting the type of 'args' (line 2315)
            args_615176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2315, 32), 'args', False)
            # Processing the call keyword arguments (line 2315)
            kwargs_615177 = {}
            # Getting the type of 'self' (line 2315)
            self_615173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2315, 18), 'self', False)
            # Obtaining the member '_pdf' of a type (line 2315)
            _pdf_615174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2315, 18), self_615173, '_pdf')
            # Calling _pdf(args, kwargs) (line 2315)
            _pdf_call_result_615178 = invoke(stypy.reporting.localization.Localization(__file__, 2315, 18), _pdf_615174, *[x_615175, args_615176], **kwargs_615177)
            
            # Assigning a type to the variable 'val' (line 2315)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2315, 12), 'val', _pdf_call_result_615178)
            
            # Call to entr(...): (line 2316)
            # Processing the call arguments (line 2316)
            # Getting the type of 'val' (line 2316)
            val_615180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2316, 24), 'val', False)
            # Processing the call keyword arguments (line 2316)
            kwargs_615181 = {}
            # Getting the type of 'entr' (line 2316)
            entr_615179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2316, 19), 'entr', False)
            # Calling entr(args, kwargs) (line 2316)
            entr_call_result_615182 = invoke(stypy.reporting.localization.Localization(__file__, 2316, 19), entr_615179, *[val_615180], **kwargs_615181)
            
            # Assigning a type to the variable 'stypy_return_type' (line 2316)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2316, 12), 'stypy_return_type', entr_call_result_615182)
            
            # ################# End of 'integ(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'integ' in the type store
            # Getting the type of 'stypy_return_type' (line 2314)
            stypy_return_type_615183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2314, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_615183)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'integ'
            return stypy_return_type_615183

        # Assigning a type to the variable 'integ' (line 2314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2314, 8), 'integ', integ)
        
        # Assigning a Call to a Name (line 2319):
        
        # Assigning a Call to a Name (line 2319):
        
        # Call to seterr(...): (line 2319)
        # Processing the call keyword arguments (line 2319)
        str_615186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2319, 32), 'str', 'ignore')
        keyword_615187 = str_615186
        kwargs_615188 = {'over': keyword_615187}
        # Getting the type of 'np' (line 2319)
        np_615184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2319, 17), 'np', False)
        # Obtaining the member 'seterr' of a type (line 2319)
        seterr_615185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2319, 17), np_615184, 'seterr')
        # Calling seterr(args, kwargs) (line 2319)
        seterr_call_result_615189 = invoke(stypy.reporting.localization.Localization(__file__, 2319, 17), seterr_615185, *[], **kwargs_615188)
        
        # Assigning a type to the variable 'olderr' (line 2319)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2319, 8), 'olderr', seterr_call_result_615189)
        
        # Assigning a Subscript to a Name (line 2320):
        
        # Assigning a Subscript to a Name (line 2320):
        
        # Obtaining the type of the subscript
        int_615190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2320, 50), 'int')
        
        # Call to quad(...): (line 2320)
        # Processing the call arguments (line 2320)
        # Getting the type of 'integ' (line 2320)
        integ_615193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 27), 'integ', False)
        # Getting the type of 'self' (line 2320)
        self_615194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 34), 'self', False)
        # Obtaining the member 'a' of a type (line 2320)
        a_615195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2320, 34), self_615194, 'a')
        # Getting the type of 'self' (line 2320)
        self_615196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 42), 'self', False)
        # Obtaining the member 'b' of a type (line 2320)
        b_615197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2320, 42), self_615196, 'b')
        # Processing the call keyword arguments (line 2320)
        kwargs_615198 = {}
        # Getting the type of 'integrate' (line 2320)
        integrate_615191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2320, 12), 'integrate', False)
        # Obtaining the member 'quad' of a type (line 2320)
        quad_615192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2320, 12), integrate_615191, 'quad')
        # Calling quad(args, kwargs) (line 2320)
        quad_call_result_615199 = invoke(stypy.reporting.localization.Localization(__file__, 2320, 12), quad_615192, *[integ_615193, a_615195, b_615197], **kwargs_615198)
        
        # Obtaining the member '__getitem__' of a type (line 2320)
        getitem___615200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2320, 12), quad_call_result_615199, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2320)
        subscript_call_result_615201 = invoke(stypy.reporting.localization.Localization(__file__, 2320, 12), getitem___615200, int_615190)
        
        # Assigning a type to the variable 'h' (line 2320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2320, 8), 'h', subscript_call_result_615201)
        
        # Call to seterr(...): (line 2321)
        # Processing the call keyword arguments (line 2321)
        # Getting the type of 'olderr' (line 2321)
        olderr_615204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2321, 20), 'olderr', False)
        kwargs_615205 = {'olderr_615204': olderr_615204}
        # Getting the type of 'np' (line 2321)
        np_615202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2321, 8), 'np', False)
        # Obtaining the member 'seterr' of a type (line 2321)
        seterr_615203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2321, 8), np_615202, 'seterr')
        # Calling seterr(args, kwargs) (line 2321)
        seterr_call_result_615206 = invoke(stypy.reporting.localization.Localization(__file__, 2321, 8), seterr_615203, *[], **kwargs_615205)
        
        
        
        
        # Call to isnan(...): (line 2323)
        # Processing the call arguments (line 2323)
        # Getting the type of 'h' (line 2323)
        h_615209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2323, 24), 'h', False)
        # Processing the call keyword arguments (line 2323)
        kwargs_615210 = {}
        # Getting the type of 'np' (line 2323)
        np_615207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2323, 15), 'np', False)
        # Obtaining the member 'isnan' of a type (line 2323)
        isnan_615208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2323, 15), np_615207, 'isnan')
        # Calling isnan(args, kwargs) (line 2323)
        isnan_call_result_615211 = invoke(stypy.reporting.localization.Localization(__file__, 2323, 15), isnan_615208, *[h_615209], **kwargs_615210)
        
        # Applying the 'not' unary operator (line 2323)
        result_not__615212 = python_operator(stypy.reporting.localization.Localization(__file__, 2323, 11), 'not', isnan_call_result_615211)
        
        # Testing the type of an if condition (line 2323)
        if_condition_615213 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2323, 8), result_not__615212)
        # Assigning a type to the variable 'if_condition_615213' (line 2323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2323, 8), 'if_condition_615213', if_condition_615213)
        # SSA begins for if statement (line 2323)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'h' (line 2324)
        h_615214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2324, 19), 'h')
        # Assigning a type to the variable 'stypy_return_type' (line 2324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2324, 12), 'stypy_return_type', h_615214)
        # SSA branch for the else part of an if statement (line 2323)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 2327):
        
        # Assigning a Subscript to a Name (line 2327):
        
        # Obtaining the type of the subscript
        int_615215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 12), 'int')
        
        # Call to ppf(...): (line 2327)
        # Processing the call arguments (line 2327)
        
        # Obtaining an instance of the builtin type 'list' (line 2327)
        list_615218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2327)
        # Adding element type (line 2327)
        float_615219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2327, 32), list_615218, float_615219)
        # Adding element type (line 2327)
        float_615220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 40), 'float')
        float_615221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 45), 'float')
        # Applying the binary operator '-' (line 2327)
        result_sub_615222 = python_operator(stypy.reporting.localization.Localization(__file__, 2327, 40), '-', float_615220, float_615221)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2327, 32), list_615218, result_sub_615222)
        
        # Getting the type of 'args' (line 2327)
        args_615223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 54), 'args', False)
        # Processing the call keyword arguments (line 2327)
        kwargs_615224 = {}
        # Getting the type of 'self' (line 2327)
        self_615216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 23), 'self', False)
        # Obtaining the member 'ppf' of a type (line 2327)
        ppf_615217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2327, 23), self_615216, 'ppf')
        # Calling ppf(args, kwargs) (line 2327)
        ppf_call_result_615225 = invoke(stypy.reporting.localization.Localization(__file__, 2327, 23), ppf_615217, *[list_615218, args_615223], **kwargs_615224)
        
        # Obtaining the member '__getitem__' of a type (line 2327)
        getitem___615226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2327, 12), ppf_call_result_615225, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2327)
        subscript_call_result_615227 = invoke(stypy.reporting.localization.Localization(__file__, 2327, 12), getitem___615226, int_615215)
        
        # Assigning a type to the variable 'tuple_var_assignment_609355' (line 2327)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2327, 12), 'tuple_var_assignment_609355', subscript_call_result_615227)
        
        # Assigning a Subscript to a Name (line 2327):
        
        # Obtaining the type of the subscript
        int_615228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 12), 'int')
        
        # Call to ppf(...): (line 2327)
        # Processing the call arguments (line 2327)
        
        # Obtaining an instance of the builtin type 'list' (line 2327)
        list_615231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2327)
        # Adding element type (line 2327)
        float_615232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2327, 32), list_615231, float_615232)
        # Adding element type (line 2327)
        float_615233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 40), 'float')
        float_615234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2327, 45), 'float')
        # Applying the binary operator '-' (line 2327)
        result_sub_615235 = python_operator(stypy.reporting.localization.Localization(__file__, 2327, 40), '-', float_615233, float_615234)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2327, 32), list_615231, result_sub_615235)
        
        # Getting the type of 'args' (line 2327)
        args_615236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 54), 'args', False)
        # Processing the call keyword arguments (line 2327)
        kwargs_615237 = {}
        # Getting the type of 'self' (line 2327)
        self_615229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 23), 'self', False)
        # Obtaining the member 'ppf' of a type (line 2327)
        ppf_615230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2327, 23), self_615229, 'ppf')
        # Calling ppf(args, kwargs) (line 2327)
        ppf_call_result_615238 = invoke(stypy.reporting.localization.Localization(__file__, 2327, 23), ppf_615230, *[list_615231, args_615236], **kwargs_615237)
        
        # Obtaining the member '__getitem__' of a type (line 2327)
        getitem___615239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2327, 12), ppf_call_result_615238, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2327)
        subscript_call_result_615240 = invoke(stypy.reporting.localization.Localization(__file__, 2327, 12), getitem___615239, int_615228)
        
        # Assigning a type to the variable 'tuple_var_assignment_609356' (line 2327)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2327, 12), 'tuple_var_assignment_609356', subscript_call_result_615240)
        
        # Assigning a Name to a Name (line 2327):
        # Getting the type of 'tuple_var_assignment_609355' (line 2327)
        tuple_var_assignment_609355_615241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 12), 'tuple_var_assignment_609355')
        # Assigning a type to the variable 'low' (line 2327)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2327, 12), 'low', tuple_var_assignment_609355_615241)
        
        # Assigning a Name to a Name (line 2327):
        # Getting the type of 'tuple_var_assignment_609356' (line 2327)
        tuple_var_assignment_609356_615242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2327, 12), 'tuple_var_assignment_609356')
        # Assigning a type to the variable 'upp' (line 2327)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2327, 17), 'upp', tuple_var_assignment_609356_615242)
        
        
        # Call to isinf(...): (line 2328)
        # Processing the call arguments (line 2328)
        # Getting the type of 'self' (line 2328)
        self_615245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2328, 24), 'self', False)
        # Obtaining the member 'b' of a type (line 2328)
        b_615246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2328, 24), self_615245, 'b')
        # Processing the call keyword arguments (line 2328)
        kwargs_615247 = {}
        # Getting the type of 'np' (line 2328)
        np_615243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2328, 15), 'np', False)
        # Obtaining the member 'isinf' of a type (line 2328)
        isinf_615244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2328, 15), np_615243, 'isinf')
        # Calling isinf(args, kwargs) (line 2328)
        isinf_call_result_615248 = invoke(stypy.reporting.localization.Localization(__file__, 2328, 15), isinf_615244, *[b_615246], **kwargs_615247)
        
        # Testing the type of an if condition (line 2328)
        if_condition_615249 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2328, 12), isinf_call_result_615248)
        # Assigning a type to the variable 'if_condition_615249' (line 2328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2328, 12), 'if_condition_615249', if_condition_615249)
        # SSA begins for if statement (line 2328)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 2329):
        
        # Assigning a Name to a Name (line 2329):
        # Getting the type of 'upp' (line 2329)
        upp_615250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2329, 24), 'upp')
        # Assigning a type to the variable 'upper' (line 2329)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2329, 16), 'upper', upp_615250)
        # SSA branch for the else part of an if statement (line 2328)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Name (line 2331):
        
        # Assigning a Attribute to a Name (line 2331):
        # Getting the type of 'self' (line 2331)
        self_615251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2331, 24), 'self')
        # Obtaining the member 'b' of a type (line 2331)
        b_615252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2331, 24), self_615251, 'b')
        # Assigning a type to the variable 'upper' (line 2331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2331, 16), 'upper', b_615252)
        # SSA join for if statement (line 2328)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to isinf(...): (line 2332)
        # Processing the call arguments (line 2332)
        # Getting the type of 'self' (line 2332)
        self_615255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2332, 24), 'self', False)
        # Obtaining the member 'a' of a type (line 2332)
        a_615256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2332, 24), self_615255, 'a')
        # Processing the call keyword arguments (line 2332)
        kwargs_615257 = {}
        # Getting the type of 'np' (line 2332)
        np_615253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2332, 15), 'np', False)
        # Obtaining the member 'isinf' of a type (line 2332)
        isinf_615254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2332, 15), np_615253, 'isinf')
        # Calling isinf(args, kwargs) (line 2332)
        isinf_call_result_615258 = invoke(stypy.reporting.localization.Localization(__file__, 2332, 15), isinf_615254, *[a_615256], **kwargs_615257)
        
        # Testing the type of an if condition (line 2332)
        if_condition_615259 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2332, 12), isinf_call_result_615258)
        # Assigning a type to the variable 'if_condition_615259' (line 2332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2332, 12), 'if_condition_615259', if_condition_615259)
        # SSA begins for if statement (line 2332)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a Name (line 2333):
        
        # Assigning a Name to a Name (line 2333):
        # Getting the type of 'low' (line 2333)
        low_615260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2333, 24), 'low')
        # Assigning a type to the variable 'lower' (line 2333)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2333, 16), 'lower', low_615260)
        # SSA branch for the else part of an if statement (line 2332)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Attribute to a Name (line 2335):
        
        # Assigning a Attribute to a Name (line 2335):
        # Getting the type of 'self' (line 2335)
        self_615261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2335, 24), 'self')
        # Obtaining the member 'a' of a type (line 2335)
        a_615262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2335, 24), self_615261, 'a')
        # Assigning a type to the variable 'lower' (line 2335)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2335, 16), 'lower', a_615262)
        # SSA join for if statement (line 2332)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Obtaining the type of the subscript
        int_615263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2336, 55), 'int')
        
        # Call to quad(...): (line 2336)
        # Processing the call arguments (line 2336)
        # Getting the type of 'integ' (line 2336)
        integ_615266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2336, 34), 'integ', False)
        # Getting the type of 'lower' (line 2336)
        lower_615267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2336, 41), 'lower', False)
        # Getting the type of 'upper' (line 2336)
        upper_615268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2336, 48), 'upper', False)
        # Processing the call keyword arguments (line 2336)
        kwargs_615269 = {}
        # Getting the type of 'integrate' (line 2336)
        integrate_615264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2336, 19), 'integrate', False)
        # Obtaining the member 'quad' of a type (line 2336)
        quad_615265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2336, 19), integrate_615264, 'quad')
        # Calling quad(args, kwargs) (line 2336)
        quad_call_result_615270 = invoke(stypy.reporting.localization.Localization(__file__, 2336, 19), quad_615265, *[integ_615266, lower_615267, upper_615268], **kwargs_615269)
        
        # Obtaining the member '__getitem__' of a type (line 2336)
        getitem___615271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2336, 19), quad_call_result_615270, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2336)
        subscript_call_result_615272 = invoke(stypy.reporting.localization.Localization(__file__, 2336, 19), getitem___615271, int_615263)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2336, 12), 'stypy_return_type', subscript_call_result_615272)
        # SSA join for if statement (line 2323)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_entropy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_entropy' in the type store
        # Getting the type of 'stypy_return_type' (line 2313)
        stypy_return_type_615273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2313, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615273)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_entropy'
        return stypy_return_type_615273


    @norecursion
    def expect(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 2338)
        None_615274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2338, 26), 'None')
        
        # Obtaining an instance of the builtin type 'tuple' (line 2338)
        tuple_615275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2338, 37), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2338)
        
        int_615276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2338, 45), 'int')
        int_615277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2338, 54), 'int')
        # Getting the type of 'None' (line 2338)
        None_615278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2338, 60), 'None')
        # Getting the type of 'None' (line 2338)
        None_615279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2338, 69), 'None')
        # Getting the type of 'False' (line 2339)
        False_615280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2339, 27), 'False')
        defaults = [None_615274, tuple_615275, int_615276, int_615277, None_615278, None_615279, False_615280]
        # Create a new context for function 'expect'
        module_type_store = module_type_store.open_function_context('expect', 2338, 4, False)
        # Assigning a type to the variable 'self' (line 2339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2339, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_continuous.expect.__dict__.__setitem__('stypy_localization', localization)
        rv_continuous.expect.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_continuous.expect.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_continuous.expect.__dict__.__setitem__('stypy_function_name', 'rv_continuous.expect')
        rv_continuous.expect.__dict__.__setitem__('stypy_param_names_list', ['func', 'args', 'loc', 'scale', 'lb', 'ub', 'conditional'])
        rv_continuous.expect.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_continuous.expect.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_continuous.expect.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_continuous.expect.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_continuous.expect.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_continuous.expect.__dict__.__setitem__('stypy_declared_arg_number', 8)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_continuous.expect', ['func', 'args', 'loc', 'scale', 'lb', 'ub', 'conditional'], None, 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'expect', localization, ['func', 'args', 'loc', 'scale', 'lb', 'ub', 'conditional'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'expect(...)' code ##################

        str_615281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2382, (-1)), 'str', 'Calculate expected value of a function with respect to the\n        distribution.\n\n        The expected value of a function ``f(x)`` with respect to a\n        distribution ``dist`` is defined as::\n\n                    ubound\n            E[x] = Integral(f(x) * dist.pdf(x))\n                    lbound\n\n        Parameters\n        ----------\n        func : callable, optional\n            Function for which integral is calculated. Takes only one argument.\n            The default is the identity mapping f(x) = x.\n        args : tuple, optional\n            Shape parameters of the distribution.\n        loc : float, optional\n            Location parameter (default=0).\n        scale : float, optional\n            Scale parameter (default=1).\n        lb, ub : scalar, optional\n            Lower and upper bound for integration. Default is set to the\n            support of the distribution.\n        conditional : bool, optional\n            If True, the integral is corrected by the conditional probability\n            of the integration interval.  The return value is the expectation\n            of the function, conditional on being in the given interval.\n            Default is False.\n\n        Additional keyword arguments are passed to the integration routine.\n\n        Returns\n        -------\n        expect : float\n            The calculated expected value.\n\n        Notes\n        -----\n        The integration behavior of this function is inherited from\n        `integrate.quad`.\n\n        ')
        
        # Assigning a Dict to a Name (line 2383):
        
        # Assigning a Dict to a Name (line 2383):
        
        # Obtaining an instance of the builtin type 'dict' (line 2383)
        dict_615282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2383, 18), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 2383)
        # Adding element type (key, value) (line 2383)
        str_615283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2383, 19), 'str', 'loc')
        # Getting the type of 'loc' (line 2383)
        loc_615284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2383, 26), 'loc')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2383, 18), dict_615282, (str_615283, loc_615284))
        # Adding element type (key, value) (line 2383)
        str_615285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2384, 19), 'str', 'scale')
        # Getting the type of 'scale' (line 2384)
        scale_615286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2384, 28), 'scale')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2383, 18), dict_615282, (str_615285, scale_615286))
        
        # Assigning a type to the variable 'lockwds' (line 2383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2383, 8), 'lockwds', dict_615282)
        
        # Call to _argcheck(...): (line 2385)
        # Getting the type of 'args' (line 2385)
        args_615289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 24), 'args', False)
        # Processing the call keyword arguments (line 2385)
        kwargs_615290 = {}
        # Getting the type of 'self' (line 2385)
        self_615287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2385, 8), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 2385)
        _argcheck_615288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2385, 8), self_615287, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 2385)
        _argcheck_call_result_615291 = invoke(stypy.reporting.localization.Localization(__file__, 2385, 8), _argcheck_615288, *[args_615289], **kwargs_615290)
        
        
        # Type idiom detected: calculating its left and rigth part (line 2386)
        # Getting the type of 'func' (line 2386)
        func_615292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 11), 'func')
        # Getting the type of 'None' (line 2386)
        None_615293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2386, 19), 'None')
        
        (may_be_615294, more_types_in_union_615295) = may_be_none(func_615292, None_615293)

        if may_be_615294:

            if more_types_in_union_615295:
                # Runtime conditional SSA (line 2386)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            @norecursion
            def fun(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'fun'
                module_type_store = module_type_store.open_function_context('fun', 2387, 12, False)
                
                # Passed parameters checking function
                fun.stypy_localization = localization
                fun.stypy_type_of_self = None
                fun.stypy_type_store = module_type_store
                fun.stypy_function_name = 'fun'
                fun.stypy_param_names_list = ['x']
                fun.stypy_varargs_param_name = 'args'
                fun.stypy_kwargs_param_name = None
                fun.stypy_call_defaults = defaults
                fun.stypy_call_varargs = varargs
                fun.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, 'fun', ['x'], 'args', None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'fun', localization, ['x'], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'fun(...)' code ##################

                # Getting the type of 'x' (line 2388)
                x_615296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2388, 23), 'x')
                
                # Call to pdf(...): (line 2388)
                # Processing the call arguments (line 2388)
                # Getting the type of 'x' (line 2388)
                x_615299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2388, 36), 'x', False)
                # Getting the type of 'args' (line 2388)
                args_615300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2388, 40), 'args', False)
                # Processing the call keyword arguments (line 2388)
                # Getting the type of 'lockwds' (line 2388)
                lockwds_615301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2388, 48), 'lockwds', False)
                kwargs_615302 = {'lockwds_615301': lockwds_615301}
                # Getting the type of 'self' (line 2388)
                self_615297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2388, 27), 'self', False)
                # Obtaining the member 'pdf' of a type (line 2388)
                pdf_615298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2388, 27), self_615297, 'pdf')
                # Calling pdf(args, kwargs) (line 2388)
                pdf_call_result_615303 = invoke(stypy.reporting.localization.Localization(__file__, 2388, 27), pdf_615298, *[x_615299, args_615300], **kwargs_615302)
                
                # Applying the binary operator '*' (line 2388)
                result_mul_615304 = python_operator(stypy.reporting.localization.Localization(__file__, 2388, 23), '*', x_615296, pdf_call_result_615303)
                
                # Assigning a type to the variable 'stypy_return_type' (line 2388)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2388, 16), 'stypy_return_type', result_mul_615304)
                
                # ################# End of 'fun(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'fun' in the type store
                # Getting the type of 'stypy_return_type' (line 2387)
                stypy_return_type_615305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2387, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_615305)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'fun'
                return stypy_return_type_615305

            # Assigning a type to the variable 'fun' (line 2387)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2387, 12), 'fun', fun)

            if more_types_in_union_615295:
                # Runtime conditional SSA for else branch (line 2386)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_615294) or more_types_in_union_615295):

            @norecursion
            def fun(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'fun'
                module_type_store = module_type_store.open_function_context('fun', 2390, 12, False)
                
                # Passed parameters checking function
                fun.stypy_localization = localization
                fun.stypy_type_of_self = None
                fun.stypy_type_store = module_type_store
                fun.stypy_function_name = 'fun'
                fun.stypy_param_names_list = ['x']
                fun.stypy_varargs_param_name = 'args'
                fun.stypy_kwargs_param_name = None
                fun.stypy_call_defaults = defaults
                fun.stypy_call_varargs = varargs
                fun.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, 'fun', ['x'], 'args', None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'fun', localization, ['x'], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'fun(...)' code ##################

                
                # Call to func(...): (line 2391)
                # Processing the call arguments (line 2391)
                # Getting the type of 'x' (line 2391)
                x_615307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2391, 28), 'x', False)
                # Processing the call keyword arguments (line 2391)
                kwargs_615308 = {}
                # Getting the type of 'func' (line 2391)
                func_615306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2391, 23), 'func', False)
                # Calling func(args, kwargs) (line 2391)
                func_call_result_615309 = invoke(stypy.reporting.localization.Localization(__file__, 2391, 23), func_615306, *[x_615307], **kwargs_615308)
                
                
                # Call to pdf(...): (line 2391)
                # Processing the call arguments (line 2391)
                # Getting the type of 'x' (line 2391)
                x_615312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2391, 42), 'x', False)
                # Getting the type of 'args' (line 2391)
                args_615313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2391, 46), 'args', False)
                # Processing the call keyword arguments (line 2391)
                # Getting the type of 'lockwds' (line 2391)
                lockwds_615314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2391, 54), 'lockwds', False)
                kwargs_615315 = {'lockwds_615314': lockwds_615314}
                # Getting the type of 'self' (line 2391)
                self_615310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2391, 33), 'self', False)
                # Obtaining the member 'pdf' of a type (line 2391)
                pdf_615311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2391, 33), self_615310, 'pdf')
                # Calling pdf(args, kwargs) (line 2391)
                pdf_call_result_615316 = invoke(stypy.reporting.localization.Localization(__file__, 2391, 33), pdf_615311, *[x_615312, args_615313], **kwargs_615315)
                
                # Applying the binary operator '*' (line 2391)
                result_mul_615317 = python_operator(stypy.reporting.localization.Localization(__file__, 2391, 23), '*', func_call_result_615309, pdf_call_result_615316)
                
                # Assigning a type to the variable 'stypy_return_type' (line 2391)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2391, 16), 'stypy_return_type', result_mul_615317)
                
                # ################# End of 'fun(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'fun' in the type store
                # Getting the type of 'stypy_return_type' (line 2390)
                stypy_return_type_615318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2390, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_615318)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'fun'
                return stypy_return_type_615318

            # Assigning a type to the variable 'fun' (line 2390)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2390, 12), 'fun', fun)

            if (may_be_615294 and more_types_in_union_615295):
                # SSA join for if statement (line 2386)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 2392)
        # Getting the type of 'lb' (line 2392)
        lb_615319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2392, 11), 'lb')
        # Getting the type of 'None' (line 2392)
        None_615320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2392, 17), 'None')
        
        (may_be_615321, more_types_in_union_615322) = may_be_none(lb_615319, None_615320)

        if may_be_615321:

            if more_types_in_union_615322:
                # Runtime conditional SSA (line 2392)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 2393):
            
            # Assigning a BinOp to a Name (line 2393):
            # Getting the type of 'loc' (line 2393)
            loc_615323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2393, 17), 'loc')
            # Getting the type of 'self' (line 2393)
            self_615324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2393, 23), 'self')
            # Obtaining the member 'a' of a type (line 2393)
            a_615325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2393, 23), self_615324, 'a')
            # Getting the type of 'scale' (line 2393)
            scale_615326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2393, 32), 'scale')
            # Applying the binary operator '*' (line 2393)
            result_mul_615327 = python_operator(stypy.reporting.localization.Localization(__file__, 2393, 23), '*', a_615325, scale_615326)
            
            # Applying the binary operator '+' (line 2393)
            result_add_615328 = python_operator(stypy.reporting.localization.Localization(__file__, 2393, 17), '+', loc_615323, result_mul_615327)
            
            # Assigning a type to the variable 'lb' (line 2393)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2393, 12), 'lb', result_add_615328)

            if more_types_in_union_615322:
                # SSA join for if statement (line 2392)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 2394)
        # Getting the type of 'ub' (line 2394)
        ub_615329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2394, 11), 'ub')
        # Getting the type of 'None' (line 2394)
        None_615330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2394, 17), 'None')
        
        (may_be_615331, more_types_in_union_615332) = may_be_none(ub_615329, None_615330)

        if may_be_615331:

            if more_types_in_union_615332:
                # Runtime conditional SSA (line 2394)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a BinOp to a Name (line 2395):
            
            # Assigning a BinOp to a Name (line 2395):
            # Getting the type of 'loc' (line 2395)
            loc_615333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 17), 'loc')
            # Getting the type of 'self' (line 2395)
            self_615334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 23), 'self')
            # Obtaining the member 'b' of a type (line 2395)
            b_615335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2395, 23), self_615334, 'b')
            # Getting the type of 'scale' (line 2395)
            scale_615336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2395, 32), 'scale')
            # Applying the binary operator '*' (line 2395)
            result_mul_615337 = python_operator(stypy.reporting.localization.Localization(__file__, 2395, 23), '*', b_615335, scale_615336)
            
            # Applying the binary operator '+' (line 2395)
            result_add_615338 = python_operator(stypy.reporting.localization.Localization(__file__, 2395, 17), '+', loc_615333, result_mul_615337)
            
            # Assigning a type to the variable 'ub' (line 2395)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2395, 12), 'ub', result_add_615338)

            if more_types_in_union_615332:
                # SSA join for if statement (line 2394)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Getting the type of 'conditional' (line 2396)
        conditional_615339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2396, 11), 'conditional')
        # Testing the type of an if condition (line 2396)
        if_condition_615340 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2396, 8), conditional_615339)
        # Assigning a type to the variable 'if_condition_615340' (line 2396)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2396, 8), 'if_condition_615340', if_condition_615340)
        # SSA begins for if statement (line 2396)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 2397):
        
        # Assigning a BinOp to a Name (line 2397):
        
        # Call to sf(...): (line 2397)
        # Processing the call arguments (line 2397)
        # Getting the type of 'lb' (line 2397)
        lb_615343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 30), 'lb', False)
        # Getting the type of 'args' (line 2397)
        args_615344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 35), 'args', False)
        # Processing the call keyword arguments (line 2397)
        # Getting the type of 'lockwds' (line 2397)
        lockwds_615345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 43), 'lockwds', False)
        kwargs_615346 = {'lockwds_615345': lockwds_615345}
        # Getting the type of 'self' (line 2397)
        self_615341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2397, 22), 'self', False)
        # Obtaining the member 'sf' of a type (line 2397)
        sf_615342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2397, 22), self_615341, 'sf')
        # Calling sf(args, kwargs) (line 2397)
        sf_call_result_615347 = invoke(stypy.reporting.localization.Localization(__file__, 2397, 22), sf_615342, *[lb_615343, args_615344], **kwargs_615346)
        
        
        # Call to sf(...): (line 2398)
        # Processing the call arguments (line 2398)
        # Getting the type of 'ub' (line 2398)
        ub_615350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 32), 'ub', False)
        # Getting the type of 'args' (line 2398)
        args_615351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 37), 'args', False)
        # Processing the call keyword arguments (line 2398)
        # Getting the type of 'lockwds' (line 2398)
        lockwds_615352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 45), 'lockwds', False)
        kwargs_615353 = {'lockwds_615352': lockwds_615352}
        # Getting the type of 'self' (line 2398)
        self_615348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2398, 24), 'self', False)
        # Obtaining the member 'sf' of a type (line 2398)
        sf_615349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2398, 24), self_615348, 'sf')
        # Calling sf(args, kwargs) (line 2398)
        sf_call_result_615354 = invoke(stypy.reporting.localization.Localization(__file__, 2398, 24), sf_615349, *[ub_615350, args_615351], **kwargs_615353)
        
        # Applying the binary operator '-' (line 2397)
        result_sub_615355 = python_operator(stypy.reporting.localization.Localization(__file__, 2397, 22), '-', sf_call_result_615347, sf_call_result_615354)
        
        # Assigning a type to the variable 'invfac' (line 2397)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2397, 12), 'invfac', result_sub_615355)
        # SSA branch for the else part of an if statement (line 2396)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 2400):
        
        # Assigning a Num to a Name (line 2400):
        float_615356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2400, 21), 'float')
        # Assigning a type to the variable 'invfac' (line 2400)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2400, 12), 'invfac', float_615356)
        # SSA join for if statement (line 2396)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Name to a Subscript (line 2401):
        
        # Assigning a Name to a Subscript (line 2401):
        # Getting the type of 'args' (line 2401)
        args_615357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2401, 23), 'args')
        # Getting the type of 'kwds' (line 2401)
        kwds_615358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2401, 8), 'kwds')
        str_615359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2401, 13), 'str', 'args')
        # Storing an element on a container (line 2401)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2401, 8), kwds_615358, (str_615359, args_615357))
        
        # Assigning a Call to a Name (line 2403):
        
        # Assigning a Call to a Name (line 2403):
        
        # Call to seterr(...): (line 2403)
        # Processing the call keyword arguments (line 2403)
        str_615362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2403, 31), 'str', 'ignore')
        keyword_615363 = str_615362
        kwargs_615364 = {'all': keyword_615363}
        # Getting the type of 'np' (line 2403)
        np_615360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2403, 17), 'np', False)
        # Obtaining the member 'seterr' of a type (line 2403)
        seterr_615361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2403, 17), np_615360, 'seterr')
        # Calling seterr(args, kwargs) (line 2403)
        seterr_call_result_615365 = invoke(stypy.reporting.localization.Localization(__file__, 2403, 17), seterr_615361, *[], **kwargs_615364)
        
        # Assigning a type to the variable 'olderr' (line 2403)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2403, 8), 'olderr', seterr_call_result_615365)
        
        # Assigning a BinOp to a Name (line 2404):
        
        # Assigning a BinOp to a Name (line 2404):
        
        # Obtaining the type of the subscript
        int_615366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2404, 51), 'int')
        
        # Call to quad(...): (line 2404)
        # Processing the call arguments (line 2404)
        # Getting the type of 'fun' (line 2404)
        fun_615369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2404, 30), 'fun', False)
        # Getting the type of 'lb' (line 2404)
        lb_615370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2404, 35), 'lb', False)
        # Getting the type of 'ub' (line 2404)
        ub_615371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2404, 39), 'ub', False)
        # Processing the call keyword arguments (line 2404)
        # Getting the type of 'kwds' (line 2404)
        kwds_615372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2404, 45), 'kwds', False)
        kwargs_615373 = {'kwds_615372': kwds_615372}
        # Getting the type of 'integrate' (line 2404)
        integrate_615367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2404, 15), 'integrate', False)
        # Obtaining the member 'quad' of a type (line 2404)
        quad_615368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2404, 15), integrate_615367, 'quad')
        # Calling quad(args, kwargs) (line 2404)
        quad_call_result_615374 = invoke(stypy.reporting.localization.Localization(__file__, 2404, 15), quad_615368, *[fun_615369, lb_615370, ub_615371], **kwargs_615373)
        
        # Obtaining the member '__getitem__' of a type (line 2404)
        getitem___615375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2404, 15), quad_call_result_615374, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2404)
        subscript_call_result_615376 = invoke(stypy.reporting.localization.Localization(__file__, 2404, 15), getitem___615375, int_615366)
        
        # Getting the type of 'invfac' (line 2404)
        invfac_615377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2404, 56), 'invfac')
        # Applying the binary operator 'div' (line 2404)
        result_div_615378 = python_operator(stypy.reporting.localization.Localization(__file__, 2404, 15), 'div', subscript_call_result_615376, invfac_615377)
        
        # Assigning a type to the variable 'vals' (line 2404)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2404, 8), 'vals', result_div_615378)
        
        # Call to seterr(...): (line 2405)
        # Processing the call keyword arguments (line 2405)
        # Getting the type of 'olderr' (line 2405)
        olderr_615381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2405, 20), 'olderr', False)
        kwargs_615382 = {'olderr_615381': olderr_615381}
        # Getting the type of 'np' (line 2405)
        np_615379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2405, 8), 'np', False)
        # Obtaining the member 'seterr' of a type (line 2405)
        seterr_615380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2405, 8), np_615379, 'seterr')
        # Calling seterr(args, kwargs) (line 2405)
        seterr_call_result_615383 = invoke(stypy.reporting.localization.Localization(__file__, 2405, 8), seterr_615380, *[], **kwargs_615382)
        
        # Getting the type of 'vals' (line 2406)
        vals_615384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2406, 15), 'vals')
        # Assigning a type to the variable 'stypy_return_type' (line 2406)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2406, 8), 'stypy_return_type', vals_615384)
        
        # ################# End of 'expect(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'expect' in the type store
        # Getting the type of 'stypy_return_type' (line 2338)
        stypy_return_type_615385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2338, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615385)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'expect'
        return stypy_return_type_615385


# Assigning a type to the variable 'rv_continuous' (line 1313)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1313, 0), 'rv_continuous', rv_continuous)

@norecursion
def _drv2_moment(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_drv2_moment'
    module_type_store = module_type_store.open_function_context('_drv2_moment', 2410, 0, False)
    
    # Passed parameters checking function
    _drv2_moment.stypy_localization = localization
    _drv2_moment.stypy_type_of_self = None
    _drv2_moment.stypy_type_store = module_type_store
    _drv2_moment.stypy_function_name = '_drv2_moment'
    _drv2_moment.stypy_param_names_list = ['self', 'n']
    _drv2_moment.stypy_varargs_param_name = 'args'
    _drv2_moment.stypy_kwargs_param_name = None
    _drv2_moment.stypy_call_defaults = defaults
    _drv2_moment.stypy_call_varargs = varargs
    _drv2_moment.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_drv2_moment', ['self', 'n'], 'args', None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_drv2_moment', localization, ['self', 'n'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_drv2_moment(...)' code ##################

    str_615386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2411, 4), 'str', 'Non-central moment of discrete distribution.')

    @norecursion
    def fun(localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'fun'
        module_type_store = module_type_store.open_function_context('fun', 2412, 4, False)
        
        # Passed parameters checking function
        fun.stypy_localization = localization
        fun.stypy_type_of_self = None
        fun.stypy_type_store = module_type_store
        fun.stypy_function_name = 'fun'
        fun.stypy_param_names_list = ['x']
        fun.stypy_varargs_param_name = None
        fun.stypy_kwargs_param_name = None
        fun.stypy_call_defaults = defaults
        fun.stypy_call_varargs = varargs
        fun.stypy_call_kwargs = kwargs
        arguments = process_argument_values(localization, None, module_type_store, 'fun', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'fun', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'fun(...)' code ##################

        
        # Call to power(...): (line 2413)
        # Processing the call arguments (line 2413)
        # Getting the type of 'x' (line 2413)
        x_615389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 24), 'x', False)
        # Getting the type of 'n' (line 2413)
        n_615390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 27), 'n', False)
        # Processing the call keyword arguments (line 2413)
        kwargs_615391 = {}
        # Getting the type of 'np' (line 2413)
        np_615387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 15), 'np', False)
        # Obtaining the member 'power' of a type (line 2413)
        power_615388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2413, 15), np_615387, 'power')
        # Calling power(args, kwargs) (line 2413)
        power_call_result_615392 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 15), power_615388, *[x_615389, n_615390], **kwargs_615391)
        
        
        # Call to _pmf(...): (line 2413)
        # Processing the call arguments (line 2413)
        # Getting the type of 'x' (line 2413)
        x_615395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 42), 'x', False)
        # Getting the type of 'args' (line 2413)
        args_615396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 46), 'args', False)
        # Processing the call keyword arguments (line 2413)
        kwargs_615397 = {}
        # Getting the type of 'self' (line 2413)
        self_615393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2413, 32), 'self', False)
        # Obtaining the member '_pmf' of a type (line 2413)
        _pmf_615394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2413, 32), self_615393, '_pmf')
        # Calling _pmf(args, kwargs) (line 2413)
        _pmf_call_result_615398 = invoke(stypy.reporting.localization.Localization(__file__, 2413, 32), _pmf_615394, *[x_615395, args_615396], **kwargs_615397)
        
        # Applying the binary operator '*' (line 2413)
        result_mul_615399 = python_operator(stypy.reporting.localization.Localization(__file__, 2413, 15), '*', power_call_result_615392, _pmf_call_result_615398)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2413)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2413, 8), 'stypy_return_type', result_mul_615399)
        
        # ################# End of 'fun(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'fun' in the type store
        # Getting the type of 'stypy_return_type' (line 2412)
        stypy_return_type_615400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2412, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615400)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'fun'
        return stypy_return_type_615400

    # Assigning a type to the variable 'fun' (line 2412)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2412, 4), 'fun', fun)
    
    # Call to _expect(...): (line 2414)
    # Processing the call arguments (line 2414)
    # Getting the type of 'fun' (line 2414)
    fun_615402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 19), 'fun', False)
    # Getting the type of 'self' (line 2414)
    self_615403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 24), 'self', False)
    # Obtaining the member 'a' of a type (line 2414)
    a_615404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2414, 24), self_615403, 'a')
    # Getting the type of 'self' (line 2414)
    self_615405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 32), 'self', False)
    # Obtaining the member 'b' of a type (line 2414)
    b_615406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2414, 32), self_615405, 'b')
    
    # Call to ppf(...): (line 2414)
    # Processing the call arguments (line 2414)
    float_615409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2414, 49), 'float')
    # Getting the type of 'args' (line 2414)
    args_615410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 55), 'args', False)
    # Processing the call keyword arguments (line 2414)
    kwargs_615411 = {}
    # Getting the type of 'self' (line 2414)
    self_615407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 40), 'self', False)
    # Obtaining the member 'ppf' of a type (line 2414)
    ppf_615408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2414, 40), self_615407, 'ppf')
    # Calling ppf(args, kwargs) (line 2414)
    ppf_call_result_615412 = invoke(stypy.reporting.localization.Localization(__file__, 2414, 40), ppf_615408, *[float_615409, args_615410], **kwargs_615411)
    
    # Getting the type of 'self' (line 2414)
    self_615413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 62), 'self', False)
    # Obtaining the member 'inc' of a type (line 2414)
    inc_615414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2414, 62), self_615413, 'inc')
    # Processing the call keyword arguments (line 2414)
    kwargs_615415 = {}
    # Getting the type of '_expect' (line 2414)
    _expect_615401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2414, 11), '_expect', False)
    # Calling _expect(args, kwargs) (line 2414)
    _expect_call_result_615416 = invoke(stypy.reporting.localization.Localization(__file__, 2414, 11), _expect_615401, *[fun_615402, a_615404, b_615406, ppf_call_result_615412, inc_615414], **kwargs_615415)
    
    # Assigning a type to the variable 'stypy_return_type' (line 2414)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2414, 4), 'stypy_return_type', _expect_call_result_615416)
    
    # ################# End of '_drv2_moment(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_drv2_moment' in the type store
    # Getting the type of 'stypy_return_type' (line 2410)
    stypy_return_type_615417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2410, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_615417)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_drv2_moment'
    return stypy_return_type_615417

# Assigning a type to the variable '_drv2_moment' (line 2410)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2410, 0), '_drv2_moment', _drv2_moment)

@norecursion
def _drv2_ppfsingle(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function '_drv2_ppfsingle'
    module_type_store = module_type_store.open_function_context('_drv2_ppfsingle', 2417, 0, False)
    
    # Passed parameters checking function
    _drv2_ppfsingle.stypy_localization = localization
    _drv2_ppfsingle.stypy_type_of_self = None
    _drv2_ppfsingle.stypy_type_store = module_type_store
    _drv2_ppfsingle.stypy_function_name = '_drv2_ppfsingle'
    _drv2_ppfsingle.stypy_param_names_list = ['self', 'q']
    _drv2_ppfsingle.stypy_varargs_param_name = 'args'
    _drv2_ppfsingle.stypy_kwargs_param_name = None
    _drv2_ppfsingle.stypy_call_defaults = defaults
    _drv2_ppfsingle.stypy_call_varargs = varargs
    _drv2_ppfsingle.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_drv2_ppfsingle', ['self', 'q'], 'args', None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_drv2_ppfsingle', localization, ['self', 'q'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_drv2_ppfsingle(...)' code ##################

    
    # Assigning a Attribute to a Name (line 2418):
    
    # Assigning a Attribute to a Name (line 2418):
    # Getting the type of 'self' (line 2418)
    self_615418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2418, 8), 'self')
    # Obtaining the member 'b' of a type (line 2418)
    b_615419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2418, 8), self_615418, 'b')
    # Assigning a type to the variable 'b' (line 2418)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2418, 4), 'b', b_615419)
    
    # Assigning a Attribute to a Name (line 2419):
    
    # Assigning a Attribute to a Name (line 2419):
    # Getting the type of 'self' (line 2419)
    self_615420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2419, 8), 'self')
    # Obtaining the member 'a' of a type (line 2419)
    a_615421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2419, 8), self_615420, 'a')
    # Assigning a type to the variable 'a' (line 2419)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2419, 4), 'a', a_615421)
    
    
    # Call to isinf(...): (line 2420)
    # Processing the call arguments (line 2420)
    # Getting the type of 'b' (line 2420)
    b_615423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 13), 'b', False)
    # Processing the call keyword arguments (line 2420)
    kwargs_615424 = {}
    # Getting the type of 'isinf' (line 2420)
    isinf_615422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2420, 7), 'isinf', False)
    # Calling isinf(args, kwargs) (line 2420)
    isinf_call_result_615425 = invoke(stypy.reporting.localization.Localization(__file__, 2420, 7), isinf_615422, *[b_615423], **kwargs_615424)
    
    # Testing the type of an if condition (line 2420)
    if_condition_615426 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2420, 4), isinf_call_result_615425)
    # Assigning a type to the variable 'if_condition_615426' (line 2420)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2420, 4), 'if_condition_615426', if_condition_615426)
    # SSA begins for if statement (line 2420)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2421):
    
    # Assigning a Call to a Name (line 2421):
    
    # Call to int(...): (line 2421)
    # Processing the call arguments (line 2421)
    
    # Call to max(...): (line 2421)
    # Processing the call arguments (line 2421)
    int_615429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2421, 20), 'int')
    # Getting the type of 'q' (line 2421)
    q_615430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2421, 24), 'q', False)
    # Applying the binary operator '*' (line 2421)
    result_mul_615431 = python_operator(stypy.reporting.localization.Localization(__file__, 2421, 20), '*', int_615429, q_615430)
    
    int_615432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2421, 27), 'int')
    # Processing the call keyword arguments (line 2421)
    kwargs_615433 = {}
    # Getting the type of 'max' (line 2421)
    max_615428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2421, 16), 'max', False)
    # Calling max(args, kwargs) (line 2421)
    max_call_result_615434 = invoke(stypy.reporting.localization.Localization(__file__, 2421, 16), max_615428, *[result_mul_615431, int_615432], **kwargs_615433)
    
    # Processing the call keyword arguments (line 2421)
    kwargs_615435 = {}
    # Getting the type of 'int' (line 2421)
    int_615427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2421, 12), 'int', False)
    # Calling int(args, kwargs) (line 2421)
    int_call_result_615436 = invoke(stypy.reporting.localization.Localization(__file__, 2421, 12), int_615427, *[max_call_result_615434], **kwargs_615435)
    
    # Assigning a type to the variable 'b' (line 2421)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2421, 8), 'b', int_call_result_615436)
    
    int_615437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2422, 14), 'int')
    # Testing the type of an if condition (line 2422)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2422, 8), int_615437)
    # SSA begins for while statement (line 2422)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    
    # Getting the type of 'b' (line 2423)
    b_615438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2423, 15), 'b')
    # Getting the type of 'self' (line 2423)
    self_615439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2423, 20), 'self')
    # Obtaining the member 'b' of a type (line 2423)
    b_615440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2423, 20), self_615439, 'b')
    # Applying the binary operator '>=' (line 2423)
    result_ge_615441 = python_operator(stypy.reporting.localization.Localization(__file__, 2423, 15), '>=', b_615438, b_615440)
    
    # Testing the type of an if condition (line 2423)
    if_condition_615442 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2423, 12), result_ge_615441)
    # Assigning a type to the variable 'if_condition_615442' (line 2423)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2423, 12), 'if_condition_615442', if_condition_615442)
    # SSA begins for if statement (line 2423)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 2424):
    
    # Assigning a Num to a Name (line 2424):
    float_615443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2424, 21), 'float')
    # Assigning a type to the variable 'qb' (line 2424)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2424, 16), 'qb', float_615443)
    # SSA join for if statement (line 2423)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2426):
    
    # Assigning a Call to a Name (line 2426):
    
    # Call to _cdf(...): (line 2426)
    # Processing the call arguments (line 2426)
    # Getting the type of 'b' (line 2426)
    b_615446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 27), 'b', False)
    # Getting the type of 'args' (line 2426)
    args_615447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 31), 'args', False)
    # Processing the call keyword arguments (line 2426)
    kwargs_615448 = {}
    # Getting the type of 'self' (line 2426)
    self_615444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2426, 17), 'self', False)
    # Obtaining the member '_cdf' of a type (line 2426)
    _cdf_615445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2426, 17), self_615444, '_cdf')
    # Calling _cdf(args, kwargs) (line 2426)
    _cdf_call_result_615449 = invoke(stypy.reporting.localization.Localization(__file__, 2426, 17), _cdf_615445, *[b_615446, args_615447], **kwargs_615448)
    
    # Assigning a type to the variable 'qb' (line 2426)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2426, 12), 'qb', _cdf_call_result_615449)
    
    
    # Getting the type of 'qb' (line 2427)
    qb_615450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2427, 16), 'qb')
    # Getting the type of 'q' (line 2427)
    q_615451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2427, 21), 'q')
    # Applying the binary operator '<' (line 2427)
    result_lt_615452 = python_operator(stypy.reporting.localization.Localization(__file__, 2427, 16), '<', qb_615450, q_615451)
    
    # Testing the type of an if condition (line 2427)
    if_condition_615453 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2427, 12), result_lt_615452)
    # Assigning a type to the variable 'if_condition_615453' (line 2427)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2427, 12), 'if_condition_615453', if_condition_615453)
    # SSA begins for if statement (line 2427)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'b' (line 2428)
    b_615454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2428, 16), 'b')
    int_615455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2428, 21), 'int')
    # Applying the binary operator '+=' (line 2428)
    result_iadd_615456 = python_operator(stypy.reporting.localization.Localization(__file__, 2428, 16), '+=', b_615454, int_615455)
    # Assigning a type to the variable 'b' (line 2428)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2428, 16), 'b', result_iadd_615456)
    
    # SSA branch for the else part of an if statement (line 2427)
    module_type_store.open_ssa_branch('else')
    # SSA join for if statement (line 2427)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for while statement (line 2422)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2420)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Num to a Name (line 2432):
    
    # Assigning a Num to a Name (line 2432):
    float_615457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2432, 13), 'float')
    # Assigning a type to the variable 'qb' (line 2432)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2432, 8), 'qb', float_615457)
    # SSA join for if statement (line 2420)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isinf(...): (line 2433)
    # Processing the call arguments (line 2433)
    # Getting the type of 'a' (line 2433)
    a_615459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2433, 13), 'a', False)
    # Processing the call keyword arguments (line 2433)
    kwargs_615460 = {}
    # Getting the type of 'isinf' (line 2433)
    isinf_615458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2433, 7), 'isinf', False)
    # Calling isinf(args, kwargs) (line 2433)
    isinf_call_result_615461 = invoke(stypy.reporting.localization.Localization(__file__, 2433, 7), isinf_615458, *[a_615459], **kwargs_615460)
    
    # Testing the type of an if condition (line 2433)
    if_condition_615462 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2433, 4), isinf_call_result_615461)
    # Assigning a type to the variable 'if_condition_615462' (line 2433)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2433, 4), 'if_condition_615462', if_condition_615462)
    # SSA begins for if statement (line 2433)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 2434):
    
    # Assigning a Call to a Name (line 2434):
    
    # Call to int(...): (line 2434)
    # Processing the call arguments (line 2434)
    
    # Call to min(...): (line 2434)
    # Processing the call arguments (line 2434)
    int_615465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2434, 20), 'int')
    # Getting the type of 'q' (line 2434)
    q_615466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 25), 'q', False)
    # Applying the binary operator '*' (line 2434)
    result_mul_615467 = python_operator(stypy.reporting.localization.Localization(__file__, 2434, 20), '*', int_615465, q_615466)
    
    int_615468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2434, 28), 'int')
    # Processing the call keyword arguments (line 2434)
    kwargs_615469 = {}
    # Getting the type of 'min' (line 2434)
    min_615464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 16), 'min', False)
    # Calling min(args, kwargs) (line 2434)
    min_call_result_615470 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 16), min_615464, *[result_mul_615467, int_615468], **kwargs_615469)
    
    # Processing the call keyword arguments (line 2434)
    kwargs_615471 = {}
    # Getting the type of 'int' (line 2434)
    int_615463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2434, 12), 'int', False)
    # Calling int(args, kwargs) (line 2434)
    int_call_result_615472 = invoke(stypy.reporting.localization.Localization(__file__, 2434, 12), int_615463, *[min_call_result_615470], **kwargs_615471)
    
    # Assigning a type to the variable 'a' (line 2434)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2434, 8), 'a', int_call_result_615472)
    
    int_615473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2435, 14), 'int')
    # Testing the type of an if condition (line 2435)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2435, 8), int_615473)
    # SSA begins for while statement (line 2435)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    
    # Getting the type of 'a' (line 2436)
    a_615474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2436, 15), 'a')
    # Getting the type of 'self' (line 2436)
    self_615475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2436, 20), 'self')
    # Obtaining the member 'a' of a type (line 2436)
    a_615476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2436, 20), self_615475, 'a')
    # Applying the binary operator '<=' (line 2436)
    result_le_615477 = python_operator(stypy.reporting.localization.Localization(__file__, 2436, 15), '<=', a_615474, a_615476)
    
    # Testing the type of an if condition (line 2436)
    if_condition_615478 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2436, 12), result_le_615477)
    # Assigning a type to the variable 'if_condition_615478' (line 2436)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2436, 12), 'if_condition_615478', if_condition_615478)
    # SSA begins for if statement (line 2436)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Num to a Name (line 2437):
    
    # Assigning a Num to a Name (line 2437):
    float_615479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2437, 21), 'float')
    # Assigning a type to the variable 'qb' (line 2437)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2437, 16), 'qb', float_615479)
    # SSA join for if statement (line 2436)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2439):
    
    # Assigning a Call to a Name (line 2439):
    
    # Call to _cdf(...): (line 2439)
    # Processing the call arguments (line 2439)
    # Getting the type of 'a' (line 2439)
    a_615482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 27), 'a', False)
    # Getting the type of 'args' (line 2439)
    args_615483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 31), 'args', False)
    # Processing the call keyword arguments (line 2439)
    kwargs_615484 = {}
    # Getting the type of 'self' (line 2439)
    self_615480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2439, 17), 'self', False)
    # Obtaining the member '_cdf' of a type (line 2439)
    _cdf_615481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2439, 17), self_615480, '_cdf')
    # Calling _cdf(args, kwargs) (line 2439)
    _cdf_call_result_615485 = invoke(stypy.reporting.localization.Localization(__file__, 2439, 17), _cdf_615481, *[a_615482, args_615483], **kwargs_615484)
    
    # Assigning a type to the variable 'qa' (line 2439)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2439, 12), 'qa', _cdf_call_result_615485)
    
    
    # Getting the type of 'qa' (line 2440)
    qa_615486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2440, 16), 'qa')
    # Getting the type of 'q' (line 2440)
    q_615487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2440, 21), 'q')
    # Applying the binary operator '>' (line 2440)
    result_gt_615488 = python_operator(stypy.reporting.localization.Localization(__file__, 2440, 16), '>', qa_615486, q_615487)
    
    # Testing the type of an if condition (line 2440)
    if_condition_615489 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2440, 12), result_gt_615488)
    # Assigning a type to the variable 'if_condition_615489' (line 2440)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2440, 12), 'if_condition_615489', if_condition_615489)
    # SSA begins for if statement (line 2440)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Getting the type of 'a' (line 2441)
    a_615490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2441, 16), 'a')
    int_615491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2441, 21), 'int')
    # Applying the binary operator '-=' (line 2441)
    result_isub_615492 = python_operator(stypy.reporting.localization.Localization(__file__, 2441, 16), '-=', a_615490, int_615491)
    # Assigning a type to the variable 'a' (line 2441)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2441, 16), 'a', result_isub_615492)
    
    # SSA branch for the else part of an if statement (line 2440)
    module_type_store.open_ssa_branch('else')
    # SSA join for if statement (line 2440)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for while statement (line 2435)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA branch for the else part of an if statement (line 2433)
    module_type_store.open_ssa_branch('else')
    
    # Assigning a Call to a Name (line 2445):
    
    # Assigning a Call to a Name (line 2445):
    
    # Call to _cdf(...): (line 2445)
    # Processing the call arguments (line 2445)
    # Getting the type of 'a' (line 2445)
    a_615495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2445, 23), 'a', False)
    # Getting the type of 'args' (line 2445)
    args_615496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2445, 27), 'args', False)
    # Processing the call keyword arguments (line 2445)
    kwargs_615497 = {}
    # Getting the type of 'self' (line 2445)
    self_615493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2445, 13), 'self', False)
    # Obtaining the member '_cdf' of a type (line 2445)
    _cdf_615494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2445, 13), self_615493, '_cdf')
    # Calling _cdf(args, kwargs) (line 2445)
    _cdf_call_result_615498 = invoke(stypy.reporting.localization.Localization(__file__, 2445, 13), _cdf_615494, *[a_615495, args_615496], **kwargs_615497)
    
    # Assigning a type to the variable 'qa' (line 2445)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2445, 8), 'qa', _cdf_call_result_615498)
    # SSA join for if statement (line 2433)
    module_type_store = module_type_store.join_ssa_context()
    
    
    int_615499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2447, 10), 'int')
    # Testing the type of an if condition (line 2447)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2447, 4), int_615499)
    # SSA begins for while statement (line 2447)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    
    # Getting the type of 'qa' (line 2448)
    qa_615500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2448, 12), 'qa')
    # Getting the type of 'q' (line 2448)
    q_615501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2448, 18), 'q')
    # Applying the binary operator '==' (line 2448)
    result_eq_615502 = python_operator(stypy.reporting.localization.Localization(__file__, 2448, 12), '==', qa_615500, q_615501)
    
    # Testing the type of an if condition (line 2448)
    if_condition_615503 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2448, 8), result_eq_615502)
    # Assigning a type to the variable 'if_condition_615503' (line 2448)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2448, 8), 'if_condition_615503', if_condition_615503)
    # SSA begins for if statement (line 2448)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'a' (line 2449)
    a_615504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2449, 19), 'a')
    # Assigning a type to the variable 'stypy_return_type' (line 2449)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2449, 12), 'stypy_return_type', a_615504)
    # SSA join for if statement (line 2448)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'qb' (line 2450)
    qb_615505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2450, 12), 'qb')
    # Getting the type of 'q' (line 2450)
    q_615506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2450, 18), 'q')
    # Applying the binary operator '==' (line 2450)
    result_eq_615507 = python_operator(stypy.reporting.localization.Localization(__file__, 2450, 12), '==', qb_615505, q_615506)
    
    # Testing the type of an if condition (line 2450)
    if_condition_615508 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2450, 8), result_eq_615507)
    # Assigning a type to the variable 'if_condition_615508' (line 2450)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2450, 8), 'if_condition_615508', if_condition_615508)
    # SSA begins for if statement (line 2450)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'b' (line 2451)
    b_615509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2451, 19), 'b')
    # Assigning a type to the variable 'stypy_return_type' (line 2451)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2451, 12), 'stypy_return_type', b_615509)
    # SSA join for if statement (line 2450)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'b' (line 2452)
    b_615510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2452, 11), 'b')
    # Getting the type of 'a' (line 2452)
    a_615511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2452, 16), 'a')
    int_615512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2452, 18), 'int')
    # Applying the binary operator '+' (line 2452)
    result_add_615513 = python_operator(stypy.reporting.localization.Localization(__file__, 2452, 16), '+', a_615511, int_615512)
    
    # Applying the binary operator '<=' (line 2452)
    result_le_615514 = python_operator(stypy.reporting.localization.Localization(__file__, 2452, 11), '<=', b_615510, result_add_615513)
    
    # Testing the type of an if condition (line 2452)
    if_condition_615515 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2452, 8), result_le_615514)
    # Assigning a type to the variable 'if_condition_615515' (line 2452)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2452, 8), 'if_condition_615515', if_condition_615515)
    # SSA begins for if statement (line 2452)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'qa' (line 2457)
    qa_615516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2457, 15), 'qa')
    # Getting the type of 'q' (line 2457)
    q_615517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2457, 20), 'q')
    # Applying the binary operator '>' (line 2457)
    result_gt_615518 = python_operator(stypy.reporting.localization.Localization(__file__, 2457, 15), '>', qa_615516, q_615517)
    
    # Testing the type of an if condition (line 2457)
    if_condition_615519 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2457, 12), result_gt_615518)
    # Assigning a type to the variable 'if_condition_615519' (line 2457)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2457, 12), 'if_condition_615519', if_condition_615519)
    # SSA begins for if statement (line 2457)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # Getting the type of 'a' (line 2458)
    a_615520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2458, 23), 'a')
    # Assigning a type to the variable 'stypy_return_type' (line 2458)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2458, 16), 'stypy_return_type', a_615520)
    # SSA branch for the else part of an if statement (line 2457)
    module_type_store.open_ssa_branch('else')
    # Getting the type of 'b' (line 2460)
    b_615521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2460, 23), 'b')
    # Assigning a type to the variable 'stypy_return_type' (line 2460)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2460, 16), 'stypy_return_type', b_615521)
    # SSA join for if statement (line 2457)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2452)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Call to a Name (line 2461):
    
    # Assigning a Call to a Name (line 2461):
    
    # Call to int(...): (line 2461)
    # Processing the call arguments (line 2461)
    # Getting the type of 'a' (line 2461)
    a_615523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2461, 17), 'a', False)
    # Getting the type of 'b' (line 2461)
    b_615524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2461, 19), 'b', False)
    # Applying the binary operator '+' (line 2461)
    result_add_615525 = python_operator(stypy.reporting.localization.Localization(__file__, 2461, 17), '+', a_615523, b_615524)
    
    float_615526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2461, 22), 'float')
    # Applying the binary operator 'div' (line 2461)
    result_div_615527 = python_operator(stypy.reporting.localization.Localization(__file__, 2461, 16), 'div', result_add_615525, float_615526)
    
    # Processing the call keyword arguments (line 2461)
    kwargs_615528 = {}
    # Getting the type of 'int' (line 2461)
    int_615522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2461, 12), 'int', False)
    # Calling int(args, kwargs) (line 2461)
    int_call_result_615529 = invoke(stypy.reporting.localization.Localization(__file__, 2461, 12), int_615522, *[result_div_615527], **kwargs_615528)
    
    # Assigning a type to the variable 'c' (line 2461)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2461, 8), 'c', int_call_result_615529)
    
    # Assigning a Call to a Name (line 2462):
    
    # Assigning a Call to a Name (line 2462):
    
    # Call to _cdf(...): (line 2462)
    # Processing the call arguments (line 2462)
    # Getting the type of 'c' (line 2462)
    c_615532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2462, 23), 'c', False)
    # Getting the type of 'args' (line 2462)
    args_615533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2462, 27), 'args', False)
    # Processing the call keyword arguments (line 2462)
    kwargs_615534 = {}
    # Getting the type of 'self' (line 2462)
    self_615530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2462, 13), 'self', False)
    # Obtaining the member '_cdf' of a type (line 2462)
    _cdf_615531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2462, 13), self_615530, '_cdf')
    # Calling _cdf(args, kwargs) (line 2462)
    _cdf_call_result_615535 = invoke(stypy.reporting.localization.Localization(__file__, 2462, 13), _cdf_615531, *[c_615532, args_615533], **kwargs_615534)
    
    # Assigning a type to the variable 'qc' (line 2462)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2462, 8), 'qc', _cdf_call_result_615535)
    
    
    # Getting the type of 'qc' (line 2463)
    qc_615536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2463, 12), 'qc')
    # Getting the type of 'q' (line 2463)
    q_615537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2463, 17), 'q')
    # Applying the binary operator '<' (line 2463)
    result_lt_615538 = python_operator(stypy.reporting.localization.Localization(__file__, 2463, 12), '<', qc_615536, q_615537)
    
    # Testing the type of an if condition (line 2463)
    if_condition_615539 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2463, 8), result_lt_615538)
    # Assigning a type to the variable 'if_condition_615539' (line 2463)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2463, 8), 'if_condition_615539', if_condition_615539)
    # SSA begins for if statement (line 2463)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'a' (line 2464)
    a_615540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2464, 15), 'a')
    # Getting the type of 'c' (line 2464)
    c_615541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2464, 20), 'c')
    # Applying the binary operator '!=' (line 2464)
    result_ne_615542 = python_operator(stypy.reporting.localization.Localization(__file__, 2464, 15), '!=', a_615540, c_615541)
    
    # Testing the type of an if condition (line 2464)
    if_condition_615543 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2464, 12), result_ne_615542)
    # Assigning a type to the variable 'if_condition_615543' (line 2464)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2464, 12), 'if_condition_615543', if_condition_615543)
    # SSA begins for if statement (line 2464)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 2465):
    
    # Assigning a Name to a Name (line 2465):
    # Getting the type of 'c' (line 2465)
    c_615544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2465, 20), 'c')
    # Assigning a type to the variable 'a' (line 2465)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2465, 16), 'a', c_615544)
    # SSA branch for the else part of an if statement (line 2464)
    module_type_store.open_ssa_branch('else')
    
    # Call to RuntimeError(...): (line 2467)
    # Processing the call arguments (line 2467)
    str_615546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2467, 35), 'str', 'updating stopped, endless loop')
    # Processing the call keyword arguments (line 2467)
    kwargs_615547 = {}
    # Getting the type of 'RuntimeError' (line 2467)
    RuntimeError_615545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2467, 22), 'RuntimeError', False)
    # Calling RuntimeError(args, kwargs) (line 2467)
    RuntimeError_call_result_615548 = invoke(stypy.reporting.localization.Localization(__file__, 2467, 22), RuntimeError_615545, *[str_615546], **kwargs_615547)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2467, 16), RuntimeError_call_result_615548, 'raise parameter', BaseException)
    # SSA join for if statement (line 2464)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 2468):
    
    # Assigning a Name to a Name (line 2468):
    # Getting the type of 'qc' (line 2468)
    qc_615549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2468, 17), 'qc')
    # Assigning a type to the variable 'qa' (line 2468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2468, 12), 'qa', qc_615549)
    # SSA branch for the else part of an if statement (line 2463)
    module_type_store.open_ssa_branch('else')
    
    
    # Getting the type of 'qc' (line 2469)
    qc_615550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2469, 14), 'qc')
    # Getting the type of 'q' (line 2469)
    q_615551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2469, 19), 'q')
    # Applying the binary operator '>' (line 2469)
    result_gt_615552 = python_operator(stypy.reporting.localization.Localization(__file__, 2469, 14), '>', qc_615550, q_615551)
    
    # Testing the type of an if condition (line 2469)
    if_condition_615553 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2469, 13), result_gt_615552)
    # Assigning a type to the variable 'if_condition_615553' (line 2469)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2469, 13), 'if_condition_615553', if_condition_615553)
    # SSA begins for if statement (line 2469)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    
    # Getting the type of 'b' (line 2470)
    b_615554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2470, 15), 'b')
    # Getting the type of 'c' (line 2470)
    c_615555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2470, 20), 'c')
    # Applying the binary operator '!=' (line 2470)
    result_ne_615556 = python_operator(stypy.reporting.localization.Localization(__file__, 2470, 15), '!=', b_615554, c_615555)
    
    # Testing the type of an if condition (line 2470)
    if_condition_615557 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2470, 12), result_ne_615556)
    # Assigning a type to the variable 'if_condition_615557' (line 2470)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2470, 12), 'if_condition_615557', if_condition_615557)
    # SSA begins for if statement (line 2470)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 2471):
    
    # Assigning a Name to a Name (line 2471):
    # Getting the type of 'c' (line 2471)
    c_615558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2471, 20), 'c')
    # Assigning a type to the variable 'b' (line 2471)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2471, 16), 'b', c_615558)
    # SSA branch for the else part of an if statement (line 2470)
    module_type_store.open_ssa_branch('else')
    
    # Call to RuntimeError(...): (line 2473)
    # Processing the call arguments (line 2473)
    str_615560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2473, 35), 'str', 'updating stopped, endless loop')
    # Processing the call keyword arguments (line 2473)
    kwargs_615561 = {}
    # Getting the type of 'RuntimeError' (line 2473)
    RuntimeError_615559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2473, 22), 'RuntimeError', False)
    # Calling RuntimeError(args, kwargs) (line 2473)
    RuntimeError_call_result_615562 = invoke(stypy.reporting.localization.Localization(__file__, 2473, 22), RuntimeError_615559, *[str_615560], **kwargs_615561)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2473, 16), RuntimeError_call_result_615562, 'raise parameter', BaseException)
    # SSA join for if statement (line 2470)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Name to a Name (line 2474):
    
    # Assigning a Name to a Name (line 2474):
    # Getting the type of 'qc' (line 2474)
    qc_615563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2474, 17), 'qc')
    # Assigning a type to the variable 'qb' (line 2474)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2474, 12), 'qb', qc_615563)
    # SSA branch for the else part of an if statement (line 2469)
    module_type_store.open_ssa_branch('else')
    # Getting the type of 'c' (line 2476)
    c_615564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2476, 19), 'c')
    # Assigning a type to the variable 'stypy_return_type' (line 2476)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2476, 12), 'stypy_return_type', c_615564)
    # SSA join for if statement (line 2469)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for if statement (line 2463)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for while statement (line 2447)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of '_drv2_ppfsingle(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_drv2_ppfsingle' in the type store
    # Getting the type of 'stypy_return_type' (line 2417)
    stypy_return_type_615565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2417, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_615565)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_drv2_ppfsingle'
    return stypy_return_type_615565

# Assigning a type to the variable '_drv2_ppfsingle' (line 2417)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2417, 0), '_drv2_ppfsingle', _drv2_ppfsingle)

@norecursion
def entropy(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    # Getting the type of 'None' (line 2479)
    None_615566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2479, 19), 'None')
    # Getting the type of 'None' (line 2479)
    None_615567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2479, 30), 'None')
    defaults = [None_615566, None_615567]
    # Create a new context for function 'entropy'
    module_type_store = module_type_store.open_function_context('entropy', 2479, 0, False)
    
    # Passed parameters checking function
    entropy.stypy_localization = localization
    entropy.stypy_type_of_self = None
    entropy.stypy_type_store = module_type_store
    entropy.stypy_function_name = 'entropy'
    entropy.stypy_param_names_list = ['pk', 'qk', 'base']
    entropy.stypy_varargs_param_name = None
    entropy.stypy_kwargs_param_name = None
    entropy.stypy_call_defaults = defaults
    entropy.stypy_call_varargs = varargs
    entropy.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'entropy', ['pk', 'qk', 'base'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'entropy', localization, ['pk', 'qk', 'base'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'entropy(...)' code ##################

    str_615568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2506, (-1)), 'str', "Calculate the entropy of a distribution for given probability values.\n\n    If only probabilities `pk` are given, the entropy is calculated as\n    ``S = -sum(pk * log(pk), axis=0)``.\n\n    If `qk` is not None, then compute the Kullback-Leibler divergence\n    ``S = sum(pk * log(pk / qk), axis=0)``.\n\n    This routine will normalize `pk` and `qk` if they don't sum to 1.\n\n    Parameters\n    ----------\n    pk : sequence\n        Defines the (discrete) distribution. ``pk[i]`` is the (possibly\n        unnormalized) probability of event ``i``.\n    qk : sequence, optional\n        Sequence against which the relative entropy is computed. Should be in\n        the same format as `pk`.\n    base : float, optional\n        The logarithmic base to use, defaults to ``e`` (natural logarithm).\n\n    Returns\n    -------\n    S : float\n        The calculated entropy.\n\n    ")
    
    # Assigning a Call to a Name (line 2507):
    
    # Assigning a Call to a Name (line 2507):
    
    # Call to asarray(...): (line 2507)
    # Processing the call arguments (line 2507)
    # Getting the type of 'pk' (line 2507)
    pk_615570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2507, 17), 'pk', False)
    # Processing the call keyword arguments (line 2507)
    kwargs_615571 = {}
    # Getting the type of 'asarray' (line 2507)
    asarray_615569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2507, 9), 'asarray', False)
    # Calling asarray(args, kwargs) (line 2507)
    asarray_call_result_615572 = invoke(stypy.reporting.localization.Localization(__file__, 2507, 9), asarray_615569, *[pk_615570], **kwargs_615571)
    
    # Assigning a type to the variable 'pk' (line 2507)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2507, 4), 'pk', asarray_call_result_615572)
    
    # Assigning a BinOp to a Name (line 2508):
    
    # Assigning a BinOp to a Name (line 2508):
    float_615573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2508, 9), 'float')
    # Getting the type of 'pk' (line 2508)
    pk_615574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2508, 13), 'pk')
    # Applying the binary operator '*' (line 2508)
    result_mul_615575 = python_operator(stypy.reporting.localization.Localization(__file__, 2508, 9), '*', float_615573, pk_615574)
    
    
    # Call to sum(...): (line 2508)
    # Processing the call arguments (line 2508)
    # Getting the type of 'pk' (line 2508)
    pk_615578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2508, 25), 'pk', False)
    # Processing the call keyword arguments (line 2508)
    int_615579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2508, 34), 'int')
    keyword_615580 = int_615579
    kwargs_615581 = {'axis': keyword_615580}
    # Getting the type of 'np' (line 2508)
    np_615576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2508, 18), 'np', False)
    # Obtaining the member 'sum' of a type (line 2508)
    sum_615577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2508, 18), np_615576, 'sum')
    # Calling sum(args, kwargs) (line 2508)
    sum_call_result_615582 = invoke(stypy.reporting.localization.Localization(__file__, 2508, 18), sum_615577, *[pk_615578], **kwargs_615581)
    
    # Applying the binary operator 'div' (line 2508)
    result_div_615583 = python_operator(stypy.reporting.localization.Localization(__file__, 2508, 16), 'div', result_mul_615575, sum_call_result_615582)
    
    # Assigning a type to the variable 'pk' (line 2508)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2508, 4), 'pk', result_div_615583)
    
    # Type idiom detected: calculating its left and rigth part (line 2509)
    # Getting the type of 'qk' (line 2509)
    qk_615584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2509, 7), 'qk')
    # Getting the type of 'None' (line 2509)
    None_615585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2509, 13), 'None')
    
    (may_be_615586, more_types_in_union_615587) = may_be_none(qk_615584, None_615585)

    if may_be_615586:

        if more_types_in_union_615587:
            # Runtime conditional SSA (line 2509)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Assigning a Call to a Name (line 2510):
        
        # Assigning a Call to a Name (line 2510):
        
        # Call to entr(...): (line 2510)
        # Processing the call arguments (line 2510)
        # Getting the type of 'pk' (line 2510)
        pk_615589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2510, 19), 'pk', False)
        # Processing the call keyword arguments (line 2510)
        kwargs_615590 = {}
        # Getting the type of 'entr' (line 2510)
        entr_615588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2510, 14), 'entr', False)
        # Calling entr(args, kwargs) (line 2510)
        entr_call_result_615591 = invoke(stypy.reporting.localization.Localization(__file__, 2510, 14), entr_615588, *[pk_615589], **kwargs_615590)
        
        # Assigning a type to the variable 'vec' (line 2510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2510, 8), 'vec', entr_call_result_615591)

        if more_types_in_union_615587:
            # Runtime conditional SSA for else branch (line 2509)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_615586) or more_types_in_union_615587):
        
        # Assigning a Call to a Name (line 2512):
        
        # Assigning a Call to a Name (line 2512):
        
        # Call to asarray(...): (line 2512)
        # Processing the call arguments (line 2512)
        # Getting the type of 'qk' (line 2512)
        qk_615593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2512, 21), 'qk', False)
        # Processing the call keyword arguments (line 2512)
        kwargs_615594 = {}
        # Getting the type of 'asarray' (line 2512)
        asarray_615592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2512, 13), 'asarray', False)
        # Calling asarray(args, kwargs) (line 2512)
        asarray_call_result_615595 = invoke(stypy.reporting.localization.Localization(__file__, 2512, 13), asarray_615592, *[qk_615593], **kwargs_615594)
        
        # Assigning a type to the variable 'qk' (line 2512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2512, 8), 'qk', asarray_call_result_615595)
        
        
        
        # Call to len(...): (line 2513)
        # Processing the call arguments (line 2513)
        # Getting the type of 'qk' (line 2513)
        qk_615597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 15), 'qk', False)
        # Processing the call keyword arguments (line 2513)
        kwargs_615598 = {}
        # Getting the type of 'len' (line 2513)
        len_615596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 11), 'len', False)
        # Calling len(args, kwargs) (line 2513)
        len_call_result_615599 = invoke(stypy.reporting.localization.Localization(__file__, 2513, 11), len_615596, *[qk_615597], **kwargs_615598)
        
        
        # Call to len(...): (line 2513)
        # Processing the call arguments (line 2513)
        # Getting the type of 'pk' (line 2513)
        pk_615601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 26), 'pk', False)
        # Processing the call keyword arguments (line 2513)
        kwargs_615602 = {}
        # Getting the type of 'len' (line 2513)
        len_615600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2513, 22), 'len', False)
        # Calling len(args, kwargs) (line 2513)
        len_call_result_615603 = invoke(stypy.reporting.localization.Localization(__file__, 2513, 22), len_615600, *[pk_615601], **kwargs_615602)
        
        # Applying the binary operator '!=' (line 2513)
        result_ne_615604 = python_operator(stypy.reporting.localization.Localization(__file__, 2513, 11), '!=', len_call_result_615599, len_call_result_615603)
        
        # Testing the type of an if condition (line 2513)
        if_condition_615605 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2513, 8), result_ne_615604)
        # Assigning a type to the variable 'if_condition_615605' (line 2513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2513, 8), 'if_condition_615605', if_condition_615605)
        # SSA begins for if statement (line 2513)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 2514)
        # Processing the call arguments (line 2514)
        str_615607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2514, 29), 'str', 'qk and pk must have same length.')
        # Processing the call keyword arguments (line 2514)
        kwargs_615608 = {}
        # Getting the type of 'ValueError' (line 2514)
        ValueError_615606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2514, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 2514)
        ValueError_call_result_615609 = invoke(stypy.reporting.localization.Localization(__file__, 2514, 18), ValueError_615606, *[str_615607], **kwargs_615608)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2514, 12), ValueError_call_result_615609, 'raise parameter', BaseException)
        # SSA join for if statement (line 2513)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 2515):
        
        # Assigning a BinOp to a Name (line 2515):
        float_615610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2515, 13), 'float')
        # Getting the type of 'qk' (line 2515)
        qk_615611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2515, 17), 'qk')
        # Applying the binary operator '*' (line 2515)
        result_mul_615612 = python_operator(stypy.reporting.localization.Localization(__file__, 2515, 13), '*', float_615610, qk_615611)
        
        
        # Call to sum(...): (line 2515)
        # Processing the call arguments (line 2515)
        # Getting the type of 'qk' (line 2515)
        qk_615615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2515, 29), 'qk', False)
        # Processing the call keyword arguments (line 2515)
        int_615616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2515, 38), 'int')
        keyword_615617 = int_615616
        kwargs_615618 = {'axis': keyword_615617}
        # Getting the type of 'np' (line 2515)
        np_615613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2515, 22), 'np', False)
        # Obtaining the member 'sum' of a type (line 2515)
        sum_615614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2515, 22), np_615613, 'sum')
        # Calling sum(args, kwargs) (line 2515)
        sum_call_result_615619 = invoke(stypy.reporting.localization.Localization(__file__, 2515, 22), sum_615614, *[qk_615615], **kwargs_615618)
        
        # Applying the binary operator 'div' (line 2515)
        result_div_615620 = python_operator(stypy.reporting.localization.Localization(__file__, 2515, 20), 'div', result_mul_615612, sum_call_result_615619)
        
        # Assigning a type to the variable 'qk' (line 2515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2515, 8), 'qk', result_div_615620)
        
        # Assigning a Call to a Name (line 2516):
        
        # Assigning a Call to a Name (line 2516):
        
        # Call to rel_entr(...): (line 2516)
        # Processing the call arguments (line 2516)
        # Getting the type of 'pk' (line 2516)
        pk_615622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2516, 23), 'pk', False)
        # Getting the type of 'qk' (line 2516)
        qk_615623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2516, 27), 'qk', False)
        # Processing the call keyword arguments (line 2516)
        kwargs_615624 = {}
        # Getting the type of 'rel_entr' (line 2516)
        rel_entr_615621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2516, 14), 'rel_entr', False)
        # Calling rel_entr(args, kwargs) (line 2516)
        rel_entr_call_result_615625 = invoke(stypy.reporting.localization.Localization(__file__, 2516, 14), rel_entr_615621, *[pk_615622, qk_615623], **kwargs_615624)
        
        # Assigning a type to the variable 'vec' (line 2516)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2516, 8), 'vec', rel_entr_call_result_615625)

        if (may_be_615586 and more_types_in_union_615587):
            # SSA join for if statement (line 2509)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 2517):
    
    # Assigning a Call to a Name (line 2517):
    
    # Call to sum(...): (line 2517)
    # Processing the call arguments (line 2517)
    # Getting the type of 'vec' (line 2517)
    vec_615628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2517, 15), 'vec', False)
    # Processing the call keyword arguments (line 2517)
    int_615629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2517, 25), 'int')
    keyword_615630 = int_615629
    kwargs_615631 = {'axis': keyword_615630}
    # Getting the type of 'np' (line 2517)
    np_615626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2517, 8), 'np', False)
    # Obtaining the member 'sum' of a type (line 2517)
    sum_615627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2517, 8), np_615626, 'sum')
    # Calling sum(args, kwargs) (line 2517)
    sum_call_result_615632 = invoke(stypy.reporting.localization.Localization(__file__, 2517, 8), sum_615627, *[vec_615628], **kwargs_615631)
    
    # Assigning a type to the variable 'S' (line 2517)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2517, 4), 'S', sum_call_result_615632)
    
    # Type idiom detected: calculating its left and rigth part (line 2518)
    # Getting the type of 'base' (line 2518)
    base_615633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2518, 4), 'base')
    # Getting the type of 'None' (line 2518)
    None_615634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2518, 19), 'None')
    
    (may_be_615635, more_types_in_union_615636) = may_not_be_none(base_615633, None_615634)

    if may_be_615635:

        if more_types_in_union_615636:
            # Runtime conditional SSA (line 2518)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Getting the type of 'S' (line 2519)
        S_615637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2519, 8), 'S')
        
        # Call to log(...): (line 2519)
        # Processing the call arguments (line 2519)
        # Getting the type of 'base' (line 2519)
        base_615639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2519, 17), 'base', False)
        # Processing the call keyword arguments (line 2519)
        kwargs_615640 = {}
        # Getting the type of 'log' (line 2519)
        log_615638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2519, 13), 'log', False)
        # Calling log(args, kwargs) (line 2519)
        log_call_result_615641 = invoke(stypy.reporting.localization.Localization(__file__, 2519, 13), log_615638, *[base_615639], **kwargs_615640)
        
        # Applying the binary operator 'div=' (line 2519)
        result_div_615642 = python_operator(stypy.reporting.localization.Localization(__file__, 2519, 8), 'div=', S_615637, log_call_result_615641)
        # Assigning a type to the variable 'S' (line 2519)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2519, 8), 'S', result_div_615642)
        

        if more_types_in_union_615636:
            # SSA join for if statement (line 2518)
            module_type_store = module_type_store.join_ssa_context()


    
    # Getting the type of 'S' (line 2520)
    S_615643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2520, 11), 'S')
    # Assigning a type to the variable 'stypy_return_type' (line 2520)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2520, 4), 'stypy_return_type', S_615643)
    
    # ################# End of 'entropy(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'entropy' in the type store
    # Getting the type of 'stypy_return_type' (line 2479)
    stypy_return_type_615644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2479, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_615644)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'entropy'
    return stypy_return_type_615644

# Assigning a type to the variable 'entropy' (line 2479)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2479, 0), 'entropy', entropy)
# Declaration of the 'rv_discrete' class
# Getting the type of 'rv_generic' (line 2526)
rv_generic_615645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2526, 18), 'rv_generic')

class rv_discrete(rv_generic_615645, ):
    str_615646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2657, (-1)), 'str', '\n    A generic discrete random variable class meant for subclassing.\n\n    `rv_discrete` is a base class to construct specific distribution classes\n    and instances for discrete random variables. It can also be used\n    to construct an arbitrary distribution defined by a list of support\n    points and corresponding probabilities.\n\n    Parameters\n    ----------\n    a : float, optional\n        Lower bound of the support of the distribution, default: 0\n    b : float, optional\n        Upper bound of the support of the distribution, default: plus infinity\n    moment_tol : float, optional\n        The tolerance for the generic calculation of moments.\n    values : tuple of two array_like, optional\n        ``(xk, pk)`` where ``xk`` are integers with non-zero\n        probabilities ``pk``  with ``sum(pk) = 1``.\n    inc : integer, optional\n        Increment for the support of the distribution.\n        Default is 1. (other values have not been tested)\n    badvalue : float, optional\n        The value in a result arrays that indicates a value that for which\n        some argument restriction is violated, default is np.nan.\n    name : str, optional\n        The name of the instance. This string is used to construct the default\n        example for distributions.\n    longname : str, optional\n        This string is used as part of the first line of the docstring returned\n        when a subclass has no docstring of its own. Note: `longname` exists\n        for backwards compatibility, do not use for new subclasses.\n    shapes : str, optional\n        The shape of the distribution. For example "m, n" for a distribution\n        that takes two integers as the two shape arguments for all its methods\n        If not provided, shape parameters will be inferred from\n        the signatures of the private methods, ``_pmf`` and ``_cdf`` of\n        the instance.\n    extradoc :  str, optional\n        This string is used as the last part of the docstring returned when a\n        subclass has no docstring of its own. Note: `extradoc` exists for\n        backwards compatibility, do not use for new subclasses.\n    seed : None or int or ``numpy.random.RandomState`` instance, optional\n        This parameter defines the RandomState object to use for drawing\n        random variates.\n        If None, the global np.random state is used.\n        If integer, it is used to seed the local RandomState instance.\n        Default is None.\n\n    Methods\n    -------\n    rvs\n    pmf\n    logpmf\n    cdf\n    logcdf\n    sf\n    logsf\n    ppf\n    isf\n    moment\n    stats\n    entropy\n    expect\n    median\n    mean\n    std\n    var\n    interval\n    __call__\n\n\n    Notes\n    -----\n\n    This class is similar to `rv_continuous`. Whether a shape parameter is\n    valid is decided by an ``_argcheck`` method (which defaults to checking\n    that its arguments are strictly positive.)\n    The main differences are:\n\n    - the support of the distribution is a set of integers\n    - instead of the probability density function, ``pdf`` (and the\n      corresponding private ``_pdf``), this class defines the\n      *probability mass function*, `pmf` (and the corresponding\n      private ``_pmf``.)\n    - scale parameter is not defined.\n\n    To create a new discrete distribution, we would do the following:\n\n    >>> from scipy.stats import rv_discrete\n    >>> class poisson_gen(rv_discrete):\n    ...     "Poisson distribution"\n    ...     def _pmf(self, k, mu):\n    ...         return exp(-mu) * mu**k / factorial(k)\n\n    and create an instance::\n\n    >>> poisson = poisson_gen(name="poisson")\n\n    Note that above we defined the Poisson distribution in the standard form.\n    Shifting the distribution can be done by providing the ``loc`` parameter\n    to the methods of the instance. For example, ``poisson.pmf(x, mu, loc)``\n    delegates the work to ``poisson._pmf(x-loc, mu)``.\n\n    **Discrete distributions from a list of probabilities**\n\n    Alternatively, you can construct an arbitrary discrete rv defined\n    on a finite set of values ``xk`` with ``Prob{X=xk} = pk`` by using the\n    ``values`` keyword argument to the `rv_discrete` constructor.\n\n    Examples\n    --------\n\n    Custom made discrete distribution:\n\n    >>> from scipy import stats\n    >>> xk = np.arange(7)\n    >>> pk = (0.1, 0.2, 0.3, 0.1, 0.1, 0.0, 0.2)\n    >>> custm = stats.rv_discrete(name=\'custm\', values=(xk, pk))\n    >>>\n    >>> import matplotlib.pyplot as plt\n    >>> fig, ax = plt.subplots(1, 1)\n    >>> ax.plot(xk, custm.pmf(xk), \'ro\', ms=12, mec=\'r\')\n    >>> ax.vlines(xk, 0, custm.pmf(xk), colors=\'r\', lw=4)\n    >>> plt.show()\n\n    Random number generation:\n\n    >>> R = custm.rvs(size=100)\n\n    ')

    @norecursion
    def __new__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_615647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2658, 23), 'int')
        # Getting the type of 'inf' (line 2658)
        inf_615648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2658, 28), 'inf')
        # Getting the type of 'None' (line 2658)
        None_615649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2658, 38), 'None')
        # Getting the type of 'None' (line 2658)
        None_615650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2658, 53), 'None')
        float_615651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2659, 28), 'float')
        # Getting the type of 'None' (line 2659)
        None_615652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2659, 41), 'None')
        int_615653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2659, 51), 'int')
        # Getting the type of 'None' (line 2659)
        None_615654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2659, 63), 'None')
        # Getting the type of 'None' (line 2660)
        None_615655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2660, 24), 'None')
        # Getting the type of 'None' (line 2660)
        None_615656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2660, 39), 'None')
        # Getting the type of 'None' (line 2660)
        None_615657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2660, 50), 'None')
        defaults = [int_615647, inf_615648, None_615649, None_615650, float_615651, None_615652, int_615653, None_615654, None_615655, None_615656, None_615657]
        # Create a new context for function '__new__'
        module_type_store = module_type_store.open_function_context('__new__', 2658, 4, False)
        # Assigning a type to the variable 'self' (line 2659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2659, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.__new__.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.__new__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.__new__.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.__new__.__dict__.__setitem__('stypy_function_name', 'rv_discrete.__new__')
        rv_discrete.__new__.__dict__.__setitem__('stypy_param_names_list', ['a', 'b', 'name', 'badvalue', 'moment_tol', 'values', 'inc', 'longname', 'shapes', 'extradoc', 'seed'])
        rv_discrete.__new__.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_discrete.__new__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete.__new__.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.__new__.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.__new__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.__new__.__dict__.__setitem__('stypy_declared_arg_number', 12)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.__new__', ['a', 'b', 'name', 'badvalue', 'moment_tol', 'values', 'inc', 'longname', 'shapes', 'extradoc', 'seed'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__new__', localization, ['a', 'b', 'name', 'badvalue', 'moment_tol', 'values', 'inc', 'longname', 'shapes', 'extradoc', 'seed'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__new__(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 2662)
        # Getting the type of 'values' (line 2662)
        values_615658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2662, 8), 'values')
        # Getting the type of 'None' (line 2662)
        None_615659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2662, 25), 'None')
        
        (may_be_615660, more_types_in_union_615661) = may_not_be_none(values_615658, None_615659)

        if may_be_615660:

            if more_types_in_union_615661:
                # Runtime conditional SSA (line 2662)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to __new__(...): (line 2664)
            # Processing the call arguments (line 2664)
            # Getting the type of 'rv_sample' (line 2664)
            rv_sample_615668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2664, 51), 'rv_sample', False)
            # Processing the call keyword arguments (line 2664)
            kwargs_615669 = {}
            
            # Call to super(...): (line 2664)
            # Processing the call arguments (line 2664)
            # Getting the type of 'rv_discrete' (line 2664)
            rv_discrete_615663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2664, 25), 'rv_discrete', False)
            # Getting the type of 'cls' (line 2664)
            cls_615664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2664, 38), 'cls', False)
            # Processing the call keyword arguments (line 2664)
            kwargs_615665 = {}
            # Getting the type of 'super' (line 2664)
            super_615662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2664, 19), 'super', False)
            # Calling super(args, kwargs) (line 2664)
            super_call_result_615666 = invoke(stypy.reporting.localization.Localization(__file__, 2664, 19), super_615662, *[rv_discrete_615663, cls_615664], **kwargs_615665)
            
            # Obtaining the member '__new__' of a type (line 2664)
            new___615667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2664, 19), super_call_result_615666, '__new__')
            # Calling __new__(args, kwargs) (line 2664)
            new___call_result_615670 = invoke(stypy.reporting.localization.Localization(__file__, 2664, 19), new___615667, *[rv_sample_615668], **kwargs_615669)
            
            # Assigning a type to the variable 'stypy_return_type' (line 2664)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2664, 12), 'stypy_return_type', new___call_result_615670)

            if more_types_in_union_615661:
                # Runtime conditional SSA for else branch (line 2662)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_615660) or more_types_in_union_615661):
            
            # Call to __new__(...): (line 2667)
            # Processing the call arguments (line 2667)
            # Getting the type of 'cls' (line 2667)
            cls_615677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2667, 51), 'cls', False)
            # Processing the call keyword arguments (line 2667)
            kwargs_615678 = {}
            
            # Call to super(...): (line 2667)
            # Processing the call arguments (line 2667)
            # Getting the type of 'rv_discrete' (line 2667)
            rv_discrete_615672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2667, 25), 'rv_discrete', False)
            # Getting the type of 'cls' (line 2667)
            cls_615673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2667, 38), 'cls', False)
            # Processing the call keyword arguments (line 2667)
            kwargs_615674 = {}
            # Getting the type of 'super' (line 2667)
            super_615671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2667, 19), 'super', False)
            # Calling super(args, kwargs) (line 2667)
            super_call_result_615675 = invoke(stypy.reporting.localization.Localization(__file__, 2667, 19), super_615671, *[rv_discrete_615672, cls_615673], **kwargs_615674)
            
            # Obtaining the member '__new__' of a type (line 2667)
            new___615676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2667, 19), super_call_result_615675, '__new__')
            # Calling __new__(args, kwargs) (line 2667)
            new___call_result_615679 = invoke(stypy.reporting.localization.Localization(__file__, 2667, 19), new___615676, *[cls_615677], **kwargs_615678)
            
            # Assigning a type to the variable 'stypy_return_type' (line 2667)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2667, 12), 'stypy_return_type', new___call_result_615679)

            if (may_be_615660 and more_types_in_union_615661):
                # SSA join for if statement (line 2662)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of '__new__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__new__' in the type store
        # Getting the type of 'stypy_return_type' (line 2658)
        stypy_return_type_615680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2658, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615680)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__new__'
        return stypy_return_type_615680


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_615681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2669, 25), 'int')
        # Getting the type of 'inf' (line 2669)
        inf_615682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2669, 30), 'inf')
        # Getting the type of 'None' (line 2669)
        None_615683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2669, 40), 'None')
        # Getting the type of 'None' (line 2669)
        None_615684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2669, 55), 'None')
        float_615685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2670, 28), 'float')
        # Getting the type of 'None' (line 2670)
        None_615686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2670, 41), 'None')
        int_615687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2670, 51), 'int')
        # Getting the type of 'None' (line 2670)
        None_615688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2670, 63), 'None')
        # Getting the type of 'None' (line 2671)
        None_615689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2671, 24), 'None')
        # Getting the type of 'None' (line 2671)
        None_615690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2671, 39), 'None')
        # Getting the type of 'None' (line 2671)
        None_615691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2671, 50), 'None')
        defaults = [int_615681, inf_615682, None_615683, None_615684, float_615685, None_615686, int_615687, None_615688, None_615689, None_615690, None_615691]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 2669, 4, False)
        # Assigning a type to the variable 'self' (line 2670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2670, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.__init__', ['a', 'b', 'name', 'badvalue', 'moment_tol', 'values', 'inc', 'longname', 'shapes', 'extradoc', 'seed'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['a', 'b', 'name', 'badvalue', 'moment_tol', 'values', 'inc', 'longname', 'shapes', 'extradoc', 'seed'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 2673)
        # Processing the call arguments (line 2673)
        # Getting the type of 'seed' (line 2673)
        seed_615698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2673, 42), 'seed', False)
        # Processing the call keyword arguments (line 2673)
        kwargs_615699 = {}
        
        # Call to super(...): (line 2673)
        # Processing the call arguments (line 2673)
        # Getting the type of 'rv_discrete' (line 2673)
        rv_discrete_615693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2673, 14), 'rv_discrete', False)
        # Getting the type of 'self' (line 2673)
        self_615694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2673, 27), 'self', False)
        # Processing the call keyword arguments (line 2673)
        kwargs_615695 = {}
        # Getting the type of 'super' (line 2673)
        super_615692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2673, 8), 'super', False)
        # Calling super(args, kwargs) (line 2673)
        super_call_result_615696 = invoke(stypy.reporting.localization.Localization(__file__, 2673, 8), super_615692, *[rv_discrete_615693, self_615694], **kwargs_615695)
        
        # Obtaining the member '__init__' of a type (line 2673)
        init___615697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2673, 8), super_call_result_615696, '__init__')
        # Calling __init__(args, kwargs) (line 2673)
        init___call_result_615700 = invoke(stypy.reporting.localization.Localization(__file__, 2673, 8), init___615697, *[seed_615698], **kwargs_615699)
        
        
        # Assigning a Call to a Attribute (line 2676):
        
        # Assigning a Call to a Attribute (line 2676):
        
        # Call to dict(...): (line 2676)
        # Processing the call keyword arguments (line 2676)
        # Getting the type of 'a' (line 2677)
        a_615702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2677, 14), 'a', False)
        keyword_615703 = a_615702
        # Getting the type of 'b' (line 2677)
        b_615704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2677, 19), 'b', False)
        keyword_615705 = b_615704
        # Getting the type of 'name' (line 2677)
        name_615706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2677, 27), 'name', False)
        keyword_615707 = name_615706
        # Getting the type of 'badvalue' (line 2677)
        badvalue_615708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2677, 42), 'badvalue', False)
        keyword_615709 = badvalue_615708
        # Getting the type of 'moment_tol' (line 2678)
        moment_tol_615710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2678, 23), 'moment_tol', False)
        keyword_615711 = moment_tol_615710
        # Getting the type of 'values' (line 2678)
        values_615712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2678, 42), 'values', False)
        keyword_615713 = values_615712
        # Getting the type of 'inc' (line 2678)
        inc_615714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2678, 54), 'inc', False)
        keyword_615715 = inc_615714
        # Getting the type of 'longname' (line 2679)
        longname_615716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2679, 21), 'longname', False)
        keyword_615717 = longname_615716
        # Getting the type of 'shapes' (line 2679)
        shapes_615718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2679, 38), 'shapes', False)
        keyword_615719 = shapes_615718
        # Getting the type of 'extradoc' (line 2679)
        extradoc_615720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2679, 55), 'extradoc', False)
        keyword_615721 = extradoc_615720
        # Getting the type of 'seed' (line 2679)
        seed_615722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2679, 70), 'seed', False)
        keyword_615723 = seed_615722
        kwargs_615724 = {'a': keyword_615703, 'extradoc': keyword_615721, 'b': keyword_615705, 'name': keyword_615707, 'moment_tol': keyword_615711, 'shapes': keyword_615719, 'seed': keyword_615723, 'values': keyword_615713, 'longname': keyword_615717, 'badvalue': keyword_615709, 'inc': keyword_615715}
        # Getting the type of 'dict' (line 2676)
        dict_615701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2676, 27), 'dict', False)
        # Calling dict(args, kwargs) (line 2676)
        dict_call_result_615725 = invoke(stypy.reporting.localization.Localization(__file__, 2676, 27), dict_615701, *[], **kwargs_615724)
        
        # Getting the type of 'self' (line 2676)
        self_615726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2676, 8), 'self')
        # Setting the type of the member '_ctor_param' of a type (line 2676)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2676, 8), self_615726, '_ctor_param', dict_call_result_615725)
        
        # Type idiom detected: calculating its left and rigth part (line 2681)
        # Getting the type of 'badvalue' (line 2681)
        badvalue_615727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2681, 11), 'badvalue')
        # Getting the type of 'None' (line 2681)
        None_615728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2681, 23), 'None')
        
        (may_be_615729, more_types_in_union_615730) = may_be_none(badvalue_615727, None_615728)

        if may_be_615729:

            if more_types_in_union_615730:
                # Runtime conditional SSA (line 2681)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Name (line 2682):
            
            # Assigning a Name to a Name (line 2682):
            # Getting the type of 'nan' (line 2682)
            nan_615731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2682, 23), 'nan')
            # Assigning a type to the variable 'badvalue' (line 2682)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2682, 12), 'badvalue', nan_615731)

            if more_types_in_union_615730:
                # SSA join for if statement (line 2681)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 2683):
        
        # Assigning a Name to a Attribute (line 2683):
        # Getting the type of 'badvalue' (line 2683)
        badvalue_615732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2683, 24), 'badvalue')
        # Getting the type of 'self' (line 2683)
        self_615733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2683, 8), 'self')
        # Setting the type of the member 'badvalue' of a type (line 2683)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2683, 8), self_615733, 'badvalue', badvalue_615732)
        
        # Assigning a Name to a Attribute (line 2684):
        
        # Assigning a Name to a Attribute (line 2684):
        # Getting the type of 'a' (line 2684)
        a_615734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2684, 17), 'a')
        # Getting the type of 'self' (line 2684)
        self_615735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2684, 8), 'self')
        # Setting the type of the member 'a' of a type (line 2684)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2684, 8), self_615735, 'a', a_615734)
        
        # Assigning a Name to a Attribute (line 2685):
        
        # Assigning a Name to a Attribute (line 2685):
        # Getting the type of 'b' (line 2685)
        b_615736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2685, 17), 'b')
        # Getting the type of 'self' (line 2685)
        self_615737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2685, 8), 'self')
        # Setting the type of the member 'b' of a type (line 2685)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2685, 8), self_615737, 'b', b_615736)
        
        # Assigning a Name to a Attribute (line 2686):
        
        # Assigning a Name to a Attribute (line 2686):
        # Getting the type of 'moment_tol' (line 2686)
        moment_tol_615738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2686, 26), 'moment_tol')
        # Getting the type of 'self' (line 2686)
        self_615739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2686, 8), 'self')
        # Setting the type of the member 'moment_tol' of a type (line 2686)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2686, 8), self_615739, 'moment_tol', moment_tol_615738)
        
        # Assigning a Name to a Attribute (line 2687):
        
        # Assigning a Name to a Attribute (line 2687):
        # Getting the type of 'inc' (line 2687)
        inc_615740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2687, 19), 'inc')
        # Getting the type of 'self' (line 2687)
        self_615741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2687, 8), 'self')
        # Setting the type of the member 'inc' of a type (line 2687)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2687, 8), self_615741, 'inc', inc_615740)
        
        # Assigning a Call to a Attribute (line 2688):
        
        # Assigning a Call to a Attribute (line 2688):
        
        # Call to vectorize(...): (line 2688)
        # Processing the call arguments (line 2688)
        # Getting the type of 'self' (line 2688)
        self_615743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2688, 33), 'self', False)
        # Obtaining the member '_cdf_single' of a type (line 2688)
        _cdf_single_615744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2688, 33), self_615743, '_cdf_single')
        # Processing the call keyword arguments (line 2688)
        str_615745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2688, 58), 'str', 'd')
        keyword_615746 = str_615745
        kwargs_615747 = {'otypes': keyword_615746}
        # Getting the type of 'vectorize' (line 2688)
        vectorize_615742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2688, 23), 'vectorize', False)
        # Calling vectorize(args, kwargs) (line 2688)
        vectorize_call_result_615748 = invoke(stypy.reporting.localization.Localization(__file__, 2688, 23), vectorize_615742, *[_cdf_single_615744], **kwargs_615747)
        
        # Getting the type of 'self' (line 2688)
        self_615749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2688, 8), 'self')
        # Setting the type of the member '_cdfvec' of a type (line 2688)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2688, 8), self_615749, '_cdfvec', vectorize_call_result_615748)
        
        # Assigning a Call to a Attribute (line 2689):
        
        # Assigning a Call to a Attribute (line 2689):
        
        # Call to vectorize(...): (line 2689)
        # Processing the call arguments (line 2689)
        # Getting the type of 'self' (line 2689)
        self_615751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2689, 36), 'self', False)
        # Obtaining the member '_entropy' of a type (line 2689)
        _entropy_615752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2689, 36), self_615751, '_entropy')
        # Processing the call keyword arguments (line 2689)
        kwargs_615753 = {}
        # Getting the type of 'vectorize' (line 2689)
        vectorize_615750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2689, 26), 'vectorize', False)
        # Calling vectorize(args, kwargs) (line 2689)
        vectorize_call_result_615754 = invoke(stypy.reporting.localization.Localization(__file__, 2689, 26), vectorize_615750, *[_entropy_615752], **kwargs_615753)
        
        # Getting the type of 'self' (line 2689)
        self_615755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2689, 8), 'self')
        # Setting the type of the member 'vecentropy' of a type (line 2689)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2689, 8), self_615755, 'vecentropy', vectorize_call_result_615754)
        
        # Assigning a Name to a Attribute (line 2690):
        
        # Assigning a Name to a Attribute (line 2690):
        # Getting the type of 'shapes' (line 2690)
        shapes_615756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2690, 22), 'shapes')
        # Getting the type of 'self' (line 2690)
        self_615757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2690, 8), 'self')
        # Setting the type of the member 'shapes' of a type (line 2690)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2690, 8), self_615757, 'shapes', shapes_615756)
        
        # Type idiom detected: calculating its left and rigth part (line 2692)
        # Getting the type of 'values' (line 2692)
        values_615758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2692, 8), 'values')
        # Getting the type of 'None' (line 2692)
        None_615759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2692, 25), 'None')
        
        (may_be_615760, more_types_in_union_615761) = may_not_be_none(values_615758, None_615759)

        if may_be_615760:

            if more_types_in_union_615761:
                # Runtime conditional SSA (line 2692)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 2693)
            # Processing the call arguments (line 2693)
            str_615763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2693, 29), 'str', 'rv_discrete.__init__(..., values != None, ...)')
            # Processing the call keyword arguments (line 2693)
            kwargs_615764 = {}
            # Getting the type of 'ValueError' (line 2693)
            ValueError_615762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2693, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 2693)
            ValueError_call_result_615765 = invoke(stypy.reporting.localization.Localization(__file__, 2693, 18), ValueError_615762, *[str_615763], **kwargs_615764)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 2693, 12), ValueError_call_result_615765, 'raise parameter', BaseException)

            if more_types_in_union_615761:
                # SSA join for if statement (line 2692)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to _construct_argparser(...): (line 2695)
        # Processing the call keyword arguments (line 2695)
        
        # Obtaining an instance of the builtin type 'list' (line 2695)
        list_615768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2695, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 2695)
        # Adding element type (line 2695)
        # Getting the type of 'self' (line 2695)
        self_615769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2695, 52), 'self', False)
        # Obtaining the member '_pmf' of a type (line 2695)
        _pmf_615770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2695, 52), self_615769, '_pmf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2695, 51), list_615768, _pmf_615770)
        # Adding element type (line 2695)
        # Getting the type of 'self' (line 2695)
        self_615771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2695, 63), 'self', False)
        # Obtaining the member '_cdf' of a type (line 2695)
        _cdf_615772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2695, 63), self_615771, '_cdf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2695, 51), list_615768, _cdf_615772)
        
        keyword_615773 = list_615768
        str_615774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2696, 46), 'str', 'loc=0')
        keyword_615775 = str_615774
        str_615776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2698, 47), 'str', 'loc, 1')
        keyword_615777 = str_615776
        kwargs_615778 = {'locscale_in': keyword_615775, 'meths_to_inspect': keyword_615773, 'locscale_out': keyword_615777}
        # Getting the type of 'self' (line 2695)
        self_615766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2695, 8), 'self', False)
        # Obtaining the member '_construct_argparser' of a type (line 2695)
        _construct_argparser_615767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2695, 8), self_615766, '_construct_argparser')
        # Calling _construct_argparser(args, kwargs) (line 2695)
        _construct_argparser_call_result_615779 = invoke(stypy.reporting.localization.Localization(__file__, 2695, 8), _construct_argparser_615767, *[], **kwargs_615778)
        
        
        # Assigning a Call to a Name (line 2702):
        
        # Assigning a Call to a Name (line 2702):
        
        # Call to vectorize(...): (line 2702)
        # Processing the call arguments (line 2702)
        # Getting the type of '_drv2_moment' (line 2702)
        _drv2_moment_615781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2702, 40), '_drv2_moment', False)
        # Processing the call keyword arguments (line 2702)
        str_615782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2702, 61), 'str', 'd')
        keyword_615783 = str_615782
        kwargs_615784 = {'otypes': keyword_615783}
        # Getting the type of 'vectorize' (line 2702)
        vectorize_615780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2702, 30), 'vectorize', False)
        # Calling vectorize(args, kwargs) (line 2702)
        vectorize_call_result_615785 = invoke(stypy.reporting.localization.Localization(__file__, 2702, 30), vectorize_615780, *[_drv2_moment_615781], **kwargs_615784)
        
        # Assigning a type to the variable '_vec_generic_moment' (line 2702)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2702, 8), '_vec_generic_moment', vectorize_call_result_615785)
        
        # Assigning a BinOp to a Attribute (line 2703):
        
        # Assigning a BinOp to a Attribute (line 2703):
        # Getting the type of 'self' (line 2703)
        self_615786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2703, 34), 'self')
        # Obtaining the member 'numargs' of a type (line 2703)
        numargs_615787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2703, 34), self_615786, 'numargs')
        int_615788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2703, 49), 'int')
        # Applying the binary operator '+' (line 2703)
        result_add_615789 = python_operator(stypy.reporting.localization.Localization(__file__, 2703, 34), '+', numargs_615787, int_615788)
        
        # Getting the type of '_vec_generic_moment' (line 2703)
        _vec_generic_moment_615790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2703, 8), '_vec_generic_moment')
        # Setting the type of the member 'nin' of a type (line 2703)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2703, 8), _vec_generic_moment_615790, 'nin', result_add_615789)
        
        # Assigning a Call to a Attribute (line 2704):
        
        # Assigning a Call to a Attribute (line 2704):
        
        # Call to instancemethod(...): (line 2704)
        # Processing the call arguments (line 2704)
        # Getting the type of '_vec_generic_moment' (line 2704)
        _vec_generic_moment_615792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2704, 45), '_vec_generic_moment', False)
        # Getting the type of 'self' (line 2705)
        self_615793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2705, 45), 'self', False)
        # Getting the type of 'rv_discrete' (line 2705)
        rv_discrete_615794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2705, 51), 'rv_discrete', False)
        # Processing the call keyword arguments (line 2704)
        kwargs_615795 = {}
        # Getting the type of 'instancemethod' (line 2704)
        instancemethod_615791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2704, 30), 'instancemethod', False)
        # Calling instancemethod(args, kwargs) (line 2704)
        instancemethod_call_result_615796 = invoke(stypy.reporting.localization.Localization(__file__, 2704, 30), instancemethod_615791, *[_vec_generic_moment_615792, self_615793, rv_discrete_615794], **kwargs_615795)
        
        # Getting the type of 'self' (line 2704)
        self_615797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2704, 8), 'self')
        # Setting the type of the member 'generic_moment' of a type (line 2704)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2704, 8), self_615797, 'generic_moment', instancemethod_call_result_615796)
        
        # Assigning a Call to a Name (line 2708):
        
        # Assigning a Call to a Name (line 2708):
        
        # Call to vectorize(...): (line 2708)
        # Processing the call arguments (line 2708)
        # Getting the type of '_drv2_ppfsingle' (line 2708)
        _drv2_ppfsingle_615799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2708, 26), '_drv2_ppfsingle', False)
        # Processing the call keyword arguments (line 2708)
        str_615800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2708, 50), 'str', 'd')
        keyword_615801 = str_615800
        kwargs_615802 = {'otypes': keyword_615801}
        # Getting the type of 'vectorize' (line 2708)
        vectorize_615798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2708, 16), 'vectorize', False)
        # Calling vectorize(args, kwargs) (line 2708)
        vectorize_call_result_615803 = invoke(stypy.reporting.localization.Localization(__file__, 2708, 16), vectorize_615798, *[_drv2_ppfsingle_615799], **kwargs_615802)
        
        # Assigning a type to the variable '_vppf' (line 2708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2708, 8), '_vppf', vectorize_call_result_615803)
        
        # Assigning a BinOp to a Attribute (line 2709):
        
        # Assigning a BinOp to a Attribute (line 2709):
        # Getting the type of 'self' (line 2709)
        self_615804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 20), 'self')
        # Obtaining the member 'numargs' of a type (line 2709)
        numargs_615805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2709, 20), self_615804, 'numargs')
        int_615806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2709, 35), 'int')
        # Applying the binary operator '+' (line 2709)
        result_add_615807 = python_operator(stypy.reporting.localization.Localization(__file__, 2709, 20), '+', numargs_615805, int_615806)
        
        # Getting the type of '_vppf' (line 2709)
        _vppf_615808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2709, 8), '_vppf')
        # Setting the type of the member 'nin' of a type (line 2709)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2709, 8), _vppf_615808, 'nin', result_add_615807)
        
        # Assigning a Call to a Attribute (line 2710):
        
        # Assigning a Call to a Attribute (line 2710):
        
        # Call to instancemethod(...): (line 2710)
        # Processing the call arguments (line 2710)
        # Getting the type of '_vppf' (line 2710)
        _vppf_615810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2710, 38), '_vppf', False)
        # Getting the type of 'self' (line 2711)
        self_615811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2711, 38), 'self', False)
        # Getting the type of 'rv_discrete' (line 2711)
        rv_discrete_615812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2711, 44), 'rv_discrete', False)
        # Processing the call keyword arguments (line 2710)
        kwargs_615813 = {}
        # Getting the type of 'instancemethod' (line 2710)
        instancemethod_615809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2710, 23), 'instancemethod', False)
        # Calling instancemethod(args, kwargs) (line 2710)
        instancemethod_call_result_615814 = invoke(stypy.reporting.localization.Localization(__file__, 2710, 23), instancemethod_615809, *[_vppf_615810, self_615811, rv_discrete_615812], **kwargs_615813)
        
        # Getting the type of 'self' (line 2710)
        self_615815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2710, 8), 'self')
        # Setting the type of the member '_ppfvec' of a type (line 2710)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2710, 8), self_615815, '_ppfvec', instancemethod_call_result_615814)
        
        # Assigning a BinOp to a Attribute (line 2714):
        
        # Assigning a BinOp to a Attribute (line 2714):
        # Getting the type of 'self' (line 2714)
        self_615816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 27), 'self')
        # Obtaining the member 'numargs' of a type (line 2714)
        numargs_615817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2714, 27), self_615816, 'numargs')
        int_615818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2714, 42), 'int')
        # Applying the binary operator '+' (line 2714)
        result_add_615819 = python_operator(stypy.reporting.localization.Localization(__file__, 2714, 27), '+', numargs_615817, int_615818)
        
        # Getting the type of 'self' (line 2714)
        self_615820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2714, 8), 'self')
        # Obtaining the member '_cdfvec' of a type (line 2714)
        _cdfvec_615821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2714, 8), self_615820, '_cdfvec')
        # Setting the type of the member 'nin' of a type (line 2714)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2714, 8), _cdfvec_615821, 'nin', result_add_615819)
        
        # Call to _construct_docstrings(...): (line 2716)
        # Processing the call arguments (line 2716)
        # Getting the type of 'name' (line 2716)
        name_615824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2716, 35), 'name', False)
        # Getting the type of 'longname' (line 2716)
        longname_615825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2716, 41), 'longname', False)
        # Getting the type of 'extradoc' (line 2716)
        extradoc_615826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2716, 51), 'extradoc', False)
        # Processing the call keyword arguments (line 2716)
        kwargs_615827 = {}
        # Getting the type of 'self' (line 2716)
        self_615822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2716, 8), 'self', False)
        # Obtaining the member '_construct_docstrings' of a type (line 2716)
        _construct_docstrings_615823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2716, 8), self_615822, '_construct_docstrings')
        # Calling _construct_docstrings(args, kwargs) (line 2716)
        _construct_docstrings_call_result_615828 = invoke(stypy.reporting.localization.Localization(__file__, 2716, 8), _construct_docstrings_615823, *[name_615824, longname_615825, extradoc_615826], **kwargs_615827)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _construct_docstrings(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_construct_docstrings'
        module_type_store = module_type_store.open_function_context('_construct_docstrings', 2718, 4, False)
        # Assigning a type to the variable 'self' (line 2719)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2719, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_function_name', 'rv_discrete._construct_docstrings')
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_param_names_list', ['name', 'longname', 'extradoc'])
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete._construct_docstrings.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete._construct_docstrings', ['name', 'longname', 'extradoc'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_construct_docstrings', localization, ['name', 'longname', 'extradoc'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_construct_docstrings(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 2719)
        # Getting the type of 'name' (line 2719)
        name_615829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2719, 11), 'name')
        # Getting the type of 'None' (line 2719)
        None_615830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2719, 19), 'None')
        
        (may_be_615831, more_types_in_union_615832) = may_be_none(name_615829, None_615830)

        if may_be_615831:

            if more_types_in_union_615832:
                # Runtime conditional SSA (line 2719)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Str to a Name (line 2720):
            
            # Assigning a Str to a Name (line 2720):
            str_615833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2720, 19), 'str', 'Distribution')
            # Assigning a type to the variable 'name' (line 2720)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2720, 12), 'name', str_615833)

            if more_types_in_union_615832:
                # SSA join for if statement (line 2719)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 2721):
        
        # Assigning a Name to a Attribute (line 2721):
        # Getting the type of 'name' (line 2721)
        name_615834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2721, 20), 'name')
        # Getting the type of 'self' (line 2721)
        self_615835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2721, 8), 'self')
        # Setting the type of the member 'name' of a type (line 2721)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2721, 8), self_615835, 'name', name_615834)
        
        # Assigning a Name to a Attribute (line 2722):
        
        # Assigning a Name to a Attribute (line 2722):
        # Getting the type of 'extradoc' (line 2722)
        extradoc_615836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2722, 24), 'extradoc')
        # Getting the type of 'self' (line 2722)
        self_615837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2722, 8), 'self')
        # Setting the type of the member 'extradoc' of a type (line 2722)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2722, 8), self_615837, 'extradoc', extradoc_615836)
        
        # Type idiom detected: calculating its left and rigth part (line 2725)
        # Getting the type of 'longname' (line 2725)
        longname_615838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2725, 11), 'longname')
        # Getting the type of 'None' (line 2725)
        None_615839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2725, 23), 'None')
        
        (may_be_615840, more_types_in_union_615841) = may_be_none(longname_615838, None_615839)

        if may_be_615840:

            if more_types_in_union_615841:
                # Runtime conditional SSA (line 2725)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            
            
            # Obtaining the type of the subscript
            int_615842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2726, 20), 'int')
            # Getting the type of 'name' (line 2726)
            name_615843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2726, 15), 'name')
            # Obtaining the member '__getitem__' of a type (line 2726)
            getitem___615844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2726, 15), name_615843, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 2726)
            subscript_call_result_615845 = invoke(stypy.reporting.localization.Localization(__file__, 2726, 15), getitem___615844, int_615842)
            
            
            # Obtaining an instance of the builtin type 'list' (line 2726)
            list_615846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2726, 26), 'list')
            # Adding type elements to the builtin type 'list' instance (line 2726)
            # Adding element type (line 2726)
            str_615847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2726, 27), 'str', 'aeiouAEIOU')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2726, 26), list_615846, str_615847)
            
            # Applying the binary operator 'in' (line 2726)
            result_contains_615848 = python_operator(stypy.reporting.localization.Localization(__file__, 2726, 15), 'in', subscript_call_result_615845, list_615846)
            
            # Testing the type of an if condition (line 2726)
            if_condition_615849 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2726, 12), result_contains_615848)
            # Assigning a type to the variable 'if_condition_615849' (line 2726)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2726, 12), 'if_condition_615849', if_condition_615849)
            # SSA begins for if statement (line 2726)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Str to a Name (line 2727):
            
            # Assigning a Str to a Name (line 2727):
            str_615850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2727, 23), 'str', 'An ')
            # Assigning a type to the variable 'hstr' (line 2727)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2727, 16), 'hstr', str_615850)
            # SSA branch for the else part of an if statement (line 2726)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Str to a Name (line 2729):
            
            # Assigning a Str to a Name (line 2729):
            str_615851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2729, 23), 'str', 'A ')
            # Assigning a type to the variable 'hstr' (line 2729)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2729, 16), 'hstr', str_615851)
            # SSA join for if statement (line 2726)
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a BinOp to a Name (line 2730):
            
            # Assigning a BinOp to a Name (line 2730):
            # Getting the type of 'hstr' (line 2730)
            hstr_615852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2730, 23), 'hstr')
            # Getting the type of 'name' (line 2730)
            name_615853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2730, 30), 'name')
            # Applying the binary operator '+' (line 2730)
            result_add_615854 = python_operator(stypy.reporting.localization.Localization(__file__, 2730, 23), '+', hstr_615852, name_615853)
            
            # Assigning a type to the variable 'longname' (line 2730)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2730, 12), 'longname', result_add_615854)

            if more_types_in_union_615841:
                # SSA join for if statement (line 2725)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Getting the type of 'sys' (line 2732)
        sys_615855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2732, 11), 'sys')
        # Obtaining the member 'flags' of a type (line 2732)
        flags_615856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2732, 11), sys_615855, 'flags')
        # Obtaining the member 'optimize' of a type (line 2732)
        optimize_615857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2732, 11), flags_615856, 'optimize')
        int_615858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2732, 32), 'int')
        # Applying the binary operator '<' (line 2732)
        result_lt_615859 = python_operator(stypy.reporting.localization.Localization(__file__, 2732, 11), '<', optimize_615857, int_615858)
        
        # Testing the type of an if condition (line 2732)
        if_condition_615860 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2732, 8), result_lt_615859)
        # Assigning a type to the variable 'if_condition_615860' (line 2732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2732, 8), 'if_condition_615860', if_condition_615860)
        # SSA begins for if statement (line 2732)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Type idiom detected: calculating its left and rigth part (line 2734)
        # Getting the type of 'self' (line 2734)
        self_615861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2734, 15), 'self')
        # Obtaining the member '__doc__' of a type (line 2734)
        doc___615862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2734, 15), self_615861, '__doc__')
        # Getting the type of 'None' (line 2734)
        None_615863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2734, 31), 'None')
        
        (may_be_615864, more_types_in_union_615865) = may_be_none(doc___615862, None_615863)

        if may_be_615864:

            if more_types_in_union_615865:
                # Runtime conditional SSA (line 2734)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to _construct_default_doc(...): (line 2735)
            # Processing the call keyword arguments (line 2735)
            # Getting the type of 'longname' (line 2735)
            longname_615868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2735, 53), 'longname', False)
            keyword_615869 = longname_615868
            # Getting the type of 'extradoc' (line 2736)
            extradoc_615870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2736, 53), 'extradoc', False)
            keyword_615871 = extradoc_615870
            # Getting the type of 'docdict_discrete' (line 2737)
            docdict_discrete_615872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2737, 52), 'docdict_discrete', False)
            keyword_615873 = docdict_discrete_615872
            str_615874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2738, 53), 'str', 'discrete')
            keyword_615875 = str_615874
            kwargs_615876 = {'extradoc': keyword_615871, 'docdict': keyword_615873, 'discrete': keyword_615875, 'longname': keyword_615869}
            # Getting the type of 'self' (line 2735)
            self_615866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2735, 16), 'self', False)
            # Obtaining the member '_construct_default_doc' of a type (line 2735)
            _construct_default_doc_615867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2735, 16), self_615866, '_construct_default_doc')
            # Calling _construct_default_doc(args, kwargs) (line 2735)
            _construct_default_doc_call_result_615877 = invoke(stypy.reporting.localization.Localization(__file__, 2735, 16), _construct_default_doc_615867, *[], **kwargs_615876)
            

            if more_types_in_union_615865:
                # Runtime conditional SSA for else branch (line 2734)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_615864) or more_types_in_union_615865):
            
            # Assigning a Call to a Name (line 2740):
            
            # Assigning a Call to a Name (line 2740):
            
            # Call to dict(...): (line 2740)
            # Processing the call arguments (line 2740)
            # Getting the type of 'distdiscrete' (line 2740)
            distdiscrete_615879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2740, 27), 'distdiscrete', False)
            # Processing the call keyword arguments (line 2740)
            kwargs_615880 = {}
            # Getting the type of 'dict' (line 2740)
            dict_615878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2740, 22), 'dict', False)
            # Calling dict(args, kwargs) (line 2740)
            dict_call_result_615881 = invoke(stypy.reporting.localization.Localization(__file__, 2740, 22), dict_615878, *[distdiscrete_615879], **kwargs_615880)
            
            # Assigning a type to the variable 'dct' (line 2740)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2740, 16), 'dct', dict_call_result_615881)
            
            # Call to _construct_doc(...): (line 2741)
            # Processing the call arguments (line 2741)
            # Getting the type of 'docdict_discrete' (line 2741)
            docdict_discrete_615884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2741, 36), 'docdict_discrete', False)
            
            # Call to get(...): (line 2741)
            # Processing the call arguments (line 2741)
            # Getting the type of 'self' (line 2741)
            self_615887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2741, 62), 'self', False)
            # Obtaining the member 'name' of a type (line 2741)
            name_615888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2741, 62), self_615887, 'name')
            # Processing the call keyword arguments (line 2741)
            kwargs_615889 = {}
            # Getting the type of 'dct' (line 2741)
            dct_615885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2741, 54), 'dct', False)
            # Obtaining the member 'get' of a type (line 2741)
            get_615886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2741, 54), dct_615885, 'get')
            # Calling get(args, kwargs) (line 2741)
            get_call_result_615890 = invoke(stypy.reporting.localization.Localization(__file__, 2741, 54), get_615886, *[name_615888], **kwargs_615889)
            
            # Processing the call keyword arguments (line 2741)
            kwargs_615891 = {}
            # Getting the type of 'self' (line 2741)
            self_615882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2741, 16), 'self', False)
            # Obtaining the member '_construct_doc' of a type (line 2741)
            _construct_doc_615883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2741, 16), self_615882, '_construct_doc')
            # Calling _construct_doc(args, kwargs) (line 2741)
            _construct_doc_call_result_615892 = invoke(stypy.reporting.localization.Localization(__file__, 2741, 16), _construct_doc_615883, *[docdict_discrete_615884, get_call_result_615890], **kwargs_615891)
            

            if (may_be_615864 and more_types_in_union_615865):
                # SSA join for if statement (line 2734)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Attribute (line 2744):
        
        # Assigning a Call to a Attribute (line 2744):
        
        # Call to replace(...): (line 2744)
        # Processing the call arguments (line 2744)
        str_615896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2745, 16), 'str', '\n    scale : array_like, optional\n        scale parameter (default=1)')
        str_615897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2746, 65), 'str', '')
        # Processing the call keyword arguments (line 2744)
        kwargs_615898 = {}
        # Getting the type of 'self' (line 2744)
        self_615893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2744, 27), 'self', False)
        # Obtaining the member '__doc__' of a type (line 2744)
        doc___615894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2744, 27), self_615893, '__doc__')
        # Obtaining the member 'replace' of a type (line 2744)
        replace_615895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2744, 27), doc___615894, 'replace')
        # Calling replace(args, kwargs) (line 2744)
        replace_call_result_615899 = invoke(stypy.reporting.localization.Localization(__file__, 2744, 27), replace_615895, *[str_615896, str_615897], **kwargs_615898)
        
        # Getting the type of 'self' (line 2744)
        self_615900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2744, 12), 'self')
        # Setting the type of the member '__doc__' of a type (line 2744)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 2744, 12), self_615900, '__doc__', replace_call_result_615899)
        # SSA join for if statement (line 2732)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of '_construct_docstrings(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_construct_docstrings' in the type store
        # Getting the type of 'stypy_return_type' (line 2718)
        stypy_return_type_615901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2718, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615901)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_construct_docstrings'
        return stypy_return_type_615901


    @norecursion
    def _updated_ctor_param(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_updated_ctor_param'
        module_type_store = module_type_store.open_function_context('_updated_ctor_param', 2748, 4, False)
        # Assigning a type to the variable 'self' (line 2749)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2749, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_function_name', 'rv_discrete._updated_ctor_param')
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_param_names_list', [])
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete._updated_ctor_param.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete._updated_ctor_param', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_updated_ctor_param', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_updated_ctor_param(...)' code ##################

        str_615902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2753, (-1)), 'str', ' Return the current version of _ctor_param, possibly updated by user.\n\n            Used by freezing and pickling.\n            Keep this in sync with the signature of __init__.\n        ')
        
        # Assigning a Call to a Name (line 2754):
        
        # Assigning a Call to a Name (line 2754):
        
        # Call to copy(...): (line 2754)
        # Processing the call keyword arguments (line 2754)
        kwargs_615906 = {}
        # Getting the type of 'self' (line 2754)
        self_615903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2754, 14), 'self', False)
        # Obtaining the member '_ctor_param' of a type (line 2754)
        _ctor_param_615904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2754, 14), self_615903, '_ctor_param')
        # Obtaining the member 'copy' of a type (line 2754)
        copy_615905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2754, 14), _ctor_param_615904, 'copy')
        # Calling copy(args, kwargs) (line 2754)
        copy_call_result_615907 = invoke(stypy.reporting.localization.Localization(__file__, 2754, 14), copy_615905, *[], **kwargs_615906)
        
        # Assigning a type to the variable 'dct' (line 2754)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2754, 8), 'dct', copy_call_result_615907)
        
        # Assigning a Attribute to a Subscript (line 2755):
        
        # Assigning a Attribute to a Subscript (line 2755):
        # Getting the type of 'self' (line 2755)
        self_615908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2755, 19), 'self')
        # Obtaining the member 'a' of a type (line 2755)
        a_615909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2755, 19), self_615908, 'a')
        # Getting the type of 'dct' (line 2755)
        dct_615910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2755, 8), 'dct')
        str_615911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2755, 12), 'str', 'a')
        # Storing an element on a container (line 2755)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2755, 8), dct_615910, (str_615911, a_615909))
        
        # Assigning a Attribute to a Subscript (line 2756):
        
        # Assigning a Attribute to a Subscript (line 2756):
        # Getting the type of 'self' (line 2756)
        self_615912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2756, 19), 'self')
        # Obtaining the member 'b' of a type (line 2756)
        b_615913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2756, 19), self_615912, 'b')
        # Getting the type of 'dct' (line 2756)
        dct_615914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2756, 8), 'dct')
        str_615915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2756, 12), 'str', 'b')
        # Storing an element on a container (line 2756)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2756, 8), dct_615914, (str_615915, b_615913))
        
        # Assigning a Attribute to a Subscript (line 2757):
        
        # Assigning a Attribute to a Subscript (line 2757):
        # Getting the type of 'self' (line 2757)
        self_615916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2757, 26), 'self')
        # Obtaining the member 'badvalue' of a type (line 2757)
        badvalue_615917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2757, 26), self_615916, 'badvalue')
        # Getting the type of 'dct' (line 2757)
        dct_615918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2757, 8), 'dct')
        str_615919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2757, 12), 'str', 'badvalue')
        # Storing an element on a container (line 2757)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2757, 8), dct_615918, (str_615919, badvalue_615917))
        
        # Assigning a Attribute to a Subscript (line 2758):
        
        # Assigning a Attribute to a Subscript (line 2758):
        # Getting the type of 'self' (line 2758)
        self_615920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2758, 28), 'self')
        # Obtaining the member 'moment_tol' of a type (line 2758)
        moment_tol_615921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2758, 28), self_615920, 'moment_tol')
        # Getting the type of 'dct' (line 2758)
        dct_615922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2758, 8), 'dct')
        str_615923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2758, 12), 'str', 'moment_tol')
        # Storing an element on a container (line 2758)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2758, 8), dct_615922, (str_615923, moment_tol_615921))
        
        # Assigning a Attribute to a Subscript (line 2759):
        
        # Assigning a Attribute to a Subscript (line 2759):
        # Getting the type of 'self' (line 2759)
        self_615924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2759, 21), 'self')
        # Obtaining the member 'inc' of a type (line 2759)
        inc_615925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2759, 21), self_615924, 'inc')
        # Getting the type of 'dct' (line 2759)
        dct_615926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2759, 8), 'dct')
        str_615927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2759, 12), 'str', 'inc')
        # Storing an element on a container (line 2759)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2759, 8), dct_615926, (str_615927, inc_615925))
        
        # Assigning a Attribute to a Subscript (line 2760):
        
        # Assigning a Attribute to a Subscript (line 2760):
        # Getting the type of 'self' (line 2760)
        self_615928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2760, 22), 'self')
        # Obtaining the member 'name' of a type (line 2760)
        name_615929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2760, 22), self_615928, 'name')
        # Getting the type of 'dct' (line 2760)
        dct_615930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2760, 8), 'dct')
        str_615931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2760, 12), 'str', 'name')
        # Storing an element on a container (line 2760)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2760, 8), dct_615930, (str_615931, name_615929))
        
        # Assigning a Attribute to a Subscript (line 2761):
        
        # Assigning a Attribute to a Subscript (line 2761):
        # Getting the type of 'self' (line 2761)
        self_615932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2761, 24), 'self')
        # Obtaining the member 'shapes' of a type (line 2761)
        shapes_615933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2761, 24), self_615932, 'shapes')
        # Getting the type of 'dct' (line 2761)
        dct_615934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2761, 8), 'dct')
        str_615935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2761, 12), 'str', 'shapes')
        # Storing an element on a container (line 2761)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2761, 8), dct_615934, (str_615935, shapes_615933))
        
        # Assigning a Attribute to a Subscript (line 2762):
        
        # Assigning a Attribute to a Subscript (line 2762):
        # Getting the type of 'self' (line 2762)
        self_615936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2762, 26), 'self')
        # Obtaining the member 'extradoc' of a type (line 2762)
        extradoc_615937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2762, 26), self_615936, 'extradoc')
        # Getting the type of 'dct' (line 2762)
        dct_615938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2762, 8), 'dct')
        str_615939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2762, 12), 'str', 'extradoc')
        # Storing an element on a container (line 2762)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2762, 8), dct_615938, (str_615939, extradoc_615937))
        # Getting the type of 'dct' (line 2763)
        dct_615940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2763, 15), 'dct')
        # Assigning a type to the variable 'stypy_return_type' (line 2763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2763, 8), 'stypy_return_type', dct_615940)
        
        # ################# End of '_updated_ctor_param(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_updated_ctor_param' in the type store
        # Getting the type of 'stypy_return_type' (line 2748)
        stypy_return_type_615941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2748, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615941)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_updated_ctor_param'
        return stypy_return_type_615941


    @norecursion
    def _nonzero(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_nonzero'
        module_type_store = module_type_store.open_function_context('_nonzero', 2765, 4, False)
        # Assigning a type to the variable 'self' (line 2766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2766, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete._nonzero.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete._nonzero.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete._nonzero.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete._nonzero.__dict__.__setitem__('stypy_function_name', 'rv_discrete._nonzero')
        rv_discrete._nonzero.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete._nonzero.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete._nonzero.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete._nonzero.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete._nonzero.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete._nonzero.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete._nonzero.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete._nonzero', ['k'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_nonzero', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_nonzero(...)' code ##################

        
        
        # Call to floor(...): (line 2766)
        # Processing the call arguments (line 2766)
        # Getting the type of 'k' (line 2766)
        k_615943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2766, 21), 'k', False)
        # Processing the call keyword arguments (line 2766)
        kwargs_615944 = {}
        # Getting the type of 'floor' (line 2766)
        floor_615942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2766, 15), 'floor', False)
        # Calling floor(args, kwargs) (line 2766)
        floor_call_result_615945 = invoke(stypy.reporting.localization.Localization(__file__, 2766, 15), floor_615942, *[k_615943], **kwargs_615944)
        
        # Getting the type of 'k' (line 2766)
        k_615946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2766, 27), 'k')
        # Applying the binary operator '==' (line 2766)
        result_eq_615947 = python_operator(stypy.reporting.localization.Localization(__file__, 2766, 15), '==', floor_call_result_615945, k_615946)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2766, 8), 'stypy_return_type', result_eq_615947)
        
        # ################# End of '_nonzero(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_nonzero' in the type store
        # Getting the type of 'stypy_return_type' (line 2765)
        stypy_return_type_615948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2765, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615948)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_nonzero'
        return stypy_return_type_615948


    @norecursion
    def _pmf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_pmf'
        module_type_store = module_type_store.open_function_context('_pmf', 2768, 4, False)
        # Assigning a type to the variable 'self' (line 2769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2769, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete._pmf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete._pmf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete._pmf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete._pmf.__dict__.__setitem__('stypy_function_name', 'rv_discrete._pmf')
        rv_discrete._pmf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete._pmf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete._pmf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete._pmf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete._pmf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete._pmf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete._pmf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete._pmf', ['k'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_pmf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_pmf(...)' code ##################

        
        # Call to _cdf(...): (line 2769)
        # Processing the call arguments (line 2769)
        # Getting the type of 'k' (line 2769)
        k_615951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 25), 'k', False)
        # Getting the type of 'args' (line 2769)
        args_615952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 29), 'args', False)
        # Processing the call keyword arguments (line 2769)
        kwargs_615953 = {}
        # Getting the type of 'self' (line 2769)
        self_615949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 15), 'self', False)
        # Obtaining the member '_cdf' of a type (line 2769)
        _cdf_615950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2769, 15), self_615949, '_cdf')
        # Calling _cdf(args, kwargs) (line 2769)
        _cdf_call_result_615954 = invoke(stypy.reporting.localization.Localization(__file__, 2769, 15), _cdf_615950, *[k_615951, args_615952], **kwargs_615953)
        
        
        # Call to _cdf(...): (line 2769)
        # Processing the call arguments (line 2769)
        # Getting the type of 'k' (line 2769)
        k_615957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 47), 'k', False)
        int_615958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2769, 49), 'int')
        # Applying the binary operator '-' (line 2769)
        result_sub_615959 = python_operator(stypy.reporting.localization.Localization(__file__, 2769, 47), '-', k_615957, int_615958)
        
        # Getting the type of 'args' (line 2769)
        args_615960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 53), 'args', False)
        # Processing the call keyword arguments (line 2769)
        kwargs_615961 = {}
        # Getting the type of 'self' (line 2769)
        self_615955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2769, 37), 'self', False)
        # Obtaining the member '_cdf' of a type (line 2769)
        _cdf_615956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2769, 37), self_615955, '_cdf')
        # Calling _cdf(args, kwargs) (line 2769)
        _cdf_call_result_615962 = invoke(stypy.reporting.localization.Localization(__file__, 2769, 37), _cdf_615956, *[result_sub_615959, args_615960], **kwargs_615961)
        
        # Applying the binary operator '-' (line 2769)
        result_sub_615963 = python_operator(stypy.reporting.localization.Localization(__file__, 2769, 15), '-', _cdf_call_result_615954, _cdf_call_result_615962)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2769, 8), 'stypy_return_type', result_sub_615963)
        
        # ################# End of '_pmf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_pmf' in the type store
        # Getting the type of 'stypy_return_type' (line 2768)
        stypy_return_type_615964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2768, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615964)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_pmf'
        return stypy_return_type_615964


    @norecursion
    def _logpmf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_logpmf'
        module_type_store = module_type_store.open_function_context('_logpmf', 2771, 4, False)
        # Assigning a type to the variable 'self' (line 2772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2772, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete._logpmf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete._logpmf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete._logpmf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete._logpmf.__dict__.__setitem__('stypy_function_name', 'rv_discrete._logpmf')
        rv_discrete._logpmf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete._logpmf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete._logpmf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete._logpmf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete._logpmf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete._logpmf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete._logpmf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete._logpmf', ['k'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_logpmf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_logpmf(...)' code ##################

        
        # Call to log(...): (line 2772)
        # Processing the call arguments (line 2772)
        
        # Call to _pmf(...): (line 2772)
        # Processing the call arguments (line 2772)
        # Getting the type of 'k' (line 2772)
        k_615968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2772, 29), 'k', False)
        # Getting the type of 'args' (line 2772)
        args_615969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2772, 33), 'args', False)
        # Processing the call keyword arguments (line 2772)
        kwargs_615970 = {}
        # Getting the type of 'self' (line 2772)
        self_615966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2772, 19), 'self', False)
        # Obtaining the member '_pmf' of a type (line 2772)
        _pmf_615967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2772, 19), self_615966, '_pmf')
        # Calling _pmf(args, kwargs) (line 2772)
        _pmf_call_result_615971 = invoke(stypy.reporting.localization.Localization(__file__, 2772, 19), _pmf_615967, *[k_615968, args_615969], **kwargs_615970)
        
        # Processing the call keyword arguments (line 2772)
        kwargs_615972 = {}
        # Getting the type of 'log' (line 2772)
        log_615965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2772, 15), 'log', False)
        # Calling log(args, kwargs) (line 2772)
        log_call_result_615973 = invoke(stypy.reporting.localization.Localization(__file__, 2772, 15), log_615965, *[_pmf_call_result_615971], **kwargs_615972)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2772, 8), 'stypy_return_type', log_call_result_615973)
        
        # ################# End of '_logpmf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_logpmf' in the type store
        # Getting the type of 'stypy_return_type' (line 2771)
        stypy_return_type_615974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2771, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615974)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_logpmf'
        return stypy_return_type_615974


    @norecursion
    def _cdf_single(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_cdf_single'
        module_type_store = module_type_store.open_function_context('_cdf_single', 2774, 4, False)
        # Assigning a type to the variable 'self' (line 2775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2775, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_function_name', 'rv_discrete._cdf_single')
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete._cdf_single.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete._cdf_single', ['k'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_cdf_single', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_cdf_single(...)' code ##################

        
        # Assigning a Call to a Name (line 2775):
        
        # Assigning a Call to a Name (line 2775):
        
        # Call to arange(...): (line 2775)
        # Processing the call arguments (line 2775)
        
        # Call to int(...): (line 2775)
        # Processing the call arguments (line 2775)
        # Getting the type of 'self' (line 2775)
        self_615977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2775, 23), 'self', False)
        # Obtaining the member 'a' of a type (line 2775)
        a_615978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2775, 23), self_615977, 'a')
        # Processing the call keyword arguments (line 2775)
        kwargs_615979 = {}
        # Getting the type of 'int' (line 2775)
        int_615976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2775, 19), 'int', False)
        # Calling int(args, kwargs) (line 2775)
        int_call_result_615980 = invoke(stypy.reporting.localization.Localization(__file__, 2775, 19), int_615976, *[a_615978], **kwargs_615979)
        
        # Getting the type of 'k' (line 2775)
        k_615981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2775, 32), 'k', False)
        int_615982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2775, 34), 'int')
        # Applying the binary operator '+' (line 2775)
        result_add_615983 = python_operator(stypy.reporting.localization.Localization(__file__, 2775, 32), '+', k_615981, int_615982)
        
        # Processing the call keyword arguments (line 2775)
        kwargs_615984 = {}
        # Getting the type of 'arange' (line 2775)
        arange_615975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2775, 12), 'arange', False)
        # Calling arange(args, kwargs) (line 2775)
        arange_call_result_615985 = invoke(stypy.reporting.localization.Localization(__file__, 2775, 12), arange_615975, *[int_call_result_615980, result_add_615983], **kwargs_615984)
        
        # Assigning a type to the variable 'm' (line 2775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2775, 8), 'm', arange_call_result_615985)
        
        # Call to sum(...): (line 2776)
        # Processing the call arguments (line 2776)
        
        # Call to _pmf(...): (line 2776)
        # Processing the call arguments (line 2776)
        # Getting the type of 'm' (line 2776)
        m_615990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2776, 32), 'm', False)
        # Getting the type of 'args' (line 2776)
        args_615991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2776, 36), 'args', False)
        # Processing the call keyword arguments (line 2776)
        kwargs_615992 = {}
        # Getting the type of 'self' (line 2776)
        self_615988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2776, 22), 'self', False)
        # Obtaining the member '_pmf' of a type (line 2776)
        _pmf_615989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2776, 22), self_615988, '_pmf')
        # Calling _pmf(args, kwargs) (line 2776)
        _pmf_call_result_615993 = invoke(stypy.reporting.localization.Localization(__file__, 2776, 22), _pmf_615989, *[m_615990, args_615991], **kwargs_615992)
        
        # Processing the call keyword arguments (line 2776)
        int_615994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2776, 48), 'int')
        keyword_615995 = int_615994
        kwargs_615996 = {'axis': keyword_615995}
        # Getting the type of 'np' (line 2776)
        np_615986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2776, 15), 'np', False)
        # Obtaining the member 'sum' of a type (line 2776)
        sum_615987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2776, 15), np_615986, 'sum')
        # Calling sum(args, kwargs) (line 2776)
        sum_call_result_615997 = invoke(stypy.reporting.localization.Localization(__file__, 2776, 15), sum_615987, *[_pmf_call_result_615993], **kwargs_615996)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2776)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2776, 8), 'stypy_return_type', sum_call_result_615997)
        
        # ################# End of '_cdf_single(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_cdf_single' in the type store
        # Getting the type of 'stypy_return_type' (line 2774)
        stypy_return_type_615998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2774, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_615998)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_cdf_single'
        return stypy_return_type_615998


    @norecursion
    def _cdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_cdf'
        module_type_store = module_type_store.open_function_context('_cdf', 2778, 4, False)
        # Assigning a type to the variable 'self' (line 2779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2779, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete._cdf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete._cdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete._cdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete._cdf.__dict__.__setitem__('stypy_function_name', 'rv_discrete._cdf')
        rv_discrete._cdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_discrete._cdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete._cdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete._cdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete._cdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete._cdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete._cdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete._cdf', ['x'], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_cdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_cdf(...)' code ##################

        
        # Assigning a Call to a Name (line 2779):
        
        # Assigning a Call to a Name (line 2779):
        
        # Call to floor(...): (line 2779)
        # Processing the call arguments (line 2779)
        # Getting the type of 'x' (line 2779)
        x_616000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2779, 18), 'x', False)
        # Processing the call keyword arguments (line 2779)
        kwargs_616001 = {}
        # Getting the type of 'floor' (line 2779)
        floor_615999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2779, 12), 'floor', False)
        # Calling floor(args, kwargs) (line 2779)
        floor_call_result_616002 = invoke(stypy.reporting.localization.Localization(__file__, 2779, 12), floor_615999, *[x_616000], **kwargs_616001)
        
        # Assigning a type to the variable 'k' (line 2779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2779, 8), 'k', floor_call_result_616002)
        
        # Call to _cdfvec(...): (line 2780)
        # Processing the call arguments (line 2780)
        # Getting the type of 'k' (line 2780)
        k_616005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2780, 28), 'k', False)
        # Getting the type of 'args' (line 2780)
        args_616006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2780, 32), 'args', False)
        # Processing the call keyword arguments (line 2780)
        kwargs_616007 = {}
        # Getting the type of 'self' (line 2780)
        self_616003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2780, 15), 'self', False)
        # Obtaining the member '_cdfvec' of a type (line 2780)
        _cdfvec_616004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2780, 15), self_616003, '_cdfvec')
        # Calling _cdfvec(args, kwargs) (line 2780)
        _cdfvec_call_result_616008 = invoke(stypy.reporting.localization.Localization(__file__, 2780, 15), _cdfvec_616004, *[k_616005, args_616006], **kwargs_616007)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2780, 8), 'stypy_return_type', _cdfvec_call_result_616008)
        
        # ################# End of '_cdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_cdf' in the type store
        # Getting the type of 'stypy_return_type' (line 2778)
        stypy_return_type_616009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2778, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_616009)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_cdf'
        return stypy_return_type_616009


    @norecursion
    def rvs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'rvs'
        module_type_store = module_type_store.open_function_context('rvs', 2784, 4, False)
        # Assigning a type to the variable 'self' (line 2785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2785, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.rvs.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.rvs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.rvs.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.rvs.__dict__.__setitem__('stypy_function_name', 'rv_discrete.rvs')
        rv_discrete.rvs.__dict__.__setitem__('stypy_param_names_list', [])
        rv_discrete.rvs.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete.rvs.__dict__.__setitem__('stypy_kwargs_param_name', 'kwargs')
        rv_discrete.rvs.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.rvs.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.rvs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.rvs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.rvs', [], 'args', 'kwargs', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'rvs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'rvs(...)' code ##################

        str_616010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2808, (-1)), 'str', '\n        Random variates of given type.\n\n        Parameters\n        ----------\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter (default=0).\n        size : int or tuple of ints, optional\n            Defining number of random variates (Default is 1).  Note that `size`\n            has to be given as keyword, not as positional argument.\n        random_state : None or int or ``np.random.RandomState`` instance, optional\n            If int or RandomState, use it for drawing the random variates.\n            If None, rely on ``self.random_state``.\n            Default is None.\n\n        Returns\n        -------\n        rvs : ndarray or scalar\n            Random variates of given `size`.\n\n        ')
        
        # Assigning a Name to a Subscript (line 2809):
        
        # Assigning a Name to a Subscript (line 2809):
        # Getting the type of 'True' (line 2809)
        True_616011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2809, 29), 'True')
        # Getting the type of 'kwargs' (line 2809)
        kwargs_616012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2809, 8), 'kwargs')
        str_616013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2809, 15), 'str', 'discrete')
        # Storing an element on a container (line 2809)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2809, 8), kwargs_616012, (str_616013, True_616011))
        
        # Call to rvs(...): (line 2810)
        # Getting the type of 'args' (line 2810)
        args_616020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2810, 45), 'args', False)
        # Processing the call keyword arguments (line 2810)
        # Getting the type of 'kwargs' (line 2810)
        kwargs_616021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2810, 53), 'kwargs', False)
        kwargs_616022 = {'kwargs_616021': kwargs_616021}
        
        # Call to super(...): (line 2810)
        # Processing the call arguments (line 2810)
        # Getting the type of 'rv_discrete' (line 2810)
        rv_discrete_616015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2810, 21), 'rv_discrete', False)
        # Getting the type of 'self' (line 2810)
        self_616016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2810, 34), 'self', False)
        # Processing the call keyword arguments (line 2810)
        kwargs_616017 = {}
        # Getting the type of 'super' (line 2810)
        super_616014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2810, 15), 'super', False)
        # Calling super(args, kwargs) (line 2810)
        super_call_result_616018 = invoke(stypy.reporting.localization.Localization(__file__, 2810, 15), super_616014, *[rv_discrete_616015, self_616016], **kwargs_616017)
        
        # Obtaining the member 'rvs' of a type (line 2810)
        rvs_616019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2810, 15), super_call_result_616018, 'rvs')
        # Calling rvs(args, kwargs) (line 2810)
        rvs_call_result_616023 = invoke(stypy.reporting.localization.Localization(__file__, 2810, 15), rvs_616019, *[args_616020], **kwargs_616022)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2810)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2810, 8), 'stypy_return_type', rvs_call_result_616023)
        
        # ################# End of 'rvs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'rvs' in the type store
        # Getting the type of 'stypy_return_type' (line 2784)
        stypy_return_type_616024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2784, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_616024)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'rvs'
        return stypy_return_type_616024


    @norecursion
    def pmf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'pmf'
        module_type_store = module_type_store.open_function_context('pmf', 2812, 4, False)
        # Assigning a type to the variable 'self' (line 2813)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2813, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.pmf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.pmf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.pmf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.pmf.__dict__.__setitem__('stypy_function_name', 'rv_discrete.pmf')
        rv_discrete.pmf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete.pmf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete.pmf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_discrete.pmf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.pmf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.pmf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.pmf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.pmf', ['k'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'pmf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'pmf(...)' code ##################

        str_616025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2831, (-1)), 'str', '\n        Probability mass function at k of the given RV.\n\n        Parameters\n        ----------\n        k : array_like\n            Quantiles.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information)\n        loc : array_like, optional\n            Location parameter (default=0).\n\n        Returns\n        -------\n        pmf : array_like\n            Probability mass function evaluated at k\n\n        ')
        
        # Assigning a Call to a Tuple (line 2832):
        
        # Assigning a Subscript to a Name (line 2832):
        
        # Obtaining the type of the subscript
        int_616026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2832, 8), 'int')
        
        # Call to _parse_args(...): (line 2832)
        # Getting the type of 'args' (line 2832)
        args_616029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 41), 'args', False)
        # Processing the call keyword arguments (line 2832)
        # Getting the type of 'kwds' (line 2832)
        kwds_616030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 49), 'kwds', False)
        kwargs_616031 = {'kwds_616030': kwds_616030}
        # Getting the type of 'self' (line 2832)
        self_616027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2832)
        _parse_args_616028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2832, 23), self_616027, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2832)
        _parse_args_call_result_616032 = invoke(stypy.reporting.localization.Localization(__file__, 2832, 23), _parse_args_616028, *[args_616029], **kwargs_616031)
        
        # Obtaining the member '__getitem__' of a type (line 2832)
        getitem___616033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2832, 8), _parse_args_call_result_616032, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2832)
        subscript_call_result_616034 = invoke(stypy.reporting.localization.Localization(__file__, 2832, 8), getitem___616033, int_616026)
        
        # Assigning a type to the variable 'tuple_var_assignment_609357' (line 2832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2832, 8), 'tuple_var_assignment_609357', subscript_call_result_616034)
        
        # Assigning a Subscript to a Name (line 2832):
        
        # Obtaining the type of the subscript
        int_616035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2832, 8), 'int')
        
        # Call to _parse_args(...): (line 2832)
        # Getting the type of 'args' (line 2832)
        args_616038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 41), 'args', False)
        # Processing the call keyword arguments (line 2832)
        # Getting the type of 'kwds' (line 2832)
        kwds_616039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 49), 'kwds', False)
        kwargs_616040 = {'kwds_616039': kwds_616039}
        # Getting the type of 'self' (line 2832)
        self_616036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2832)
        _parse_args_616037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2832, 23), self_616036, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2832)
        _parse_args_call_result_616041 = invoke(stypy.reporting.localization.Localization(__file__, 2832, 23), _parse_args_616037, *[args_616038], **kwargs_616040)
        
        # Obtaining the member '__getitem__' of a type (line 2832)
        getitem___616042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2832, 8), _parse_args_call_result_616041, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2832)
        subscript_call_result_616043 = invoke(stypy.reporting.localization.Localization(__file__, 2832, 8), getitem___616042, int_616035)
        
        # Assigning a type to the variable 'tuple_var_assignment_609358' (line 2832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2832, 8), 'tuple_var_assignment_609358', subscript_call_result_616043)
        
        # Assigning a Subscript to a Name (line 2832):
        
        # Obtaining the type of the subscript
        int_616044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2832, 8), 'int')
        
        # Call to _parse_args(...): (line 2832)
        # Getting the type of 'args' (line 2832)
        args_616047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 41), 'args', False)
        # Processing the call keyword arguments (line 2832)
        # Getting the type of 'kwds' (line 2832)
        kwds_616048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 49), 'kwds', False)
        kwargs_616049 = {'kwds_616048': kwds_616048}
        # Getting the type of 'self' (line 2832)
        self_616045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2832)
        _parse_args_616046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2832, 23), self_616045, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2832)
        _parse_args_call_result_616050 = invoke(stypy.reporting.localization.Localization(__file__, 2832, 23), _parse_args_616046, *[args_616047], **kwargs_616049)
        
        # Obtaining the member '__getitem__' of a type (line 2832)
        getitem___616051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2832, 8), _parse_args_call_result_616050, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2832)
        subscript_call_result_616052 = invoke(stypy.reporting.localization.Localization(__file__, 2832, 8), getitem___616051, int_616044)
        
        # Assigning a type to the variable 'tuple_var_assignment_609359' (line 2832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2832, 8), 'tuple_var_assignment_609359', subscript_call_result_616052)
        
        # Assigning a Name to a Name (line 2832):
        # Getting the type of 'tuple_var_assignment_609357' (line 2832)
        tuple_var_assignment_609357_616053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 8), 'tuple_var_assignment_609357')
        # Assigning a type to the variable 'args' (line 2832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2832, 8), 'args', tuple_var_assignment_609357_616053)
        
        # Assigning a Name to a Name (line 2832):
        # Getting the type of 'tuple_var_assignment_609358' (line 2832)
        tuple_var_assignment_609358_616054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 8), 'tuple_var_assignment_609358')
        # Assigning a type to the variable 'loc' (line 2832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2832, 14), 'loc', tuple_var_assignment_609358_616054)
        
        # Assigning a Name to a Name (line 2832):
        # Getting the type of 'tuple_var_assignment_609359' (line 2832)
        tuple_var_assignment_609359_616055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2832, 8), 'tuple_var_assignment_609359')
        # Assigning a type to the variable '_' (line 2832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2832, 19), '_', tuple_var_assignment_609359_616055)
        
        # Assigning a Call to a Tuple (line 2833):
        
        # Assigning a Subscript to a Name (line 2833):
        
        # Obtaining the type of the subscript
        int_616056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2833, 8), 'int')
        
        # Call to map(...): (line 2833)
        # Processing the call arguments (line 2833)
        # Getting the type of 'asarray' (line 2833)
        asarray_616058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2833)
        tuple_616059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2833, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2833)
        # Adding element type (line 2833)
        # Getting the type of 'k' (line 2833)
        k_616060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2833, 31), tuple_616059, k_616060)
        # Adding element type (line 2833)
        # Getting the type of 'loc' (line 2833)
        loc_616061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2833, 31), tuple_616059, loc_616061)
        
        # Processing the call keyword arguments (line 2833)
        kwargs_616062 = {}
        # Getting the type of 'map' (line 2833)
        map_616057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 17), 'map', False)
        # Calling map(args, kwargs) (line 2833)
        map_call_result_616063 = invoke(stypy.reporting.localization.Localization(__file__, 2833, 17), map_616057, *[asarray_616058, tuple_616059], **kwargs_616062)
        
        # Obtaining the member '__getitem__' of a type (line 2833)
        getitem___616064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2833, 8), map_call_result_616063, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2833)
        subscript_call_result_616065 = invoke(stypy.reporting.localization.Localization(__file__, 2833, 8), getitem___616064, int_616056)
        
        # Assigning a type to the variable 'tuple_var_assignment_609360' (line 2833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2833, 8), 'tuple_var_assignment_609360', subscript_call_result_616065)
        
        # Assigning a Subscript to a Name (line 2833):
        
        # Obtaining the type of the subscript
        int_616066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2833, 8), 'int')
        
        # Call to map(...): (line 2833)
        # Processing the call arguments (line 2833)
        # Getting the type of 'asarray' (line 2833)
        asarray_616068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2833)
        tuple_616069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2833, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2833)
        # Adding element type (line 2833)
        # Getting the type of 'k' (line 2833)
        k_616070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2833, 31), tuple_616069, k_616070)
        # Adding element type (line 2833)
        # Getting the type of 'loc' (line 2833)
        loc_616071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2833, 31), tuple_616069, loc_616071)
        
        # Processing the call keyword arguments (line 2833)
        kwargs_616072 = {}
        # Getting the type of 'map' (line 2833)
        map_616067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 17), 'map', False)
        # Calling map(args, kwargs) (line 2833)
        map_call_result_616073 = invoke(stypy.reporting.localization.Localization(__file__, 2833, 17), map_616067, *[asarray_616068, tuple_616069], **kwargs_616072)
        
        # Obtaining the member '__getitem__' of a type (line 2833)
        getitem___616074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2833, 8), map_call_result_616073, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2833)
        subscript_call_result_616075 = invoke(stypy.reporting.localization.Localization(__file__, 2833, 8), getitem___616074, int_616066)
        
        # Assigning a type to the variable 'tuple_var_assignment_609361' (line 2833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2833, 8), 'tuple_var_assignment_609361', subscript_call_result_616075)
        
        # Assigning a Name to a Name (line 2833):
        # Getting the type of 'tuple_var_assignment_609360' (line 2833)
        tuple_var_assignment_609360_616076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 8), 'tuple_var_assignment_609360')
        # Assigning a type to the variable 'k' (line 2833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2833, 8), 'k', tuple_var_assignment_609360_616076)
        
        # Assigning a Name to a Name (line 2833):
        # Getting the type of 'tuple_var_assignment_609361' (line 2833)
        tuple_var_assignment_609361_616077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2833, 8), 'tuple_var_assignment_609361')
        # Assigning a type to the variable 'loc' (line 2833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2833, 11), 'loc', tuple_var_assignment_609361_616077)
        
        # Assigning a Call to a Name (line 2834):
        
        # Assigning a Call to a Name (line 2834):
        
        # Call to tuple(...): (line 2834)
        # Processing the call arguments (line 2834)
        
        # Call to map(...): (line 2834)
        # Processing the call arguments (line 2834)
        # Getting the type of 'asarray' (line 2834)
        asarray_616080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2834, 25), 'asarray', False)
        # Getting the type of 'args' (line 2834)
        args_616081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2834, 34), 'args', False)
        # Processing the call keyword arguments (line 2834)
        kwargs_616082 = {}
        # Getting the type of 'map' (line 2834)
        map_616079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2834, 21), 'map', False)
        # Calling map(args, kwargs) (line 2834)
        map_call_result_616083 = invoke(stypy.reporting.localization.Localization(__file__, 2834, 21), map_616079, *[asarray_616080, args_616081], **kwargs_616082)
        
        # Processing the call keyword arguments (line 2834)
        kwargs_616084 = {}
        # Getting the type of 'tuple' (line 2834)
        tuple_616078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2834, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 2834)
        tuple_call_result_616085 = invoke(stypy.reporting.localization.Localization(__file__, 2834, 15), tuple_616078, *[map_call_result_616083], **kwargs_616084)
        
        # Assigning a type to the variable 'args' (line 2834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2834, 8), 'args', tuple_call_result_616085)
        
        # Assigning a Call to a Name (line 2835):
        
        # Assigning a Call to a Name (line 2835):
        
        # Call to asarray(...): (line 2835)
        # Processing the call arguments (line 2835)
        # Getting the type of 'k' (line 2835)
        k_616087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2835, 21), 'k', False)
        # Getting the type of 'loc' (line 2835)
        loc_616088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2835, 23), 'loc', False)
        # Applying the binary operator '-' (line 2835)
        result_sub_616089 = python_operator(stypy.reporting.localization.Localization(__file__, 2835, 21), '-', k_616087, loc_616088)
        
        # Processing the call keyword arguments (line 2835)
        kwargs_616090 = {}
        # Getting the type of 'asarray' (line 2835)
        asarray_616086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2835, 12), 'asarray', False)
        # Calling asarray(args, kwargs) (line 2835)
        asarray_call_result_616091 = invoke(stypy.reporting.localization.Localization(__file__, 2835, 12), asarray_616086, *[result_sub_616089], **kwargs_616090)
        
        # Assigning a type to the variable 'k' (line 2835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2835, 8), 'k', asarray_call_result_616091)
        
        # Assigning a Call to a Name (line 2836):
        
        # Assigning a Call to a Name (line 2836):
        
        # Call to _argcheck(...): (line 2836)
        # Getting the type of 'args' (line 2836)
        args_616094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2836, 32), 'args', False)
        # Processing the call keyword arguments (line 2836)
        kwargs_616095 = {}
        # Getting the type of 'self' (line 2836)
        self_616092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2836, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 2836)
        _argcheck_616093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2836, 16), self_616092, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 2836)
        _argcheck_call_result_616096 = invoke(stypy.reporting.localization.Localization(__file__, 2836, 16), _argcheck_616093, *[args_616094], **kwargs_616095)
        
        # Assigning a type to the variable 'cond0' (line 2836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2836, 8), 'cond0', _argcheck_call_result_616096)
        
        # Assigning a BinOp to a Name (line 2837):
        
        # Assigning a BinOp to a Name (line 2837):
        
        # Getting the type of 'k' (line 2837)
        k_616097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2837, 17), 'k')
        # Getting the type of 'self' (line 2837)
        self_616098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2837, 22), 'self')
        # Obtaining the member 'a' of a type (line 2837)
        a_616099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2837, 22), self_616098, 'a')
        # Applying the binary operator '>=' (line 2837)
        result_ge_616100 = python_operator(stypy.reporting.localization.Localization(__file__, 2837, 17), '>=', k_616097, a_616099)
        
        
        # Getting the type of 'k' (line 2837)
        k_616101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2837, 33), 'k')
        # Getting the type of 'self' (line 2837)
        self_616102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2837, 38), 'self')
        # Obtaining the member 'b' of a type (line 2837)
        b_616103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2837, 38), self_616102, 'b')
        # Applying the binary operator '<=' (line 2837)
        result_le_616104 = python_operator(stypy.reporting.localization.Localization(__file__, 2837, 33), '<=', k_616101, b_616103)
        
        # Applying the binary operator '&' (line 2837)
        result_and__616105 = python_operator(stypy.reporting.localization.Localization(__file__, 2837, 16), '&', result_ge_616100, result_le_616104)
        
        
        # Call to _nonzero(...): (line 2837)
        # Processing the call arguments (line 2837)
        # Getting the type of 'k' (line 2837)
        k_616108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2837, 62), 'k', False)
        # Getting the type of 'args' (line 2837)
        args_616109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2837, 66), 'args', False)
        # Processing the call keyword arguments (line 2837)
        kwargs_616110 = {}
        # Getting the type of 'self' (line 2837)
        self_616106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2837, 48), 'self', False)
        # Obtaining the member '_nonzero' of a type (line 2837)
        _nonzero_616107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2837, 48), self_616106, '_nonzero')
        # Calling _nonzero(args, kwargs) (line 2837)
        _nonzero_call_result_616111 = invoke(stypy.reporting.localization.Localization(__file__, 2837, 48), _nonzero_616107, *[k_616108, args_616109], **kwargs_616110)
        
        # Applying the binary operator '&' (line 2837)
        result_and__616112 = python_operator(stypy.reporting.localization.Localization(__file__, 2837, 46), '&', result_and__616105, _nonzero_call_result_616111)
        
        # Assigning a type to the variable 'cond1' (line 2837)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2837, 8), 'cond1', result_and__616112)
        
        # Assigning a BinOp to a Name (line 2838):
        
        # Assigning a BinOp to a Name (line 2838):
        # Getting the type of 'cond0' (line 2838)
        cond0_616113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2838, 15), 'cond0')
        # Getting the type of 'cond1' (line 2838)
        cond1_616114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2838, 23), 'cond1')
        # Applying the binary operator '&' (line 2838)
        result_and__616115 = python_operator(stypy.reporting.localization.Localization(__file__, 2838, 15), '&', cond0_616113, cond1_616114)
        
        # Assigning a type to the variable 'cond' (line 2838)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2838, 8), 'cond', result_and__616115)
        
        # Assigning a Call to a Name (line 2839):
        
        # Assigning a Call to a Name (line 2839):
        
        # Call to zeros(...): (line 2839)
        # Processing the call arguments (line 2839)
        
        # Call to shape(...): (line 2839)
        # Processing the call arguments (line 2839)
        # Getting the type of 'cond' (line 2839)
        cond_616118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2839, 29), 'cond', False)
        # Processing the call keyword arguments (line 2839)
        kwargs_616119 = {}
        # Getting the type of 'shape' (line 2839)
        shape_616117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2839, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 2839)
        shape_call_result_616120 = invoke(stypy.reporting.localization.Localization(__file__, 2839, 23), shape_616117, *[cond_616118], **kwargs_616119)
        
        str_616121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2839, 36), 'str', 'd')
        # Processing the call keyword arguments (line 2839)
        kwargs_616122 = {}
        # Getting the type of 'zeros' (line 2839)
        zeros_616116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2839, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 2839)
        zeros_call_result_616123 = invoke(stypy.reporting.localization.Localization(__file__, 2839, 17), zeros_616116, *[shape_call_result_616120, str_616121], **kwargs_616122)
        
        # Assigning a type to the variable 'output' (line 2839)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2839, 8), 'output', zeros_call_result_616123)
        
        # Call to place(...): (line 2840)
        # Processing the call arguments (line 2840)
        # Getting the type of 'output' (line 2840)
        output_616125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2840, 14), 'output', False)
        int_616126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2840, 23), 'int')
        # Getting the type of 'cond0' (line 2840)
        cond0_616127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2840, 25), 'cond0', False)
        # Applying the binary operator '-' (line 2840)
        result_sub_616128 = python_operator(stypy.reporting.localization.Localization(__file__, 2840, 23), '-', int_616126, cond0_616127)
        
        
        # Call to isnan(...): (line 2840)
        # Processing the call arguments (line 2840)
        # Getting the type of 'k' (line 2840)
        k_616131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2840, 43), 'k', False)
        # Processing the call keyword arguments (line 2840)
        kwargs_616132 = {}
        # Getting the type of 'np' (line 2840)
        np_616129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2840, 34), 'np', False)
        # Obtaining the member 'isnan' of a type (line 2840)
        isnan_616130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2840, 34), np_616129, 'isnan')
        # Calling isnan(args, kwargs) (line 2840)
        isnan_call_result_616133 = invoke(stypy.reporting.localization.Localization(__file__, 2840, 34), isnan_616130, *[k_616131], **kwargs_616132)
        
        # Applying the binary operator '+' (line 2840)
        result_add_616134 = python_operator(stypy.reporting.localization.Localization(__file__, 2840, 22), '+', result_sub_616128, isnan_call_result_616133)
        
        # Getting the type of 'self' (line 2840)
        self_616135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2840, 47), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 2840)
        badvalue_616136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2840, 47), self_616135, 'badvalue')
        # Processing the call keyword arguments (line 2840)
        kwargs_616137 = {}
        # Getting the type of 'place' (line 2840)
        place_616124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2840, 8), 'place', False)
        # Calling place(args, kwargs) (line 2840)
        place_call_result_616138 = invoke(stypy.reporting.localization.Localization(__file__, 2840, 8), place_616124, *[output_616125, result_add_616134, badvalue_616136], **kwargs_616137)
        
        
        
        # Call to any(...): (line 2841)
        # Processing the call arguments (line 2841)
        # Getting the type of 'cond' (line 2841)
        cond_616141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2841, 18), 'cond', False)
        # Processing the call keyword arguments (line 2841)
        kwargs_616142 = {}
        # Getting the type of 'np' (line 2841)
        np_616139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2841, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 2841)
        any_616140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2841, 11), np_616139, 'any')
        # Calling any(args, kwargs) (line 2841)
        any_call_result_616143 = invoke(stypy.reporting.localization.Localization(__file__, 2841, 11), any_616140, *[cond_616141], **kwargs_616142)
        
        # Testing the type of an if condition (line 2841)
        if_condition_616144 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2841, 8), any_call_result_616143)
        # Assigning a type to the variable 'if_condition_616144' (line 2841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2841, 8), 'if_condition_616144', if_condition_616144)
        # SSA begins for if statement (line 2841)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2842):
        
        # Assigning a Call to a Name (line 2842):
        
        # Call to argsreduce(...): (line 2842)
        # Processing the call arguments (line 2842)
        # Getting the type of 'cond' (line 2842)
        cond_616146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2842)
        tuple_616147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2842, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2842)
        # Adding element type (line 2842)
        # Getting the type of 'k' (line 2842)
        k_616148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 43), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2842, 43), tuple_616147, k_616148)
        
        # Getting the type of 'args' (line 2842)
        args_616149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 47), 'args', False)
        # Applying the binary operator '+' (line 2842)
        result_add_616150 = python_operator(stypy.reporting.localization.Localization(__file__, 2842, 42), '+', tuple_616147, args_616149)
        
        # Processing the call keyword arguments (line 2842)
        kwargs_616151 = {}
        # Getting the type of 'argsreduce' (line 2842)
        argsreduce_616145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2842, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 2842)
        argsreduce_call_result_616152 = invoke(stypy.reporting.localization.Localization(__file__, 2842, 23), argsreduce_616145, *[cond_616146, result_add_616150], **kwargs_616151)
        
        # Assigning a type to the variable 'goodargs' (line 2842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2842, 12), 'goodargs', argsreduce_call_result_616152)
        
        # Call to place(...): (line 2843)
        # Processing the call arguments (line 2843)
        # Getting the type of 'output' (line 2843)
        output_616154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 18), 'output', False)
        # Getting the type of 'cond' (line 2843)
        cond_616155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 26), 'cond', False)
        
        # Call to clip(...): (line 2843)
        # Processing the call arguments (line 2843)
        
        # Call to _pmf(...): (line 2843)
        # Getting the type of 'goodargs' (line 2843)
        goodargs_616160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 51), 'goodargs', False)
        # Processing the call keyword arguments (line 2843)
        kwargs_616161 = {}
        # Getting the type of 'self' (line 2843)
        self_616158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 40), 'self', False)
        # Obtaining the member '_pmf' of a type (line 2843)
        _pmf_616159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2843, 40), self_616158, '_pmf')
        # Calling _pmf(args, kwargs) (line 2843)
        _pmf_call_result_616162 = invoke(stypy.reporting.localization.Localization(__file__, 2843, 40), _pmf_616159, *[goodargs_616160], **kwargs_616161)
        
        int_616163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2843, 62), 'int')
        int_616164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2843, 65), 'int')
        # Processing the call keyword arguments (line 2843)
        kwargs_616165 = {}
        # Getting the type of 'np' (line 2843)
        np_616156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 32), 'np', False)
        # Obtaining the member 'clip' of a type (line 2843)
        clip_616157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2843, 32), np_616156, 'clip')
        # Calling clip(args, kwargs) (line 2843)
        clip_call_result_616166 = invoke(stypy.reporting.localization.Localization(__file__, 2843, 32), clip_616157, *[_pmf_call_result_616162, int_616163, int_616164], **kwargs_616165)
        
        # Processing the call keyword arguments (line 2843)
        kwargs_616167 = {}
        # Getting the type of 'place' (line 2843)
        place_616153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2843, 12), 'place', False)
        # Calling place(args, kwargs) (line 2843)
        place_call_result_616168 = invoke(stypy.reporting.localization.Localization(__file__, 2843, 12), place_616153, *[output_616154, cond_616155, clip_call_result_616166], **kwargs_616167)
        
        # SSA join for if statement (line 2841)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 2844)
        output_616169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2844, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 2844)
        ndim_616170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2844, 11), output_616169, 'ndim')
        int_616171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2844, 26), 'int')
        # Applying the binary operator '==' (line 2844)
        result_eq_616172 = python_operator(stypy.reporting.localization.Localization(__file__, 2844, 11), '==', ndim_616170, int_616171)
        
        # Testing the type of an if condition (line 2844)
        if_condition_616173 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2844, 8), result_eq_616172)
        # Assigning a type to the variable 'if_condition_616173' (line 2844)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2844, 8), 'if_condition_616173', if_condition_616173)
        # SSA begins for if statement (line 2844)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 2845)
        tuple_616174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2845, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2845)
        
        # Getting the type of 'output' (line 2845)
        output_616175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2845, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 2845)
        getitem___616176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2845, 19), output_616175, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2845)
        subscript_call_result_616177 = invoke(stypy.reporting.localization.Localization(__file__, 2845, 19), getitem___616176, tuple_616174)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2845, 12), 'stypy_return_type', subscript_call_result_616177)
        # SSA join for if statement (line 2844)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 2846)
        output_616178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2846, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 2846)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2846, 8), 'stypy_return_type', output_616178)
        
        # ################# End of 'pmf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'pmf' in the type store
        # Getting the type of 'stypy_return_type' (line 2812)
        stypy_return_type_616179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2812, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_616179)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'pmf'
        return stypy_return_type_616179


    @norecursion
    def logpmf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logpmf'
        module_type_store = module_type_store.open_function_context('logpmf', 2848, 4, False)
        # Assigning a type to the variable 'self' (line 2849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2849, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.logpmf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.logpmf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.logpmf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.logpmf.__dict__.__setitem__('stypy_function_name', 'rv_discrete.logpmf')
        rv_discrete.logpmf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete.logpmf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete.logpmf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_discrete.logpmf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.logpmf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.logpmf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.logpmf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.logpmf', ['k'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logpmf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logpmf(...)' code ##################

        str_616180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2867, (-1)), 'str', '\n        Log of the probability mass function at k of the given RV.\n\n        Parameters\n        ----------\n        k : array_like\n            Quantiles.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter. Default is 0.\n\n        Returns\n        -------\n        logpmf : array_like\n            Log of the probability mass function evaluated at k.\n\n        ')
        
        # Assigning a Call to a Tuple (line 2868):
        
        # Assigning a Subscript to a Name (line 2868):
        
        # Obtaining the type of the subscript
        int_616181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2868, 8), 'int')
        
        # Call to _parse_args(...): (line 2868)
        # Getting the type of 'args' (line 2868)
        args_616184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 41), 'args', False)
        # Processing the call keyword arguments (line 2868)
        # Getting the type of 'kwds' (line 2868)
        kwds_616185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 49), 'kwds', False)
        kwargs_616186 = {'kwds_616185': kwds_616185}
        # Getting the type of 'self' (line 2868)
        self_616182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2868)
        _parse_args_616183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2868, 23), self_616182, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2868)
        _parse_args_call_result_616187 = invoke(stypy.reporting.localization.Localization(__file__, 2868, 23), _parse_args_616183, *[args_616184], **kwargs_616186)
        
        # Obtaining the member '__getitem__' of a type (line 2868)
        getitem___616188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2868, 8), _parse_args_call_result_616187, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2868)
        subscript_call_result_616189 = invoke(stypy.reporting.localization.Localization(__file__, 2868, 8), getitem___616188, int_616181)
        
        # Assigning a type to the variable 'tuple_var_assignment_609362' (line 2868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2868, 8), 'tuple_var_assignment_609362', subscript_call_result_616189)
        
        # Assigning a Subscript to a Name (line 2868):
        
        # Obtaining the type of the subscript
        int_616190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2868, 8), 'int')
        
        # Call to _parse_args(...): (line 2868)
        # Getting the type of 'args' (line 2868)
        args_616193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 41), 'args', False)
        # Processing the call keyword arguments (line 2868)
        # Getting the type of 'kwds' (line 2868)
        kwds_616194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 49), 'kwds', False)
        kwargs_616195 = {'kwds_616194': kwds_616194}
        # Getting the type of 'self' (line 2868)
        self_616191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2868)
        _parse_args_616192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2868, 23), self_616191, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2868)
        _parse_args_call_result_616196 = invoke(stypy.reporting.localization.Localization(__file__, 2868, 23), _parse_args_616192, *[args_616193], **kwargs_616195)
        
        # Obtaining the member '__getitem__' of a type (line 2868)
        getitem___616197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2868, 8), _parse_args_call_result_616196, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2868)
        subscript_call_result_616198 = invoke(stypy.reporting.localization.Localization(__file__, 2868, 8), getitem___616197, int_616190)
        
        # Assigning a type to the variable 'tuple_var_assignment_609363' (line 2868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2868, 8), 'tuple_var_assignment_609363', subscript_call_result_616198)
        
        # Assigning a Subscript to a Name (line 2868):
        
        # Obtaining the type of the subscript
        int_616199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2868, 8), 'int')
        
        # Call to _parse_args(...): (line 2868)
        # Getting the type of 'args' (line 2868)
        args_616202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 41), 'args', False)
        # Processing the call keyword arguments (line 2868)
        # Getting the type of 'kwds' (line 2868)
        kwds_616203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 49), 'kwds', False)
        kwargs_616204 = {'kwds_616203': kwds_616203}
        # Getting the type of 'self' (line 2868)
        self_616200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2868)
        _parse_args_616201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2868, 23), self_616200, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2868)
        _parse_args_call_result_616205 = invoke(stypy.reporting.localization.Localization(__file__, 2868, 23), _parse_args_616201, *[args_616202], **kwargs_616204)
        
        # Obtaining the member '__getitem__' of a type (line 2868)
        getitem___616206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2868, 8), _parse_args_call_result_616205, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2868)
        subscript_call_result_616207 = invoke(stypy.reporting.localization.Localization(__file__, 2868, 8), getitem___616206, int_616199)
        
        # Assigning a type to the variable 'tuple_var_assignment_609364' (line 2868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2868, 8), 'tuple_var_assignment_609364', subscript_call_result_616207)
        
        # Assigning a Name to a Name (line 2868):
        # Getting the type of 'tuple_var_assignment_609362' (line 2868)
        tuple_var_assignment_609362_616208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 8), 'tuple_var_assignment_609362')
        # Assigning a type to the variable 'args' (line 2868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2868, 8), 'args', tuple_var_assignment_609362_616208)
        
        # Assigning a Name to a Name (line 2868):
        # Getting the type of 'tuple_var_assignment_609363' (line 2868)
        tuple_var_assignment_609363_616209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 8), 'tuple_var_assignment_609363')
        # Assigning a type to the variable 'loc' (line 2868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2868, 14), 'loc', tuple_var_assignment_609363_616209)
        
        # Assigning a Name to a Name (line 2868):
        # Getting the type of 'tuple_var_assignment_609364' (line 2868)
        tuple_var_assignment_609364_616210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2868, 8), 'tuple_var_assignment_609364')
        # Assigning a type to the variable '_' (line 2868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2868, 19), '_', tuple_var_assignment_609364_616210)
        
        # Assigning a Call to a Tuple (line 2869):
        
        # Assigning a Subscript to a Name (line 2869):
        
        # Obtaining the type of the subscript
        int_616211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2869, 8), 'int')
        
        # Call to map(...): (line 2869)
        # Processing the call arguments (line 2869)
        # Getting the type of 'asarray' (line 2869)
        asarray_616213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2869)
        tuple_616214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2869, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2869)
        # Adding element type (line 2869)
        # Getting the type of 'k' (line 2869)
        k_616215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2869, 31), tuple_616214, k_616215)
        # Adding element type (line 2869)
        # Getting the type of 'loc' (line 2869)
        loc_616216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2869, 31), tuple_616214, loc_616216)
        
        # Processing the call keyword arguments (line 2869)
        kwargs_616217 = {}
        # Getting the type of 'map' (line 2869)
        map_616212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 17), 'map', False)
        # Calling map(args, kwargs) (line 2869)
        map_call_result_616218 = invoke(stypy.reporting.localization.Localization(__file__, 2869, 17), map_616212, *[asarray_616213, tuple_616214], **kwargs_616217)
        
        # Obtaining the member '__getitem__' of a type (line 2869)
        getitem___616219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2869, 8), map_call_result_616218, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2869)
        subscript_call_result_616220 = invoke(stypy.reporting.localization.Localization(__file__, 2869, 8), getitem___616219, int_616211)
        
        # Assigning a type to the variable 'tuple_var_assignment_609365' (line 2869)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2869, 8), 'tuple_var_assignment_609365', subscript_call_result_616220)
        
        # Assigning a Subscript to a Name (line 2869):
        
        # Obtaining the type of the subscript
        int_616221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2869, 8), 'int')
        
        # Call to map(...): (line 2869)
        # Processing the call arguments (line 2869)
        # Getting the type of 'asarray' (line 2869)
        asarray_616223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2869)
        tuple_616224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2869, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2869)
        # Adding element type (line 2869)
        # Getting the type of 'k' (line 2869)
        k_616225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2869, 31), tuple_616224, k_616225)
        # Adding element type (line 2869)
        # Getting the type of 'loc' (line 2869)
        loc_616226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2869, 31), tuple_616224, loc_616226)
        
        # Processing the call keyword arguments (line 2869)
        kwargs_616227 = {}
        # Getting the type of 'map' (line 2869)
        map_616222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 17), 'map', False)
        # Calling map(args, kwargs) (line 2869)
        map_call_result_616228 = invoke(stypy.reporting.localization.Localization(__file__, 2869, 17), map_616222, *[asarray_616223, tuple_616224], **kwargs_616227)
        
        # Obtaining the member '__getitem__' of a type (line 2869)
        getitem___616229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2869, 8), map_call_result_616228, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2869)
        subscript_call_result_616230 = invoke(stypy.reporting.localization.Localization(__file__, 2869, 8), getitem___616229, int_616221)
        
        # Assigning a type to the variable 'tuple_var_assignment_609366' (line 2869)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2869, 8), 'tuple_var_assignment_609366', subscript_call_result_616230)
        
        # Assigning a Name to a Name (line 2869):
        # Getting the type of 'tuple_var_assignment_609365' (line 2869)
        tuple_var_assignment_609365_616231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 8), 'tuple_var_assignment_609365')
        # Assigning a type to the variable 'k' (line 2869)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2869, 8), 'k', tuple_var_assignment_609365_616231)
        
        # Assigning a Name to a Name (line 2869):
        # Getting the type of 'tuple_var_assignment_609366' (line 2869)
        tuple_var_assignment_609366_616232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2869, 8), 'tuple_var_assignment_609366')
        # Assigning a type to the variable 'loc' (line 2869)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2869, 11), 'loc', tuple_var_assignment_609366_616232)
        
        # Assigning a Call to a Name (line 2870):
        
        # Assigning a Call to a Name (line 2870):
        
        # Call to tuple(...): (line 2870)
        # Processing the call arguments (line 2870)
        
        # Call to map(...): (line 2870)
        # Processing the call arguments (line 2870)
        # Getting the type of 'asarray' (line 2870)
        asarray_616235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2870, 25), 'asarray', False)
        # Getting the type of 'args' (line 2870)
        args_616236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2870, 34), 'args', False)
        # Processing the call keyword arguments (line 2870)
        kwargs_616237 = {}
        # Getting the type of 'map' (line 2870)
        map_616234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2870, 21), 'map', False)
        # Calling map(args, kwargs) (line 2870)
        map_call_result_616238 = invoke(stypy.reporting.localization.Localization(__file__, 2870, 21), map_616234, *[asarray_616235, args_616236], **kwargs_616237)
        
        # Processing the call keyword arguments (line 2870)
        kwargs_616239 = {}
        # Getting the type of 'tuple' (line 2870)
        tuple_616233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2870, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 2870)
        tuple_call_result_616240 = invoke(stypy.reporting.localization.Localization(__file__, 2870, 15), tuple_616233, *[map_call_result_616238], **kwargs_616239)
        
        # Assigning a type to the variable 'args' (line 2870)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2870, 8), 'args', tuple_call_result_616240)
        
        # Assigning a Call to a Name (line 2871):
        
        # Assigning a Call to a Name (line 2871):
        
        # Call to asarray(...): (line 2871)
        # Processing the call arguments (line 2871)
        # Getting the type of 'k' (line 2871)
        k_616242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2871, 21), 'k', False)
        # Getting the type of 'loc' (line 2871)
        loc_616243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2871, 23), 'loc', False)
        # Applying the binary operator '-' (line 2871)
        result_sub_616244 = python_operator(stypy.reporting.localization.Localization(__file__, 2871, 21), '-', k_616242, loc_616243)
        
        # Processing the call keyword arguments (line 2871)
        kwargs_616245 = {}
        # Getting the type of 'asarray' (line 2871)
        asarray_616241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2871, 12), 'asarray', False)
        # Calling asarray(args, kwargs) (line 2871)
        asarray_call_result_616246 = invoke(stypy.reporting.localization.Localization(__file__, 2871, 12), asarray_616241, *[result_sub_616244], **kwargs_616245)
        
        # Assigning a type to the variable 'k' (line 2871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2871, 8), 'k', asarray_call_result_616246)
        
        # Assigning a Call to a Name (line 2872):
        
        # Assigning a Call to a Name (line 2872):
        
        # Call to _argcheck(...): (line 2872)
        # Getting the type of 'args' (line 2872)
        args_616249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2872, 32), 'args', False)
        # Processing the call keyword arguments (line 2872)
        kwargs_616250 = {}
        # Getting the type of 'self' (line 2872)
        self_616247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2872, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 2872)
        _argcheck_616248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2872, 16), self_616247, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 2872)
        _argcheck_call_result_616251 = invoke(stypy.reporting.localization.Localization(__file__, 2872, 16), _argcheck_616248, *[args_616249], **kwargs_616250)
        
        # Assigning a type to the variable 'cond0' (line 2872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2872, 8), 'cond0', _argcheck_call_result_616251)
        
        # Assigning a BinOp to a Name (line 2873):
        
        # Assigning a BinOp to a Name (line 2873):
        
        # Getting the type of 'k' (line 2873)
        k_616252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2873, 17), 'k')
        # Getting the type of 'self' (line 2873)
        self_616253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2873, 22), 'self')
        # Obtaining the member 'a' of a type (line 2873)
        a_616254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2873, 22), self_616253, 'a')
        # Applying the binary operator '>=' (line 2873)
        result_ge_616255 = python_operator(stypy.reporting.localization.Localization(__file__, 2873, 17), '>=', k_616252, a_616254)
        
        
        # Getting the type of 'k' (line 2873)
        k_616256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2873, 33), 'k')
        # Getting the type of 'self' (line 2873)
        self_616257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2873, 38), 'self')
        # Obtaining the member 'b' of a type (line 2873)
        b_616258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2873, 38), self_616257, 'b')
        # Applying the binary operator '<=' (line 2873)
        result_le_616259 = python_operator(stypy.reporting.localization.Localization(__file__, 2873, 33), '<=', k_616256, b_616258)
        
        # Applying the binary operator '&' (line 2873)
        result_and__616260 = python_operator(stypy.reporting.localization.Localization(__file__, 2873, 16), '&', result_ge_616255, result_le_616259)
        
        
        # Call to _nonzero(...): (line 2873)
        # Processing the call arguments (line 2873)
        # Getting the type of 'k' (line 2873)
        k_616263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2873, 62), 'k', False)
        # Getting the type of 'args' (line 2873)
        args_616264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2873, 66), 'args', False)
        # Processing the call keyword arguments (line 2873)
        kwargs_616265 = {}
        # Getting the type of 'self' (line 2873)
        self_616261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2873, 48), 'self', False)
        # Obtaining the member '_nonzero' of a type (line 2873)
        _nonzero_616262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2873, 48), self_616261, '_nonzero')
        # Calling _nonzero(args, kwargs) (line 2873)
        _nonzero_call_result_616266 = invoke(stypy.reporting.localization.Localization(__file__, 2873, 48), _nonzero_616262, *[k_616263, args_616264], **kwargs_616265)
        
        # Applying the binary operator '&' (line 2873)
        result_and__616267 = python_operator(stypy.reporting.localization.Localization(__file__, 2873, 46), '&', result_and__616260, _nonzero_call_result_616266)
        
        # Assigning a type to the variable 'cond1' (line 2873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2873, 8), 'cond1', result_and__616267)
        
        # Assigning a BinOp to a Name (line 2874):
        
        # Assigning a BinOp to a Name (line 2874):
        # Getting the type of 'cond0' (line 2874)
        cond0_616268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2874, 15), 'cond0')
        # Getting the type of 'cond1' (line 2874)
        cond1_616269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2874, 23), 'cond1')
        # Applying the binary operator '&' (line 2874)
        result_and__616270 = python_operator(stypy.reporting.localization.Localization(__file__, 2874, 15), '&', cond0_616268, cond1_616269)
        
        # Assigning a type to the variable 'cond' (line 2874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2874, 8), 'cond', result_and__616270)
        
        # Assigning a Call to a Name (line 2875):
        
        # Assigning a Call to a Name (line 2875):
        
        # Call to empty(...): (line 2875)
        # Processing the call arguments (line 2875)
        
        # Call to shape(...): (line 2875)
        # Processing the call arguments (line 2875)
        # Getting the type of 'cond' (line 2875)
        cond_616273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2875, 29), 'cond', False)
        # Processing the call keyword arguments (line 2875)
        kwargs_616274 = {}
        # Getting the type of 'shape' (line 2875)
        shape_616272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2875, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 2875)
        shape_call_result_616275 = invoke(stypy.reporting.localization.Localization(__file__, 2875, 23), shape_616272, *[cond_616273], **kwargs_616274)
        
        str_616276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2875, 36), 'str', 'd')
        # Processing the call keyword arguments (line 2875)
        kwargs_616277 = {}
        # Getting the type of 'empty' (line 2875)
        empty_616271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2875, 17), 'empty', False)
        # Calling empty(args, kwargs) (line 2875)
        empty_call_result_616278 = invoke(stypy.reporting.localization.Localization(__file__, 2875, 17), empty_616271, *[shape_call_result_616275, str_616276], **kwargs_616277)
        
        # Assigning a type to the variable 'output' (line 2875)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2875, 8), 'output', empty_call_result_616278)
        
        # Call to fill(...): (line 2876)
        # Processing the call arguments (line 2876)
        # Getting the type of 'NINF' (line 2876)
        NINF_616281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2876, 20), 'NINF', False)
        # Processing the call keyword arguments (line 2876)
        kwargs_616282 = {}
        # Getting the type of 'output' (line 2876)
        output_616279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2876, 8), 'output', False)
        # Obtaining the member 'fill' of a type (line 2876)
        fill_616280 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2876, 8), output_616279, 'fill')
        # Calling fill(args, kwargs) (line 2876)
        fill_call_result_616283 = invoke(stypy.reporting.localization.Localization(__file__, 2876, 8), fill_616280, *[NINF_616281], **kwargs_616282)
        
        
        # Call to place(...): (line 2877)
        # Processing the call arguments (line 2877)
        # Getting the type of 'output' (line 2877)
        output_616285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 14), 'output', False)
        int_616286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2877, 23), 'int')
        # Getting the type of 'cond0' (line 2877)
        cond0_616287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 25), 'cond0', False)
        # Applying the binary operator '-' (line 2877)
        result_sub_616288 = python_operator(stypy.reporting.localization.Localization(__file__, 2877, 23), '-', int_616286, cond0_616287)
        
        
        # Call to isnan(...): (line 2877)
        # Processing the call arguments (line 2877)
        # Getting the type of 'k' (line 2877)
        k_616291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 43), 'k', False)
        # Processing the call keyword arguments (line 2877)
        kwargs_616292 = {}
        # Getting the type of 'np' (line 2877)
        np_616289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 34), 'np', False)
        # Obtaining the member 'isnan' of a type (line 2877)
        isnan_616290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2877, 34), np_616289, 'isnan')
        # Calling isnan(args, kwargs) (line 2877)
        isnan_call_result_616293 = invoke(stypy.reporting.localization.Localization(__file__, 2877, 34), isnan_616290, *[k_616291], **kwargs_616292)
        
        # Applying the binary operator '+' (line 2877)
        result_add_616294 = python_operator(stypy.reporting.localization.Localization(__file__, 2877, 22), '+', result_sub_616288, isnan_call_result_616293)
        
        # Getting the type of 'self' (line 2877)
        self_616295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 47), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 2877)
        badvalue_616296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2877, 47), self_616295, 'badvalue')
        # Processing the call keyword arguments (line 2877)
        kwargs_616297 = {}
        # Getting the type of 'place' (line 2877)
        place_616284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2877, 8), 'place', False)
        # Calling place(args, kwargs) (line 2877)
        place_call_result_616298 = invoke(stypy.reporting.localization.Localization(__file__, 2877, 8), place_616284, *[output_616285, result_add_616294, badvalue_616296], **kwargs_616297)
        
        
        
        # Call to any(...): (line 2878)
        # Processing the call arguments (line 2878)
        # Getting the type of 'cond' (line 2878)
        cond_616301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2878, 18), 'cond', False)
        # Processing the call keyword arguments (line 2878)
        kwargs_616302 = {}
        # Getting the type of 'np' (line 2878)
        np_616299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2878, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 2878)
        any_616300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2878, 11), np_616299, 'any')
        # Calling any(args, kwargs) (line 2878)
        any_call_result_616303 = invoke(stypy.reporting.localization.Localization(__file__, 2878, 11), any_616300, *[cond_616301], **kwargs_616302)
        
        # Testing the type of an if condition (line 2878)
        if_condition_616304 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2878, 8), any_call_result_616303)
        # Assigning a type to the variable 'if_condition_616304' (line 2878)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2878, 8), 'if_condition_616304', if_condition_616304)
        # SSA begins for if statement (line 2878)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2879):
        
        # Assigning a Call to a Name (line 2879):
        
        # Call to argsreduce(...): (line 2879)
        # Processing the call arguments (line 2879)
        # Getting the type of 'cond' (line 2879)
        cond_616306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2879, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2879)
        tuple_616307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2879, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2879)
        # Adding element type (line 2879)
        # Getting the type of 'k' (line 2879)
        k_616308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2879, 43), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2879, 43), tuple_616307, k_616308)
        
        # Getting the type of 'args' (line 2879)
        args_616309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2879, 47), 'args', False)
        # Applying the binary operator '+' (line 2879)
        result_add_616310 = python_operator(stypy.reporting.localization.Localization(__file__, 2879, 42), '+', tuple_616307, args_616309)
        
        # Processing the call keyword arguments (line 2879)
        kwargs_616311 = {}
        # Getting the type of 'argsreduce' (line 2879)
        argsreduce_616305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2879, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 2879)
        argsreduce_call_result_616312 = invoke(stypy.reporting.localization.Localization(__file__, 2879, 23), argsreduce_616305, *[cond_616306, result_add_616310], **kwargs_616311)
        
        # Assigning a type to the variable 'goodargs' (line 2879)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2879, 12), 'goodargs', argsreduce_call_result_616312)
        
        # Call to place(...): (line 2880)
        # Processing the call arguments (line 2880)
        # Getting the type of 'output' (line 2880)
        output_616314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2880, 18), 'output', False)
        # Getting the type of 'cond' (line 2880)
        cond_616315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2880, 26), 'cond', False)
        
        # Call to _logpmf(...): (line 2880)
        # Getting the type of 'goodargs' (line 2880)
        goodargs_616318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2880, 46), 'goodargs', False)
        # Processing the call keyword arguments (line 2880)
        kwargs_616319 = {}
        # Getting the type of 'self' (line 2880)
        self_616316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2880, 32), 'self', False)
        # Obtaining the member '_logpmf' of a type (line 2880)
        _logpmf_616317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2880, 32), self_616316, '_logpmf')
        # Calling _logpmf(args, kwargs) (line 2880)
        _logpmf_call_result_616320 = invoke(stypy.reporting.localization.Localization(__file__, 2880, 32), _logpmf_616317, *[goodargs_616318], **kwargs_616319)
        
        # Processing the call keyword arguments (line 2880)
        kwargs_616321 = {}
        # Getting the type of 'place' (line 2880)
        place_616313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2880, 12), 'place', False)
        # Calling place(args, kwargs) (line 2880)
        place_call_result_616322 = invoke(stypy.reporting.localization.Localization(__file__, 2880, 12), place_616313, *[output_616314, cond_616315, _logpmf_call_result_616320], **kwargs_616321)
        
        # SSA join for if statement (line 2878)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 2881)
        output_616323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2881, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 2881)
        ndim_616324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2881, 11), output_616323, 'ndim')
        int_616325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2881, 26), 'int')
        # Applying the binary operator '==' (line 2881)
        result_eq_616326 = python_operator(stypy.reporting.localization.Localization(__file__, 2881, 11), '==', ndim_616324, int_616325)
        
        # Testing the type of an if condition (line 2881)
        if_condition_616327 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2881, 8), result_eq_616326)
        # Assigning a type to the variable 'if_condition_616327' (line 2881)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2881, 8), 'if_condition_616327', if_condition_616327)
        # SSA begins for if statement (line 2881)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 2882)
        tuple_616328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2882, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2882)
        
        # Getting the type of 'output' (line 2882)
        output_616329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2882, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 2882)
        getitem___616330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2882, 19), output_616329, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2882)
        subscript_call_result_616331 = invoke(stypy.reporting.localization.Localization(__file__, 2882, 19), getitem___616330, tuple_616328)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2882, 12), 'stypy_return_type', subscript_call_result_616331)
        # SSA join for if statement (line 2881)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 2883)
        output_616332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2883, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 2883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2883, 8), 'stypy_return_type', output_616332)
        
        # ################# End of 'logpmf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logpmf' in the type store
        # Getting the type of 'stypy_return_type' (line 2848)
        stypy_return_type_616333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2848, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_616333)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logpmf'
        return stypy_return_type_616333


    @norecursion
    def cdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'cdf'
        module_type_store = module_type_store.open_function_context('cdf', 2885, 4, False)
        # Assigning a type to the variable 'self' (line 2886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2886, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.cdf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.cdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.cdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.cdf.__dict__.__setitem__('stypy_function_name', 'rv_discrete.cdf')
        rv_discrete.cdf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete.cdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete.cdf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_discrete.cdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.cdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.cdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.cdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.cdf', ['k'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'cdf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'cdf(...)' code ##################

        str_616334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2904, (-1)), 'str', '\n        Cumulative distribution function of the given RV.\n\n        Parameters\n        ----------\n        k : array_like, int\n            Quantiles.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter (default=0).\n\n        Returns\n        -------\n        cdf : ndarray\n            Cumulative distribution function evaluated at `k`.\n\n        ')
        
        # Assigning a Call to a Tuple (line 2905):
        
        # Assigning a Subscript to a Name (line 2905):
        
        # Obtaining the type of the subscript
        int_616335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2905, 8), 'int')
        
        # Call to _parse_args(...): (line 2905)
        # Getting the type of 'args' (line 2905)
        args_616338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 41), 'args', False)
        # Processing the call keyword arguments (line 2905)
        # Getting the type of 'kwds' (line 2905)
        kwds_616339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 49), 'kwds', False)
        kwargs_616340 = {'kwds_616339': kwds_616339}
        # Getting the type of 'self' (line 2905)
        self_616336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2905)
        _parse_args_616337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2905, 23), self_616336, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2905)
        _parse_args_call_result_616341 = invoke(stypy.reporting.localization.Localization(__file__, 2905, 23), _parse_args_616337, *[args_616338], **kwargs_616340)
        
        # Obtaining the member '__getitem__' of a type (line 2905)
        getitem___616342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2905, 8), _parse_args_call_result_616341, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2905)
        subscript_call_result_616343 = invoke(stypy.reporting.localization.Localization(__file__, 2905, 8), getitem___616342, int_616335)
        
        # Assigning a type to the variable 'tuple_var_assignment_609367' (line 2905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2905, 8), 'tuple_var_assignment_609367', subscript_call_result_616343)
        
        # Assigning a Subscript to a Name (line 2905):
        
        # Obtaining the type of the subscript
        int_616344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2905, 8), 'int')
        
        # Call to _parse_args(...): (line 2905)
        # Getting the type of 'args' (line 2905)
        args_616347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 41), 'args', False)
        # Processing the call keyword arguments (line 2905)
        # Getting the type of 'kwds' (line 2905)
        kwds_616348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 49), 'kwds', False)
        kwargs_616349 = {'kwds_616348': kwds_616348}
        # Getting the type of 'self' (line 2905)
        self_616345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2905)
        _parse_args_616346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2905, 23), self_616345, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2905)
        _parse_args_call_result_616350 = invoke(stypy.reporting.localization.Localization(__file__, 2905, 23), _parse_args_616346, *[args_616347], **kwargs_616349)
        
        # Obtaining the member '__getitem__' of a type (line 2905)
        getitem___616351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2905, 8), _parse_args_call_result_616350, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2905)
        subscript_call_result_616352 = invoke(stypy.reporting.localization.Localization(__file__, 2905, 8), getitem___616351, int_616344)
        
        # Assigning a type to the variable 'tuple_var_assignment_609368' (line 2905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2905, 8), 'tuple_var_assignment_609368', subscript_call_result_616352)
        
        # Assigning a Subscript to a Name (line 2905):
        
        # Obtaining the type of the subscript
        int_616353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2905, 8), 'int')
        
        # Call to _parse_args(...): (line 2905)
        # Getting the type of 'args' (line 2905)
        args_616356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 41), 'args', False)
        # Processing the call keyword arguments (line 2905)
        # Getting the type of 'kwds' (line 2905)
        kwds_616357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 49), 'kwds', False)
        kwargs_616358 = {'kwds_616357': kwds_616357}
        # Getting the type of 'self' (line 2905)
        self_616354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2905)
        _parse_args_616355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2905, 23), self_616354, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2905)
        _parse_args_call_result_616359 = invoke(stypy.reporting.localization.Localization(__file__, 2905, 23), _parse_args_616355, *[args_616356], **kwargs_616358)
        
        # Obtaining the member '__getitem__' of a type (line 2905)
        getitem___616360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2905, 8), _parse_args_call_result_616359, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2905)
        subscript_call_result_616361 = invoke(stypy.reporting.localization.Localization(__file__, 2905, 8), getitem___616360, int_616353)
        
        # Assigning a type to the variable 'tuple_var_assignment_609369' (line 2905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2905, 8), 'tuple_var_assignment_609369', subscript_call_result_616361)
        
        # Assigning a Name to a Name (line 2905):
        # Getting the type of 'tuple_var_assignment_609367' (line 2905)
        tuple_var_assignment_609367_616362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 8), 'tuple_var_assignment_609367')
        # Assigning a type to the variable 'args' (line 2905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2905, 8), 'args', tuple_var_assignment_609367_616362)
        
        # Assigning a Name to a Name (line 2905):
        # Getting the type of 'tuple_var_assignment_609368' (line 2905)
        tuple_var_assignment_609368_616363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 8), 'tuple_var_assignment_609368')
        # Assigning a type to the variable 'loc' (line 2905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2905, 14), 'loc', tuple_var_assignment_609368_616363)
        
        # Assigning a Name to a Name (line 2905):
        # Getting the type of 'tuple_var_assignment_609369' (line 2905)
        tuple_var_assignment_609369_616364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2905, 8), 'tuple_var_assignment_609369')
        # Assigning a type to the variable '_' (line 2905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2905, 19), '_', tuple_var_assignment_609369_616364)
        
        # Assigning a Call to a Tuple (line 2906):
        
        # Assigning a Subscript to a Name (line 2906):
        
        # Obtaining the type of the subscript
        int_616365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2906, 8), 'int')
        
        # Call to map(...): (line 2906)
        # Processing the call arguments (line 2906)
        # Getting the type of 'asarray' (line 2906)
        asarray_616367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2906)
        tuple_616368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2906, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2906)
        # Adding element type (line 2906)
        # Getting the type of 'k' (line 2906)
        k_616369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2906, 31), tuple_616368, k_616369)
        # Adding element type (line 2906)
        # Getting the type of 'loc' (line 2906)
        loc_616370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2906, 31), tuple_616368, loc_616370)
        
        # Processing the call keyword arguments (line 2906)
        kwargs_616371 = {}
        # Getting the type of 'map' (line 2906)
        map_616366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 17), 'map', False)
        # Calling map(args, kwargs) (line 2906)
        map_call_result_616372 = invoke(stypy.reporting.localization.Localization(__file__, 2906, 17), map_616366, *[asarray_616367, tuple_616368], **kwargs_616371)
        
        # Obtaining the member '__getitem__' of a type (line 2906)
        getitem___616373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2906, 8), map_call_result_616372, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2906)
        subscript_call_result_616374 = invoke(stypy.reporting.localization.Localization(__file__, 2906, 8), getitem___616373, int_616365)
        
        # Assigning a type to the variable 'tuple_var_assignment_609370' (line 2906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2906, 8), 'tuple_var_assignment_609370', subscript_call_result_616374)
        
        # Assigning a Subscript to a Name (line 2906):
        
        # Obtaining the type of the subscript
        int_616375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2906, 8), 'int')
        
        # Call to map(...): (line 2906)
        # Processing the call arguments (line 2906)
        # Getting the type of 'asarray' (line 2906)
        asarray_616377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2906)
        tuple_616378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2906, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2906)
        # Adding element type (line 2906)
        # Getting the type of 'k' (line 2906)
        k_616379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2906, 31), tuple_616378, k_616379)
        # Adding element type (line 2906)
        # Getting the type of 'loc' (line 2906)
        loc_616380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2906, 31), tuple_616378, loc_616380)
        
        # Processing the call keyword arguments (line 2906)
        kwargs_616381 = {}
        # Getting the type of 'map' (line 2906)
        map_616376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 17), 'map', False)
        # Calling map(args, kwargs) (line 2906)
        map_call_result_616382 = invoke(stypy.reporting.localization.Localization(__file__, 2906, 17), map_616376, *[asarray_616377, tuple_616378], **kwargs_616381)
        
        # Obtaining the member '__getitem__' of a type (line 2906)
        getitem___616383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2906, 8), map_call_result_616382, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2906)
        subscript_call_result_616384 = invoke(stypy.reporting.localization.Localization(__file__, 2906, 8), getitem___616383, int_616375)
        
        # Assigning a type to the variable 'tuple_var_assignment_609371' (line 2906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2906, 8), 'tuple_var_assignment_609371', subscript_call_result_616384)
        
        # Assigning a Name to a Name (line 2906):
        # Getting the type of 'tuple_var_assignment_609370' (line 2906)
        tuple_var_assignment_609370_616385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 8), 'tuple_var_assignment_609370')
        # Assigning a type to the variable 'k' (line 2906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2906, 8), 'k', tuple_var_assignment_609370_616385)
        
        # Assigning a Name to a Name (line 2906):
        # Getting the type of 'tuple_var_assignment_609371' (line 2906)
        tuple_var_assignment_609371_616386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2906, 8), 'tuple_var_assignment_609371')
        # Assigning a type to the variable 'loc' (line 2906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2906, 11), 'loc', tuple_var_assignment_609371_616386)
        
        # Assigning a Call to a Name (line 2907):
        
        # Assigning a Call to a Name (line 2907):
        
        # Call to tuple(...): (line 2907)
        # Processing the call arguments (line 2907)
        
        # Call to map(...): (line 2907)
        # Processing the call arguments (line 2907)
        # Getting the type of 'asarray' (line 2907)
        asarray_616389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2907, 25), 'asarray', False)
        # Getting the type of 'args' (line 2907)
        args_616390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2907, 34), 'args', False)
        # Processing the call keyword arguments (line 2907)
        kwargs_616391 = {}
        # Getting the type of 'map' (line 2907)
        map_616388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2907, 21), 'map', False)
        # Calling map(args, kwargs) (line 2907)
        map_call_result_616392 = invoke(stypy.reporting.localization.Localization(__file__, 2907, 21), map_616388, *[asarray_616389, args_616390], **kwargs_616391)
        
        # Processing the call keyword arguments (line 2907)
        kwargs_616393 = {}
        # Getting the type of 'tuple' (line 2907)
        tuple_616387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2907, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 2907)
        tuple_call_result_616394 = invoke(stypy.reporting.localization.Localization(__file__, 2907, 15), tuple_616387, *[map_call_result_616392], **kwargs_616393)
        
        # Assigning a type to the variable 'args' (line 2907)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2907, 8), 'args', tuple_call_result_616394)
        
        # Assigning a Call to a Name (line 2908):
        
        # Assigning a Call to a Name (line 2908):
        
        # Call to asarray(...): (line 2908)
        # Processing the call arguments (line 2908)
        # Getting the type of 'k' (line 2908)
        k_616396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2908, 21), 'k', False)
        # Getting the type of 'loc' (line 2908)
        loc_616397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2908, 23), 'loc', False)
        # Applying the binary operator '-' (line 2908)
        result_sub_616398 = python_operator(stypy.reporting.localization.Localization(__file__, 2908, 21), '-', k_616396, loc_616397)
        
        # Processing the call keyword arguments (line 2908)
        kwargs_616399 = {}
        # Getting the type of 'asarray' (line 2908)
        asarray_616395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2908, 12), 'asarray', False)
        # Calling asarray(args, kwargs) (line 2908)
        asarray_call_result_616400 = invoke(stypy.reporting.localization.Localization(__file__, 2908, 12), asarray_616395, *[result_sub_616398], **kwargs_616399)
        
        # Assigning a type to the variable 'k' (line 2908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2908, 8), 'k', asarray_call_result_616400)
        
        # Assigning a Call to a Name (line 2909):
        
        # Assigning a Call to a Name (line 2909):
        
        # Call to _argcheck(...): (line 2909)
        # Getting the type of 'args' (line 2909)
        args_616403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2909, 32), 'args', False)
        # Processing the call keyword arguments (line 2909)
        kwargs_616404 = {}
        # Getting the type of 'self' (line 2909)
        self_616401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2909, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 2909)
        _argcheck_616402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2909, 16), self_616401, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 2909)
        _argcheck_call_result_616405 = invoke(stypy.reporting.localization.Localization(__file__, 2909, 16), _argcheck_616402, *[args_616403], **kwargs_616404)
        
        # Assigning a type to the variable 'cond0' (line 2909)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2909, 8), 'cond0', _argcheck_call_result_616405)
        
        # Assigning a BinOp to a Name (line 2910):
        
        # Assigning a BinOp to a Name (line 2910):
        
        # Getting the type of 'k' (line 2910)
        k_616406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2910, 17), 'k')
        # Getting the type of 'self' (line 2910)
        self_616407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2910, 22), 'self')
        # Obtaining the member 'a' of a type (line 2910)
        a_616408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2910, 22), self_616407, 'a')
        # Applying the binary operator '>=' (line 2910)
        result_ge_616409 = python_operator(stypy.reporting.localization.Localization(__file__, 2910, 17), '>=', k_616406, a_616408)
        
        
        # Getting the type of 'k' (line 2910)
        k_616410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2910, 33), 'k')
        # Getting the type of 'self' (line 2910)
        self_616411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2910, 37), 'self')
        # Obtaining the member 'b' of a type (line 2910)
        b_616412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2910, 37), self_616411, 'b')
        # Applying the binary operator '<' (line 2910)
        result_lt_616413 = python_operator(stypy.reporting.localization.Localization(__file__, 2910, 33), '<', k_616410, b_616412)
        
        # Applying the binary operator '&' (line 2910)
        result_and__616414 = python_operator(stypy.reporting.localization.Localization(__file__, 2910, 16), '&', result_ge_616409, result_lt_616413)
        
        # Assigning a type to the variable 'cond1' (line 2910)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2910, 8), 'cond1', result_and__616414)
        
        # Assigning a Compare to a Name (line 2911):
        
        # Assigning a Compare to a Name (line 2911):
        
        # Getting the type of 'k' (line 2911)
        k_616415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2911, 17), 'k')
        # Getting the type of 'self' (line 2911)
        self_616416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2911, 22), 'self')
        # Obtaining the member 'b' of a type (line 2911)
        b_616417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2911, 22), self_616416, 'b')
        # Applying the binary operator '>=' (line 2911)
        result_ge_616418 = python_operator(stypy.reporting.localization.Localization(__file__, 2911, 17), '>=', k_616415, b_616417)
        
        # Assigning a type to the variable 'cond2' (line 2911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2911, 8), 'cond2', result_ge_616418)
        
        # Assigning a BinOp to a Name (line 2912):
        
        # Assigning a BinOp to a Name (line 2912):
        # Getting the type of 'cond0' (line 2912)
        cond0_616419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2912, 15), 'cond0')
        # Getting the type of 'cond1' (line 2912)
        cond1_616420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2912, 23), 'cond1')
        # Applying the binary operator '&' (line 2912)
        result_and__616421 = python_operator(stypy.reporting.localization.Localization(__file__, 2912, 15), '&', cond0_616419, cond1_616420)
        
        # Assigning a type to the variable 'cond' (line 2912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2912, 8), 'cond', result_and__616421)
        
        # Assigning a Call to a Name (line 2913):
        
        # Assigning a Call to a Name (line 2913):
        
        # Call to zeros(...): (line 2913)
        # Processing the call arguments (line 2913)
        
        # Call to shape(...): (line 2913)
        # Processing the call arguments (line 2913)
        # Getting the type of 'cond' (line 2913)
        cond_616424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2913, 29), 'cond', False)
        # Processing the call keyword arguments (line 2913)
        kwargs_616425 = {}
        # Getting the type of 'shape' (line 2913)
        shape_616423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2913, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 2913)
        shape_call_result_616426 = invoke(stypy.reporting.localization.Localization(__file__, 2913, 23), shape_616423, *[cond_616424], **kwargs_616425)
        
        str_616427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2913, 36), 'str', 'd')
        # Processing the call keyword arguments (line 2913)
        kwargs_616428 = {}
        # Getting the type of 'zeros' (line 2913)
        zeros_616422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2913, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 2913)
        zeros_call_result_616429 = invoke(stypy.reporting.localization.Localization(__file__, 2913, 17), zeros_616422, *[shape_call_result_616426, str_616427], **kwargs_616428)
        
        # Assigning a type to the variable 'output' (line 2913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2913, 8), 'output', zeros_call_result_616429)
        
        # Call to place(...): (line 2914)
        # Processing the call arguments (line 2914)
        # Getting the type of 'output' (line 2914)
        output_616431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2914, 14), 'output', False)
        int_616432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2914, 23), 'int')
        # Getting the type of 'cond0' (line 2914)
        cond0_616433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2914, 25), 'cond0', False)
        # Applying the binary operator '-' (line 2914)
        result_sub_616434 = python_operator(stypy.reporting.localization.Localization(__file__, 2914, 23), '-', int_616432, cond0_616433)
        
        
        # Call to isnan(...): (line 2914)
        # Processing the call arguments (line 2914)
        # Getting the type of 'k' (line 2914)
        k_616437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2914, 43), 'k', False)
        # Processing the call keyword arguments (line 2914)
        kwargs_616438 = {}
        # Getting the type of 'np' (line 2914)
        np_616435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2914, 34), 'np', False)
        # Obtaining the member 'isnan' of a type (line 2914)
        isnan_616436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2914, 34), np_616435, 'isnan')
        # Calling isnan(args, kwargs) (line 2914)
        isnan_call_result_616439 = invoke(stypy.reporting.localization.Localization(__file__, 2914, 34), isnan_616436, *[k_616437], **kwargs_616438)
        
        # Applying the binary operator '+' (line 2914)
        result_add_616440 = python_operator(stypy.reporting.localization.Localization(__file__, 2914, 22), '+', result_sub_616434, isnan_call_result_616439)
        
        # Getting the type of 'self' (line 2914)
        self_616441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2914, 47), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 2914)
        badvalue_616442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2914, 47), self_616441, 'badvalue')
        # Processing the call keyword arguments (line 2914)
        kwargs_616443 = {}
        # Getting the type of 'place' (line 2914)
        place_616430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2914, 8), 'place', False)
        # Calling place(args, kwargs) (line 2914)
        place_call_result_616444 = invoke(stypy.reporting.localization.Localization(__file__, 2914, 8), place_616430, *[output_616431, result_add_616440, badvalue_616442], **kwargs_616443)
        
        
        # Call to place(...): (line 2915)
        # Processing the call arguments (line 2915)
        # Getting the type of 'output' (line 2915)
        output_616446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2915, 14), 'output', False)
        # Getting the type of 'cond2' (line 2915)
        cond2_616447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2915, 22), 'cond2', False)
        
        # Getting the type of 'cond0' (line 2915)
        cond0_616448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2915, 29), 'cond0', False)
        # Getting the type of 'cond0' (line 2915)
        cond0_616449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2915, 38), 'cond0', False)
        # Applying the binary operator '==' (line 2915)
        result_eq_616450 = python_operator(stypy.reporting.localization.Localization(__file__, 2915, 29), '==', cond0_616448, cond0_616449)
        
        # Applying the binary operator '*' (line 2915)
        result_mul_616451 = python_operator(stypy.reporting.localization.Localization(__file__, 2915, 22), '*', cond2_616447, result_eq_616450)
        
        float_616452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2915, 46), 'float')
        # Processing the call keyword arguments (line 2915)
        kwargs_616453 = {}
        # Getting the type of 'place' (line 2915)
        place_616445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2915, 8), 'place', False)
        # Calling place(args, kwargs) (line 2915)
        place_call_result_616454 = invoke(stypy.reporting.localization.Localization(__file__, 2915, 8), place_616445, *[output_616446, result_mul_616451, float_616452], **kwargs_616453)
        
        
        
        # Call to any(...): (line 2917)
        # Processing the call arguments (line 2917)
        # Getting the type of 'cond' (line 2917)
        cond_616457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2917, 18), 'cond', False)
        # Processing the call keyword arguments (line 2917)
        kwargs_616458 = {}
        # Getting the type of 'np' (line 2917)
        np_616455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2917, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 2917)
        any_616456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2917, 11), np_616455, 'any')
        # Calling any(args, kwargs) (line 2917)
        any_call_result_616459 = invoke(stypy.reporting.localization.Localization(__file__, 2917, 11), any_616456, *[cond_616457], **kwargs_616458)
        
        # Testing the type of an if condition (line 2917)
        if_condition_616460 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2917, 8), any_call_result_616459)
        # Assigning a type to the variable 'if_condition_616460' (line 2917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2917, 8), 'if_condition_616460', if_condition_616460)
        # SSA begins for if statement (line 2917)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2918):
        
        # Assigning a Call to a Name (line 2918):
        
        # Call to argsreduce(...): (line 2918)
        # Processing the call arguments (line 2918)
        # Getting the type of 'cond' (line 2918)
        cond_616462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2918, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2918)
        tuple_616463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2918, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2918)
        # Adding element type (line 2918)
        # Getting the type of 'k' (line 2918)
        k_616464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2918, 43), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2918, 43), tuple_616463, k_616464)
        
        # Getting the type of 'args' (line 2918)
        args_616465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2918, 47), 'args', False)
        # Applying the binary operator '+' (line 2918)
        result_add_616466 = python_operator(stypy.reporting.localization.Localization(__file__, 2918, 42), '+', tuple_616463, args_616465)
        
        # Processing the call keyword arguments (line 2918)
        kwargs_616467 = {}
        # Getting the type of 'argsreduce' (line 2918)
        argsreduce_616461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2918, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 2918)
        argsreduce_call_result_616468 = invoke(stypy.reporting.localization.Localization(__file__, 2918, 23), argsreduce_616461, *[cond_616462, result_add_616466], **kwargs_616467)
        
        # Assigning a type to the variable 'goodargs' (line 2918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2918, 12), 'goodargs', argsreduce_call_result_616468)
        
        # Call to place(...): (line 2919)
        # Processing the call arguments (line 2919)
        # Getting the type of 'output' (line 2919)
        output_616470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2919, 18), 'output', False)
        # Getting the type of 'cond' (line 2919)
        cond_616471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2919, 26), 'cond', False)
        
        # Call to clip(...): (line 2919)
        # Processing the call arguments (line 2919)
        
        # Call to _cdf(...): (line 2919)
        # Getting the type of 'goodargs' (line 2919)
        goodargs_616476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2919, 51), 'goodargs', False)
        # Processing the call keyword arguments (line 2919)
        kwargs_616477 = {}
        # Getting the type of 'self' (line 2919)
        self_616474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2919, 40), 'self', False)
        # Obtaining the member '_cdf' of a type (line 2919)
        _cdf_616475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2919, 40), self_616474, '_cdf')
        # Calling _cdf(args, kwargs) (line 2919)
        _cdf_call_result_616478 = invoke(stypy.reporting.localization.Localization(__file__, 2919, 40), _cdf_616475, *[goodargs_616476], **kwargs_616477)
        
        int_616479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2919, 62), 'int')
        int_616480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2919, 65), 'int')
        # Processing the call keyword arguments (line 2919)
        kwargs_616481 = {}
        # Getting the type of 'np' (line 2919)
        np_616472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2919, 32), 'np', False)
        # Obtaining the member 'clip' of a type (line 2919)
        clip_616473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2919, 32), np_616472, 'clip')
        # Calling clip(args, kwargs) (line 2919)
        clip_call_result_616482 = invoke(stypy.reporting.localization.Localization(__file__, 2919, 32), clip_616473, *[_cdf_call_result_616478, int_616479, int_616480], **kwargs_616481)
        
        # Processing the call keyword arguments (line 2919)
        kwargs_616483 = {}
        # Getting the type of 'place' (line 2919)
        place_616469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2919, 12), 'place', False)
        # Calling place(args, kwargs) (line 2919)
        place_call_result_616484 = invoke(stypy.reporting.localization.Localization(__file__, 2919, 12), place_616469, *[output_616470, cond_616471, clip_call_result_616482], **kwargs_616483)
        
        # SSA join for if statement (line 2917)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 2920)
        output_616485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2920, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 2920)
        ndim_616486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2920, 11), output_616485, 'ndim')
        int_616487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2920, 26), 'int')
        # Applying the binary operator '==' (line 2920)
        result_eq_616488 = python_operator(stypy.reporting.localization.Localization(__file__, 2920, 11), '==', ndim_616486, int_616487)
        
        # Testing the type of an if condition (line 2920)
        if_condition_616489 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2920, 8), result_eq_616488)
        # Assigning a type to the variable 'if_condition_616489' (line 2920)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2920, 8), 'if_condition_616489', if_condition_616489)
        # SSA begins for if statement (line 2920)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 2921)
        tuple_616490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2921, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2921)
        
        # Getting the type of 'output' (line 2921)
        output_616491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2921, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 2921)
        getitem___616492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2921, 19), output_616491, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2921)
        subscript_call_result_616493 = invoke(stypy.reporting.localization.Localization(__file__, 2921, 19), getitem___616492, tuple_616490)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2921, 12), 'stypy_return_type', subscript_call_result_616493)
        # SSA join for if statement (line 2920)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 2922)
        output_616494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2922, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 2922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2922, 8), 'stypy_return_type', output_616494)
        
        # ################# End of 'cdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'cdf' in the type store
        # Getting the type of 'stypy_return_type' (line 2885)
        stypy_return_type_616495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2885, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_616495)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'cdf'
        return stypy_return_type_616495


    @norecursion
    def logcdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logcdf'
        module_type_store = module_type_store.open_function_context('logcdf', 2924, 4, False)
        # Assigning a type to the variable 'self' (line 2925)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2925, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.logcdf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.logcdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.logcdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.logcdf.__dict__.__setitem__('stypy_function_name', 'rv_discrete.logcdf')
        rv_discrete.logcdf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete.logcdf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete.logcdf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_discrete.logcdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.logcdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.logcdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.logcdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.logcdf', ['k'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logcdf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logcdf(...)' code ##################

        str_616496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2943, (-1)), 'str', '\n        Log of the cumulative distribution function at k of the given RV.\n\n        Parameters\n        ----------\n        k : array_like, int\n            Quantiles.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter (default=0).\n\n        Returns\n        -------\n        logcdf : array_like\n            Log of the cumulative distribution function evaluated at k.\n\n        ')
        
        # Assigning a Call to a Tuple (line 2944):
        
        # Assigning a Subscript to a Name (line 2944):
        
        # Obtaining the type of the subscript
        int_616497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2944, 8), 'int')
        
        # Call to _parse_args(...): (line 2944)
        # Getting the type of 'args' (line 2944)
        args_616500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 41), 'args', False)
        # Processing the call keyword arguments (line 2944)
        # Getting the type of 'kwds' (line 2944)
        kwds_616501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 49), 'kwds', False)
        kwargs_616502 = {'kwds_616501': kwds_616501}
        # Getting the type of 'self' (line 2944)
        self_616498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2944)
        _parse_args_616499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2944, 23), self_616498, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2944)
        _parse_args_call_result_616503 = invoke(stypy.reporting.localization.Localization(__file__, 2944, 23), _parse_args_616499, *[args_616500], **kwargs_616502)
        
        # Obtaining the member '__getitem__' of a type (line 2944)
        getitem___616504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2944, 8), _parse_args_call_result_616503, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2944)
        subscript_call_result_616505 = invoke(stypy.reporting.localization.Localization(__file__, 2944, 8), getitem___616504, int_616497)
        
        # Assigning a type to the variable 'tuple_var_assignment_609372' (line 2944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2944, 8), 'tuple_var_assignment_609372', subscript_call_result_616505)
        
        # Assigning a Subscript to a Name (line 2944):
        
        # Obtaining the type of the subscript
        int_616506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2944, 8), 'int')
        
        # Call to _parse_args(...): (line 2944)
        # Getting the type of 'args' (line 2944)
        args_616509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 41), 'args', False)
        # Processing the call keyword arguments (line 2944)
        # Getting the type of 'kwds' (line 2944)
        kwds_616510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 49), 'kwds', False)
        kwargs_616511 = {'kwds_616510': kwds_616510}
        # Getting the type of 'self' (line 2944)
        self_616507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2944)
        _parse_args_616508 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2944, 23), self_616507, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2944)
        _parse_args_call_result_616512 = invoke(stypy.reporting.localization.Localization(__file__, 2944, 23), _parse_args_616508, *[args_616509], **kwargs_616511)
        
        # Obtaining the member '__getitem__' of a type (line 2944)
        getitem___616513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2944, 8), _parse_args_call_result_616512, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2944)
        subscript_call_result_616514 = invoke(stypy.reporting.localization.Localization(__file__, 2944, 8), getitem___616513, int_616506)
        
        # Assigning a type to the variable 'tuple_var_assignment_609373' (line 2944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2944, 8), 'tuple_var_assignment_609373', subscript_call_result_616514)
        
        # Assigning a Subscript to a Name (line 2944):
        
        # Obtaining the type of the subscript
        int_616515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2944, 8), 'int')
        
        # Call to _parse_args(...): (line 2944)
        # Getting the type of 'args' (line 2944)
        args_616518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 41), 'args', False)
        # Processing the call keyword arguments (line 2944)
        # Getting the type of 'kwds' (line 2944)
        kwds_616519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 49), 'kwds', False)
        kwargs_616520 = {'kwds_616519': kwds_616519}
        # Getting the type of 'self' (line 2944)
        self_616516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2944)
        _parse_args_616517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2944, 23), self_616516, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2944)
        _parse_args_call_result_616521 = invoke(stypy.reporting.localization.Localization(__file__, 2944, 23), _parse_args_616517, *[args_616518], **kwargs_616520)
        
        # Obtaining the member '__getitem__' of a type (line 2944)
        getitem___616522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2944, 8), _parse_args_call_result_616521, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2944)
        subscript_call_result_616523 = invoke(stypy.reporting.localization.Localization(__file__, 2944, 8), getitem___616522, int_616515)
        
        # Assigning a type to the variable 'tuple_var_assignment_609374' (line 2944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2944, 8), 'tuple_var_assignment_609374', subscript_call_result_616523)
        
        # Assigning a Name to a Name (line 2944):
        # Getting the type of 'tuple_var_assignment_609372' (line 2944)
        tuple_var_assignment_609372_616524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 8), 'tuple_var_assignment_609372')
        # Assigning a type to the variable 'args' (line 2944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2944, 8), 'args', tuple_var_assignment_609372_616524)
        
        # Assigning a Name to a Name (line 2944):
        # Getting the type of 'tuple_var_assignment_609373' (line 2944)
        tuple_var_assignment_609373_616525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 8), 'tuple_var_assignment_609373')
        # Assigning a type to the variable 'loc' (line 2944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2944, 14), 'loc', tuple_var_assignment_609373_616525)
        
        # Assigning a Name to a Name (line 2944):
        # Getting the type of 'tuple_var_assignment_609374' (line 2944)
        tuple_var_assignment_609374_616526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2944, 8), 'tuple_var_assignment_609374')
        # Assigning a type to the variable '_' (line 2944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2944, 19), '_', tuple_var_assignment_609374_616526)
        
        # Assigning a Call to a Tuple (line 2945):
        
        # Assigning a Subscript to a Name (line 2945):
        
        # Obtaining the type of the subscript
        int_616527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2945, 8), 'int')
        
        # Call to map(...): (line 2945)
        # Processing the call arguments (line 2945)
        # Getting the type of 'asarray' (line 2945)
        asarray_616529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2945)
        tuple_616530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2945, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2945)
        # Adding element type (line 2945)
        # Getting the type of 'k' (line 2945)
        k_616531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2945, 31), tuple_616530, k_616531)
        # Adding element type (line 2945)
        # Getting the type of 'loc' (line 2945)
        loc_616532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2945, 31), tuple_616530, loc_616532)
        
        # Processing the call keyword arguments (line 2945)
        kwargs_616533 = {}
        # Getting the type of 'map' (line 2945)
        map_616528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 17), 'map', False)
        # Calling map(args, kwargs) (line 2945)
        map_call_result_616534 = invoke(stypy.reporting.localization.Localization(__file__, 2945, 17), map_616528, *[asarray_616529, tuple_616530], **kwargs_616533)
        
        # Obtaining the member '__getitem__' of a type (line 2945)
        getitem___616535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2945, 8), map_call_result_616534, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2945)
        subscript_call_result_616536 = invoke(stypy.reporting.localization.Localization(__file__, 2945, 8), getitem___616535, int_616527)
        
        # Assigning a type to the variable 'tuple_var_assignment_609375' (line 2945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2945, 8), 'tuple_var_assignment_609375', subscript_call_result_616536)
        
        # Assigning a Subscript to a Name (line 2945):
        
        # Obtaining the type of the subscript
        int_616537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2945, 8), 'int')
        
        # Call to map(...): (line 2945)
        # Processing the call arguments (line 2945)
        # Getting the type of 'asarray' (line 2945)
        asarray_616539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2945)
        tuple_616540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2945, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2945)
        # Adding element type (line 2945)
        # Getting the type of 'k' (line 2945)
        k_616541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2945, 31), tuple_616540, k_616541)
        # Adding element type (line 2945)
        # Getting the type of 'loc' (line 2945)
        loc_616542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2945, 31), tuple_616540, loc_616542)
        
        # Processing the call keyword arguments (line 2945)
        kwargs_616543 = {}
        # Getting the type of 'map' (line 2945)
        map_616538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 17), 'map', False)
        # Calling map(args, kwargs) (line 2945)
        map_call_result_616544 = invoke(stypy.reporting.localization.Localization(__file__, 2945, 17), map_616538, *[asarray_616539, tuple_616540], **kwargs_616543)
        
        # Obtaining the member '__getitem__' of a type (line 2945)
        getitem___616545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2945, 8), map_call_result_616544, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2945)
        subscript_call_result_616546 = invoke(stypy.reporting.localization.Localization(__file__, 2945, 8), getitem___616545, int_616537)
        
        # Assigning a type to the variable 'tuple_var_assignment_609376' (line 2945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2945, 8), 'tuple_var_assignment_609376', subscript_call_result_616546)
        
        # Assigning a Name to a Name (line 2945):
        # Getting the type of 'tuple_var_assignment_609375' (line 2945)
        tuple_var_assignment_609375_616547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 8), 'tuple_var_assignment_609375')
        # Assigning a type to the variable 'k' (line 2945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2945, 8), 'k', tuple_var_assignment_609375_616547)
        
        # Assigning a Name to a Name (line 2945):
        # Getting the type of 'tuple_var_assignment_609376' (line 2945)
        tuple_var_assignment_609376_616548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2945, 8), 'tuple_var_assignment_609376')
        # Assigning a type to the variable 'loc' (line 2945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2945, 11), 'loc', tuple_var_assignment_609376_616548)
        
        # Assigning a Call to a Name (line 2946):
        
        # Assigning a Call to a Name (line 2946):
        
        # Call to tuple(...): (line 2946)
        # Processing the call arguments (line 2946)
        
        # Call to map(...): (line 2946)
        # Processing the call arguments (line 2946)
        # Getting the type of 'asarray' (line 2946)
        asarray_616551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2946, 25), 'asarray', False)
        # Getting the type of 'args' (line 2946)
        args_616552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2946, 34), 'args', False)
        # Processing the call keyword arguments (line 2946)
        kwargs_616553 = {}
        # Getting the type of 'map' (line 2946)
        map_616550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2946, 21), 'map', False)
        # Calling map(args, kwargs) (line 2946)
        map_call_result_616554 = invoke(stypy.reporting.localization.Localization(__file__, 2946, 21), map_616550, *[asarray_616551, args_616552], **kwargs_616553)
        
        # Processing the call keyword arguments (line 2946)
        kwargs_616555 = {}
        # Getting the type of 'tuple' (line 2946)
        tuple_616549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2946, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 2946)
        tuple_call_result_616556 = invoke(stypy.reporting.localization.Localization(__file__, 2946, 15), tuple_616549, *[map_call_result_616554], **kwargs_616555)
        
        # Assigning a type to the variable 'args' (line 2946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2946, 8), 'args', tuple_call_result_616556)
        
        # Assigning a Call to a Name (line 2947):
        
        # Assigning a Call to a Name (line 2947):
        
        # Call to asarray(...): (line 2947)
        # Processing the call arguments (line 2947)
        # Getting the type of 'k' (line 2947)
        k_616558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2947, 21), 'k', False)
        # Getting the type of 'loc' (line 2947)
        loc_616559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2947, 23), 'loc', False)
        # Applying the binary operator '-' (line 2947)
        result_sub_616560 = python_operator(stypy.reporting.localization.Localization(__file__, 2947, 21), '-', k_616558, loc_616559)
        
        # Processing the call keyword arguments (line 2947)
        kwargs_616561 = {}
        # Getting the type of 'asarray' (line 2947)
        asarray_616557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2947, 12), 'asarray', False)
        # Calling asarray(args, kwargs) (line 2947)
        asarray_call_result_616562 = invoke(stypy.reporting.localization.Localization(__file__, 2947, 12), asarray_616557, *[result_sub_616560], **kwargs_616561)
        
        # Assigning a type to the variable 'k' (line 2947)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2947, 8), 'k', asarray_call_result_616562)
        
        # Assigning a Call to a Name (line 2948):
        
        # Assigning a Call to a Name (line 2948):
        
        # Call to _argcheck(...): (line 2948)
        # Getting the type of 'args' (line 2948)
        args_616565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2948, 32), 'args', False)
        # Processing the call keyword arguments (line 2948)
        kwargs_616566 = {}
        # Getting the type of 'self' (line 2948)
        self_616563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2948, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 2948)
        _argcheck_616564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2948, 16), self_616563, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 2948)
        _argcheck_call_result_616567 = invoke(stypy.reporting.localization.Localization(__file__, 2948, 16), _argcheck_616564, *[args_616565], **kwargs_616566)
        
        # Assigning a type to the variable 'cond0' (line 2948)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2948, 8), 'cond0', _argcheck_call_result_616567)
        
        # Assigning a BinOp to a Name (line 2949):
        
        # Assigning a BinOp to a Name (line 2949):
        
        # Getting the type of 'k' (line 2949)
        k_616568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2949, 17), 'k')
        # Getting the type of 'self' (line 2949)
        self_616569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2949, 22), 'self')
        # Obtaining the member 'a' of a type (line 2949)
        a_616570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2949, 22), self_616569, 'a')
        # Applying the binary operator '>=' (line 2949)
        result_ge_616571 = python_operator(stypy.reporting.localization.Localization(__file__, 2949, 17), '>=', k_616568, a_616570)
        
        
        # Getting the type of 'k' (line 2949)
        k_616572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2949, 33), 'k')
        # Getting the type of 'self' (line 2949)
        self_616573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2949, 37), 'self')
        # Obtaining the member 'b' of a type (line 2949)
        b_616574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2949, 37), self_616573, 'b')
        # Applying the binary operator '<' (line 2949)
        result_lt_616575 = python_operator(stypy.reporting.localization.Localization(__file__, 2949, 33), '<', k_616572, b_616574)
        
        # Applying the binary operator '&' (line 2949)
        result_and__616576 = python_operator(stypy.reporting.localization.Localization(__file__, 2949, 16), '&', result_ge_616571, result_lt_616575)
        
        # Assigning a type to the variable 'cond1' (line 2949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2949, 8), 'cond1', result_and__616576)
        
        # Assigning a Compare to a Name (line 2950):
        
        # Assigning a Compare to a Name (line 2950):
        
        # Getting the type of 'k' (line 2950)
        k_616577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2950, 17), 'k')
        # Getting the type of 'self' (line 2950)
        self_616578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2950, 22), 'self')
        # Obtaining the member 'b' of a type (line 2950)
        b_616579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2950, 22), self_616578, 'b')
        # Applying the binary operator '>=' (line 2950)
        result_ge_616580 = python_operator(stypy.reporting.localization.Localization(__file__, 2950, 17), '>=', k_616577, b_616579)
        
        # Assigning a type to the variable 'cond2' (line 2950)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2950, 8), 'cond2', result_ge_616580)
        
        # Assigning a BinOp to a Name (line 2951):
        
        # Assigning a BinOp to a Name (line 2951):
        # Getting the type of 'cond0' (line 2951)
        cond0_616581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2951, 15), 'cond0')
        # Getting the type of 'cond1' (line 2951)
        cond1_616582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2951, 23), 'cond1')
        # Applying the binary operator '&' (line 2951)
        result_and__616583 = python_operator(stypy.reporting.localization.Localization(__file__, 2951, 15), '&', cond0_616581, cond1_616582)
        
        # Assigning a type to the variable 'cond' (line 2951)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2951, 8), 'cond', result_and__616583)
        
        # Assigning a Call to a Name (line 2952):
        
        # Assigning a Call to a Name (line 2952):
        
        # Call to empty(...): (line 2952)
        # Processing the call arguments (line 2952)
        
        # Call to shape(...): (line 2952)
        # Processing the call arguments (line 2952)
        # Getting the type of 'cond' (line 2952)
        cond_616586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2952, 29), 'cond', False)
        # Processing the call keyword arguments (line 2952)
        kwargs_616587 = {}
        # Getting the type of 'shape' (line 2952)
        shape_616585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2952, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 2952)
        shape_call_result_616588 = invoke(stypy.reporting.localization.Localization(__file__, 2952, 23), shape_616585, *[cond_616586], **kwargs_616587)
        
        str_616589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2952, 36), 'str', 'd')
        # Processing the call keyword arguments (line 2952)
        kwargs_616590 = {}
        # Getting the type of 'empty' (line 2952)
        empty_616584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2952, 17), 'empty', False)
        # Calling empty(args, kwargs) (line 2952)
        empty_call_result_616591 = invoke(stypy.reporting.localization.Localization(__file__, 2952, 17), empty_616584, *[shape_call_result_616588, str_616589], **kwargs_616590)
        
        # Assigning a type to the variable 'output' (line 2952)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2952, 8), 'output', empty_call_result_616591)
        
        # Call to fill(...): (line 2953)
        # Processing the call arguments (line 2953)
        # Getting the type of 'NINF' (line 2953)
        NINF_616594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2953, 20), 'NINF', False)
        # Processing the call keyword arguments (line 2953)
        kwargs_616595 = {}
        # Getting the type of 'output' (line 2953)
        output_616592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2953, 8), 'output', False)
        # Obtaining the member 'fill' of a type (line 2953)
        fill_616593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2953, 8), output_616592, 'fill')
        # Calling fill(args, kwargs) (line 2953)
        fill_call_result_616596 = invoke(stypy.reporting.localization.Localization(__file__, 2953, 8), fill_616593, *[NINF_616594], **kwargs_616595)
        
        
        # Call to place(...): (line 2954)
        # Processing the call arguments (line 2954)
        # Getting the type of 'output' (line 2954)
        output_616598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2954, 14), 'output', False)
        int_616599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2954, 23), 'int')
        # Getting the type of 'cond0' (line 2954)
        cond0_616600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2954, 25), 'cond0', False)
        # Applying the binary operator '-' (line 2954)
        result_sub_616601 = python_operator(stypy.reporting.localization.Localization(__file__, 2954, 23), '-', int_616599, cond0_616600)
        
        
        # Call to isnan(...): (line 2954)
        # Processing the call arguments (line 2954)
        # Getting the type of 'k' (line 2954)
        k_616604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2954, 43), 'k', False)
        # Processing the call keyword arguments (line 2954)
        kwargs_616605 = {}
        # Getting the type of 'np' (line 2954)
        np_616602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2954, 34), 'np', False)
        # Obtaining the member 'isnan' of a type (line 2954)
        isnan_616603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2954, 34), np_616602, 'isnan')
        # Calling isnan(args, kwargs) (line 2954)
        isnan_call_result_616606 = invoke(stypy.reporting.localization.Localization(__file__, 2954, 34), isnan_616603, *[k_616604], **kwargs_616605)
        
        # Applying the binary operator '+' (line 2954)
        result_add_616607 = python_operator(stypy.reporting.localization.Localization(__file__, 2954, 22), '+', result_sub_616601, isnan_call_result_616606)
        
        # Getting the type of 'self' (line 2954)
        self_616608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2954, 47), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 2954)
        badvalue_616609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2954, 47), self_616608, 'badvalue')
        # Processing the call keyword arguments (line 2954)
        kwargs_616610 = {}
        # Getting the type of 'place' (line 2954)
        place_616597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2954, 8), 'place', False)
        # Calling place(args, kwargs) (line 2954)
        place_call_result_616611 = invoke(stypy.reporting.localization.Localization(__file__, 2954, 8), place_616597, *[output_616598, result_add_616607, badvalue_616609], **kwargs_616610)
        
        
        # Call to place(...): (line 2955)
        # Processing the call arguments (line 2955)
        # Getting the type of 'output' (line 2955)
        output_616613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2955, 14), 'output', False)
        # Getting the type of 'cond2' (line 2955)
        cond2_616614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2955, 22), 'cond2', False)
        
        # Getting the type of 'cond0' (line 2955)
        cond0_616615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2955, 29), 'cond0', False)
        # Getting the type of 'cond0' (line 2955)
        cond0_616616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2955, 38), 'cond0', False)
        # Applying the binary operator '==' (line 2955)
        result_eq_616617 = python_operator(stypy.reporting.localization.Localization(__file__, 2955, 29), '==', cond0_616615, cond0_616616)
        
        # Applying the binary operator '*' (line 2955)
        result_mul_616618 = python_operator(stypy.reporting.localization.Localization(__file__, 2955, 22), '*', cond2_616614, result_eq_616617)
        
        float_616619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2955, 46), 'float')
        # Processing the call keyword arguments (line 2955)
        kwargs_616620 = {}
        # Getting the type of 'place' (line 2955)
        place_616612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2955, 8), 'place', False)
        # Calling place(args, kwargs) (line 2955)
        place_call_result_616621 = invoke(stypy.reporting.localization.Localization(__file__, 2955, 8), place_616612, *[output_616613, result_mul_616618, float_616619], **kwargs_616620)
        
        
        
        # Call to any(...): (line 2957)
        # Processing the call arguments (line 2957)
        # Getting the type of 'cond' (line 2957)
        cond_616624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2957, 18), 'cond', False)
        # Processing the call keyword arguments (line 2957)
        kwargs_616625 = {}
        # Getting the type of 'np' (line 2957)
        np_616622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2957, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 2957)
        any_616623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2957, 11), np_616622, 'any')
        # Calling any(args, kwargs) (line 2957)
        any_call_result_616626 = invoke(stypy.reporting.localization.Localization(__file__, 2957, 11), any_616623, *[cond_616624], **kwargs_616625)
        
        # Testing the type of an if condition (line 2957)
        if_condition_616627 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2957, 8), any_call_result_616626)
        # Assigning a type to the variable 'if_condition_616627' (line 2957)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2957, 8), 'if_condition_616627', if_condition_616627)
        # SSA begins for if statement (line 2957)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2958):
        
        # Assigning a Call to a Name (line 2958):
        
        # Call to argsreduce(...): (line 2958)
        # Processing the call arguments (line 2958)
        # Getting the type of 'cond' (line 2958)
        cond_616629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2958, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2958)
        tuple_616630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2958, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2958)
        # Adding element type (line 2958)
        # Getting the type of 'k' (line 2958)
        k_616631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2958, 43), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2958, 43), tuple_616630, k_616631)
        
        # Getting the type of 'args' (line 2958)
        args_616632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2958, 47), 'args', False)
        # Applying the binary operator '+' (line 2958)
        result_add_616633 = python_operator(stypy.reporting.localization.Localization(__file__, 2958, 42), '+', tuple_616630, args_616632)
        
        # Processing the call keyword arguments (line 2958)
        kwargs_616634 = {}
        # Getting the type of 'argsreduce' (line 2958)
        argsreduce_616628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2958, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 2958)
        argsreduce_call_result_616635 = invoke(stypy.reporting.localization.Localization(__file__, 2958, 23), argsreduce_616628, *[cond_616629, result_add_616633], **kwargs_616634)
        
        # Assigning a type to the variable 'goodargs' (line 2958)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2958, 12), 'goodargs', argsreduce_call_result_616635)
        
        # Call to place(...): (line 2959)
        # Processing the call arguments (line 2959)
        # Getting the type of 'output' (line 2959)
        output_616637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2959, 18), 'output', False)
        # Getting the type of 'cond' (line 2959)
        cond_616638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2959, 26), 'cond', False)
        
        # Call to _logcdf(...): (line 2959)
        # Getting the type of 'goodargs' (line 2959)
        goodargs_616641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2959, 46), 'goodargs', False)
        # Processing the call keyword arguments (line 2959)
        kwargs_616642 = {}
        # Getting the type of 'self' (line 2959)
        self_616639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2959, 32), 'self', False)
        # Obtaining the member '_logcdf' of a type (line 2959)
        _logcdf_616640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2959, 32), self_616639, '_logcdf')
        # Calling _logcdf(args, kwargs) (line 2959)
        _logcdf_call_result_616643 = invoke(stypy.reporting.localization.Localization(__file__, 2959, 32), _logcdf_616640, *[goodargs_616641], **kwargs_616642)
        
        # Processing the call keyword arguments (line 2959)
        kwargs_616644 = {}
        # Getting the type of 'place' (line 2959)
        place_616636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2959, 12), 'place', False)
        # Calling place(args, kwargs) (line 2959)
        place_call_result_616645 = invoke(stypy.reporting.localization.Localization(__file__, 2959, 12), place_616636, *[output_616637, cond_616638, _logcdf_call_result_616643], **kwargs_616644)
        
        # SSA join for if statement (line 2957)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 2960)
        output_616646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2960, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 2960)
        ndim_616647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2960, 11), output_616646, 'ndim')
        int_616648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2960, 26), 'int')
        # Applying the binary operator '==' (line 2960)
        result_eq_616649 = python_operator(stypy.reporting.localization.Localization(__file__, 2960, 11), '==', ndim_616647, int_616648)
        
        # Testing the type of an if condition (line 2960)
        if_condition_616650 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2960, 8), result_eq_616649)
        # Assigning a type to the variable 'if_condition_616650' (line 2960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2960, 8), 'if_condition_616650', if_condition_616650)
        # SSA begins for if statement (line 2960)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 2961)
        tuple_616651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2961, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2961)
        
        # Getting the type of 'output' (line 2961)
        output_616652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2961, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 2961)
        getitem___616653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2961, 19), output_616652, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2961)
        subscript_call_result_616654 = invoke(stypy.reporting.localization.Localization(__file__, 2961, 19), getitem___616653, tuple_616651)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2961, 12), 'stypy_return_type', subscript_call_result_616654)
        # SSA join for if statement (line 2960)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 2962)
        output_616655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2962, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 2962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2962, 8), 'stypy_return_type', output_616655)
        
        # ################# End of 'logcdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logcdf' in the type store
        # Getting the type of 'stypy_return_type' (line 2924)
        stypy_return_type_616656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2924, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_616656)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logcdf'
        return stypy_return_type_616656


    @norecursion
    def sf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'sf'
        module_type_store = module_type_store.open_function_context('sf', 2964, 4, False)
        # Assigning a type to the variable 'self' (line 2965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2965, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.sf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.sf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.sf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.sf.__dict__.__setitem__('stypy_function_name', 'rv_discrete.sf')
        rv_discrete.sf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete.sf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete.sf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_discrete.sf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.sf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.sf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.sf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.sf', ['k'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'sf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'sf(...)' code ##################

        str_616657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2983, (-1)), 'str', '\n        Survival function (1 - `cdf`) at k of the given RV.\n\n        Parameters\n        ----------\n        k : array_like\n            Quantiles.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter (default=0).\n\n        Returns\n        -------\n        sf : array_like\n            Survival function evaluated at k.\n\n        ')
        
        # Assigning a Call to a Tuple (line 2984):
        
        # Assigning a Subscript to a Name (line 2984):
        
        # Obtaining the type of the subscript
        int_616658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2984, 8), 'int')
        
        # Call to _parse_args(...): (line 2984)
        # Getting the type of 'args' (line 2984)
        args_616661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 41), 'args', False)
        # Processing the call keyword arguments (line 2984)
        # Getting the type of 'kwds' (line 2984)
        kwds_616662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 49), 'kwds', False)
        kwargs_616663 = {'kwds_616662': kwds_616662}
        # Getting the type of 'self' (line 2984)
        self_616659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2984)
        _parse_args_616660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2984, 23), self_616659, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2984)
        _parse_args_call_result_616664 = invoke(stypy.reporting.localization.Localization(__file__, 2984, 23), _parse_args_616660, *[args_616661], **kwargs_616663)
        
        # Obtaining the member '__getitem__' of a type (line 2984)
        getitem___616665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2984, 8), _parse_args_call_result_616664, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2984)
        subscript_call_result_616666 = invoke(stypy.reporting.localization.Localization(__file__, 2984, 8), getitem___616665, int_616658)
        
        # Assigning a type to the variable 'tuple_var_assignment_609377' (line 2984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2984, 8), 'tuple_var_assignment_609377', subscript_call_result_616666)
        
        # Assigning a Subscript to a Name (line 2984):
        
        # Obtaining the type of the subscript
        int_616667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2984, 8), 'int')
        
        # Call to _parse_args(...): (line 2984)
        # Getting the type of 'args' (line 2984)
        args_616670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 41), 'args', False)
        # Processing the call keyword arguments (line 2984)
        # Getting the type of 'kwds' (line 2984)
        kwds_616671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 49), 'kwds', False)
        kwargs_616672 = {'kwds_616671': kwds_616671}
        # Getting the type of 'self' (line 2984)
        self_616668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2984)
        _parse_args_616669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2984, 23), self_616668, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2984)
        _parse_args_call_result_616673 = invoke(stypy.reporting.localization.Localization(__file__, 2984, 23), _parse_args_616669, *[args_616670], **kwargs_616672)
        
        # Obtaining the member '__getitem__' of a type (line 2984)
        getitem___616674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2984, 8), _parse_args_call_result_616673, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2984)
        subscript_call_result_616675 = invoke(stypy.reporting.localization.Localization(__file__, 2984, 8), getitem___616674, int_616667)
        
        # Assigning a type to the variable 'tuple_var_assignment_609378' (line 2984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2984, 8), 'tuple_var_assignment_609378', subscript_call_result_616675)
        
        # Assigning a Subscript to a Name (line 2984):
        
        # Obtaining the type of the subscript
        int_616676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2984, 8), 'int')
        
        # Call to _parse_args(...): (line 2984)
        # Getting the type of 'args' (line 2984)
        args_616679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 41), 'args', False)
        # Processing the call keyword arguments (line 2984)
        # Getting the type of 'kwds' (line 2984)
        kwds_616680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 49), 'kwds', False)
        kwargs_616681 = {'kwds_616680': kwds_616680}
        # Getting the type of 'self' (line 2984)
        self_616677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 2984)
        _parse_args_616678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2984, 23), self_616677, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 2984)
        _parse_args_call_result_616682 = invoke(stypy.reporting.localization.Localization(__file__, 2984, 23), _parse_args_616678, *[args_616679], **kwargs_616681)
        
        # Obtaining the member '__getitem__' of a type (line 2984)
        getitem___616683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2984, 8), _parse_args_call_result_616682, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2984)
        subscript_call_result_616684 = invoke(stypy.reporting.localization.Localization(__file__, 2984, 8), getitem___616683, int_616676)
        
        # Assigning a type to the variable 'tuple_var_assignment_609379' (line 2984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2984, 8), 'tuple_var_assignment_609379', subscript_call_result_616684)
        
        # Assigning a Name to a Name (line 2984):
        # Getting the type of 'tuple_var_assignment_609377' (line 2984)
        tuple_var_assignment_609377_616685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 8), 'tuple_var_assignment_609377')
        # Assigning a type to the variable 'args' (line 2984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2984, 8), 'args', tuple_var_assignment_609377_616685)
        
        # Assigning a Name to a Name (line 2984):
        # Getting the type of 'tuple_var_assignment_609378' (line 2984)
        tuple_var_assignment_609378_616686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 8), 'tuple_var_assignment_609378')
        # Assigning a type to the variable 'loc' (line 2984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2984, 14), 'loc', tuple_var_assignment_609378_616686)
        
        # Assigning a Name to a Name (line 2984):
        # Getting the type of 'tuple_var_assignment_609379' (line 2984)
        tuple_var_assignment_609379_616687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2984, 8), 'tuple_var_assignment_609379')
        # Assigning a type to the variable '_' (line 2984)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2984, 19), '_', tuple_var_assignment_609379_616687)
        
        # Assigning a Call to a Tuple (line 2985):
        
        # Assigning a Subscript to a Name (line 2985):
        
        # Obtaining the type of the subscript
        int_616688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2985, 8), 'int')
        
        # Call to map(...): (line 2985)
        # Processing the call arguments (line 2985)
        # Getting the type of 'asarray' (line 2985)
        asarray_616690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2985)
        tuple_616691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2985, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2985)
        # Adding element type (line 2985)
        # Getting the type of 'k' (line 2985)
        k_616692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2985, 31), tuple_616691, k_616692)
        # Adding element type (line 2985)
        # Getting the type of 'loc' (line 2985)
        loc_616693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2985, 31), tuple_616691, loc_616693)
        
        # Processing the call keyword arguments (line 2985)
        kwargs_616694 = {}
        # Getting the type of 'map' (line 2985)
        map_616689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 17), 'map', False)
        # Calling map(args, kwargs) (line 2985)
        map_call_result_616695 = invoke(stypy.reporting.localization.Localization(__file__, 2985, 17), map_616689, *[asarray_616690, tuple_616691], **kwargs_616694)
        
        # Obtaining the member '__getitem__' of a type (line 2985)
        getitem___616696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2985, 8), map_call_result_616695, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2985)
        subscript_call_result_616697 = invoke(stypy.reporting.localization.Localization(__file__, 2985, 8), getitem___616696, int_616688)
        
        # Assigning a type to the variable 'tuple_var_assignment_609380' (line 2985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2985, 8), 'tuple_var_assignment_609380', subscript_call_result_616697)
        
        # Assigning a Subscript to a Name (line 2985):
        
        # Obtaining the type of the subscript
        int_616698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2985, 8), 'int')
        
        # Call to map(...): (line 2985)
        # Processing the call arguments (line 2985)
        # Getting the type of 'asarray' (line 2985)
        asarray_616700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2985)
        tuple_616701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2985, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2985)
        # Adding element type (line 2985)
        # Getting the type of 'k' (line 2985)
        k_616702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2985, 31), tuple_616701, k_616702)
        # Adding element type (line 2985)
        # Getting the type of 'loc' (line 2985)
        loc_616703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2985, 31), tuple_616701, loc_616703)
        
        # Processing the call keyword arguments (line 2985)
        kwargs_616704 = {}
        # Getting the type of 'map' (line 2985)
        map_616699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 17), 'map', False)
        # Calling map(args, kwargs) (line 2985)
        map_call_result_616705 = invoke(stypy.reporting.localization.Localization(__file__, 2985, 17), map_616699, *[asarray_616700, tuple_616701], **kwargs_616704)
        
        # Obtaining the member '__getitem__' of a type (line 2985)
        getitem___616706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2985, 8), map_call_result_616705, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2985)
        subscript_call_result_616707 = invoke(stypy.reporting.localization.Localization(__file__, 2985, 8), getitem___616706, int_616698)
        
        # Assigning a type to the variable 'tuple_var_assignment_609381' (line 2985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2985, 8), 'tuple_var_assignment_609381', subscript_call_result_616707)
        
        # Assigning a Name to a Name (line 2985):
        # Getting the type of 'tuple_var_assignment_609380' (line 2985)
        tuple_var_assignment_609380_616708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 8), 'tuple_var_assignment_609380')
        # Assigning a type to the variable 'k' (line 2985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2985, 8), 'k', tuple_var_assignment_609380_616708)
        
        # Assigning a Name to a Name (line 2985):
        # Getting the type of 'tuple_var_assignment_609381' (line 2985)
        tuple_var_assignment_609381_616709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2985, 8), 'tuple_var_assignment_609381')
        # Assigning a type to the variable 'loc' (line 2985)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2985, 11), 'loc', tuple_var_assignment_609381_616709)
        
        # Assigning a Call to a Name (line 2986):
        
        # Assigning a Call to a Name (line 2986):
        
        # Call to tuple(...): (line 2986)
        # Processing the call arguments (line 2986)
        
        # Call to map(...): (line 2986)
        # Processing the call arguments (line 2986)
        # Getting the type of 'asarray' (line 2986)
        asarray_616712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2986, 25), 'asarray', False)
        # Getting the type of 'args' (line 2986)
        args_616713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2986, 34), 'args', False)
        # Processing the call keyword arguments (line 2986)
        kwargs_616714 = {}
        # Getting the type of 'map' (line 2986)
        map_616711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2986, 21), 'map', False)
        # Calling map(args, kwargs) (line 2986)
        map_call_result_616715 = invoke(stypy.reporting.localization.Localization(__file__, 2986, 21), map_616711, *[asarray_616712, args_616713], **kwargs_616714)
        
        # Processing the call keyword arguments (line 2986)
        kwargs_616716 = {}
        # Getting the type of 'tuple' (line 2986)
        tuple_616710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2986, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 2986)
        tuple_call_result_616717 = invoke(stypy.reporting.localization.Localization(__file__, 2986, 15), tuple_616710, *[map_call_result_616715], **kwargs_616716)
        
        # Assigning a type to the variable 'args' (line 2986)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2986, 8), 'args', tuple_call_result_616717)
        
        # Assigning a Call to a Name (line 2987):
        
        # Assigning a Call to a Name (line 2987):
        
        # Call to asarray(...): (line 2987)
        # Processing the call arguments (line 2987)
        # Getting the type of 'k' (line 2987)
        k_616719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2987, 20), 'k', False)
        # Getting the type of 'loc' (line 2987)
        loc_616720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2987, 22), 'loc', False)
        # Applying the binary operator '-' (line 2987)
        result_sub_616721 = python_operator(stypy.reporting.localization.Localization(__file__, 2987, 20), '-', k_616719, loc_616720)
        
        # Processing the call keyword arguments (line 2987)
        kwargs_616722 = {}
        # Getting the type of 'asarray' (line 2987)
        asarray_616718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2987, 12), 'asarray', False)
        # Calling asarray(args, kwargs) (line 2987)
        asarray_call_result_616723 = invoke(stypy.reporting.localization.Localization(__file__, 2987, 12), asarray_616718, *[result_sub_616721], **kwargs_616722)
        
        # Assigning a type to the variable 'k' (line 2987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2987, 8), 'k', asarray_call_result_616723)
        
        # Assigning a Call to a Name (line 2988):
        
        # Assigning a Call to a Name (line 2988):
        
        # Call to _argcheck(...): (line 2988)
        # Getting the type of 'args' (line 2988)
        args_616726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2988, 32), 'args', False)
        # Processing the call keyword arguments (line 2988)
        kwargs_616727 = {}
        # Getting the type of 'self' (line 2988)
        self_616724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2988, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 2988)
        _argcheck_616725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2988, 16), self_616724, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 2988)
        _argcheck_call_result_616728 = invoke(stypy.reporting.localization.Localization(__file__, 2988, 16), _argcheck_616725, *[args_616726], **kwargs_616727)
        
        # Assigning a type to the variable 'cond0' (line 2988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2988, 8), 'cond0', _argcheck_call_result_616728)
        
        # Assigning a BinOp to a Name (line 2989):
        
        # Assigning a BinOp to a Name (line 2989):
        
        # Getting the type of 'k' (line 2989)
        k_616729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2989, 17), 'k')
        # Getting the type of 'self' (line 2989)
        self_616730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2989, 22), 'self')
        # Obtaining the member 'a' of a type (line 2989)
        a_616731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2989, 22), self_616730, 'a')
        # Applying the binary operator '>=' (line 2989)
        result_ge_616732 = python_operator(stypy.reporting.localization.Localization(__file__, 2989, 17), '>=', k_616729, a_616731)
        
        
        # Getting the type of 'k' (line 2989)
        k_616733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2989, 33), 'k')
        # Getting the type of 'self' (line 2989)
        self_616734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2989, 37), 'self')
        # Obtaining the member 'b' of a type (line 2989)
        b_616735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2989, 37), self_616734, 'b')
        # Applying the binary operator '<' (line 2989)
        result_lt_616736 = python_operator(stypy.reporting.localization.Localization(__file__, 2989, 33), '<', k_616733, b_616735)
        
        # Applying the binary operator '&' (line 2989)
        result_and__616737 = python_operator(stypy.reporting.localization.Localization(__file__, 2989, 16), '&', result_ge_616732, result_lt_616736)
        
        # Assigning a type to the variable 'cond1' (line 2989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2989, 8), 'cond1', result_and__616737)
        
        # Assigning a BinOp to a Name (line 2990):
        
        # Assigning a BinOp to a Name (line 2990):
        
        # Getting the type of 'k' (line 2990)
        k_616738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2990, 17), 'k')
        # Getting the type of 'self' (line 2990)
        self_616739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2990, 21), 'self')
        # Obtaining the member 'a' of a type (line 2990)
        a_616740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2990, 21), self_616739, 'a')
        # Applying the binary operator '<' (line 2990)
        result_lt_616741 = python_operator(stypy.reporting.localization.Localization(__file__, 2990, 17), '<', k_616738, a_616740)
        
        # Getting the type of 'cond0' (line 2990)
        cond0_616742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2990, 31), 'cond0')
        # Applying the binary operator '&' (line 2990)
        result_and__616743 = python_operator(stypy.reporting.localization.Localization(__file__, 2990, 16), '&', result_lt_616741, cond0_616742)
        
        # Assigning a type to the variable 'cond2' (line 2990)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2990, 8), 'cond2', result_and__616743)
        
        # Assigning a BinOp to a Name (line 2991):
        
        # Assigning a BinOp to a Name (line 2991):
        # Getting the type of 'cond0' (line 2991)
        cond0_616744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2991, 15), 'cond0')
        # Getting the type of 'cond1' (line 2991)
        cond1_616745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2991, 23), 'cond1')
        # Applying the binary operator '&' (line 2991)
        result_and__616746 = python_operator(stypy.reporting.localization.Localization(__file__, 2991, 15), '&', cond0_616744, cond1_616745)
        
        # Assigning a type to the variable 'cond' (line 2991)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2991, 8), 'cond', result_and__616746)
        
        # Assigning a Call to a Name (line 2992):
        
        # Assigning a Call to a Name (line 2992):
        
        # Call to zeros(...): (line 2992)
        # Processing the call arguments (line 2992)
        
        # Call to shape(...): (line 2992)
        # Processing the call arguments (line 2992)
        # Getting the type of 'cond' (line 2992)
        cond_616749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2992, 29), 'cond', False)
        # Processing the call keyword arguments (line 2992)
        kwargs_616750 = {}
        # Getting the type of 'shape' (line 2992)
        shape_616748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2992, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 2992)
        shape_call_result_616751 = invoke(stypy.reporting.localization.Localization(__file__, 2992, 23), shape_616748, *[cond_616749], **kwargs_616750)
        
        str_616752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2992, 36), 'str', 'd')
        # Processing the call keyword arguments (line 2992)
        kwargs_616753 = {}
        # Getting the type of 'zeros' (line 2992)
        zeros_616747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2992, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 2992)
        zeros_call_result_616754 = invoke(stypy.reporting.localization.Localization(__file__, 2992, 17), zeros_616747, *[shape_call_result_616751, str_616752], **kwargs_616753)
        
        # Assigning a type to the variable 'output' (line 2992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2992, 8), 'output', zeros_call_result_616754)
        
        # Call to place(...): (line 2993)
        # Processing the call arguments (line 2993)
        # Getting the type of 'output' (line 2993)
        output_616756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 14), 'output', False)
        int_616757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2993, 23), 'int')
        # Getting the type of 'cond0' (line 2993)
        cond0_616758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 25), 'cond0', False)
        # Applying the binary operator '-' (line 2993)
        result_sub_616759 = python_operator(stypy.reporting.localization.Localization(__file__, 2993, 23), '-', int_616757, cond0_616758)
        
        
        # Call to isnan(...): (line 2993)
        # Processing the call arguments (line 2993)
        # Getting the type of 'k' (line 2993)
        k_616762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 43), 'k', False)
        # Processing the call keyword arguments (line 2993)
        kwargs_616763 = {}
        # Getting the type of 'np' (line 2993)
        np_616760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 34), 'np', False)
        # Obtaining the member 'isnan' of a type (line 2993)
        isnan_616761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2993, 34), np_616760, 'isnan')
        # Calling isnan(args, kwargs) (line 2993)
        isnan_call_result_616764 = invoke(stypy.reporting.localization.Localization(__file__, 2993, 34), isnan_616761, *[k_616762], **kwargs_616763)
        
        # Applying the binary operator '+' (line 2993)
        result_add_616765 = python_operator(stypy.reporting.localization.Localization(__file__, 2993, 22), '+', result_sub_616759, isnan_call_result_616764)
        
        # Getting the type of 'self' (line 2993)
        self_616766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 47), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 2993)
        badvalue_616767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2993, 47), self_616766, 'badvalue')
        # Processing the call keyword arguments (line 2993)
        kwargs_616768 = {}
        # Getting the type of 'place' (line 2993)
        place_616755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2993, 8), 'place', False)
        # Calling place(args, kwargs) (line 2993)
        place_call_result_616769 = invoke(stypy.reporting.localization.Localization(__file__, 2993, 8), place_616755, *[output_616756, result_add_616765, badvalue_616767], **kwargs_616768)
        
        
        # Call to place(...): (line 2994)
        # Processing the call arguments (line 2994)
        # Getting the type of 'output' (line 2994)
        output_616771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2994, 14), 'output', False)
        # Getting the type of 'cond2' (line 2994)
        cond2_616772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2994, 22), 'cond2', False)
        float_616773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2994, 29), 'float')
        # Processing the call keyword arguments (line 2994)
        kwargs_616774 = {}
        # Getting the type of 'place' (line 2994)
        place_616770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2994, 8), 'place', False)
        # Calling place(args, kwargs) (line 2994)
        place_call_result_616775 = invoke(stypy.reporting.localization.Localization(__file__, 2994, 8), place_616770, *[output_616771, cond2_616772, float_616773], **kwargs_616774)
        
        
        
        # Call to any(...): (line 2995)
        # Processing the call arguments (line 2995)
        # Getting the type of 'cond' (line 2995)
        cond_616778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2995, 18), 'cond', False)
        # Processing the call keyword arguments (line 2995)
        kwargs_616779 = {}
        # Getting the type of 'np' (line 2995)
        np_616776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2995, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 2995)
        any_616777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2995, 11), np_616776, 'any')
        # Calling any(args, kwargs) (line 2995)
        any_call_result_616780 = invoke(stypy.reporting.localization.Localization(__file__, 2995, 11), any_616777, *[cond_616778], **kwargs_616779)
        
        # Testing the type of an if condition (line 2995)
        if_condition_616781 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2995, 8), any_call_result_616780)
        # Assigning a type to the variable 'if_condition_616781' (line 2995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2995, 8), 'if_condition_616781', if_condition_616781)
        # SSA begins for if statement (line 2995)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 2996):
        
        # Assigning a Call to a Name (line 2996):
        
        # Call to argsreduce(...): (line 2996)
        # Processing the call arguments (line 2996)
        # Getting the type of 'cond' (line 2996)
        cond_616783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2996, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 2996)
        tuple_616784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2996, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2996)
        # Adding element type (line 2996)
        # Getting the type of 'k' (line 2996)
        k_616785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2996, 43), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 2996, 43), tuple_616784, k_616785)
        
        # Getting the type of 'args' (line 2996)
        args_616786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2996, 47), 'args', False)
        # Applying the binary operator '+' (line 2996)
        result_add_616787 = python_operator(stypy.reporting.localization.Localization(__file__, 2996, 42), '+', tuple_616784, args_616786)
        
        # Processing the call keyword arguments (line 2996)
        kwargs_616788 = {}
        # Getting the type of 'argsreduce' (line 2996)
        argsreduce_616782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2996, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 2996)
        argsreduce_call_result_616789 = invoke(stypy.reporting.localization.Localization(__file__, 2996, 23), argsreduce_616782, *[cond_616783, result_add_616787], **kwargs_616788)
        
        # Assigning a type to the variable 'goodargs' (line 2996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2996, 12), 'goodargs', argsreduce_call_result_616789)
        
        # Call to place(...): (line 2997)
        # Processing the call arguments (line 2997)
        # Getting the type of 'output' (line 2997)
        output_616791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2997, 18), 'output', False)
        # Getting the type of 'cond' (line 2997)
        cond_616792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2997, 26), 'cond', False)
        
        # Call to clip(...): (line 2997)
        # Processing the call arguments (line 2997)
        
        # Call to _sf(...): (line 2997)
        # Getting the type of 'goodargs' (line 2997)
        goodargs_616797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2997, 50), 'goodargs', False)
        # Processing the call keyword arguments (line 2997)
        kwargs_616798 = {}
        # Getting the type of 'self' (line 2997)
        self_616795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2997, 40), 'self', False)
        # Obtaining the member '_sf' of a type (line 2997)
        _sf_616796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2997, 40), self_616795, '_sf')
        # Calling _sf(args, kwargs) (line 2997)
        _sf_call_result_616799 = invoke(stypy.reporting.localization.Localization(__file__, 2997, 40), _sf_616796, *[goodargs_616797], **kwargs_616798)
        
        int_616800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2997, 61), 'int')
        int_616801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2997, 64), 'int')
        # Processing the call keyword arguments (line 2997)
        kwargs_616802 = {}
        # Getting the type of 'np' (line 2997)
        np_616793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2997, 32), 'np', False)
        # Obtaining the member 'clip' of a type (line 2997)
        clip_616794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2997, 32), np_616793, 'clip')
        # Calling clip(args, kwargs) (line 2997)
        clip_call_result_616803 = invoke(stypy.reporting.localization.Localization(__file__, 2997, 32), clip_616794, *[_sf_call_result_616799, int_616800, int_616801], **kwargs_616802)
        
        # Processing the call keyword arguments (line 2997)
        kwargs_616804 = {}
        # Getting the type of 'place' (line 2997)
        place_616790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2997, 12), 'place', False)
        # Calling place(args, kwargs) (line 2997)
        place_call_result_616805 = invoke(stypy.reporting.localization.Localization(__file__, 2997, 12), place_616790, *[output_616791, cond_616792, clip_call_result_616803], **kwargs_616804)
        
        # SSA join for if statement (line 2995)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 2998)
        output_616806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2998, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 2998)
        ndim_616807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2998, 11), output_616806, 'ndim')
        int_616808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2998, 26), 'int')
        # Applying the binary operator '==' (line 2998)
        result_eq_616809 = python_operator(stypy.reporting.localization.Localization(__file__, 2998, 11), '==', ndim_616807, int_616808)
        
        # Testing the type of an if condition (line 2998)
        if_condition_616810 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 2998, 8), result_eq_616809)
        # Assigning a type to the variable 'if_condition_616810' (line 2998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2998, 8), 'if_condition_616810', if_condition_616810)
        # SSA begins for if statement (line 2998)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 2999)
        tuple_616811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 2999, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 2999)
        
        # Getting the type of 'output' (line 2999)
        output_616812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2999, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 2999)
        getitem___616813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 2999, 19), output_616812, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 2999)
        subscript_call_result_616814 = invoke(stypy.reporting.localization.Localization(__file__, 2999, 19), getitem___616813, tuple_616811)
        
        # Assigning a type to the variable 'stypy_return_type' (line 2999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2999, 12), 'stypy_return_type', subscript_call_result_616814)
        # SSA join for if statement (line 2998)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 3000)
        output_616815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3000, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 3000)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3000, 8), 'stypy_return_type', output_616815)
        
        # ################# End of 'sf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'sf' in the type store
        # Getting the type of 'stypy_return_type' (line 2964)
        stypy_return_type_616816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 2964, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_616816)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'sf'
        return stypy_return_type_616816


    @norecursion
    def logsf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'logsf'
        module_type_store = module_type_store.open_function_context('logsf', 3002, 4, False)
        # Assigning a type to the variable 'self' (line 3003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3003, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.logsf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.logsf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.logsf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.logsf.__dict__.__setitem__('stypy_function_name', 'rv_discrete.logsf')
        rv_discrete.logsf.__dict__.__setitem__('stypy_param_names_list', ['k'])
        rv_discrete.logsf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete.logsf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_discrete.logsf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.logsf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.logsf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.logsf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.logsf', ['k'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'logsf', localization, ['k'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'logsf(...)' code ##################

        str_616817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3024, (-1)), 'str', '\n        Log of the survival function of the given RV.\n\n        Returns the log of the "survival function," defined as 1 - `cdf`,\n        evaluated at `k`.\n\n        Parameters\n        ----------\n        k : array_like\n            Quantiles.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter (default=0).\n\n        Returns\n        -------\n        logsf : ndarray\n            Log of the survival function evaluated at `k`.\n\n        ')
        
        # Assigning a Call to a Tuple (line 3025):
        
        # Assigning a Subscript to a Name (line 3025):
        
        # Obtaining the type of the subscript
        int_616818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3025, 8), 'int')
        
        # Call to _parse_args(...): (line 3025)
        # Getting the type of 'args' (line 3025)
        args_616821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 41), 'args', False)
        # Processing the call keyword arguments (line 3025)
        # Getting the type of 'kwds' (line 3025)
        kwds_616822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 49), 'kwds', False)
        kwargs_616823 = {'kwds_616822': kwds_616822}
        # Getting the type of 'self' (line 3025)
        self_616819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 3025)
        _parse_args_616820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3025, 23), self_616819, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 3025)
        _parse_args_call_result_616824 = invoke(stypy.reporting.localization.Localization(__file__, 3025, 23), _parse_args_616820, *[args_616821], **kwargs_616823)
        
        # Obtaining the member '__getitem__' of a type (line 3025)
        getitem___616825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3025, 8), _parse_args_call_result_616824, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3025)
        subscript_call_result_616826 = invoke(stypy.reporting.localization.Localization(__file__, 3025, 8), getitem___616825, int_616818)
        
        # Assigning a type to the variable 'tuple_var_assignment_609382' (line 3025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3025, 8), 'tuple_var_assignment_609382', subscript_call_result_616826)
        
        # Assigning a Subscript to a Name (line 3025):
        
        # Obtaining the type of the subscript
        int_616827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3025, 8), 'int')
        
        # Call to _parse_args(...): (line 3025)
        # Getting the type of 'args' (line 3025)
        args_616830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 41), 'args', False)
        # Processing the call keyword arguments (line 3025)
        # Getting the type of 'kwds' (line 3025)
        kwds_616831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 49), 'kwds', False)
        kwargs_616832 = {'kwds_616831': kwds_616831}
        # Getting the type of 'self' (line 3025)
        self_616828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 3025)
        _parse_args_616829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3025, 23), self_616828, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 3025)
        _parse_args_call_result_616833 = invoke(stypy.reporting.localization.Localization(__file__, 3025, 23), _parse_args_616829, *[args_616830], **kwargs_616832)
        
        # Obtaining the member '__getitem__' of a type (line 3025)
        getitem___616834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3025, 8), _parse_args_call_result_616833, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3025)
        subscript_call_result_616835 = invoke(stypy.reporting.localization.Localization(__file__, 3025, 8), getitem___616834, int_616827)
        
        # Assigning a type to the variable 'tuple_var_assignment_609383' (line 3025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3025, 8), 'tuple_var_assignment_609383', subscript_call_result_616835)
        
        # Assigning a Subscript to a Name (line 3025):
        
        # Obtaining the type of the subscript
        int_616836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3025, 8), 'int')
        
        # Call to _parse_args(...): (line 3025)
        # Getting the type of 'args' (line 3025)
        args_616839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 41), 'args', False)
        # Processing the call keyword arguments (line 3025)
        # Getting the type of 'kwds' (line 3025)
        kwds_616840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 49), 'kwds', False)
        kwargs_616841 = {'kwds_616840': kwds_616840}
        # Getting the type of 'self' (line 3025)
        self_616837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 3025)
        _parse_args_616838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3025, 23), self_616837, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 3025)
        _parse_args_call_result_616842 = invoke(stypy.reporting.localization.Localization(__file__, 3025, 23), _parse_args_616838, *[args_616839], **kwargs_616841)
        
        # Obtaining the member '__getitem__' of a type (line 3025)
        getitem___616843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3025, 8), _parse_args_call_result_616842, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3025)
        subscript_call_result_616844 = invoke(stypy.reporting.localization.Localization(__file__, 3025, 8), getitem___616843, int_616836)
        
        # Assigning a type to the variable 'tuple_var_assignment_609384' (line 3025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3025, 8), 'tuple_var_assignment_609384', subscript_call_result_616844)
        
        # Assigning a Name to a Name (line 3025):
        # Getting the type of 'tuple_var_assignment_609382' (line 3025)
        tuple_var_assignment_609382_616845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 8), 'tuple_var_assignment_609382')
        # Assigning a type to the variable 'args' (line 3025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3025, 8), 'args', tuple_var_assignment_609382_616845)
        
        # Assigning a Name to a Name (line 3025):
        # Getting the type of 'tuple_var_assignment_609383' (line 3025)
        tuple_var_assignment_609383_616846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 8), 'tuple_var_assignment_609383')
        # Assigning a type to the variable 'loc' (line 3025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3025, 14), 'loc', tuple_var_assignment_609383_616846)
        
        # Assigning a Name to a Name (line 3025):
        # Getting the type of 'tuple_var_assignment_609384' (line 3025)
        tuple_var_assignment_609384_616847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3025, 8), 'tuple_var_assignment_609384')
        # Assigning a type to the variable '_' (line 3025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3025, 19), '_', tuple_var_assignment_609384_616847)
        
        # Assigning a Call to a Tuple (line 3026):
        
        # Assigning a Subscript to a Name (line 3026):
        
        # Obtaining the type of the subscript
        int_616848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3026, 8), 'int')
        
        # Call to map(...): (line 3026)
        # Processing the call arguments (line 3026)
        # Getting the type of 'asarray' (line 3026)
        asarray_616850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3026)
        tuple_616851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3026, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3026)
        # Adding element type (line 3026)
        # Getting the type of 'k' (line 3026)
        k_616852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3026, 31), tuple_616851, k_616852)
        # Adding element type (line 3026)
        # Getting the type of 'loc' (line 3026)
        loc_616853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3026, 31), tuple_616851, loc_616853)
        
        # Processing the call keyword arguments (line 3026)
        kwargs_616854 = {}
        # Getting the type of 'map' (line 3026)
        map_616849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 17), 'map', False)
        # Calling map(args, kwargs) (line 3026)
        map_call_result_616855 = invoke(stypy.reporting.localization.Localization(__file__, 3026, 17), map_616849, *[asarray_616850, tuple_616851], **kwargs_616854)
        
        # Obtaining the member '__getitem__' of a type (line 3026)
        getitem___616856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3026, 8), map_call_result_616855, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3026)
        subscript_call_result_616857 = invoke(stypy.reporting.localization.Localization(__file__, 3026, 8), getitem___616856, int_616848)
        
        # Assigning a type to the variable 'tuple_var_assignment_609385' (line 3026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3026, 8), 'tuple_var_assignment_609385', subscript_call_result_616857)
        
        # Assigning a Subscript to a Name (line 3026):
        
        # Obtaining the type of the subscript
        int_616858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3026, 8), 'int')
        
        # Call to map(...): (line 3026)
        # Processing the call arguments (line 3026)
        # Getting the type of 'asarray' (line 3026)
        asarray_616860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3026)
        tuple_616861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3026, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3026)
        # Adding element type (line 3026)
        # Getting the type of 'k' (line 3026)
        k_616862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 31), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3026, 31), tuple_616861, k_616862)
        # Adding element type (line 3026)
        # Getting the type of 'loc' (line 3026)
        loc_616863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3026, 31), tuple_616861, loc_616863)
        
        # Processing the call keyword arguments (line 3026)
        kwargs_616864 = {}
        # Getting the type of 'map' (line 3026)
        map_616859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 17), 'map', False)
        # Calling map(args, kwargs) (line 3026)
        map_call_result_616865 = invoke(stypy.reporting.localization.Localization(__file__, 3026, 17), map_616859, *[asarray_616860, tuple_616861], **kwargs_616864)
        
        # Obtaining the member '__getitem__' of a type (line 3026)
        getitem___616866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3026, 8), map_call_result_616865, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3026)
        subscript_call_result_616867 = invoke(stypy.reporting.localization.Localization(__file__, 3026, 8), getitem___616866, int_616858)
        
        # Assigning a type to the variable 'tuple_var_assignment_609386' (line 3026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3026, 8), 'tuple_var_assignment_609386', subscript_call_result_616867)
        
        # Assigning a Name to a Name (line 3026):
        # Getting the type of 'tuple_var_assignment_609385' (line 3026)
        tuple_var_assignment_609385_616868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 8), 'tuple_var_assignment_609385')
        # Assigning a type to the variable 'k' (line 3026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3026, 8), 'k', tuple_var_assignment_609385_616868)
        
        # Assigning a Name to a Name (line 3026):
        # Getting the type of 'tuple_var_assignment_609386' (line 3026)
        tuple_var_assignment_609386_616869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3026, 8), 'tuple_var_assignment_609386')
        # Assigning a type to the variable 'loc' (line 3026)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3026, 11), 'loc', tuple_var_assignment_609386_616869)
        
        # Assigning a Call to a Name (line 3027):
        
        # Assigning a Call to a Name (line 3027):
        
        # Call to tuple(...): (line 3027)
        # Processing the call arguments (line 3027)
        
        # Call to map(...): (line 3027)
        # Processing the call arguments (line 3027)
        # Getting the type of 'asarray' (line 3027)
        asarray_616872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3027, 25), 'asarray', False)
        # Getting the type of 'args' (line 3027)
        args_616873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3027, 34), 'args', False)
        # Processing the call keyword arguments (line 3027)
        kwargs_616874 = {}
        # Getting the type of 'map' (line 3027)
        map_616871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3027, 21), 'map', False)
        # Calling map(args, kwargs) (line 3027)
        map_call_result_616875 = invoke(stypy.reporting.localization.Localization(__file__, 3027, 21), map_616871, *[asarray_616872, args_616873], **kwargs_616874)
        
        # Processing the call keyword arguments (line 3027)
        kwargs_616876 = {}
        # Getting the type of 'tuple' (line 3027)
        tuple_616870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3027, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 3027)
        tuple_call_result_616877 = invoke(stypy.reporting.localization.Localization(__file__, 3027, 15), tuple_616870, *[map_call_result_616875], **kwargs_616876)
        
        # Assigning a type to the variable 'args' (line 3027)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3027, 8), 'args', tuple_call_result_616877)
        
        # Assigning a Call to a Name (line 3028):
        
        # Assigning a Call to a Name (line 3028):
        
        # Call to asarray(...): (line 3028)
        # Processing the call arguments (line 3028)
        # Getting the type of 'k' (line 3028)
        k_616879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3028, 20), 'k', False)
        # Getting the type of 'loc' (line 3028)
        loc_616880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3028, 22), 'loc', False)
        # Applying the binary operator '-' (line 3028)
        result_sub_616881 = python_operator(stypy.reporting.localization.Localization(__file__, 3028, 20), '-', k_616879, loc_616880)
        
        # Processing the call keyword arguments (line 3028)
        kwargs_616882 = {}
        # Getting the type of 'asarray' (line 3028)
        asarray_616878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3028, 12), 'asarray', False)
        # Calling asarray(args, kwargs) (line 3028)
        asarray_call_result_616883 = invoke(stypy.reporting.localization.Localization(__file__, 3028, 12), asarray_616878, *[result_sub_616881], **kwargs_616882)
        
        # Assigning a type to the variable 'k' (line 3028)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3028, 8), 'k', asarray_call_result_616883)
        
        # Assigning a Call to a Name (line 3029):
        
        # Assigning a Call to a Name (line 3029):
        
        # Call to _argcheck(...): (line 3029)
        # Getting the type of 'args' (line 3029)
        args_616886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3029, 32), 'args', False)
        # Processing the call keyword arguments (line 3029)
        kwargs_616887 = {}
        # Getting the type of 'self' (line 3029)
        self_616884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3029, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 3029)
        _argcheck_616885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3029, 16), self_616884, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 3029)
        _argcheck_call_result_616888 = invoke(stypy.reporting.localization.Localization(__file__, 3029, 16), _argcheck_616885, *[args_616886], **kwargs_616887)
        
        # Assigning a type to the variable 'cond0' (line 3029)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3029, 8), 'cond0', _argcheck_call_result_616888)
        
        # Assigning a BinOp to a Name (line 3030):
        
        # Assigning a BinOp to a Name (line 3030):
        
        # Getting the type of 'k' (line 3030)
        k_616889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3030, 17), 'k')
        # Getting the type of 'self' (line 3030)
        self_616890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3030, 22), 'self')
        # Obtaining the member 'a' of a type (line 3030)
        a_616891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3030, 22), self_616890, 'a')
        # Applying the binary operator '>=' (line 3030)
        result_ge_616892 = python_operator(stypy.reporting.localization.Localization(__file__, 3030, 17), '>=', k_616889, a_616891)
        
        
        # Getting the type of 'k' (line 3030)
        k_616893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3030, 33), 'k')
        # Getting the type of 'self' (line 3030)
        self_616894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3030, 37), 'self')
        # Obtaining the member 'b' of a type (line 3030)
        b_616895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3030, 37), self_616894, 'b')
        # Applying the binary operator '<' (line 3030)
        result_lt_616896 = python_operator(stypy.reporting.localization.Localization(__file__, 3030, 33), '<', k_616893, b_616895)
        
        # Applying the binary operator '&' (line 3030)
        result_and__616897 = python_operator(stypy.reporting.localization.Localization(__file__, 3030, 16), '&', result_ge_616892, result_lt_616896)
        
        # Assigning a type to the variable 'cond1' (line 3030)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3030, 8), 'cond1', result_and__616897)
        
        # Assigning a BinOp to a Name (line 3031):
        
        # Assigning a BinOp to a Name (line 3031):
        
        # Getting the type of 'k' (line 3031)
        k_616898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3031, 17), 'k')
        # Getting the type of 'self' (line 3031)
        self_616899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3031, 21), 'self')
        # Obtaining the member 'a' of a type (line 3031)
        a_616900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3031, 21), self_616899, 'a')
        # Applying the binary operator '<' (line 3031)
        result_lt_616901 = python_operator(stypy.reporting.localization.Localization(__file__, 3031, 17), '<', k_616898, a_616900)
        
        # Getting the type of 'cond0' (line 3031)
        cond0_616902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3031, 31), 'cond0')
        # Applying the binary operator '&' (line 3031)
        result_and__616903 = python_operator(stypy.reporting.localization.Localization(__file__, 3031, 16), '&', result_lt_616901, cond0_616902)
        
        # Assigning a type to the variable 'cond2' (line 3031)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3031, 8), 'cond2', result_and__616903)
        
        # Assigning a BinOp to a Name (line 3032):
        
        # Assigning a BinOp to a Name (line 3032):
        # Getting the type of 'cond0' (line 3032)
        cond0_616904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3032, 15), 'cond0')
        # Getting the type of 'cond1' (line 3032)
        cond1_616905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3032, 23), 'cond1')
        # Applying the binary operator '&' (line 3032)
        result_and__616906 = python_operator(stypy.reporting.localization.Localization(__file__, 3032, 15), '&', cond0_616904, cond1_616905)
        
        # Assigning a type to the variable 'cond' (line 3032)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3032, 8), 'cond', result_and__616906)
        
        # Assigning a Call to a Name (line 3033):
        
        # Assigning a Call to a Name (line 3033):
        
        # Call to empty(...): (line 3033)
        # Processing the call arguments (line 3033)
        
        # Call to shape(...): (line 3033)
        # Processing the call arguments (line 3033)
        # Getting the type of 'cond' (line 3033)
        cond_616909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 29), 'cond', False)
        # Processing the call keyword arguments (line 3033)
        kwargs_616910 = {}
        # Getting the type of 'shape' (line 3033)
        shape_616908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 23), 'shape', False)
        # Calling shape(args, kwargs) (line 3033)
        shape_call_result_616911 = invoke(stypy.reporting.localization.Localization(__file__, 3033, 23), shape_616908, *[cond_616909], **kwargs_616910)
        
        str_616912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3033, 36), 'str', 'd')
        # Processing the call keyword arguments (line 3033)
        kwargs_616913 = {}
        # Getting the type of 'empty' (line 3033)
        empty_616907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3033, 17), 'empty', False)
        # Calling empty(args, kwargs) (line 3033)
        empty_call_result_616914 = invoke(stypy.reporting.localization.Localization(__file__, 3033, 17), empty_616907, *[shape_call_result_616911, str_616912], **kwargs_616913)
        
        # Assigning a type to the variable 'output' (line 3033)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3033, 8), 'output', empty_call_result_616914)
        
        # Call to fill(...): (line 3034)
        # Processing the call arguments (line 3034)
        # Getting the type of 'NINF' (line 3034)
        NINF_616917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3034, 20), 'NINF', False)
        # Processing the call keyword arguments (line 3034)
        kwargs_616918 = {}
        # Getting the type of 'output' (line 3034)
        output_616915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3034, 8), 'output', False)
        # Obtaining the member 'fill' of a type (line 3034)
        fill_616916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3034, 8), output_616915, 'fill')
        # Calling fill(args, kwargs) (line 3034)
        fill_call_result_616919 = invoke(stypy.reporting.localization.Localization(__file__, 3034, 8), fill_616916, *[NINF_616917], **kwargs_616918)
        
        
        # Call to place(...): (line 3035)
        # Processing the call arguments (line 3035)
        # Getting the type of 'output' (line 3035)
        output_616921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3035, 14), 'output', False)
        int_616922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3035, 23), 'int')
        # Getting the type of 'cond0' (line 3035)
        cond0_616923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3035, 25), 'cond0', False)
        # Applying the binary operator '-' (line 3035)
        result_sub_616924 = python_operator(stypy.reporting.localization.Localization(__file__, 3035, 23), '-', int_616922, cond0_616923)
        
        
        # Call to isnan(...): (line 3035)
        # Processing the call arguments (line 3035)
        # Getting the type of 'k' (line 3035)
        k_616927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3035, 43), 'k', False)
        # Processing the call keyword arguments (line 3035)
        kwargs_616928 = {}
        # Getting the type of 'np' (line 3035)
        np_616925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3035, 34), 'np', False)
        # Obtaining the member 'isnan' of a type (line 3035)
        isnan_616926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3035, 34), np_616925, 'isnan')
        # Calling isnan(args, kwargs) (line 3035)
        isnan_call_result_616929 = invoke(stypy.reporting.localization.Localization(__file__, 3035, 34), isnan_616926, *[k_616927], **kwargs_616928)
        
        # Applying the binary operator '+' (line 3035)
        result_add_616930 = python_operator(stypy.reporting.localization.Localization(__file__, 3035, 22), '+', result_sub_616924, isnan_call_result_616929)
        
        # Getting the type of 'self' (line 3035)
        self_616931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3035, 47), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 3035)
        badvalue_616932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3035, 47), self_616931, 'badvalue')
        # Processing the call keyword arguments (line 3035)
        kwargs_616933 = {}
        # Getting the type of 'place' (line 3035)
        place_616920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3035, 8), 'place', False)
        # Calling place(args, kwargs) (line 3035)
        place_call_result_616934 = invoke(stypy.reporting.localization.Localization(__file__, 3035, 8), place_616920, *[output_616921, result_add_616930, badvalue_616932], **kwargs_616933)
        
        
        # Call to place(...): (line 3036)
        # Processing the call arguments (line 3036)
        # Getting the type of 'output' (line 3036)
        output_616936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3036, 14), 'output', False)
        # Getting the type of 'cond2' (line 3036)
        cond2_616937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3036, 22), 'cond2', False)
        float_616938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3036, 29), 'float')
        # Processing the call keyword arguments (line 3036)
        kwargs_616939 = {}
        # Getting the type of 'place' (line 3036)
        place_616935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3036, 8), 'place', False)
        # Calling place(args, kwargs) (line 3036)
        place_call_result_616940 = invoke(stypy.reporting.localization.Localization(__file__, 3036, 8), place_616935, *[output_616936, cond2_616937, float_616938], **kwargs_616939)
        
        
        
        # Call to any(...): (line 3037)
        # Processing the call arguments (line 3037)
        # Getting the type of 'cond' (line 3037)
        cond_616943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 18), 'cond', False)
        # Processing the call keyword arguments (line 3037)
        kwargs_616944 = {}
        # Getting the type of 'np' (line 3037)
        np_616941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3037, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 3037)
        any_616942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3037, 11), np_616941, 'any')
        # Calling any(args, kwargs) (line 3037)
        any_call_result_616945 = invoke(stypy.reporting.localization.Localization(__file__, 3037, 11), any_616942, *[cond_616943], **kwargs_616944)
        
        # Testing the type of an if condition (line 3037)
        if_condition_616946 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3037, 8), any_call_result_616945)
        # Assigning a type to the variable 'if_condition_616946' (line 3037)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3037, 8), 'if_condition_616946', if_condition_616946)
        # SSA begins for if statement (line 3037)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 3038):
        
        # Assigning a Call to a Name (line 3038):
        
        # Call to argsreduce(...): (line 3038)
        # Processing the call arguments (line 3038)
        # Getting the type of 'cond' (line 3038)
        cond_616948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3038, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3038)
        tuple_616949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3038, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3038)
        # Adding element type (line 3038)
        # Getting the type of 'k' (line 3038)
        k_616950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3038, 43), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3038, 43), tuple_616949, k_616950)
        
        # Getting the type of 'args' (line 3038)
        args_616951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3038, 47), 'args', False)
        # Applying the binary operator '+' (line 3038)
        result_add_616952 = python_operator(stypy.reporting.localization.Localization(__file__, 3038, 42), '+', tuple_616949, args_616951)
        
        # Processing the call keyword arguments (line 3038)
        kwargs_616953 = {}
        # Getting the type of 'argsreduce' (line 3038)
        argsreduce_616947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3038, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 3038)
        argsreduce_call_result_616954 = invoke(stypy.reporting.localization.Localization(__file__, 3038, 23), argsreduce_616947, *[cond_616948, result_add_616952], **kwargs_616953)
        
        # Assigning a type to the variable 'goodargs' (line 3038)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3038, 12), 'goodargs', argsreduce_call_result_616954)
        
        # Call to place(...): (line 3039)
        # Processing the call arguments (line 3039)
        # Getting the type of 'output' (line 3039)
        output_616956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3039, 18), 'output', False)
        # Getting the type of 'cond' (line 3039)
        cond_616957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3039, 26), 'cond', False)
        
        # Call to _logsf(...): (line 3039)
        # Getting the type of 'goodargs' (line 3039)
        goodargs_616960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3039, 45), 'goodargs', False)
        # Processing the call keyword arguments (line 3039)
        kwargs_616961 = {}
        # Getting the type of 'self' (line 3039)
        self_616958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3039, 32), 'self', False)
        # Obtaining the member '_logsf' of a type (line 3039)
        _logsf_616959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3039, 32), self_616958, '_logsf')
        # Calling _logsf(args, kwargs) (line 3039)
        _logsf_call_result_616962 = invoke(stypy.reporting.localization.Localization(__file__, 3039, 32), _logsf_616959, *[goodargs_616960], **kwargs_616961)
        
        # Processing the call keyword arguments (line 3039)
        kwargs_616963 = {}
        # Getting the type of 'place' (line 3039)
        place_616955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3039, 12), 'place', False)
        # Calling place(args, kwargs) (line 3039)
        place_call_result_616964 = invoke(stypy.reporting.localization.Localization(__file__, 3039, 12), place_616955, *[output_616956, cond_616957, _logsf_call_result_616962], **kwargs_616963)
        
        # SSA join for if statement (line 3037)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 3040)
        output_616965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3040, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 3040)
        ndim_616966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3040, 11), output_616965, 'ndim')
        int_616967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3040, 26), 'int')
        # Applying the binary operator '==' (line 3040)
        result_eq_616968 = python_operator(stypy.reporting.localization.Localization(__file__, 3040, 11), '==', ndim_616966, int_616967)
        
        # Testing the type of an if condition (line 3040)
        if_condition_616969 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3040, 8), result_eq_616968)
        # Assigning a type to the variable 'if_condition_616969' (line 3040)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3040, 8), 'if_condition_616969', if_condition_616969)
        # SSA begins for if statement (line 3040)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 3041)
        tuple_616970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3041, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3041)
        
        # Getting the type of 'output' (line 3041)
        output_616971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3041, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 3041)
        getitem___616972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3041, 19), output_616971, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3041)
        subscript_call_result_616973 = invoke(stypy.reporting.localization.Localization(__file__, 3041, 19), getitem___616972, tuple_616970)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3041)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3041, 12), 'stypy_return_type', subscript_call_result_616973)
        # SSA join for if statement (line 3040)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 3042)
        output_616974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3042, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 3042)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3042, 8), 'stypy_return_type', output_616974)
        
        # ################# End of 'logsf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'logsf' in the type store
        # Getting the type of 'stypy_return_type' (line 3002)
        stypy_return_type_616975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3002, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_616975)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'logsf'
        return stypy_return_type_616975


    @norecursion
    def ppf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'ppf'
        module_type_store = module_type_store.open_function_context('ppf', 3044, 4, False)
        # Assigning a type to the variable 'self' (line 3045)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3045, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.ppf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.ppf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.ppf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.ppf.__dict__.__setitem__('stypy_function_name', 'rv_discrete.ppf')
        rv_discrete.ppf.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_discrete.ppf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete.ppf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_discrete.ppf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.ppf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.ppf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.ppf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.ppf', ['q'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'ppf', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'ppf(...)' code ##################

        str_616976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3063, (-1)), 'str', '\n        Percent point function (inverse of `cdf`) at q of the given RV.\n\n        Parameters\n        ----------\n        q : array_like\n            Lower tail probability.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter (default=0).\n\n        Returns\n        -------\n        k : array_like\n            Quantile corresponding to the lower tail probability, q.\n\n        ')
        
        # Assigning a Call to a Tuple (line 3064):
        
        # Assigning a Subscript to a Name (line 3064):
        
        # Obtaining the type of the subscript
        int_616977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3064, 8), 'int')
        
        # Call to _parse_args(...): (line 3064)
        # Getting the type of 'args' (line 3064)
        args_616980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 41), 'args', False)
        # Processing the call keyword arguments (line 3064)
        # Getting the type of 'kwds' (line 3064)
        kwds_616981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 49), 'kwds', False)
        kwargs_616982 = {'kwds_616981': kwds_616981}
        # Getting the type of 'self' (line 3064)
        self_616978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 3064)
        _parse_args_616979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3064, 23), self_616978, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 3064)
        _parse_args_call_result_616983 = invoke(stypy.reporting.localization.Localization(__file__, 3064, 23), _parse_args_616979, *[args_616980], **kwargs_616982)
        
        # Obtaining the member '__getitem__' of a type (line 3064)
        getitem___616984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3064, 8), _parse_args_call_result_616983, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3064)
        subscript_call_result_616985 = invoke(stypy.reporting.localization.Localization(__file__, 3064, 8), getitem___616984, int_616977)
        
        # Assigning a type to the variable 'tuple_var_assignment_609387' (line 3064)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3064, 8), 'tuple_var_assignment_609387', subscript_call_result_616985)
        
        # Assigning a Subscript to a Name (line 3064):
        
        # Obtaining the type of the subscript
        int_616986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3064, 8), 'int')
        
        # Call to _parse_args(...): (line 3064)
        # Getting the type of 'args' (line 3064)
        args_616989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 41), 'args', False)
        # Processing the call keyword arguments (line 3064)
        # Getting the type of 'kwds' (line 3064)
        kwds_616990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 49), 'kwds', False)
        kwargs_616991 = {'kwds_616990': kwds_616990}
        # Getting the type of 'self' (line 3064)
        self_616987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 3064)
        _parse_args_616988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3064, 23), self_616987, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 3064)
        _parse_args_call_result_616992 = invoke(stypy.reporting.localization.Localization(__file__, 3064, 23), _parse_args_616988, *[args_616989], **kwargs_616991)
        
        # Obtaining the member '__getitem__' of a type (line 3064)
        getitem___616993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3064, 8), _parse_args_call_result_616992, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3064)
        subscript_call_result_616994 = invoke(stypy.reporting.localization.Localization(__file__, 3064, 8), getitem___616993, int_616986)
        
        # Assigning a type to the variable 'tuple_var_assignment_609388' (line 3064)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3064, 8), 'tuple_var_assignment_609388', subscript_call_result_616994)
        
        # Assigning a Subscript to a Name (line 3064):
        
        # Obtaining the type of the subscript
        int_616995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3064, 8), 'int')
        
        # Call to _parse_args(...): (line 3064)
        # Getting the type of 'args' (line 3064)
        args_616998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 41), 'args', False)
        # Processing the call keyword arguments (line 3064)
        # Getting the type of 'kwds' (line 3064)
        kwds_616999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 49), 'kwds', False)
        kwargs_617000 = {'kwds_616999': kwds_616999}
        # Getting the type of 'self' (line 3064)
        self_616996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 3064)
        _parse_args_616997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3064, 23), self_616996, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 3064)
        _parse_args_call_result_617001 = invoke(stypy.reporting.localization.Localization(__file__, 3064, 23), _parse_args_616997, *[args_616998], **kwargs_617000)
        
        # Obtaining the member '__getitem__' of a type (line 3064)
        getitem___617002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3064, 8), _parse_args_call_result_617001, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3064)
        subscript_call_result_617003 = invoke(stypy.reporting.localization.Localization(__file__, 3064, 8), getitem___617002, int_616995)
        
        # Assigning a type to the variable 'tuple_var_assignment_609389' (line 3064)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3064, 8), 'tuple_var_assignment_609389', subscript_call_result_617003)
        
        # Assigning a Name to a Name (line 3064):
        # Getting the type of 'tuple_var_assignment_609387' (line 3064)
        tuple_var_assignment_609387_617004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 8), 'tuple_var_assignment_609387')
        # Assigning a type to the variable 'args' (line 3064)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3064, 8), 'args', tuple_var_assignment_609387_617004)
        
        # Assigning a Name to a Name (line 3064):
        # Getting the type of 'tuple_var_assignment_609388' (line 3064)
        tuple_var_assignment_609388_617005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 8), 'tuple_var_assignment_609388')
        # Assigning a type to the variable 'loc' (line 3064)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3064, 14), 'loc', tuple_var_assignment_609388_617005)
        
        # Assigning a Name to a Name (line 3064):
        # Getting the type of 'tuple_var_assignment_609389' (line 3064)
        tuple_var_assignment_609389_617006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3064, 8), 'tuple_var_assignment_609389')
        # Assigning a type to the variable '_' (line 3064)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3064, 19), '_', tuple_var_assignment_609389_617006)
        
        # Assigning a Call to a Tuple (line 3065):
        
        # Assigning a Subscript to a Name (line 3065):
        
        # Obtaining the type of the subscript
        int_617007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3065, 8), 'int')
        
        # Call to map(...): (line 3065)
        # Processing the call arguments (line 3065)
        # Getting the type of 'asarray' (line 3065)
        asarray_617009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3065)
        tuple_617010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3065, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3065)
        # Adding element type (line 3065)
        # Getting the type of 'q' (line 3065)
        q_617011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 31), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3065, 31), tuple_617010, q_617011)
        # Adding element type (line 3065)
        # Getting the type of 'loc' (line 3065)
        loc_617012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3065, 31), tuple_617010, loc_617012)
        
        # Processing the call keyword arguments (line 3065)
        kwargs_617013 = {}
        # Getting the type of 'map' (line 3065)
        map_617008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 17), 'map', False)
        # Calling map(args, kwargs) (line 3065)
        map_call_result_617014 = invoke(stypy.reporting.localization.Localization(__file__, 3065, 17), map_617008, *[asarray_617009, tuple_617010], **kwargs_617013)
        
        # Obtaining the member '__getitem__' of a type (line 3065)
        getitem___617015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3065, 8), map_call_result_617014, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3065)
        subscript_call_result_617016 = invoke(stypy.reporting.localization.Localization(__file__, 3065, 8), getitem___617015, int_617007)
        
        # Assigning a type to the variable 'tuple_var_assignment_609390' (line 3065)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3065, 8), 'tuple_var_assignment_609390', subscript_call_result_617016)
        
        # Assigning a Subscript to a Name (line 3065):
        
        # Obtaining the type of the subscript
        int_617017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3065, 8), 'int')
        
        # Call to map(...): (line 3065)
        # Processing the call arguments (line 3065)
        # Getting the type of 'asarray' (line 3065)
        asarray_617019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3065)
        tuple_617020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3065, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3065)
        # Adding element type (line 3065)
        # Getting the type of 'q' (line 3065)
        q_617021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 31), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3065, 31), tuple_617020, q_617021)
        # Adding element type (line 3065)
        # Getting the type of 'loc' (line 3065)
        loc_617022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3065, 31), tuple_617020, loc_617022)
        
        # Processing the call keyword arguments (line 3065)
        kwargs_617023 = {}
        # Getting the type of 'map' (line 3065)
        map_617018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 17), 'map', False)
        # Calling map(args, kwargs) (line 3065)
        map_call_result_617024 = invoke(stypy.reporting.localization.Localization(__file__, 3065, 17), map_617018, *[asarray_617019, tuple_617020], **kwargs_617023)
        
        # Obtaining the member '__getitem__' of a type (line 3065)
        getitem___617025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3065, 8), map_call_result_617024, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3065)
        subscript_call_result_617026 = invoke(stypy.reporting.localization.Localization(__file__, 3065, 8), getitem___617025, int_617017)
        
        # Assigning a type to the variable 'tuple_var_assignment_609391' (line 3065)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3065, 8), 'tuple_var_assignment_609391', subscript_call_result_617026)
        
        # Assigning a Name to a Name (line 3065):
        # Getting the type of 'tuple_var_assignment_609390' (line 3065)
        tuple_var_assignment_609390_617027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 8), 'tuple_var_assignment_609390')
        # Assigning a type to the variable 'q' (line 3065)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3065, 8), 'q', tuple_var_assignment_609390_617027)
        
        # Assigning a Name to a Name (line 3065):
        # Getting the type of 'tuple_var_assignment_609391' (line 3065)
        tuple_var_assignment_609391_617028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3065, 8), 'tuple_var_assignment_609391')
        # Assigning a type to the variable 'loc' (line 3065)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3065, 11), 'loc', tuple_var_assignment_609391_617028)
        
        # Assigning a Call to a Name (line 3066):
        
        # Assigning a Call to a Name (line 3066):
        
        # Call to tuple(...): (line 3066)
        # Processing the call arguments (line 3066)
        
        # Call to map(...): (line 3066)
        # Processing the call arguments (line 3066)
        # Getting the type of 'asarray' (line 3066)
        asarray_617031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3066, 25), 'asarray', False)
        # Getting the type of 'args' (line 3066)
        args_617032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3066, 34), 'args', False)
        # Processing the call keyword arguments (line 3066)
        kwargs_617033 = {}
        # Getting the type of 'map' (line 3066)
        map_617030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3066, 21), 'map', False)
        # Calling map(args, kwargs) (line 3066)
        map_call_result_617034 = invoke(stypy.reporting.localization.Localization(__file__, 3066, 21), map_617030, *[asarray_617031, args_617032], **kwargs_617033)
        
        # Processing the call keyword arguments (line 3066)
        kwargs_617035 = {}
        # Getting the type of 'tuple' (line 3066)
        tuple_617029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3066, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 3066)
        tuple_call_result_617036 = invoke(stypy.reporting.localization.Localization(__file__, 3066, 15), tuple_617029, *[map_call_result_617034], **kwargs_617035)
        
        # Assigning a type to the variable 'args' (line 3066)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3066, 8), 'args', tuple_call_result_617036)
        
        # Assigning a BinOp to a Name (line 3067):
        
        # Assigning a BinOp to a Name (line 3067):
        
        # Call to _argcheck(...): (line 3067)
        # Getting the type of 'args' (line 3067)
        args_617039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3067, 32), 'args', False)
        # Processing the call keyword arguments (line 3067)
        kwargs_617040 = {}
        # Getting the type of 'self' (line 3067)
        self_617037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3067, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 3067)
        _argcheck_617038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3067, 16), self_617037, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 3067)
        _argcheck_call_result_617041 = invoke(stypy.reporting.localization.Localization(__file__, 3067, 16), _argcheck_617038, *[args_617039], **kwargs_617040)
        
        
        # Getting the type of 'loc' (line 3067)
        loc_617042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3067, 41), 'loc')
        # Getting the type of 'loc' (line 3067)
        loc_617043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3067, 48), 'loc')
        # Applying the binary operator '==' (line 3067)
        result_eq_617044 = python_operator(stypy.reporting.localization.Localization(__file__, 3067, 41), '==', loc_617042, loc_617043)
        
        # Applying the binary operator '&' (line 3067)
        result_and__617045 = python_operator(stypy.reporting.localization.Localization(__file__, 3067, 16), '&', _argcheck_call_result_617041, result_eq_617044)
        
        # Assigning a type to the variable 'cond0' (line 3067)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3067, 8), 'cond0', result_and__617045)
        
        # Assigning a BinOp to a Name (line 3068):
        
        # Assigning a BinOp to a Name (line 3068):
        
        # Getting the type of 'q' (line 3068)
        q_617046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3068, 17), 'q')
        int_617047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3068, 21), 'int')
        # Applying the binary operator '>' (line 3068)
        result_gt_617048 = python_operator(stypy.reporting.localization.Localization(__file__, 3068, 17), '>', q_617046, int_617047)
        
        
        # Getting the type of 'q' (line 3068)
        q_617049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3068, 27), 'q')
        int_617050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3068, 31), 'int')
        # Applying the binary operator '<' (line 3068)
        result_lt_617051 = python_operator(stypy.reporting.localization.Localization(__file__, 3068, 27), '<', q_617049, int_617050)
        
        # Applying the binary operator '&' (line 3068)
        result_and__617052 = python_operator(stypy.reporting.localization.Localization(__file__, 3068, 16), '&', result_gt_617048, result_lt_617051)
        
        # Assigning a type to the variable 'cond1' (line 3068)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3068, 8), 'cond1', result_and__617052)
        
        # Assigning a BinOp to a Name (line 3069):
        
        # Assigning a BinOp to a Name (line 3069):
        
        # Getting the type of 'q' (line 3069)
        q_617053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3069, 17), 'q')
        int_617054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3069, 22), 'int')
        # Applying the binary operator '==' (line 3069)
        result_eq_617055 = python_operator(stypy.reporting.localization.Localization(__file__, 3069, 17), '==', q_617053, int_617054)
        
        # Getting the type of 'cond0' (line 3069)
        cond0_617056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3069, 27), 'cond0')
        # Applying the binary operator '&' (line 3069)
        result_and__617057 = python_operator(stypy.reporting.localization.Localization(__file__, 3069, 16), '&', result_eq_617055, cond0_617056)
        
        # Assigning a type to the variable 'cond2' (line 3069)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3069, 8), 'cond2', result_and__617057)
        
        # Assigning a BinOp to a Name (line 3070):
        
        # Assigning a BinOp to a Name (line 3070):
        # Getting the type of 'cond0' (line 3070)
        cond0_617058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3070, 15), 'cond0')
        # Getting the type of 'cond1' (line 3070)
        cond1_617059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3070, 23), 'cond1')
        # Applying the binary operator '&' (line 3070)
        result_and__617060 = python_operator(stypy.reporting.localization.Localization(__file__, 3070, 15), '&', cond0_617058, cond1_617059)
        
        # Assigning a type to the variable 'cond' (line 3070)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3070, 8), 'cond', result_and__617060)
        
        # Assigning a Call to a Name (line 3071):
        
        # Assigning a Call to a Name (line 3071):
        
        # Call to valarray(...): (line 3071)
        # Processing the call arguments (line 3071)
        
        # Call to shape(...): (line 3071)
        # Processing the call arguments (line 3071)
        # Getting the type of 'cond' (line 3071)
        cond_617063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3071, 32), 'cond', False)
        # Processing the call keyword arguments (line 3071)
        kwargs_617064 = {}
        # Getting the type of 'shape' (line 3071)
        shape_617062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3071, 26), 'shape', False)
        # Calling shape(args, kwargs) (line 3071)
        shape_call_result_617065 = invoke(stypy.reporting.localization.Localization(__file__, 3071, 26), shape_617062, *[cond_617063], **kwargs_617064)
        
        # Processing the call keyword arguments (line 3071)
        # Getting the type of 'self' (line 3071)
        self_617066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3071, 45), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 3071)
        badvalue_617067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3071, 45), self_617066, 'badvalue')
        keyword_617068 = badvalue_617067
        str_617069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3071, 69), 'str', 'd')
        keyword_617070 = str_617069
        kwargs_617071 = {'value': keyword_617068, 'typecode': keyword_617070}
        # Getting the type of 'valarray' (line 3071)
        valarray_617061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3071, 17), 'valarray', False)
        # Calling valarray(args, kwargs) (line 3071)
        valarray_call_result_617072 = invoke(stypy.reporting.localization.Localization(__file__, 3071, 17), valarray_617061, *[shape_call_result_617065], **kwargs_617071)
        
        # Assigning a type to the variable 'output' (line 3071)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3071, 8), 'output', valarray_call_result_617072)
        
        # Call to place(...): (line 3073)
        # Processing the call arguments (line 3073)
        # Getting the type of 'output' (line 3073)
        output_617074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3073, 14), 'output', False)
        
        # Getting the type of 'q' (line 3073)
        q_617075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3073, 23), 'q', False)
        int_617076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3073, 28), 'int')
        # Applying the binary operator '==' (line 3073)
        result_eq_617077 = python_operator(stypy.reporting.localization.Localization(__file__, 3073, 23), '==', q_617075, int_617076)
        
        
        # Getting the type of 'cond' (line 3073)
        cond_617078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3073, 32), 'cond', False)
        # Getting the type of 'cond' (line 3073)
        cond_617079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3073, 40), 'cond', False)
        # Applying the binary operator '==' (line 3073)
        result_eq_617080 = python_operator(stypy.reporting.localization.Localization(__file__, 3073, 32), '==', cond_617078, cond_617079)
        
        # Applying the binary operator '*' (line 3073)
        result_mul_617081 = python_operator(stypy.reporting.localization.Localization(__file__, 3073, 22), '*', result_eq_617077, result_eq_617080)
        
        # Getting the type of 'self' (line 3073)
        self_617082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3073, 47), 'self', False)
        # Obtaining the member 'a' of a type (line 3073)
        a_617083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3073, 47), self_617082, 'a')
        int_617084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3073, 54), 'int')
        # Applying the binary operator '-' (line 3073)
        result_sub_617085 = python_operator(stypy.reporting.localization.Localization(__file__, 3073, 47), '-', a_617083, int_617084)
        
        # Processing the call keyword arguments (line 3073)
        kwargs_617086 = {}
        # Getting the type of 'place' (line 3073)
        place_617073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3073, 8), 'place', False)
        # Calling place(args, kwargs) (line 3073)
        place_call_result_617087 = invoke(stypy.reporting.localization.Localization(__file__, 3073, 8), place_617073, *[output_617074, result_mul_617081, result_sub_617085], **kwargs_617086)
        
        
        # Call to place(...): (line 3074)
        # Processing the call arguments (line 3074)
        # Getting the type of 'output' (line 3074)
        output_617089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3074, 14), 'output', False)
        # Getting the type of 'cond2' (line 3074)
        cond2_617090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3074, 22), 'cond2', False)
        # Getting the type of 'self' (line 3074)
        self_617091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3074, 29), 'self', False)
        # Obtaining the member 'b' of a type (line 3074)
        b_617092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3074, 29), self_617091, 'b')
        # Processing the call keyword arguments (line 3074)
        kwargs_617093 = {}
        # Getting the type of 'place' (line 3074)
        place_617088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3074, 8), 'place', False)
        # Calling place(args, kwargs) (line 3074)
        place_call_result_617094 = invoke(stypy.reporting.localization.Localization(__file__, 3074, 8), place_617088, *[output_617089, cond2_617090, b_617092], **kwargs_617093)
        
        
        
        # Call to any(...): (line 3075)
        # Processing the call arguments (line 3075)
        # Getting the type of 'cond' (line 3075)
        cond_617097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3075, 18), 'cond', False)
        # Processing the call keyword arguments (line 3075)
        kwargs_617098 = {}
        # Getting the type of 'np' (line 3075)
        np_617095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3075, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 3075)
        any_617096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3075, 11), np_617095, 'any')
        # Calling any(args, kwargs) (line 3075)
        any_call_result_617099 = invoke(stypy.reporting.localization.Localization(__file__, 3075, 11), any_617096, *[cond_617097], **kwargs_617098)
        
        # Testing the type of an if condition (line 3075)
        if_condition_617100 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3075, 8), any_call_result_617099)
        # Assigning a type to the variable 'if_condition_617100' (line 3075)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3075, 8), 'if_condition_617100', if_condition_617100)
        # SSA begins for if statement (line 3075)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 3076):
        
        # Assigning a Call to a Name (line 3076):
        
        # Call to argsreduce(...): (line 3076)
        # Processing the call arguments (line 3076)
        # Getting the type of 'cond' (line 3076)
        cond_617102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3076)
        tuple_617103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3076, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3076)
        # Adding element type (line 3076)
        # Getting the type of 'q' (line 3076)
        q_617104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 43), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3076, 43), tuple_617103, q_617104)
        
        # Getting the type of 'args' (line 3076)
        args_617105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 47), 'args', False)
        # Applying the binary operator '+' (line 3076)
        result_add_617106 = python_operator(stypy.reporting.localization.Localization(__file__, 3076, 42), '+', tuple_617103, args_617105)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 3076)
        tuple_617107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3076, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3076)
        # Adding element type (line 3076)
        # Getting the type of 'loc' (line 3076)
        loc_617108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 53), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3076, 53), tuple_617107, loc_617108)
        
        # Applying the binary operator '+' (line 3076)
        result_add_617109 = python_operator(stypy.reporting.localization.Localization(__file__, 3076, 51), '+', result_add_617106, tuple_617107)
        
        # Processing the call keyword arguments (line 3076)
        kwargs_617110 = {}
        # Getting the type of 'argsreduce' (line 3076)
        argsreduce_617101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3076, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 3076)
        argsreduce_call_result_617111 = invoke(stypy.reporting.localization.Localization(__file__, 3076, 23), argsreduce_617101, *[cond_617102, result_add_617109], **kwargs_617110)
        
        # Assigning a type to the variable 'goodargs' (line 3076)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3076, 12), 'goodargs', argsreduce_call_result_617111)
        
        # Assigning a Tuple to a Tuple (line 3077):
        
        # Assigning a Subscript to a Name (line 3077):
        
        # Obtaining the type of the subscript
        int_617112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3077, 37), 'int')
        # Getting the type of 'goodargs' (line 3077)
        goodargs_617113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3077, 28), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 3077)
        getitem___617114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3077, 28), goodargs_617113, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3077)
        subscript_call_result_617115 = invoke(stypy.reporting.localization.Localization(__file__, 3077, 28), getitem___617114, int_617112)
        
        # Assigning a type to the variable 'tuple_assignment_609392' (line 3077)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3077, 12), 'tuple_assignment_609392', subscript_call_result_617115)
        
        # Assigning a Subscript to a Name (line 3077):
        
        # Obtaining the type of the subscript
        int_617116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3077, 52), 'int')
        slice_617117 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3077, 42), None, int_617116, None)
        # Getting the type of 'goodargs' (line 3077)
        goodargs_617118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3077, 42), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 3077)
        getitem___617119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3077, 42), goodargs_617118, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3077)
        subscript_call_result_617120 = invoke(stypy.reporting.localization.Localization(__file__, 3077, 42), getitem___617119, slice_617117)
        
        # Assigning a type to the variable 'tuple_assignment_609393' (line 3077)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3077, 12), 'tuple_assignment_609393', subscript_call_result_617120)
        
        # Assigning a Name to a Name (line 3077):
        # Getting the type of 'tuple_assignment_609392' (line 3077)
        tuple_assignment_609392_617121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3077, 12), 'tuple_assignment_609392')
        # Assigning a type to the variable 'loc' (line 3077)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3077, 12), 'loc', tuple_assignment_609392_617121)
        
        # Assigning a Name to a Name (line 3077):
        # Getting the type of 'tuple_assignment_609393' (line 3077)
        tuple_assignment_609393_617122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3077, 12), 'tuple_assignment_609393')
        # Assigning a type to the variable 'goodargs' (line 3077)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3077, 17), 'goodargs', tuple_assignment_609393_617122)
        
        # Call to place(...): (line 3078)
        # Processing the call arguments (line 3078)
        # Getting the type of 'output' (line 3078)
        output_617124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3078, 18), 'output', False)
        # Getting the type of 'cond' (line 3078)
        cond_617125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3078, 26), 'cond', False)
        
        # Call to _ppf(...): (line 3078)
        # Getting the type of 'goodargs' (line 3078)
        goodargs_617128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3078, 43), 'goodargs', False)
        # Processing the call keyword arguments (line 3078)
        kwargs_617129 = {}
        # Getting the type of 'self' (line 3078)
        self_617126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3078, 32), 'self', False)
        # Obtaining the member '_ppf' of a type (line 3078)
        _ppf_617127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3078, 32), self_617126, '_ppf')
        # Calling _ppf(args, kwargs) (line 3078)
        _ppf_call_result_617130 = invoke(stypy.reporting.localization.Localization(__file__, 3078, 32), _ppf_617127, *[goodargs_617128], **kwargs_617129)
        
        # Getting the type of 'loc' (line 3078)
        loc_617131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3078, 55), 'loc', False)
        # Applying the binary operator '+' (line 3078)
        result_add_617132 = python_operator(stypy.reporting.localization.Localization(__file__, 3078, 32), '+', _ppf_call_result_617130, loc_617131)
        
        # Processing the call keyword arguments (line 3078)
        kwargs_617133 = {}
        # Getting the type of 'place' (line 3078)
        place_617123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3078, 12), 'place', False)
        # Calling place(args, kwargs) (line 3078)
        place_call_result_617134 = invoke(stypy.reporting.localization.Localization(__file__, 3078, 12), place_617123, *[output_617124, cond_617125, result_add_617132], **kwargs_617133)
        
        # SSA join for if statement (line 3075)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 3080)
        output_617135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3080, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 3080)
        ndim_617136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3080, 11), output_617135, 'ndim')
        int_617137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3080, 26), 'int')
        # Applying the binary operator '==' (line 3080)
        result_eq_617138 = python_operator(stypy.reporting.localization.Localization(__file__, 3080, 11), '==', ndim_617136, int_617137)
        
        # Testing the type of an if condition (line 3080)
        if_condition_617139 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3080, 8), result_eq_617138)
        # Assigning a type to the variable 'if_condition_617139' (line 3080)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3080, 8), 'if_condition_617139', if_condition_617139)
        # SSA begins for if statement (line 3080)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 3081)
        tuple_617140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3081, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3081)
        
        # Getting the type of 'output' (line 3081)
        output_617141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3081, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 3081)
        getitem___617142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3081, 19), output_617141, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3081)
        subscript_call_result_617143 = invoke(stypy.reporting.localization.Localization(__file__, 3081, 19), getitem___617142, tuple_617140)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3081)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3081, 12), 'stypy_return_type', subscript_call_result_617143)
        # SSA join for if statement (line 3080)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 3082)
        output_617144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3082, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 3082)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3082, 8), 'stypy_return_type', output_617144)
        
        # ################# End of 'ppf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'ppf' in the type store
        # Getting the type of 'stypy_return_type' (line 3044)
        stypy_return_type_617145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3044, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_617145)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'ppf'
        return stypy_return_type_617145


    @norecursion
    def isf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'isf'
        module_type_store = module_type_store.open_function_context('isf', 3084, 4, False)
        # Assigning a type to the variable 'self' (line 3085)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3085, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.isf.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.isf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.isf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.isf.__dict__.__setitem__('stypy_function_name', 'rv_discrete.isf')
        rv_discrete.isf.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_discrete.isf.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete.isf.__dict__.__setitem__('stypy_kwargs_param_name', 'kwds')
        rv_discrete.isf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.isf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.isf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.isf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.isf', ['q'], 'args', 'kwds', defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'isf', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'isf(...)' code ##################

        str_617146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3103, (-1)), 'str', '\n        Inverse survival function (inverse of `sf`) at q of the given RV.\n\n        Parameters\n        ----------\n        q : array_like\n            Upper tail probability.\n        arg1, arg2, arg3,... : array_like\n            The shape parameter(s) for the distribution (see docstring of the\n            instance object for more information).\n        loc : array_like, optional\n            Location parameter (default=0).\n\n        Returns\n        -------\n        k : ndarray or scalar\n            Quantile corresponding to the upper tail probability, q.\n\n        ')
        
        # Assigning a Call to a Tuple (line 3104):
        
        # Assigning a Subscript to a Name (line 3104):
        
        # Obtaining the type of the subscript
        int_617147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3104, 8), 'int')
        
        # Call to _parse_args(...): (line 3104)
        # Getting the type of 'args' (line 3104)
        args_617150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 41), 'args', False)
        # Processing the call keyword arguments (line 3104)
        # Getting the type of 'kwds' (line 3104)
        kwds_617151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 49), 'kwds', False)
        kwargs_617152 = {'kwds_617151': kwds_617151}
        # Getting the type of 'self' (line 3104)
        self_617148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 3104)
        _parse_args_617149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3104, 23), self_617148, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 3104)
        _parse_args_call_result_617153 = invoke(stypy.reporting.localization.Localization(__file__, 3104, 23), _parse_args_617149, *[args_617150], **kwargs_617152)
        
        # Obtaining the member '__getitem__' of a type (line 3104)
        getitem___617154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3104, 8), _parse_args_call_result_617153, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3104)
        subscript_call_result_617155 = invoke(stypy.reporting.localization.Localization(__file__, 3104, 8), getitem___617154, int_617147)
        
        # Assigning a type to the variable 'tuple_var_assignment_609394' (line 3104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3104, 8), 'tuple_var_assignment_609394', subscript_call_result_617155)
        
        # Assigning a Subscript to a Name (line 3104):
        
        # Obtaining the type of the subscript
        int_617156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3104, 8), 'int')
        
        # Call to _parse_args(...): (line 3104)
        # Getting the type of 'args' (line 3104)
        args_617159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 41), 'args', False)
        # Processing the call keyword arguments (line 3104)
        # Getting the type of 'kwds' (line 3104)
        kwds_617160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 49), 'kwds', False)
        kwargs_617161 = {'kwds_617160': kwds_617160}
        # Getting the type of 'self' (line 3104)
        self_617157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 3104)
        _parse_args_617158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3104, 23), self_617157, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 3104)
        _parse_args_call_result_617162 = invoke(stypy.reporting.localization.Localization(__file__, 3104, 23), _parse_args_617158, *[args_617159], **kwargs_617161)
        
        # Obtaining the member '__getitem__' of a type (line 3104)
        getitem___617163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3104, 8), _parse_args_call_result_617162, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3104)
        subscript_call_result_617164 = invoke(stypy.reporting.localization.Localization(__file__, 3104, 8), getitem___617163, int_617156)
        
        # Assigning a type to the variable 'tuple_var_assignment_609395' (line 3104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3104, 8), 'tuple_var_assignment_609395', subscript_call_result_617164)
        
        # Assigning a Subscript to a Name (line 3104):
        
        # Obtaining the type of the subscript
        int_617165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3104, 8), 'int')
        
        # Call to _parse_args(...): (line 3104)
        # Getting the type of 'args' (line 3104)
        args_617168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 41), 'args', False)
        # Processing the call keyword arguments (line 3104)
        # Getting the type of 'kwds' (line 3104)
        kwds_617169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 49), 'kwds', False)
        kwargs_617170 = {'kwds_617169': kwds_617169}
        # Getting the type of 'self' (line 3104)
        self_617166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 23), 'self', False)
        # Obtaining the member '_parse_args' of a type (line 3104)
        _parse_args_617167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3104, 23), self_617166, '_parse_args')
        # Calling _parse_args(args, kwargs) (line 3104)
        _parse_args_call_result_617171 = invoke(stypy.reporting.localization.Localization(__file__, 3104, 23), _parse_args_617167, *[args_617168], **kwargs_617170)
        
        # Obtaining the member '__getitem__' of a type (line 3104)
        getitem___617172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3104, 8), _parse_args_call_result_617171, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3104)
        subscript_call_result_617173 = invoke(stypy.reporting.localization.Localization(__file__, 3104, 8), getitem___617172, int_617165)
        
        # Assigning a type to the variable 'tuple_var_assignment_609396' (line 3104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3104, 8), 'tuple_var_assignment_609396', subscript_call_result_617173)
        
        # Assigning a Name to a Name (line 3104):
        # Getting the type of 'tuple_var_assignment_609394' (line 3104)
        tuple_var_assignment_609394_617174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 8), 'tuple_var_assignment_609394')
        # Assigning a type to the variable 'args' (line 3104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3104, 8), 'args', tuple_var_assignment_609394_617174)
        
        # Assigning a Name to a Name (line 3104):
        # Getting the type of 'tuple_var_assignment_609395' (line 3104)
        tuple_var_assignment_609395_617175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 8), 'tuple_var_assignment_609395')
        # Assigning a type to the variable 'loc' (line 3104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3104, 14), 'loc', tuple_var_assignment_609395_617175)
        
        # Assigning a Name to a Name (line 3104):
        # Getting the type of 'tuple_var_assignment_609396' (line 3104)
        tuple_var_assignment_609396_617176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3104, 8), 'tuple_var_assignment_609396')
        # Assigning a type to the variable '_' (line 3104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3104, 19), '_', tuple_var_assignment_609396_617176)
        
        # Assigning a Call to a Tuple (line 3105):
        
        # Assigning a Subscript to a Name (line 3105):
        
        # Obtaining the type of the subscript
        int_617177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3105, 8), 'int')
        
        # Call to map(...): (line 3105)
        # Processing the call arguments (line 3105)
        # Getting the type of 'asarray' (line 3105)
        asarray_617179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3105)
        tuple_617180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3105, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3105)
        # Adding element type (line 3105)
        # Getting the type of 'q' (line 3105)
        q_617181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 31), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3105, 31), tuple_617180, q_617181)
        # Adding element type (line 3105)
        # Getting the type of 'loc' (line 3105)
        loc_617182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3105, 31), tuple_617180, loc_617182)
        
        # Processing the call keyword arguments (line 3105)
        kwargs_617183 = {}
        # Getting the type of 'map' (line 3105)
        map_617178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 17), 'map', False)
        # Calling map(args, kwargs) (line 3105)
        map_call_result_617184 = invoke(stypy.reporting.localization.Localization(__file__, 3105, 17), map_617178, *[asarray_617179, tuple_617180], **kwargs_617183)
        
        # Obtaining the member '__getitem__' of a type (line 3105)
        getitem___617185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3105, 8), map_call_result_617184, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3105)
        subscript_call_result_617186 = invoke(stypy.reporting.localization.Localization(__file__, 3105, 8), getitem___617185, int_617177)
        
        # Assigning a type to the variable 'tuple_var_assignment_609397' (line 3105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3105, 8), 'tuple_var_assignment_609397', subscript_call_result_617186)
        
        # Assigning a Subscript to a Name (line 3105):
        
        # Obtaining the type of the subscript
        int_617187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3105, 8), 'int')
        
        # Call to map(...): (line 3105)
        # Processing the call arguments (line 3105)
        # Getting the type of 'asarray' (line 3105)
        asarray_617189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 21), 'asarray', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3105)
        tuple_617190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3105, 31), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3105)
        # Adding element type (line 3105)
        # Getting the type of 'q' (line 3105)
        q_617191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 31), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3105, 31), tuple_617190, q_617191)
        # Adding element type (line 3105)
        # Getting the type of 'loc' (line 3105)
        loc_617192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 34), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3105, 31), tuple_617190, loc_617192)
        
        # Processing the call keyword arguments (line 3105)
        kwargs_617193 = {}
        # Getting the type of 'map' (line 3105)
        map_617188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 17), 'map', False)
        # Calling map(args, kwargs) (line 3105)
        map_call_result_617194 = invoke(stypy.reporting.localization.Localization(__file__, 3105, 17), map_617188, *[asarray_617189, tuple_617190], **kwargs_617193)
        
        # Obtaining the member '__getitem__' of a type (line 3105)
        getitem___617195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3105, 8), map_call_result_617194, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3105)
        subscript_call_result_617196 = invoke(stypy.reporting.localization.Localization(__file__, 3105, 8), getitem___617195, int_617187)
        
        # Assigning a type to the variable 'tuple_var_assignment_609398' (line 3105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3105, 8), 'tuple_var_assignment_609398', subscript_call_result_617196)
        
        # Assigning a Name to a Name (line 3105):
        # Getting the type of 'tuple_var_assignment_609397' (line 3105)
        tuple_var_assignment_609397_617197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 8), 'tuple_var_assignment_609397')
        # Assigning a type to the variable 'q' (line 3105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3105, 8), 'q', tuple_var_assignment_609397_617197)
        
        # Assigning a Name to a Name (line 3105):
        # Getting the type of 'tuple_var_assignment_609398' (line 3105)
        tuple_var_assignment_609398_617198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3105, 8), 'tuple_var_assignment_609398')
        # Assigning a type to the variable 'loc' (line 3105)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3105, 11), 'loc', tuple_var_assignment_609398_617198)
        
        # Assigning a Call to a Name (line 3106):
        
        # Assigning a Call to a Name (line 3106):
        
        # Call to tuple(...): (line 3106)
        # Processing the call arguments (line 3106)
        
        # Call to map(...): (line 3106)
        # Processing the call arguments (line 3106)
        # Getting the type of 'asarray' (line 3106)
        asarray_617201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3106, 25), 'asarray', False)
        # Getting the type of 'args' (line 3106)
        args_617202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3106, 34), 'args', False)
        # Processing the call keyword arguments (line 3106)
        kwargs_617203 = {}
        # Getting the type of 'map' (line 3106)
        map_617200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3106, 21), 'map', False)
        # Calling map(args, kwargs) (line 3106)
        map_call_result_617204 = invoke(stypy.reporting.localization.Localization(__file__, 3106, 21), map_617200, *[asarray_617201, args_617202], **kwargs_617203)
        
        # Processing the call keyword arguments (line 3106)
        kwargs_617205 = {}
        # Getting the type of 'tuple' (line 3106)
        tuple_617199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3106, 15), 'tuple', False)
        # Calling tuple(args, kwargs) (line 3106)
        tuple_call_result_617206 = invoke(stypy.reporting.localization.Localization(__file__, 3106, 15), tuple_617199, *[map_call_result_617204], **kwargs_617205)
        
        # Assigning a type to the variable 'args' (line 3106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3106, 8), 'args', tuple_call_result_617206)
        
        # Assigning a BinOp to a Name (line 3107):
        
        # Assigning a BinOp to a Name (line 3107):
        
        # Call to _argcheck(...): (line 3107)
        # Getting the type of 'args' (line 3107)
        args_617209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3107, 32), 'args', False)
        # Processing the call keyword arguments (line 3107)
        kwargs_617210 = {}
        # Getting the type of 'self' (line 3107)
        self_617207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3107, 16), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 3107)
        _argcheck_617208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3107, 16), self_617207, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 3107)
        _argcheck_call_result_617211 = invoke(stypy.reporting.localization.Localization(__file__, 3107, 16), _argcheck_617208, *[args_617209], **kwargs_617210)
        
        
        # Getting the type of 'loc' (line 3107)
        loc_617212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3107, 41), 'loc')
        # Getting the type of 'loc' (line 3107)
        loc_617213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3107, 48), 'loc')
        # Applying the binary operator '==' (line 3107)
        result_eq_617214 = python_operator(stypy.reporting.localization.Localization(__file__, 3107, 41), '==', loc_617212, loc_617213)
        
        # Applying the binary operator '&' (line 3107)
        result_and__617215 = python_operator(stypy.reporting.localization.Localization(__file__, 3107, 16), '&', _argcheck_call_result_617211, result_eq_617214)
        
        # Assigning a type to the variable 'cond0' (line 3107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3107, 8), 'cond0', result_and__617215)
        
        # Assigning a BinOp to a Name (line 3108):
        
        # Assigning a BinOp to a Name (line 3108):
        
        # Getting the type of 'q' (line 3108)
        q_617216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3108, 17), 'q')
        int_617217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3108, 21), 'int')
        # Applying the binary operator '>' (line 3108)
        result_gt_617218 = python_operator(stypy.reporting.localization.Localization(__file__, 3108, 17), '>', q_617216, int_617217)
        
        
        # Getting the type of 'q' (line 3108)
        q_617219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3108, 27), 'q')
        int_617220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3108, 31), 'int')
        # Applying the binary operator '<' (line 3108)
        result_lt_617221 = python_operator(stypy.reporting.localization.Localization(__file__, 3108, 27), '<', q_617219, int_617220)
        
        # Applying the binary operator '&' (line 3108)
        result_and__617222 = python_operator(stypy.reporting.localization.Localization(__file__, 3108, 16), '&', result_gt_617218, result_lt_617221)
        
        # Assigning a type to the variable 'cond1' (line 3108)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3108, 8), 'cond1', result_and__617222)
        
        # Assigning a BinOp to a Name (line 3109):
        
        # Assigning a BinOp to a Name (line 3109):
        
        # Getting the type of 'q' (line 3109)
        q_617223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3109, 17), 'q')
        int_617224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3109, 22), 'int')
        # Applying the binary operator '==' (line 3109)
        result_eq_617225 = python_operator(stypy.reporting.localization.Localization(__file__, 3109, 17), '==', q_617223, int_617224)
        
        # Getting the type of 'cond0' (line 3109)
        cond0_617226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3109, 27), 'cond0')
        # Applying the binary operator '&' (line 3109)
        result_and__617227 = python_operator(stypy.reporting.localization.Localization(__file__, 3109, 16), '&', result_eq_617225, cond0_617226)
        
        # Assigning a type to the variable 'cond2' (line 3109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3109, 8), 'cond2', result_and__617227)
        
        # Assigning a BinOp to a Name (line 3110):
        
        # Assigning a BinOp to a Name (line 3110):
        # Getting the type of 'cond0' (line 3110)
        cond0_617228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3110, 15), 'cond0')
        # Getting the type of 'cond1' (line 3110)
        cond1_617229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3110, 23), 'cond1')
        # Applying the binary operator '&' (line 3110)
        result_and__617230 = python_operator(stypy.reporting.localization.Localization(__file__, 3110, 15), '&', cond0_617228, cond1_617229)
        
        # Assigning a type to the variable 'cond' (line 3110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3110, 8), 'cond', result_and__617230)
        
        # Assigning a Call to a Name (line 3113):
        
        # Assigning a Call to a Name (line 3113):
        
        # Call to valarray(...): (line 3113)
        # Processing the call arguments (line 3113)
        
        # Call to shape(...): (line 3113)
        # Processing the call arguments (line 3113)
        # Getting the type of 'cond' (line 3113)
        cond_617233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3113, 32), 'cond', False)
        # Processing the call keyword arguments (line 3113)
        kwargs_617234 = {}
        # Getting the type of 'shape' (line 3113)
        shape_617232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3113, 26), 'shape', False)
        # Calling shape(args, kwargs) (line 3113)
        shape_call_result_617235 = invoke(stypy.reporting.localization.Localization(__file__, 3113, 26), shape_617232, *[cond_617233], **kwargs_617234)
        
        # Processing the call keyword arguments (line 3113)
        # Getting the type of 'self' (line 3113)
        self_617236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3113, 45), 'self', False)
        # Obtaining the member 'badvalue' of a type (line 3113)
        badvalue_617237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3113, 45), self_617236, 'badvalue')
        keyword_617238 = badvalue_617237
        str_617239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3113, 69), 'str', 'd')
        keyword_617240 = str_617239
        kwargs_617241 = {'value': keyword_617238, 'typecode': keyword_617240}
        # Getting the type of 'valarray' (line 3113)
        valarray_617231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3113, 17), 'valarray', False)
        # Calling valarray(args, kwargs) (line 3113)
        valarray_call_result_617242 = invoke(stypy.reporting.localization.Localization(__file__, 3113, 17), valarray_617231, *[shape_call_result_617235], **kwargs_617241)
        
        # Assigning a type to the variable 'output' (line 3113)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3113, 8), 'output', valarray_call_result_617242)
        
        # Call to place(...): (line 3115)
        # Processing the call arguments (line 3115)
        # Getting the type of 'output' (line 3115)
        output_617244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3115, 14), 'output', False)
        
        # Getting the type of 'q' (line 3115)
        q_617245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3115, 23), 'q', False)
        int_617246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3115, 28), 'int')
        # Applying the binary operator '==' (line 3115)
        result_eq_617247 = python_operator(stypy.reporting.localization.Localization(__file__, 3115, 23), '==', q_617245, int_617246)
        
        
        # Getting the type of 'cond' (line 3115)
        cond_617248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3115, 32), 'cond', False)
        # Getting the type of 'cond' (line 3115)
        cond_617249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3115, 40), 'cond', False)
        # Applying the binary operator '==' (line 3115)
        result_eq_617250 = python_operator(stypy.reporting.localization.Localization(__file__, 3115, 32), '==', cond_617248, cond_617249)
        
        # Applying the binary operator '*' (line 3115)
        result_mul_617251 = python_operator(stypy.reporting.localization.Localization(__file__, 3115, 22), '*', result_eq_617247, result_eq_617250)
        
        # Getting the type of 'self' (line 3115)
        self_617252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3115, 47), 'self', False)
        # Obtaining the member 'b' of a type (line 3115)
        b_617253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3115, 47), self_617252, 'b')
        # Processing the call keyword arguments (line 3115)
        kwargs_617254 = {}
        # Getting the type of 'place' (line 3115)
        place_617243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3115, 8), 'place', False)
        # Calling place(args, kwargs) (line 3115)
        place_call_result_617255 = invoke(stypy.reporting.localization.Localization(__file__, 3115, 8), place_617243, *[output_617244, result_mul_617251, b_617253], **kwargs_617254)
        
        
        # Call to place(...): (line 3116)
        # Processing the call arguments (line 3116)
        # Getting the type of 'output' (line 3116)
        output_617257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3116, 14), 'output', False)
        # Getting the type of 'cond2' (line 3116)
        cond2_617258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3116, 22), 'cond2', False)
        # Getting the type of 'self' (line 3116)
        self_617259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3116, 29), 'self', False)
        # Obtaining the member 'a' of a type (line 3116)
        a_617260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3116, 29), self_617259, 'a')
        int_617261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3116, 36), 'int')
        # Applying the binary operator '-' (line 3116)
        result_sub_617262 = python_operator(stypy.reporting.localization.Localization(__file__, 3116, 29), '-', a_617260, int_617261)
        
        # Processing the call keyword arguments (line 3116)
        kwargs_617263 = {}
        # Getting the type of 'place' (line 3116)
        place_617256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3116, 8), 'place', False)
        # Calling place(args, kwargs) (line 3116)
        place_call_result_617264 = invoke(stypy.reporting.localization.Localization(__file__, 3116, 8), place_617256, *[output_617257, cond2_617258, result_sub_617262], **kwargs_617263)
        
        
        
        # Call to any(...): (line 3119)
        # Processing the call arguments (line 3119)
        # Getting the type of 'cond' (line 3119)
        cond_617267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3119, 18), 'cond', False)
        # Processing the call keyword arguments (line 3119)
        kwargs_617268 = {}
        # Getting the type of 'np' (line 3119)
        np_617265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3119, 11), 'np', False)
        # Obtaining the member 'any' of a type (line 3119)
        any_617266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3119, 11), np_617265, 'any')
        # Calling any(args, kwargs) (line 3119)
        any_call_result_617269 = invoke(stypy.reporting.localization.Localization(__file__, 3119, 11), any_617266, *[cond_617267], **kwargs_617268)
        
        # Testing the type of an if condition (line 3119)
        if_condition_617270 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3119, 8), any_call_result_617269)
        # Assigning a type to the variable 'if_condition_617270' (line 3119)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3119, 8), 'if_condition_617270', if_condition_617270)
        # SSA begins for if statement (line 3119)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 3120):
        
        # Assigning a Call to a Name (line 3120):
        
        # Call to argsreduce(...): (line 3120)
        # Processing the call arguments (line 3120)
        # Getting the type of 'cond' (line 3120)
        cond_617272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3120, 34), 'cond', False)
        
        # Obtaining an instance of the builtin type 'tuple' (line 3120)
        tuple_617273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3120, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3120)
        # Adding element type (line 3120)
        # Getting the type of 'q' (line 3120)
        q_617274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3120, 43), 'q', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3120, 43), tuple_617273, q_617274)
        
        # Getting the type of 'args' (line 3120)
        args_617275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3120, 47), 'args', False)
        # Applying the binary operator '+' (line 3120)
        result_add_617276 = python_operator(stypy.reporting.localization.Localization(__file__, 3120, 42), '+', tuple_617273, args_617275)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 3120)
        tuple_617277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3120, 53), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3120)
        # Adding element type (line 3120)
        # Getting the type of 'loc' (line 3120)
        loc_617278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3120, 53), 'loc', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3120, 53), tuple_617277, loc_617278)
        
        # Applying the binary operator '+' (line 3120)
        result_add_617279 = python_operator(stypy.reporting.localization.Localization(__file__, 3120, 51), '+', result_add_617276, tuple_617277)
        
        # Processing the call keyword arguments (line 3120)
        kwargs_617280 = {}
        # Getting the type of 'argsreduce' (line 3120)
        argsreduce_617271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3120, 23), 'argsreduce', False)
        # Calling argsreduce(args, kwargs) (line 3120)
        argsreduce_call_result_617281 = invoke(stypy.reporting.localization.Localization(__file__, 3120, 23), argsreduce_617271, *[cond_617272, result_add_617279], **kwargs_617280)
        
        # Assigning a type to the variable 'goodargs' (line 3120)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3120, 12), 'goodargs', argsreduce_call_result_617281)
        
        # Assigning a Tuple to a Tuple (line 3121):
        
        # Assigning a Subscript to a Name (line 3121):
        
        # Obtaining the type of the subscript
        int_617282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3121, 37), 'int')
        # Getting the type of 'goodargs' (line 3121)
        goodargs_617283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 28), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 3121)
        getitem___617284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3121, 28), goodargs_617283, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3121)
        subscript_call_result_617285 = invoke(stypy.reporting.localization.Localization(__file__, 3121, 28), getitem___617284, int_617282)
        
        # Assigning a type to the variable 'tuple_assignment_609399' (line 3121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3121, 12), 'tuple_assignment_609399', subscript_call_result_617285)
        
        # Assigning a Subscript to a Name (line 3121):
        
        # Obtaining the type of the subscript
        int_617286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3121, 52), 'int')
        slice_617287 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3121, 42), None, int_617286, None)
        # Getting the type of 'goodargs' (line 3121)
        goodargs_617288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 42), 'goodargs')
        # Obtaining the member '__getitem__' of a type (line 3121)
        getitem___617289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3121, 42), goodargs_617288, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3121)
        subscript_call_result_617290 = invoke(stypy.reporting.localization.Localization(__file__, 3121, 42), getitem___617289, slice_617287)
        
        # Assigning a type to the variable 'tuple_assignment_609400' (line 3121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3121, 12), 'tuple_assignment_609400', subscript_call_result_617290)
        
        # Assigning a Name to a Name (line 3121):
        # Getting the type of 'tuple_assignment_609399' (line 3121)
        tuple_assignment_609399_617291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 12), 'tuple_assignment_609399')
        # Assigning a type to the variable 'loc' (line 3121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3121, 12), 'loc', tuple_assignment_609399_617291)
        
        # Assigning a Name to a Name (line 3121):
        # Getting the type of 'tuple_assignment_609400' (line 3121)
        tuple_assignment_609400_617292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3121, 12), 'tuple_assignment_609400')
        # Assigning a type to the variable 'goodargs' (line 3121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3121, 17), 'goodargs', tuple_assignment_609400_617292)
        
        # Call to place(...): (line 3123)
        # Processing the call arguments (line 3123)
        # Getting the type of 'output' (line 3123)
        output_617294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 18), 'output', False)
        # Getting the type of 'cond' (line 3123)
        cond_617295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 26), 'cond', False)
        
        # Call to _isf(...): (line 3123)
        # Getting the type of 'goodargs' (line 3123)
        goodargs_617298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 43), 'goodargs', False)
        # Processing the call keyword arguments (line 3123)
        kwargs_617299 = {}
        # Getting the type of 'self' (line 3123)
        self_617296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 32), 'self', False)
        # Obtaining the member '_isf' of a type (line 3123)
        _isf_617297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3123, 32), self_617296, '_isf')
        # Calling _isf(args, kwargs) (line 3123)
        _isf_call_result_617300 = invoke(stypy.reporting.localization.Localization(__file__, 3123, 32), _isf_617297, *[goodargs_617298], **kwargs_617299)
        
        # Getting the type of 'loc' (line 3123)
        loc_617301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 55), 'loc', False)
        # Applying the binary operator '+' (line 3123)
        result_add_617302 = python_operator(stypy.reporting.localization.Localization(__file__, 3123, 32), '+', _isf_call_result_617300, loc_617301)
        
        # Processing the call keyword arguments (line 3123)
        kwargs_617303 = {}
        # Getting the type of 'place' (line 3123)
        place_617293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3123, 12), 'place', False)
        # Calling place(args, kwargs) (line 3123)
        place_call_result_617304 = invoke(stypy.reporting.localization.Localization(__file__, 3123, 12), place_617293, *[output_617294, cond_617295, result_add_617302], **kwargs_617303)
        
        # SSA join for if statement (line 3119)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'output' (line 3125)
        output_617305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3125, 11), 'output')
        # Obtaining the member 'ndim' of a type (line 3125)
        ndim_617306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3125, 11), output_617305, 'ndim')
        int_617307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3125, 26), 'int')
        # Applying the binary operator '==' (line 3125)
        result_eq_617308 = python_operator(stypy.reporting.localization.Localization(__file__, 3125, 11), '==', ndim_617306, int_617307)
        
        # Testing the type of an if condition (line 3125)
        if_condition_617309 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3125, 8), result_eq_617308)
        # Assigning a type to the variable 'if_condition_617309' (line 3125)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3125, 8), 'if_condition_617309', if_condition_617309)
        # SSA begins for if statement (line 3125)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 3126)
        tuple_617310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3126, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3126)
        
        # Getting the type of 'output' (line 3126)
        output_617311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3126, 19), 'output')
        # Obtaining the member '__getitem__' of a type (line 3126)
        getitem___617312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3126, 19), output_617311, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3126)
        subscript_call_result_617313 = invoke(stypy.reporting.localization.Localization(__file__, 3126, 19), getitem___617312, tuple_617310)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3126)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3126, 12), 'stypy_return_type', subscript_call_result_617313)
        # SSA join for if statement (line 3125)
        module_type_store = module_type_store.join_ssa_context()
        
        # Getting the type of 'output' (line 3127)
        output_617314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3127, 15), 'output')
        # Assigning a type to the variable 'stypy_return_type' (line 3127)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3127, 8), 'stypy_return_type', output_617314)
        
        # ################# End of 'isf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'isf' in the type store
        # Getting the type of 'stypy_return_type' (line 3084)
        stypy_return_type_617315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3084, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_617315)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'isf'
        return stypy_return_type_617315


    @norecursion
    def _entropy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_entropy'
        module_type_store = module_type_store.open_function_context('_entropy', 3129, 4, False)
        # Assigning a type to the variable 'self' (line 3130)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3130, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete._entropy.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete._entropy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete._entropy.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete._entropy.__dict__.__setitem__('stypy_function_name', 'rv_discrete._entropy')
        rv_discrete._entropy.__dict__.__setitem__('stypy_param_names_list', [])
        rv_discrete._entropy.__dict__.__setitem__('stypy_varargs_param_name', 'args')
        rv_discrete._entropy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete._entropy.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete._entropy.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete._entropy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete._entropy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete._entropy', [], 'args', None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_entropy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_entropy(...)' code ##################

        
        # Type idiom detected: calculating its left and rigth part (line 3130)
        str_617316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3130, 25), 'str', 'pk')
        # Getting the type of 'self' (line 3130)
        self_617317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3130, 19), 'self')
        
        (may_be_617318, more_types_in_union_617319) = may_provide_member(str_617316, self_617317)

        if may_be_617318:

            if more_types_in_union_617319:
                # Runtime conditional SSA (line 3130)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'self' (line 3130)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3130, 8), 'self', remove_not_member_provider_from_union(self_617317, 'pk'))
            
            # Call to entropy(...): (line 3131)
            # Processing the call arguments (line 3131)
            # Getting the type of 'self' (line 3131)
            self_617321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3131, 27), 'self', False)
            # Obtaining the member 'pk' of a type (line 3131)
            pk_617322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3131, 27), self_617321, 'pk')
            # Processing the call keyword arguments (line 3131)
            kwargs_617323 = {}
            # Getting the type of 'entropy' (line 3131)
            entropy_617320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3131, 19), 'entropy', False)
            # Calling entropy(args, kwargs) (line 3131)
            entropy_call_result_617324 = invoke(stypy.reporting.localization.Localization(__file__, 3131, 19), entropy_617320, *[pk_617322], **kwargs_617323)
            
            # Assigning a type to the variable 'stypy_return_type' (line 3131)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3131, 12), 'stypy_return_type', entropy_call_result_617324)

            if more_types_in_union_617319:
                # Runtime conditional SSA for else branch (line 3130)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_617318) or more_types_in_union_617319):
            # Assigning a type to the variable 'self' (line 3130)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3130, 8), 'self', remove_member_provider_from_union(self_617317, 'pk'))
            
            # Call to _expect(...): (line 3133)
            # Processing the call arguments (line 3133)

            @norecursion
            def _stypy_temp_lambda_529(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_529'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_529', 3133, 27, True)
                # Passed parameters checking function
                _stypy_temp_lambda_529.stypy_localization = localization
                _stypy_temp_lambda_529.stypy_type_of_self = None
                _stypy_temp_lambda_529.stypy_type_store = module_type_store
                _stypy_temp_lambda_529.stypy_function_name = '_stypy_temp_lambda_529'
                _stypy_temp_lambda_529.stypy_param_names_list = ['x']
                _stypy_temp_lambda_529.stypy_varargs_param_name = None
                _stypy_temp_lambda_529.stypy_kwargs_param_name = None
                _stypy_temp_lambda_529.stypy_call_defaults = defaults
                _stypy_temp_lambda_529.stypy_call_varargs = varargs
                _stypy_temp_lambda_529.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_529', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_529', ['x'], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                
                # Call to entr(...): (line 3133)
                # Processing the call arguments (line 3133)
                
                # Call to pmf(...): (line 3133)
                # Processing the call arguments (line 3133)
                # Getting the type of 'x' (line 3133)
                x_617329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 51), 'x', False)
                # Getting the type of 'args' (line 3133)
                args_617330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 55), 'args', False)
                # Processing the call keyword arguments (line 3133)
                kwargs_617331 = {}
                # Getting the type of 'self' (line 3133)
                self_617327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 42), 'self', False)
                # Obtaining the member 'pmf' of a type (line 3133)
                pmf_617328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3133, 42), self_617327, 'pmf')
                # Calling pmf(args, kwargs) (line 3133)
                pmf_call_result_617332 = invoke(stypy.reporting.localization.Localization(__file__, 3133, 42), pmf_617328, *[x_617329, args_617330], **kwargs_617331)
                
                # Processing the call keyword arguments (line 3133)
                kwargs_617333 = {}
                # Getting the type of 'entr' (line 3133)
                entr_617326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 37), 'entr', False)
                # Calling entr(args, kwargs) (line 3133)
                entr_call_result_617334 = invoke(stypy.reporting.localization.Localization(__file__, 3133, 37), entr_617326, *[pmf_call_result_617332], **kwargs_617333)
                
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 3133)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3133, 27), 'stypy_return_type', entr_call_result_617334)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_529' in the type store
                # Getting the type of 'stypy_return_type' (line 3133)
                stypy_return_type_617335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 27), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_617335)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_529'
                return stypy_return_type_617335

            # Assigning a type to the variable '_stypy_temp_lambda_529' (line 3133)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3133, 27), '_stypy_temp_lambda_529', _stypy_temp_lambda_529)
            # Getting the type of '_stypy_temp_lambda_529' (line 3133)
            _stypy_temp_lambda_529_617336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 27), '_stypy_temp_lambda_529')
            # Getting the type of 'self' (line 3134)
            self_617337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3134, 27), 'self', False)
            # Obtaining the member 'a' of a type (line 3134)
            a_617338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3134, 27), self_617337, 'a')
            # Getting the type of 'self' (line 3134)
            self_617339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3134, 35), 'self', False)
            # Obtaining the member 'b' of a type (line 3134)
            b_617340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3134, 35), self_617339, 'b')
            
            # Call to ppf(...): (line 3134)
            # Processing the call arguments (line 3134)
            float_617343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3134, 52), 'float')
            # Getting the type of 'args' (line 3134)
            args_617344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3134, 58), 'args', False)
            # Processing the call keyword arguments (line 3134)
            kwargs_617345 = {}
            # Getting the type of 'self' (line 3134)
            self_617341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3134, 43), 'self', False)
            # Obtaining the member 'ppf' of a type (line 3134)
            ppf_617342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3134, 43), self_617341, 'ppf')
            # Calling ppf(args, kwargs) (line 3134)
            ppf_call_result_617346 = invoke(stypy.reporting.localization.Localization(__file__, 3134, 43), ppf_617342, *[float_617343, args_617344], **kwargs_617345)
            
            # Getting the type of 'self' (line 3134)
            self_617347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3134, 65), 'self', False)
            # Obtaining the member 'inc' of a type (line 3134)
            inc_617348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3134, 65), self_617347, 'inc')
            # Processing the call keyword arguments (line 3133)
            kwargs_617349 = {}
            # Getting the type of '_expect' (line 3133)
            _expect_617325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3133, 19), '_expect', False)
            # Calling _expect(args, kwargs) (line 3133)
            _expect_call_result_617350 = invoke(stypy.reporting.localization.Localization(__file__, 3133, 19), _expect_617325, *[_stypy_temp_lambda_529_617336, a_617338, b_617340, ppf_call_result_617346, inc_617348], **kwargs_617349)
            
            # Assigning a type to the variable 'stypy_return_type' (line 3133)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3133, 12), 'stypy_return_type', _expect_call_result_617350)

            if (may_be_617318 and more_types_in_union_617319):
                # SSA join for if statement (line 3130)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of '_entropy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_entropy' in the type store
        # Getting the type of 'stypy_return_type' (line 3129)
        stypy_return_type_617351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3129, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_617351)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_entropy'
        return stypy_return_type_617351


    @norecursion
    def expect(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 3136)
        None_617352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3136, 26), 'None')
        
        # Obtaining an instance of the builtin type 'tuple' (line 3136)
        tuple_617353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3136, 37), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 3136)
        
        int_617354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3136, 45), 'int')
        # Getting the type of 'None' (line 3136)
        None_617355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3136, 51), 'None')
        # Getting the type of 'None' (line 3136)
        None_617356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3136, 60), 'None')
        # Getting the type of 'False' (line 3137)
        False_617357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3137, 27), 'False')
        int_617358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3137, 43), 'int')
        float_617359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3137, 59), 'float')
        int_617360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3137, 76), 'int')
        defaults = [None_617352, tuple_617353, int_617354, None_617355, None_617356, False_617357, int_617358, float_617359, int_617360]
        # Create a new context for function 'expect'
        module_type_store = module_type_store.open_function_context('expect', 3136, 4, False)
        # Assigning a type to the variable 'self' (line 3137)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3137, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_discrete.expect.__dict__.__setitem__('stypy_localization', localization)
        rv_discrete.expect.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_discrete.expect.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_discrete.expect.__dict__.__setitem__('stypy_function_name', 'rv_discrete.expect')
        rv_discrete.expect.__dict__.__setitem__('stypy_param_names_list', ['func', 'args', 'loc', 'lb', 'ub', 'conditional', 'maxcount', 'tolerance', 'chunksize'])
        rv_discrete.expect.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_discrete.expect.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_discrete.expect.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_discrete.expect.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_discrete.expect.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_discrete.expect.__dict__.__setitem__('stypy_declared_arg_number', 10)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_discrete.expect', ['func', 'args', 'loc', 'lb', 'ub', 'conditional', 'maxcount', 'tolerance', 'chunksize'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'expect', localization, ['func', 'args', 'loc', 'lb', 'ub', 'conditional', 'maxcount', 'tolerance', 'chunksize'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'expect(...)' code ##################

        str_617361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3187, (-1)), 'str', '\n        Calculate expected value of a function with respect to the distribution\n        for discrete distribution.\n\n        Parameters\n        ----------\n        func : callable, optional\n            Function for which the expectation value is calculated.\n            Takes only one argument.\n            The default is the identity mapping f(k) = k.\n        args : tuple, optional\n            Shape parameters of the distribution.\n        loc : float, optional\n            Location parameter.\n            Default is 0.\n        lb, ub : int, optional\n            Lower and upper bound for the summation, default is set to the\n            support of the distribution, inclusive (``ul <= k <= ub``).\n        conditional : bool, optional\n            If true then the expectation is corrected by the conditional\n            probability of the summation interval. The return value is the\n            expectation of the function, `func`, conditional on being in\n            the given interval (k such that ``ul <= k <= ub``).\n            Default is False.\n        maxcount : int, optional\n            Maximal number of terms to evaluate (to avoid an endless loop for\n            an infinite sum). Default is 1000.\n        tolerance : float, optional\n            Absolute tolerance for the summation. Default is 1e-10.\n        chunksize : int, optional\n            Iterate over the support of a distributions in chunks of this size.\n            Default is 32.\n\n        Returns\n        -------\n        expect : float\n            Expected value.\n\n        Notes\n        -----\n        For heavy-tailed distributions, the expected value may or may not exist,\n        depending on the function, `func`. If it does exist, but the sum converges\n        slowly, the accuracy of the result may be rather low. For instance, for\n        ``zipf(4)``, accuracy for mean, variance in example is only 1e-5.\n        increasing `maxcount` and/or `chunksize` may improve the result, but may also\n        make zipf very slow.\n\n        The function is not vectorized.\n\n        ')
        
        # Type idiom detected: calculating its left and rigth part (line 3188)
        # Getting the type of 'func' (line 3188)
        func_617362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3188, 11), 'func')
        # Getting the type of 'None' (line 3188)
        None_617363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3188, 19), 'None')
        
        (may_be_617364, more_types_in_union_617365) = may_be_none(func_617362, None_617363)

        if may_be_617364:

            if more_types_in_union_617365:
                # Runtime conditional SSA (line 3188)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            @norecursion
            def fun(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'fun'
                module_type_store = module_type_store.open_function_context('fun', 3189, 12, False)
                
                # Passed parameters checking function
                fun.stypy_localization = localization
                fun.stypy_type_of_self = None
                fun.stypy_type_store = module_type_store
                fun.stypy_function_name = 'fun'
                fun.stypy_param_names_list = ['x']
                fun.stypy_varargs_param_name = None
                fun.stypy_kwargs_param_name = None
                fun.stypy_call_defaults = defaults
                fun.stypy_call_varargs = varargs
                fun.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, 'fun', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'fun', localization, ['x'], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'fun(...)' code ##################

                # Getting the type of 'x' (line 3191)
                x_617366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3191, 24), 'x')
                # Getting the type of 'loc' (line 3191)
                loc_617367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3191, 26), 'loc')
                # Applying the binary operator '+' (line 3191)
                result_add_617368 = python_operator(stypy.reporting.localization.Localization(__file__, 3191, 24), '+', x_617366, loc_617367)
                
                
                # Call to _pmf(...): (line 3191)
                # Processing the call arguments (line 3191)
                # Getting the type of 'x' (line 3191)
                x_617371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3191, 41), 'x', False)
                # Getting the type of 'args' (line 3191)
                args_617372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3191, 45), 'args', False)
                # Processing the call keyword arguments (line 3191)
                kwargs_617373 = {}
                # Getting the type of 'self' (line 3191)
                self_617369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3191, 31), 'self', False)
                # Obtaining the member '_pmf' of a type (line 3191)
                _pmf_617370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3191, 31), self_617369, '_pmf')
                # Calling _pmf(args, kwargs) (line 3191)
                _pmf_call_result_617374 = invoke(stypy.reporting.localization.Localization(__file__, 3191, 31), _pmf_617370, *[x_617371, args_617372], **kwargs_617373)
                
                # Applying the binary operator '*' (line 3191)
                result_mul_617375 = python_operator(stypy.reporting.localization.Localization(__file__, 3191, 23), '*', result_add_617368, _pmf_call_result_617374)
                
                # Assigning a type to the variable 'stypy_return_type' (line 3191)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3191, 16), 'stypy_return_type', result_mul_617375)
                
                # ################# End of 'fun(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'fun' in the type store
                # Getting the type of 'stypy_return_type' (line 3189)
                stypy_return_type_617376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3189, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_617376)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'fun'
                return stypy_return_type_617376

            # Assigning a type to the variable 'fun' (line 3189)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3189, 12), 'fun', fun)

            if more_types_in_union_617365:
                # Runtime conditional SSA for else branch (line 3188)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_617364) or more_types_in_union_617365):

            @norecursion
            def fun(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'fun'
                module_type_store = module_type_store.open_function_context('fun', 3193, 12, False)
                
                # Passed parameters checking function
                fun.stypy_localization = localization
                fun.stypy_type_of_self = None
                fun.stypy_type_store = module_type_store
                fun.stypy_function_name = 'fun'
                fun.stypy_param_names_list = ['x']
                fun.stypy_varargs_param_name = None
                fun.stypy_kwargs_param_name = None
                fun.stypy_call_defaults = defaults
                fun.stypy_call_varargs = varargs
                fun.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, 'fun', ['x'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'fun', localization, ['x'], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'fun(...)' code ##################

                
                # Call to func(...): (line 3195)
                # Processing the call arguments (line 3195)
                # Getting the type of 'x' (line 3195)
                x_617378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 28), 'x', False)
                # Getting the type of 'loc' (line 3195)
                loc_617379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 30), 'loc', False)
                # Applying the binary operator '+' (line 3195)
                result_add_617380 = python_operator(stypy.reporting.localization.Localization(__file__, 3195, 28), '+', x_617378, loc_617379)
                
                # Processing the call keyword arguments (line 3195)
                kwargs_617381 = {}
                # Getting the type of 'func' (line 3195)
                func_617377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 23), 'func', False)
                # Calling func(args, kwargs) (line 3195)
                func_call_result_617382 = invoke(stypy.reporting.localization.Localization(__file__, 3195, 23), func_617377, *[result_add_617380], **kwargs_617381)
                
                
                # Call to _pmf(...): (line 3195)
                # Processing the call arguments (line 3195)
                # Getting the type of 'x' (line 3195)
                x_617385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 45), 'x', False)
                # Getting the type of 'args' (line 3195)
                args_617386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 49), 'args', False)
                # Processing the call keyword arguments (line 3195)
                kwargs_617387 = {}
                # Getting the type of 'self' (line 3195)
                self_617383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3195, 35), 'self', False)
                # Obtaining the member '_pmf' of a type (line 3195)
                _pmf_617384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3195, 35), self_617383, '_pmf')
                # Calling _pmf(args, kwargs) (line 3195)
                _pmf_call_result_617388 = invoke(stypy.reporting.localization.Localization(__file__, 3195, 35), _pmf_617384, *[x_617385, args_617386], **kwargs_617387)
                
                # Applying the binary operator '*' (line 3195)
                result_mul_617389 = python_operator(stypy.reporting.localization.Localization(__file__, 3195, 23), '*', func_call_result_617382, _pmf_call_result_617388)
                
                # Assigning a type to the variable 'stypy_return_type' (line 3195)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3195, 16), 'stypy_return_type', result_mul_617389)
                
                # ################# End of 'fun(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'fun' in the type store
                # Getting the type of 'stypy_return_type' (line 3193)
                stypy_return_type_617390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3193, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_617390)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'fun'
                return stypy_return_type_617390

            # Assigning a type to the variable 'fun' (line 3193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3193, 12), 'fun', fun)

            if (may_be_617364 and more_types_in_union_617365):
                # SSA join for if statement (line 3188)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to _argcheck(...): (line 3200)
        # Getting the type of 'args' (line 3200)
        args_617393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3200, 24), 'args', False)
        # Processing the call keyword arguments (line 3200)
        kwargs_617394 = {}
        # Getting the type of 'self' (line 3200)
        self_617391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3200, 8), 'self', False)
        # Obtaining the member '_argcheck' of a type (line 3200)
        _argcheck_617392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3200, 8), self_617391, '_argcheck')
        # Calling _argcheck(args, kwargs) (line 3200)
        _argcheck_call_result_617395 = invoke(stypy.reporting.localization.Localization(__file__, 3200, 8), _argcheck_617392, *[args_617393], **kwargs_617394)
        
        
        # Type idiom detected: calculating its left and rigth part (line 3201)
        # Getting the type of 'lb' (line 3201)
        lb_617396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3201, 11), 'lb')
        # Getting the type of 'None' (line 3201)
        None_617397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3201, 17), 'None')
        
        (may_be_617398, more_types_in_union_617399) = may_be_none(lb_617396, None_617397)

        if may_be_617398:

            if more_types_in_union_617399:
                # Runtime conditional SSA (line 3201)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Attribute to a Name (line 3202):
            
            # Assigning a Attribute to a Name (line 3202):
            # Getting the type of 'self' (line 3202)
            self_617400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3202, 17), 'self')
            # Obtaining the member 'a' of a type (line 3202)
            a_617401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3202, 17), self_617400, 'a')
            # Assigning a type to the variable 'lb' (line 3202)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3202, 12), 'lb', a_617401)

            if more_types_in_union_617399:
                # Runtime conditional SSA for else branch (line 3201)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_617398) or more_types_in_union_617399):
            
            # Assigning a BinOp to a Name (line 3204):
            
            # Assigning a BinOp to a Name (line 3204):
            # Getting the type of 'lb' (line 3204)
            lb_617402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3204, 17), 'lb')
            # Getting the type of 'loc' (line 3204)
            loc_617403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3204, 22), 'loc')
            # Applying the binary operator '-' (line 3204)
            result_sub_617404 = python_operator(stypy.reporting.localization.Localization(__file__, 3204, 17), '-', lb_617402, loc_617403)
            
            # Assigning a type to the variable 'lb' (line 3204)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3204, 12), 'lb', result_sub_617404)

            if (may_be_617398 and more_types_in_union_617399):
                # SSA join for if statement (line 3201)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Type idiom detected: calculating its left and rigth part (line 3205)
        # Getting the type of 'ub' (line 3205)
        ub_617405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3205, 11), 'ub')
        # Getting the type of 'None' (line 3205)
        None_617406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3205, 17), 'None')
        
        (may_be_617407, more_types_in_union_617408) = may_be_none(ub_617405, None_617406)

        if may_be_617407:

            if more_types_in_union_617408:
                # Runtime conditional SSA (line 3205)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Attribute to a Name (line 3206):
            
            # Assigning a Attribute to a Name (line 3206):
            # Getting the type of 'self' (line 3206)
            self_617409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3206, 17), 'self')
            # Obtaining the member 'b' of a type (line 3206)
            b_617410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3206, 17), self_617409, 'b')
            # Assigning a type to the variable 'ub' (line 3206)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3206, 12), 'ub', b_617410)

            if more_types_in_union_617408:
                # Runtime conditional SSA for else branch (line 3205)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_617407) or more_types_in_union_617408):
            
            # Assigning a BinOp to a Name (line 3208):
            
            # Assigning a BinOp to a Name (line 3208):
            # Getting the type of 'ub' (line 3208)
            ub_617411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3208, 17), 'ub')
            # Getting the type of 'loc' (line 3208)
            loc_617412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3208, 22), 'loc')
            # Applying the binary operator '-' (line 3208)
            result_sub_617413 = python_operator(stypy.reporting.localization.Localization(__file__, 3208, 17), '-', ub_617411, loc_617412)
            
            # Assigning a type to the variable 'ub' (line 3208)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3208, 12), 'ub', result_sub_617413)

            if (may_be_617407 and more_types_in_union_617408):
                # SSA join for if statement (line 3205)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Getting the type of 'conditional' (line 3209)
        conditional_617414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3209, 11), 'conditional')
        # Testing the type of an if condition (line 3209)
        if_condition_617415 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3209, 8), conditional_617414)
        # Assigning a type to the variable 'if_condition_617415' (line 3209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3209, 8), 'if_condition_617415', if_condition_617415)
        # SSA begins for if statement (line 3209)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 3210):
        
        # Assigning a BinOp to a Name (line 3210):
        
        # Call to sf(...): (line 3210)
        # Processing the call arguments (line 3210)
        # Getting the type of 'lb' (line 3210)
        lb_617418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3210, 29), 'lb', False)
        int_617419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3210, 32), 'int')
        # Applying the binary operator '-' (line 3210)
        result_sub_617420 = python_operator(stypy.reporting.localization.Localization(__file__, 3210, 29), '-', lb_617418, int_617419)
        
        # Getting the type of 'args' (line 3210)
        args_617421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3210, 36), 'args', False)
        # Processing the call keyword arguments (line 3210)
        kwargs_617422 = {}
        # Getting the type of 'self' (line 3210)
        self_617416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3210, 21), 'self', False)
        # Obtaining the member 'sf' of a type (line 3210)
        sf_617417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3210, 21), self_617416, 'sf')
        # Calling sf(args, kwargs) (line 3210)
        sf_call_result_617423 = invoke(stypy.reporting.localization.Localization(__file__, 3210, 21), sf_617417, *[result_sub_617420, args_617421], **kwargs_617422)
        
        
        # Call to sf(...): (line 3210)
        # Processing the call arguments (line 3210)
        # Getting the type of 'ub' (line 3210)
        ub_617426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3210, 52), 'ub', False)
        # Getting the type of 'args' (line 3210)
        args_617427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3210, 57), 'args', False)
        # Processing the call keyword arguments (line 3210)
        kwargs_617428 = {}
        # Getting the type of 'self' (line 3210)
        self_617424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3210, 44), 'self', False)
        # Obtaining the member 'sf' of a type (line 3210)
        sf_617425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3210, 44), self_617424, 'sf')
        # Calling sf(args, kwargs) (line 3210)
        sf_call_result_617429 = invoke(stypy.reporting.localization.Localization(__file__, 3210, 44), sf_617425, *[ub_617426, args_617427], **kwargs_617428)
        
        # Applying the binary operator '-' (line 3210)
        result_sub_617430 = python_operator(stypy.reporting.localization.Localization(__file__, 3210, 21), '-', sf_call_result_617423, sf_call_result_617429)
        
        # Assigning a type to the variable 'invfac' (line 3210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3210, 12), 'invfac', result_sub_617430)
        # SSA branch for the else part of an if statement (line 3209)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 3212):
        
        # Assigning a Num to a Name (line 3212):
        float_617431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3212, 21), 'float')
        # Assigning a type to the variable 'invfac' (line 3212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3212, 12), 'invfac', float_617431)
        # SSA join for if statement (line 3209)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 3215):
        
        # Assigning a Call to a Name (line 3215):
        
        # Call to ppf(...): (line 3215)
        # Processing the call arguments (line 3215)
        float_617434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3215, 22), 'float')
        # Getting the type of 'args' (line 3215)
        args_617435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3215, 28), 'args', False)
        # Processing the call keyword arguments (line 3215)
        kwargs_617436 = {}
        # Getting the type of 'self' (line 3215)
        self_617432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3215, 13), 'self', False)
        # Obtaining the member 'ppf' of a type (line 3215)
        ppf_617433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3215, 13), self_617432, 'ppf')
        # Calling ppf(args, kwargs) (line 3215)
        ppf_call_result_617437 = invoke(stypy.reporting.localization.Localization(__file__, 3215, 13), ppf_617433, *[float_617434, args_617435], **kwargs_617436)
        
        # Assigning a type to the variable 'x0' (line 3215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3215, 8), 'x0', ppf_call_result_617437)
        
        # Assigning a Call to a Name (line 3216):
        
        # Assigning a Call to a Name (line 3216):
        
        # Call to _expect(...): (line 3216)
        # Processing the call arguments (line 3216)
        # Getting the type of 'fun' (line 3216)
        fun_617439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 22), 'fun', False)
        # Getting the type of 'lb' (line 3216)
        lb_617440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 27), 'lb', False)
        # Getting the type of 'ub' (line 3216)
        ub_617441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 31), 'ub', False)
        # Getting the type of 'x0' (line 3216)
        x0_617442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 35), 'x0', False)
        # Getting the type of 'self' (line 3216)
        self_617443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 39), 'self', False)
        # Obtaining the member 'inc' of a type (line 3216)
        inc_617444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3216, 39), self_617443, 'inc')
        # Getting the type of 'maxcount' (line 3216)
        maxcount_617445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 49), 'maxcount', False)
        # Getting the type of 'tolerance' (line 3216)
        tolerance_617446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 59), 'tolerance', False)
        # Getting the type of 'chunksize' (line 3216)
        chunksize_617447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 70), 'chunksize', False)
        # Processing the call keyword arguments (line 3216)
        kwargs_617448 = {}
        # Getting the type of '_expect' (line 3216)
        _expect_617438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3216, 14), '_expect', False)
        # Calling _expect(args, kwargs) (line 3216)
        _expect_call_result_617449 = invoke(stypy.reporting.localization.Localization(__file__, 3216, 14), _expect_617438, *[fun_617439, lb_617440, ub_617441, x0_617442, inc_617444, maxcount_617445, tolerance_617446, chunksize_617447], **kwargs_617448)
        
        # Assigning a type to the variable 'res' (line 3216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3216, 8), 'res', _expect_call_result_617449)
        # Getting the type of 'res' (line 3217)
        res_617450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 15), 'res')
        # Getting the type of 'invfac' (line 3217)
        invfac_617451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3217, 21), 'invfac')
        # Applying the binary operator 'div' (line 3217)
        result_div_617452 = python_operator(stypy.reporting.localization.Localization(__file__, 3217, 15), 'div', res_617450, invfac_617451)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3217)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3217, 8), 'stypy_return_type', result_div_617452)
        
        # ################# End of 'expect(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'expect' in the type store
        # Getting the type of 'stypy_return_type' (line 3136)
        stypy_return_type_617453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3136, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_617453)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'expect'
        return stypy_return_type_617453


# Assigning a type to the variable 'rv_discrete' (line 2526)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2526, 0), 'rv_discrete', rv_discrete)

@norecursion
def _expect(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_617454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3220, 43), 'int')
    float_617455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3220, 59), 'float')
    int_617456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3221, 22), 'int')
    defaults = [int_617454, float_617455, int_617456]
    # Create a new context for function '_expect'
    module_type_store = module_type_store.open_function_context('_expect', 3220, 0, False)
    
    # Passed parameters checking function
    _expect.stypy_localization = localization
    _expect.stypy_type_of_self = None
    _expect.stypy_type_store = module_type_store
    _expect.stypy_function_name = '_expect'
    _expect.stypy_param_names_list = ['fun', 'lb', 'ub', 'x0', 'inc', 'maxcount', 'tolerance', 'chunksize']
    _expect.stypy_varargs_param_name = None
    _expect.stypy_kwargs_param_name = None
    _expect.stypy_call_defaults = defaults
    _expect.stypy_call_varargs = varargs
    _expect.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_expect', ['fun', 'lb', 'ub', 'x0', 'inc', 'maxcount', 'tolerance', 'chunksize'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_expect', localization, ['fun', 'lb', 'ub', 'x0', 'inc', 'maxcount', 'tolerance', 'chunksize'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_expect(...)' code ##################

    str_617457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3222, 4), 'str', 'Helper for computing the expectation value of `fun`.')
    
    
    # Getting the type of 'ub' (line 3225)
    ub_617458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3225, 8), 'ub')
    # Getting the type of 'lb' (line 3225)
    lb_617459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3225, 13), 'lb')
    # Applying the binary operator '-' (line 3225)
    result_sub_617460 = python_operator(stypy.reporting.localization.Localization(__file__, 3225, 8), '-', ub_617458, lb_617459)
    
    # Getting the type of 'chunksize' (line 3225)
    chunksize_617461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3225, 20), 'chunksize')
    # Applying the binary operator '<=' (line 3225)
    result_le_617462 = python_operator(stypy.reporting.localization.Localization(__file__, 3225, 7), '<=', result_sub_617460, chunksize_617461)
    
    # Testing the type of an if condition (line 3225)
    if_condition_617463 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3225, 4), result_le_617462)
    # Assigning a type to the variable 'if_condition_617463' (line 3225)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3225, 4), 'if_condition_617463', if_condition_617463)
    # SSA begins for if statement (line 3225)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Call to a Name (line 3226):
    
    # Assigning a Call to a Name (line 3226):
    
    # Call to arange(...): (line 3226)
    # Processing the call arguments (line 3226)
    # Getting the type of 'lb' (line 3226)
    lb_617466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3226, 25), 'lb', False)
    # Getting the type of 'ub' (line 3226)
    ub_617467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3226, 29), 'ub', False)
    int_617468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3226, 32), 'int')
    # Applying the binary operator '+' (line 3226)
    result_add_617469 = python_operator(stypy.reporting.localization.Localization(__file__, 3226, 29), '+', ub_617467, int_617468)
    
    # Getting the type of 'inc' (line 3226)
    inc_617470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3226, 35), 'inc', False)
    # Processing the call keyword arguments (line 3226)
    kwargs_617471 = {}
    # Getting the type of 'np' (line 3226)
    np_617464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3226, 15), 'np', False)
    # Obtaining the member 'arange' of a type (line 3226)
    arange_617465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3226, 15), np_617464, 'arange')
    # Calling arange(args, kwargs) (line 3226)
    arange_call_result_617472 = invoke(stypy.reporting.localization.Localization(__file__, 3226, 15), arange_617465, *[lb_617466, result_add_617469, inc_617470], **kwargs_617471)
    
    # Assigning a type to the variable 'supp' (line 3226)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3226, 8), 'supp', arange_call_result_617472)
    
    # Assigning a Call to a Name (line 3227):
    
    # Assigning a Call to a Name (line 3227):
    
    # Call to fun(...): (line 3227)
    # Processing the call arguments (line 3227)
    # Getting the type of 'supp' (line 3227)
    supp_617474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3227, 19), 'supp', False)
    # Processing the call keyword arguments (line 3227)
    kwargs_617475 = {}
    # Getting the type of 'fun' (line 3227)
    fun_617473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3227, 15), 'fun', False)
    # Calling fun(args, kwargs) (line 3227)
    fun_call_result_617476 = invoke(stypy.reporting.localization.Localization(__file__, 3227, 15), fun_617473, *[supp_617474], **kwargs_617475)
    
    # Assigning a type to the variable 'vals' (line 3227)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3227, 8), 'vals', fun_call_result_617476)
    
    # Call to sum(...): (line 3228)
    # Processing the call arguments (line 3228)
    # Getting the type of 'vals' (line 3228)
    vals_617479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3228, 22), 'vals', False)
    # Processing the call keyword arguments (line 3228)
    kwargs_617480 = {}
    # Getting the type of 'np' (line 3228)
    np_617477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3228, 15), 'np', False)
    # Obtaining the member 'sum' of a type (line 3228)
    sum_617478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3228, 15), np_617477, 'sum')
    # Calling sum(args, kwargs) (line 3228)
    sum_call_result_617481 = invoke(stypy.reporting.localization.Localization(__file__, 3228, 15), sum_617478, *[vals_617479], **kwargs_617480)
    
    # Assigning a type to the variable 'stypy_return_type' (line 3228)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3228, 8), 'stypy_return_type', sum_call_result_617481)
    # SSA join for if statement (line 3225)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'x0' (line 3231)
    x0_617482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3231, 7), 'x0')
    # Getting the type of 'lb' (line 3231)
    lb_617483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3231, 12), 'lb')
    # Applying the binary operator '<' (line 3231)
    result_lt_617484 = python_operator(stypy.reporting.localization.Localization(__file__, 3231, 7), '<', x0_617482, lb_617483)
    
    # Testing the type of an if condition (line 3231)
    if_condition_617485 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3231, 4), result_lt_617484)
    # Assigning a type to the variable 'if_condition_617485' (line 3231)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3231, 4), 'if_condition_617485', if_condition_617485)
    # SSA begins for if statement (line 3231)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 3232):
    
    # Assigning a Name to a Name (line 3232):
    # Getting the type of 'lb' (line 3232)
    lb_617486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3232, 13), 'lb')
    # Assigning a type to the variable 'x0' (line 3232)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3232, 8), 'x0', lb_617486)
    # SSA join for if statement (line 3231)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'x0' (line 3233)
    x0_617487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3233, 7), 'x0')
    # Getting the type of 'ub' (line 3233)
    ub_617488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3233, 12), 'ub')
    # Applying the binary operator '>' (line 3233)
    result_gt_617489 = python_operator(stypy.reporting.localization.Localization(__file__, 3233, 7), '>', x0_617487, ub_617488)
    
    # Testing the type of an if condition (line 3233)
    if_condition_617490 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3233, 4), result_gt_617489)
    # Assigning a type to the variable 'if_condition_617490' (line 3233)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3233, 4), 'if_condition_617490', if_condition_617490)
    # SSA begins for if statement (line 3233)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Name to a Name (line 3234):
    
    # Assigning a Name to a Name (line 3234):
    # Getting the type of 'ub' (line 3234)
    ub_617491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3234, 13), 'ub')
    # Assigning a type to the variable 'x0' (line 3234)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3234, 8), 'x0', ub_617491)
    # SSA join for if statement (line 3233)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Tuple to a Tuple (line 3236):
    
    # Assigning a Num to a Name (line 3236):
    int_617492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3236, 17), 'int')
    # Assigning a type to the variable 'tuple_assignment_609401' (line 3236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3236, 4), 'tuple_assignment_609401', int_617492)
    
    # Assigning a Num to a Name (line 3236):
    float_617493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3236, 20), 'float')
    # Assigning a type to the variable 'tuple_assignment_609402' (line 3236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3236, 4), 'tuple_assignment_609402', float_617493)
    
    # Assigning a Name to a Name (line 3236):
    # Getting the type of 'tuple_assignment_609401' (line 3236)
    tuple_assignment_609401_617494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3236, 4), 'tuple_assignment_609401')
    # Assigning a type to the variable 'count' (line 3236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3236, 4), 'count', tuple_assignment_609401_617494)
    
    # Assigning a Name to a Name (line 3236):
    # Getting the type of 'tuple_assignment_609402' (line 3236)
    tuple_assignment_609402_617495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3236, 4), 'tuple_assignment_609402')
    # Assigning a type to the variable 'tot' (line 3236)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3236, 11), 'tot', tuple_assignment_609402_617495)
    
    
    # Call to _iter_chunked(...): (line 3238)
    # Processing the call arguments (line 3238)
    # Getting the type of 'x0' (line 3238)
    x0_617497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3238, 27), 'x0', False)
    # Getting the type of 'ub' (line 3238)
    ub_617498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3238, 31), 'ub', False)
    int_617499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3238, 34), 'int')
    # Applying the binary operator '+' (line 3238)
    result_add_617500 = python_operator(stypy.reporting.localization.Localization(__file__, 3238, 31), '+', ub_617498, int_617499)
    
    # Processing the call keyword arguments (line 3238)
    # Getting the type of 'chunksize' (line 3238)
    chunksize_617501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3238, 47), 'chunksize', False)
    keyword_617502 = chunksize_617501
    # Getting the type of 'inc' (line 3238)
    inc_617503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3238, 62), 'inc', False)
    keyword_617504 = inc_617503
    kwargs_617505 = {'chunksize': keyword_617502, 'inc': keyword_617504}
    # Getting the type of '_iter_chunked' (line 3238)
    _iter_chunked_617496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3238, 13), '_iter_chunked', False)
    # Calling _iter_chunked(args, kwargs) (line 3238)
    _iter_chunked_call_result_617506 = invoke(stypy.reporting.localization.Localization(__file__, 3238, 13), _iter_chunked_617496, *[x0_617497, result_add_617500], **kwargs_617505)
    
    # Testing the type of a for loop iterable (line 3238)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3238, 4), _iter_chunked_call_result_617506)
    # Getting the type of the for loop variable (line 3238)
    for_loop_var_617507 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3238, 4), _iter_chunked_call_result_617506)
    # Assigning a type to the variable 'x' (line 3238)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3238, 4), 'x', for_loop_var_617507)
    # SSA begins for a for statement (line 3238)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'count' (line 3239)
    count_617508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3239, 8), 'count')
    # Getting the type of 'x' (line 3239)
    x_617509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3239, 17), 'x')
    # Obtaining the member 'size' of a type (line 3239)
    size_617510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3239, 17), x_617509, 'size')
    # Applying the binary operator '+=' (line 3239)
    result_iadd_617511 = python_operator(stypy.reporting.localization.Localization(__file__, 3239, 8), '+=', count_617508, size_617510)
    # Assigning a type to the variable 'count' (line 3239)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3239, 8), 'count', result_iadd_617511)
    
    
    # Assigning a Call to a Name (line 3240):
    
    # Assigning a Call to a Name (line 3240):
    
    # Call to sum(...): (line 3240)
    # Processing the call arguments (line 3240)
    
    # Call to fun(...): (line 3240)
    # Processing the call arguments (line 3240)
    # Getting the type of 'x' (line 3240)
    x_617515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3240, 27), 'x', False)
    # Processing the call keyword arguments (line 3240)
    kwargs_617516 = {}
    # Getting the type of 'fun' (line 3240)
    fun_617514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3240, 23), 'fun', False)
    # Calling fun(args, kwargs) (line 3240)
    fun_call_result_617517 = invoke(stypy.reporting.localization.Localization(__file__, 3240, 23), fun_617514, *[x_617515], **kwargs_617516)
    
    # Processing the call keyword arguments (line 3240)
    kwargs_617518 = {}
    # Getting the type of 'np' (line 3240)
    np_617512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3240, 16), 'np', False)
    # Obtaining the member 'sum' of a type (line 3240)
    sum_617513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3240, 16), np_617512, 'sum')
    # Calling sum(args, kwargs) (line 3240)
    sum_call_result_617519 = invoke(stypy.reporting.localization.Localization(__file__, 3240, 16), sum_617513, *[fun_call_result_617517], **kwargs_617518)
    
    # Assigning a type to the variable 'delta' (line 3240)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3240, 8), 'delta', sum_call_result_617519)
    
    # Getting the type of 'tot' (line 3241)
    tot_617520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3241, 8), 'tot')
    # Getting the type of 'delta' (line 3241)
    delta_617521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3241, 15), 'delta')
    # Applying the binary operator '+=' (line 3241)
    result_iadd_617522 = python_operator(stypy.reporting.localization.Localization(__file__, 3241, 8), '+=', tot_617520, delta_617521)
    # Assigning a type to the variable 'tot' (line 3241)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3241, 8), 'tot', result_iadd_617522)
    
    
    
    
    # Call to abs(...): (line 3242)
    # Processing the call arguments (line 3242)
    # Getting the type of 'delta' (line 3242)
    delta_617524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3242, 15), 'delta', False)
    # Processing the call keyword arguments (line 3242)
    kwargs_617525 = {}
    # Getting the type of 'abs' (line 3242)
    abs_617523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3242, 11), 'abs', False)
    # Calling abs(args, kwargs) (line 3242)
    abs_call_result_617526 = invoke(stypy.reporting.localization.Localization(__file__, 3242, 11), abs_617523, *[delta_617524], **kwargs_617525)
    
    # Getting the type of 'tolerance' (line 3242)
    tolerance_617527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3242, 24), 'tolerance')
    # Getting the type of 'x' (line 3242)
    x_617528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3242, 36), 'x')
    # Obtaining the member 'size' of a type (line 3242)
    size_617529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3242, 36), x_617528, 'size')
    # Applying the binary operator '*' (line 3242)
    result_mul_617530 = python_operator(stypy.reporting.localization.Localization(__file__, 3242, 24), '*', tolerance_617527, size_617529)
    
    # Applying the binary operator '<' (line 3242)
    result_lt_617531 = python_operator(stypy.reporting.localization.Localization(__file__, 3242, 11), '<', abs_call_result_617526, result_mul_617530)
    
    # Testing the type of an if condition (line 3242)
    if_condition_617532 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3242, 8), result_lt_617531)
    # Assigning a type to the variable 'if_condition_617532' (line 3242)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3242, 8), 'if_condition_617532', if_condition_617532)
    # SSA begins for if statement (line 3242)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 3242)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'count' (line 3244)
    count_617533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3244, 11), 'count')
    # Getting the type of 'maxcount' (line 3244)
    maxcount_617534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3244, 19), 'maxcount')
    # Applying the binary operator '>' (line 3244)
    result_gt_617535 = python_operator(stypy.reporting.localization.Localization(__file__, 3244, 11), '>', count_617533, maxcount_617534)
    
    # Testing the type of an if condition (line 3244)
    if_condition_617536 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3244, 8), result_gt_617535)
    # Assigning a type to the variable 'if_condition_617536' (line 3244)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3244, 8), 'if_condition_617536', if_condition_617536)
    # SSA begins for if statement (line 3244)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to warn(...): (line 3245)
    # Processing the call arguments (line 3245)
    str_617539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3245, 26), 'str', 'expect(): sum did not converge')
    # Getting the type of 'RuntimeWarning' (line 3245)
    RuntimeWarning_617540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3245, 60), 'RuntimeWarning', False)
    # Processing the call keyword arguments (line 3245)
    kwargs_617541 = {}
    # Getting the type of 'warnings' (line 3245)
    warnings_617537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3245, 12), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 3245)
    warn_617538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3245, 12), warnings_617537, 'warn')
    # Calling warn(args, kwargs) (line 3245)
    warn_call_result_617542 = invoke(stypy.reporting.localization.Localization(__file__, 3245, 12), warn_617538, *[str_617539, RuntimeWarning_617540], **kwargs_617541)
    
    # Getting the type of 'tot' (line 3246)
    tot_617543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3246, 19), 'tot')
    # Assigning a type to the variable 'stypy_return_type' (line 3246)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3246, 12), 'stypy_return_type', tot_617543)
    # SSA join for if statement (line 3244)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to _iter_chunked(...): (line 3249)
    # Processing the call arguments (line 3249)
    # Getting the type of 'x0' (line 3249)
    x0_617545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3249, 27), 'x0', False)
    int_617546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3249, 30), 'int')
    # Applying the binary operator '-' (line 3249)
    result_sub_617547 = python_operator(stypy.reporting.localization.Localization(__file__, 3249, 27), '-', x0_617545, int_617546)
    
    # Getting the type of 'lb' (line 3249)
    lb_617548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3249, 33), 'lb', False)
    int_617549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3249, 36), 'int')
    # Applying the binary operator '-' (line 3249)
    result_sub_617550 = python_operator(stypy.reporting.localization.Localization(__file__, 3249, 33), '-', lb_617548, int_617549)
    
    # Processing the call keyword arguments (line 3249)
    # Getting the type of 'chunksize' (line 3249)
    chunksize_617551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3249, 49), 'chunksize', False)
    keyword_617552 = chunksize_617551
    
    # Getting the type of 'inc' (line 3249)
    inc_617553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3249, 65), 'inc', False)
    # Applying the 'usub' unary operator (line 3249)
    result___neg___617554 = python_operator(stypy.reporting.localization.Localization(__file__, 3249, 64), 'usub', inc_617553)
    
    keyword_617555 = result___neg___617554
    kwargs_617556 = {'chunksize': keyword_617552, 'inc': keyword_617555}
    # Getting the type of '_iter_chunked' (line 3249)
    _iter_chunked_617544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3249, 13), '_iter_chunked', False)
    # Calling _iter_chunked(args, kwargs) (line 3249)
    _iter_chunked_call_result_617557 = invoke(stypy.reporting.localization.Localization(__file__, 3249, 13), _iter_chunked_617544, *[result_sub_617547, result_sub_617550], **kwargs_617556)
    
    # Testing the type of a for loop iterable (line 3249)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3249, 4), _iter_chunked_call_result_617557)
    # Getting the type of the for loop variable (line 3249)
    for_loop_var_617558 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3249, 4), _iter_chunked_call_result_617557)
    # Assigning a type to the variable 'x' (line 3249)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3249, 4), 'x', for_loop_var_617558)
    # SSA begins for a for statement (line 3249)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Getting the type of 'count' (line 3250)
    count_617559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3250, 8), 'count')
    # Getting the type of 'x' (line 3250)
    x_617560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3250, 17), 'x')
    # Obtaining the member 'size' of a type (line 3250)
    size_617561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3250, 17), x_617560, 'size')
    # Applying the binary operator '+=' (line 3250)
    result_iadd_617562 = python_operator(stypy.reporting.localization.Localization(__file__, 3250, 8), '+=', count_617559, size_617561)
    # Assigning a type to the variable 'count' (line 3250)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3250, 8), 'count', result_iadd_617562)
    
    
    # Assigning a Call to a Name (line 3251):
    
    # Assigning a Call to a Name (line 3251):
    
    # Call to sum(...): (line 3251)
    # Processing the call arguments (line 3251)
    
    # Call to fun(...): (line 3251)
    # Processing the call arguments (line 3251)
    # Getting the type of 'x' (line 3251)
    x_617566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3251, 27), 'x', False)
    # Processing the call keyword arguments (line 3251)
    kwargs_617567 = {}
    # Getting the type of 'fun' (line 3251)
    fun_617565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3251, 23), 'fun', False)
    # Calling fun(args, kwargs) (line 3251)
    fun_call_result_617568 = invoke(stypy.reporting.localization.Localization(__file__, 3251, 23), fun_617565, *[x_617566], **kwargs_617567)
    
    # Processing the call keyword arguments (line 3251)
    kwargs_617569 = {}
    # Getting the type of 'np' (line 3251)
    np_617563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3251, 16), 'np', False)
    # Obtaining the member 'sum' of a type (line 3251)
    sum_617564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3251, 16), np_617563, 'sum')
    # Calling sum(args, kwargs) (line 3251)
    sum_call_result_617570 = invoke(stypy.reporting.localization.Localization(__file__, 3251, 16), sum_617564, *[fun_call_result_617568], **kwargs_617569)
    
    # Assigning a type to the variable 'delta' (line 3251)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3251, 8), 'delta', sum_call_result_617570)
    
    # Getting the type of 'tot' (line 3252)
    tot_617571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3252, 8), 'tot')
    # Getting the type of 'delta' (line 3252)
    delta_617572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3252, 15), 'delta')
    # Applying the binary operator '+=' (line 3252)
    result_iadd_617573 = python_operator(stypy.reporting.localization.Localization(__file__, 3252, 8), '+=', tot_617571, delta_617572)
    # Assigning a type to the variable 'tot' (line 3252)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3252, 8), 'tot', result_iadd_617573)
    
    
    
    
    # Call to abs(...): (line 3253)
    # Processing the call arguments (line 3253)
    # Getting the type of 'delta' (line 3253)
    delta_617575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3253, 15), 'delta', False)
    # Processing the call keyword arguments (line 3253)
    kwargs_617576 = {}
    # Getting the type of 'abs' (line 3253)
    abs_617574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3253, 11), 'abs', False)
    # Calling abs(args, kwargs) (line 3253)
    abs_call_result_617577 = invoke(stypy.reporting.localization.Localization(__file__, 3253, 11), abs_617574, *[delta_617575], **kwargs_617576)
    
    # Getting the type of 'tolerance' (line 3253)
    tolerance_617578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3253, 24), 'tolerance')
    # Getting the type of 'x' (line 3253)
    x_617579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3253, 36), 'x')
    # Obtaining the member 'size' of a type (line 3253)
    size_617580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3253, 36), x_617579, 'size')
    # Applying the binary operator '*' (line 3253)
    result_mul_617581 = python_operator(stypy.reporting.localization.Localization(__file__, 3253, 24), '*', tolerance_617578, size_617580)
    
    # Applying the binary operator '<' (line 3253)
    result_lt_617582 = python_operator(stypy.reporting.localization.Localization(__file__, 3253, 11), '<', abs_call_result_617577, result_mul_617581)
    
    # Testing the type of an if condition (line 3253)
    if_condition_617583 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3253, 8), result_lt_617582)
    # Assigning a type to the variable 'if_condition_617583' (line 3253)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3253, 8), 'if_condition_617583', if_condition_617583)
    # SSA begins for if statement (line 3253)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 3253)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'count' (line 3255)
    count_617584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3255, 11), 'count')
    # Getting the type of 'maxcount' (line 3255)
    maxcount_617585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3255, 19), 'maxcount')
    # Applying the binary operator '>' (line 3255)
    result_gt_617586 = python_operator(stypy.reporting.localization.Localization(__file__, 3255, 11), '>', count_617584, maxcount_617585)
    
    # Testing the type of an if condition (line 3255)
    if_condition_617587 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3255, 8), result_gt_617586)
    # Assigning a type to the variable 'if_condition_617587' (line 3255)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3255, 8), 'if_condition_617587', if_condition_617587)
    # SSA begins for if statement (line 3255)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to warn(...): (line 3256)
    # Processing the call arguments (line 3256)
    str_617590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3256, 26), 'str', 'expect(): sum did not converge')
    # Getting the type of 'RuntimeWarning' (line 3256)
    RuntimeWarning_617591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3256, 60), 'RuntimeWarning', False)
    # Processing the call keyword arguments (line 3256)
    kwargs_617592 = {}
    # Getting the type of 'warnings' (line 3256)
    warnings_617588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3256, 12), 'warnings', False)
    # Obtaining the member 'warn' of a type (line 3256)
    warn_617589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3256, 12), warnings_617588, 'warn')
    # Calling warn(args, kwargs) (line 3256)
    warn_call_result_617593 = invoke(stypy.reporting.localization.Localization(__file__, 3256, 12), warn_617589, *[str_617590, RuntimeWarning_617591], **kwargs_617592)
    
    # SSA join for if statement (line 3255)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'tot' (line 3259)
    tot_617594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3259, 11), 'tot')
    # Assigning a type to the variable 'stypy_return_type' (line 3259)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3259, 4), 'stypy_return_type', tot_617594)
    
    # ################# End of '_expect(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_expect' in the type store
    # Getting the type of 'stypy_return_type' (line 3220)
    stypy_return_type_617595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3220, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_617595)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_expect'
    return stypy_return_type_617595

# Assigning a type to the variable '_expect' (line 3220)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3220, 0), '_expect', _expect)

@norecursion
def _iter_chunked(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_617596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3262, 36), 'int')
    int_617597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3262, 43), 'int')
    defaults = [int_617596, int_617597]
    # Create a new context for function '_iter_chunked'
    module_type_store = module_type_store.open_function_context('_iter_chunked', 3262, 0, False)
    
    # Passed parameters checking function
    _iter_chunked.stypy_localization = localization
    _iter_chunked.stypy_type_of_self = None
    _iter_chunked.stypy_type_store = module_type_store
    _iter_chunked.stypy_function_name = '_iter_chunked'
    _iter_chunked.stypy_param_names_list = ['x0', 'x1', 'chunksize', 'inc']
    _iter_chunked.stypy_varargs_param_name = None
    _iter_chunked.stypy_kwargs_param_name = None
    _iter_chunked.stypy_call_defaults = defaults
    _iter_chunked.stypy_call_varargs = varargs
    _iter_chunked.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_iter_chunked', ['x0', 'x1', 'chunksize', 'inc'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_iter_chunked', localization, ['x0', 'x1', 'chunksize', 'inc'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_iter_chunked(...)' code ##################

    str_617598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3278, (-1)), 'str', 'Iterate from x0 to x1 in chunks of chunksize and steps inc.\n\n    x0 must be finite, x1 need not be. In the latter case, the iterator is infinite.\n    Handles both x0 < x1 and x0 > x1. In the latter case, iterates downwards\n    (make sure to set inc < 0.)\n\n    >>> [x for x in _iter_chunked(2, 5, inc=2)]\n    [array([2, 4])]\n    >>> [x for x in _iter_chunked(2, 11, inc=2)]\n    [array([2, 4, 6, 8]), array([10])]\n    >>> [x for x in _iter_chunked(2, -5, inc=-2)]\n    [array([ 2,  0, -2, -4])]\n    >>> [x for x in _iter_chunked(2, -9, inc=-2)]\n    [array([ 2,  0, -2, -4]), array([-6, -8])]\n\n    ')
    
    
    # Getting the type of 'inc' (line 3279)
    inc_617599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3279, 7), 'inc')
    int_617600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3279, 14), 'int')
    # Applying the binary operator '==' (line 3279)
    result_eq_617601 = python_operator(stypy.reporting.localization.Localization(__file__, 3279, 7), '==', inc_617599, int_617600)
    
    # Testing the type of an if condition (line 3279)
    if_condition_617602 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3279, 4), result_eq_617601)
    # Assigning a type to the variable 'if_condition_617602' (line 3279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3279, 4), 'if_condition_617602', if_condition_617602)
    # SSA begins for if statement (line 3279)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 3280)
    # Processing the call arguments (line 3280)
    str_617604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3280, 25), 'str', 'Cannot increment by zero.')
    # Processing the call keyword arguments (line 3280)
    kwargs_617605 = {}
    # Getting the type of 'ValueError' (line 3280)
    ValueError_617603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3280, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 3280)
    ValueError_call_result_617606 = invoke(stypy.reporting.localization.Localization(__file__, 3280, 14), ValueError_617603, *[str_617604], **kwargs_617605)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 3280, 8), ValueError_call_result_617606, 'raise parameter', BaseException)
    # SSA join for if statement (line 3279)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'chunksize' (line 3281)
    chunksize_617607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3281, 7), 'chunksize')
    int_617608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3281, 20), 'int')
    # Applying the binary operator '<=' (line 3281)
    result_le_617609 = python_operator(stypy.reporting.localization.Localization(__file__, 3281, 7), '<=', chunksize_617607, int_617608)
    
    # Testing the type of an if condition (line 3281)
    if_condition_617610 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3281, 4), result_le_617609)
    # Assigning a type to the variable 'if_condition_617610' (line 3281)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3281, 4), 'if_condition_617610', if_condition_617610)
    # SSA begins for if statement (line 3281)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to ValueError(...): (line 3282)
    # Processing the call arguments (line 3282)
    str_617612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3282, 25), 'str', 'Chunk size must be positive; got %s.')
    # Getting the type of 'chunksize' (line 3282)
    chunksize_617613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3282, 66), 'chunksize', False)
    # Applying the binary operator '%' (line 3282)
    result_mod_617614 = python_operator(stypy.reporting.localization.Localization(__file__, 3282, 25), '%', str_617612, chunksize_617613)
    
    # Processing the call keyword arguments (line 3282)
    kwargs_617615 = {}
    # Getting the type of 'ValueError' (line 3282)
    ValueError_617611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3282, 14), 'ValueError', False)
    # Calling ValueError(args, kwargs) (line 3282)
    ValueError_call_result_617616 = invoke(stypy.reporting.localization.Localization(__file__, 3282, 14), ValueError_617611, *[result_mod_617614], **kwargs_617615)
    
    ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 3282, 8), ValueError_call_result_617616, 'raise parameter', BaseException)
    # SSA join for if statement (line 3281)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a IfExp to a Name (line 3284):
    
    # Assigning a IfExp to a Name (line 3284):
    
    
    # Getting the type of 'inc' (line 3284)
    inc_617617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3284, 13), 'inc')
    int_617618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3284, 19), 'int')
    # Applying the binary operator '>' (line 3284)
    result_gt_617619 = python_operator(stypy.reporting.localization.Localization(__file__, 3284, 13), '>', inc_617617, int_617618)
    
    # Testing the type of an if expression (line 3284)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3284, 8), result_gt_617619)
    # SSA begins for if expression (line 3284)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
    int_617620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3284, 8), 'int')
    # SSA branch for the else part of an if expression (line 3284)
    module_type_store.open_ssa_branch('if expression else')
    int_617621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3284, 26), 'int')
    # SSA join for if expression (line 3284)
    module_type_store = module_type_store.join_ssa_context()
    if_exp_617622 = union_type.UnionType.add(int_617620, int_617621)
    
    # Assigning a type to the variable 's' (line 3284)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3284, 4), 's', if_exp_617622)
    
    # Assigning a Call to a Name (line 3285):
    
    # Assigning a Call to a Name (line 3285):
    
    # Call to abs(...): (line 3285)
    # Processing the call arguments (line 3285)
    # Getting the type of 'chunksize' (line 3285)
    chunksize_617624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3285, 19), 'chunksize', False)
    # Getting the type of 'inc' (line 3285)
    inc_617625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3285, 31), 'inc', False)
    # Applying the binary operator '*' (line 3285)
    result_mul_617626 = python_operator(stypy.reporting.localization.Localization(__file__, 3285, 19), '*', chunksize_617624, inc_617625)
    
    # Processing the call keyword arguments (line 3285)
    kwargs_617627 = {}
    # Getting the type of 'abs' (line 3285)
    abs_617623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3285, 15), 'abs', False)
    # Calling abs(args, kwargs) (line 3285)
    abs_call_result_617628 = invoke(stypy.reporting.localization.Localization(__file__, 3285, 15), abs_617623, *[result_mul_617626], **kwargs_617627)
    
    # Assigning a type to the variable 'stepsize' (line 3285)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3285, 4), 'stepsize', abs_call_result_617628)
    
    # Assigning a Name to a Name (line 3287):
    
    # Assigning a Name to a Name (line 3287):
    # Getting the type of 'x0' (line 3287)
    x0_617629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3287, 8), 'x0')
    # Assigning a type to the variable 'x' (line 3287)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3287, 4), 'x', x0_617629)
    
    
    # Getting the type of 'x' (line 3288)
    x_617630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3288, 11), 'x')
    # Getting the type of 'x1' (line 3288)
    x1_617631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3288, 15), 'x1')
    # Applying the binary operator '-' (line 3288)
    result_sub_617632 = python_operator(stypy.reporting.localization.Localization(__file__, 3288, 11), '-', x_617630, x1_617631)
    
    # Getting the type of 'inc' (line 3288)
    inc_617633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3288, 21), 'inc')
    # Applying the binary operator '*' (line 3288)
    result_mul_617634 = python_operator(stypy.reporting.localization.Localization(__file__, 3288, 10), '*', result_sub_617632, inc_617633)
    
    int_617635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3288, 27), 'int')
    # Applying the binary operator '<' (line 3288)
    result_lt_617636 = python_operator(stypy.reporting.localization.Localization(__file__, 3288, 10), '<', result_mul_617634, int_617635)
    
    # Testing the type of an if condition (line 3288)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3288, 4), result_lt_617636)
    # SSA begins for while statement (line 3288)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
    
    # Assigning a Call to a Name (line 3289):
    
    # Assigning a Call to a Name (line 3289):
    
    # Call to min(...): (line 3289)
    # Processing the call arguments (line 3289)
    # Getting the type of 'stepsize' (line 3289)
    stepsize_617638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3289, 20), 'stepsize', False)
    
    # Call to abs(...): (line 3289)
    # Processing the call arguments (line 3289)
    # Getting the type of 'x' (line 3289)
    x_617640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3289, 34), 'x', False)
    # Getting the type of 'x1' (line 3289)
    x1_617641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3289, 38), 'x1', False)
    # Applying the binary operator '-' (line 3289)
    result_sub_617642 = python_operator(stypy.reporting.localization.Localization(__file__, 3289, 34), '-', x_617640, x1_617641)
    
    # Processing the call keyword arguments (line 3289)
    kwargs_617643 = {}
    # Getting the type of 'abs' (line 3289)
    abs_617639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3289, 30), 'abs', False)
    # Calling abs(args, kwargs) (line 3289)
    abs_call_result_617644 = invoke(stypy.reporting.localization.Localization(__file__, 3289, 30), abs_617639, *[result_sub_617642], **kwargs_617643)
    
    # Processing the call keyword arguments (line 3289)
    kwargs_617645 = {}
    # Getting the type of 'min' (line 3289)
    min_617637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3289, 16), 'min', False)
    # Calling min(args, kwargs) (line 3289)
    min_call_result_617646 = invoke(stypy.reporting.localization.Localization(__file__, 3289, 16), min_617637, *[stepsize_617638, abs_call_result_617644], **kwargs_617645)
    
    # Assigning a type to the variable 'delta' (line 3289)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3289, 8), 'delta', min_call_result_617646)
    
    # Assigning a BinOp to a Name (line 3290):
    
    # Assigning a BinOp to a Name (line 3290):
    # Getting the type of 'delta' (line 3290)
    delta_617647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3290, 15), 'delta')
    # Getting the type of 's' (line 3290)
    s_617648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3290, 23), 's')
    # Applying the binary operator '*' (line 3290)
    result_mul_617649 = python_operator(stypy.reporting.localization.Localization(__file__, 3290, 15), '*', delta_617647, s_617648)
    
    # Assigning a type to the variable 'step' (line 3290)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3290, 8), 'step', result_mul_617649)
    
    # Assigning a Call to a Name (line 3291):
    
    # Assigning a Call to a Name (line 3291):
    
    # Call to arange(...): (line 3291)
    # Processing the call arguments (line 3291)
    # Getting the type of 'x' (line 3291)
    x_617652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3291, 25), 'x', False)
    # Getting the type of 'x' (line 3291)
    x_617653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3291, 28), 'x', False)
    # Getting the type of 'step' (line 3291)
    step_617654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3291, 32), 'step', False)
    # Applying the binary operator '+' (line 3291)
    result_add_617655 = python_operator(stypy.reporting.localization.Localization(__file__, 3291, 28), '+', x_617653, step_617654)
    
    # Getting the type of 'inc' (line 3291)
    inc_617656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3291, 38), 'inc', False)
    # Processing the call keyword arguments (line 3291)
    kwargs_617657 = {}
    # Getting the type of 'np' (line 3291)
    np_617650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3291, 15), 'np', False)
    # Obtaining the member 'arange' of a type (line 3291)
    arange_617651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3291, 15), np_617650, 'arange')
    # Calling arange(args, kwargs) (line 3291)
    arange_call_result_617658 = invoke(stypy.reporting.localization.Localization(__file__, 3291, 15), arange_617651, *[x_617652, result_add_617655, inc_617656], **kwargs_617657)
    
    # Assigning a type to the variable 'supp' (line 3291)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3291, 8), 'supp', arange_call_result_617658)
    
    # Getting the type of 'x' (line 3292)
    x_617659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3292, 8), 'x')
    # Getting the type of 'step' (line 3292)
    step_617660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3292, 13), 'step')
    # Applying the binary operator '+=' (line 3292)
    result_iadd_617661 = python_operator(stypy.reporting.localization.Localization(__file__, 3292, 8), '+=', x_617659, step_617660)
    # Assigning a type to the variable 'x' (line 3292)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3292, 8), 'x', result_iadd_617661)
    
    # Creating a generator
    # Getting the type of 'supp' (line 3293)
    supp_617662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3293, 14), 'supp')
    GeneratorType_617663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3293, 8), 'GeneratorType')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3293, 8), GeneratorType_617663, supp_617662)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3293, 8), 'stypy_return_type', GeneratorType_617663)
    # SSA join for while statement (line 3288)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of '_iter_chunked(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_iter_chunked' in the type store
    # Getting the type of 'stypy_return_type' (line 3262)
    stypy_return_type_617664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3262, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_617664)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_iter_chunked'
    return stypy_return_type_617664

# Assigning a type to the variable '_iter_chunked' (line 3262)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3262, 0), '_iter_chunked', _iter_chunked)
# Declaration of the 'rv_sample' class
# Getting the type of 'rv_discrete' (line 3296)
rv_discrete_617665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3296, 16), 'rv_discrete')

class rv_sample(rv_discrete_617665, ):
    str_617666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3300, (-1)), 'str', "A 'sample' discrete distribution defined by the support and values.\n\n       The ctor ignores most of the arguments, only needs the `values` argument.\n    ")

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        int_617667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3301, 25), 'int')
        # Getting the type of 'inf' (line 3301)
        inf_617668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3301, 30), 'inf')
        # Getting the type of 'None' (line 3301)
        None_617669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3301, 40), 'None')
        # Getting the type of 'None' (line 3301)
        None_617670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3301, 55), 'None')
        float_617671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3302, 28), 'float')
        # Getting the type of 'None' (line 3302)
        None_617672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3302, 41), 'None')
        int_617673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3302, 51), 'int')
        # Getting the type of 'None' (line 3302)
        None_617674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3302, 63), 'None')
        # Getting the type of 'None' (line 3303)
        None_617675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 24), 'None')
        # Getting the type of 'None' (line 3303)
        None_617676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 39), 'None')
        # Getting the type of 'None' (line 3303)
        None_617677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3303, 50), 'None')
        defaults = [int_617667, inf_617668, None_617669, None_617670, float_617671, None_617672, int_617673, None_617674, None_617675, None_617676, None_617677]
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 3301, 4, False)
        # Assigning a type to the variable 'self' (line 3302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3302, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_sample.__init__', ['a', 'b', 'name', 'badvalue', 'moment_tol', 'values', 'inc', 'longname', 'shapes', 'extradoc', 'seed'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['a', 'b', 'name', 'badvalue', 'moment_tol', 'values', 'inc', 'longname', 'shapes', 'extradoc', 'seed'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 3305)
        # Processing the call arguments (line 3305)
        # Getting the type of 'seed' (line 3305)
        seed_617684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3305, 42), 'seed', False)
        # Processing the call keyword arguments (line 3305)
        kwargs_617685 = {}
        
        # Call to super(...): (line 3305)
        # Processing the call arguments (line 3305)
        # Getting the type of 'rv_discrete' (line 3305)
        rv_discrete_617679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3305, 14), 'rv_discrete', False)
        # Getting the type of 'self' (line 3305)
        self_617680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3305, 27), 'self', False)
        # Processing the call keyword arguments (line 3305)
        kwargs_617681 = {}
        # Getting the type of 'super' (line 3305)
        super_617678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3305, 8), 'super', False)
        # Calling super(args, kwargs) (line 3305)
        super_call_result_617682 = invoke(stypy.reporting.localization.Localization(__file__, 3305, 8), super_617678, *[rv_discrete_617679, self_617680], **kwargs_617681)
        
        # Obtaining the member '__init__' of a type (line 3305)
        init___617683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3305, 8), super_call_result_617682, '__init__')
        # Calling __init__(args, kwargs) (line 3305)
        init___call_result_617686 = invoke(stypy.reporting.localization.Localization(__file__, 3305, 8), init___617683, *[seed_617684], **kwargs_617685)
        
        
        # Type idiom detected: calculating its left and rigth part (line 3307)
        # Getting the type of 'values' (line 3307)
        values_617687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3307, 11), 'values')
        # Getting the type of 'None' (line 3307)
        None_617688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3307, 21), 'None')
        
        (may_be_617689, more_types_in_union_617690) = may_be_none(values_617687, None_617688)

        if may_be_617689:

            if more_types_in_union_617690:
                # Runtime conditional SSA (line 3307)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to ValueError(...): (line 3308)
            # Processing the call arguments (line 3308)
            str_617692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3308, 29), 'str', 'rv_sample.__init__(..., values=None,...)')
            # Processing the call keyword arguments (line 3308)
            kwargs_617693 = {}
            # Getting the type of 'ValueError' (line 3308)
            ValueError_617691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3308, 18), 'ValueError', False)
            # Calling ValueError(args, kwargs) (line 3308)
            ValueError_call_result_617694 = invoke(stypy.reporting.localization.Localization(__file__, 3308, 18), ValueError_617691, *[str_617692], **kwargs_617693)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 3308, 12), ValueError_call_result_617694, 'raise parameter', BaseException)

            if more_types_in_union_617690:
                # SSA join for if statement (line 3307)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Attribute (line 3311):
        
        # Assigning a Call to a Attribute (line 3311):
        
        # Call to dict(...): (line 3311)
        # Processing the call keyword arguments (line 3311)
        # Getting the type of 'a' (line 3312)
        a_617696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3312, 14), 'a', False)
        keyword_617697 = a_617696
        # Getting the type of 'b' (line 3312)
        b_617698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3312, 19), 'b', False)
        keyword_617699 = b_617698
        # Getting the type of 'name' (line 3312)
        name_617700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3312, 27), 'name', False)
        keyword_617701 = name_617700
        # Getting the type of 'badvalue' (line 3312)
        badvalue_617702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3312, 42), 'badvalue', False)
        keyword_617703 = badvalue_617702
        # Getting the type of 'moment_tol' (line 3313)
        moment_tol_617704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3313, 23), 'moment_tol', False)
        keyword_617705 = moment_tol_617704
        # Getting the type of 'values' (line 3313)
        values_617706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3313, 42), 'values', False)
        keyword_617707 = values_617706
        # Getting the type of 'inc' (line 3313)
        inc_617708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3313, 54), 'inc', False)
        keyword_617709 = inc_617708
        # Getting the type of 'longname' (line 3314)
        longname_617710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3314, 21), 'longname', False)
        keyword_617711 = longname_617710
        # Getting the type of 'shapes' (line 3314)
        shapes_617712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3314, 38), 'shapes', False)
        keyword_617713 = shapes_617712
        # Getting the type of 'extradoc' (line 3314)
        extradoc_617714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3314, 55), 'extradoc', False)
        keyword_617715 = extradoc_617714
        # Getting the type of 'seed' (line 3314)
        seed_617716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3314, 70), 'seed', False)
        keyword_617717 = seed_617716
        kwargs_617718 = {'a': keyword_617697, 'extradoc': keyword_617715, 'b': keyword_617699, 'name': keyword_617701, 'moment_tol': keyword_617705, 'shapes': keyword_617713, 'seed': keyword_617717, 'values': keyword_617707, 'longname': keyword_617711, 'badvalue': keyword_617703, 'inc': keyword_617709}
        # Getting the type of 'dict' (line 3311)
        dict_617695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3311, 27), 'dict', False)
        # Calling dict(args, kwargs) (line 3311)
        dict_call_result_617719 = invoke(stypy.reporting.localization.Localization(__file__, 3311, 27), dict_617695, *[], **kwargs_617718)
        
        # Getting the type of 'self' (line 3311)
        self_617720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3311, 8), 'self')
        # Setting the type of the member '_ctor_param' of a type (line 3311)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3311, 8), self_617720, '_ctor_param', dict_call_result_617719)
        
        # Type idiom detected: calculating its left and rigth part (line 3316)
        # Getting the type of 'badvalue' (line 3316)
        badvalue_617721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3316, 11), 'badvalue')
        # Getting the type of 'None' (line 3316)
        None_617722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3316, 23), 'None')
        
        (may_be_617723, more_types_in_union_617724) = may_be_none(badvalue_617721, None_617722)

        if may_be_617723:

            if more_types_in_union_617724:
                # Runtime conditional SSA (line 3316)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Name to a Name (line 3317):
            
            # Assigning a Name to a Name (line 3317):
            # Getting the type of 'nan' (line 3317)
            nan_617725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3317, 23), 'nan')
            # Assigning a type to the variable 'badvalue' (line 3317)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3317, 12), 'badvalue', nan_617725)

            if more_types_in_union_617724:
                # SSA join for if statement (line 3316)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Name to a Attribute (line 3318):
        
        # Assigning a Name to a Attribute (line 3318):
        # Getting the type of 'badvalue' (line 3318)
        badvalue_617726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3318, 24), 'badvalue')
        # Getting the type of 'self' (line 3318)
        self_617727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3318, 8), 'self')
        # Setting the type of the member 'badvalue' of a type (line 3318)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3318, 8), self_617727, 'badvalue', badvalue_617726)
        
        # Assigning a Name to a Attribute (line 3319):
        
        # Assigning a Name to a Attribute (line 3319):
        # Getting the type of 'moment_tol' (line 3319)
        moment_tol_617728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3319, 26), 'moment_tol')
        # Getting the type of 'self' (line 3319)
        self_617729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3319, 8), 'self')
        # Setting the type of the member 'moment_tol' of a type (line 3319)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3319, 8), self_617729, 'moment_tol', moment_tol_617728)
        
        # Assigning a Name to a Attribute (line 3320):
        
        # Assigning a Name to a Attribute (line 3320):
        # Getting the type of 'inc' (line 3320)
        inc_617730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3320, 19), 'inc')
        # Getting the type of 'self' (line 3320)
        self_617731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3320, 8), 'self')
        # Setting the type of the member 'inc' of a type (line 3320)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3320, 8), self_617731, 'inc', inc_617730)
        
        # Assigning a Name to a Attribute (line 3321):
        
        # Assigning a Name to a Attribute (line 3321):
        # Getting the type of 'shapes' (line 3321)
        shapes_617732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3321, 22), 'shapes')
        # Getting the type of 'self' (line 3321)
        self_617733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3321, 8), 'self')
        # Setting the type of the member 'shapes' of a type (line 3321)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3321, 8), self_617733, 'shapes', shapes_617732)
        
        # Assigning a Attribute to a Attribute (line 3322):
        
        # Assigning a Attribute to a Attribute (line 3322):
        # Getting the type of 'self' (line 3322)
        self_617734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3322, 26), 'self')
        # Obtaining the member '_entropy' of a type (line 3322)
        _entropy_617735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3322, 26), self_617734, '_entropy')
        # Getting the type of 'self' (line 3322)
        self_617736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3322, 8), 'self')
        # Setting the type of the member 'vecentropy' of a type (line 3322)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3322, 8), self_617736, 'vecentropy', _entropy_617735)
        
        # Assigning a Name to a Tuple (line 3324):
        
        # Assigning a Subscript to a Name (line 3324):
        
        # Obtaining the type of the subscript
        int_617737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3324, 8), 'int')
        # Getting the type of 'values' (line 3324)
        values_617738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3324, 17), 'values')
        # Obtaining the member '__getitem__' of a type (line 3324)
        getitem___617739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3324, 8), values_617738, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3324)
        subscript_call_result_617740 = invoke(stypy.reporting.localization.Localization(__file__, 3324, 8), getitem___617739, int_617737)
        
        # Assigning a type to the variable 'tuple_var_assignment_609403' (line 3324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3324, 8), 'tuple_var_assignment_609403', subscript_call_result_617740)
        
        # Assigning a Subscript to a Name (line 3324):
        
        # Obtaining the type of the subscript
        int_617741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3324, 8), 'int')
        # Getting the type of 'values' (line 3324)
        values_617742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3324, 17), 'values')
        # Obtaining the member '__getitem__' of a type (line 3324)
        getitem___617743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3324, 8), values_617742, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3324)
        subscript_call_result_617744 = invoke(stypy.reporting.localization.Localization(__file__, 3324, 8), getitem___617743, int_617741)
        
        # Assigning a type to the variable 'tuple_var_assignment_609404' (line 3324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3324, 8), 'tuple_var_assignment_609404', subscript_call_result_617744)
        
        # Assigning a Name to a Name (line 3324):
        # Getting the type of 'tuple_var_assignment_609403' (line 3324)
        tuple_var_assignment_609403_617745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3324, 8), 'tuple_var_assignment_609403')
        # Assigning a type to the variable 'xk' (line 3324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3324, 8), 'xk', tuple_var_assignment_609403_617745)
        
        # Assigning a Name to a Name (line 3324):
        # Getting the type of 'tuple_var_assignment_609404' (line 3324)
        tuple_var_assignment_609404_617746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3324, 8), 'tuple_var_assignment_609404')
        # Assigning a type to the variable 'pk' (line 3324)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3324, 12), 'pk', tuple_var_assignment_609404_617746)
        
        
        
        # Call to len(...): (line 3326)
        # Processing the call arguments (line 3326)
        # Getting the type of 'xk' (line 3326)
        xk_617748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3326, 15), 'xk', False)
        # Processing the call keyword arguments (line 3326)
        kwargs_617749 = {}
        # Getting the type of 'len' (line 3326)
        len_617747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3326, 11), 'len', False)
        # Calling len(args, kwargs) (line 3326)
        len_call_result_617750 = invoke(stypy.reporting.localization.Localization(__file__, 3326, 11), len_617747, *[xk_617748], **kwargs_617749)
        
        
        # Call to len(...): (line 3326)
        # Processing the call arguments (line 3326)
        # Getting the type of 'pk' (line 3326)
        pk_617752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3326, 26), 'pk', False)
        # Processing the call keyword arguments (line 3326)
        kwargs_617753 = {}
        # Getting the type of 'len' (line 3326)
        len_617751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3326, 22), 'len', False)
        # Calling len(args, kwargs) (line 3326)
        len_call_result_617754 = invoke(stypy.reporting.localization.Localization(__file__, 3326, 22), len_617751, *[pk_617752], **kwargs_617753)
        
        # Applying the binary operator '!=' (line 3326)
        result_ne_617755 = python_operator(stypy.reporting.localization.Localization(__file__, 3326, 11), '!=', len_call_result_617750, len_call_result_617754)
        
        # Testing the type of an if condition (line 3326)
        if_condition_617756 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3326, 8), result_ne_617755)
        # Assigning a type to the variable 'if_condition_617756' (line 3326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3326, 8), 'if_condition_617756', if_condition_617756)
        # SSA begins for if statement (line 3326)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 3327)
        # Processing the call arguments (line 3327)
        str_617758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3327, 29), 'str', 'xk and pk need to have the same length.')
        # Processing the call keyword arguments (line 3327)
        kwargs_617759 = {}
        # Getting the type of 'ValueError' (line 3327)
        ValueError_617757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3327, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 3327)
        ValueError_call_result_617760 = invoke(stypy.reporting.localization.Localization(__file__, 3327, 18), ValueError_617757, *[str_617758], **kwargs_617759)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 3327, 12), ValueError_call_result_617760, 'raise parameter', BaseException)
        # SSA join for if statement (line 3326)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        
        # Call to allclose(...): (line 3328)
        # Processing the call arguments (line 3328)
        
        # Call to sum(...): (line 3328)
        # Processing the call arguments (line 3328)
        # Getting the type of 'pk' (line 3328)
        pk_617765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3328, 34), 'pk', False)
        # Processing the call keyword arguments (line 3328)
        kwargs_617766 = {}
        # Getting the type of 'np' (line 3328)
        np_617763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3328, 27), 'np', False)
        # Obtaining the member 'sum' of a type (line 3328)
        sum_617764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3328, 27), np_617763, 'sum')
        # Calling sum(args, kwargs) (line 3328)
        sum_call_result_617767 = invoke(stypy.reporting.localization.Localization(__file__, 3328, 27), sum_617764, *[pk_617765], **kwargs_617766)
        
        int_617768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3328, 39), 'int')
        # Processing the call keyword arguments (line 3328)
        kwargs_617769 = {}
        # Getting the type of 'np' (line 3328)
        np_617761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3328, 15), 'np', False)
        # Obtaining the member 'allclose' of a type (line 3328)
        allclose_617762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3328, 15), np_617761, 'allclose')
        # Calling allclose(args, kwargs) (line 3328)
        allclose_call_result_617770 = invoke(stypy.reporting.localization.Localization(__file__, 3328, 15), allclose_617762, *[sum_call_result_617767, int_617768], **kwargs_617769)
        
        # Applying the 'not' unary operator (line 3328)
        result_not__617771 = python_operator(stypy.reporting.localization.Localization(__file__, 3328, 11), 'not', allclose_call_result_617770)
        
        # Testing the type of an if condition (line 3328)
        if_condition_617772 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3328, 8), result_not__617771)
        # Assigning a type to the variable 'if_condition_617772' (line 3328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3328, 8), 'if_condition_617772', if_condition_617772)
        # SSA begins for if statement (line 3328)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to ValueError(...): (line 3329)
        # Processing the call arguments (line 3329)
        str_617774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3329, 29), 'str', 'The sum of provided pk is not 1.')
        # Processing the call keyword arguments (line 3329)
        kwargs_617775 = {}
        # Getting the type of 'ValueError' (line 3329)
        ValueError_617773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3329, 18), 'ValueError', False)
        # Calling ValueError(args, kwargs) (line 3329)
        ValueError_call_result_617776 = invoke(stypy.reporting.localization.Localization(__file__, 3329, 18), ValueError_617773, *[str_617774], **kwargs_617775)
        
        ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 3329, 12), ValueError_call_result_617776, 'raise parameter', BaseException)
        # SSA join for if statement (line 3328)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 3331):
        
        # Assigning a Call to a Name (line 3331):
        
        # Call to argsort(...): (line 3331)
        # Processing the call arguments (line 3331)
        
        # Call to ravel(...): (line 3331)
        # Processing the call arguments (line 3331)
        # Getting the type of 'xk' (line 3331)
        xk_617781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3331, 35), 'xk', False)
        # Processing the call keyword arguments (line 3331)
        kwargs_617782 = {}
        # Getting the type of 'np' (line 3331)
        np_617779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3331, 26), 'np', False)
        # Obtaining the member 'ravel' of a type (line 3331)
        ravel_617780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3331, 26), np_617779, 'ravel')
        # Calling ravel(args, kwargs) (line 3331)
        ravel_call_result_617783 = invoke(stypy.reporting.localization.Localization(__file__, 3331, 26), ravel_617780, *[xk_617781], **kwargs_617782)
        
        # Processing the call keyword arguments (line 3331)
        kwargs_617784 = {}
        # Getting the type of 'np' (line 3331)
        np_617777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3331, 15), 'np', False)
        # Obtaining the member 'argsort' of a type (line 3331)
        argsort_617778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3331, 15), np_617777, 'argsort')
        # Calling argsort(args, kwargs) (line 3331)
        argsort_call_result_617785 = invoke(stypy.reporting.localization.Localization(__file__, 3331, 15), argsort_617778, *[ravel_call_result_617783], **kwargs_617784)
        
        # Assigning a type to the variable 'indx' (line 3331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3331, 8), 'indx', argsort_call_result_617785)
        
        # Assigning a Call to a Attribute (line 3332):
        
        # Assigning a Call to a Attribute (line 3332):
        
        # Call to take(...): (line 3332)
        # Processing the call arguments (line 3332)
        
        # Call to ravel(...): (line 3332)
        # Processing the call arguments (line 3332)
        # Getting the type of 'xk' (line 3332)
        xk_617790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3332, 35), 'xk', False)
        # Processing the call keyword arguments (line 3332)
        kwargs_617791 = {}
        # Getting the type of 'np' (line 3332)
        np_617788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3332, 26), 'np', False)
        # Obtaining the member 'ravel' of a type (line 3332)
        ravel_617789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3332, 26), np_617788, 'ravel')
        # Calling ravel(args, kwargs) (line 3332)
        ravel_call_result_617792 = invoke(stypy.reporting.localization.Localization(__file__, 3332, 26), ravel_617789, *[xk_617790], **kwargs_617791)
        
        # Getting the type of 'indx' (line 3332)
        indx_617793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3332, 40), 'indx', False)
        int_617794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3332, 46), 'int')
        # Processing the call keyword arguments (line 3332)
        kwargs_617795 = {}
        # Getting the type of 'np' (line 3332)
        np_617786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3332, 18), 'np', False)
        # Obtaining the member 'take' of a type (line 3332)
        take_617787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3332, 18), np_617786, 'take')
        # Calling take(args, kwargs) (line 3332)
        take_call_result_617796 = invoke(stypy.reporting.localization.Localization(__file__, 3332, 18), take_617787, *[ravel_call_result_617792, indx_617793, int_617794], **kwargs_617795)
        
        # Getting the type of 'self' (line 3332)
        self_617797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3332, 8), 'self')
        # Setting the type of the member 'xk' of a type (line 3332)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3332, 8), self_617797, 'xk', take_call_result_617796)
        
        # Assigning a Call to a Attribute (line 3333):
        
        # Assigning a Call to a Attribute (line 3333):
        
        # Call to take(...): (line 3333)
        # Processing the call arguments (line 3333)
        
        # Call to ravel(...): (line 3333)
        # Processing the call arguments (line 3333)
        # Getting the type of 'pk' (line 3333)
        pk_617802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3333, 35), 'pk', False)
        # Processing the call keyword arguments (line 3333)
        kwargs_617803 = {}
        # Getting the type of 'np' (line 3333)
        np_617800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3333, 26), 'np', False)
        # Obtaining the member 'ravel' of a type (line 3333)
        ravel_617801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3333, 26), np_617800, 'ravel')
        # Calling ravel(args, kwargs) (line 3333)
        ravel_call_result_617804 = invoke(stypy.reporting.localization.Localization(__file__, 3333, 26), ravel_617801, *[pk_617802], **kwargs_617803)
        
        # Getting the type of 'indx' (line 3333)
        indx_617805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3333, 40), 'indx', False)
        int_617806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3333, 46), 'int')
        # Processing the call keyword arguments (line 3333)
        kwargs_617807 = {}
        # Getting the type of 'np' (line 3333)
        np_617798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3333, 18), 'np', False)
        # Obtaining the member 'take' of a type (line 3333)
        take_617799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3333, 18), np_617798, 'take')
        # Calling take(args, kwargs) (line 3333)
        take_call_result_617808 = invoke(stypy.reporting.localization.Localization(__file__, 3333, 18), take_617799, *[ravel_call_result_617804, indx_617805, int_617806], **kwargs_617807)
        
        # Getting the type of 'self' (line 3333)
        self_617809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3333, 8), 'self')
        # Setting the type of the member 'pk' of a type (line 3333)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3333, 8), self_617809, 'pk', take_call_result_617808)
        
        # Assigning a Subscript to a Attribute (line 3334):
        
        # Assigning a Subscript to a Attribute (line 3334):
        
        # Obtaining the type of the subscript
        int_617810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3334, 25), 'int')
        # Getting the type of 'self' (line 3334)
        self_617811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3334, 17), 'self')
        # Obtaining the member 'xk' of a type (line 3334)
        xk_617812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3334, 17), self_617811, 'xk')
        # Obtaining the member '__getitem__' of a type (line 3334)
        getitem___617813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3334, 17), xk_617812, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3334)
        subscript_call_result_617814 = invoke(stypy.reporting.localization.Localization(__file__, 3334, 17), getitem___617813, int_617810)
        
        # Getting the type of 'self' (line 3334)
        self_617815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3334, 8), 'self')
        # Setting the type of the member 'a' of a type (line 3334)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3334, 8), self_617815, 'a', subscript_call_result_617814)
        
        # Assigning a Subscript to a Attribute (line 3335):
        
        # Assigning a Subscript to a Attribute (line 3335):
        
        # Obtaining the type of the subscript
        int_617816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3335, 25), 'int')
        # Getting the type of 'self' (line 3335)
        self_617817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3335, 17), 'self')
        # Obtaining the member 'xk' of a type (line 3335)
        xk_617818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3335, 17), self_617817, 'xk')
        # Obtaining the member '__getitem__' of a type (line 3335)
        getitem___617819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3335, 17), xk_617818, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3335)
        subscript_call_result_617820 = invoke(stypy.reporting.localization.Localization(__file__, 3335, 17), getitem___617819, int_617816)
        
        # Getting the type of 'self' (line 3335)
        self_617821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3335, 8), 'self')
        # Setting the type of the member 'b' of a type (line 3335)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3335, 8), self_617821, 'b', subscript_call_result_617820)
        
        # Assigning a Call to a Attribute (line 3336):
        
        # Assigning a Call to a Attribute (line 3336):
        
        # Call to cumsum(...): (line 3336)
        # Processing the call arguments (line 3336)
        # Getting the type of 'self' (line 3336)
        self_617824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3336, 31), 'self', False)
        # Obtaining the member 'pk' of a type (line 3336)
        pk_617825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3336, 31), self_617824, 'pk')
        # Processing the call keyword arguments (line 3336)
        int_617826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3336, 45), 'int')
        keyword_617827 = int_617826
        kwargs_617828 = {'axis': keyword_617827}
        # Getting the type of 'np' (line 3336)
        np_617822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3336, 21), 'np', False)
        # Obtaining the member 'cumsum' of a type (line 3336)
        cumsum_617823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3336, 21), np_617822, 'cumsum')
        # Calling cumsum(args, kwargs) (line 3336)
        cumsum_call_result_617829 = invoke(stypy.reporting.localization.Localization(__file__, 3336, 21), cumsum_617823, *[pk_617825], **kwargs_617828)
        
        # Getting the type of 'self' (line 3336)
        self_617830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3336, 8), 'self')
        # Setting the type of the member 'qvals' of a type (line 3336)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3336, 8), self_617830, 'qvals', cumsum_call_result_617829)
        
        # Assigning a Str to a Attribute (line 3338):
        
        # Assigning a Str to a Attribute (line 3338):
        str_617831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3338, 22), 'str', ' ')
        # Getting the type of 'self' (line 3338)
        self_617832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3338, 8), 'self')
        # Setting the type of the member 'shapes' of a type (line 3338)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 3338, 8), self_617832, 'shapes', str_617831)
        
        # Call to _construct_argparser(...): (line 3339)
        # Processing the call keyword arguments (line 3339)
        
        # Obtaining an instance of the builtin type 'list' (line 3339)
        list_617835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3339, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 3339)
        # Adding element type (line 3339)
        # Getting the type of 'self' (line 3339)
        self_617836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3339, 52), 'self', False)
        # Obtaining the member '_pmf' of a type (line 3339)
        _pmf_617837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3339, 52), self_617836, '_pmf')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3339, 51), list_617835, _pmf_617837)
        
        keyword_617838 = list_617835
        str_617839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3340, 46), 'str', 'loc=0')
        keyword_617840 = str_617839
        str_617841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3342, 47), 'str', 'loc, 1')
        keyword_617842 = str_617841
        kwargs_617843 = {'locscale_in': keyword_617840, 'meths_to_inspect': keyword_617838, 'locscale_out': keyword_617842}
        # Getting the type of 'self' (line 3339)
        self_617833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3339, 8), 'self', False)
        # Obtaining the member '_construct_argparser' of a type (line 3339)
        _construct_argparser_617834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3339, 8), self_617833, '_construct_argparser')
        # Calling _construct_argparser(args, kwargs) (line 3339)
        _construct_argparser_call_result_617844 = invoke(stypy.reporting.localization.Localization(__file__, 3339, 8), _construct_argparser_617834, *[], **kwargs_617843)
        
        
        # Call to _construct_docstrings(...): (line 3344)
        # Processing the call arguments (line 3344)
        # Getting the type of 'name' (line 3344)
        name_617847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3344, 35), 'name', False)
        # Getting the type of 'longname' (line 3344)
        longname_617848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3344, 41), 'longname', False)
        # Getting the type of 'extradoc' (line 3344)
        extradoc_617849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3344, 51), 'extradoc', False)
        # Processing the call keyword arguments (line 3344)
        kwargs_617850 = {}
        # Getting the type of 'self' (line 3344)
        self_617845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3344, 8), 'self', False)
        # Obtaining the member '_construct_docstrings' of a type (line 3344)
        _construct_docstrings_617846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3344, 8), self_617845, '_construct_docstrings')
        # Calling _construct_docstrings(args, kwargs) (line 3344)
        _construct_docstrings_call_result_617851 = invoke(stypy.reporting.localization.Localization(__file__, 3344, 8), _construct_docstrings_617846, *[name_617847, longname_617848, extradoc_617849], **kwargs_617850)
        
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def _pmf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_pmf'
        module_type_store = module_type_store.open_function_context('_pmf', 3346, 4, False)
        # Assigning a type to the variable 'self' (line 3347)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3347, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_sample._pmf.__dict__.__setitem__('stypy_localization', localization)
        rv_sample._pmf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_sample._pmf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_sample._pmf.__dict__.__setitem__('stypy_function_name', 'rv_sample._pmf')
        rv_sample._pmf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_sample._pmf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_sample._pmf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_sample._pmf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_sample._pmf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_sample._pmf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_sample._pmf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_sample._pmf', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_pmf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_pmf(...)' code ##################

        
        # Call to select(...): (line 3347)
        # Processing the call arguments (line 3347)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'self' (line 3347)
        self_617857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3347, 42), 'self', False)
        # Obtaining the member 'xk' of a type (line 3347)
        xk_617858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3347, 42), self_617857, 'xk')
        comprehension_617859 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3347, 26), xk_617858)
        # Assigning a type to the variable 'k' (line 3347)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3347, 26), 'k', comprehension_617859)
        
        # Getting the type of 'x' (line 3347)
        x_617854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3347, 26), 'x', False)
        # Getting the type of 'k' (line 3347)
        k_617855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3347, 31), 'k', False)
        # Applying the binary operator '==' (line 3347)
        result_eq_617856 = python_operator(stypy.reporting.localization.Localization(__file__, 3347, 26), '==', x_617854, k_617855)
        
        list_617860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3347, 26), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3347, 26), list_617860, result_eq_617856)
        # Calculating list comprehension
        # Calculating comprehension expression
        # Getting the type of 'self' (line 3348)
        self_617870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3348, 64), 'self', False)
        # Obtaining the member 'pk' of a type (line 3348)
        pk_617871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3348, 64), self_617870, 'pk')
        comprehension_617872 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3348, 26), pk_617871)
        # Assigning a type to the variable 'p' (line 3348)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3348, 26), 'p', comprehension_617872)
        
        # Obtaining the type of the subscript
        int_617861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3348, 52), 'int')
        
        # Call to broadcast_arrays(...): (line 3348)
        # Processing the call arguments (line 3348)
        # Getting the type of 'p' (line 3348)
        p_617864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3348, 46), 'p', False)
        # Getting the type of 'x' (line 3348)
        x_617865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3348, 49), 'x', False)
        # Processing the call keyword arguments (line 3348)
        kwargs_617866 = {}
        # Getting the type of 'np' (line 3348)
        np_617862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3348, 26), 'np', False)
        # Obtaining the member 'broadcast_arrays' of a type (line 3348)
        broadcast_arrays_617863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3348, 26), np_617862, 'broadcast_arrays')
        # Calling broadcast_arrays(args, kwargs) (line 3348)
        broadcast_arrays_call_result_617867 = invoke(stypy.reporting.localization.Localization(__file__, 3348, 26), broadcast_arrays_617863, *[p_617864, x_617865], **kwargs_617866)
        
        # Obtaining the member '__getitem__' of a type (line 3348)
        getitem___617868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3348, 26), broadcast_arrays_call_result_617867, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3348)
        subscript_call_result_617869 = invoke(stypy.reporting.localization.Localization(__file__, 3348, 26), getitem___617868, int_617861)
        
        list_617873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3348, 26), 'list')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3348, 26), list_617873, subscript_call_result_617869)
        int_617874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3348, 74), 'int')
        # Processing the call keyword arguments (line 3347)
        kwargs_617875 = {}
        # Getting the type of 'np' (line 3347)
        np_617852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3347, 15), 'np', False)
        # Obtaining the member 'select' of a type (line 3347)
        select_617853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3347, 15), np_617852, 'select')
        # Calling select(args, kwargs) (line 3347)
        select_call_result_617876 = invoke(stypy.reporting.localization.Localization(__file__, 3347, 15), select_617853, *[list_617860, list_617873, int_617874], **kwargs_617875)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3347)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3347, 8), 'stypy_return_type', select_call_result_617876)
        
        # ################# End of '_pmf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_pmf' in the type store
        # Getting the type of 'stypy_return_type' (line 3346)
        stypy_return_type_617877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3346, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_617877)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_pmf'
        return stypy_return_type_617877


    @norecursion
    def _cdf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_cdf'
        module_type_store = module_type_store.open_function_context('_cdf', 3350, 4, False)
        # Assigning a type to the variable 'self' (line 3351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3351, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_sample._cdf.__dict__.__setitem__('stypy_localization', localization)
        rv_sample._cdf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_sample._cdf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_sample._cdf.__dict__.__setitem__('stypy_function_name', 'rv_sample._cdf')
        rv_sample._cdf.__dict__.__setitem__('stypy_param_names_list', ['x'])
        rv_sample._cdf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_sample._cdf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_sample._cdf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_sample._cdf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_sample._cdf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_sample._cdf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_sample._cdf', ['x'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_cdf', localization, ['x'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_cdf(...)' code ##################

        
        # Assigning a Call to a Tuple (line 3351):
        
        # Assigning a Subscript to a Name (line 3351):
        
        # Obtaining the type of the subscript
        int_617878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3351, 8), 'int')
        
        # Call to broadcast_arrays(...): (line 3351)
        # Processing the call arguments (line 3351)
        
        # Obtaining the type of the subscript
        slice_617881 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3351, 38), None, None, None)
        # Getting the type of 'None' (line 3351)
        None_617882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 43), 'None', False)
        # Getting the type of 'x' (line 3351)
        x_617883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 38), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 3351)
        getitem___617884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3351, 38), x_617883, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3351)
        subscript_call_result_617885 = invoke(stypy.reporting.localization.Localization(__file__, 3351, 38), getitem___617884, (slice_617881, None_617882))
        
        # Getting the type of 'self' (line 3351)
        self_617886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 50), 'self', False)
        # Obtaining the member 'xk' of a type (line 3351)
        xk_617887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3351, 50), self_617886, 'xk')
        # Processing the call keyword arguments (line 3351)
        kwargs_617888 = {}
        # Getting the type of 'np' (line 3351)
        np_617879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 18), 'np', False)
        # Obtaining the member 'broadcast_arrays' of a type (line 3351)
        broadcast_arrays_617880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3351, 18), np_617879, 'broadcast_arrays')
        # Calling broadcast_arrays(args, kwargs) (line 3351)
        broadcast_arrays_call_result_617889 = invoke(stypy.reporting.localization.Localization(__file__, 3351, 18), broadcast_arrays_617880, *[subscript_call_result_617885, xk_617887], **kwargs_617888)
        
        # Obtaining the member '__getitem__' of a type (line 3351)
        getitem___617890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3351, 8), broadcast_arrays_call_result_617889, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3351)
        subscript_call_result_617891 = invoke(stypy.reporting.localization.Localization(__file__, 3351, 8), getitem___617890, int_617878)
        
        # Assigning a type to the variable 'tuple_var_assignment_609405' (line 3351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3351, 8), 'tuple_var_assignment_609405', subscript_call_result_617891)
        
        # Assigning a Subscript to a Name (line 3351):
        
        # Obtaining the type of the subscript
        int_617892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3351, 8), 'int')
        
        # Call to broadcast_arrays(...): (line 3351)
        # Processing the call arguments (line 3351)
        
        # Obtaining the type of the subscript
        slice_617895 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 3351, 38), None, None, None)
        # Getting the type of 'None' (line 3351)
        None_617896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 43), 'None', False)
        # Getting the type of 'x' (line 3351)
        x_617897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 38), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 3351)
        getitem___617898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3351, 38), x_617897, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3351)
        subscript_call_result_617899 = invoke(stypy.reporting.localization.Localization(__file__, 3351, 38), getitem___617898, (slice_617895, None_617896))
        
        # Getting the type of 'self' (line 3351)
        self_617900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 50), 'self', False)
        # Obtaining the member 'xk' of a type (line 3351)
        xk_617901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3351, 50), self_617900, 'xk')
        # Processing the call keyword arguments (line 3351)
        kwargs_617902 = {}
        # Getting the type of 'np' (line 3351)
        np_617893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 18), 'np', False)
        # Obtaining the member 'broadcast_arrays' of a type (line 3351)
        broadcast_arrays_617894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3351, 18), np_617893, 'broadcast_arrays')
        # Calling broadcast_arrays(args, kwargs) (line 3351)
        broadcast_arrays_call_result_617903 = invoke(stypy.reporting.localization.Localization(__file__, 3351, 18), broadcast_arrays_617894, *[subscript_call_result_617899, xk_617901], **kwargs_617902)
        
        # Obtaining the member '__getitem__' of a type (line 3351)
        getitem___617904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3351, 8), broadcast_arrays_call_result_617903, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3351)
        subscript_call_result_617905 = invoke(stypy.reporting.localization.Localization(__file__, 3351, 8), getitem___617904, int_617892)
        
        # Assigning a type to the variable 'tuple_var_assignment_609406' (line 3351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3351, 8), 'tuple_var_assignment_609406', subscript_call_result_617905)
        
        # Assigning a Name to a Name (line 3351):
        # Getting the type of 'tuple_var_assignment_609405' (line 3351)
        tuple_var_assignment_609405_617906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 8), 'tuple_var_assignment_609405')
        # Assigning a type to the variable 'xx' (line 3351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3351, 8), 'xx', tuple_var_assignment_609405_617906)
        
        # Assigning a Name to a Name (line 3351):
        # Getting the type of 'tuple_var_assignment_609406' (line 3351)
        tuple_var_assignment_609406_617907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3351, 8), 'tuple_var_assignment_609406')
        # Assigning a type to the variable 'xxk' (line 3351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3351, 12), 'xxk', tuple_var_assignment_609406_617907)
        
        # Assigning a BinOp to a Name (line 3352):
        
        # Assigning a BinOp to a Name (line 3352):
        
        # Call to argmax(...): (line 3352)
        # Processing the call arguments (line 3352)
        
        # Getting the type of 'xxk' (line 3352)
        xxk_617910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3352, 25), 'xxk', False)
        # Getting the type of 'xx' (line 3352)
        xx_617911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3352, 31), 'xx', False)
        # Applying the binary operator '>' (line 3352)
        result_gt_617912 = python_operator(stypy.reporting.localization.Localization(__file__, 3352, 25), '>', xxk_617910, xx_617911)
        
        # Processing the call keyword arguments (line 3352)
        int_617913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3352, 40), 'int')
        keyword_617914 = int_617913
        kwargs_617915 = {'axis': keyword_617914}
        # Getting the type of 'np' (line 3352)
        np_617908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3352, 15), 'np', False)
        # Obtaining the member 'argmax' of a type (line 3352)
        argmax_617909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3352, 15), np_617908, 'argmax')
        # Calling argmax(args, kwargs) (line 3352)
        argmax_call_result_617916 = invoke(stypy.reporting.localization.Localization(__file__, 3352, 15), argmax_617909, *[result_gt_617912], **kwargs_617915)
        
        int_617917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3352, 46), 'int')
        # Applying the binary operator '-' (line 3352)
        result_sub_617918 = python_operator(stypy.reporting.localization.Localization(__file__, 3352, 15), '-', argmax_call_result_617916, int_617917)
        
        # Assigning a type to the variable 'indx' (line 3352)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3352, 8), 'indx', result_sub_617918)
        
        # Obtaining the type of the subscript
        # Getting the type of 'indx' (line 3353)
        indx_617919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3353, 26), 'indx')
        # Getting the type of 'self' (line 3353)
        self_617920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3353, 15), 'self')
        # Obtaining the member 'qvals' of a type (line 3353)
        qvals_617921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3353, 15), self_617920, 'qvals')
        # Obtaining the member '__getitem__' of a type (line 3353)
        getitem___617922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3353, 15), qvals_617921, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3353)
        subscript_call_result_617923 = invoke(stypy.reporting.localization.Localization(__file__, 3353, 15), getitem___617922, indx_617919)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3353, 8), 'stypy_return_type', subscript_call_result_617923)
        
        # ################# End of '_cdf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_cdf' in the type store
        # Getting the type of 'stypy_return_type' (line 3350)
        stypy_return_type_617924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3350, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_617924)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_cdf'
        return stypy_return_type_617924


    @norecursion
    def _ppf(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_ppf'
        module_type_store = module_type_store.open_function_context('_ppf', 3355, 4, False)
        # Assigning a type to the variable 'self' (line 3356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3356, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_sample._ppf.__dict__.__setitem__('stypy_localization', localization)
        rv_sample._ppf.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_sample._ppf.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_sample._ppf.__dict__.__setitem__('stypy_function_name', 'rv_sample._ppf')
        rv_sample._ppf.__dict__.__setitem__('stypy_param_names_list', ['q'])
        rv_sample._ppf.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_sample._ppf.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_sample._ppf.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_sample._ppf.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_sample._ppf.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_sample._ppf.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_sample._ppf', ['q'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_ppf', localization, ['q'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_ppf(...)' code ##################

        
        # Assigning a Call to a Tuple (line 3356):
        
        # Assigning a Subscript to a Name (line 3356):
        
        # Obtaining the type of the subscript
        int_617925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3356, 8), 'int')
        
        # Call to broadcast_arrays(...): (line 3356)
        # Processing the call arguments (line 3356)
        
        # Obtaining the type of the subscript
        Ellipsis_617928 = Ellipsis
        # Getting the type of 'None' (line 3356)
        None_617929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 45), 'None', False)
        # Getting the type of 'q' (line 3356)
        q_617930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 38), 'q', False)
        # Obtaining the member '__getitem__' of a type (line 3356)
        getitem___617931 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3356, 38), q_617930, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3356)
        subscript_call_result_617932 = invoke(stypy.reporting.localization.Localization(__file__, 3356, 38), getitem___617931, (Ellipsis_617928, None_617929))
        
        # Getting the type of 'self' (line 3356)
        self_617933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 52), 'self', False)
        # Obtaining the member 'qvals' of a type (line 3356)
        qvals_617934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3356, 52), self_617933, 'qvals')
        # Processing the call keyword arguments (line 3356)
        kwargs_617935 = {}
        # Getting the type of 'np' (line 3356)
        np_617926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 18), 'np', False)
        # Obtaining the member 'broadcast_arrays' of a type (line 3356)
        broadcast_arrays_617927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3356, 18), np_617926, 'broadcast_arrays')
        # Calling broadcast_arrays(args, kwargs) (line 3356)
        broadcast_arrays_call_result_617936 = invoke(stypy.reporting.localization.Localization(__file__, 3356, 18), broadcast_arrays_617927, *[subscript_call_result_617932, qvals_617934], **kwargs_617935)
        
        # Obtaining the member '__getitem__' of a type (line 3356)
        getitem___617937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3356, 8), broadcast_arrays_call_result_617936, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3356)
        subscript_call_result_617938 = invoke(stypy.reporting.localization.Localization(__file__, 3356, 8), getitem___617937, int_617925)
        
        # Assigning a type to the variable 'tuple_var_assignment_609407' (line 3356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3356, 8), 'tuple_var_assignment_609407', subscript_call_result_617938)
        
        # Assigning a Subscript to a Name (line 3356):
        
        # Obtaining the type of the subscript
        int_617939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3356, 8), 'int')
        
        # Call to broadcast_arrays(...): (line 3356)
        # Processing the call arguments (line 3356)
        
        # Obtaining the type of the subscript
        Ellipsis_617942 = Ellipsis
        # Getting the type of 'None' (line 3356)
        None_617943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 45), 'None', False)
        # Getting the type of 'q' (line 3356)
        q_617944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 38), 'q', False)
        # Obtaining the member '__getitem__' of a type (line 3356)
        getitem___617945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3356, 38), q_617944, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3356)
        subscript_call_result_617946 = invoke(stypy.reporting.localization.Localization(__file__, 3356, 38), getitem___617945, (Ellipsis_617942, None_617943))
        
        # Getting the type of 'self' (line 3356)
        self_617947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 52), 'self', False)
        # Obtaining the member 'qvals' of a type (line 3356)
        qvals_617948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3356, 52), self_617947, 'qvals')
        # Processing the call keyword arguments (line 3356)
        kwargs_617949 = {}
        # Getting the type of 'np' (line 3356)
        np_617940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 18), 'np', False)
        # Obtaining the member 'broadcast_arrays' of a type (line 3356)
        broadcast_arrays_617941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3356, 18), np_617940, 'broadcast_arrays')
        # Calling broadcast_arrays(args, kwargs) (line 3356)
        broadcast_arrays_call_result_617950 = invoke(stypy.reporting.localization.Localization(__file__, 3356, 18), broadcast_arrays_617941, *[subscript_call_result_617946, qvals_617948], **kwargs_617949)
        
        # Obtaining the member '__getitem__' of a type (line 3356)
        getitem___617951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3356, 8), broadcast_arrays_call_result_617950, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3356)
        subscript_call_result_617952 = invoke(stypy.reporting.localization.Localization(__file__, 3356, 8), getitem___617951, int_617939)
        
        # Assigning a type to the variable 'tuple_var_assignment_609408' (line 3356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3356, 8), 'tuple_var_assignment_609408', subscript_call_result_617952)
        
        # Assigning a Name to a Name (line 3356):
        # Getting the type of 'tuple_var_assignment_609407' (line 3356)
        tuple_var_assignment_609407_617953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 8), 'tuple_var_assignment_609407')
        # Assigning a type to the variable 'qq' (line 3356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3356, 8), 'qq', tuple_var_assignment_609407_617953)
        
        # Assigning a Name to a Name (line 3356):
        # Getting the type of 'tuple_var_assignment_609408' (line 3356)
        tuple_var_assignment_609408_617954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3356, 8), 'tuple_var_assignment_609408')
        # Assigning a type to the variable 'sqq' (line 3356)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3356, 12), 'sqq', tuple_var_assignment_609408_617954)
        
        # Assigning a Call to a Name (line 3357):
        
        # Assigning a Call to a Name (line 3357):
        
        # Call to argmax(...): (line 3357)
        # Processing the call arguments (line 3357)
        
        # Getting the type of 'sqq' (line 3357)
        sqq_617956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 22), 'sqq', False)
        # Getting the type of 'qq' (line 3357)
        qq_617957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 29), 'qq', False)
        # Applying the binary operator '>=' (line 3357)
        result_ge_617958 = python_operator(stypy.reporting.localization.Localization(__file__, 3357, 22), '>=', sqq_617956, qq_617957)
        
        # Processing the call keyword arguments (line 3357)
        int_617959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3357, 38), 'int')
        keyword_617960 = int_617959
        kwargs_617961 = {'axis': keyword_617960}
        # Getting the type of 'argmax' (line 3357)
        argmax_617955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3357, 15), 'argmax', False)
        # Calling argmax(args, kwargs) (line 3357)
        argmax_call_result_617962 = invoke(stypy.reporting.localization.Localization(__file__, 3357, 15), argmax_617955, *[result_ge_617958], **kwargs_617961)
        
        # Assigning a type to the variable 'indx' (line 3357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3357, 8), 'indx', argmax_call_result_617962)
        
        # Obtaining the type of the subscript
        # Getting the type of 'indx' (line 3358)
        indx_617963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3358, 23), 'indx')
        # Getting the type of 'self' (line 3358)
        self_617964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3358, 15), 'self')
        # Obtaining the member 'xk' of a type (line 3358)
        xk_617965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3358, 15), self_617964, 'xk')
        # Obtaining the member '__getitem__' of a type (line 3358)
        getitem___617966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3358, 15), xk_617965, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3358)
        subscript_call_result_617967 = invoke(stypy.reporting.localization.Localization(__file__, 3358, 15), getitem___617966, indx_617963)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3358, 8), 'stypy_return_type', subscript_call_result_617967)
        
        # ################# End of '_ppf(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_ppf' in the type store
        # Getting the type of 'stypy_return_type' (line 3355)
        stypy_return_type_617968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3355, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_617968)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_ppf'
        return stypy_return_type_617968


    @norecursion
    def _rvs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_rvs'
        module_type_store = module_type_store.open_function_context('_rvs', 3360, 4, False)
        # Assigning a type to the variable 'self' (line 3361)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3361, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_sample._rvs.__dict__.__setitem__('stypy_localization', localization)
        rv_sample._rvs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_sample._rvs.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_sample._rvs.__dict__.__setitem__('stypy_function_name', 'rv_sample._rvs')
        rv_sample._rvs.__dict__.__setitem__('stypy_param_names_list', [])
        rv_sample._rvs.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_sample._rvs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_sample._rvs.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_sample._rvs.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_sample._rvs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_sample._rvs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_sample._rvs', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_rvs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_rvs(...)' code ##################

        
        # Assigning a Call to a Name (line 3363):
        
        # Assigning a Call to a Name (line 3363):
        
        # Call to random_sample(...): (line 3363)
        # Processing the call arguments (line 3363)
        # Getting the type of 'self' (line 3363)
        self_617972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3363, 45), 'self', False)
        # Obtaining the member '_size' of a type (line 3363)
        _size_617973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3363, 45), self_617972, '_size')
        # Processing the call keyword arguments (line 3363)
        kwargs_617974 = {}
        # Getting the type of 'self' (line 3363)
        self_617969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3363, 12), 'self', False)
        # Obtaining the member '_random_state' of a type (line 3363)
        _random_state_617970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3363, 12), self_617969, '_random_state')
        # Obtaining the member 'random_sample' of a type (line 3363)
        random_sample_617971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3363, 12), _random_state_617970, 'random_sample')
        # Calling random_sample(args, kwargs) (line 3363)
        random_sample_call_result_617975 = invoke(stypy.reporting.localization.Localization(__file__, 3363, 12), random_sample_617971, *[_size_617973], **kwargs_617974)
        
        # Assigning a type to the variable 'U' (line 3363)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3363, 8), 'U', random_sample_call_result_617975)
        
        # Type idiom detected: calculating its left and rigth part (line 3364)
        # Getting the type of 'self' (line 3364)
        self_617976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3364, 11), 'self')
        # Obtaining the member '_size' of a type (line 3364)
        _size_617977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3364, 11), self_617976, '_size')
        # Getting the type of 'None' (line 3364)
        None_617978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3364, 25), 'None')
        
        (may_be_617979, more_types_in_union_617980) = may_be_none(_size_617977, None_617978)

        if may_be_617979:

            if more_types_in_union_617980:
                # Runtime conditional SSA (line 3364)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 3365):
            
            # Assigning a Call to a Name (line 3365):
            
            # Call to array(...): (line 3365)
            # Processing the call arguments (line 3365)
            # Getting the type of 'U' (line 3365)
            U_617983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3365, 25), 'U', False)
            # Processing the call keyword arguments (line 3365)
            int_617984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3365, 34), 'int')
            keyword_617985 = int_617984
            kwargs_617986 = {'ndmin': keyword_617985}
            # Getting the type of 'np' (line 3365)
            np_617981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3365, 16), 'np', False)
            # Obtaining the member 'array' of a type (line 3365)
            array_617982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3365, 16), np_617981, 'array')
            # Calling array(args, kwargs) (line 3365)
            array_call_result_617987 = invoke(stypy.reporting.localization.Localization(__file__, 3365, 16), array_617982, *[U_617983], **kwargs_617986)
            
            # Assigning a type to the variable 'U' (line 3365)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3365, 12), 'U', array_call_result_617987)
            
            # Assigning a Subscript to a Name (line 3366):
            
            # Assigning a Subscript to a Name (line 3366):
            
            # Obtaining the type of the subscript
            int_617988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3366, 29), 'int')
            
            # Call to _ppf(...): (line 3366)
            # Processing the call arguments (line 3366)
            # Getting the type of 'U' (line 3366)
            U_617991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3366, 26), 'U', False)
            # Processing the call keyword arguments (line 3366)
            kwargs_617992 = {}
            # Getting the type of 'self' (line 3366)
            self_617989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3366, 16), 'self', False)
            # Obtaining the member '_ppf' of a type (line 3366)
            _ppf_617990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3366, 16), self_617989, '_ppf')
            # Calling _ppf(args, kwargs) (line 3366)
            _ppf_call_result_617993 = invoke(stypy.reporting.localization.Localization(__file__, 3366, 16), _ppf_617990, *[U_617991], **kwargs_617992)
            
            # Obtaining the member '__getitem__' of a type (line 3366)
            getitem___617994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3366, 16), _ppf_call_result_617993, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 3366)
            subscript_call_result_617995 = invoke(stypy.reporting.localization.Localization(__file__, 3366, 16), getitem___617994, int_617988)
            
            # Assigning a type to the variable 'Y' (line 3366)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3366, 12), 'Y', subscript_call_result_617995)

            if more_types_in_union_617980:
                # Runtime conditional SSA for else branch (line 3364)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_617979) or more_types_in_union_617980):
            
            # Assigning a Call to a Name (line 3368):
            
            # Assigning a Call to a Name (line 3368):
            
            # Call to _ppf(...): (line 3368)
            # Processing the call arguments (line 3368)
            # Getting the type of 'U' (line 3368)
            U_617998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3368, 26), 'U', False)
            # Processing the call keyword arguments (line 3368)
            kwargs_617999 = {}
            # Getting the type of 'self' (line 3368)
            self_617996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3368, 16), 'self', False)
            # Obtaining the member '_ppf' of a type (line 3368)
            _ppf_617997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3368, 16), self_617996, '_ppf')
            # Calling _ppf(args, kwargs) (line 3368)
            _ppf_call_result_618000 = invoke(stypy.reporting.localization.Localization(__file__, 3368, 16), _ppf_617997, *[U_617998], **kwargs_617999)
            
            # Assigning a type to the variable 'Y' (line 3368)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3368, 12), 'Y', _ppf_call_result_618000)

            if (may_be_617979 and more_types_in_union_617980):
                # SSA join for if statement (line 3364)
                module_type_store = module_type_store.join_ssa_context()


        
        # Getting the type of 'Y' (line 3369)
        Y_618001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3369, 15), 'Y')
        # Assigning a type to the variable 'stypy_return_type' (line 3369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3369, 8), 'stypy_return_type', Y_618001)
        
        # ################# End of '_rvs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_rvs' in the type store
        # Getting the type of 'stypy_return_type' (line 3360)
        stypy_return_type_618002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3360, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_618002)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_rvs'
        return stypy_return_type_618002


    @norecursion
    def _entropy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '_entropy'
        module_type_store = module_type_store.open_function_context('_entropy', 3371, 4, False)
        # Assigning a type to the variable 'self' (line 3372)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3372, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_sample._entropy.__dict__.__setitem__('stypy_localization', localization)
        rv_sample._entropy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_sample._entropy.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_sample._entropy.__dict__.__setitem__('stypy_function_name', 'rv_sample._entropy')
        rv_sample._entropy.__dict__.__setitem__('stypy_param_names_list', [])
        rv_sample._entropy.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_sample._entropy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_sample._entropy.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_sample._entropy.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_sample._entropy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_sample._entropy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_sample._entropy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '_entropy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '_entropy(...)' code ##################

        
        # Call to entropy(...): (line 3372)
        # Processing the call arguments (line 3372)
        # Getting the type of 'self' (line 3372)
        self_618004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3372, 23), 'self', False)
        # Obtaining the member 'pk' of a type (line 3372)
        pk_618005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3372, 23), self_618004, 'pk')
        # Processing the call keyword arguments (line 3372)
        kwargs_618006 = {}
        # Getting the type of 'entropy' (line 3372)
        entropy_618003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3372, 15), 'entropy', False)
        # Calling entropy(args, kwargs) (line 3372)
        entropy_call_result_618007 = invoke(stypy.reporting.localization.Localization(__file__, 3372, 15), entropy_618003, *[pk_618005], **kwargs_618006)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3372)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3372, 8), 'stypy_return_type', entropy_call_result_618007)
        
        # ################# End of '_entropy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '_entropy' in the type store
        # Getting the type of 'stypy_return_type' (line 3371)
        stypy_return_type_618008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3371, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_618008)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '_entropy'
        return stypy_return_type_618008


    @norecursion
    def generic_moment(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'generic_moment'
        module_type_store = module_type_store.open_function_context('generic_moment', 3374, 4, False)
        # Assigning a type to the variable 'self' (line 3375)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3375, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        rv_sample.generic_moment.__dict__.__setitem__('stypy_localization', localization)
        rv_sample.generic_moment.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        rv_sample.generic_moment.__dict__.__setitem__('stypy_type_store', module_type_store)
        rv_sample.generic_moment.__dict__.__setitem__('stypy_function_name', 'rv_sample.generic_moment')
        rv_sample.generic_moment.__dict__.__setitem__('stypy_param_names_list', ['n'])
        rv_sample.generic_moment.__dict__.__setitem__('stypy_varargs_param_name', None)
        rv_sample.generic_moment.__dict__.__setitem__('stypy_kwargs_param_name', None)
        rv_sample.generic_moment.__dict__.__setitem__('stypy_call_defaults', defaults)
        rv_sample.generic_moment.__dict__.__setitem__('stypy_call_varargs', varargs)
        rv_sample.generic_moment.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        rv_sample.generic_moment.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'rv_sample.generic_moment', ['n'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'generic_moment', localization, ['n'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'generic_moment(...)' code ##################

        
        # Assigning a Call to a Name (line 3375):
        
        # Assigning a Call to a Name (line 3375):
        
        # Call to asarray(...): (line 3375)
        # Processing the call arguments (line 3375)
        # Getting the type of 'n' (line 3375)
        n_618010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3375, 20), 'n', False)
        # Processing the call keyword arguments (line 3375)
        kwargs_618011 = {}
        # Getting the type of 'asarray' (line 3375)
        asarray_618009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3375, 12), 'asarray', False)
        # Calling asarray(args, kwargs) (line 3375)
        asarray_call_result_618012 = invoke(stypy.reporting.localization.Localization(__file__, 3375, 12), asarray_618009, *[n_618010], **kwargs_618011)
        
        # Assigning a type to the variable 'n' (line 3375)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3375, 8), 'n', asarray_call_result_618012)
        
        # Call to sum(...): (line 3376)
        # Processing the call arguments (line 3376)
        # Getting the type of 'self' (line 3376)
        self_618015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3376, 22), 'self', False)
        # Obtaining the member 'xk' of a type (line 3376)
        xk_618016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3376, 22), self_618015, 'xk')
        
        # Obtaining the type of the subscript
        # Getting the type of 'np' (line 3376)
        np_618017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3376, 33), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 3376)
        newaxis_618018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3376, 33), np_618017, 'newaxis')
        Ellipsis_618019 = Ellipsis
        # Getting the type of 'n' (line 3376)
        n_618020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3376, 31), 'n', False)
        # Obtaining the member '__getitem__' of a type (line 3376)
        getitem___618021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3376, 31), n_618020, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 3376)
        subscript_call_result_618022 = invoke(stypy.reporting.localization.Localization(__file__, 3376, 31), getitem___618021, (newaxis_618018, Ellipsis_618019))
        
        # Applying the binary operator '**' (line 3376)
        result_pow_618023 = python_operator(stypy.reporting.localization.Localization(__file__, 3376, 22), '**', xk_618016, subscript_call_result_618022)
        
        # Getting the type of 'self' (line 3376)
        self_618024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3376, 52), 'self', False)
        # Obtaining the member 'pk' of a type (line 3376)
        pk_618025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3376, 52), self_618024, 'pk')
        # Applying the binary operator '*' (line 3376)
        result_mul_618026 = python_operator(stypy.reporting.localization.Localization(__file__, 3376, 22), '*', result_pow_618023, pk_618025)
        
        # Processing the call keyword arguments (line 3376)
        int_618027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3376, 66), 'int')
        keyword_618028 = int_618027
        kwargs_618029 = {'axis': keyword_618028}
        # Getting the type of 'np' (line 3376)
        np_618013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3376, 15), 'np', False)
        # Obtaining the member 'sum' of a type (line 3376)
        sum_618014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3376, 15), np_618013, 'sum')
        # Calling sum(args, kwargs) (line 3376)
        sum_call_result_618030 = invoke(stypy.reporting.localization.Localization(__file__, 3376, 15), sum_618014, *[result_mul_618026], **kwargs_618029)
        
        # Assigning a type to the variable 'stypy_return_type' (line 3376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3376, 8), 'stypy_return_type', sum_call_result_618030)
        
        # ################# End of 'generic_moment(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'generic_moment' in the type store
        # Getting the type of 'stypy_return_type' (line 3374)
        stypy_return_type_618031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3374, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_618031)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'generic_moment'
        return stypy_return_type_618031


# Assigning a type to the variable 'rv_sample' (line 3296)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3296, 0), 'rv_sample', rv_sample)

@norecursion
def get_distribution_names(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'get_distribution_names'
    module_type_store = module_type_store.open_function_context('get_distribution_names', 3379, 0, False)
    
    # Passed parameters checking function
    get_distribution_names.stypy_localization = localization
    get_distribution_names.stypy_type_of_self = None
    get_distribution_names.stypy_type_store = module_type_store
    get_distribution_names.stypy_function_name = 'get_distribution_names'
    get_distribution_names.stypy_param_names_list = ['namespace_pairs', 'rv_base_class']
    get_distribution_names.stypy_varargs_param_name = None
    get_distribution_names.stypy_kwargs_param_name = None
    get_distribution_names.stypy_call_defaults = defaults
    get_distribution_names.stypy_call_varargs = varargs
    get_distribution_names.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'get_distribution_names', ['namespace_pairs', 'rv_base_class'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'get_distribution_names', localization, ['namespace_pairs', 'rv_base_class'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'get_distribution_names(...)' code ##################

    str_618032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3399, (-1)), 'str', '\n    Collect names of statistical distributions and their generators.\n\n    Parameters\n    ----------\n    namespace_pairs : sequence\n        A snapshot of (name, value) pairs in the namespace of a module.\n    rv_base_class : class\n        The base class of random variable generator classes in a module.\n\n    Returns\n    -------\n    distn_names : list of strings\n        Names of the statistical distributions.\n    distn_gen_names : list of strings\n        Names of the generators of the statistical distributions.\n        Note that these are not simply the names of the statistical\n        distributions, with a _gen suffix added.\n\n    ')
    
    # Assigning a List to a Name (line 3400):
    
    # Assigning a List to a Name (line 3400):
    
    # Obtaining an instance of the builtin type 'list' (line 3400)
    list_618033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3400, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3400)
    
    # Assigning a type to the variable 'distn_names' (line 3400)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3400, 4), 'distn_names', list_618033)
    
    # Assigning a List to a Name (line 3401):
    
    # Assigning a List to a Name (line 3401):
    
    # Obtaining an instance of the builtin type 'list' (line 3401)
    list_618034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3401, 22), 'list')
    # Adding type elements to the builtin type 'list' instance (line 3401)
    
    # Assigning a type to the variable 'distn_gen_names' (line 3401)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3401, 4), 'distn_gen_names', list_618034)
    
    # Getting the type of 'namespace_pairs' (line 3402)
    namespace_pairs_618035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3402, 23), 'namespace_pairs')
    # Testing the type of a for loop iterable (line 3402)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 3402, 4), namespace_pairs_618035)
    # Getting the type of the for loop variable (line 3402)
    for_loop_var_618036 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 3402, 4), namespace_pairs_618035)
    # Assigning a type to the variable 'name' (line 3402)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3402, 4), 'name', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3402, 4), for_loop_var_618036))
    # Assigning a type to the variable 'value' (line 3402)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3402, 4), 'value', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3402, 4), for_loop_var_618036))
    # SSA begins for a for statement (line 3402)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    
    # Call to startswith(...): (line 3403)
    # Processing the call arguments (line 3403)
    str_618039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3403, 27), 'str', '_')
    # Processing the call keyword arguments (line 3403)
    kwargs_618040 = {}
    # Getting the type of 'name' (line 3403)
    name_618037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3403, 11), 'name', False)
    # Obtaining the member 'startswith' of a type (line 3403)
    startswith_618038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3403, 11), name_618037, 'startswith')
    # Calling startswith(args, kwargs) (line 3403)
    startswith_call_result_618041 = invoke(stypy.reporting.localization.Localization(__file__, 3403, 11), startswith_618038, *[str_618039], **kwargs_618040)
    
    # Testing the type of an if condition (line 3403)
    if_condition_618042 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3403, 8), startswith_call_result_618041)
    # Assigning a type to the variable 'if_condition_618042' (line 3403)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3403, 8), 'if_condition_618042', if_condition_618042)
    # SSA begins for if statement (line 3403)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    # SSA join for if statement (line 3403)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Evaluating a boolean operation
    
    # Call to endswith(...): (line 3405)
    # Processing the call arguments (line 3405)
    str_618045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3405, 25), 'str', '_gen')
    # Processing the call keyword arguments (line 3405)
    kwargs_618046 = {}
    # Getting the type of 'name' (line 3405)
    name_618043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3405, 11), 'name', False)
    # Obtaining the member 'endswith' of a type (line 3405)
    endswith_618044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3405, 11), name_618043, 'endswith')
    # Calling endswith(args, kwargs) (line 3405)
    endswith_call_result_618047 = invoke(stypy.reporting.localization.Localization(__file__, 3405, 11), endswith_618044, *[str_618045], **kwargs_618046)
    
    
    # Call to issubclass(...): (line 3405)
    # Processing the call arguments (line 3405)
    # Getting the type of 'value' (line 3405)
    value_618049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3405, 48), 'value', False)
    # Getting the type of 'rv_base_class' (line 3405)
    rv_base_class_618050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3405, 55), 'rv_base_class', False)
    # Processing the call keyword arguments (line 3405)
    kwargs_618051 = {}
    # Getting the type of 'issubclass' (line 3405)
    issubclass_618048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3405, 37), 'issubclass', False)
    # Calling issubclass(args, kwargs) (line 3405)
    issubclass_call_result_618052 = invoke(stypy.reporting.localization.Localization(__file__, 3405, 37), issubclass_618048, *[value_618049, rv_base_class_618050], **kwargs_618051)
    
    # Applying the binary operator 'and' (line 3405)
    result_and_keyword_618053 = python_operator(stypy.reporting.localization.Localization(__file__, 3405, 11), 'and', endswith_call_result_618047, issubclass_call_result_618052)
    
    # Testing the type of an if condition (line 3405)
    if_condition_618054 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3405, 8), result_and_keyword_618053)
    # Assigning a type to the variable 'if_condition_618054' (line 3405)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3405, 8), 'if_condition_618054', if_condition_618054)
    # SSA begins for if statement (line 3405)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 3406)
    # Processing the call arguments (line 3406)
    # Getting the type of 'name' (line 3406)
    name_618057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3406, 35), 'name', False)
    # Processing the call keyword arguments (line 3406)
    kwargs_618058 = {}
    # Getting the type of 'distn_gen_names' (line 3406)
    distn_gen_names_618055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3406, 12), 'distn_gen_names', False)
    # Obtaining the member 'append' of a type (line 3406)
    append_618056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3406, 12), distn_gen_names_618055, 'append')
    # Calling append(args, kwargs) (line 3406)
    append_call_result_618059 = invoke(stypy.reporting.localization.Localization(__file__, 3406, 12), append_618056, *[name_618057], **kwargs_618058)
    
    # SSA join for if statement (line 3405)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Call to isinstance(...): (line 3407)
    # Processing the call arguments (line 3407)
    # Getting the type of 'value' (line 3407)
    value_618061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3407, 22), 'value', False)
    # Getting the type of 'rv_base_class' (line 3407)
    rv_base_class_618062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3407, 29), 'rv_base_class', False)
    # Processing the call keyword arguments (line 3407)
    kwargs_618063 = {}
    # Getting the type of 'isinstance' (line 3407)
    isinstance_618060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3407, 11), 'isinstance', False)
    # Calling isinstance(args, kwargs) (line 3407)
    isinstance_call_result_618064 = invoke(stypy.reporting.localization.Localization(__file__, 3407, 11), isinstance_618060, *[value_618061, rv_base_class_618062], **kwargs_618063)
    
    # Testing the type of an if condition (line 3407)
    if_condition_618065 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 3407, 8), isinstance_call_result_618064)
    # Assigning a type to the variable 'if_condition_618065' (line 3407)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3407, 8), 'if_condition_618065', if_condition_618065)
    # SSA begins for if statement (line 3407)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Call to append(...): (line 3408)
    # Processing the call arguments (line 3408)
    # Getting the type of 'name' (line 3408)
    name_618068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3408, 31), 'name', False)
    # Processing the call keyword arguments (line 3408)
    kwargs_618069 = {}
    # Getting the type of 'distn_names' (line 3408)
    distn_names_618066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3408, 12), 'distn_names', False)
    # Obtaining the member 'append' of a type (line 3408)
    append_618067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 3408, 12), distn_names_618066, 'append')
    # Calling append(args, kwargs) (line 3408)
    append_call_result_618070 = invoke(stypy.reporting.localization.Localization(__file__, 3408, 12), append_618067, *[name_618068], **kwargs_618069)
    
    # SSA join for if statement (line 3407)
    module_type_store = module_type_store.join_ssa_context()
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 3409)
    tuple_618071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 3409, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 3409)
    # Adding element type (line 3409)
    # Getting the type of 'distn_names' (line 3409)
    distn_names_618072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3409, 11), 'distn_names')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3409, 11), tuple_618071, distn_names_618072)
    # Adding element type (line 3409)
    # Getting the type of 'distn_gen_names' (line 3409)
    distn_gen_names_618073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3409, 24), 'distn_gen_names')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 3409, 11), tuple_618071, distn_gen_names_618073)
    
    # Assigning a type to the variable 'stypy_return_type' (line 3409)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3409, 4), 'stypy_return_type', tuple_618071)
    
    # ################# End of 'get_distribution_names(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'get_distribution_names' in the type store
    # Getting the type of 'stypy_return_type' (line 3379)
    stypy_return_type_618074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 3379, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_618074)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'get_distribution_names'
    return stypy_return_type_618074

# Assigning a type to the variable 'get_distribution_names' (line 3379)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3379, 0), 'get_distribution_names', get_distribution_names)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
