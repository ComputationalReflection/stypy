
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: #
2: # Created by: Pearu Peterson, April 2002
3: #
4: from __future__ import division, print_function, absolute_import
5: 
6: 
7: __usage__ = '''
8: Build linalg:
9:   python setup.py build
10: Run tests if scipy is installed:
11:   python -c 'import scipy;scipy.linalg.test()'
12: '''
13: 
14: import math
15: 
16: import numpy as np
17: from numpy.testing import (assert_equal, assert_almost_equal, assert_,
18:                            assert_array_almost_equal, assert_allclose)
19: from pytest import raises as assert_raises
20: 
21: from numpy import float32, float64, complex64, complex128, arange, triu, \
22:                   tril, zeros, tril_indices, ones, mod, diag, append, eye, \
23:                   nonzero
24: 
25: from numpy.random import rand, seed
26: from scipy.linalg import _fblas as fblas, get_blas_funcs, toeplitz, solve, \
27:                                           solve_triangular
28: 
29: try:
30:     from scipy.linalg import _cblas as cblas
31: except ImportError:
32:     cblas = None
33: 
34: REAL_DTYPES = [float32, float64]
35: COMPLEX_DTYPES = [complex64, complex128]
36: DTYPES = REAL_DTYPES + COMPLEX_DTYPES
37: 
38: 
39: def test_get_blas_funcs():
40:     # check that it returns Fortran code for arrays that are
41:     # fortran-ordered
42:     f1, f2, f3 = get_blas_funcs(
43:         ('axpy', 'axpy', 'axpy'),
44:         (np.empty((2, 2), dtype=np.complex64, order='F'),
45:          np.empty((2, 2), dtype=np.complex128, order='C'))
46:         )
47: 
48:     # get_blas_funcs will choose libraries depending on most generic
49:     # array
50:     assert_equal(f1.typecode, 'z')
51:     assert_equal(f2.typecode, 'z')
52:     if cblas is not None:
53:         assert_equal(f1.module_name, 'cblas')
54:         assert_equal(f2.module_name, 'cblas')
55: 
56:     # check defaults.
57:     f1 = get_blas_funcs('rotg')
58:     assert_equal(f1.typecode, 'd')
59: 
60:     # check also dtype interface
61:     f1 = get_blas_funcs('gemm', dtype=np.complex64)
62:     assert_equal(f1.typecode, 'c')
63:     f1 = get_blas_funcs('gemm', dtype='F')
64:     assert_equal(f1.typecode, 'c')
65: 
66:     # extended precision complex
67:     f1 = get_blas_funcs('gemm', dtype=np.longcomplex)
68:     assert_equal(f1.typecode, 'z')
69: 
70:     # check safe complex upcasting
71:     f1 = get_blas_funcs('axpy',
72:                         (np.empty((2, 2), dtype=np.float64),
73:                          np.empty((2, 2), dtype=np.complex64))
74:                         )
75:     assert_equal(f1.typecode, 'z')
76: 
77: 
78: def test_get_blas_funcs_alias():
79:     # check alias for get_blas_funcs
80:     f, g = get_blas_funcs(('nrm2', 'dot'), dtype=np.complex64)
81:     assert f.typecode == 'c'
82:     assert g.typecode == 'c'
83: 
84:     f, g, h = get_blas_funcs(('dot', 'dotc', 'dotu'), dtype=np.float64)
85:     assert f is g
86:     assert f is h
87: 
88: 
89: class TestCBLAS1Simple(object):
90: 
91:     def test_axpy(self):
92:         for p in 'sd':
93:             f = getattr(cblas, p+'axpy', None)
94:             if f is None:
95:                 continue
96:             assert_array_almost_equal(f([1, 2, 3], [2, -1, 3], a=5),
97:                                       [7, 9, 18])
98:         for p in 'cz':
99:             f = getattr(cblas, p+'axpy', None)
100:             if f is None:
101:                 continue
102:             assert_array_almost_equal(f([1, 2j, 3], [2, -1, 3], a=5),
103:                                       [7, 10j-1, 18])
104: 
105: 
106: class TestFBLAS1Simple(object):
107: 
108:     def test_axpy(self):
109:         for p in 'sd':
110:             f = getattr(fblas, p+'axpy', None)
111:             if f is None:
112:                 continue
113:             assert_array_almost_equal(f([1, 2, 3], [2, -1, 3], a=5),
114:                                       [7, 9, 18])
115:         for p in 'cz':
116:             f = getattr(fblas, p+'axpy', None)
117:             if f is None:
118:                 continue
119:             assert_array_almost_equal(f([1, 2j, 3], [2, -1, 3], a=5),
120:                                       [7, 10j-1, 18])
121: 
122:     def test_copy(self):
123:         for p in 'sd':
124:             f = getattr(fblas, p+'copy', None)
125:             if f is None:
126:                 continue
127:             assert_array_almost_equal(f([3, 4, 5], [8]*3), [3, 4, 5])
128:         for p in 'cz':
129:             f = getattr(fblas, p+'copy', None)
130:             if f is None:
131:                 continue
132:             assert_array_almost_equal(f([3, 4j, 5+3j], [8]*3), [3, 4j, 5+3j])
133: 
134:     def test_asum(self):
135:         for p in 'sd':
136:             f = getattr(fblas, p+'asum', None)
137:             if f is None:
138:                 continue
139:             assert_almost_equal(f([3, -4, 5]), 12)
140:         for p in ['sc', 'dz']:
141:             f = getattr(fblas, p+'asum', None)
142:             if f is None:
143:                 continue
144:             assert_almost_equal(f([3j, -4, 3-4j]), 14)
145: 
146:     def test_dot(self):
147:         for p in 'sd':
148:             f = getattr(fblas, p+'dot', None)
149:             if f is None:
150:                 continue
151:             assert_almost_equal(f([3, -4, 5], [2, 5, 1]), -9)
152: 
153:     def test_complex_dotu(self):
154:         for p in 'cz':
155:             f = getattr(fblas, p+'dotu', None)
156:             if f is None:
157:                 continue
158:             assert_almost_equal(f([3j, -4, 3-4j], [2, 3, 1]), -9+2j)
159: 
160:     def test_complex_dotc(self):
161:         for p in 'cz':
162:             f = getattr(fblas, p+'dotc', None)
163:             if f is None:
164:                 continue
165:             assert_almost_equal(f([3j, -4, 3-4j], [2, 3j, 1]), 3-14j)
166: 
167:     def test_nrm2(self):
168:         for p in 'sd':
169:             f = getattr(fblas, p+'nrm2', None)
170:             if f is None:
171:                 continue
172:             assert_almost_equal(f([3, -4, 5]), math.sqrt(50))
173:         for p in ['c', 'z', 'sc', 'dz']:
174:             f = getattr(fblas, p+'nrm2', None)
175:             if f is None:
176:                 continue
177:             assert_almost_equal(f([3j, -4, 3-4j]), math.sqrt(50))
178: 
179:     def test_scal(self):
180:         for p in 'sd':
181:             f = getattr(fblas, p+'scal', None)
182:             if f is None:
183:                 continue
184:             assert_array_almost_equal(f(2, [3, -4, 5]), [6, -8, 10])
185:         for p in 'cz':
186:             f = getattr(fblas, p+'scal', None)
187:             if f is None:
188:                 continue
189:             assert_array_almost_equal(f(3j, [3j, -4, 3-4j]), [-9, -12j, 12+9j])
190:         for p in ['cs', 'zd']:
191:             f = getattr(fblas, p+'scal', None)
192:             if f is None:
193:                 continue
194:             assert_array_almost_equal(f(3, [3j, -4, 3-4j]), [9j, -12, 9-12j])
195: 
196:     def test_swap(self):
197:         for p in 'sd':
198:             f = getattr(fblas, p+'swap', None)
199:             if f is None:
200:                 continue
201:             x, y = [2, 3, 1], [-2, 3, 7]
202:             x1, y1 = f(x, y)
203:             assert_array_almost_equal(x1, y)
204:             assert_array_almost_equal(y1, x)
205:         for p in 'cz':
206:             f = getattr(fblas, p+'swap', None)
207:             if f is None:
208:                 continue
209:             x, y = [2, 3j, 1], [-2, 3, 7-3j]
210:             x1, y1 = f(x, y)
211:             assert_array_almost_equal(x1, y)
212:             assert_array_almost_equal(y1, x)
213: 
214:     def test_amax(self):
215:         for p in 'sd':
216:             f = getattr(fblas, 'i'+p+'amax')
217:             assert_equal(f([-2, 4, 3]), 1)
218:         for p in 'cz':
219:             f = getattr(fblas, 'i'+p+'amax')
220:             assert_equal(f([-5, 4+3j, 6]), 1)
221:     # XXX: need tests for rot,rotm,rotg,rotmg
222: 
223: 
224: class TestFBLAS2Simple(object):
225: 
226:     def test_gemv(self):
227:         for p in 'sd':
228:             f = getattr(fblas, p+'gemv', None)
229:             if f is None:
230:                 continue
231:             assert_array_almost_equal(f(3, [[3]], [-4]), [-36])
232:             assert_array_almost_equal(f(3, [[3]], [-4], 3, [5]), [-21])
233:         for p in 'cz':
234:             f = getattr(fblas, p+'gemv', None)
235:             if f is None:
236:                 continue
237:             assert_array_almost_equal(f(3j, [[3-4j]], [-4]), [-48-36j])
238:             assert_array_almost_equal(f(3j, [[3-4j]], [-4], 3, [5j]),
239:                                       [-48-21j])
240: 
241:     def test_ger(self):
242: 
243:         for p in 'sd':
244:             f = getattr(fblas, p+'ger', None)
245:             if f is None:
246:                 continue
247:             assert_array_almost_equal(f(1, [1, 2], [3, 4]), [[3, 4], [6, 8]])
248:             assert_array_almost_equal(f(2, [1, 2, 3], [3, 4]),
249:                                       [[6, 8], [12, 16], [18, 24]])
250: 
251:             assert_array_almost_equal(f(1, [1, 2], [3, 4],
252:                                         a=[[1, 2], [3, 4]]), [[4, 6], [9, 12]])
253: 
254:         for p in 'cz':
255:             f = getattr(fblas, p+'geru', None)
256:             if f is None:
257:                 continue
258:             assert_array_almost_equal(f(1, [1j, 2], [3, 4]),
259:                                       [[3j, 4j], [6, 8]])
260:             assert_array_almost_equal(f(-2, [1j, 2j, 3j], [3j, 4j]),
261:                                       [[6, 8], [12, 16], [18, 24]])
262: 
263:         for p in 'cz':
264:             for name in ('ger', 'gerc'):
265:                 f = getattr(fblas, p+name, None)
266:                 if f is None:
267:                     continue
268:                 assert_array_almost_equal(f(1, [1j, 2], [3, 4]),
269:                                           [[3j, 4j], [6, 8]])
270:                 assert_array_almost_equal(f(2, [1j, 2j, 3j], [3j, 4j]),
271:                                           [[6, 8], [12, 16], [18, 24]])
272: 
273:     def test_syr_her(self):
274:         x = np.arange(1, 5, dtype='d')
275:         resx = np.triu(x[:, np.newaxis] * x)
276:         resx_reverse = np.triu(x[::-1, np.newaxis] * x[::-1])
277: 
278:         y = np.linspace(0, 8.5, 17, endpoint=False)
279: 
280:         z = np.arange(1, 9, dtype='d').view('D')
281:         resz = np.triu(z[:, np.newaxis] * z)
282:         resz_reverse = np.triu(z[::-1, np.newaxis] * z[::-1])
283:         rehz = np.triu(z[:, np.newaxis] * z.conj())
284:         rehz_reverse = np.triu(z[::-1, np.newaxis] * z[::-1].conj())
285: 
286:         w = np.c_[np.zeros(4), z, np.zeros(4)].ravel()
287: 
288:         for p, rtol in zip('sd', [1e-7, 1e-14]):
289:             f = getattr(fblas, p+'syr', None)
290:             if f is None:
291:                 continue
292:             assert_allclose(f(1.0, x), resx, rtol=rtol)
293:             assert_allclose(f(1.0, x, lower=True), resx.T, rtol=rtol)
294:             assert_allclose(f(1.0, y, incx=2, offx=2, n=4), resx, rtol=rtol)
295:             # negative increments imply reversed vectors in blas
296:             assert_allclose(f(1.0, y, incx=-2, offx=2, n=4),
297:                             resx_reverse, rtol=rtol)
298: 
299:             a = np.zeros((4, 4), 'f' if p == 's' else 'd', 'F')
300:             b = f(1.0, x, a=a, overwrite_a=True)
301:             assert_allclose(a, resx, rtol=rtol)
302: 
303:             b = f(2.0, x, a=a)
304:             assert_(a is not b)
305:             assert_allclose(b, 3*resx, rtol=rtol)
306: 
307:             assert_raises(Exception, f, 1.0, x, incx=0)
308:             assert_raises(Exception, f, 1.0, x, offx=5)
309:             assert_raises(Exception, f, 1.0, x, offx=-2)
310:             assert_raises(Exception, f, 1.0, x, n=-2)
311:             assert_raises(Exception, f, 1.0, x, n=5)
312:             assert_raises(Exception, f, 1.0, x, lower=2)
313:             assert_raises(Exception, f, 1.0, x, a=np.zeros((2, 2), 'd', 'F'))
314: 
315:         for p, rtol in zip('cz', [1e-7, 1e-14]):
316:             f = getattr(fblas, p+'syr', None)
317:             if f is None:
318:                 continue
319:             assert_allclose(f(1.0, z), resz, rtol=rtol)
320:             assert_allclose(f(1.0, z, lower=True), resz.T, rtol=rtol)
321:             assert_allclose(f(1.0, w, incx=3, offx=1, n=4), resz, rtol=rtol)
322:             # negative increments imply reversed vectors in blas
323:             assert_allclose(f(1.0, w, incx=-3, offx=1, n=4),
324:                             resz_reverse, rtol=rtol)
325: 
326:             a = np.zeros((4, 4), 'F' if p == 'c' else 'D', 'F')
327:             b = f(1.0, z, a=a, overwrite_a=True)
328:             assert_allclose(a, resz, rtol=rtol)
329: 
330:             b = f(2.0, z, a=a)
331:             assert_(a is not b)
332:             assert_allclose(b, 3*resz, rtol=rtol)
333: 
334:             assert_raises(Exception, f, 1.0, x, incx=0)
335:             assert_raises(Exception, f, 1.0, x, offx=5)
336:             assert_raises(Exception, f, 1.0, x, offx=-2)
337:             assert_raises(Exception, f, 1.0, x, n=-2)
338:             assert_raises(Exception, f, 1.0, x, n=5)
339:             assert_raises(Exception, f, 1.0, x, lower=2)
340:             assert_raises(Exception, f, 1.0, x, a=np.zeros((2, 2), 'd', 'F'))
341: 
342:         for p, rtol in zip('cz', [1e-7, 1e-14]):
343:             f = getattr(fblas, p+'her', None)
344:             if f is None:
345:                 continue
346:             assert_allclose(f(1.0, z), rehz, rtol=rtol)
347:             assert_allclose(f(1.0, z, lower=True), rehz.T.conj(), rtol=rtol)
348:             assert_allclose(f(1.0, w, incx=3, offx=1, n=4), rehz, rtol=rtol)
349:             # negative increments imply reversed vectors in blas
350:             assert_allclose(f(1.0, w, incx=-3, offx=1, n=4),
351:                             rehz_reverse, rtol=rtol)
352: 
353:             a = np.zeros((4, 4), 'F' if p == 'c' else 'D', 'F')
354:             b = f(1.0, z, a=a, overwrite_a=True)
355:             assert_allclose(a, rehz, rtol=rtol)
356: 
357:             b = f(2.0, z, a=a)
358:             assert_(a is not b)
359:             assert_allclose(b, 3*rehz, rtol=rtol)
360: 
361:             assert_raises(Exception, f, 1.0, x, incx=0)
362:             assert_raises(Exception, f, 1.0, x, offx=5)
363:             assert_raises(Exception, f, 1.0, x, offx=-2)
364:             assert_raises(Exception, f, 1.0, x, n=-2)
365:             assert_raises(Exception, f, 1.0, x, n=5)
366:             assert_raises(Exception, f, 1.0, x, lower=2)
367:             assert_raises(Exception, f, 1.0, x, a=np.zeros((2, 2), 'd', 'F'))
368: 
369:     def test_syr2(self):
370:         x = np.arange(1, 5, dtype='d')
371:         y = np.arange(5, 9, dtype='d')
372:         resxy = np.triu(x[:, np.newaxis] * y + y[:, np.newaxis] * x)
373:         resxy_reverse = np.triu(x[::-1, np.newaxis] * y[::-1]
374:                                 + y[::-1, np.newaxis] * x[::-1])
375: 
376:         q = np.linspace(0, 8.5, 17, endpoint=False)
377: 
378:         for p, rtol in zip('sd', [1e-7, 1e-14]):
379:             f = getattr(fblas, p+'syr2', None)
380:             if f is None:
381:                 continue
382:             assert_allclose(f(1.0, x, y), resxy, rtol=rtol)
383:             assert_allclose(f(1.0, x, y, n=3), resxy[:3, :3], rtol=rtol)
384:             assert_allclose(f(1.0, x, y, lower=True), resxy.T, rtol=rtol)
385: 
386:             assert_allclose(f(1.0, q, q, incx=2, offx=2, incy=2, offy=10),
387:                             resxy, rtol=rtol)
388:             assert_allclose(f(1.0, q, q, incx=2, offx=2, incy=2, offy=10, n=3),
389:                             resxy[:3, :3], rtol=rtol)
390:             # negative increments imply reversed vectors in blas
391:             assert_allclose(f(1.0, q, q, incx=-2, offx=2, incy=-2, offy=10),
392:                             resxy_reverse, rtol=rtol)
393: 
394:             a = np.zeros((4, 4), 'f' if p == 's' else 'd', 'F')
395:             b = f(1.0, x, y, a=a, overwrite_a=True)
396:             assert_allclose(a, resxy, rtol=rtol)
397: 
398:             b = f(2.0, x, y, a=a)
399:             assert_(a is not b)
400:             assert_allclose(b, 3*resxy, rtol=rtol)
401: 
402:             assert_raises(Exception, f, 1.0, x, y, incx=0)
403:             assert_raises(Exception, f, 1.0, x, y, offx=5)
404:             assert_raises(Exception, f, 1.0, x, y, offx=-2)
405:             assert_raises(Exception, f, 1.0, x, y, incy=0)
406:             assert_raises(Exception, f, 1.0, x, y, offy=5)
407:             assert_raises(Exception, f, 1.0, x, y, offy=-2)
408:             assert_raises(Exception, f, 1.0, x, y, n=-2)
409:             assert_raises(Exception, f, 1.0, x, y, n=5)
410:             assert_raises(Exception, f, 1.0, x, y, lower=2)
411:             assert_raises(Exception, f, 1.0, x, y,
412:                           a=np.zeros((2, 2), 'd', 'F'))
413: 
414:     def test_her2(self):
415:         x = np.arange(1, 9, dtype='d').view('D')
416:         y = np.arange(9, 17, dtype='d').view('D')
417:         resxy = x[:, np.newaxis] * y.conj() + y[:, np.newaxis] * x.conj()
418:         resxy = np.triu(resxy)
419: 
420:         resxy_reverse = x[::-1, np.newaxis] * y[::-1].conj()
421:         resxy_reverse += y[::-1, np.newaxis] * x[::-1].conj()
422:         resxy_reverse = np.triu(resxy_reverse)
423: 
424:         u = np.c_[np.zeros(4), x, np.zeros(4)].ravel()
425:         v = np.c_[np.zeros(4), y, np.zeros(4)].ravel()
426: 
427:         for p, rtol in zip('cz', [1e-7, 1e-14]):
428:             f = getattr(fblas, p+'her2', None)
429:             if f is None:
430:                 continue
431:             assert_allclose(f(1.0, x, y), resxy, rtol=rtol)
432:             assert_allclose(f(1.0, x, y, n=3), resxy[:3, :3], rtol=rtol)
433:             assert_allclose(f(1.0, x, y, lower=True), resxy.T.conj(),
434:                             rtol=rtol)
435: 
436:             assert_allclose(f(1.0, u, v, incx=3, offx=1, incy=3, offy=1),
437:                             resxy, rtol=rtol)
438:             assert_allclose(f(1.0, u, v, incx=3, offx=1, incy=3, offy=1, n=3),
439:                             resxy[:3, :3], rtol=rtol)
440:             # negative increments imply reversed vectors in blas
441:             assert_allclose(f(1.0, u, v, incx=-3, offx=1, incy=-3, offy=1),
442:                             resxy_reverse, rtol=rtol)
443: 
444:             a = np.zeros((4, 4), 'F' if p == 'c' else 'D', 'F')
445:             b = f(1.0, x, y, a=a, overwrite_a=True)
446:             assert_allclose(a, resxy, rtol=rtol)
447: 
448:             b = f(2.0, x, y, a=a)
449:             assert_(a is not b)
450:             assert_allclose(b, 3*resxy, rtol=rtol)
451: 
452:             assert_raises(Exception, f, 1.0, x, y, incx=0)
453:             assert_raises(Exception, f, 1.0, x, y, offx=5)
454:             assert_raises(Exception, f, 1.0, x, y, offx=-2)
455:             assert_raises(Exception, f, 1.0, x, y, incy=0)
456:             assert_raises(Exception, f, 1.0, x, y, offy=5)
457:             assert_raises(Exception, f, 1.0, x, y, offy=-2)
458:             assert_raises(Exception, f, 1.0, x, y, n=-2)
459:             assert_raises(Exception, f, 1.0, x, y, n=5)
460:             assert_raises(Exception, f, 1.0, x, y, lower=2)
461:             assert_raises(Exception, f, 1.0, x, y,
462:                           a=np.zeros((2, 2), 'd', 'F'))
463: 
464:     def test_gbmv(self):
465:         seed(1234)
466:         for ind, dtype in enumerate(DTYPES):
467:             n = 7
468:             m = 5
469:             kl = 1
470:             ku = 2
471:             # fake a banded matrix via toeplitz
472:             A = toeplitz(append(rand(kl+1), zeros(m-kl-1)),
473:                          append(rand(ku+1), zeros(n-ku-1)))
474:             A = A.astype(dtype)
475:             Ab = zeros((kl+ku+1, n), dtype=dtype)
476: 
477:             # Form the banded storage
478:             Ab[2, :5] = A[0, 0]  # diag
479:             Ab[1, 1:6] = A[0, 1]  # sup1
480:             Ab[0, 2:7] = A[0, 2]  # sup2
481:             Ab[3, :4] = A[1, 0]  # sub1
482: 
483:             x = rand(n).astype(dtype)
484:             y = rand(m).astype(dtype)
485:             alpha, beta = dtype(3), dtype(-5)
486: 
487:             func, = get_blas_funcs(('gbmv',), dtype=dtype)
488:             y1 = func(m=m, n=n, ku=ku, kl=kl, alpha=alpha, a=Ab,
489:                       x=x, y=y, beta=beta)
490:             y2 = alpha * A.dot(x) + beta * y
491:             assert_array_almost_equal(y1, y2)
492: 
493:     def test_sbmv_hbmv(self):
494:         seed(1234)
495:         for ind, dtype in enumerate(DTYPES):
496:             n = 6
497:             k = 2
498:             A = zeros((n, n), dtype=dtype)
499:             Ab = zeros((k+1, n), dtype=dtype)
500: 
501:             # Form the array and its packed banded storage
502:             A[arange(n), arange(n)] = rand(n)
503:             for ind2 in range(1, k+1):
504:                 temp = rand(n-ind2)
505:                 A[arange(n-ind2), arange(ind2, n)] = temp
506:                 Ab[-1-ind2, ind2:] = temp
507:             A = A.astype(dtype)
508:             A = A + A.T if ind < 2 else A + A.conj().T
509:             Ab[-1, :] = diag(A)
510:             x = rand(n).astype(dtype)
511:             y = rand(n).astype(dtype)
512:             alpha, beta = dtype(1.25), dtype(3)
513: 
514:             if ind > 1:
515:                 func, = get_blas_funcs(('hbmv',), dtype=dtype)
516:             else:
517:                 func, = get_blas_funcs(('sbmv',), dtype=dtype)
518:             y1 = func(k=k, alpha=alpha, a=Ab, x=x, y=y, beta=beta)
519:             y2 = alpha * A.dot(x) + beta * y
520:             assert_array_almost_equal(y1, y2)
521: 
522:     def test_spmv_hpmv(self):
523:         seed(1234)
524:         for ind, dtype in enumerate(DTYPES+COMPLEX_DTYPES):
525:             n = 3
526:             A = rand(n, n).astype(dtype)
527:             if ind > 1:
528:                 A += rand(n, n)*1j
529:             A = A.astype(dtype)
530:             A = A + A.T if ind < 4 else A + A.conj().T
531:             c, r = tril_indices(n)
532:             Ap = A[r, c]
533:             x = rand(n).astype(dtype)
534:             y = rand(n).astype(dtype)
535:             xlong = arange(2*n).astype(dtype)
536:             ylong = ones(2*n).astype(dtype)
537:             alpha, beta = dtype(1.25), dtype(2)
538: 
539:             if ind > 3:
540:                 func, = get_blas_funcs(('hpmv',), dtype=dtype)
541:             else:
542:                 func, = get_blas_funcs(('spmv',), dtype=dtype)
543:             y1 = func(n=n, alpha=alpha, ap=Ap, x=x, y=y, beta=beta)
544:             y2 = alpha * A.dot(x) + beta * y
545:             assert_array_almost_equal(y1, y2)
546: 
547:             # Test inc and offsets
548:             y1 = func(n=n-1, alpha=alpha, beta=beta, x=xlong, y=ylong, ap=Ap,
549:                       incx=2, incy=2, offx=n, offy=n)
550:             y2 = (alpha * A[:-1, :-1]).dot(xlong[3::2]) + beta * ylong[3::2]
551:             assert_array_almost_equal(y1[3::2], y2)
552:             assert_almost_equal(y1[4], ylong[4])
553: 
554:     def test_spr_hpr(self):
555:         seed(1234)
556:         for ind, dtype in enumerate(DTYPES+COMPLEX_DTYPES):
557:             n = 3
558:             A = rand(n, n).astype(dtype)
559:             if ind > 1:
560:                 A += rand(n, n)*1j
561:             A = A.astype(dtype)
562:             A = A + A.T if ind < 4 else A + A.conj().T
563:             c, r = tril_indices(n)
564:             Ap = A[r, c]
565:             x = rand(n).astype(dtype)
566:             alpha = (DTYPES+COMPLEX_DTYPES)[mod(ind, 4)](2.5)
567: 
568:             if ind > 3:
569:                 func, = get_blas_funcs(('hpr',), dtype=dtype)
570:                 y2 = alpha * x[:, None].dot(x[None, :].conj()) + A
571:             else:
572:                 func, = get_blas_funcs(('spr',), dtype=dtype)
573:                 y2 = alpha * x[:, None].dot(x[None, :]) + A
574: 
575:             y1 = func(n=n, alpha=alpha, ap=Ap, x=x)
576:             y1f = zeros((3, 3), dtype=dtype)
577:             y1f[r, c] = y1
578:             y1f[c, r] = y1.conj() if ind > 3 else y1
579:             assert_array_almost_equal(y1f, y2)
580: 
581:     def test_spr2_hpr2(self):
582:         seed(1234)
583:         for ind, dtype in enumerate(DTYPES):
584:             n = 3
585:             A = rand(n, n).astype(dtype)
586:             if ind > 1:
587:                 A += rand(n, n)*1j
588:             A = A.astype(dtype)
589:             A = A + A.T if ind < 2 else A + A.conj().T
590:             c, r = tril_indices(n)
591:             Ap = A[r, c]
592:             x = rand(n).astype(dtype)
593:             y = rand(n).astype(dtype)
594:             alpha = dtype(2)
595: 
596:             if ind > 1:
597:                 func, = get_blas_funcs(('hpr2',), dtype=dtype)
598:             else:
599:                 func, = get_blas_funcs(('spr2',), dtype=dtype)
600: 
601:             u = alpha.conj() * x[:, None].dot(y[None, :].conj())
602:             y2 = A + u + u.conj().T
603:             y1 = func(n=n, alpha=alpha, x=x, y=y, ap=Ap)
604:             y1f = zeros((3, 3), dtype=dtype)
605:             y1f[r, c] = y1
606:             y1f[[1, 2, 2], [0, 0, 1]] = y1[[1, 3, 4]].conj()
607:             assert_array_almost_equal(y1f, y2)
608: 
609:     def test_tbmv(self):
610:         seed(1234)
611:         for ind, dtype in enumerate(DTYPES):
612:             n = 10
613:             k = 3
614:             x = rand(n).astype(dtype)
615:             A = zeros((n, n), dtype=dtype)
616:             # Banded upper triangular array
617:             for sup in range(k+1):
618:                 A[arange(n-sup), arange(sup, n)] = rand(n-sup)
619: 
620:             # Add complex parts for c,z
621:             if ind > 1:
622:                 A[nonzero(A)] += 1j * rand((k+1)*n-(k*(k+1)//2)).astype(dtype)
623: 
624:             # Form the banded storage
625:             Ab = zeros((k+1, n), dtype=dtype)
626:             for row in range(k+1):
627:                 Ab[-row-1, row:] = diag(A, k=row)
628:             func, = get_blas_funcs(('tbmv',), dtype=dtype)
629: 
630:             y1 = func(k=k, a=Ab, x=x)
631:             y2 = A.dot(x)
632:             assert_array_almost_equal(y1, y2)
633: 
634:             y1 = func(k=k, a=Ab, x=x, diag=1)
635:             A[arange(n), arange(n)] = dtype(1)
636:             y2 = A.dot(x)
637:             assert_array_almost_equal(y1, y2)
638: 
639:             y1 = func(k=k, a=Ab, x=x, diag=1, trans=1)
640:             y2 = A.T.dot(x)
641:             assert_array_almost_equal(y1, y2)
642: 
643:             y1 = func(k=k, a=Ab, x=x, diag=1, trans=2)
644:             y2 = A.conj().T.dot(x)
645:             assert_array_almost_equal(y1, y2)
646: 
647:     def test_tbsv(self):
648:         seed(1234)
649:         for ind, dtype in enumerate(DTYPES):
650:             n = 6
651:             k = 3
652:             x = rand(n).astype(dtype)
653:             A = zeros((n, n), dtype=dtype)
654:             # Banded upper triangular array
655:             for sup in range(k+1):
656:                 A[arange(n-sup), arange(sup, n)] = rand(n-sup)
657: 
658:             # Add complex parts for c,z
659:             if ind > 1:
660:                 A[nonzero(A)] += 1j * rand((k+1)*n-(k*(k+1)//2)).astype(dtype)
661: 
662:             # Form the banded storage
663:             Ab = zeros((k+1, n), dtype=dtype)
664:             for row in range(k+1):
665:                 Ab[-row-1, row:] = diag(A, k=row)
666:             func, = get_blas_funcs(('tbsv',), dtype=dtype)
667: 
668:             y1 = func(k=k, a=Ab, x=x)
669:             y2 = solve(A, x)
670:             assert_array_almost_equal(y1, y2)
671: 
672:             y1 = func(k=k, a=Ab, x=x, diag=1)
673:             A[arange(n), arange(n)] = dtype(1)
674:             y2 = solve(A, x)
675:             assert_array_almost_equal(y1, y2)
676: 
677:             y1 = func(k=k, a=Ab, x=x, diag=1, trans=1)
678:             y2 = solve(A.T, x)
679:             assert_array_almost_equal(y1, y2)
680: 
681:             y1 = func(k=k, a=Ab, x=x, diag=1, trans=2)
682:             y2 = solve(A.conj().T, x)
683:             assert_array_almost_equal(y1, y2)
684: 
685:     def test_tpmv(self):
686:         seed(1234)
687:         for ind, dtype in enumerate(DTYPES):
688:             n = 10
689:             x = rand(n).astype(dtype)
690:             # Upper triangular array
691:             A = triu(rand(n, n)) if ind < 2 else triu(rand(n, n)+rand(n, n)*1j)
692:             # Form the packed storage
693:             c, r = tril_indices(n)
694:             Ap = A[r, c]
695:             func, = get_blas_funcs(('tpmv',), dtype=dtype)
696: 
697:             y1 = func(n=n, ap=Ap, x=x)
698:             y2 = A.dot(x)
699:             assert_array_almost_equal(y1, y2)
700: 
701:             y1 = func(n=n, ap=Ap, x=x, diag=1)
702:             A[arange(n), arange(n)] = dtype(1)
703:             y2 = A.dot(x)
704:             assert_array_almost_equal(y1, y2)
705: 
706:             y1 = func(n=n, ap=Ap, x=x, diag=1, trans=1)
707:             y2 = A.T.dot(x)
708:             assert_array_almost_equal(y1, y2)
709: 
710:             y1 = func(n=n, ap=Ap, x=x, diag=1, trans=2)
711:             y2 = A.conj().T.dot(x)
712:             assert_array_almost_equal(y1, y2)
713: 
714:     def test_tpsv(self):
715:         seed(1234)
716:         for ind, dtype in enumerate(DTYPES):
717:             n = 10
718:             x = rand(n).astype(dtype)
719:             # Upper triangular array
720:             A = triu(rand(n, n)) if ind < 2 else triu(rand(n, n)+rand(n, n)*1j)
721:             A += eye(n)
722:             # Form the packed storage
723:             c, r = tril_indices(n)
724:             Ap = A[r, c]
725:             func, = get_blas_funcs(('tpsv',), dtype=dtype)
726: 
727:             y1 = func(n=n, ap=Ap, x=x)
728:             y2 = solve(A, x)
729:             assert_array_almost_equal(y1, y2)
730: 
731:             y1 = func(n=n, ap=Ap, x=x, diag=1)
732:             A[arange(n), arange(n)] = dtype(1)
733:             y2 = solve(A, x)
734:             assert_array_almost_equal(y1, y2)
735: 
736:             y1 = func(n=n, ap=Ap, x=x, diag=1, trans=1)
737:             y2 = solve(A.T, x)
738:             assert_array_almost_equal(y1, y2)
739: 
740:             y1 = func(n=n, ap=Ap, x=x, diag=1, trans=2)
741:             y2 = solve(A.conj().T, x)
742:             assert_array_almost_equal(y1, y2)
743: 
744:     def test_trmv(self):
745:         seed(1234)
746:         for ind, dtype in enumerate(DTYPES):
747:             n = 3
748:             A = (rand(n, n)+eye(n)).astype(dtype)
749:             x = rand(3).astype(dtype)
750:             func, = get_blas_funcs(('trmv',), dtype=dtype)
751: 
752:             y1 = func(a=A, x=x)
753:             y2 = triu(A).dot(x)
754:             assert_array_almost_equal(y1, y2)
755: 
756:             y1 = func(a=A, x=x, diag=1)
757:             A[arange(n), arange(n)] = dtype(1)
758:             y2 = triu(A).dot(x)
759:             assert_array_almost_equal(y1, y2)
760: 
761:             y1 = func(a=A, x=x, diag=1, trans=1)
762:             y2 = triu(A).T.dot(x)
763:             assert_array_almost_equal(y1, y2)
764: 
765:             y1 = func(a=A, x=x, diag=1, trans=2)
766:             y2 = triu(A).conj().T.dot(x)
767:             assert_array_almost_equal(y1, y2)
768: 
769:     def test_trsv(self):
770:         seed(1234)
771:         for ind, dtype in enumerate(DTYPES):
772:             n = 15
773:             A = (rand(n, n)+eye(n)).astype(dtype)
774:             x = rand(n).astype(dtype)
775:             func, = get_blas_funcs(('trsv',), dtype=dtype)
776: 
777:             y1 = func(a=A, x=x)
778:             y2 = solve(triu(A), x)
779:             assert_array_almost_equal(y1, y2)
780: 
781:             y1 = func(a=A, x=x, lower=1)
782:             y2 = solve(tril(A), x)
783:             assert_array_almost_equal(y1, y2)
784: 
785:             y1 = func(a=A, x=x, diag=1)
786:             A[arange(n), arange(n)] = dtype(1)
787:             y2 = solve(triu(A), x)
788:             assert_array_almost_equal(y1, y2)
789: 
790:             y1 = func(a=A, x=x, diag=1, trans=1)
791:             y2 = solve(triu(A).T, x)
792:             assert_array_almost_equal(y1, y2)
793: 
794:             y1 = func(a=A, x=x, diag=1, trans=2)
795:             y2 = solve(triu(A).conj().T, x)
796:             assert_array_almost_equal(y1, y2)
797: 
798: 
799: class TestFBLAS3Simple(object):
800: 
801:     def test_gemm(self):
802:         for p in 'sd':
803:             f = getattr(fblas, p+'gemm', None)
804:             if f is None:
805:                 continue
806:             assert_array_almost_equal(f(3, [3], [-4]), [[-36]])
807:             assert_array_almost_equal(f(3, [3], [-4], 3, [5]), [-21])
808:         for p in 'cz':
809:             f = getattr(fblas, p+'gemm', None)
810:             if f is None:
811:                 continue
812:             assert_array_almost_equal(f(3j, [3-4j], [-4]), [[-48-36j]])
813:             assert_array_almost_equal(f(3j, [3-4j], [-4], 3, [5j]), [-48-21j])
814: 
815: 
816: def _get_func(func, ps='sdzc'):
817:     '''Just a helper: return a specified BLAS function w/typecode.'''
818:     for p in ps:
819:         f = getattr(fblas, p+func, None)
820:         if f is None:
821:             continue
822:         yield f
823: 
824: 
825: class TestBLAS3Symm(object):
826: 
827:     def setup_method(self):
828:         self.a = np.array([[1., 2.],
829:                            [0., 1.]])
830:         self.b = np.array([[1., 0., 3.],
831:                            [0., -1., 2.]])
832:         self.c = np.ones((2, 3))
833:         self.t = np.array([[2., -1., 8.],
834:                            [3., 0., 9.]])
835: 
836:     def test_symm(self):
837:         for f in _get_func('symm'):
838:             res = f(a=self.a, b=self.b, c=self.c, alpha=1., beta=1.)
839:             assert_array_almost_equal(res, self.t)
840: 
841:             res = f(a=self.a.T, b=self.b, lower=1, c=self.c, alpha=1., beta=1.)
842:             assert_array_almost_equal(res, self.t)
843: 
844:             res = f(a=self.a, b=self.b.T, side=1, c=self.c.T,
845:                     alpha=1., beta=1.)
846:             assert_array_almost_equal(res, self.t.T)
847: 
848:     def test_summ_wrong_side(self):
849:         f = getattr(fblas, 'dsymm', None)
850:         if f is not None:
851:             assert_raises(Exception, f, **{'a': self.a, 'b': self.b,
852:                                            'alpha': 1, 'side': 1})
853:             # `side=1` means C <- B*A, hence shapes of A and B are to be
854:             #  compatible. Otherwise, f2py exception is raised
855: 
856:     def test_symm_wrong_uplo(self):
857:         '''SYMM only considers the upper/lower part of A. Hence setting
858:         wrong value for `lower` (default is lower=0, meaning upper triangle)
859:         gives a wrong result.
860:         '''
861:         f = getattr(fblas, 'dsymm', None)
862:         if f is not None:
863:             res = f(a=self.a, b=self.b, c=self.c, alpha=1., beta=1.)
864:             assert np.allclose(res, self.t)
865: 
866:             res = f(a=self.a, b=self.b, lower=1, c=self.c, alpha=1., beta=1.)
867:             assert not np.allclose(res, self.t)
868: 
869: 
870: class TestBLAS3Syrk(object):
871:     def setup_method(self):
872:         self.a = np.array([[1., 0.],
873:                            [0., -2.],
874:                            [2., 3.]])
875:         self.t = np.array([[1., 0., 2.],
876:                            [0., 4., -6.],
877:                            [2., -6., 13.]])
878:         self.tt = np.array([[5., 6.],
879:                             [6., 13.]])
880: 
881:     def test_syrk(self):
882:         for f in _get_func('syrk'):
883:             c = f(a=self.a, alpha=1.)
884:             assert_array_almost_equal(np.triu(c), np.triu(self.t))
885: 
886:             c = f(a=self.a, alpha=1., lower=1)
887:             assert_array_almost_equal(np.tril(c), np.tril(self.t))
888: 
889:             c0 = np.ones(self.t.shape)
890:             c = f(a=self.a, alpha=1., beta=1., c=c0)
891:             assert_array_almost_equal(np.triu(c), np.triu(self.t+c0))
892: 
893:             c = f(a=self.a, alpha=1., trans=1)
894:             assert_array_almost_equal(np.triu(c), np.triu(self.tt))
895: 
896:     # prints '0-th dimension must be fixed to 3 but got 5',
897:     # FIXME: suppress?
898:     # FIXME: how to catch the _fblas.error?
899:     def test_syrk_wrong_c(self):
900:         f = getattr(fblas, 'dsyrk', None)
901:         if f is not None:
902:             assert_raises(Exception, f, **{'a': self.a, 'alpha': 1.,
903:                                            'c': np.ones((5, 8))})
904:         # if C is supplied, it must have compatible dimensions
905: 
906: 
907: class TestBLAS3Syr2k(object):
908:     def setup_method(self):
909:         self.a = np.array([[1., 0.],
910:                            [0., -2.],
911:                            [2., 3.]])
912:         self.b = np.array([[0., 1.],
913:                            [1., 0.],
914:                            [0, 1.]])
915:         self.t = np.array([[0., -1., 3.],
916:                            [-1., 0., 0.],
917:                            [3., 0., 6.]])
918:         self.tt = np.array([[0., 1.],
919:                             [1., 6]])
920: 
921:     def test_syr2k(self):
922:         for f in _get_func('syr2k'):
923:             c = f(a=self.a, b=self.b, alpha=1.)
924:             assert_array_almost_equal(np.triu(c), np.triu(self.t))
925: 
926:             c = f(a=self.a, b=self.b, alpha=1., lower=1)
927:             assert_array_almost_equal(np.tril(c), np.tril(self.t))
928: 
929:             c0 = np.ones(self.t.shape)
930:             c = f(a=self.a, b=self.b, alpha=1., beta=1., c=c0)
931:             assert_array_almost_equal(np.triu(c), np.triu(self.t+c0))
932: 
933:             c = f(a=self.a, b=self.b, alpha=1., trans=1)
934:             assert_array_almost_equal(np.triu(c), np.triu(self.tt))
935: 
936:     # prints '0-th dimension must be fixed to 3 but got 5', FIXME: suppress?
937:     def test_syr2k_wrong_c(self):
938:         f = getattr(fblas, 'dsyr2k', None)
939:         if f is not None:
940:             assert_raises(Exception, f, **{'a': self.a,
941:                                            'b': self.b,
942:                                            'alpha': 1.,
943:                                            'c': np.zeros((15, 8))})
944:         # if C is supplied, it must have compatible dimensions
945: 
946: 
947: class TestSyHe(object):
948:     '''Quick and simple tests for (zc)-symm, syrk, syr2k.'''
949:     def setup_method(self):
950:         self.sigma_y = np.array([[0., -1.j],
951:                                  [1.j, 0.]])
952: 
953:     def test_symm_zc(self):
954:         for f in _get_func('symm', 'zc'):
955:             # NB: a is symmetric w/upper diag of ONLY
956:             res = f(a=self.sigma_y, b=self.sigma_y, alpha=1.)
957:             assert_array_almost_equal(np.triu(res), np.diag([1, -1]))
958: 
959:     def test_hemm_zc(self):
960:         for f in _get_func('hemm', 'zc'):
961:             # NB: a is hermitian w/upper diag of ONLY
962:             res = f(a=self.sigma_y, b=self.sigma_y, alpha=1.)
963:             assert_array_almost_equal(np.triu(res), np.diag([1, 1]))
964: 
965:     def test_syrk_zr(self):
966:         for f in _get_func('syrk', 'zc'):
967:             res = f(a=self.sigma_y, alpha=1.)
968:             assert_array_almost_equal(np.triu(res), np.diag([-1, -1]))
969: 
970:     def test_herk_zr(self):
971:         for f in _get_func('herk', 'zc'):
972:             res = f(a=self.sigma_y, alpha=1.)
973:             assert_array_almost_equal(np.triu(res), np.diag([1, 1]))
974: 
975:     def test_syr2k_zr(self):
976:         for f in _get_func('syr2k', 'zc'):
977:             res = f(a=self.sigma_y, b=self.sigma_y, alpha=1.)
978:             assert_array_almost_equal(np.triu(res), 2.*np.diag([-1, -1]))
979: 
980:     def test_her2k_zr(self):
981:         for f in _get_func('her2k', 'zc'):
982:             res = f(a=self.sigma_y, b=self.sigma_y, alpha=1.)
983:             assert_array_almost_equal(np.triu(res), 2.*np.diag([1, 1]))
984: 
985: 
986: class TestTRMM(object):
987:     '''Quick and simple tests for dtrmm.'''
988:     def setup_method(self):
989:         self.a = np.array([[1., 2., ],
990:                            [-2., 1.]])
991:         self.b = np.array([[3., 4., -1.],
992:                            [5., 6., -2.]])
993: 
994:     def test_ab(self):
995:         f = getattr(fblas, 'dtrmm', None)
996:         if f is not None:
997:             result = f(1., self.a, self.b)
998:             # default a is upper triangular
999:             expected = np.array([[13., 16., -5.],
1000:                                  [5., 6., -2.]])
1001:             assert_array_almost_equal(result, expected)
1002: 
1003:     def test_ab_lower(self):
1004:         f = getattr(fblas, 'dtrmm', None)
1005:         if f is not None:
1006:             result = f(1., self.a, self.b, lower=True)
1007:             expected = np.array([[3., 4., -1.],
1008:                                  [-1., -2., 0.]])  # now a is lower triangular
1009:             assert_array_almost_equal(result, expected)
1010: 
1011:     def test_b_overwrites(self):
1012:         # BLAS dtrmm modifies B argument in-place.
1013:         # Here the default is to copy, but this can be overridden
1014:         f = getattr(fblas, 'dtrmm', None)
1015:         if f is not None:
1016:             for overwr in [True, False]:
1017:                 bcopy = self.b.copy()
1018:                 result = f(1., self.a, bcopy, overwrite_b=overwr)
1019:                 # C-contiguous arrays are copied
1020:                 assert_(bcopy.flags.f_contiguous is False and
1021:                         np.may_share_memory(bcopy, result) is False)
1022:                 assert_equal(bcopy, self.b)
1023: 
1024:             bcopy = np.asfortranarray(self.b.copy())  # or just transpose it
1025:             result = f(1., self.a, bcopy, overwrite_b=True)
1026:             assert_(bcopy.flags.f_contiguous is True and
1027:                     np.may_share_memory(bcopy, result) is True)
1028:             assert_array_almost_equal(bcopy, result)
1029: 
1030: 
1031: def test_trsm():
1032:     seed(1234)
1033:     for ind, dtype in enumerate(DTYPES):
1034:         tol = np.finfo(dtype).eps*1000
1035:         func, = get_blas_funcs(('trsm',), dtype=dtype)
1036: 
1037:         # Test protection against size mismatches
1038:         A = rand(4, 5).astype(dtype)
1039:         B = rand(4, 4).astype(dtype)
1040:         alpha = dtype(1)
1041:         assert_raises(Exception, func, alpha, A, B)
1042:         assert_raises(Exception, func, alpha, A.T, B)
1043: 
1044:         n = 8
1045:         m = 7
1046:         alpha = dtype(-2.5)
1047:         A = (rand(m, m) if ind < 2 else rand(m, m) + rand(m, m)*1j) + eye(m)
1048:         A = A.astype(dtype)
1049:         Au = triu(A)
1050:         Al = tril(A)
1051:         B1 = rand(m, n).astype(dtype)
1052:         B2 = rand(n, m).astype(dtype)
1053: 
1054:         x1 = func(alpha=alpha, a=A, b=B1)
1055:         assert_equal(B1.shape, x1.shape)
1056:         x2 = solve(Au, alpha*B1)
1057:         assert_allclose(x1, x2, atol=tol)
1058: 
1059:         x1 = func(alpha=alpha, a=A, b=B1, trans_a=1)
1060:         x2 = solve(Au.T, alpha*B1)
1061:         assert_allclose(x1, x2, atol=tol)
1062: 
1063:         x1 = func(alpha=alpha, a=A, b=B1, trans_a=2)
1064:         x2 = solve(Au.conj().T, alpha*B1)
1065:         assert_allclose(x1, x2, atol=tol)
1066: 
1067:         x1 = func(alpha=alpha, a=A, b=B1, diag=1)
1068:         Au[arange(m), arange(m)] = dtype(1)
1069:         x2 = solve(Au, alpha*B1)
1070:         assert_allclose(x1, x2, atol=tol)
1071: 
1072:         x1 = func(alpha=alpha, a=A, b=B2, diag=1, side=1)
1073:         x2 = solve(Au.conj().T, alpha*B2.conj().T)
1074:         assert_allclose(x1, x2.conj().T, atol=tol)
1075: 
1076:         x1 = func(alpha=alpha, a=A, b=B2, diag=1, side=1, lower=1)
1077:         Al[arange(m), arange(m)] = dtype(1)
1078:         x2 = solve(Al.conj().T, alpha*B2.conj().T)
1079:         assert_allclose(x1, x2.conj().T, atol=tol)
1080: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################


# Assigning a Str to a Name (line 7):

# Assigning a Str to a Name (line 7):
str_46701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 12, (-1)), 'str', "\nBuild linalg:\n  python setup.py build\nRun tests if scipy is installed:\n  python -c 'import scipy;scipy.linalg.test()'\n")
# Assigning a type to the variable '__usage__' (line 7)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 7, 0), '__usage__', str_46701)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 14, 0))

# 'import math' statement (line 14)
import math

import_module(stypy.reporting.localization.Localization(__file__, 14, 0), 'math', math, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 16, 0))

# 'import numpy' statement (line 16)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/linalg/tests/')
import_46702 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'numpy')

if (type(import_46702) is not StypyTypeError):

    if (import_46702 != 'pyd_module'):
        __import__(import_46702)
        sys_modules_46703 = sys.modules[import_46702]
        import_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'np', sys_modules_46703.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 16)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 0), 'numpy', import_46702)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/linalg/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 17, 0))

# 'from numpy.testing import assert_equal, assert_almost_equal, assert_, assert_array_almost_equal, assert_allclose' statement (line 17)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/linalg/tests/')
import_46704 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'numpy.testing')

if (type(import_46704) is not StypyTypeError):

    if (import_46704 != 'pyd_module'):
        __import__(import_46704)
        sys_modules_46705 = sys.modules[import_46704]
        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'numpy.testing', sys_modules_46705.module_type_store, module_type_store, ['assert_equal', 'assert_almost_equal', 'assert_', 'assert_array_almost_equal', 'assert_allclose'])
        nest_module(stypy.reporting.localization.Localization(__file__, 17, 0), __file__, sys_modules_46705, sys_modules_46705.module_type_store, module_type_store)
    else:
        from numpy.testing import assert_equal, assert_almost_equal, assert_, assert_array_almost_equal, assert_allclose

        import_from_module(stypy.reporting.localization.Localization(__file__, 17, 0), 'numpy.testing', None, module_type_store, ['assert_equal', 'assert_almost_equal', 'assert_', 'assert_array_almost_equal', 'assert_allclose'], [assert_equal, assert_almost_equal, assert_, assert_array_almost_equal, assert_allclose])

else:
    # Assigning a type to the variable 'numpy.testing' (line 17)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 17, 0), 'numpy.testing', import_46704)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/linalg/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 19, 0))

# 'from pytest import assert_raises' statement (line 19)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/linalg/tests/')
import_46706 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'pytest')

if (type(import_46706) is not StypyTypeError):

    if (import_46706 != 'pyd_module'):
        __import__(import_46706)
        sys_modules_46707 = sys.modules[import_46706]
        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'pytest', sys_modules_46707.module_type_store, module_type_store, ['raises'])
        nest_module(stypy.reporting.localization.Localization(__file__, 19, 0), __file__, sys_modules_46707, sys_modules_46707.module_type_store, module_type_store)
    else:
        from pytest import raises as assert_raises

        import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'pytest', None, module_type_store, ['raises'], [assert_raises])

else:
    # Assigning a type to the variable 'pytest' (line 19)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'pytest', import_46706)

# Adding an alias
module_type_store.add_alias('assert_raises', 'raises')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/linalg/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 21, 0))

# 'from numpy import float32, float64, complex64, complex128, arange, triu, tril, zeros, tril_indices, ones, mod, diag, append, eye, nonzero' statement (line 21)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/linalg/tests/')
import_46708 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'numpy')

if (type(import_46708) is not StypyTypeError):

    if (import_46708 != 'pyd_module'):
        __import__(import_46708)
        sys_modules_46709 = sys.modules[import_46708]
        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'numpy', sys_modules_46709.module_type_store, module_type_store, ['float32', 'float64', 'complex64', 'complex128', 'arange', 'triu', 'tril', 'zeros', 'tril_indices', 'ones', 'mod', 'diag', 'append', 'eye', 'nonzero'])
        nest_module(stypy.reporting.localization.Localization(__file__, 21, 0), __file__, sys_modules_46709, sys_modules_46709.module_type_store, module_type_store)
    else:
        from numpy import float32, float64, complex64, complex128, arange, triu, tril, zeros, tril_indices, ones, mod, diag, append, eye, nonzero

        import_from_module(stypy.reporting.localization.Localization(__file__, 21, 0), 'numpy', None, module_type_store, ['float32', 'float64', 'complex64', 'complex128', 'arange', 'triu', 'tril', 'zeros', 'tril_indices', 'ones', 'mod', 'diag', 'append', 'eye', 'nonzero'], [float32, float64, complex64, complex128, arange, triu, tril, zeros, tril_indices, ones, mod, diag, append, eye, nonzero])

else:
    # Assigning a type to the variable 'numpy' (line 21)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 0), 'numpy', import_46708)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/linalg/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 25, 0))

# 'from numpy.random import rand, seed' statement (line 25)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/linalg/tests/')
import_46710 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'numpy.random')

if (type(import_46710) is not StypyTypeError):

    if (import_46710 != 'pyd_module'):
        __import__(import_46710)
        sys_modules_46711 = sys.modules[import_46710]
        import_from_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'numpy.random', sys_modules_46711.module_type_store, module_type_store, ['rand', 'seed'])
        nest_module(stypy.reporting.localization.Localization(__file__, 25, 0), __file__, sys_modules_46711, sys_modules_46711.module_type_store, module_type_store)
    else:
        from numpy.random import rand, seed

        import_from_module(stypy.reporting.localization.Localization(__file__, 25, 0), 'numpy.random', None, module_type_store, ['rand', 'seed'], [rand, seed])

else:
    # Assigning a type to the variable 'numpy.random' (line 25)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 25, 0), 'numpy.random', import_46710)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/linalg/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 26, 0))

# 'from scipy.linalg import fblas, get_blas_funcs, toeplitz, solve, solve_triangular' statement (line 26)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/linalg/tests/')
import_46712 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'scipy.linalg')

if (type(import_46712) is not StypyTypeError):

    if (import_46712 != 'pyd_module'):
        __import__(import_46712)
        sys_modules_46713 = sys.modules[import_46712]
        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'scipy.linalg', sys_modules_46713.module_type_store, module_type_store, ['_fblas', 'get_blas_funcs', 'toeplitz', 'solve', 'solve_triangular'])
        nest_module(stypy.reporting.localization.Localization(__file__, 26, 0), __file__, sys_modules_46713, sys_modules_46713.module_type_store, module_type_store)
    else:
        from scipy.linalg import _fblas as fblas, get_blas_funcs, toeplitz, solve, solve_triangular

        import_from_module(stypy.reporting.localization.Localization(__file__, 26, 0), 'scipy.linalg', None, module_type_store, ['_fblas', 'get_blas_funcs', 'toeplitz', 'solve', 'solve_triangular'], [fblas, get_blas_funcs, toeplitz, solve, solve_triangular])

else:
    # Assigning a type to the variable 'scipy.linalg' (line 26)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 0), 'scipy.linalg', import_46712)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/linalg/tests/')



# SSA begins for try-except statement (line 29)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 30, 4))

# 'from scipy.linalg import cblas' statement (line 30)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/linalg/tests/')
import_46714 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 30, 4), 'scipy.linalg')

if (type(import_46714) is not StypyTypeError):

    if (import_46714 != 'pyd_module'):
        __import__(import_46714)
        sys_modules_46715 = sys.modules[import_46714]
        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 4), 'scipy.linalg', sys_modules_46715.module_type_store, module_type_store, ['_cblas'])
        nest_module(stypy.reporting.localization.Localization(__file__, 30, 4), __file__, sys_modules_46715, sys_modules_46715.module_type_store, module_type_store)
    else:
        from scipy.linalg import _cblas as cblas

        import_from_module(stypy.reporting.localization.Localization(__file__, 30, 4), 'scipy.linalg', None, module_type_store, ['_cblas'], [cblas])

else:
    # Assigning a type to the variable 'scipy.linalg' (line 30)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 4), 'scipy.linalg', import_46714)

# Adding an alias
module_type_store.add_alias('cblas', '_cblas')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/linalg/tests/')

# SSA branch for the except part of a try statement (line 29)
# SSA branch for the except 'ImportError' branch of a try statement (line 29)
module_type_store.open_ssa_branch('except')

# Assigning a Name to a Name (line 32):

# Assigning a Name to a Name (line 32):
# Getting the type of 'None' (line 32)
None_46716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 32, 12), 'None')
# Assigning a type to the variable 'cblas' (line 32)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 32, 4), 'cblas', None_46716)
# SSA join for try-except statement (line 29)
module_type_store = module_type_store.join_ssa_context()


# Assigning a List to a Name (line 34):

# Assigning a List to a Name (line 34):

# Obtaining an instance of the builtin type 'list' (line 34)
list_46717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 34, 14), 'list')
# Adding type elements to the builtin type 'list' instance (line 34)
# Adding element type (line 34)
# Getting the type of 'float32' (line 34)
float32_46718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 34, 15), 'float32')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 34, 14), list_46717, float32_46718)
# Adding element type (line 34)
# Getting the type of 'float64' (line 34)
float64_46719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 34, 24), 'float64')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 34, 14), list_46717, float64_46719)

# Assigning a type to the variable 'REAL_DTYPES' (line 34)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 34, 0), 'REAL_DTYPES', list_46717)

# Assigning a List to a Name (line 35):

# Assigning a List to a Name (line 35):

# Obtaining an instance of the builtin type 'list' (line 35)
list_46720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 35, 17), 'list')
# Adding type elements to the builtin type 'list' instance (line 35)
# Adding element type (line 35)
# Getting the type of 'complex64' (line 35)
complex64_46721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 18), 'complex64')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 35, 17), list_46720, complex64_46721)
# Adding element type (line 35)
# Getting the type of 'complex128' (line 35)
complex128_46722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 29), 'complex128')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 35, 17), list_46720, complex128_46722)

# Assigning a type to the variable 'COMPLEX_DTYPES' (line 35)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 0), 'COMPLEX_DTYPES', list_46720)

# Assigning a BinOp to a Name (line 36):

# Assigning a BinOp to a Name (line 36):
# Getting the type of 'REAL_DTYPES' (line 36)
REAL_DTYPES_46723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 9), 'REAL_DTYPES')
# Getting the type of 'COMPLEX_DTYPES' (line 36)
COMPLEX_DTYPES_46724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 23), 'COMPLEX_DTYPES')
# Applying the binary operator '+' (line 36)
result_add_46725 = python_operator(stypy.reporting.localization.Localization(__file__, 36, 9), '+', REAL_DTYPES_46723, COMPLEX_DTYPES_46724)

# Assigning a type to the variable 'DTYPES' (line 36)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 0), 'DTYPES', result_add_46725)

@norecursion
def test_get_blas_funcs(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_get_blas_funcs'
    module_type_store = module_type_store.open_function_context('test_get_blas_funcs', 39, 0, False)
    
    # Passed parameters checking function
    test_get_blas_funcs.stypy_localization = localization
    test_get_blas_funcs.stypy_type_of_self = None
    test_get_blas_funcs.stypy_type_store = module_type_store
    test_get_blas_funcs.stypy_function_name = 'test_get_blas_funcs'
    test_get_blas_funcs.stypy_param_names_list = []
    test_get_blas_funcs.stypy_varargs_param_name = None
    test_get_blas_funcs.stypy_kwargs_param_name = None
    test_get_blas_funcs.stypy_call_defaults = defaults
    test_get_blas_funcs.stypy_call_varargs = varargs
    test_get_blas_funcs.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_get_blas_funcs', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_get_blas_funcs', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_get_blas_funcs(...)' code ##################

    
    # Assigning a Call to a Tuple (line 42):
    
    # Assigning a Subscript to a Name (line 42):
    
    # Obtaining the type of the subscript
    int_46726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 4), 'int')
    
    # Call to get_blas_funcs(...): (line 42)
    # Processing the call arguments (line 42)
    
    # Obtaining an instance of the builtin type 'tuple' (line 43)
    tuple_46728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 43)
    # Adding element type (line 43)
    str_46729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 9), 'str', 'axpy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 9), tuple_46728, str_46729)
    # Adding element type (line 43)
    str_46730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 17), 'str', 'axpy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 9), tuple_46728, str_46730)
    # Adding element type (line 43)
    str_46731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 25), 'str', 'axpy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 9), tuple_46728, str_46731)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 44)
    tuple_46732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 44)
    # Adding element type (line 44)
    
    # Call to empty(...): (line 44)
    # Processing the call arguments (line 44)
    
    # Obtaining an instance of the builtin type 'tuple' (line 44)
    tuple_46735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 44)
    # Adding element type (line 44)
    int_46736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 19), tuple_46735, int_46736)
    # Adding element type (line 44)
    int_46737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 19), tuple_46735, int_46737)
    
    # Processing the call keyword arguments (line 44)
    # Getting the type of 'np' (line 44)
    np_46738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 32), 'np', False)
    # Obtaining the member 'complex64' of a type (line 44)
    complex64_46739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 32), np_46738, 'complex64')
    keyword_46740 = complex64_46739
    str_46741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 52), 'str', 'F')
    keyword_46742 = str_46741
    kwargs_46743 = {'dtype': keyword_46740, 'order': keyword_46742}
    # Getting the type of 'np' (line 44)
    np_46733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 9), 'np', False)
    # Obtaining the member 'empty' of a type (line 44)
    empty_46734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 9), np_46733, 'empty')
    # Calling empty(args, kwargs) (line 44)
    empty_call_result_46744 = invoke(stypy.reporting.localization.Localization(__file__, 44, 9), empty_46734, *[tuple_46735], **kwargs_46743)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 9), tuple_46732, empty_call_result_46744)
    # Adding element type (line 44)
    
    # Call to empty(...): (line 45)
    # Processing the call arguments (line 45)
    
    # Obtaining an instance of the builtin type 'tuple' (line 45)
    tuple_46747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 45)
    # Adding element type (line 45)
    int_46748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 45, 19), tuple_46747, int_46748)
    # Adding element type (line 45)
    int_46749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 45, 19), tuple_46747, int_46749)
    
    # Processing the call keyword arguments (line 45)
    # Getting the type of 'np' (line 45)
    np_46750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 32), 'np', False)
    # Obtaining the member 'complex128' of a type (line 45)
    complex128_46751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 32), np_46750, 'complex128')
    keyword_46752 = complex128_46751
    str_46753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 53), 'str', 'C')
    keyword_46754 = str_46753
    kwargs_46755 = {'dtype': keyword_46752, 'order': keyword_46754}
    # Getting the type of 'np' (line 45)
    np_46745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 9), 'np', False)
    # Obtaining the member 'empty' of a type (line 45)
    empty_46746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 9), np_46745, 'empty')
    # Calling empty(args, kwargs) (line 45)
    empty_call_result_46756 = invoke(stypy.reporting.localization.Localization(__file__, 45, 9), empty_46746, *[tuple_46747], **kwargs_46755)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 9), tuple_46732, empty_call_result_46756)
    
    # Processing the call keyword arguments (line 42)
    kwargs_46757 = {}
    # Getting the type of 'get_blas_funcs' (line 42)
    get_blas_funcs_46727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 17), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 42)
    get_blas_funcs_call_result_46758 = invoke(stypy.reporting.localization.Localization(__file__, 42, 17), get_blas_funcs_46727, *[tuple_46728, tuple_46732], **kwargs_46757)
    
    # Obtaining the member '__getitem__' of a type (line 42)
    getitem___46759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 42, 4), get_blas_funcs_call_result_46758, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 42)
    subscript_call_result_46760 = invoke(stypy.reporting.localization.Localization(__file__, 42, 4), getitem___46759, int_46726)
    
    # Assigning a type to the variable 'tuple_var_assignment_46653' (line 42)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'tuple_var_assignment_46653', subscript_call_result_46760)
    
    # Assigning a Subscript to a Name (line 42):
    
    # Obtaining the type of the subscript
    int_46761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 4), 'int')
    
    # Call to get_blas_funcs(...): (line 42)
    # Processing the call arguments (line 42)
    
    # Obtaining an instance of the builtin type 'tuple' (line 43)
    tuple_46763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 43)
    # Adding element type (line 43)
    str_46764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 9), 'str', 'axpy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 9), tuple_46763, str_46764)
    # Adding element type (line 43)
    str_46765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 17), 'str', 'axpy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 9), tuple_46763, str_46765)
    # Adding element type (line 43)
    str_46766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 25), 'str', 'axpy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 9), tuple_46763, str_46766)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 44)
    tuple_46767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 44)
    # Adding element type (line 44)
    
    # Call to empty(...): (line 44)
    # Processing the call arguments (line 44)
    
    # Obtaining an instance of the builtin type 'tuple' (line 44)
    tuple_46770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 44)
    # Adding element type (line 44)
    int_46771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 19), tuple_46770, int_46771)
    # Adding element type (line 44)
    int_46772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 19), tuple_46770, int_46772)
    
    # Processing the call keyword arguments (line 44)
    # Getting the type of 'np' (line 44)
    np_46773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 32), 'np', False)
    # Obtaining the member 'complex64' of a type (line 44)
    complex64_46774 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 32), np_46773, 'complex64')
    keyword_46775 = complex64_46774
    str_46776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 52), 'str', 'F')
    keyword_46777 = str_46776
    kwargs_46778 = {'dtype': keyword_46775, 'order': keyword_46777}
    # Getting the type of 'np' (line 44)
    np_46768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 9), 'np', False)
    # Obtaining the member 'empty' of a type (line 44)
    empty_46769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 9), np_46768, 'empty')
    # Calling empty(args, kwargs) (line 44)
    empty_call_result_46779 = invoke(stypy.reporting.localization.Localization(__file__, 44, 9), empty_46769, *[tuple_46770], **kwargs_46778)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 9), tuple_46767, empty_call_result_46779)
    # Adding element type (line 44)
    
    # Call to empty(...): (line 45)
    # Processing the call arguments (line 45)
    
    # Obtaining an instance of the builtin type 'tuple' (line 45)
    tuple_46782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 45)
    # Adding element type (line 45)
    int_46783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 45, 19), tuple_46782, int_46783)
    # Adding element type (line 45)
    int_46784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 45, 19), tuple_46782, int_46784)
    
    # Processing the call keyword arguments (line 45)
    # Getting the type of 'np' (line 45)
    np_46785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 32), 'np', False)
    # Obtaining the member 'complex128' of a type (line 45)
    complex128_46786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 32), np_46785, 'complex128')
    keyword_46787 = complex128_46786
    str_46788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 53), 'str', 'C')
    keyword_46789 = str_46788
    kwargs_46790 = {'dtype': keyword_46787, 'order': keyword_46789}
    # Getting the type of 'np' (line 45)
    np_46780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 9), 'np', False)
    # Obtaining the member 'empty' of a type (line 45)
    empty_46781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 9), np_46780, 'empty')
    # Calling empty(args, kwargs) (line 45)
    empty_call_result_46791 = invoke(stypy.reporting.localization.Localization(__file__, 45, 9), empty_46781, *[tuple_46782], **kwargs_46790)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 9), tuple_46767, empty_call_result_46791)
    
    # Processing the call keyword arguments (line 42)
    kwargs_46792 = {}
    # Getting the type of 'get_blas_funcs' (line 42)
    get_blas_funcs_46762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 17), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 42)
    get_blas_funcs_call_result_46793 = invoke(stypy.reporting.localization.Localization(__file__, 42, 17), get_blas_funcs_46762, *[tuple_46763, tuple_46767], **kwargs_46792)
    
    # Obtaining the member '__getitem__' of a type (line 42)
    getitem___46794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 42, 4), get_blas_funcs_call_result_46793, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 42)
    subscript_call_result_46795 = invoke(stypy.reporting.localization.Localization(__file__, 42, 4), getitem___46794, int_46761)
    
    # Assigning a type to the variable 'tuple_var_assignment_46654' (line 42)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'tuple_var_assignment_46654', subscript_call_result_46795)
    
    # Assigning a Subscript to a Name (line 42):
    
    # Obtaining the type of the subscript
    int_46796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 4), 'int')
    
    # Call to get_blas_funcs(...): (line 42)
    # Processing the call arguments (line 42)
    
    # Obtaining an instance of the builtin type 'tuple' (line 43)
    tuple_46798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 43)
    # Adding element type (line 43)
    str_46799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 9), 'str', 'axpy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 9), tuple_46798, str_46799)
    # Adding element type (line 43)
    str_46800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 17), 'str', 'axpy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 9), tuple_46798, str_46800)
    # Adding element type (line 43)
    str_46801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 43, 25), 'str', 'axpy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 43, 9), tuple_46798, str_46801)
    
    
    # Obtaining an instance of the builtin type 'tuple' (line 44)
    tuple_46802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 9), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 44)
    # Adding element type (line 44)
    
    # Call to empty(...): (line 44)
    # Processing the call arguments (line 44)
    
    # Obtaining an instance of the builtin type 'tuple' (line 44)
    tuple_46805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 44)
    # Adding element type (line 44)
    int_46806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 19), tuple_46805, int_46806)
    # Adding element type (line 44)
    int_46807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 19), tuple_46805, int_46807)
    
    # Processing the call keyword arguments (line 44)
    # Getting the type of 'np' (line 44)
    np_46808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 32), 'np', False)
    # Obtaining the member 'complex64' of a type (line 44)
    complex64_46809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 32), np_46808, 'complex64')
    keyword_46810 = complex64_46809
    str_46811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 44, 52), 'str', 'F')
    keyword_46812 = str_46811
    kwargs_46813 = {'dtype': keyword_46810, 'order': keyword_46812}
    # Getting the type of 'np' (line 44)
    np_46803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 9), 'np', False)
    # Obtaining the member 'empty' of a type (line 44)
    empty_46804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 9), np_46803, 'empty')
    # Calling empty(args, kwargs) (line 44)
    empty_call_result_46814 = invoke(stypy.reporting.localization.Localization(__file__, 44, 9), empty_46804, *[tuple_46805], **kwargs_46813)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 9), tuple_46802, empty_call_result_46814)
    # Adding element type (line 44)
    
    # Call to empty(...): (line 45)
    # Processing the call arguments (line 45)
    
    # Obtaining an instance of the builtin type 'tuple' (line 45)
    tuple_46817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 45)
    # Adding element type (line 45)
    int_46818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 45, 19), tuple_46817, int_46818)
    # Adding element type (line 45)
    int_46819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 45, 19), tuple_46817, int_46819)
    
    # Processing the call keyword arguments (line 45)
    # Getting the type of 'np' (line 45)
    np_46820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 32), 'np', False)
    # Obtaining the member 'complex128' of a type (line 45)
    complex128_46821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 32), np_46820, 'complex128')
    keyword_46822 = complex128_46821
    str_46823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 53), 'str', 'C')
    keyword_46824 = str_46823
    kwargs_46825 = {'dtype': keyword_46822, 'order': keyword_46824}
    # Getting the type of 'np' (line 45)
    np_46815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 9), 'np', False)
    # Obtaining the member 'empty' of a type (line 45)
    empty_46816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 9), np_46815, 'empty')
    # Calling empty(args, kwargs) (line 45)
    empty_call_result_46826 = invoke(stypy.reporting.localization.Localization(__file__, 45, 9), empty_46816, *[tuple_46817], **kwargs_46825)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 44, 9), tuple_46802, empty_call_result_46826)
    
    # Processing the call keyword arguments (line 42)
    kwargs_46827 = {}
    # Getting the type of 'get_blas_funcs' (line 42)
    get_blas_funcs_46797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 17), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 42)
    get_blas_funcs_call_result_46828 = invoke(stypy.reporting.localization.Localization(__file__, 42, 17), get_blas_funcs_46797, *[tuple_46798, tuple_46802], **kwargs_46827)
    
    # Obtaining the member '__getitem__' of a type (line 42)
    getitem___46829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 42, 4), get_blas_funcs_call_result_46828, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 42)
    subscript_call_result_46830 = invoke(stypy.reporting.localization.Localization(__file__, 42, 4), getitem___46829, int_46796)
    
    # Assigning a type to the variable 'tuple_var_assignment_46655' (line 42)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'tuple_var_assignment_46655', subscript_call_result_46830)
    
    # Assigning a Name to a Name (line 42):
    # Getting the type of 'tuple_var_assignment_46653' (line 42)
    tuple_var_assignment_46653_46831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'tuple_var_assignment_46653')
    # Assigning a type to the variable 'f1' (line 42)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'f1', tuple_var_assignment_46653_46831)
    
    # Assigning a Name to a Name (line 42):
    # Getting the type of 'tuple_var_assignment_46654' (line 42)
    tuple_var_assignment_46654_46832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'tuple_var_assignment_46654')
    # Assigning a type to the variable 'f2' (line 42)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 8), 'f2', tuple_var_assignment_46654_46832)
    
    # Assigning a Name to a Name (line 42):
    # Getting the type of 'tuple_var_assignment_46655' (line 42)
    tuple_var_assignment_46655_46833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 4), 'tuple_var_assignment_46655')
    # Assigning a type to the variable 'f3' (line 42)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 12), 'f3', tuple_var_assignment_46655_46833)
    
    # Call to assert_equal(...): (line 50)
    # Processing the call arguments (line 50)
    # Getting the type of 'f1' (line 50)
    f1_46835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 17), 'f1', False)
    # Obtaining the member 'typecode' of a type (line 50)
    typecode_46836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 50, 17), f1_46835, 'typecode')
    str_46837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 30), 'str', 'z')
    # Processing the call keyword arguments (line 50)
    kwargs_46838 = {}
    # Getting the type of 'assert_equal' (line 50)
    assert_equal_46834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 50)
    assert_equal_call_result_46839 = invoke(stypy.reporting.localization.Localization(__file__, 50, 4), assert_equal_46834, *[typecode_46836, str_46837], **kwargs_46838)
    
    
    # Call to assert_equal(...): (line 51)
    # Processing the call arguments (line 51)
    # Getting the type of 'f2' (line 51)
    f2_46841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 17), 'f2', False)
    # Obtaining the member 'typecode' of a type (line 51)
    typecode_46842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 17), f2_46841, 'typecode')
    str_46843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 30), 'str', 'z')
    # Processing the call keyword arguments (line 51)
    kwargs_46844 = {}
    # Getting the type of 'assert_equal' (line 51)
    assert_equal_46840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 51)
    assert_equal_call_result_46845 = invoke(stypy.reporting.localization.Localization(__file__, 51, 4), assert_equal_46840, *[typecode_46842, str_46843], **kwargs_46844)
    
    
    # Type idiom detected: calculating its left and rigth part (line 52)
    # Getting the type of 'cblas' (line 52)
    cblas_46846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 4), 'cblas')
    # Getting the type of 'None' (line 52)
    None_46847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 20), 'None')
    
    (may_be_46848, more_types_in_union_46849) = may_not_be_none(cblas_46846, None_46847)

    if may_be_46848:

        if more_types_in_union_46849:
            # Runtime conditional SSA (line 52)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Call to assert_equal(...): (line 53)
        # Processing the call arguments (line 53)
        # Getting the type of 'f1' (line 53)
        f1_46851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 21), 'f1', False)
        # Obtaining the member 'module_name' of a type (line 53)
        module_name_46852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 21), f1_46851, 'module_name')
        str_46853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 37), 'str', 'cblas')
        # Processing the call keyword arguments (line 53)
        kwargs_46854 = {}
        # Getting the type of 'assert_equal' (line 53)
        assert_equal_46850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 53)
        assert_equal_call_result_46855 = invoke(stypy.reporting.localization.Localization(__file__, 53, 8), assert_equal_46850, *[module_name_46852, str_46853], **kwargs_46854)
        
        
        # Call to assert_equal(...): (line 54)
        # Processing the call arguments (line 54)
        # Getting the type of 'f2' (line 54)
        f2_46857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 21), 'f2', False)
        # Obtaining the member 'module_name' of a type (line 54)
        module_name_46858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 54, 21), f2_46857, 'module_name')
        str_46859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 37), 'str', 'cblas')
        # Processing the call keyword arguments (line 54)
        kwargs_46860 = {}
        # Getting the type of 'assert_equal' (line 54)
        assert_equal_46856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 54)
        assert_equal_call_result_46861 = invoke(stypy.reporting.localization.Localization(__file__, 54, 8), assert_equal_46856, *[module_name_46858, str_46859], **kwargs_46860)
        

        if more_types_in_union_46849:
            # SSA join for if statement (line 52)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # Assigning a Call to a Name (line 57):
    
    # Assigning a Call to a Name (line 57):
    
    # Call to get_blas_funcs(...): (line 57)
    # Processing the call arguments (line 57)
    str_46863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 24), 'str', 'rotg')
    # Processing the call keyword arguments (line 57)
    kwargs_46864 = {}
    # Getting the type of 'get_blas_funcs' (line 57)
    get_blas_funcs_46862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 9), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 57)
    get_blas_funcs_call_result_46865 = invoke(stypy.reporting.localization.Localization(__file__, 57, 9), get_blas_funcs_46862, *[str_46863], **kwargs_46864)
    
    # Assigning a type to the variable 'f1' (line 57)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 57, 4), 'f1', get_blas_funcs_call_result_46865)
    
    # Call to assert_equal(...): (line 58)
    # Processing the call arguments (line 58)
    # Getting the type of 'f1' (line 58)
    f1_46867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 17), 'f1', False)
    # Obtaining the member 'typecode' of a type (line 58)
    typecode_46868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 58, 17), f1_46867, 'typecode')
    str_46869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 58, 30), 'str', 'd')
    # Processing the call keyword arguments (line 58)
    kwargs_46870 = {}
    # Getting the type of 'assert_equal' (line 58)
    assert_equal_46866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 58)
    assert_equal_call_result_46871 = invoke(stypy.reporting.localization.Localization(__file__, 58, 4), assert_equal_46866, *[typecode_46868, str_46869], **kwargs_46870)
    
    
    # Assigning a Call to a Name (line 61):
    
    # Assigning a Call to a Name (line 61):
    
    # Call to get_blas_funcs(...): (line 61)
    # Processing the call arguments (line 61)
    str_46873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 24), 'str', 'gemm')
    # Processing the call keyword arguments (line 61)
    # Getting the type of 'np' (line 61)
    np_46874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 38), 'np', False)
    # Obtaining the member 'complex64' of a type (line 61)
    complex64_46875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 38), np_46874, 'complex64')
    keyword_46876 = complex64_46875
    kwargs_46877 = {'dtype': keyword_46876}
    # Getting the type of 'get_blas_funcs' (line 61)
    get_blas_funcs_46872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 9), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 61)
    get_blas_funcs_call_result_46878 = invoke(stypy.reporting.localization.Localization(__file__, 61, 9), get_blas_funcs_46872, *[str_46873], **kwargs_46877)
    
    # Assigning a type to the variable 'f1' (line 61)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 61, 4), 'f1', get_blas_funcs_call_result_46878)
    
    # Call to assert_equal(...): (line 62)
    # Processing the call arguments (line 62)
    # Getting the type of 'f1' (line 62)
    f1_46880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 17), 'f1', False)
    # Obtaining the member 'typecode' of a type (line 62)
    typecode_46881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 62, 17), f1_46880, 'typecode')
    str_46882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 62, 30), 'str', 'c')
    # Processing the call keyword arguments (line 62)
    kwargs_46883 = {}
    # Getting the type of 'assert_equal' (line 62)
    assert_equal_46879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 62)
    assert_equal_call_result_46884 = invoke(stypy.reporting.localization.Localization(__file__, 62, 4), assert_equal_46879, *[typecode_46881, str_46882], **kwargs_46883)
    
    
    # Assigning a Call to a Name (line 63):
    
    # Assigning a Call to a Name (line 63):
    
    # Call to get_blas_funcs(...): (line 63)
    # Processing the call arguments (line 63)
    str_46886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 63, 24), 'str', 'gemm')
    # Processing the call keyword arguments (line 63)
    str_46887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 63, 38), 'str', 'F')
    keyword_46888 = str_46887
    kwargs_46889 = {'dtype': keyword_46888}
    # Getting the type of 'get_blas_funcs' (line 63)
    get_blas_funcs_46885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 9), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 63)
    get_blas_funcs_call_result_46890 = invoke(stypy.reporting.localization.Localization(__file__, 63, 9), get_blas_funcs_46885, *[str_46886], **kwargs_46889)
    
    # Assigning a type to the variable 'f1' (line 63)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 63, 4), 'f1', get_blas_funcs_call_result_46890)
    
    # Call to assert_equal(...): (line 64)
    # Processing the call arguments (line 64)
    # Getting the type of 'f1' (line 64)
    f1_46892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 64, 17), 'f1', False)
    # Obtaining the member 'typecode' of a type (line 64)
    typecode_46893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 64, 17), f1_46892, 'typecode')
    str_46894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 64, 30), 'str', 'c')
    # Processing the call keyword arguments (line 64)
    kwargs_46895 = {}
    # Getting the type of 'assert_equal' (line 64)
    assert_equal_46891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 64, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 64)
    assert_equal_call_result_46896 = invoke(stypy.reporting.localization.Localization(__file__, 64, 4), assert_equal_46891, *[typecode_46893, str_46894], **kwargs_46895)
    
    
    # Assigning a Call to a Name (line 67):
    
    # Assigning a Call to a Name (line 67):
    
    # Call to get_blas_funcs(...): (line 67)
    # Processing the call arguments (line 67)
    str_46898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 67, 24), 'str', 'gemm')
    # Processing the call keyword arguments (line 67)
    # Getting the type of 'np' (line 67)
    np_46899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 38), 'np', False)
    # Obtaining the member 'longcomplex' of a type (line 67)
    longcomplex_46900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 67, 38), np_46899, 'longcomplex')
    keyword_46901 = longcomplex_46900
    kwargs_46902 = {'dtype': keyword_46901}
    # Getting the type of 'get_blas_funcs' (line 67)
    get_blas_funcs_46897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 9), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 67)
    get_blas_funcs_call_result_46903 = invoke(stypy.reporting.localization.Localization(__file__, 67, 9), get_blas_funcs_46897, *[str_46898], **kwargs_46902)
    
    # Assigning a type to the variable 'f1' (line 67)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 67, 4), 'f1', get_blas_funcs_call_result_46903)
    
    # Call to assert_equal(...): (line 68)
    # Processing the call arguments (line 68)
    # Getting the type of 'f1' (line 68)
    f1_46905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 17), 'f1', False)
    # Obtaining the member 'typecode' of a type (line 68)
    typecode_46906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 68, 17), f1_46905, 'typecode')
    str_46907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 68, 30), 'str', 'z')
    # Processing the call keyword arguments (line 68)
    kwargs_46908 = {}
    # Getting the type of 'assert_equal' (line 68)
    assert_equal_46904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 68)
    assert_equal_call_result_46909 = invoke(stypy.reporting.localization.Localization(__file__, 68, 4), assert_equal_46904, *[typecode_46906, str_46907], **kwargs_46908)
    
    
    # Assigning a Call to a Name (line 71):
    
    # Assigning a Call to a Name (line 71):
    
    # Call to get_blas_funcs(...): (line 71)
    # Processing the call arguments (line 71)
    str_46911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 71, 24), 'str', 'axpy')
    
    # Obtaining an instance of the builtin type 'tuple' (line 72)
    tuple_46912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 72, 25), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 72)
    # Adding element type (line 72)
    
    # Call to empty(...): (line 72)
    # Processing the call arguments (line 72)
    
    # Obtaining an instance of the builtin type 'tuple' (line 72)
    tuple_46915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 72, 35), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 72)
    # Adding element type (line 72)
    int_46916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 72, 35), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 72, 35), tuple_46915, int_46916)
    # Adding element type (line 72)
    int_46917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 72, 38), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 72, 35), tuple_46915, int_46917)
    
    # Processing the call keyword arguments (line 72)
    # Getting the type of 'np' (line 72)
    np_46918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 48), 'np', False)
    # Obtaining the member 'float64' of a type (line 72)
    float64_46919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 72, 48), np_46918, 'float64')
    keyword_46920 = float64_46919
    kwargs_46921 = {'dtype': keyword_46920}
    # Getting the type of 'np' (line 72)
    np_46913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 25), 'np', False)
    # Obtaining the member 'empty' of a type (line 72)
    empty_46914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 72, 25), np_46913, 'empty')
    # Calling empty(args, kwargs) (line 72)
    empty_call_result_46922 = invoke(stypy.reporting.localization.Localization(__file__, 72, 25), empty_46914, *[tuple_46915], **kwargs_46921)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 72, 25), tuple_46912, empty_call_result_46922)
    # Adding element type (line 72)
    
    # Call to empty(...): (line 73)
    # Processing the call arguments (line 73)
    
    # Obtaining an instance of the builtin type 'tuple' (line 73)
    tuple_46925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 73, 35), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 73)
    # Adding element type (line 73)
    int_46926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 73, 35), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 73, 35), tuple_46925, int_46926)
    # Adding element type (line 73)
    int_46927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 73, 38), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 73, 35), tuple_46925, int_46927)
    
    # Processing the call keyword arguments (line 73)
    # Getting the type of 'np' (line 73)
    np_46928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 48), 'np', False)
    # Obtaining the member 'complex64' of a type (line 73)
    complex64_46929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 48), np_46928, 'complex64')
    keyword_46930 = complex64_46929
    kwargs_46931 = {'dtype': keyword_46930}
    # Getting the type of 'np' (line 73)
    np_46923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 25), 'np', False)
    # Obtaining the member 'empty' of a type (line 73)
    empty_46924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 25), np_46923, 'empty')
    # Calling empty(args, kwargs) (line 73)
    empty_call_result_46932 = invoke(stypy.reporting.localization.Localization(__file__, 73, 25), empty_46924, *[tuple_46925], **kwargs_46931)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 72, 25), tuple_46912, empty_call_result_46932)
    
    # Processing the call keyword arguments (line 71)
    kwargs_46933 = {}
    # Getting the type of 'get_blas_funcs' (line 71)
    get_blas_funcs_46910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 9), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 71)
    get_blas_funcs_call_result_46934 = invoke(stypy.reporting.localization.Localization(__file__, 71, 9), get_blas_funcs_46910, *[str_46911, tuple_46912], **kwargs_46933)
    
    # Assigning a type to the variable 'f1' (line 71)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 71, 4), 'f1', get_blas_funcs_call_result_46934)
    
    # Call to assert_equal(...): (line 75)
    # Processing the call arguments (line 75)
    # Getting the type of 'f1' (line 75)
    f1_46936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 17), 'f1', False)
    # Obtaining the member 'typecode' of a type (line 75)
    typecode_46937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 17), f1_46936, 'typecode')
    str_46938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 30), 'str', 'z')
    # Processing the call keyword arguments (line 75)
    kwargs_46939 = {}
    # Getting the type of 'assert_equal' (line 75)
    assert_equal_46935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 75)
    assert_equal_call_result_46940 = invoke(stypy.reporting.localization.Localization(__file__, 75, 4), assert_equal_46935, *[typecode_46937, str_46938], **kwargs_46939)
    
    
    # ################# End of 'test_get_blas_funcs(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_get_blas_funcs' in the type store
    # Getting the type of 'stypy_return_type' (line 39)
    stypy_return_type_46941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_46941)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_get_blas_funcs'
    return stypy_return_type_46941

# Assigning a type to the variable 'test_get_blas_funcs' (line 39)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 39, 0), 'test_get_blas_funcs', test_get_blas_funcs)

@norecursion
def test_get_blas_funcs_alias(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_get_blas_funcs_alias'
    module_type_store = module_type_store.open_function_context('test_get_blas_funcs_alias', 78, 0, False)
    
    # Passed parameters checking function
    test_get_blas_funcs_alias.stypy_localization = localization
    test_get_blas_funcs_alias.stypy_type_of_self = None
    test_get_blas_funcs_alias.stypy_type_store = module_type_store
    test_get_blas_funcs_alias.stypy_function_name = 'test_get_blas_funcs_alias'
    test_get_blas_funcs_alias.stypy_param_names_list = []
    test_get_blas_funcs_alias.stypy_varargs_param_name = None
    test_get_blas_funcs_alias.stypy_kwargs_param_name = None
    test_get_blas_funcs_alias.stypy_call_defaults = defaults
    test_get_blas_funcs_alias.stypy_call_varargs = varargs
    test_get_blas_funcs_alias.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_get_blas_funcs_alias', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_get_blas_funcs_alias', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_get_blas_funcs_alias(...)' code ##################

    
    # Assigning a Call to a Tuple (line 80):
    
    # Assigning a Subscript to a Name (line 80):
    
    # Obtaining the type of the subscript
    int_46942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 4), 'int')
    
    # Call to get_blas_funcs(...): (line 80)
    # Processing the call arguments (line 80)
    
    # Obtaining an instance of the builtin type 'tuple' (line 80)
    tuple_46944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 80)
    # Adding element type (line 80)
    str_46945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 27), 'str', 'nrm2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 80, 27), tuple_46944, str_46945)
    # Adding element type (line 80)
    str_46946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 35), 'str', 'dot')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 80, 27), tuple_46944, str_46946)
    
    # Processing the call keyword arguments (line 80)
    # Getting the type of 'np' (line 80)
    np_46947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 49), 'np', False)
    # Obtaining the member 'complex64' of a type (line 80)
    complex64_46948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 49), np_46947, 'complex64')
    keyword_46949 = complex64_46948
    kwargs_46950 = {'dtype': keyword_46949}
    # Getting the type of 'get_blas_funcs' (line 80)
    get_blas_funcs_46943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 11), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 80)
    get_blas_funcs_call_result_46951 = invoke(stypy.reporting.localization.Localization(__file__, 80, 11), get_blas_funcs_46943, *[tuple_46944], **kwargs_46950)
    
    # Obtaining the member '__getitem__' of a type (line 80)
    getitem___46952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 4), get_blas_funcs_call_result_46951, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 80)
    subscript_call_result_46953 = invoke(stypy.reporting.localization.Localization(__file__, 80, 4), getitem___46952, int_46942)
    
    # Assigning a type to the variable 'tuple_var_assignment_46656' (line 80)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 4), 'tuple_var_assignment_46656', subscript_call_result_46953)
    
    # Assigning a Subscript to a Name (line 80):
    
    # Obtaining the type of the subscript
    int_46954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 4), 'int')
    
    # Call to get_blas_funcs(...): (line 80)
    # Processing the call arguments (line 80)
    
    # Obtaining an instance of the builtin type 'tuple' (line 80)
    tuple_46956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 27), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 80)
    # Adding element type (line 80)
    str_46957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 27), 'str', 'nrm2')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 80, 27), tuple_46956, str_46957)
    # Adding element type (line 80)
    str_46958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 35), 'str', 'dot')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 80, 27), tuple_46956, str_46958)
    
    # Processing the call keyword arguments (line 80)
    # Getting the type of 'np' (line 80)
    np_46959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 49), 'np', False)
    # Obtaining the member 'complex64' of a type (line 80)
    complex64_46960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 49), np_46959, 'complex64')
    keyword_46961 = complex64_46960
    kwargs_46962 = {'dtype': keyword_46961}
    # Getting the type of 'get_blas_funcs' (line 80)
    get_blas_funcs_46955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 11), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 80)
    get_blas_funcs_call_result_46963 = invoke(stypy.reporting.localization.Localization(__file__, 80, 11), get_blas_funcs_46955, *[tuple_46956], **kwargs_46962)
    
    # Obtaining the member '__getitem__' of a type (line 80)
    getitem___46964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 4), get_blas_funcs_call_result_46963, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 80)
    subscript_call_result_46965 = invoke(stypy.reporting.localization.Localization(__file__, 80, 4), getitem___46964, int_46954)
    
    # Assigning a type to the variable 'tuple_var_assignment_46657' (line 80)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 4), 'tuple_var_assignment_46657', subscript_call_result_46965)
    
    # Assigning a Name to a Name (line 80):
    # Getting the type of 'tuple_var_assignment_46656' (line 80)
    tuple_var_assignment_46656_46966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 4), 'tuple_var_assignment_46656')
    # Assigning a type to the variable 'f' (line 80)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 4), 'f', tuple_var_assignment_46656_46966)
    
    # Assigning a Name to a Name (line 80):
    # Getting the type of 'tuple_var_assignment_46657' (line 80)
    tuple_var_assignment_46657_46967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 4), 'tuple_var_assignment_46657')
    # Assigning a type to the variable 'g' (line 80)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 7), 'g', tuple_var_assignment_46657_46967)
    # Evaluating assert statement condition
    
    # Getting the type of 'f' (line 81)
    f_46968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 11), 'f')
    # Obtaining the member 'typecode' of a type (line 81)
    typecode_46969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 81, 11), f_46968, 'typecode')
    str_46970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 25), 'str', 'c')
    # Applying the binary operator '==' (line 81)
    result_eq_46971 = python_operator(stypy.reporting.localization.Localization(__file__, 81, 11), '==', typecode_46969, str_46970)
    
    # Evaluating assert statement condition
    
    # Getting the type of 'g' (line 82)
    g_46972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 11), 'g')
    # Obtaining the member 'typecode' of a type (line 82)
    typecode_46973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 11), g_46972, 'typecode')
    str_46974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 82, 25), 'str', 'c')
    # Applying the binary operator '==' (line 82)
    result_eq_46975 = python_operator(stypy.reporting.localization.Localization(__file__, 82, 11), '==', typecode_46973, str_46974)
    
    
    # Assigning a Call to a Tuple (line 84):
    
    # Assigning a Subscript to a Name (line 84):
    
    # Obtaining the type of the subscript
    int_46976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 4), 'int')
    
    # Call to get_blas_funcs(...): (line 84)
    # Processing the call arguments (line 84)
    
    # Obtaining an instance of the builtin type 'tuple' (line 84)
    tuple_46978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 30), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 84)
    # Adding element type (line 84)
    str_46979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 30), 'str', 'dot')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 84, 30), tuple_46978, str_46979)
    # Adding element type (line 84)
    str_46980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 37), 'str', 'dotc')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 84, 30), tuple_46978, str_46980)
    # Adding element type (line 84)
    str_46981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 45), 'str', 'dotu')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 84, 30), tuple_46978, str_46981)
    
    # Processing the call keyword arguments (line 84)
    # Getting the type of 'np' (line 84)
    np_46982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 60), 'np', False)
    # Obtaining the member 'float64' of a type (line 84)
    float64_46983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 60), np_46982, 'float64')
    keyword_46984 = float64_46983
    kwargs_46985 = {'dtype': keyword_46984}
    # Getting the type of 'get_blas_funcs' (line 84)
    get_blas_funcs_46977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 14), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 84)
    get_blas_funcs_call_result_46986 = invoke(stypy.reporting.localization.Localization(__file__, 84, 14), get_blas_funcs_46977, *[tuple_46978], **kwargs_46985)
    
    # Obtaining the member '__getitem__' of a type (line 84)
    getitem___46987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 4), get_blas_funcs_call_result_46986, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 84)
    subscript_call_result_46988 = invoke(stypy.reporting.localization.Localization(__file__, 84, 4), getitem___46987, int_46976)
    
    # Assigning a type to the variable 'tuple_var_assignment_46658' (line 84)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 4), 'tuple_var_assignment_46658', subscript_call_result_46988)
    
    # Assigning a Subscript to a Name (line 84):
    
    # Obtaining the type of the subscript
    int_46989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 4), 'int')
    
    # Call to get_blas_funcs(...): (line 84)
    # Processing the call arguments (line 84)
    
    # Obtaining an instance of the builtin type 'tuple' (line 84)
    tuple_46991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 30), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 84)
    # Adding element type (line 84)
    str_46992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 30), 'str', 'dot')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 84, 30), tuple_46991, str_46992)
    # Adding element type (line 84)
    str_46993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 37), 'str', 'dotc')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 84, 30), tuple_46991, str_46993)
    # Adding element type (line 84)
    str_46994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 45), 'str', 'dotu')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 84, 30), tuple_46991, str_46994)
    
    # Processing the call keyword arguments (line 84)
    # Getting the type of 'np' (line 84)
    np_46995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 60), 'np', False)
    # Obtaining the member 'float64' of a type (line 84)
    float64_46996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 60), np_46995, 'float64')
    keyword_46997 = float64_46996
    kwargs_46998 = {'dtype': keyword_46997}
    # Getting the type of 'get_blas_funcs' (line 84)
    get_blas_funcs_46990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 14), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 84)
    get_blas_funcs_call_result_46999 = invoke(stypy.reporting.localization.Localization(__file__, 84, 14), get_blas_funcs_46990, *[tuple_46991], **kwargs_46998)
    
    # Obtaining the member '__getitem__' of a type (line 84)
    getitem___47000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 4), get_blas_funcs_call_result_46999, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 84)
    subscript_call_result_47001 = invoke(stypy.reporting.localization.Localization(__file__, 84, 4), getitem___47000, int_46989)
    
    # Assigning a type to the variable 'tuple_var_assignment_46659' (line 84)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 4), 'tuple_var_assignment_46659', subscript_call_result_47001)
    
    # Assigning a Subscript to a Name (line 84):
    
    # Obtaining the type of the subscript
    int_47002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 4), 'int')
    
    # Call to get_blas_funcs(...): (line 84)
    # Processing the call arguments (line 84)
    
    # Obtaining an instance of the builtin type 'tuple' (line 84)
    tuple_47004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 30), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 84)
    # Adding element type (line 84)
    str_47005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 30), 'str', 'dot')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 84, 30), tuple_47004, str_47005)
    # Adding element type (line 84)
    str_47006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 37), 'str', 'dotc')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 84, 30), tuple_47004, str_47006)
    # Adding element type (line 84)
    str_47007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 45), 'str', 'dotu')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 84, 30), tuple_47004, str_47007)
    
    # Processing the call keyword arguments (line 84)
    # Getting the type of 'np' (line 84)
    np_47008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 60), 'np', False)
    # Obtaining the member 'float64' of a type (line 84)
    float64_47009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 60), np_47008, 'float64')
    keyword_47010 = float64_47009
    kwargs_47011 = {'dtype': keyword_47010}
    # Getting the type of 'get_blas_funcs' (line 84)
    get_blas_funcs_47003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 14), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 84)
    get_blas_funcs_call_result_47012 = invoke(stypy.reporting.localization.Localization(__file__, 84, 14), get_blas_funcs_47003, *[tuple_47004], **kwargs_47011)
    
    # Obtaining the member '__getitem__' of a type (line 84)
    getitem___47013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 4), get_blas_funcs_call_result_47012, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 84)
    subscript_call_result_47014 = invoke(stypy.reporting.localization.Localization(__file__, 84, 4), getitem___47013, int_47002)
    
    # Assigning a type to the variable 'tuple_var_assignment_46660' (line 84)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 4), 'tuple_var_assignment_46660', subscript_call_result_47014)
    
    # Assigning a Name to a Name (line 84):
    # Getting the type of 'tuple_var_assignment_46658' (line 84)
    tuple_var_assignment_46658_47015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 4), 'tuple_var_assignment_46658')
    # Assigning a type to the variable 'f' (line 84)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 4), 'f', tuple_var_assignment_46658_47015)
    
    # Assigning a Name to a Name (line 84):
    # Getting the type of 'tuple_var_assignment_46659' (line 84)
    tuple_var_assignment_46659_47016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 4), 'tuple_var_assignment_46659')
    # Assigning a type to the variable 'g' (line 84)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 7), 'g', tuple_var_assignment_46659_47016)
    
    # Assigning a Name to a Name (line 84):
    # Getting the type of 'tuple_var_assignment_46660' (line 84)
    tuple_var_assignment_46660_47017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 4), 'tuple_var_assignment_46660')
    # Assigning a type to the variable 'h' (line 84)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 10), 'h', tuple_var_assignment_46660_47017)
    # Evaluating assert statement condition
    
    # Getting the type of 'f' (line 85)
    f_47018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 11), 'f')
    # Getting the type of 'g' (line 85)
    g_47019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 16), 'g')
    # Applying the binary operator 'is' (line 85)
    result_is__47020 = python_operator(stypy.reporting.localization.Localization(__file__, 85, 11), 'is', f_47018, g_47019)
    
    # Evaluating assert statement condition
    
    # Getting the type of 'f' (line 86)
    f_47021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 11), 'f')
    # Getting the type of 'h' (line 86)
    h_47022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'h')
    # Applying the binary operator 'is' (line 86)
    result_is__47023 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 11), 'is', f_47021, h_47022)
    
    
    # ################# End of 'test_get_blas_funcs_alias(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_get_blas_funcs_alias' in the type store
    # Getting the type of 'stypy_return_type' (line 78)
    stypy_return_type_47024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_47024)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_get_blas_funcs_alias'
    return stypy_return_type_47024

# Assigning a type to the variable 'test_get_blas_funcs_alias' (line 78)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 0), 'test_get_blas_funcs_alias', test_get_blas_funcs_alias)
# Declaration of the 'TestCBLAS1Simple' class

class TestCBLAS1Simple(object, ):

    @norecursion
    def test_axpy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_axpy'
        module_type_store = module_type_store.open_function_context('test_axpy', 91, 4, False)
        # Assigning a type to the variable 'self' (line 92)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_localization', localization)
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_function_name', 'TestCBLAS1Simple.test_axpy')
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_param_names_list', [])
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCBLAS1Simple.test_axpy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_axpy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_axpy(...)' code ##################

        
        str_47025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 92)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 92, 8), str_47025)
        # Getting the type of the for loop variable (line 92)
        for_loop_var_47026 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 92, 8), str_47025)
        # Assigning a type to the variable 'p' (line 92)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 8), 'p', for_loop_var_47026)
        # SSA begins for a for statement (line 92)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 93):
        
        # Assigning a Call to a Name (line 93):
        
        # Call to getattr(...): (line 93)
        # Processing the call arguments (line 93)
        # Getting the type of 'cblas' (line 93)
        cblas_47028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 24), 'cblas', False)
        # Getting the type of 'p' (line 93)
        p_47029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 31), 'p', False)
        str_47030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 93, 33), 'str', 'axpy')
        # Applying the binary operator '+' (line 93)
        result_add_47031 = python_operator(stypy.reporting.localization.Localization(__file__, 93, 31), '+', p_47029, str_47030)
        
        # Getting the type of 'None' (line 93)
        None_47032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 41), 'None', False)
        # Processing the call keyword arguments (line 93)
        kwargs_47033 = {}
        # Getting the type of 'getattr' (line 93)
        getattr_47027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 93)
        getattr_call_result_47034 = invoke(stypy.reporting.localization.Localization(__file__, 93, 16), getattr_47027, *[cblas_47028, result_add_47031, None_47032], **kwargs_47033)
        
        # Assigning a type to the variable 'f' (line 93)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 12), 'f', getattr_call_result_47034)
        
        # Type idiom detected: calculating its left and rigth part (line 94)
        # Getting the type of 'f' (line 94)
        f_47035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 15), 'f')
        # Getting the type of 'None' (line 94)
        None_47036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 20), 'None')
        
        (may_be_47037, more_types_in_union_47038) = may_be_none(f_47035, None_47036)

        if may_be_47037:

            if more_types_in_union_47038:
                # Runtime conditional SSA (line 94)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47038:
                # SSA join for if statement (line 94)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 96)
        # Processing the call arguments (line 96)
        
        # Call to f(...): (line 96)
        # Processing the call arguments (line 96)
        
        # Obtaining an instance of the builtin type 'list' (line 96)
        list_47041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 96)
        # Adding element type (line 96)
        int_47042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 40), list_47041, int_47042)
        # Adding element type (line 96)
        int_47043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 40), list_47041, int_47043)
        # Adding element type (line 96)
        int_47044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 40), list_47041, int_47044)
        
        
        # Obtaining an instance of the builtin type 'list' (line 96)
        list_47045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 96)
        # Adding element type (line 96)
        int_47046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 51), list_47045, int_47046)
        # Adding element type (line 96)
        int_47047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 51), list_47045, int_47047)
        # Adding element type (line 96)
        int_47048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 51), list_47045, int_47048)
        
        # Processing the call keyword arguments (line 96)
        int_47049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 65), 'int')
        keyword_47050 = int_47049
        kwargs_47051 = {'a': keyword_47050}
        # Getting the type of 'f' (line 96)
        f_47040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 38), 'f', False)
        # Calling f(args, kwargs) (line 96)
        f_call_result_47052 = invoke(stypy.reporting.localization.Localization(__file__, 96, 38), f_47040, *[list_47041, list_47045], **kwargs_47051)
        
        
        # Obtaining an instance of the builtin type 'list' (line 97)
        list_47053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 97)
        # Adding element type (line 97)
        int_47054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 97, 38), list_47053, int_47054)
        # Adding element type (line 97)
        int_47055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 97, 38), list_47053, int_47055)
        # Adding element type (line 97)
        int_47056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 97, 38), list_47053, int_47056)
        
        # Processing the call keyword arguments (line 96)
        kwargs_47057 = {}
        # Getting the type of 'assert_array_almost_equal' (line 96)
        assert_array_almost_equal_47039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 96)
        assert_array_almost_equal_call_result_47058 = invoke(stypy.reporting.localization.Localization(__file__, 96, 12), assert_array_almost_equal_47039, *[f_call_result_47052, list_47053], **kwargs_47057)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_47059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 98)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 98, 8), str_47059)
        # Getting the type of the for loop variable (line 98)
        for_loop_var_47060 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 98, 8), str_47059)
        # Assigning a type to the variable 'p' (line 98)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 98, 8), 'p', for_loop_var_47060)
        # SSA begins for a for statement (line 98)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 99):
        
        # Assigning a Call to a Name (line 99):
        
        # Call to getattr(...): (line 99)
        # Processing the call arguments (line 99)
        # Getting the type of 'cblas' (line 99)
        cblas_47062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 24), 'cblas', False)
        # Getting the type of 'p' (line 99)
        p_47063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 31), 'p', False)
        str_47064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 33), 'str', 'axpy')
        # Applying the binary operator '+' (line 99)
        result_add_47065 = python_operator(stypy.reporting.localization.Localization(__file__, 99, 31), '+', p_47063, str_47064)
        
        # Getting the type of 'None' (line 99)
        None_47066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 41), 'None', False)
        # Processing the call keyword arguments (line 99)
        kwargs_47067 = {}
        # Getting the type of 'getattr' (line 99)
        getattr_47061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 99)
        getattr_call_result_47068 = invoke(stypy.reporting.localization.Localization(__file__, 99, 16), getattr_47061, *[cblas_47062, result_add_47065, None_47066], **kwargs_47067)
        
        # Assigning a type to the variable 'f' (line 99)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 12), 'f', getattr_call_result_47068)
        
        # Type idiom detected: calculating its left and rigth part (line 100)
        # Getting the type of 'f' (line 100)
        f_47069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 15), 'f')
        # Getting the type of 'None' (line 100)
        None_47070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 20), 'None')
        
        (may_be_47071, more_types_in_union_47072) = may_be_none(f_47069, None_47070)

        if may_be_47071:

            if more_types_in_union_47072:
                # Runtime conditional SSA (line 100)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47072:
                # SSA join for if statement (line 100)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 102)
        # Processing the call arguments (line 102)
        
        # Call to f(...): (line 102)
        # Processing the call arguments (line 102)
        
        # Obtaining an instance of the builtin type 'list' (line 102)
        list_47075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 102)
        # Adding element type (line 102)
        int_47076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 102, 40), list_47075, int_47076)
        # Adding element type (line 102)
        complex_47077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 44), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 102, 40), list_47075, complex_47077)
        # Adding element type (line 102)
        int_47078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 102, 40), list_47075, int_47078)
        
        
        # Obtaining an instance of the builtin type 'list' (line 102)
        list_47079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 52), 'list')
        # Adding type elements to the builtin type 'list' instance (line 102)
        # Adding element type (line 102)
        int_47080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 102, 52), list_47079, int_47080)
        # Adding element type (line 102)
        int_47081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 102, 52), list_47079, int_47081)
        # Adding element type (line 102)
        int_47082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 102, 52), list_47079, int_47082)
        
        # Processing the call keyword arguments (line 102)
        int_47083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 66), 'int')
        keyword_47084 = int_47083
        kwargs_47085 = {'a': keyword_47084}
        # Getting the type of 'f' (line 102)
        f_47074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 38), 'f', False)
        # Calling f(args, kwargs) (line 102)
        f_call_result_47086 = invoke(stypy.reporting.localization.Localization(__file__, 102, 38), f_47074, *[list_47075, list_47079], **kwargs_47085)
        
        
        # Obtaining an instance of the builtin type 'list' (line 103)
        list_47087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 103)
        # Adding element type (line 103)
        int_47088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 103, 38), list_47087, int_47088)
        # Adding element type (line 103)
        complex_47089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 42), 'complex')
        int_47090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 46), 'int')
        # Applying the binary operator '-' (line 103)
        result_sub_47091 = python_operator(stypy.reporting.localization.Localization(__file__, 103, 42), '-', complex_47089, int_47090)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 103, 38), list_47087, result_sub_47091)
        # Adding element type (line 103)
        int_47092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 103, 38), list_47087, int_47092)
        
        # Processing the call keyword arguments (line 102)
        kwargs_47093 = {}
        # Getting the type of 'assert_array_almost_equal' (line 102)
        assert_array_almost_equal_47073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 102)
        assert_array_almost_equal_call_result_47094 = invoke(stypy.reporting.localization.Localization(__file__, 102, 12), assert_array_almost_equal_47073, *[f_call_result_47086, list_47087], **kwargs_47093)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_axpy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_axpy' in the type store
        # Getting the type of 'stypy_return_type' (line 91)
        stypy_return_type_47095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47095)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_axpy'
        return stypy_return_type_47095


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 89, 0, False)
        # Assigning a type to the variable 'self' (line 90)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCBLAS1Simple.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestCBLAS1Simple' (line 89)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 0), 'TestCBLAS1Simple', TestCBLAS1Simple)
# Declaration of the 'TestFBLAS1Simple' class

class TestFBLAS1Simple(object, ):

    @norecursion
    def test_axpy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_axpy'
        module_type_store = module_type_store.open_function_context('test_axpy', 108, 4, False)
        # Assigning a type to the variable 'self' (line 109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_axpy')
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_axpy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_axpy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_axpy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_axpy(...)' code ##################

        
        str_47096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 109)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 109, 8), str_47096)
        # Getting the type of the for loop variable (line 109)
        for_loop_var_47097 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 109, 8), str_47096)
        # Assigning a type to the variable 'p' (line 109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 8), 'p', for_loop_var_47097)
        # SSA begins for a for statement (line 109)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 110):
        
        # Assigning a Call to a Name (line 110):
        
        # Call to getattr(...): (line 110)
        # Processing the call arguments (line 110)
        # Getting the type of 'fblas' (line 110)
        fblas_47099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 24), 'fblas', False)
        # Getting the type of 'p' (line 110)
        p_47100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 31), 'p', False)
        str_47101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 33), 'str', 'axpy')
        # Applying the binary operator '+' (line 110)
        result_add_47102 = python_operator(stypy.reporting.localization.Localization(__file__, 110, 31), '+', p_47100, str_47101)
        
        # Getting the type of 'None' (line 110)
        None_47103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 41), 'None', False)
        # Processing the call keyword arguments (line 110)
        kwargs_47104 = {}
        # Getting the type of 'getattr' (line 110)
        getattr_47098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 110)
        getattr_call_result_47105 = invoke(stypy.reporting.localization.Localization(__file__, 110, 16), getattr_47098, *[fblas_47099, result_add_47102, None_47103], **kwargs_47104)
        
        # Assigning a type to the variable 'f' (line 110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 110, 12), 'f', getattr_call_result_47105)
        
        # Type idiom detected: calculating its left and rigth part (line 111)
        # Getting the type of 'f' (line 111)
        f_47106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 15), 'f')
        # Getting the type of 'None' (line 111)
        None_47107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 20), 'None')
        
        (may_be_47108, more_types_in_union_47109) = may_be_none(f_47106, None_47107)

        if may_be_47108:

            if more_types_in_union_47109:
                # Runtime conditional SSA (line 111)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47109:
                # SSA join for if statement (line 111)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 113)
        # Processing the call arguments (line 113)
        
        # Call to f(...): (line 113)
        # Processing the call arguments (line 113)
        
        # Obtaining an instance of the builtin type 'list' (line 113)
        list_47112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 113)
        # Adding element type (line 113)
        int_47113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 40), list_47112, int_47113)
        # Adding element type (line 113)
        int_47114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 40), list_47112, int_47114)
        # Adding element type (line 113)
        int_47115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 40), list_47112, int_47115)
        
        
        # Obtaining an instance of the builtin type 'list' (line 113)
        list_47116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 113)
        # Adding element type (line 113)
        int_47117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 51), list_47116, int_47117)
        # Adding element type (line 113)
        int_47118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 51), list_47116, int_47118)
        # Adding element type (line 113)
        int_47119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 113, 51), list_47116, int_47119)
        
        # Processing the call keyword arguments (line 113)
        int_47120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 113, 65), 'int')
        keyword_47121 = int_47120
        kwargs_47122 = {'a': keyword_47121}
        # Getting the type of 'f' (line 113)
        f_47111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 38), 'f', False)
        # Calling f(args, kwargs) (line 113)
        f_call_result_47123 = invoke(stypy.reporting.localization.Localization(__file__, 113, 38), f_47111, *[list_47112, list_47116], **kwargs_47122)
        
        
        # Obtaining an instance of the builtin type 'list' (line 114)
        list_47124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 114)
        # Adding element type (line 114)
        int_47125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 114, 38), list_47124, int_47125)
        # Adding element type (line 114)
        int_47126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 114, 38), list_47124, int_47126)
        # Adding element type (line 114)
        int_47127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 114, 38), list_47124, int_47127)
        
        # Processing the call keyword arguments (line 113)
        kwargs_47128 = {}
        # Getting the type of 'assert_array_almost_equal' (line 113)
        assert_array_almost_equal_47110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 113)
        assert_array_almost_equal_call_result_47129 = invoke(stypy.reporting.localization.Localization(__file__, 113, 12), assert_array_almost_equal_47110, *[f_call_result_47123, list_47124], **kwargs_47128)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_47130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 115)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 115, 8), str_47130)
        # Getting the type of the for loop variable (line 115)
        for_loop_var_47131 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 115, 8), str_47130)
        # Assigning a type to the variable 'p' (line 115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 8), 'p', for_loop_var_47131)
        # SSA begins for a for statement (line 115)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 116):
        
        # Assigning a Call to a Name (line 116):
        
        # Call to getattr(...): (line 116)
        # Processing the call arguments (line 116)
        # Getting the type of 'fblas' (line 116)
        fblas_47133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 24), 'fblas', False)
        # Getting the type of 'p' (line 116)
        p_47134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 31), 'p', False)
        str_47135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 116, 33), 'str', 'axpy')
        # Applying the binary operator '+' (line 116)
        result_add_47136 = python_operator(stypy.reporting.localization.Localization(__file__, 116, 31), '+', p_47134, str_47135)
        
        # Getting the type of 'None' (line 116)
        None_47137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 41), 'None', False)
        # Processing the call keyword arguments (line 116)
        kwargs_47138 = {}
        # Getting the type of 'getattr' (line 116)
        getattr_47132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 116)
        getattr_call_result_47139 = invoke(stypy.reporting.localization.Localization(__file__, 116, 16), getattr_47132, *[fblas_47133, result_add_47136, None_47137], **kwargs_47138)
        
        # Assigning a type to the variable 'f' (line 116)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 116, 12), 'f', getattr_call_result_47139)
        
        # Type idiom detected: calculating its left and rigth part (line 117)
        # Getting the type of 'f' (line 117)
        f_47140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 15), 'f')
        # Getting the type of 'None' (line 117)
        None_47141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 20), 'None')
        
        (may_be_47142, more_types_in_union_47143) = may_be_none(f_47140, None_47141)

        if may_be_47142:

            if more_types_in_union_47143:
                # Runtime conditional SSA (line 117)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47143:
                # SSA join for if statement (line 117)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 119)
        # Processing the call arguments (line 119)
        
        # Call to f(...): (line 119)
        # Processing the call arguments (line 119)
        
        # Obtaining an instance of the builtin type 'list' (line 119)
        list_47146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 119)
        # Adding element type (line 119)
        int_47147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 40), list_47146, int_47147)
        # Adding element type (line 119)
        complex_47148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 44), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 40), list_47146, complex_47148)
        # Adding element type (line 119)
        int_47149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 40), list_47146, int_47149)
        
        
        # Obtaining an instance of the builtin type 'list' (line 119)
        list_47150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 52), 'list')
        # Adding type elements to the builtin type 'list' instance (line 119)
        # Adding element type (line 119)
        int_47151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 52), list_47150, int_47151)
        # Adding element type (line 119)
        int_47152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 52), list_47150, int_47152)
        # Adding element type (line 119)
        int_47153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 119, 52), list_47150, int_47153)
        
        # Processing the call keyword arguments (line 119)
        int_47154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 119, 66), 'int')
        keyword_47155 = int_47154
        kwargs_47156 = {'a': keyword_47155}
        # Getting the type of 'f' (line 119)
        f_47145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 38), 'f', False)
        # Calling f(args, kwargs) (line 119)
        f_call_result_47157 = invoke(stypy.reporting.localization.Localization(__file__, 119, 38), f_47145, *[list_47146, list_47150], **kwargs_47156)
        
        
        # Obtaining an instance of the builtin type 'list' (line 120)
        list_47158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 120)
        # Adding element type (line 120)
        int_47159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 120, 38), list_47158, int_47159)
        # Adding element type (line 120)
        complex_47160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 42), 'complex')
        int_47161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 46), 'int')
        # Applying the binary operator '-' (line 120)
        result_sub_47162 = python_operator(stypy.reporting.localization.Localization(__file__, 120, 42), '-', complex_47160, int_47161)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 120, 38), list_47158, result_sub_47162)
        # Adding element type (line 120)
        int_47163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 120, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 120, 38), list_47158, int_47163)
        
        # Processing the call keyword arguments (line 119)
        kwargs_47164 = {}
        # Getting the type of 'assert_array_almost_equal' (line 119)
        assert_array_almost_equal_47144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 119)
        assert_array_almost_equal_call_result_47165 = invoke(stypy.reporting.localization.Localization(__file__, 119, 12), assert_array_almost_equal_47144, *[f_call_result_47157, list_47158], **kwargs_47164)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_axpy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_axpy' in the type store
        # Getting the type of 'stypy_return_type' (line 108)
        stypy_return_type_47166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47166)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_axpy'
        return stypy_return_type_47166


    @norecursion
    def test_copy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_copy'
        module_type_store = module_type_store.open_function_context('test_copy', 122, 4, False)
        # Assigning a type to the variable 'self' (line 123)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 123, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_copy')
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_copy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_copy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_copy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_copy(...)' code ##################

        
        str_47167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 123)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 123, 8), str_47167)
        # Getting the type of the for loop variable (line 123)
        for_loop_var_47168 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 123, 8), str_47167)
        # Assigning a type to the variable 'p' (line 123)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 123, 8), 'p', for_loop_var_47168)
        # SSA begins for a for statement (line 123)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 124):
        
        # Assigning a Call to a Name (line 124):
        
        # Call to getattr(...): (line 124)
        # Processing the call arguments (line 124)
        # Getting the type of 'fblas' (line 124)
        fblas_47170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 24), 'fblas', False)
        # Getting the type of 'p' (line 124)
        p_47171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 31), 'p', False)
        str_47172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 124, 33), 'str', 'copy')
        # Applying the binary operator '+' (line 124)
        result_add_47173 = python_operator(stypy.reporting.localization.Localization(__file__, 124, 31), '+', p_47171, str_47172)
        
        # Getting the type of 'None' (line 124)
        None_47174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 41), 'None', False)
        # Processing the call keyword arguments (line 124)
        kwargs_47175 = {}
        # Getting the type of 'getattr' (line 124)
        getattr_47169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 124)
        getattr_call_result_47176 = invoke(stypy.reporting.localization.Localization(__file__, 124, 16), getattr_47169, *[fblas_47170, result_add_47173, None_47174], **kwargs_47175)
        
        # Assigning a type to the variable 'f' (line 124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 12), 'f', getattr_call_result_47176)
        
        # Type idiom detected: calculating its left and rigth part (line 125)
        # Getting the type of 'f' (line 125)
        f_47177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 15), 'f')
        # Getting the type of 'None' (line 125)
        None_47178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 20), 'None')
        
        (may_be_47179, more_types_in_union_47180) = may_be_none(f_47177, None_47178)

        if may_be_47179:

            if more_types_in_union_47180:
                # Runtime conditional SSA (line 125)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47180:
                # SSA join for if statement (line 125)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 127)
        # Processing the call arguments (line 127)
        
        # Call to f(...): (line 127)
        # Processing the call arguments (line 127)
        
        # Obtaining an instance of the builtin type 'list' (line 127)
        list_47183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 127)
        # Adding element type (line 127)
        int_47184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 40), list_47183, int_47184)
        # Adding element type (line 127)
        int_47185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 40), list_47183, int_47185)
        # Adding element type (line 127)
        int_47186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 40), list_47183, int_47186)
        
        
        # Obtaining an instance of the builtin type 'list' (line 127)
        list_47187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 127)
        # Adding element type (line 127)
        int_47188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 51), list_47187, int_47188)
        
        int_47189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 55), 'int')
        # Applying the binary operator '*' (line 127)
        result_mul_47190 = python_operator(stypy.reporting.localization.Localization(__file__, 127, 51), '*', list_47187, int_47189)
        
        # Processing the call keyword arguments (line 127)
        kwargs_47191 = {}
        # Getting the type of 'f' (line 127)
        f_47182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 38), 'f', False)
        # Calling f(args, kwargs) (line 127)
        f_call_result_47192 = invoke(stypy.reporting.localization.Localization(__file__, 127, 38), f_47182, *[list_47183, result_mul_47190], **kwargs_47191)
        
        
        # Obtaining an instance of the builtin type 'list' (line 127)
        list_47193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 127)
        # Adding element type (line 127)
        int_47194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 59), list_47193, int_47194)
        # Adding element type (line 127)
        int_47195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 59), list_47193, int_47195)
        # Adding element type (line 127)
        int_47196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 59), list_47193, int_47196)
        
        # Processing the call keyword arguments (line 127)
        kwargs_47197 = {}
        # Getting the type of 'assert_array_almost_equal' (line 127)
        assert_array_almost_equal_47181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 127, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 127)
        assert_array_almost_equal_call_result_47198 = invoke(stypy.reporting.localization.Localization(__file__, 127, 12), assert_array_almost_equal_47181, *[f_call_result_47192, list_47193], **kwargs_47197)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_47199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 128)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 128, 8), str_47199)
        # Getting the type of the for loop variable (line 128)
        for_loop_var_47200 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 128, 8), str_47199)
        # Assigning a type to the variable 'p' (line 128)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 8), 'p', for_loop_var_47200)
        # SSA begins for a for statement (line 128)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 129):
        
        # Assigning a Call to a Name (line 129):
        
        # Call to getattr(...): (line 129)
        # Processing the call arguments (line 129)
        # Getting the type of 'fblas' (line 129)
        fblas_47202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 24), 'fblas', False)
        # Getting the type of 'p' (line 129)
        p_47203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 31), 'p', False)
        str_47204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 33), 'str', 'copy')
        # Applying the binary operator '+' (line 129)
        result_add_47205 = python_operator(stypy.reporting.localization.Localization(__file__, 129, 31), '+', p_47203, str_47204)
        
        # Getting the type of 'None' (line 129)
        None_47206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 41), 'None', False)
        # Processing the call keyword arguments (line 129)
        kwargs_47207 = {}
        # Getting the type of 'getattr' (line 129)
        getattr_47201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 129)
        getattr_call_result_47208 = invoke(stypy.reporting.localization.Localization(__file__, 129, 16), getattr_47201, *[fblas_47202, result_add_47205, None_47206], **kwargs_47207)
        
        # Assigning a type to the variable 'f' (line 129)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 129, 12), 'f', getattr_call_result_47208)
        
        # Type idiom detected: calculating its left and rigth part (line 130)
        # Getting the type of 'f' (line 130)
        f_47209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 15), 'f')
        # Getting the type of 'None' (line 130)
        None_47210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 20), 'None')
        
        (may_be_47211, more_types_in_union_47212) = may_be_none(f_47209, None_47210)

        if may_be_47211:

            if more_types_in_union_47212:
                # Runtime conditional SSA (line 130)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47212:
                # SSA join for if statement (line 130)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 132)
        # Processing the call arguments (line 132)
        
        # Call to f(...): (line 132)
        # Processing the call arguments (line 132)
        
        # Obtaining an instance of the builtin type 'list' (line 132)
        list_47215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 132)
        # Adding element type (line 132)
        int_47216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 40), list_47215, int_47216)
        # Adding element type (line 132)
        complex_47217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 44), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 40), list_47215, complex_47217)
        # Adding element type (line 132)
        int_47218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 48), 'int')
        complex_47219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 50), 'complex')
        # Applying the binary operator '+' (line 132)
        result_add_47220 = python_operator(stypy.reporting.localization.Localization(__file__, 132, 48), '+', int_47218, complex_47219)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 40), list_47215, result_add_47220)
        
        
        # Obtaining an instance of the builtin type 'list' (line 132)
        list_47221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 132)
        # Adding element type (line 132)
        int_47222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 55), list_47221, int_47222)
        
        int_47223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 59), 'int')
        # Applying the binary operator '*' (line 132)
        result_mul_47224 = python_operator(stypy.reporting.localization.Localization(__file__, 132, 55), '*', list_47221, int_47223)
        
        # Processing the call keyword arguments (line 132)
        kwargs_47225 = {}
        # Getting the type of 'f' (line 132)
        f_47214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 38), 'f', False)
        # Calling f(args, kwargs) (line 132)
        f_call_result_47226 = invoke(stypy.reporting.localization.Localization(__file__, 132, 38), f_47214, *[list_47215, result_mul_47224], **kwargs_47225)
        
        
        # Obtaining an instance of the builtin type 'list' (line 132)
        list_47227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 63), 'list')
        # Adding type elements to the builtin type 'list' instance (line 132)
        # Adding element type (line 132)
        int_47228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 64), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 63), list_47227, int_47228)
        # Adding element type (line 132)
        complex_47229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 67), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 63), list_47227, complex_47229)
        # Adding element type (line 132)
        int_47230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 71), 'int')
        complex_47231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 73), 'complex')
        # Applying the binary operator '+' (line 132)
        result_add_47232 = python_operator(stypy.reporting.localization.Localization(__file__, 132, 71), '+', int_47230, complex_47231)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 63), list_47227, result_add_47232)
        
        # Processing the call keyword arguments (line 132)
        kwargs_47233 = {}
        # Getting the type of 'assert_array_almost_equal' (line 132)
        assert_array_almost_equal_47213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 132)
        assert_array_almost_equal_call_result_47234 = invoke(stypy.reporting.localization.Localization(__file__, 132, 12), assert_array_almost_equal_47213, *[f_call_result_47226, list_47227], **kwargs_47233)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_copy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_copy' in the type store
        # Getting the type of 'stypy_return_type' (line 122)
        stypy_return_type_47235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47235)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_copy'
        return stypy_return_type_47235


    @norecursion
    def test_asum(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_asum'
        module_type_store = module_type_store.open_function_context('test_asum', 134, 4, False)
        # Assigning a type to the variable 'self' (line 135)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 135, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_asum')
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_asum.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_asum', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_asum', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_asum(...)' code ##################

        
        str_47236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 135)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 135, 8), str_47236)
        # Getting the type of the for loop variable (line 135)
        for_loop_var_47237 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 135, 8), str_47236)
        # Assigning a type to the variable 'p' (line 135)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 135, 8), 'p', for_loop_var_47237)
        # SSA begins for a for statement (line 135)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 136):
        
        # Assigning a Call to a Name (line 136):
        
        # Call to getattr(...): (line 136)
        # Processing the call arguments (line 136)
        # Getting the type of 'fblas' (line 136)
        fblas_47239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 24), 'fblas', False)
        # Getting the type of 'p' (line 136)
        p_47240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 31), 'p', False)
        str_47241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 33), 'str', 'asum')
        # Applying the binary operator '+' (line 136)
        result_add_47242 = python_operator(stypy.reporting.localization.Localization(__file__, 136, 31), '+', p_47240, str_47241)
        
        # Getting the type of 'None' (line 136)
        None_47243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 41), 'None', False)
        # Processing the call keyword arguments (line 136)
        kwargs_47244 = {}
        # Getting the type of 'getattr' (line 136)
        getattr_47238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 136)
        getattr_call_result_47245 = invoke(stypy.reporting.localization.Localization(__file__, 136, 16), getattr_47238, *[fblas_47239, result_add_47242, None_47243], **kwargs_47244)
        
        # Assigning a type to the variable 'f' (line 136)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 136, 12), 'f', getattr_call_result_47245)
        
        # Type idiom detected: calculating its left and rigth part (line 137)
        # Getting the type of 'f' (line 137)
        f_47246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 15), 'f')
        # Getting the type of 'None' (line 137)
        None_47247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 20), 'None')
        
        (may_be_47248, more_types_in_union_47249) = may_be_none(f_47246, None_47247)

        if may_be_47248:

            if more_types_in_union_47249:
                # Runtime conditional SSA (line 137)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47249:
                # SSA join for if statement (line 137)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_almost_equal(...): (line 139)
        # Processing the call arguments (line 139)
        
        # Call to f(...): (line 139)
        # Processing the call arguments (line 139)
        
        # Obtaining an instance of the builtin type 'list' (line 139)
        list_47252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 139)
        # Adding element type (line 139)
        int_47253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 34), list_47252, int_47253)
        # Adding element type (line 139)
        int_47254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 34), list_47252, int_47254)
        # Adding element type (line 139)
        int_47255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 34), list_47252, int_47255)
        
        # Processing the call keyword arguments (line 139)
        kwargs_47256 = {}
        # Getting the type of 'f' (line 139)
        f_47251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 32), 'f', False)
        # Calling f(args, kwargs) (line 139)
        f_call_result_47257 = invoke(stypy.reporting.localization.Localization(__file__, 139, 32), f_47251, *[list_47252], **kwargs_47256)
        
        int_47258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 47), 'int')
        # Processing the call keyword arguments (line 139)
        kwargs_47259 = {}
        # Getting the type of 'assert_almost_equal' (line 139)
        assert_almost_equal_47250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 139, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 139)
        assert_almost_equal_call_result_47260 = invoke(stypy.reporting.localization.Localization(__file__, 139, 12), assert_almost_equal_47250, *[f_call_result_47257, int_47258], **kwargs_47259)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Obtaining an instance of the builtin type 'list' (line 140)
        list_47261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 140)
        # Adding element type (line 140)
        str_47262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 18), 'str', 'sc')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 17), list_47261, str_47262)
        # Adding element type (line 140)
        str_47263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 24), 'str', 'dz')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 17), list_47261, str_47263)
        
        # Testing the type of a for loop iterable (line 140)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 140, 8), list_47261)
        # Getting the type of the for loop variable (line 140)
        for_loop_var_47264 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 140, 8), list_47261)
        # Assigning a type to the variable 'p' (line 140)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 140, 8), 'p', for_loop_var_47264)
        # SSA begins for a for statement (line 140)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 141):
        
        # Assigning a Call to a Name (line 141):
        
        # Call to getattr(...): (line 141)
        # Processing the call arguments (line 141)
        # Getting the type of 'fblas' (line 141)
        fblas_47266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 24), 'fblas', False)
        # Getting the type of 'p' (line 141)
        p_47267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 31), 'p', False)
        str_47268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 33), 'str', 'asum')
        # Applying the binary operator '+' (line 141)
        result_add_47269 = python_operator(stypy.reporting.localization.Localization(__file__, 141, 31), '+', p_47267, str_47268)
        
        # Getting the type of 'None' (line 141)
        None_47270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 41), 'None', False)
        # Processing the call keyword arguments (line 141)
        kwargs_47271 = {}
        # Getting the type of 'getattr' (line 141)
        getattr_47265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 141)
        getattr_call_result_47272 = invoke(stypy.reporting.localization.Localization(__file__, 141, 16), getattr_47265, *[fblas_47266, result_add_47269, None_47270], **kwargs_47271)
        
        # Assigning a type to the variable 'f' (line 141)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 12), 'f', getattr_call_result_47272)
        
        # Type idiom detected: calculating its left and rigth part (line 142)
        # Getting the type of 'f' (line 142)
        f_47273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 15), 'f')
        # Getting the type of 'None' (line 142)
        None_47274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 20), 'None')
        
        (may_be_47275, more_types_in_union_47276) = may_be_none(f_47273, None_47274)

        if may_be_47275:

            if more_types_in_union_47276:
                # Runtime conditional SSA (line 142)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47276:
                # SSA join for if statement (line 142)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_almost_equal(...): (line 144)
        # Processing the call arguments (line 144)
        
        # Call to f(...): (line 144)
        # Processing the call arguments (line 144)
        
        # Obtaining an instance of the builtin type 'list' (line 144)
        list_47279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 144)
        # Adding element type (line 144)
        complex_47280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 35), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 34), list_47279, complex_47280)
        # Adding element type (line 144)
        int_47281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 34), list_47279, int_47281)
        # Adding element type (line 144)
        int_47282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 43), 'int')
        complex_47283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 45), 'complex')
        # Applying the binary operator '-' (line 144)
        result_sub_47284 = python_operator(stypy.reporting.localization.Localization(__file__, 144, 43), '-', int_47282, complex_47283)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 144, 34), list_47279, result_sub_47284)
        
        # Processing the call keyword arguments (line 144)
        kwargs_47285 = {}
        # Getting the type of 'f' (line 144)
        f_47278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 32), 'f', False)
        # Calling f(args, kwargs) (line 144)
        f_call_result_47286 = invoke(stypy.reporting.localization.Localization(__file__, 144, 32), f_47278, *[list_47279], **kwargs_47285)
        
        int_47287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 51), 'int')
        # Processing the call keyword arguments (line 144)
        kwargs_47288 = {}
        # Getting the type of 'assert_almost_equal' (line 144)
        assert_almost_equal_47277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 144)
        assert_almost_equal_call_result_47289 = invoke(stypy.reporting.localization.Localization(__file__, 144, 12), assert_almost_equal_47277, *[f_call_result_47286, int_47287], **kwargs_47288)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_asum(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_asum' in the type store
        # Getting the type of 'stypy_return_type' (line 134)
        stypy_return_type_47290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47290)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_asum'
        return stypy_return_type_47290


    @norecursion
    def test_dot(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_dot'
        module_type_store = module_type_store.open_function_context('test_dot', 146, 4, False)
        # Assigning a type to the variable 'self' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_dot')
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_dot.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_dot', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_dot', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_dot(...)' code ##################

        
        str_47291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 147)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 147, 8), str_47291)
        # Getting the type of the for loop variable (line 147)
        for_loop_var_47292 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 147, 8), str_47291)
        # Assigning a type to the variable 'p' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 8), 'p', for_loop_var_47292)
        # SSA begins for a for statement (line 147)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 148):
        
        # Assigning a Call to a Name (line 148):
        
        # Call to getattr(...): (line 148)
        # Processing the call arguments (line 148)
        # Getting the type of 'fblas' (line 148)
        fblas_47294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 24), 'fblas', False)
        # Getting the type of 'p' (line 148)
        p_47295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 31), 'p', False)
        str_47296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 33), 'str', 'dot')
        # Applying the binary operator '+' (line 148)
        result_add_47297 = python_operator(stypy.reporting.localization.Localization(__file__, 148, 31), '+', p_47295, str_47296)
        
        # Getting the type of 'None' (line 148)
        None_47298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 40), 'None', False)
        # Processing the call keyword arguments (line 148)
        kwargs_47299 = {}
        # Getting the type of 'getattr' (line 148)
        getattr_47293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 148)
        getattr_call_result_47300 = invoke(stypy.reporting.localization.Localization(__file__, 148, 16), getattr_47293, *[fblas_47294, result_add_47297, None_47298], **kwargs_47299)
        
        # Assigning a type to the variable 'f' (line 148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 148, 12), 'f', getattr_call_result_47300)
        
        # Type idiom detected: calculating its left and rigth part (line 149)
        # Getting the type of 'f' (line 149)
        f_47301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 15), 'f')
        # Getting the type of 'None' (line 149)
        None_47302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 20), 'None')
        
        (may_be_47303, more_types_in_union_47304) = may_be_none(f_47301, None_47302)

        if may_be_47303:

            if more_types_in_union_47304:
                # Runtime conditional SSA (line 149)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47304:
                # SSA join for if statement (line 149)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_almost_equal(...): (line 151)
        # Processing the call arguments (line 151)
        
        # Call to f(...): (line 151)
        # Processing the call arguments (line 151)
        
        # Obtaining an instance of the builtin type 'list' (line 151)
        list_47307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 151)
        # Adding element type (line 151)
        int_47308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 34), list_47307, int_47308)
        # Adding element type (line 151)
        int_47309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 34), list_47307, int_47309)
        # Adding element type (line 151)
        int_47310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 34), list_47307, int_47310)
        
        
        # Obtaining an instance of the builtin type 'list' (line 151)
        list_47311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 46), 'list')
        # Adding type elements to the builtin type 'list' instance (line 151)
        # Adding element type (line 151)
        int_47312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 46), list_47311, int_47312)
        # Adding element type (line 151)
        int_47313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 46), list_47311, int_47313)
        # Adding element type (line 151)
        int_47314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 46), list_47311, int_47314)
        
        # Processing the call keyword arguments (line 151)
        kwargs_47315 = {}
        # Getting the type of 'f' (line 151)
        f_47306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 32), 'f', False)
        # Calling f(args, kwargs) (line 151)
        f_call_result_47316 = invoke(stypy.reporting.localization.Localization(__file__, 151, 32), f_47306, *[list_47307, list_47311], **kwargs_47315)
        
        int_47317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 58), 'int')
        # Processing the call keyword arguments (line 151)
        kwargs_47318 = {}
        # Getting the type of 'assert_almost_equal' (line 151)
        assert_almost_equal_47305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 151)
        assert_almost_equal_call_result_47319 = invoke(stypy.reporting.localization.Localization(__file__, 151, 12), assert_almost_equal_47305, *[f_call_result_47316, int_47317], **kwargs_47318)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_dot(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_dot' in the type store
        # Getting the type of 'stypy_return_type' (line 146)
        stypy_return_type_47320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47320)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_dot'
        return stypy_return_type_47320


    @norecursion
    def test_complex_dotu(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_complex_dotu'
        module_type_store = module_type_store.open_function_context('test_complex_dotu', 153, 4, False)
        # Assigning a type to the variable 'self' (line 154)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 154, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_complex_dotu')
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_complex_dotu.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_complex_dotu', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_complex_dotu', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_complex_dotu(...)' code ##################

        
        str_47321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 154)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 154, 8), str_47321)
        # Getting the type of the for loop variable (line 154)
        for_loop_var_47322 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 154, 8), str_47321)
        # Assigning a type to the variable 'p' (line 154)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 154, 8), 'p', for_loop_var_47322)
        # SSA begins for a for statement (line 154)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 155):
        
        # Assigning a Call to a Name (line 155):
        
        # Call to getattr(...): (line 155)
        # Processing the call arguments (line 155)
        # Getting the type of 'fblas' (line 155)
        fblas_47324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 24), 'fblas', False)
        # Getting the type of 'p' (line 155)
        p_47325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 31), 'p', False)
        str_47326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 155, 33), 'str', 'dotu')
        # Applying the binary operator '+' (line 155)
        result_add_47327 = python_operator(stypy.reporting.localization.Localization(__file__, 155, 31), '+', p_47325, str_47326)
        
        # Getting the type of 'None' (line 155)
        None_47328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 41), 'None', False)
        # Processing the call keyword arguments (line 155)
        kwargs_47329 = {}
        # Getting the type of 'getattr' (line 155)
        getattr_47323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 155)
        getattr_call_result_47330 = invoke(stypy.reporting.localization.Localization(__file__, 155, 16), getattr_47323, *[fblas_47324, result_add_47327, None_47328], **kwargs_47329)
        
        # Assigning a type to the variable 'f' (line 155)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'f', getattr_call_result_47330)
        
        # Type idiom detected: calculating its left and rigth part (line 156)
        # Getting the type of 'f' (line 156)
        f_47331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 15), 'f')
        # Getting the type of 'None' (line 156)
        None_47332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 20), 'None')
        
        (may_be_47333, more_types_in_union_47334) = may_be_none(f_47331, None_47332)

        if may_be_47333:

            if more_types_in_union_47334:
                # Runtime conditional SSA (line 156)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47334:
                # SSA join for if statement (line 156)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_almost_equal(...): (line 158)
        # Processing the call arguments (line 158)
        
        # Call to f(...): (line 158)
        # Processing the call arguments (line 158)
        
        # Obtaining an instance of the builtin type 'list' (line 158)
        list_47337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 158)
        # Adding element type (line 158)
        complex_47338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 35), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 34), list_47337, complex_47338)
        # Adding element type (line 158)
        int_47339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 34), list_47337, int_47339)
        # Adding element type (line 158)
        int_47340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 43), 'int')
        complex_47341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 45), 'complex')
        # Applying the binary operator '-' (line 158)
        result_sub_47342 = python_operator(stypy.reporting.localization.Localization(__file__, 158, 43), '-', int_47340, complex_47341)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 34), list_47337, result_sub_47342)
        
        
        # Obtaining an instance of the builtin type 'list' (line 158)
        list_47343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 158)
        # Adding element type (line 158)
        int_47344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 50), list_47343, int_47344)
        # Adding element type (line 158)
        int_47345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 50), list_47343, int_47345)
        # Adding element type (line 158)
        int_47346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 158, 50), list_47343, int_47346)
        
        # Processing the call keyword arguments (line 158)
        kwargs_47347 = {}
        # Getting the type of 'f' (line 158)
        f_47336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 32), 'f', False)
        # Calling f(args, kwargs) (line 158)
        f_call_result_47348 = invoke(stypy.reporting.localization.Localization(__file__, 158, 32), f_47336, *[list_47337, list_47343], **kwargs_47347)
        
        int_47349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 62), 'int')
        complex_47350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 65), 'complex')
        # Applying the binary operator '+' (line 158)
        result_add_47351 = python_operator(stypy.reporting.localization.Localization(__file__, 158, 62), '+', int_47349, complex_47350)
        
        # Processing the call keyword arguments (line 158)
        kwargs_47352 = {}
        # Getting the type of 'assert_almost_equal' (line 158)
        assert_almost_equal_47335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 158)
        assert_almost_equal_call_result_47353 = invoke(stypy.reporting.localization.Localization(__file__, 158, 12), assert_almost_equal_47335, *[f_call_result_47348, result_add_47351], **kwargs_47352)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_complex_dotu(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_complex_dotu' in the type store
        # Getting the type of 'stypy_return_type' (line 153)
        stypy_return_type_47354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47354)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_complex_dotu'
        return stypy_return_type_47354


    @norecursion
    def test_complex_dotc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_complex_dotc'
        module_type_store = module_type_store.open_function_context('test_complex_dotc', 160, 4, False)
        # Assigning a type to the variable 'self' (line 161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 161, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_complex_dotc')
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_complex_dotc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_complex_dotc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_complex_dotc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_complex_dotc(...)' code ##################

        
        str_47355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 161, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 161)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 161, 8), str_47355)
        # Getting the type of the for loop variable (line 161)
        for_loop_var_47356 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 161, 8), str_47355)
        # Assigning a type to the variable 'p' (line 161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 161, 8), 'p', for_loop_var_47356)
        # SSA begins for a for statement (line 161)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 162):
        
        # Assigning a Call to a Name (line 162):
        
        # Call to getattr(...): (line 162)
        # Processing the call arguments (line 162)
        # Getting the type of 'fblas' (line 162)
        fblas_47358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 24), 'fblas', False)
        # Getting the type of 'p' (line 162)
        p_47359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 31), 'p', False)
        str_47360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 33), 'str', 'dotc')
        # Applying the binary operator '+' (line 162)
        result_add_47361 = python_operator(stypy.reporting.localization.Localization(__file__, 162, 31), '+', p_47359, str_47360)
        
        # Getting the type of 'None' (line 162)
        None_47362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 41), 'None', False)
        # Processing the call keyword arguments (line 162)
        kwargs_47363 = {}
        # Getting the type of 'getattr' (line 162)
        getattr_47357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 162)
        getattr_call_result_47364 = invoke(stypy.reporting.localization.Localization(__file__, 162, 16), getattr_47357, *[fblas_47358, result_add_47361, None_47362], **kwargs_47363)
        
        # Assigning a type to the variable 'f' (line 162)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 162, 12), 'f', getattr_call_result_47364)
        
        # Type idiom detected: calculating its left and rigth part (line 163)
        # Getting the type of 'f' (line 163)
        f_47365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 15), 'f')
        # Getting the type of 'None' (line 163)
        None_47366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 20), 'None')
        
        (may_be_47367, more_types_in_union_47368) = may_be_none(f_47365, None_47366)

        if may_be_47367:

            if more_types_in_union_47368:
                # Runtime conditional SSA (line 163)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47368:
                # SSA join for if statement (line 163)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_almost_equal(...): (line 165)
        # Processing the call arguments (line 165)
        
        # Call to f(...): (line 165)
        # Processing the call arguments (line 165)
        
        # Obtaining an instance of the builtin type 'list' (line 165)
        list_47371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 165)
        # Adding element type (line 165)
        complex_47372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 35), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 34), list_47371, complex_47372)
        # Adding element type (line 165)
        int_47373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 34), list_47371, int_47373)
        # Adding element type (line 165)
        int_47374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 43), 'int')
        complex_47375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 45), 'complex')
        # Applying the binary operator '-' (line 165)
        result_sub_47376 = python_operator(stypy.reporting.localization.Localization(__file__, 165, 43), '-', int_47374, complex_47375)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 34), list_47371, result_sub_47376)
        
        
        # Obtaining an instance of the builtin type 'list' (line 165)
        list_47377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 165)
        # Adding element type (line 165)
        int_47378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 50), list_47377, int_47378)
        # Adding element type (line 165)
        complex_47379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 54), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 50), list_47377, complex_47379)
        # Adding element type (line 165)
        int_47380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 165, 50), list_47377, int_47380)
        
        # Processing the call keyword arguments (line 165)
        kwargs_47381 = {}
        # Getting the type of 'f' (line 165)
        f_47370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 32), 'f', False)
        # Calling f(args, kwargs) (line 165)
        f_call_result_47382 = invoke(stypy.reporting.localization.Localization(__file__, 165, 32), f_47370, *[list_47371, list_47377], **kwargs_47381)
        
        int_47383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 63), 'int')
        complex_47384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 165, 65), 'complex')
        # Applying the binary operator '-' (line 165)
        result_sub_47385 = python_operator(stypy.reporting.localization.Localization(__file__, 165, 63), '-', int_47383, complex_47384)
        
        # Processing the call keyword arguments (line 165)
        kwargs_47386 = {}
        # Getting the type of 'assert_almost_equal' (line 165)
        assert_almost_equal_47369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 165)
        assert_almost_equal_call_result_47387 = invoke(stypy.reporting.localization.Localization(__file__, 165, 12), assert_almost_equal_47369, *[f_call_result_47382, result_sub_47385], **kwargs_47386)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_complex_dotc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_complex_dotc' in the type store
        # Getting the type of 'stypy_return_type' (line 160)
        stypy_return_type_47388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47388)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_complex_dotc'
        return stypy_return_type_47388


    @norecursion
    def test_nrm2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_nrm2'
        module_type_store = module_type_store.open_function_context('test_nrm2', 167, 4, False)
        # Assigning a type to the variable 'self' (line 168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_nrm2')
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_nrm2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_nrm2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_nrm2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_nrm2(...)' code ##################

        
        str_47389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 168)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 168, 8), str_47389)
        # Getting the type of the for loop variable (line 168)
        for_loop_var_47390 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 168, 8), str_47389)
        # Assigning a type to the variable 'p' (line 168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 8), 'p', for_loop_var_47390)
        # SSA begins for a for statement (line 168)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 169):
        
        # Assigning a Call to a Name (line 169):
        
        # Call to getattr(...): (line 169)
        # Processing the call arguments (line 169)
        # Getting the type of 'fblas' (line 169)
        fblas_47392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 24), 'fblas', False)
        # Getting the type of 'p' (line 169)
        p_47393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 31), 'p', False)
        str_47394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 33), 'str', 'nrm2')
        # Applying the binary operator '+' (line 169)
        result_add_47395 = python_operator(stypy.reporting.localization.Localization(__file__, 169, 31), '+', p_47393, str_47394)
        
        # Getting the type of 'None' (line 169)
        None_47396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 41), 'None', False)
        # Processing the call keyword arguments (line 169)
        kwargs_47397 = {}
        # Getting the type of 'getattr' (line 169)
        getattr_47391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 169)
        getattr_call_result_47398 = invoke(stypy.reporting.localization.Localization(__file__, 169, 16), getattr_47391, *[fblas_47392, result_add_47395, None_47396], **kwargs_47397)
        
        # Assigning a type to the variable 'f' (line 169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 169, 12), 'f', getattr_call_result_47398)
        
        # Type idiom detected: calculating its left and rigth part (line 170)
        # Getting the type of 'f' (line 170)
        f_47399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 15), 'f')
        # Getting the type of 'None' (line 170)
        None_47400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 20), 'None')
        
        (may_be_47401, more_types_in_union_47402) = may_be_none(f_47399, None_47400)

        if may_be_47401:

            if more_types_in_union_47402:
                # Runtime conditional SSA (line 170)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47402:
                # SSA join for if statement (line 170)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_almost_equal(...): (line 172)
        # Processing the call arguments (line 172)
        
        # Call to f(...): (line 172)
        # Processing the call arguments (line 172)
        
        # Obtaining an instance of the builtin type 'list' (line 172)
        list_47405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 172)
        # Adding element type (line 172)
        int_47406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 172, 34), list_47405, int_47406)
        # Adding element type (line 172)
        int_47407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 172, 34), list_47405, int_47407)
        # Adding element type (line 172)
        int_47408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 172, 34), list_47405, int_47408)
        
        # Processing the call keyword arguments (line 172)
        kwargs_47409 = {}
        # Getting the type of 'f' (line 172)
        f_47404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 32), 'f', False)
        # Calling f(args, kwargs) (line 172)
        f_call_result_47410 = invoke(stypy.reporting.localization.Localization(__file__, 172, 32), f_47404, *[list_47405], **kwargs_47409)
        
        
        # Call to sqrt(...): (line 172)
        # Processing the call arguments (line 172)
        int_47413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 57), 'int')
        # Processing the call keyword arguments (line 172)
        kwargs_47414 = {}
        # Getting the type of 'math' (line 172)
        math_47411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 47), 'math', False)
        # Obtaining the member 'sqrt' of a type (line 172)
        sqrt_47412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 47), math_47411, 'sqrt')
        # Calling sqrt(args, kwargs) (line 172)
        sqrt_call_result_47415 = invoke(stypy.reporting.localization.Localization(__file__, 172, 47), sqrt_47412, *[int_47413], **kwargs_47414)
        
        # Processing the call keyword arguments (line 172)
        kwargs_47416 = {}
        # Getting the type of 'assert_almost_equal' (line 172)
        assert_almost_equal_47403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 172)
        assert_almost_equal_call_result_47417 = invoke(stypy.reporting.localization.Localization(__file__, 172, 12), assert_almost_equal_47403, *[f_call_result_47410, sqrt_call_result_47415], **kwargs_47416)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Obtaining an instance of the builtin type 'list' (line 173)
        list_47418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 173)
        # Adding element type (line 173)
        str_47419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 18), 'str', 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 173, 17), list_47418, str_47419)
        # Adding element type (line 173)
        str_47420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 23), 'str', 'z')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 173, 17), list_47418, str_47420)
        # Adding element type (line 173)
        str_47421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 28), 'str', 'sc')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 173, 17), list_47418, str_47421)
        # Adding element type (line 173)
        str_47422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 34), 'str', 'dz')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 173, 17), list_47418, str_47422)
        
        # Testing the type of a for loop iterable (line 173)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 173, 8), list_47418)
        # Getting the type of the for loop variable (line 173)
        for_loop_var_47423 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 173, 8), list_47418)
        # Assigning a type to the variable 'p' (line 173)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 173, 8), 'p', for_loop_var_47423)
        # SSA begins for a for statement (line 173)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 174):
        
        # Assigning a Call to a Name (line 174):
        
        # Call to getattr(...): (line 174)
        # Processing the call arguments (line 174)
        # Getting the type of 'fblas' (line 174)
        fblas_47425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 24), 'fblas', False)
        # Getting the type of 'p' (line 174)
        p_47426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 31), 'p', False)
        str_47427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 174, 33), 'str', 'nrm2')
        # Applying the binary operator '+' (line 174)
        result_add_47428 = python_operator(stypy.reporting.localization.Localization(__file__, 174, 31), '+', p_47426, str_47427)
        
        # Getting the type of 'None' (line 174)
        None_47429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 41), 'None', False)
        # Processing the call keyword arguments (line 174)
        kwargs_47430 = {}
        # Getting the type of 'getattr' (line 174)
        getattr_47424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 174)
        getattr_call_result_47431 = invoke(stypy.reporting.localization.Localization(__file__, 174, 16), getattr_47424, *[fblas_47425, result_add_47428, None_47429], **kwargs_47430)
        
        # Assigning a type to the variable 'f' (line 174)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 174, 12), 'f', getattr_call_result_47431)
        
        # Type idiom detected: calculating its left and rigth part (line 175)
        # Getting the type of 'f' (line 175)
        f_47432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 15), 'f')
        # Getting the type of 'None' (line 175)
        None_47433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 20), 'None')
        
        (may_be_47434, more_types_in_union_47435) = may_be_none(f_47432, None_47433)

        if may_be_47434:

            if more_types_in_union_47435:
                # Runtime conditional SSA (line 175)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47435:
                # SSA join for if statement (line 175)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_almost_equal(...): (line 177)
        # Processing the call arguments (line 177)
        
        # Call to f(...): (line 177)
        # Processing the call arguments (line 177)
        
        # Obtaining an instance of the builtin type 'list' (line 177)
        list_47438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 177)
        # Adding element type (line 177)
        complex_47439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 35), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 34), list_47438, complex_47439)
        # Adding element type (line 177)
        int_47440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 34), list_47438, int_47440)
        # Adding element type (line 177)
        int_47441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 43), 'int')
        complex_47442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 45), 'complex')
        # Applying the binary operator '-' (line 177)
        result_sub_47443 = python_operator(stypy.reporting.localization.Localization(__file__, 177, 43), '-', int_47441, complex_47442)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 34), list_47438, result_sub_47443)
        
        # Processing the call keyword arguments (line 177)
        kwargs_47444 = {}
        # Getting the type of 'f' (line 177)
        f_47437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 32), 'f', False)
        # Calling f(args, kwargs) (line 177)
        f_call_result_47445 = invoke(stypy.reporting.localization.Localization(__file__, 177, 32), f_47437, *[list_47438], **kwargs_47444)
        
        
        # Call to sqrt(...): (line 177)
        # Processing the call arguments (line 177)
        int_47448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 61), 'int')
        # Processing the call keyword arguments (line 177)
        kwargs_47449 = {}
        # Getting the type of 'math' (line 177)
        math_47446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 51), 'math', False)
        # Obtaining the member 'sqrt' of a type (line 177)
        sqrt_47447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 51), math_47446, 'sqrt')
        # Calling sqrt(args, kwargs) (line 177)
        sqrt_call_result_47450 = invoke(stypy.reporting.localization.Localization(__file__, 177, 51), sqrt_47447, *[int_47448], **kwargs_47449)
        
        # Processing the call keyword arguments (line 177)
        kwargs_47451 = {}
        # Getting the type of 'assert_almost_equal' (line 177)
        assert_almost_equal_47436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 177)
        assert_almost_equal_call_result_47452 = invoke(stypy.reporting.localization.Localization(__file__, 177, 12), assert_almost_equal_47436, *[f_call_result_47445, sqrt_call_result_47450], **kwargs_47451)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_nrm2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_nrm2' in the type store
        # Getting the type of 'stypy_return_type' (line 167)
        stypy_return_type_47453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47453)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_nrm2'
        return stypy_return_type_47453


    @norecursion
    def test_scal(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_scal'
        module_type_store = module_type_store.open_function_context('test_scal', 179, 4, False)
        # Assigning a type to the variable 'self' (line 180)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_scal')
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_scal.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_scal', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_scal', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_scal(...)' code ##################

        
        str_47454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 180)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 180, 8), str_47454)
        # Getting the type of the for loop variable (line 180)
        for_loop_var_47455 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 180, 8), str_47454)
        # Assigning a type to the variable 'p' (line 180)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 8), 'p', for_loop_var_47455)
        # SSA begins for a for statement (line 180)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 181):
        
        # Assigning a Call to a Name (line 181):
        
        # Call to getattr(...): (line 181)
        # Processing the call arguments (line 181)
        # Getting the type of 'fblas' (line 181)
        fblas_47457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 24), 'fblas', False)
        # Getting the type of 'p' (line 181)
        p_47458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 31), 'p', False)
        str_47459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 33), 'str', 'scal')
        # Applying the binary operator '+' (line 181)
        result_add_47460 = python_operator(stypy.reporting.localization.Localization(__file__, 181, 31), '+', p_47458, str_47459)
        
        # Getting the type of 'None' (line 181)
        None_47461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 41), 'None', False)
        # Processing the call keyword arguments (line 181)
        kwargs_47462 = {}
        # Getting the type of 'getattr' (line 181)
        getattr_47456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 181, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 181)
        getattr_call_result_47463 = invoke(stypy.reporting.localization.Localization(__file__, 181, 16), getattr_47456, *[fblas_47457, result_add_47460, None_47461], **kwargs_47462)
        
        # Assigning a type to the variable 'f' (line 181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 181, 12), 'f', getattr_call_result_47463)
        
        # Type idiom detected: calculating its left and rigth part (line 182)
        # Getting the type of 'f' (line 182)
        f_47464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 15), 'f')
        # Getting the type of 'None' (line 182)
        None_47465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 20), 'None')
        
        (may_be_47466, more_types_in_union_47467) = may_be_none(f_47464, None_47465)

        if may_be_47466:

            if more_types_in_union_47467:
                # Runtime conditional SSA (line 182)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47467:
                # SSA join for if statement (line 182)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 184)
        # Processing the call arguments (line 184)
        
        # Call to f(...): (line 184)
        # Processing the call arguments (line 184)
        int_47470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 184)
        list_47471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 184)
        # Adding element type (line 184)
        int_47472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 43), list_47471, int_47472)
        # Adding element type (line 184)
        int_47473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 43), list_47471, int_47473)
        # Adding element type (line 184)
        int_47474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 43), list_47471, int_47474)
        
        # Processing the call keyword arguments (line 184)
        kwargs_47475 = {}
        # Getting the type of 'f' (line 184)
        f_47469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 38), 'f', False)
        # Calling f(args, kwargs) (line 184)
        f_call_result_47476 = invoke(stypy.reporting.localization.Localization(__file__, 184, 38), f_47469, *[int_47470, list_47471], **kwargs_47475)
        
        
        # Obtaining an instance of the builtin type 'list' (line 184)
        list_47477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 56), 'list')
        # Adding type elements to the builtin type 'list' instance (line 184)
        # Adding element type (line 184)
        int_47478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 56), list_47477, int_47478)
        # Adding element type (line 184)
        int_47479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 56), list_47477, int_47479)
        # Adding element type (line 184)
        int_47480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 64), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 56), list_47477, int_47480)
        
        # Processing the call keyword arguments (line 184)
        kwargs_47481 = {}
        # Getting the type of 'assert_array_almost_equal' (line 184)
        assert_array_almost_equal_47468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 184)
        assert_array_almost_equal_call_result_47482 = invoke(stypy.reporting.localization.Localization(__file__, 184, 12), assert_array_almost_equal_47468, *[f_call_result_47476, list_47477], **kwargs_47481)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_47483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 185, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 185)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 185, 8), str_47483)
        # Getting the type of the for loop variable (line 185)
        for_loop_var_47484 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 185, 8), str_47483)
        # Assigning a type to the variable 'p' (line 185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 8), 'p', for_loop_var_47484)
        # SSA begins for a for statement (line 185)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 186):
        
        # Assigning a Call to a Name (line 186):
        
        # Call to getattr(...): (line 186)
        # Processing the call arguments (line 186)
        # Getting the type of 'fblas' (line 186)
        fblas_47486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 24), 'fblas', False)
        # Getting the type of 'p' (line 186)
        p_47487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 31), 'p', False)
        str_47488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 186, 33), 'str', 'scal')
        # Applying the binary operator '+' (line 186)
        result_add_47489 = python_operator(stypy.reporting.localization.Localization(__file__, 186, 31), '+', p_47487, str_47488)
        
        # Getting the type of 'None' (line 186)
        None_47490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 41), 'None', False)
        # Processing the call keyword arguments (line 186)
        kwargs_47491 = {}
        # Getting the type of 'getattr' (line 186)
        getattr_47485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 186)
        getattr_call_result_47492 = invoke(stypy.reporting.localization.Localization(__file__, 186, 16), getattr_47485, *[fblas_47486, result_add_47489, None_47490], **kwargs_47491)
        
        # Assigning a type to the variable 'f' (line 186)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 12), 'f', getattr_call_result_47492)
        
        # Type idiom detected: calculating its left and rigth part (line 187)
        # Getting the type of 'f' (line 187)
        f_47493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 15), 'f')
        # Getting the type of 'None' (line 187)
        None_47494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 20), 'None')
        
        (may_be_47495, more_types_in_union_47496) = may_be_none(f_47493, None_47494)

        if may_be_47495:

            if more_types_in_union_47496:
                # Runtime conditional SSA (line 187)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47496:
                # SSA join for if statement (line 187)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 189)
        # Processing the call arguments (line 189)
        
        # Call to f(...): (line 189)
        # Processing the call arguments (line 189)
        complex_47499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 40), 'complex')
        
        # Obtaining an instance of the builtin type 'list' (line 189)
        list_47500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 189)
        # Adding element type (line 189)
        complex_47501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 45), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 44), list_47500, complex_47501)
        # Adding element type (line 189)
        int_47502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 44), list_47500, int_47502)
        # Adding element type (line 189)
        int_47503 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 53), 'int')
        complex_47504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 55), 'complex')
        # Applying the binary operator '-' (line 189)
        result_sub_47505 = python_operator(stypy.reporting.localization.Localization(__file__, 189, 53), '-', int_47503, complex_47504)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 44), list_47500, result_sub_47505)
        
        # Processing the call keyword arguments (line 189)
        kwargs_47506 = {}
        # Getting the type of 'f' (line 189)
        f_47498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 38), 'f', False)
        # Calling f(args, kwargs) (line 189)
        f_call_result_47507 = invoke(stypy.reporting.localization.Localization(__file__, 189, 38), f_47498, *[complex_47499, list_47500], **kwargs_47506)
        
        
        # Obtaining an instance of the builtin type 'list' (line 189)
        list_47508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 189)
        # Adding element type (line 189)
        int_47509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 61), list_47508, int_47509)
        # Adding element type (line 189)
        complex_47510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 66), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 61), list_47508, complex_47510)
        # Adding element type (line 189)
        int_47511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 72), 'int')
        complex_47512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 75), 'complex')
        # Applying the binary operator '+' (line 189)
        result_add_47513 = python_operator(stypy.reporting.localization.Localization(__file__, 189, 72), '+', int_47511, complex_47512)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 61), list_47508, result_add_47513)
        
        # Processing the call keyword arguments (line 189)
        kwargs_47514 = {}
        # Getting the type of 'assert_array_almost_equal' (line 189)
        assert_array_almost_equal_47497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 189)
        assert_array_almost_equal_call_result_47515 = invoke(stypy.reporting.localization.Localization(__file__, 189, 12), assert_array_almost_equal_47497, *[f_call_result_47507, list_47508], **kwargs_47514)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Obtaining an instance of the builtin type 'list' (line 190)
        list_47516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 190)
        # Adding element type (line 190)
        str_47517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 18), 'str', 'cs')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 190, 17), list_47516, str_47517)
        # Adding element type (line 190)
        str_47518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 24), 'str', 'zd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 190, 17), list_47516, str_47518)
        
        # Testing the type of a for loop iterable (line 190)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 190, 8), list_47516)
        # Getting the type of the for loop variable (line 190)
        for_loop_var_47519 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 190, 8), list_47516)
        # Assigning a type to the variable 'p' (line 190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'p', for_loop_var_47519)
        # SSA begins for a for statement (line 190)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 191):
        
        # Assigning a Call to a Name (line 191):
        
        # Call to getattr(...): (line 191)
        # Processing the call arguments (line 191)
        # Getting the type of 'fblas' (line 191)
        fblas_47521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 24), 'fblas', False)
        # Getting the type of 'p' (line 191)
        p_47522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 31), 'p', False)
        str_47523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 33), 'str', 'scal')
        # Applying the binary operator '+' (line 191)
        result_add_47524 = python_operator(stypy.reporting.localization.Localization(__file__, 191, 31), '+', p_47522, str_47523)
        
        # Getting the type of 'None' (line 191)
        None_47525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 41), 'None', False)
        # Processing the call keyword arguments (line 191)
        kwargs_47526 = {}
        # Getting the type of 'getattr' (line 191)
        getattr_47520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 191)
        getattr_call_result_47527 = invoke(stypy.reporting.localization.Localization(__file__, 191, 16), getattr_47520, *[fblas_47521, result_add_47524, None_47525], **kwargs_47526)
        
        # Assigning a type to the variable 'f' (line 191)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'f', getattr_call_result_47527)
        
        # Type idiom detected: calculating its left and rigth part (line 192)
        # Getting the type of 'f' (line 192)
        f_47528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 15), 'f')
        # Getting the type of 'None' (line 192)
        None_47529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 20), 'None')
        
        (may_be_47530, more_types_in_union_47531) = may_be_none(f_47528, None_47529)

        if may_be_47530:

            if more_types_in_union_47531:
                # Runtime conditional SSA (line 192)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47531:
                # SSA join for if statement (line 192)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 194)
        # Processing the call arguments (line 194)
        
        # Call to f(...): (line 194)
        # Processing the call arguments (line 194)
        int_47534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 194)
        list_47535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 194)
        # Adding element type (line 194)
        complex_47536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 44), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 43), list_47535, complex_47536)
        # Adding element type (line 194)
        int_47537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 43), list_47535, int_47537)
        # Adding element type (line 194)
        int_47538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 52), 'int')
        complex_47539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 54), 'complex')
        # Applying the binary operator '-' (line 194)
        result_sub_47540 = python_operator(stypy.reporting.localization.Localization(__file__, 194, 52), '-', int_47538, complex_47539)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 43), list_47535, result_sub_47540)
        
        # Processing the call keyword arguments (line 194)
        kwargs_47541 = {}
        # Getting the type of 'f' (line 194)
        f_47533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 38), 'f', False)
        # Calling f(args, kwargs) (line 194)
        f_call_result_47542 = invoke(stypy.reporting.localization.Localization(__file__, 194, 38), f_47533, *[int_47534, list_47535], **kwargs_47541)
        
        
        # Obtaining an instance of the builtin type 'list' (line 194)
        list_47543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 194)
        # Adding element type (line 194)
        complex_47544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 61), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 60), list_47543, complex_47544)
        # Adding element type (line 194)
        int_47545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 65), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 60), list_47543, int_47545)
        # Adding element type (line 194)
        int_47546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 70), 'int')
        complex_47547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 194, 72), 'complex')
        # Applying the binary operator '-' (line 194)
        result_sub_47548 = python_operator(stypy.reporting.localization.Localization(__file__, 194, 70), '-', int_47546, complex_47547)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 194, 60), list_47543, result_sub_47548)
        
        # Processing the call keyword arguments (line 194)
        kwargs_47549 = {}
        # Getting the type of 'assert_array_almost_equal' (line 194)
        assert_array_almost_equal_47532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 194)
        assert_array_almost_equal_call_result_47550 = invoke(stypy.reporting.localization.Localization(__file__, 194, 12), assert_array_almost_equal_47532, *[f_call_result_47542, list_47543], **kwargs_47549)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_scal(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_scal' in the type store
        # Getting the type of 'stypy_return_type' (line 179)
        stypy_return_type_47551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47551)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_scal'
        return stypy_return_type_47551


    @norecursion
    def test_swap(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_swap'
        module_type_store = module_type_store.open_function_context('test_swap', 196, 4, False)
        # Assigning a type to the variable 'self' (line 197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_swap')
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_swap.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_swap', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_swap', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_swap(...)' code ##################

        
        str_47552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 197)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 197, 8), str_47552)
        # Getting the type of the for loop variable (line 197)
        for_loop_var_47553 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 197, 8), str_47552)
        # Assigning a type to the variable 'p' (line 197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'p', for_loop_var_47553)
        # SSA begins for a for statement (line 197)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 198):
        
        # Assigning a Call to a Name (line 198):
        
        # Call to getattr(...): (line 198)
        # Processing the call arguments (line 198)
        # Getting the type of 'fblas' (line 198)
        fblas_47555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 24), 'fblas', False)
        # Getting the type of 'p' (line 198)
        p_47556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 31), 'p', False)
        str_47557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 33), 'str', 'swap')
        # Applying the binary operator '+' (line 198)
        result_add_47558 = python_operator(stypy.reporting.localization.Localization(__file__, 198, 31), '+', p_47556, str_47557)
        
        # Getting the type of 'None' (line 198)
        None_47559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 41), 'None', False)
        # Processing the call keyword arguments (line 198)
        kwargs_47560 = {}
        # Getting the type of 'getattr' (line 198)
        getattr_47554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 198)
        getattr_call_result_47561 = invoke(stypy.reporting.localization.Localization(__file__, 198, 16), getattr_47554, *[fblas_47555, result_add_47558, None_47559], **kwargs_47560)
        
        # Assigning a type to the variable 'f' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 12), 'f', getattr_call_result_47561)
        
        # Type idiom detected: calculating its left and rigth part (line 199)
        # Getting the type of 'f' (line 199)
        f_47562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 15), 'f')
        # Getting the type of 'None' (line 199)
        None_47563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 20), 'None')
        
        (may_be_47564, more_types_in_union_47565) = may_be_none(f_47562, None_47563)

        if may_be_47564:

            if more_types_in_union_47565:
                # Runtime conditional SSA (line 199)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47565:
                # SSA join for if statement (line 199)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Tuple to a Tuple (line 201):
        
        # Assigning a List to a Name (line 201):
        
        # Obtaining an instance of the builtin type 'list' (line 201)
        list_47566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 201)
        # Adding element type (line 201)
        int_47567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 201, 19), list_47566, int_47567)
        # Adding element type (line 201)
        int_47568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 201, 19), list_47566, int_47568)
        # Adding element type (line 201)
        int_47569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 201, 19), list_47566, int_47569)
        
        # Assigning a type to the variable 'tuple_assignment_46661' (line 201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 12), 'tuple_assignment_46661', list_47566)
        
        # Assigning a List to a Name (line 201):
        
        # Obtaining an instance of the builtin type 'list' (line 201)
        list_47570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 201)
        # Adding element type (line 201)
        int_47571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 201, 30), list_47570, int_47571)
        # Adding element type (line 201)
        int_47572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 201, 30), list_47570, int_47572)
        # Adding element type (line 201)
        int_47573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 201, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 201, 30), list_47570, int_47573)
        
        # Assigning a type to the variable 'tuple_assignment_46662' (line 201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 12), 'tuple_assignment_46662', list_47570)
        
        # Assigning a Name to a Name (line 201):
        # Getting the type of 'tuple_assignment_46661' (line 201)
        tuple_assignment_46661_47574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 12), 'tuple_assignment_46661')
        # Assigning a type to the variable 'x' (line 201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 12), 'x', tuple_assignment_46661_47574)
        
        # Assigning a Name to a Name (line 201):
        # Getting the type of 'tuple_assignment_46662' (line 201)
        tuple_assignment_46662_47575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 12), 'tuple_assignment_46662')
        # Assigning a type to the variable 'y' (line 201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 15), 'y', tuple_assignment_46662_47575)
        
        # Assigning a Call to a Tuple (line 202):
        
        # Assigning a Subscript to a Name (line 202):
        
        # Obtaining the type of the subscript
        int_47576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 12), 'int')
        
        # Call to f(...): (line 202)
        # Processing the call arguments (line 202)
        # Getting the type of 'x' (line 202)
        x_47578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 23), 'x', False)
        # Getting the type of 'y' (line 202)
        y_47579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 26), 'y', False)
        # Processing the call keyword arguments (line 202)
        kwargs_47580 = {}
        # Getting the type of 'f' (line 202)
        f_47577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 21), 'f', False)
        # Calling f(args, kwargs) (line 202)
        f_call_result_47581 = invoke(stypy.reporting.localization.Localization(__file__, 202, 21), f_47577, *[x_47578, y_47579], **kwargs_47580)
        
        # Obtaining the member '__getitem__' of a type (line 202)
        getitem___47582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 202, 12), f_call_result_47581, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 202)
        subscript_call_result_47583 = invoke(stypy.reporting.localization.Localization(__file__, 202, 12), getitem___47582, int_47576)
        
        # Assigning a type to the variable 'tuple_var_assignment_46663' (line 202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 12), 'tuple_var_assignment_46663', subscript_call_result_47583)
        
        # Assigning a Subscript to a Name (line 202):
        
        # Obtaining the type of the subscript
        int_47584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 12), 'int')
        
        # Call to f(...): (line 202)
        # Processing the call arguments (line 202)
        # Getting the type of 'x' (line 202)
        x_47586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 23), 'x', False)
        # Getting the type of 'y' (line 202)
        y_47587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 26), 'y', False)
        # Processing the call keyword arguments (line 202)
        kwargs_47588 = {}
        # Getting the type of 'f' (line 202)
        f_47585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 21), 'f', False)
        # Calling f(args, kwargs) (line 202)
        f_call_result_47589 = invoke(stypy.reporting.localization.Localization(__file__, 202, 21), f_47585, *[x_47586, y_47587], **kwargs_47588)
        
        # Obtaining the member '__getitem__' of a type (line 202)
        getitem___47590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 202, 12), f_call_result_47589, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 202)
        subscript_call_result_47591 = invoke(stypy.reporting.localization.Localization(__file__, 202, 12), getitem___47590, int_47584)
        
        # Assigning a type to the variable 'tuple_var_assignment_46664' (line 202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 12), 'tuple_var_assignment_46664', subscript_call_result_47591)
        
        # Assigning a Name to a Name (line 202):
        # Getting the type of 'tuple_var_assignment_46663' (line 202)
        tuple_var_assignment_46663_47592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 12), 'tuple_var_assignment_46663')
        # Assigning a type to the variable 'x1' (line 202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 12), 'x1', tuple_var_assignment_46663_47592)
        
        # Assigning a Name to a Name (line 202):
        # Getting the type of 'tuple_var_assignment_46664' (line 202)
        tuple_var_assignment_46664_47593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 12), 'tuple_var_assignment_46664')
        # Assigning a type to the variable 'y1' (line 202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 16), 'y1', tuple_var_assignment_46664_47593)
        
        # Call to assert_array_almost_equal(...): (line 203)
        # Processing the call arguments (line 203)
        # Getting the type of 'x1' (line 203)
        x1_47595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 38), 'x1', False)
        # Getting the type of 'y' (line 203)
        y_47596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 42), 'y', False)
        # Processing the call keyword arguments (line 203)
        kwargs_47597 = {}
        # Getting the type of 'assert_array_almost_equal' (line 203)
        assert_array_almost_equal_47594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 203)
        assert_array_almost_equal_call_result_47598 = invoke(stypy.reporting.localization.Localization(__file__, 203, 12), assert_array_almost_equal_47594, *[x1_47595, y_47596], **kwargs_47597)
        
        
        # Call to assert_array_almost_equal(...): (line 204)
        # Processing the call arguments (line 204)
        # Getting the type of 'y1' (line 204)
        y1_47600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 38), 'y1', False)
        # Getting the type of 'x' (line 204)
        x_47601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 42), 'x', False)
        # Processing the call keyword arguments (line 204)
        kwargs_47602 = {}
        # Getting the type of 'assert_array_almost_equal' (line 204)
        assert_array_almost_equal_47599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 204)
        assert_array_almost_equal_call_result_47603 = invoke(stypy.reporting.localization.Localization(__file__, 204, 12), assert_array_almost_equal_47599, *[y1_47600, x_47601], **kwargs_47602)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_47604 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 205)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 205, 8), str_47604)
        # Getting the type of the for loop variable (line 205)
        for_loop_var_47605 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 205, 8), str_47604)
        # Assigning a type to the variable 'p' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 8), 'p', for_loop_var_47605)
        # SSA begins for a for statement (line 205)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 206):
        
        # Assigning a Call to a Name (line 206):
        
        # Call to getattr(...): (line 206)
        # Processing the call arguments (line 206)
        # Getting the type of 'fblas' (line 206)
        fblas_47607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 24), 'fblas', False)
        # Getting the type of 'p' (line 206)
        p_47608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 31), 'p', False)
        str_47609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 33), 'str', 'swap')
        # Applying the binary operator '+' (line 206)
        result_add_47610 = python_operator(stypy.reporting.localization.Localization(__file__, 206, 31), '+', p_47608, str_47609)
        
        # Getting the type of 'None' (line 206)
        None_47611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 41), 'None', False)
        # Processing the call keyword arguments (line 206)
        kwargs_47612 = {}
        # Getting the type of 'getattr' (line 206)
        getattr_47606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 206)
        getattr_call_result_47613 = invoke(stypy.reporting.localization.Localization(__file__, 206, 16), getattr_47606, *[fblas_47607, result_add_47610, None_47611], **kwargs_47612)
        
        # Assigning a type to the variable 'f' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 12), 'f', getattr_call_result_47613)
        
        # Type idiom detected: calculating its left and rigth part (line 207)
        # Getting the type of 'f' (line 207)
        f_47614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 15), 'f')
        # Getting the type of 'None' (line 207)
        None_47615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 20), 'None')
        
        (may_be_47616, more_types_in_union_47617) = may_be_none(f_47614, None_47615)

        if may_be_47616:

            if more_types_in_union_47617:
                # Runtime conditional SSA (line 207)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47617:
                # SSA join for if statement (line 207)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Tuple to a Tuple (line 209):
        
        # Assigning a List to a Name (line 209):
        
        # Obtaining an instance of the builtin type 'list' (line 209)
        list_47618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 209)
        # Adding element type (line 209)
        int_47619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 209, 19), list_47618, int_47619)
        # Adding element type (line 209)
        complex_47620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 23), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 209, 19), list_47618, complex_47620)
        # Adding element type (line 209)
        int_47621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 209, 19), list_47618, int_47621)
        
        # Assigning a type to the variable 'tuple_assignment_46665' (line 209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 209, 12), 'tuple_assignment_46665', list_47618)
        
        # Assigning a List to a Name (line 209):
        
        # Obtaining an instance of the builtin type 'list' (line 209)
        list_47622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 209)
        # Adding element type (line 209)
        int_47623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 209, 31), list_47622, int_47623)
        # Adding element type (line 209)
        int_47624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 209, 31), list_47622, int_47624)
        # Adding element type (line 209)
        int_47625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 39), 'int')
        complex_47626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 209, 41), 'complex')
        # Applying the binary operator '-' (line 209)
        result_sub_47627 = python_operator(stypy.reporting.localization.Localization(__file__, 209, 39), '-', int_47625, complex_47626)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 209, 31), list_47622, result_sub_47627)
        
        # Assigning a type to the variable 'tuple_assignment_46666' (line 209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 209, 12), 'tuple_assignment_46666', list_47622)
        
        # Assigning a Name to a Name (line 209):
        # Getting the type of 'tuple_assignment_46665' (line 209)
        tuple_assignment_46665_47628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 12), 'tuple_assignment_46665')
        # Assigning a type to the variable 'x' (line 209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 209, 12), 'x', tuple_assignment_46665_47628)
        
        # Assigning a Name to a Name (line 209):
        # Getting the type of 'tuple_assignment_46666' (line 209)
        tuple_assignment_46666_47629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 12), 'tuple_assignment_46666')
        # Assigning a type to the variable 'y' (line 209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 209, 15), 'y', tuple_assignment_46666_47629)
        
        # Assigning a Call to a Tuple (line 210):
        
        # Assigning a Subscript to a Name (line 210):
        
        # Obtaining the type of the subscript
        int_47630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 12), 'int')
        
        # Call to f(...): (line 210)
        # Processing the call arguments (line 210)
        # Getting the type of 'x' (line 210)
        x_47632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 23), 'x', False)
        # Getting the type of 'y' (line 210)
        y_47633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 26), 'y', False)
        # Processing the call keyword arguments (line 210)
        kwargs_47634 = {}
        # Getting the type of 'f' (line 210)
        f_47631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 21), 'f', False)
        # Calling f(args, kwargs) (line 210)
        f_call_result_47635 = invoke(stypy.reporting.localization.Localization(__file__, 210, 21), f_47631, *[x_47632, y_47633], **kwargs_47634)
        
        # Obtaining the member '__getitem__' of a type (line 210)
        getitem___47636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 12), f_call_result_47635, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 210)
        subscript_call_result_47637 = invoke(stypy.reporting.localization.Localization(__file__, 210, 12), getitem___47636, int_47630)
        
        # Assigning a type to the variable 'tuple_var_assignment_46667' (line 210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 12), 'tuple_var_assignment_46667', subscript_call_result_47637)
        
        # Assigning a Subscript to a Name (line 210):
        
        # Obtaining the type of the subscript
        int_47638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 12), 'int')
        
        # Call to f(...): (line 210)
        # Processing the call arguments (line 210)
        # Getting the type of 'x' (line 210)
        x_47640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 23), 'x', False)
        # Getting the type of 'y' (line 210)
        y_47641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 26), 'y', False)
        # Processing the call keyword arguments (line 210)
        kwargs_47642 = {}
        # Getting the type of 'f' (line 210)
        f_47639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 21), 'f', False)
        # Calling f(args, kwargs) (line 210)
        f_call_result_47643 = invoke(stypy.reporting.localization.Localization(__file__, 210, 21), f_47639, *[x_47640, y_47641], **kwargs_47642)
        
        # Obtaining the member '__getitem__' of a type (line 210)
        getitem___47644 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 12), f_call_result_47643, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 210)
        subscript_call_result_47645 = invoke(stypy.reporting.localization.Localization(__file__, 210, 12), getitem___47644, int_47638)
        
        # Assigning a type to the variable 'tuple_var_assignment_46668' (line 210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 12), 'tuple_var_assignment_46668', subscript_call_result_47645)
        
        # Assigning a Name to a Name (line 210):
        # Getting the type of 'tuple_var_assignment_46667' (line 210)
        tuple_var_assignment_46667_47646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 12), 'tuple_var_assignment_46667')
        # Assigning a type to the variable 'x1' (line 210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 12), 'x1', tuple_var_assignment_46667_47646)
        
        # Assigning a Name to a Name (line 210):
        # Getting the type of 'tuple_var_assignment_46668' (line 210)
        tuple_var_assignment_46668_47647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 12), 'tuple_var_assignment_46668')
        # Assigning a type to the variable 'y1' (line 210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 16), 'y1', tuple_var_assignment_46668_47647)
        
        # Call to assert_array_almost_equal(...): (line 211)
        # Processing the call arguments (line 211)
        # Getting the type of 'x1' (line 211)
        x1_47649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 38), 'x1', False)
        # Getting the type of 'y' (line 211)
        y_47650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 42), 'y', False)
        # Processing the call keyword arguments (line 211)
        kwargs_47651 = {}
        # Getting the type of 'assert_array_almost_equal' (line 211)
        assert_array_almost_equal_47648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 211)
        assert_array_almost_equal_call_result_47652 = invoke(stypy.reporting.localization.Localization(__file__, 211, 12), assert_array_almost_equal_47648, *[x1_47649, y_47650], **kwargs_47651)
        
        
        # Call to assert_array_almost_equal(...): (line 212)
        # Processing the call arguments (line 212)
        # Getting the type of 'y1' (line 212)
        y1_47654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 38), 'y1', False)
        # Getting the type of 'x' (line 212)
        x_47655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 42), 'x', False)
        # Processing the call keyword arguments (line 212)
        kwargs_47656 = {}
        # Getting the type of 'assert_array_almost_equal' (line 212)
        assert_array_almost_equal_47653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 212)
        assert_array_almost_equal_call_result_47657 = invoke(stypy.reporting.localization.Localization(__file__, 212, 12), assert_array_almost_equal_47653, *[y1_47654, x_47655], **kwargs_47656)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_swap(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_swap' in the type store
        # Getting the type of 'stypy_return_type' (line 196)
        stypy_return_type_47658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47658)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_swap'
        return stypy_return_type_47658


    @norecursion
    def test_amax(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_amax'
        module_type_store = module_type_store.open_function_context('test_amax', 214, 4, False)
        # Assigning a type to the variable 'self' (line 215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_function_name', 'TestFBLAS1Simple.test_amax')
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS1Simple.test_amax.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.test_amax', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_amax', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_amax(...)' code ##################

        
        str_47659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 215, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 215)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 215, 8), str_47659)
        # Getting the type of the for loop variable (line 215)
        for_loop_var_47660 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 215, 8), str_47659)
        # Assigning a type to the variable 'p' (line 215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'p', for_loop_var_47660)
        # SSA begins for a for statement (line 215)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 216):
        
        # Assigning a Call to a Name (line 216):
        
        # Call to getattr(...): (line 216)
        # Processing the call arguments (line 216)
        # Getting the type of 'fblas' (line 216)
        fblas_47662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 24), 'fblas', False)
        str_47663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 31), 'str', 'i')
        # Getting the type of 'p' (line 216)
        p_47664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 35), 'p', False)
        # Applying the binary operator '+' (line 216)
        result_add_47665 = python_operator(stypy.reporting.localization.Localization(__file__, 216, 31), '+', str_47663, p_47664)
        
        str_47666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 37), 'str', 'amax')
        # Applying the binary operator '+' (line 216)
        result_add_47667 = python_operator(stypy.reporting.localization.Localization(__file__, 216, 36), '+', result_add_47665, str_47666)
        
        # Processing the call keyword arguments (line 216)
        kwargs_47668 = {}
        # Getting the type of 'getattr' (line 216)
        getattr_47661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 216)
        getattr_call_result_47669 = invoke(stypy.reporting.localization.Localization(__file__, 216, 16), getattr_47661, *[fblas_47662, result_add_47667], **kwargs_47668)
        
        # Assigning a type to the variable 'f' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'f', getattr_call_result_47669)
        
        # Call to assert_equal(...): (line 217)
        # Processing the call arguments (line 217)
        
        # Call to f(...): (line 217)
        # Processing the call arguments (line 217)
        
        # Obtaining an instance of the builtin type 'list' (line 217)
        list_47672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 217)
        # Adding element type (line 217)
        int_47673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 217, 27), list_47672, int_47673)
        # Adding element type (line 217)
        int_47674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 217, 27), list_47672, int_47674)
        # Adding element type (line 217)
        int_47675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 217, 27), list_47672, int_47675)
        
        # Processing the call keyword arguments (line 217)
        kwargs_47676 = {}
        # Getting the type of 'f' (line 217)
        f_47671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 25), 'f', False)
        # Calling f(args, kwargs) (line 217)
        f_call_result_47677 = invoke(stypy.reporting.localization.Localization(__file__, 217, 25), f_47671, *[list_47672], **kwargs_47676)
        
        int_47678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 40), 'int')
        # Processing the call keyword arguments (line 217)
        kwargs_47679 = {}
        # Getting the type of 'assert_equal' (line 217)
        assert_equal_47670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 217)
        assert_equal_call_result_47680 = invoke(stypy.reporting.localization.Localization(__file__, 217, 12), assert_equal_47670, *[f_call_result_47677, int_47678], **kwargs_47679)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_47681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 218, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 218)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 218, 8), str_47681)
        # Getting the type of the for loop variable (line 218)
        for_loop_var_47682 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 218, 8), str_47681)
        # Assigning a type to the variable 'p' (line 218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 8), 'p', for_loop_var_47682)
        # SSA begins for a for statement (line 218)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 219):
        
        # Assigning a Call to a Name (line 219):
        
        # Call to getattr(...): (line 219)
        # Processing the call arguments (line 219)
        # Getting the type of 'fblas' (line 219)
        fblas_47684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 24), 'fblas', False)
        str_47685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 31), 'str', 'i')
        # Getting the type of 'p' (line 219)
        p_47686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 35), 'p', False)
        # Applying the binary operator '+' (line 219)
        result_add_47687 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 31), '+', str_47685, p_47686)
        
        str_47688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 37), 'str', 'amax')
        # Applying the binary operator '+' (line 219)
        result_add_47689 = python_operator(stypy.reporting.localization.Localization(__file__, 219, 36), '+', result_add_47687, str_47688)
        
        # Processing the call keyword arguments (line 219)
        kwargs_47690 = {}
        # Getting the type of 'getattr' (line 219)
        getattr_47683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 219)
        getattr_call_result_47691 = invoke(stypy.reporting.localization.Localization(__file__, 219, 16), getattr_47683, *[fblas_47684, result_add_47689], **kwargs_47690)
        
        # Assigning a type to the variable 'f' (line 219)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 12), 'f', getattr_call_result_47691)
        
        # Call to assert_equal(...): (line 220)
        # Processing the call arguments (line 220)
        
        # Call to f(...): (line 220)
        # Processing the call arguments (line 220)
        
        # Obtaining an instance of the builtin type 'list' (line 220)
        list_47694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 220)
        # Adding element type (line 220)
        int_47695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 220, 27), list_47694, int_47695)
        # Adding element type (line 220)
        int_47696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 32), 'int')
        complex_47697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 34), 'complex')
        # Applying the binary operator '+' (line 220)
        result_add_47698 = python_operator(stypy.reporting.localization.Localization(__file__, 220, 32), '+', int_47696, complex_47697)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 220, 27), list_47694, result_add_47698)
        # Adding element type (line 220)
        int_47699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 220, 27), list_47694, int_47699)
        
        # Processing the call keyword arguments (line 220)
        kwargs_47700 = {}
        # Getting the type of 'f' (line 220)
        f_47693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 25), 'f', False)
        # Calling f(args, kwargs) (line 220)
        f_call_result_47701 = invoke(stypy.reporting.localization.Localization(__file__, 220, 25), f_47693, *[list_47694], **kwargs_47700)
        
        int_47702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 43), 'int')
        # Processing the call keyword arguments (line 220)
        kwargs_47703 = {}
        # Getting the type of 'assert_equal' (line 220)
        assert_equal_47692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 220)
        assert_equal_call_result_47704 = invoke(stypy.reporting.localization.Localization(__file__, 220, 12), assert_equal_47692, *[f_call_result_47701, int_47702], **kwargs_47703)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_amax(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_amax' in the type store
        # Getting the type of 'stypy_return_type' (line 214)
        stypy_return_type_47705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47705)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_amax'
        return stypy_return_type_47705


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 106, 0, False)
        # Assigning a type to the variable 'self' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS1Simple.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestFBLAS1Simple' (line 106)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 0), 'TestFBLAS1Simple', TestFBLAS1Simple)
# Declaration of the 'TestFBLAS2Simple' class

class TestFBLAS2Simple(object, ):

    @norecursion
    def test_gemv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gemv'
        module_type_store = module_type_store.open_function_context('test_gemv', 226, 4, False)
        # Assigning a type to the variable 'self' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_gemv')
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_gemv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_gemv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gemv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gemv(...)' code ##################

        
        str_47706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 227)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 227, 8), str_47706)
        # Getting the type of the for loop variable (line 227)
        for_loop_var_47707 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 227, 8), str_47706)
        # Assigning a type to the variable 'p' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'p', for_loop_var_47707)
        # SSA begins for a for statement (line 227)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 228):
        
        # Assigning a Call to a Name (line 228):
        
        # Call to getattr(...): (line 228)
        # Processing the call arguments (line 228)
        # Getting the type of 'fblas' (line 228)
        fblas_47709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 24), 'fblas', False)
        # Getting the type of 'p' (line 228)
        p_47710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 31), 'p', False)
        str_47711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 33), 'str', 'gemv')
        # Applying the binary operator '+' (line 228)
        result_add_47712 = python_operator(stypy.reporting.localization.Localization(__file__, 228, 31), '+', p_47710, str_47711)
        
        # Getting the type of 'None' (line 228)
        None_47713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 41), 'None', False)
        # Processing the call keyword arguments (line 228)
        kwargs_47714 = {}
        # Getting the type of 'getattr' (line 228)
        getattr_47708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 228)
        getattr_call_result_47715 = invoke(stypy.reporting.localization.Localization(__file__, 228, 16), getattr_47708, *[fblas_47709, result_add_47712, None_47713], **kwargs_47714)
        
        # Assigning a type to the variable 'f' (line 228)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 228, 12), 'f', getattr_call_result_47715)
        
        # Type idiom detected: calculating its left and rigth part (line 229)
        # Getting the type of 'f' (line 229)
        f_47716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 15), 'f')
        # Getting the type of 'None' (line 229)
        None_47717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 20), 'None')
        
        (may_be_47718, more_types_in_union_47719) = may_be_none(f_47716, None_47717)

        if may_be_47718:

            if more_types_in_union_47719:
                # Runtime conditional SSA (line 229)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47719:
                # SSA join for if statement (line 229)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 231)
        # Processing the call arguments (line 231)
        
        # Call to f(...): (line 231)
        # Processing the call arguments (line 231)
        int_47722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 231)
        list_47723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 231)
        # Adding element type (line 231)
        
        # Obtaining an instance of the builtin type 'list' (line 231)
        list_47724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 231)
        # Adding element type (line 231)
        int_47725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 44), list_47724, int_47725)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 43), list_47723, list_47724)
        
        
        # Obtaining an instance of the builtin type 'list' (line 231)
        list_47726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 231)
        # Adding element type (line 231)
        int_47727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 50), list_47726, int_47727)
        
        # Processing the call keyword arguments (line 231)
        kwargs_47728 = {}
        # Getting the type of 'f' (line 231)
        f_47721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 38), 'f', False)
        # Calling f(args, kwargs) (line 231)
        f_call_result_47729 = invoke(stypy.reporting.localization.Localization(__file__, 231, 38), f_47721, *[int_47722, list_47723, list_47726], **kwargs_47728)
        
        
        # Obtaining an instance of the builtin type 'list' (line 231)
        list_47730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 231)
        # Adding element type (line 231)
        int_47731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 57), list_47730, int_47731)
        
        # Processing the call keyword arguments (line 231)
        kwargs_47732 = {}
        # Getting the type of 'assert_array_almost_equal' (line 231)
        assert_array_almost_equal_47720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 231)
        assert_array_almost_equal_call_result_47733 = invoke(stypy.reporting.localization.Localization(__file__, 231, 12), assert_array_almost_equal_47720, *[f_call_result_47729, list_47730], **kwargs_47732)
        
        
        # Call to assert_array_almost_equal(...): (line 232)
        # Processing the call arguments (line 232)
        
        # Call to f(...): (line 232)
        # Processing the call arguments (line 232)
        int_47736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 232)
        list_47737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 232)
        # Adding element type (line 232)
        
        # Obtaining an instance of the builtin type 'list' (line 232)
        list_47738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 232)
        # Adding element type (line 232)
        int_47739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 44), list_47738, int_47739)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 43), list_47737, list_47738)
        
        
        # Obtaining an instance of the builtin type 'list' (line 232)
        list_47740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 232)
        # Adding element type (line 232)
        int_47741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 50), list_47740, int_47741)
        
        int_47742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 56), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 232)
        list_47743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 232)
        # Adding element type (line 232)
        int_47744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 59), list_47743, int_47744)
        
        # Processing the call keyword arguments (line 232)
        kwargs_47745 = {}
        # Getting the type of 'f' (line 232)
        f_47735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 38), 'f', False)
        # Calling f(args, kwargs) (line 232)
        f_call_result_47746 = invoke(stypy.reporting.localization.Localization(__file__, 232, 38), f_47735, *[int_47736, list_47737, list_47740, int_47742, list_47743], **kwargs_47745)
        
        
        # Obtaining an instance of the builtin type 'list' (line 232)
        list_47747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 65), 'list')
        # Adding type elements to the builtin type 'list' instance (line 232)
        # Adding element type (line 232)
        int_47748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 232, 65), list_47747, int_47748)
        
        # Processing the call keyword arguments (line 232)
        kwargs_47749 = {}
        # Getting the type of 'assert_array_almost_equal' (line 232)
        assert_array_almost_equal_47734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 232)
        assert_array_almost_equal_call_result_47750 = invoke(stypy.reporting.localization.Localization(__file__, 232, 12), assert_array_almost_equal_47734, *[f_call_result_47746, list_47747], **kwargs_47749)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_47751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 233)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 233, 8), str_47751)
        # Getting the type of the for loop variable (line 233)
        for_loop_var_47752 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 233, 8), str_47751)
        # Assigning a type to the variable 'p' (line 233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'p', for_loop_var_47752)
        # SSA begins for a for statement (line 233)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 234):
        
        # Assigning a Call to a Name (line 234):
        
        # Call to getattr(...): (line 234)
        # Processing the call arguments (line 234)
        # Getting the type of 'fblas' (line 234)
        fblas_47754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 24), 'fblas', False)
        # Getting the type of 'p' (line 234)
        p_47755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 31), 'p', False)
        str_47756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 33), 'str', 'gemv')
        # Applying the binary operator '+' (line 234)
        result_add_47757 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 31), '+', p_47755, str_47756)
        
        # Getting the type of 'None' (line 234)
        None_47758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 41), 'None', False)
        # Processing the call keyword arguments (line 234)
        kwargs_47759 = {}
        # Getting the type of 'getattr' (line 234)
        getattr_47753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 234)
        getattr_call_result_47760 = invoke(stypy.reporting.localization.Localization(__file__, 234, 16), getattr_47753, *[fblas_47754, result_add_47757, None_47758], **kwargs_47759)
        
        # Assigning a type to the variable 'f' (line 234)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 234, 12), 'f', getattr_call_result_47760)
        
        # Type idiom detected: calculating its left and rigth part (line 235)
        # Getting the type of 'f' (line 235)
        f_47761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 15), 'f')
        # Getting the type of 'None' (line 235)
        None_47762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 20), 'None')
        
        (may_be_47763, more_types_in_union_47764) = may_be_none(f_47761, None_47762)

        if may_be_47763:

            if more_types_in_union_47764:
                # Runtime conditional SSA (line 235)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47764:
                # SSA join for if statement (line 235)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 237)
        # Processing the call arguments (line 237)
        
        # Call to f(...): (line 237)
        # Processing the call arguments (line 237)
        complex_47767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 40), 'complex')
        
        # Obtaining an instance of the builtin type 'list' (line 237)
        list_47768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 237)
        # Adding element type (line 237)
        
        # Obtaining an instance of the builtin type 'list' (line 237)
        list_47769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 237)
        # Adding element type (line 237)
        int_47770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 46), 'int')
        complex_47771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 48), 'complex')
        # Applying the binary operator '-' (line 237)
        result_sub_47772 = python_operator(stypy.reporting.localization.Localization(__file__, 237, 46), '-', int_47770, complex_47771)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 45), list_47769, result_sub_47772)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 44), list_47768, list_47769)
        
        
        # Obtaining an instance of the builtin type 'list' (line 237)
        list_47773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 54), 'list')
        # Adding type elements to the builtin type 'list' instance (line 237)
        # Adding element type (line 237)
        int_47774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 54), list_47773, int_47774)
        
        # Processing the call keyword arguments (line 237)
        kwargs_47775 = {}
        # Getting the type of 'f' (line 237)
        f_47766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 38), 'f', False)
        # Calling f(args, kwargs) (line 237)
        f_call_result_47776 = invoke(stypy.reporting.localization.Localization(__file__, 237, 38), f_47766, *[complex_47767, list_47768, list_47773], **kwargs_47775)
        
        
        # Obtaining an instance of the builtin type 'list' (line 237)
        list_47777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 237)
        # Adding element type (line 237)
        int_47778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 62), 'int')
        complex_47779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 66), 'complex')
        # Applying the binary operator '-' (line 237)
        result_sub_47780 = python_operator(stypy.reporting.localization.Localization(__file__, 237, 62), '-', int_47778, complex_47779)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 61), list_47777, result_sub_47780)
        
        # Processing the call keyword arguments (line 237)
        kwargs_47781 = {}
        # Getting the type of 'assert_array_almost_equal' (line 237)
        assert_array_almost_equal_47765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 237)
        assert_array_almost_equal_call_result_47782 = invoke(stypy.reporting.localization.Localization(__file__, 237, 12), assert_array_almost_equal_47765, *[f_call_result_47776, list_47777], **kwargs_47781)
        
        
        # Call to assert_array_almost_equal(...): (line 238)
        # Processing the call arguments (line 238)
        
        # Call to f(...): (line 238)
        # Processing the call arguments (line 238)
        complex_47785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 40), 'complex')
        
        # Obtaining an instance of the builtin type 'list' (line 238)
        list_47786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 238)
        # Adding element type (line 238)
        
        # Obtaining an instance of the builtin type 'list' (line 238)
        list_47787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 238)
        # Adding element type (line 238)
        int_47788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 46), 'int')
        complex_47789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 48), 'complex')
        # Applying the binary operator '-' (line 238)
        result_sub_47790 = python_operator(stypy.reporting.localization.Localization(__file__, 238, 46), '-', int_47788, complex_47789)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 238, 45), list_47787, result_sub_47790)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 238, 44), list_47786, list_47787)
        
        
        # Obtaining an instance of the builtin type 'list' (line 238)
        list_47791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 54), 'list')
        # Adding type elements to the builtin type 'list' instance (line 238)
        # Adding element type (line 238)
        int_47792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 238, 54), list_47791, int_47792)
        
        int_47793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 60), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 238)
        list_47794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 63), 'list')
        # Adding type elements to the builtin type 'list' instance (line 238)
        # Adding element type (line 238)
        complex_47795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 238, 64), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 238, 63), list_47794, complex_47795)
        
        # Processing the call keyword arguments (line 238)
        kwargs_47796 = {}
        # Getting the type of 'f' (line 238)
        f_47784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 38), 'f', False)
        # Calling f(args, kwargs) (line 238)
        f_call_result_47797 = invoke(stypy.reporting.localization.Localization(__file__, 238, 38), f_47784, *[complex_47785, list_47786, list_47791, int_47793, list_47794], **kwargs_47796)
        
        
        # Obtaining an instance of the builtin type 'list' (line 239)
        list_47798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 239, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 239)
        # Adding element type (line 239)
        int_47799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 239, 39), 'int')
        complex_47800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 239, 43), 'complex')
        # Applying the binary operator '-' (line 239)
        result_sub_47801 = python_operator(stypy.reporting.localization.Localization(__file__, 239, 39), '-', int_47799, complex_47800)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 239, 38), list_47798, result_sub_47801)
        
        # Processing the call keyword arguments (line 238)
        kwargs_47802 = {}
        # Getting the type of 'assert_array_almost_equal' (line 238)
        assert_array_almost_equal_47783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 238)
        assert_array_almost_equal_call_result_47803 = invoke(stypy.reporting.localization.Localization(__file__, 238, 12), assert_array_almost_equal_47783, *[f_call_result_47797, list_47798], **kwargs_47802)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_gemv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gemv' in the type store
        # Getting the type of 'stypy_return_type' (line 226)
        stypy_return_type_47804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_47804)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gemv'
        return stypy_return_type_47804


    @norecursion
    def test_ger(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ger'
        module_type_store = module_type_store.open_function_context('test_ger', 241, 4, False)
        # Assigning a type to the variable 'self' (line 242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_ger')
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_ger.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_ger', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ger', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ger(...)' code ##################

        
        str_47805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 243, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 243)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 243, 8), str_47805)
        # Getting the type of the for loop variable (line 243)
        for_loop_var_47806 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 243, 8), str_47805)
        # Assigning a type to the variable 'p' (line 243)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 243, 8), 'p', for_loop_var_47806)
        # SSA begins for a for statement (line 243)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 244):
        
        # Assigning a Call to a Name (line 244):
        
        # Call to getattr(...): (line 244)
        # Processing the call arguments (line 244)
        # Getting the type of 'fblas' (line 244)
        fblas_47808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 24), 'fblas', False)
        # Getting the type of 'p' (line 244)
        p_47809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 31), 'p', False)
        str_47810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 33), 'str', 'ger')
        # Applying the binary operator '+' (line 244)
        result_add_47811 = python_operator(stypy.reporting.localization.Localization(__file__, 244, 31), '+', p_47809, str_47810)
        
        # Getting the type of 'None' (line 244)
        None_47812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 40), 'None', False)
        # Processing the call keyword arguments (line 244)
        kwargs_47813 = {}
        # Getting the type of 'getattr' (line 244)
        getattr_47807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 244)
        getattr_call_result_47814 = invoke(stypy.reporting.localization.Localization(__file__, 244, 16), getattr_47807, *[fblas_47808, result_add_47811, None_47812], **kwargs_47813)
        
        # Assigning a type to the variable 'f' (line 244)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 12), 'f', getattr_call_result_47814)
        
        # Type idiom detected: calculating its left and rigth part (line 245)
        # Getting the type of 'f' (line 245)
        f_47815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 15), 'f')
        # Getting the type of 'None' (line 245)
        None_47816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 20), 'None')
        
        (may_be_47817, more_types_in_union_47818) = may_be_none(f_47815, None_47816)

        if may_be_47817:

            if more_types_in_union_47818:
                # Runtime conditional SSA (line 245)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47818:
                # SSA join for if statement (line 245)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 247)
        # Processing the call arguments (line 247)
        
        # Call to f(...): (line 247)
        # Processing the call arguments (line 247)
        int_47821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 247)
        list_47822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 247)
        # Adding element type (line 247)
        int_47823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 43), list_47822, int_47823)
        # Adding element type (line 247)
        int_47824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 43), list_47822, int_47824)
        
        
        # Obtaining an instance of the builtin type 'list' (line 247)
        list_47825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 247)
        # Adding element type (line 247)
        int_47826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 51), list_47825, int_47826)
        # Adding element type (line 247)
        int_47827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 51), list_47825, int_47827)
        
        # Processing the call keyword arguments (line 247)
        kwargs_47828 = {}
        # Getting the type of 'f' (line 247)
        f_47820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 38), 'f', False)
        # Calling f(args, kwargs) (line 247)
        f_call_result_47829 = invoke(stypy.reporting.localization.Localization(__file__, 247, 38), f_47820, *[int_47821, list_47822, list_47825], **kwargs_47828)
        
        
        # Obtaining an instance of the builtin type 'list' (line 247)
        list_47830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 247)
        # Adding element type (line 247)
        
        # Obtaining an instance of the builtin type 'list' (line 247)
        list_47831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 247)
        # Adding element type (line 247)
        int_47832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 61), list_47831, int_47832)
        # Adding element type (line 247)
        int_47833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 65), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 61), list_47831, int_47833)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 60), list_47830, list_47831)
        # Adding element type (line 247)
        
        # Obtaining an instance of the builtin type 'list' (line 247)
        list_47834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 69), 'list')
        # Adding type elements to the builtin type 'list' instance (line 247)
        # Adding element type (line 247)
        int_47835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 70), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 69), list_47834, int_47835)
        # Adding element type (line 247)
        int_47836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 73), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 69), list_47834, int_47836)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 60), list_47830, list_47834)
        
        # Processing the call keyword arguments (line 247)
        kwargs_47837 = {}
        # Getting the type of 'assert_array_almost_equal' (line 247)
        assert_array_almost_equal_47819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 247)
        assert_array_almost_equal_call_result_47838 = invoke(stypy.reporting.localization.Localization(__file__, 247, 12), assert_array_almost_equal_47819, *[f_call_result_47829, list_47830], **kwargs_47837)
        
        
        # Call to assert_array_almost_equal(...): (line 248)
        # Processing the call arguments (line 248)
        
        # Call to f(...): (line 248)
        # Processing the call arguments (line 248)
        int_47841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 248)
        list_47842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 248)
        # Adding element type (line 248)
        int_47843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 43), list_47842, int_47843)
        # Adding element type (line 248)
        int_47844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 43), list_47842, int_47844)
        # Adding element type (line 248)
        int_47845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 43), list_47842, int_47845)
        
        
        # Obtaining an instance of the builtin type 'list' (line 248)
        list_47846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 54), 'list')
        # Adding type elements to the builtin type 'list' instance (line 248)
        # Adding element type (line 248)
        int_47847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 54), list_47846, int_47847)
        # Adding element type (line 248)
        int_47848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 54), list_47846, int_47848)
        
        # Processing the call keyword arguments (line 248)
        kwargs_47849 = {}
        # Getting the type of 'f' (line 248)
        f_47840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 38), 'f', False)
        # Calling f(args, kwargs) (line 248)
        f_call_result_47850 = invoke(stypy.reporting.localization.Localization(__file__, 248, 38), f_47840, *[int_47841, list_47842, list_47846], **kwargs_47849)
        
        
        # Obtaining an instance of the builtin type 'list' (line 249)
        list_47851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 249)
        # Adding element type (line 249)
        
        # Obtaining an instance of the builtin type 'list' (line 249)
        list_47852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 249)
        # Adding element type (line 249)
        int_47853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 39), list_47852, int_47853)
        # Adding element type (line 249)
        int_47854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 39), list_47852, int_47854)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 38), list_47851, list_47852)
        # Adding element type (line 249)
        
        # Obtaining an instance of the builtin type 'list' (line 249)
        list_47855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 249)
        # Adding element type (line 249)
        int_47856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 47), list_47855, int_47856)
        # Adding element type (line 249)
        int_47857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 47), list_47855, int_47857)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 38), list_47851, list_47855)
        # Adding element type (line 249)
        
        # Obtaining an instance of the builtin type 'list' (line 249)
        list_47858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 249)
        # Adding element type (line 249)
        int_47859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 57), list_47858, int_47859)
        # Adding element type (line 249)
        int_47860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 57), list_47858, int_47860)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 249, 38), list_47851, list_47858)
        
        # Processing the call keyword arguments (line 248)
        kwargs_47861 = {}
        # Getting the type of 'assert_array_almost_equal' (line 248)
        assert_array_almost_equal_47839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 248)
        assert_array_almost_equal_call_result_47862 = invoke(stypy.reporting.localization.Localization(__file__, 248, 12), assert_array_almost_equal_47839, *[f_call_result_47850, list_47851], **kwargs_47861)
        
        
        # Call to assert_array_almost_equal(...): (line 251)
        # Processing the call arguments (line 251)
        
        # Call to f(...): (line 251)
        # Processing the call arguments (line 251)
        int_47865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 251)
        list_47866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 251)
        # Adding element type (line 251)
        int_47867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 251, 43), list_47866, int_47867)
        # Adding element type (line 251)
        int_47868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 251, 43), list_47866, int_47868)
        
        
        # Obtaining an instance of the builtin type 'list' (line 251)
        list_47869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 251)
        # Adding element type (line 251)
        int_47870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 251, 51), list_47869, int_47870)
        # Adding element type (line 251)
        int_47871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 251, 51), list_47869, int_47871)
        
        # Processing the call keyword arguments (line 251)
        
        # Obtaining an instance of the builtin type 'list' (line 252)
        list_47872 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 252)
        # Adding element type (line 252)
        
        # Obtaining an instance of the builtin type 'list' (line 252)
        list_47873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 252)
        # Adding element type (line 252)
        int_47874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 43), list_47873, int_47874)
        # Adding element type (line 252)
        int_47875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 43), list_47873, int_47875)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 42), list_47872, list_47873)
        # Adding element type (line 252)
        
        # Obtaining an instance of the builtin type 'list' (line 252)
        list_47876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 252)
        # Adding element type (line 252)
        int_47877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 51), list_47876, int_47877)
        # Adding element type (line 252)
        int_47878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 51), list_47876, int_47878)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 42), list_47872, list_47876)
        
        keyword_47879 = list_47872
        kwargs_47880 = {'a': keyword_47879}
        # Getting the type of 'f' (line 251)
        f_47864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 38), 'f', False)
        # Calling f(args, kwargs) (line 251)
        f_call_result_47881 = invoke(stypy.reporting.localization.Localization(__file__, 251, 38), f_47864, *[int_47865, list_47866, list_47869], **kwargs_47880)
        
        
        # Obtaining an instance of the builtin type 'list' (line 252)
        list_47882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 252)
        # Adding element type (line 252)
        
        # Obtaining an instance of the builtin type 'list' (line 252)
        list_47883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 62), 'list')
        # Adding type elements to the builtin type 'list' instance (line 252)
        # Adding element type (line 252)
        int_47884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 62), list_47883, int_47884)
        # Adding element type (line 252)
        int_47885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 62), list_47883, int_47885)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 61), list_47882, list_47883)
        # Adding element type (line 252)
        
        # Obtaining an instance of the builtin type 'list' (line 252)
        list_47886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 70), 'list')
        # Adding type elements to the builtin type 'list' instance (line 252)
        # Adding element type (line 252)
        int_47887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 71), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 70), list_47886, int_47887)
        # Adding element type (line 252)
        int_47888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 74), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 70), list_47886, int_47888)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 61), list_47882, list_47886)
        
        # Processing the call keyword arguments (line 251)
        kwargs_47889 = {}
        # Getting the type of 'assert_array_almost_equal' (line 251)
        assert_array_almost_equal_47863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 251)
        assert_array_almost_equal_call_result_47890 = invoke(stypy.reporting.localization.Localization(__file__, 251, 12), assert_array_almost_equal_47863, *[f_call_result_47881, list_47882], **kwargs_47889)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_47891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 254)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 254, 8), str_47891)
        # Getting the type of the for loop variable (line 254)
        for_loop_var_47892 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 254, 8), str_47891)
        # Assigning a type to the variable 'p' (line 254)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 8), 'p', for_loop_var_47892)
        # SSA begins for a for statement (line 254)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 255):
        
        # Assigning a Call to a Name (line 255):
        
        # Call to getattr(...): (line 255)
        # Processing the call arguments (line 255)
        # Getting the type of 'fblas' (line 255)
        fblas_47894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 24), 'fblas', False)
        # Getting the type of 'p' (line 255)
        p_47895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 31), 'p', False)
        str_47896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 33), 'str', 'geru')
        # Applying the binary operator '+' (line 255)
        result_add_47897 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 31), '+', p_47895, str_47896)
        
        # Getting the type of 'None' (line 255)
        None_47898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 41), 'None', False)
        # Processing the call keyword arguments (line 255)
        kwargs_47899 = {}
        # Getting the type of 'getattr' (line 255)
        getattr_47893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 255)
        getattr_call_result_47900 = invoke(stypy.reporting.localization.Localization(__file__, 255, 16), getattr_47893, *[fblas_47894, result_add_47897, None_47898], **kwargs_47899)
        
        # Assigning a type to the variable 'f' (line 255)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'f', getattr_call_result_47900)
        
        # Type idiom detected: calculating its left and rigth part (line 256)
        # Getting the type of 'f' (line 256)
        f_47901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 15), 'f')
        # Getting the type of 'None' (line 256)
        None_47902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 20), 'None')
        
        (may_be_47903, more_types_in_union_47904) = may_be_none(f_47901, None_47902)

        if may_be_47903:

            if more_types_in_union_47904:
                # Runtime conditional SSA (line 256)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47904:
                # SSA join for if statement (line 256)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 258)
        # Processing the call arguments (line 258)
        
        # Call to f(...): (line 258)
        # Processing the call arguments (line 258)
        int_47907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 258)
        list_47908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 258)
        # Adding element type (line 258)
        complex_47909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 44), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 43), list_47908, complex_47909)
        # Adding element type (line 258)
        int_47910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 43), list_47908, int_47910)
        
        
        # Obtaining an instance of the builtin type 'list' (line 258)
        list_47911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 52), 'list')
        # Adding type elements to the builtin type 'list' instance (line 258)
        # Adding element type (line 258)
        int_47912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 52), list_47911, int_47912)
        # Adding element type (line 258)
        int_47913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 258, 52), list_47911, int_47913)
        
        # Processing the call keyword arguments (line 258)
        kwargs_47914 = {}
        # Getting the type of 'f' (line 258)
        f_47906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 38), 'f', False)
        # Calling f(args, kwargs) (line 258)
        f_call_result_47915 = invoke(stypy.reporting.localization.Localization(__file__, 258, 38), f_47906, *[int_47907, list_47908, list_47911], **kwargs_47914)
        
        
        # Obtaining an instance of the builtin type 'list' (line 259)
        list_47916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 259)
        # Adding element type (line 259)
        
        # Obtaining an instance of the builtin type 'list' (line 259)
        list_47917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 259)
        # Adding element type (line 259)
        complex_47918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 40), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 39), list_47917, complex_47918)
        # Adding element type (line 259)
        complex_47919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 44), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 39), list_47917, complex_47919)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 38), list_47916, list_47917)
        # Adding element type (line 259)
        
        # Obtaining an instance of the builtin type 'list' (line 259)
        list_47920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 49), 'list')
        # Adding type elements to the builtin type 'list' instance (line 259)
        # Adding element type (line 259)
        int_47921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 49), list_47920, int_47921)
        # Adding element type (line 259)
        int_47922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 49), list_47920, int_47922)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 259, 38), list_47916, list_47920)
        
        # Processing the call keyword arguments (line 258)
        kwargs_47923 = {}
        # Getting the type of 'assert_array_almost_equal' (line 258)
        assert_array_almost_equal_47905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 258)
        assert_array_almost_equal_call_result_47924 = invoke(stypy.reporting.localization.Localization(__file__, 258, 12), assert_array_almost_equal_47905, *[f_call_result_47915, list_47916], **kwargs_47923)
        
        
        # Call to assert_array_almost_equal(...): (line 260)
        # Processing the call arguments (line 260)
        
        # Call to f(...): (line 260)
        # Processing the call arguments (line 260)
        int_47927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 260)
        list_47928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 260)
        # Adding element type (line 260)
        complex_47929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 45), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 44), list_47928, complex_47929)
        # Adding element type (line 260)
        complex_47930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 49), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 44), list_47928, complex_47930)
        # Adding element type (line 260)
        complex_47931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 53), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 44), list_47928, complex_47931)
        
        
        # Obtaining an instance of the builtin type 'list' (line 260)
        list_47932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 58), 'list')
        # Adding type elements to the builtin type 'list' instance (line 260)
        # Adding element type (line 260)
        complex_47933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 59), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 58), list_47932, complex_47933)
        # Adding element type (line 260)
        complex_47934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 63), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 260, 58), list_47932, complex_47934)
        
        # Processing the call keyword arguments (line 260)
        kwargs_47935 = {}
        # Getting the type of 'f' (line 260)
        f_47926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 38), 'f', False)
        # Calling f(args, kwargs) (line 260)
        f_call_result_47936 = invoke(stypy.reporting.localization.Localization(__file__, 260, 38), f_47926, *[int_47927, list_47928, list_47932], **kwargs_47935)
        
        
        # Obtaining an instance of the builtin type 'list' (line 261)
        list_47937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 261)
        # Adding element type (line 261)
        
        # Obtaining an instance of the builtin type 'list' (line 261)
        list_47938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 261)
        # Adding element type (line 261)
        int_47939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 39), list_47938, int_47939)
        # Adding element type (line 261)
        int_47940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 39), list_47938, int_47940)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 38), list_47937, list_47938)
        # Adding element type (line 261)
        
        # Obtaining an instance of the builtin type 'list' (line 261)
        list_47941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 261)
        # Adding element type (line 261)
        int_47942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 47), list_47941, int_47942)
        # Adding element type (line 261)
        int_47943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 47), list_47941, int_47943)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 38), list_47937, list_47941)
        # Adding element type (line 261)
        
        # Obtaining an instance of the builtin type 'list' (line 261)
        list_47944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 261)
        # Adding element type (line 261)
        int_47945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 57), list_47944, int_47945)
        # Adding element type (line 261)
        int_47946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 57), list_47944, int_47946)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 261, 38), list_47937, list_47944)
        
        # Processing the call keyword arguments (line 260)
        kwargs_47947 = {}
        # Getting the type of 'assert_array_almost_equal' (line 260)
        assert_array_almost_equal_47925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 260)
        assert_array_almost_equal_call_result_47948 = invoke(stypy.reporting.localization.Localization(__file__, 260, 12), assert_array_almost_equal_47925, *[f_call_result_47936, list_47937], **kwargs_47947)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_47949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 263)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 263, 8), str_47949)
        # Getting the type of the for loop variable (line 263)
        for_loop_var_47950 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 263, 8), str_47949)
        # Assigning a type to the variable 'p' (line 263)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 8), 'p', for_loop_var_47950)
        # SSA begins for a for statement (line 263)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 264)
        tuple_47951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 264)
        # Adding element type (line 264)
        str_47952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 25), 'str', 'ger')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 25), tuple_47951, str_47952)
        # Adding element type (line 264)
        str_47953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 32), 'str', 'gerc')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 264, 25), tuple_47951, str_47953)
        
        # Testing the type of a for loop iterable (line 264)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 264, 12), tuple_47951)
        # Getting the type of the for loop variable (line 264)
        for_loop_var_47954 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 264, 12), tuple_47951)
        # Assigning a type to the variable 'name' (line 264)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'name', for_loop_var_47954)
        # SSA begins for a for statement (line 264)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 265):
        
        # Assigning a Call to a Name (line 265):
        
        # Call to getattr(...): (line 265)
        # Processing the call arguments (line 265)
        # Getting the type of 'fblas' (line 265)
        fblas_47956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 28), 'fblas', False)
        # Getting the type of 'p' (line 265)
        p_47957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 35), 'p', False)
        # Getting the type of 'name' (line 265)
        name_47958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 37), 'name', False)
        # Applying the binary operator '+' (line 265)
        result_add_47959 = python_operator(stypy.reporting.localization.Localization(__file__, 265, 35), '+', p_47957, name_47958)
        
        # Getting the type of 'None' (line 265)
        None_47960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 43), 'None', False)
        # Processing the call keyword arguments (line 265)
        kwargs_47961 = {}
        # Getting the type of 'getattr' (line 265)
        getattr_47955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 20), 'getattr', False)
        # Calling getattr(args, kwargs) (line 265)
        getattr_call_result_47962 = invoke(stypy.reporting.localization.Localization(__file__, 265, 20), getattr_47955, *[fblas_47956, result_add_47959, None_47960], **kwargs_47961)
        
        # Assigning a type to the variable 'f' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 16), 'f', getattr_call_result_47962)
        
        # Type idiom detected: calculating its left and rigth part (line 266)
        # Getting the type of 'f' (line 266)
        f_47963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 19), 'f')
        # Getting the type of 'None' (line 266)
        None_47964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 24), 'None')
        
        (may_be_47965, more_types_in_union_47966) = may_be_none(f_47963, None_47964)

        if may_be_47965:

            if more_types_in_union_47966:
                # Runtime conditional SSA (line 266)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_47966:
                # SSA join for if statement (line 266)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 268)
        # Processing the call arguments (line 268)
        
        # Call to f(...): (line 268)
        # Processing the call arguments (line 268)
        int_47969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 44), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 268)
        list_47970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 268)
        # Adding element type (line 268)
        complex_47971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 48), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 47), list_47970, complex_47971)
        # Adding element type (line 268)
        int_47972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 47), list_47970, int_47972)
        
        
        # Obtaining an instance of the builtin type 'list' (line 268)
        list_47973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 56), 'list')
        # Adding type elements to the builtin type 'list' instance (line 268)
        # Adding element type (line 268)
        int_47974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 56), list_47973, int_47974)
        # Adding element type (line 268)
        int_47975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 56), list_47973, int_47975)
        
        # Processing the call keyword arguments (line 268)
        kwargs_47976 = {}
        # Getting the type of 'f' (line 268)
        f_47968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 42), 'f', False)
        # Calling f(args, kwargs) (line 268)
        f_call_result_47977 = invoke(stypy.reporting.localization.Localization(__file__, 268, 42), f_47968, *[int_47969, list_47970, list_47973], **kwargs_47976)
        
        
        # Obtaining an instance of the builtin type 'list' (line 269)
        list_47978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 269)
        # Adding element type (line 269)
        
        # Obtaining an instance of the builtin type 'list' (line 269)
        list_47979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 269)
        # Adding element type (line 269)
        complex_47980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 44), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 43), list_47979, complex_47980)
        # Adding element type (line 269)
        complex_47981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 48), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 43), list_47979, complex_47981)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 42), list_47978, list_47979)
        # Adding element type (line 269)
        
        # Obtaining an instance of the builtin type 'list' (line 269)
        list_47982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 269)
        # Adding element type (line 269)
        int_47983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 53), list_47982, int_47983)
        # Adding element type (line 269)
        int_47984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 53), list_47982, int_47984)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 269, 42), list_47978, list_47982)
        
        # Processing the call keyword arguments (line 268)
        kwargs_47985 = {}
        # Getting the type of 'assert_array_almost_equal' (line 268)
        assert_array_almost_equal_47967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 268)
        assert_array_almost_equal_call_result_47986 = invoke(stypy.reporting.localization.Localization(__file__, 268, 16), assert_array_almost_equal_47967, *[f_call_result_47977, list_47978], **kwargs_47985)
        
        
        # Call to assert_array_almost_equal(...): (line 270)
        # Processing the call arguments (line 270)
        
        # Call to f(...): (line 270)
        # Processing the call arguments (line 270)
        int_47989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 44), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 270)
        list_47990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 270)
        # Adding element type (line 270)
        complex_47991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 48), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 47), list_47990, complex_47991)
        # Adding element type (line 270)
        complex_47992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 52), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 47), list_47990, complex_47992)
        # Adding element type (line 270)
        complex_47993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 56), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 47), list_47990, complex_47993)
        
        
        # Obtaining an instance of the builtin type 'list' (line 270)
        list_47994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 270)
        # Adding element type (line 270)
        complex_47995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 62), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 61), list_47994, complex_47995)
        # Adding element type (line 270)
        complex_47996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 66), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 61), list_47994, complex_47996)
        
        # Processing the call keyword arguments (line 270)
        kwargs_47997 = {}
        # Getting the type of 'f' (line 270)
        f_47988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 42), 'f', False)
        # Calling f(args, kwargs) (line 270)
        f_call_result_47998 = invoke(stypy.reporting.localization.Localization(__file__, 270, 42), f_47988, *[int_47989, list_47990, list_47994], **kwargs_47997)
        
        
        # Obtaining an instance of the builtin type 'list' (line 271)
        list_47999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 271)
        # Adding element type (line 271)
        
        # Obtaining an instance of the builtin type 'list' (line 271)
        list_48000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 271)
        # Adding element type (line 271)
        int_48001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 43), list_48000, int_48001)
        # Adding element type (line 271)
        int_48002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 43), list_48000, int_48002)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 42), list_47999, list_48000)
        # Adding element type (line 271)
        
        # Obtaining an instance of the builtin type 'list' (line 271)
        list_48003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 271)
        # Adding element type (line 271)
        int_48004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 51), list_48003, int_48004)
        # Adding element type (line 271)
        int_48005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 51), list_48003, int_48005)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 42), list_47999, list_48003)
        # Adding element type (line 271)
        
        # Obtaining an instance of the builtin type 'list' (line 271)
        list_48006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 271)
        # Adding element type (line 271)
        int_48007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 61), list_48006, int_48007)
        # Adding element type (line 271)
        int_48008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 66), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 61), list_48006, int_48008)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 42), list_47999, list_48006)
        
        # Processing the call keyword arguments (line 270)
        kwargs_48009 = {}
        # Getting the type of 'assert_array_almost_equal' (line 270)
        assert_array_almost_equal_47987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 16), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 270)
        assert_array_almost_equal_call_result_48010 = invoke(stypy.reporting.localization.Localization(__file__, 270, 16), assert_array_almost_equal_47987, *[f_call_result_47998, list_47999], **kwargs_48009)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_ger(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ger' in the type store
        # Getting the type of 'stypy_return_type' (line 241)
        stypy_return_type_48011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_48011)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ger'
        return stypy_return_type_48011


    @norecursion
    def test_syr_her(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_syr_her'
        module_type_store = module_type_store.open_function_context('test_syr_her', 273, 4, False)
        # Assigning a type to the variable 'self' (line 274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_syr_her')
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_syr_her.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_syr_her', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_syr_her', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_syr_her(...)' code ##################

        
        # Assigning a Call to a Name (line 274):
        
        # Assigning a Call to a Name (line 274):
        
        # Call to arange(...): (line 274)
        # Processing the call arguments (line 274)
        int_48014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 22), 'int')
        int_48015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 25), 'int')
        # Processing the call keyword arguments (line 274)
        str_48016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 274, 34), 'str', 'd')
        keyword_48017 = str_48016
        kwargs_48018 = {'dtype': keyword_48017}
        # Getting the type of 'np' (line 274)
        np_48012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'np', False)
        # Obtaining the member 'arange' of a type (line 274)
        arange_48013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 274, 12), np_48012, 'arange')
        # Calling arange(args, kwargs) (line 274)
        arange_call_result_48019 = invoke(stypy.reporting.localization.Localization(__file__, 274, 12), arange_48013, *[int_48014, int_48015], **kwargs_48018)
        
        # Assigning a type to the variable 'x' (line 274)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 8), 'x', arange_call_result_48019)
        
        # Assigning a Call to a Name (line 275):
        
        # Assigning a Call to a Name (line 275):
        
        # Call to triu(...): (line 275)
        # Processing the call arguments (line 275)
        
        # Obtaining the type of the subscript
        slice_48022 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 275, 23), None, None, None)
        # Getting the type of 'np' (line 275)
        np_48023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 28), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 275)
        newaxis_48024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 28), np_48023, 'newaxis')
        # Getting the type of 'x' (line 275)
        x_48025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 23), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 275)
        getitem___48026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 23), x_48025, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 275)
        subscript_call_result_48027 = invoke(stypy.reporting.localization.Localization(__file__, 275, 23), getitem___48026, (slice_48022, newaxis_48024))
        
        # Getting the type of 'x' (line 275)
        x_48028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'x', False)
        # Applying the binary operator '*' (line 275)
        result_mul_48029 = python_operator(stypy.reporting.localization.Localization(__file__, 275, 23), '*', subscript_call_result_48027, x_48028)
        
        # Processing the call keyword arguments (line 275)
        kwargs_48030 = {}
        # Getting the type of 'np' (line 275)
        np_48020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 15), 'np', False)
        # Obtaining the member 'triu' of a type (line 275)
        triu_48021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 15), np_48020, 'triu')
        # Calling triu(args, kwargs) (line 275)
        triu_call_result_48031 = invoke(stypy.reporting.localization.Localization(__file__, 275, 15), triu_48021, *[result_mul_48029], **kwargs_48030)
        
        # Assigning a type to the variable 'resx' (line 275)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 8), 'resx', triu_call_result_48031)
        
        # Assigning a Call to a Name (line 276):
        
        # Assigning a Call to a Name (line 276):
        
        # Call to triu(...): (line 276)
        # Processing the call arguments (line 276)
        
        # Obtaining the type of the subscript
        int_48034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 35), 'int')
        slice_48035 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 276, 31), None, None, int_48034)
        # Getting the type of 'np' (line 276)
        np_48036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 39), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 276)
        newaxis_48037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 39), np_48036, 'newaxis')
        # Getting the type of 'x' (line 276)
        x_48038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 31), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 276)
        getitem___48039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 31), x_48038, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 276)
        subscript_call_result_48040 = invoke(stypy.reporting.localization.Localization(__file__, 276, 31), getitem___48039, (slice_48035, newaxis_48037))
        
        
        # Obtaining the type of the subscript
        int_48041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 276, 57), 'int')
        slice_48042 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 276, 53), None, None, int_48041)
        # Getting the type of 'x' (line 276)
        x_48043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 53), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 276)
        getitem___48044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 53), x_48043, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 276)
        subscript_call_result_48045 = invoke(stypy.reporting.localization.Localization(__file__, 276, 53), getitem___48044, slice_48042)
        
        # Applying the binary operator '*' (line 276)
        result_mul_48046 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 31), '*', subscript_call_result_48040, subscript_call_result_48045)
        
        # Processing the call keyword arguments (line 276)
        kwargs_48047 = {}
        # Getting the type of 'np' (line 276)
        np_48032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 23), 'np', False)
        # Obtaining the member 'triu' of a type (line 276)
        triu_48033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 23), np_48032, 'triu')
        # Calling triu(args, kwargs) (line 276)
        triu_call_result_48048 = invoke(stypy.reporting.localization.Localization(__file__, 276, 23), triu_48033, *[result_mul_48046], **kwargs_48047)
        
        # Assigning a type to the variable 'resx_reverse' (line 276)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 8), 'resx_reverse', triu_call_result_48048)
        
        # Assigning a Call to a Name (line 278):
        
        # Assigning a Call to a Name (line 278):
        
        # Call to linspace(...): (line 278)
        # Processing the call arguments (line 278)
        int_48051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 24), 'int')
        float_48052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 27), 'float')
        int_48053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 278, 32), 'int')
        # Processing the call keyword arguments (line 278)
        # Getting the type of 'False' (line 278)
        False_48054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 45), 'False', False)
        keyword_48055 = False_48054
        kwargs_48056 = {'endpoint': keyword_48055}
        # Getting the type of 'np' (line 278)
        np_48049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 12), 'np', False)
        # Obtaining the member 'linspace' of a type (line 278)
        linspace_48050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 12), np_48049, 'linspace')
        # Calling linspace(args, kwargs) (line 278)
        linspace_call_result_48057 = invoke(stypy.reporting.localization.Localization(__file__, 278, 12), linspace_48050, *[int_48051, float_48052, int_48053], **kwargs_48056)
        
        # Assigning a type to the variable 'y' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 8), 'y', linspace_call_result_48057)
        
        # Assigning a Call to a Name (line 280):
        
        # Assigning a Call to a Name (line 280):
        
        # Call to view(...): (line 280)
        # Processing the call arguments (line 280)
        str_48067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 44), 'str', 'D')
        # Processing the call keyword arguments (line 280)
        kwargs_48068 = {}
        
        # Call to arange(...): (line 280)
        # Processing the call arguments (line 280)
        int_48060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 22), 'int')
        int_48061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 25), 'int')
        # Processing the call keyword arguments (line 280)
        str_48062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 34), 'str', 'd')
        keyword_48063 = str_48062
        kwargs_48064 = {'dtype': keyword_48063}
        # Getting the type of 'np' (line 280)
        np_48058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 12), 'np', False)
        # Obtaining the member 'arange' of a type (line 280)
        arange_48059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 12), np_48058, 'arange')
        # Calling arange(args, kwargs) (line 280)
        arange_call_result_48065 = invoke(stypy.reporting.localization.Localization(__file__, 280, 12), arange_48059, *[int_48060, int_48061], **kwargs_48064)
        
        # Obtaining the member 'view' of a type (line 280)
        view_48066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 12), arange_call_result_48065, 'view')
        # Calling view(args, kwargs) (line 280)
        view_call_result_48069 = invoke(stypy.reporting.localization.Localization(__file__, 280, 12), view_48066, *[str_48067], **kwargs_48068)
        
        # Assigning a type to the variable 'z' (line 280)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 280, 8), 'z', view_call_result_48069)
        
        # Assigning a Call to a Name (line 281):
        
        # Assigning a Call to a Name (line 281):
        
        # Call to triu(...): (line 281)
        # Processing the call arguments (line 281)
        
        # Obtaining the type of the subscript
        slice_48072 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 281, 23), None, None, None)
        # Getting the type of 'np' (line 281)
        np_48073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 28), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 281)
        newaxis_48074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 28), np_48073, 'newaxis')
        # Getting the type of 'z' (line 281)
        z_48075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 23), 'z', False)
        # Obtaining the member '__getitem__' of a type (line 281)
        getitem___48076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 23), z_48075, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 281)
        subscript_call_result_48077 = invoke(stypy.reporting.localization.Localization(__file__, 281, 23), getitem___48076, (slice_48072, newaxis_48074))
        
        # Getting the type of 'z' (line 281)
        z_48078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 42), 'z', False)
        # Applying the binary operator '*' (line 281)
        result_mul_48079 = python_operator(stypy.reporting.localization.Localization(__file__, 281, 23), '*', subscript_call_result_48077, z_48078)
        
        # Processing the call keyword arguments (line 281)
        kwargs_48080 = {}
        # Getting the type of 'np' (line 281)
        np_48070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 15), 'np', False)
        # Obtaining the member 'triu' of a type (line 281)
        triu_48071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 15), np_48070, 'triu')
        # Calling triu(args, kwargs) (line 281)
        triu_call_result_48081 = invoke(stypy.reporting.localization.Localization(__file__, 281, 15), triu_48071, *[result_mul_48079], **kwargs_48080)
        
        # Assigning a type to the variable 'resz' (line 281)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'resz', triu_call_result_48081)
        
        # Assigning a Call to a Name (line 282):
        
        # Assigning a Call to a Name (line 282):
        
        # Call to triu(...): (line 282)
        # Processing the call arguments (line 282)
        
        # Obtaining the type of the subscript
        int_48084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 282, 35), 'int')
        slice_48085 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 282, 31), None, None, int_48084)
        # Getting the type of 'np' (line 282)
        np_48086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 39), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 282)
        newaxis_48087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 282, 39), np_48086, 'newaxis')
        # Getting the type of 'z' (line 282)
        z_48088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 31), 'z', False)
        # Obtaining the member '__getitem__' of a type (line 282)
        getitem___48089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 282, 31), z_48088, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 282)
        subscript_call_result_48090 = invoke(stypy.reporting.localization.Localization(__file__, 282, 31), getitem___48089, (slice_48085, newaxis_48087))
        
        
        # Obtaining the type of the subscript
        int_48091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 282, 57), 'int')
        slice_48092 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 282, 53), None, None, int_48091)
        # Getting the type of 'z' (line 282)
        z_48093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 53), 'z', False)
        # Obtaining the member '__getitem__' of a type (line 282)
        getitem___48094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 282, 53), z_48093, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 282)
        subscript_call_result_48095 = invoke(stypy.reporting.localization.Localization(__file__, 282, 53), getitem___48094, slice_48092)
        
        # Applying the binary operator '*' (line 282)
        result_mul_48096 = python_operator(stypy.reporting.localization.Localization(__file__, 282, 31), '*', subscript_call_result_48090, subscript_call_result_48095)
        
        # Processing the call keyword arguments (line 282)
        kwargs_48097 = {}
        # Getting the type of 'np' (line 282)
        np_48082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 23), 'np', False)
        # Obtaining the member 'triu' of a type (line 282)
        triu_48083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 282, 23), np_48082, 'triu')
        # Calling triu(args, kwargs) (line 282)
        triu_call_result_48098 = invoke(stypy.reporting.localization.Localization(__file__, 282, 23), triu_48083, *[result_mul_48096], **kwargs_48097)
        
        # Assigning a type to the variable 'resz_reverse' (line 282)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 8), 'resz_reverse', triu_call_result_48098)
        
        # Assigning a Call to a Name (line 283):
        
        # Assigning a Call to a Name (line 283):
        
        # Call to triu(...): (line 283)
        # Processing the call arguments (line 283)
        
        # Obtaining the type of the subscript
        slice_48101 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 283, 23), None, None, None)
        # Getting the type of 'np' (line 283)
        np_48102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 28), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 283)
        newaxis_48103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 283, 28), np_48102, 'newaxis')
        # Getting the type of 'z' (line 283)
        z_48104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 23), 'z', False)
        # Obtaining the member '__getitem__' of a type (line 283)
        getitem___48105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 283, 23), z_48104, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 283)
        subscript_call_result_48106 = invoke(stypy.reporting.localization.Localization(__file__, 283, 23), getitem___48105, (slice_48101, newaxis_48103))
        
        
        # Call to conj(...): (line 283)
        # Processing the call keyword arguments (line 283)
        kwargs_48109 = {}
        # Getting the type of 'z' (line 283)
        z_48107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 42), 'z', False)
        # Obtaining the member 'conj' of a type (line 283)
        conj_48108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 283, 42), z_48107, 'conj')
        # Calling conj(args, kwargs) (line 283)
        conj_call_result_48110 = invoke(stypy.reporting.localization.Localization(__file__, 283, 42), conj_48108, *[], **kwargs_48109)
        
        # Applying the binary operator '*' (line 283)
        result_mul_48111 = python_operator(stypy.reporting.localization.Localization(__file__, 283, 23), '*', subscript_call_result_48106, conj_call_result_48110)
        
        # Processing the call keyword arguments (line 283)
        kwargs_48112 = {}
        # Getting the type of 'np' (line 283)
        np_48099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 283, 15), 'np', False)
        # Obtaining the member 'triu' of a type (line 283)
        triu_48100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 283, 15), np_48099, 'triu')
        # Calling triu(args, kwargs) (line 283)
        triu_call_result_48113 = invoke(stypy.reporting.localization.Localization(__file__, 283, 15), triu_48100, *[result_mul_48111], **kwargs_48112)
        
        # Assigning a type to the variable 'rehz' (line 283)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 283, 8), 'rehz', triu_call_result_48113)
        
        # Assigning a Call to a Name (line 284):
        
        # Assigning a Call to a Name (line 284):
        
        # Call to triu(...): (line 284)
        # Processing the call arguments (line 284)
        
        # Obtaining the type of the subscript
        int_48116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 35), 'int')
        slice_48117 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 284, 31), None, None, int_48116)
        # Getting the type of 'np' (line 284)
        np_48118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 39), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 284)
        newaxis_48119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 39), np_48118, 'newaxis')
        # Getting the type of 'z' (line 284)
        z_48120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 31), 'z', False)
        # Obtaining the member '__getitem__' of a type (line 284)
        getitem___48121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 31), z_48120, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 284)
        subscript_call_result_48122 = invoke(stypy.reporting.localization.Localization(__file__, 284, 31), getitem___48121, (slice_48117, newaxis_48119))
        
        
        # Call to conj(...): (line 284)
        # Processing the call keyword arguments (line 284)
        kwargs_48129 = {}
        
        # Obtaining the type of the subscript
        int_48123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 57), 'int')
        slice_48124 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 284, 53), None, None, int_48123)
        # Getting the type of 'z' (line 284)
        z_48125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 53), 'z', False)
        # Obtaining the member '__getitem__' of a type (line 284)
        getitem___48126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 53), z_48125, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 284)
        subscript_call_result_48127 = invoke(stypy.reporting.localization.Localization(__file__, 284, 53), getitem___48126, slice_48124)
        
        # Obtaining the member 'conj' of a type (line 284)
        conj_48128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 53), subscript_call_result_48127, 'conj')
        # Calling conj(args, kwargs) (line 284)
        conj_call_result_48130 = invoke(stypy.reporting.localization.Localization(__file__, 284, 53), conj_48128, *[], **kwargs_48129)
        
        # Applying the binary operator '*' (line 284)
        result_mul_48131 = python_operator(stypy.reporting.localization.Localization(__file__, 284, 31), '*', subscript_call_result_48122, conj_call_result_48130)
        
        # Processing the call keyword arguments (line 284)
        kwargs_48132 = {}
        # Getting the type of 'np' (line 284)
        np_48114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 23), 'np', False)
        # Obtaining the member 'triu' of a type (line 284)
        triu_48115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 23), np_48114, 'triu')
        # Calling triu(args, kwargs) (line 284)
        triu_call_result_48133 = invoke(stypy.reporting.localization.Localization(__file__, 284, 23), triu_48115, *[result_mul_48131], **kwargs_48132)
        
        # Assigning a type to the variable 'rehz_reverse' (line 284)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'rehz_reverse', triu_call_result_48133)
        
        # Assigning a Call to a Name (line 286):
        
        # Assigning a Call to a Name (line 286):
        
        # Call to ravel(...): (line 286)
        # Processing the call keyword arguments (line 286)
        kwargs_48151 = {}
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 286)
        tuple_48134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 286)
        # Adding element type (line 286)
        
        # Call to zeros(...): (line 286)
        # Processing the call arguments (line 286)
        int_48137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 27), 'int')
        # Processing the call keyword arguments (line 286)
        kwargs_48138 = {}
        # Getting the type of 'np' (line 286)
        np_48135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 18), 'np', False)
        # Obtaining the member 'zeros' of a type (line 286)
        zeros_48136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 18), np_48135, 'zeros')
        # Calling zeros(args, kwargs) (line 286)
        zeros_call_result_48139 = invoke(stypy.reporting.localization.Localization(__file__, 286, 18), zeros_48136, *[int_48137], **kwargs_48138)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 18), tuple_48134, zeros_call_result_48139)
        # Adding element type (line 286)
        # Getting the type of 'z' (line 286)
        z_48140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 31), 'z', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 18), tuple_48134, z_48140)
        # Adding element type (line 286)
        
        # Call to zeros(...): (line 286)
        # Processing the call arguments (line 286)
        int_48143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 43), 'int')
        # Processing the call keyword arguments (line 286)
        kwargs_48144 = {}
        # Getting the type of 'np' (line 286)
        np_48141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 34), 'np', False)
        # Obtaining the member 'zeros' of a type (line 286)
        zeros_48142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 34), np_48141, 'zeros')
        # Calling zeros(args, kwargs) (line 286)
        zeros_call_result_48145 = invoke(stypy.reporting.localization.Localization(__file__, 286, 34), zeros_48142, *[int_48143], **kwargs_48144)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 18), tuple_48134, zeros_call_result_48145)
        
        # Getting the type of 'np' (line 286)
        np_48146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 12), 'np', False)
        # Obtaining the member 'c_' of a type (line 286)
        c__48147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 12), np_48146, 'c_')
        # Obtaining the member '__getitem__' of a type (line 286)
        getitem___48148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 12), c__48147, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 286)
        subscript_call_result_48149 = invoke(stypy.reporting.localization.Localization(__file__, 286, 12), getitem___48148, tuple_48134)
        
        # Obtaining the member 'ravel' of a type (line 286)
        ravel_48150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 12), subscript_call_result_48149, 'ravel')
        # Calling ravel(args, kwargs) (line 286)
        ravel_call_result_48152 = invoke(stypy.reporting.localization.Localization(__file__, 286, 12), ravel_48150, *[], **kwargs_48151)
        
        # Assigning a type to the variable 'w' (line 286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 286, 8), 'w', ravel_call_result_48152)
        
        
        # Call to zip(...): (line 288)
        # Processing the call arguments (line 288)
        str_48154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 27), 'str', 'sd')
        
        # Obtaining an instance of the builtin type 'list' (line 288)
        list_48155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 288)
        # Adding element type (line 288)
        float_48156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 33), list_48155, float_48156)
        # Adding element type (line 288)
        float_48157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 33), list_48155, float_48157)
        
        # Processing the call keyword arguments (line 288)
        kwargs_48158 = {}
        # Getting the type of 'zip' (line 288)
        zip_48153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 23), 'zip', False)
        # Calling zip(args, kwargs) (line 288)
        zip_call_result_48159 = invoke(stypy.reporting.localization.Localization(__file__, 288, 23), zip_48153, *[str_48154, list_48155], **kwargs_48158)
        
        # Testing the type of a for loop iterable (line 288)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 288, 8), zip_call_result_48159)
        # Getting the type of the for loop variable (line 288)
        for_loop_var_48160 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 288, 8), zip_call_result_48159)
        # Assigning a type to the variable 'p' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'p', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 8), for_loop_var_48160))
        # Assigning a type to the variable 'rtol' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'rtol', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 8), for_loop_var_48160))
        # SSA begins for a for statement (line 288)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 289):
        
        # Assigning a Call to a Name (line 289):
        
        # Call to getattr(...): (line 289)
        # Processing the call arguments (line 289)
        # Getting the type of 'fblas' (line 289)
        fblas_48162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 24), 'fblas', False)
        # Getting the type of 'p' (line 289)
        p_48163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 31), 'p', False)
        str_48164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 289, 33), 'str', 'syr')
        # Applying the binary operator '+' (line 289)
        result_add_48165 = python_operator(stypy.reporting.localization.Localization(__file__, 289, 31), '+', p_48163, str_48164)
        
        # Getting the type of 'None' (line 289)
        None_48166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 40), 'None', False)
        # Processing the call keyword arguments (line 289)
        kwargs_48167 = {}
        # Getting the type of 'getattr' (line 289)
        getattr_48161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 289)
        getattr_call_result_48168 = invoke(stypy.reporting.localization.Localization(__file__, 289, 16), getattr_48161, *[fblas_48162, result_add_48165, None_48166], **kwargs_48167)
        
        # Assigning a type to the variable 'f' (line 289)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 12), 'f', getattr_call_result_48168)
        
        # Type idiom detected: calculating its left and rigth part (line 290)
        # Getting the type of 'f' (line 290)
        f_48169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 15), 'f')
        # Getting the type of 'None' (line 290)
        None_48170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 20), 'None')
        
        (may_be_48171, more_types_in_union_48172) = may_be_none(f_48169, None_48170)

        if may_be_48171:

            if more_types_in_union_48172:
                # Runtime conditional SSA (line 290)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_48172:
                # SSA join for if statement (line 290)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_allclose(...): (line 292)
        # Processing the call arguments (line 292)
        
        # Call to f(...): (line 292)
        # Processing the call arguments (line 292)
        float_48175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 292, 30), 'float')
        # Getting the type of 'x' (line 292)
        x_48176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 35), 'x', False)
        # Processing the call keyword arguments (line 292)
        kwargs_48177 = {}
        # Getting the type of 'f' (line 292)
        f_48174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 28), 'f', False)
        # Calling f(args, kwargs) (line 292)
        f_call_result_48178 = invoke(stypy.reporting.localization.Localization(__file__, 292, 28), f_48174, *[float_48175, x_48176], **kwargs_48177)
        
        # Getting the type of 'resx' (line 292)
        resx_48179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 39), 'resx', False)
        # Processing the call keyword arguments (line 292)
        # Getting the type of 'rtol' (line 292)
        rtol_48180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 50), 'rtol', False)
        keyword_48181 = rtol_48180
        kwargs_48182 = {'rtol': keyword_48181}
        # Getting the type of 'assert_allclose' (line 292)
        assert_allclose_48173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 292)
        assert_allclose_call_result_48183 = invoke(stypy.reporting.localization.Localization(__file__, 292, 12), assert_allclose_48173, *[f_call_result_48178, resx_48179], **kwargs_48182)
        
        
        # Call to assert_allclose(...): (line 293)
        # Processing the call arguments (line 293)
        
        # Call to f(...): (line 293)
        # Processing the call arguments (line 293)
        float_48186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 30), 'float')
        # Getting the type of 'x' (line 293)
        x_48187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 35), 'x', False)
        # Processing the call keyword arguments (line 293)
        # Getting the type of 'True' (line 293)
        True_48188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 44), 'True', False)
        keyword_48189 = True_48188
        kwargs_48190 = {'lower': keyword_48189}
        # Getting the type of 'f' (line 293)
        f_48185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 28), 'f', False)
        # Calling f(args, kwargs) (line 293)
        f_call_result_48191 = invoke(stypy.reporting.localization.Localization(__file__, 293, 28), f_48185, *[float_48186, x_48187], **kwargs_48190)
        
        # Getting the type of 'resx' (line 293)
        resx_48192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 51), 'resx', False)
        # Obtaining the member 'T' of a type (line 293)
        T_48193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 51), resx_48192, 'T')
        # Processing the call keyword arguments (line 293)
        # Getting the type of 'rtol' (line 293)
        rtol_48194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 64), 'rtol', False)
        keyword_48195 = rtol_48194
        kwargs_48196 = {'rtol': keyword_48195}
        # Getting the type of 'assert_allclose' (line 293)
        assert_allclose_48184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 293)
        assert_allclose_call_result_48197 = invoke(stypy.reporting.localization.Localization(__file__, 293, 12), assert_allclose_48184, *[f_call_result_48191, T_48193], **kwargs_48196)
        
        
        # Call to assert_allclose(...): (line 294)
        # Processing the call arguments (line 294)
        
        # Call to f(...): (line 294)
        # Processing the call arguments (line 294)
        float_48200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 294, 30), 'float')
        # Getting the type of 'y' (line 294)
        y_48201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 35), 'y', False)
        # Processing the call keyword arguments (line 294)
        int_48202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 294, 43), 'int')
        keyword_48203 = int_48202
        int_48204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 294, 51), 'int')
        keyword_48205 = int_48204
        int_48206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 294, 56), 'int')
        keyword_48207 = int_48206
        kwargs_48208 = {'incx': keyword_48203, 'offx': keyword_48205, 'n': keyword_48207}
        # Getting the type of 'f' (line 294)
        f_48199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 28), 'f', False)
        # Calling f(args, kwargs) (line 294)
        f_call_result_48209 = invoke(stypy.reporting.localization.Localization(__file__, 294, 28), f_48199, *[float_48200, y_48201], **kwargs_48208)
        
        # Getting the type of 'resx' (line 294)
        resx_48210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 60), 'resx', False)
        # Processing the call keyword arguments (line 294)
        # Getting the type of 'rtol' (line 294)
        rtol_48211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 71), 'rtol', False)
        keyword_48212 = rtol_48211
        kwargs_48213 = {'rtol': keyword_48212}
        # Getting the type of 'assert_allclose' (line 294)
        assert_allclose_48198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 294)
        assert_allclose_call_result_48214 = invoke(stypy.reporting.localization.Localization(__file__, 294, 12), assert_allclose_48198, *[f_call_result_48209, resx_48210], **kwargs_48213)
        
        
        # Call to assert_allclose(...): (line 296)
        # Processing the call arguments (line 296)
        
        # Call to f(...): (line 296)
        # Processing the call arguments (line 296)
        float_48217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 30), 'float')
        # Getting the type of 'y' (line 296)
        y_48218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 35), 'y', False)
        # Processing the call keyword arguments (line 296)
        int_48219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 43), 'int')
        keyword_48220 = int_48219
        int_48221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 52), 'int')
        keyword_48222 = int_48221
        int_48223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 57), 'int')
        keyword_48224 = int_48223
        kwargs_48225 = {'incx': keyword_48220, 'offx': keyword_48222, 'n': keyword_48224}
        # Getting the type of 'f' (line 296)
        f_48216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 28), 'f', False)
        # Calling f(args, kwargs) (line 296)
        f_call_result_48226 = invoke(stypy.reporting.localization.Localization(__file__, 296, 28), f_48216, *[float_48217, y_48218], **kwargs_48225)
        
        # Getting the type of 'resx_reverse' (line 297)
        resx_reverse_48227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 28), 'resx_reverse', False)
        # Processing the call keyword arguments (line 296)
        # Getting the type of 'rtol' (line 297)
        rtol_48228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 47), 'rtol', False)
        keyword_48229 = rtol_48228
        kwargs_48230 = {'rtol': keyword_48229}
        # Getting the type of 'assert_allclose' (line 296)
        assert_allclose_48215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 296)
        assert_allclose_call_result_48231 = invoke(stypy.reporting.localization.Localization(__file__, 296, 12), assert_allclose_48215, *[f_call_result_48226, resx_reverse_48227], **kwargs_48230)
        
        
        # Assigning a Call to a Name (line 299):
        
        # Assigning a Call to a Name (line 299):
        
        # Call to zeros(...): (line 299)
        # Processing the call arguments (line 299)
        
        # Obtaining an instance of the builtin type 'tuple' (line 299)
        tuple_48234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 299)
        # Adding element type (line 299)
        int_48235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 299, 26), tuple_48234, int_48235)
        # Adding element type (line 299)
        int_48236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 299, 26), tuple_48234, int_48236)
        
        
        
        # Getting the type of 'p' (line 299)
        p_48237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 40), 'p', False)
        str_48238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 45), 'str', 's')
        # Applying the binary operator '==' (line 299)
        result_eq_48239 = python_operator(stypy.reporting.localization.Localization(__file__, 299, 40), '==', p_48237, str_48238)
        
        # Testing the type of an if expression (line 299)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 299, 33), result_eq_48239)
        # SSA begins for if expression (line 299)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        str_48240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 33), 'str', 'f')
        # SSA branch for the else part of an if expression (line 299)
        module_type_store.open_ssa_branch('if expression else')
        str_48241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 54), 'str', 'd')
        # SSA join for if expression (line 299)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_48242 = union_type.UnionType.add(str_48240, str_48241)
        
        str_48243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 59), 'str', 'F')
        # Processing the call keyword arguments (line 299)
        kwargs_48244 = {}
        # Getting the type of 'np' (line 299)
        np_48232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 16), 'np', False)
        # Obtaining the member 'zeros' of a type (line 299)
        zeros_48233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 16), np_48232, 'zeros')
        # Calling zeros(args, kwargs) (line 299)
        zeros_call_result_48245 = invoke(stypy.reporting.localization.Localization(__file__, 299, 16), zeros_48233, *[tuple_48234, if_exp_48242, str_48243], **kwargs_48244)
        
        # Assigning a type to the variable 'a' (line 299)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 12), 'a', zeros_call_result_48245)
        
        # Assigning a Call to a Name (line 300):
        
        # Assigning a Call to a Name (line 300):
        
        # Call to f(...): (line 300)
        # Processing the call arguments (line 300)
        float_48247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 18), 'float')
        # Getting the type of 'x' (line 300)
        x_48248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 23), 'x', False)
        # Processing the call keyword arguments (line 300)
        # Getting the type of 'a' (line 300)
        a_48249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 28), 'a', False)
        keyword_48250 = a_48249
        # Getting the type of 'True' (line 300)
        True_48251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 43), 'True', False)
        keyword_48252 = True_48251
        kwargs_48253 = {'a': keyword_48250, 'overwrite_a': keyword_48252}
        # Getting the type of 'f' (line 300)
        f_48246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 16), 'f', False)
        # Calling f(args, kwargs) (line 300)
        f_call_result_48254 = invoke(stypy.reporting.localization.Localization(__file__, 300, 16), f_48246, *[float_48247, x_48248], **kwargs_48253)
        
        # Assigning a type to the variable 'b' (line 300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 12), 'b', f_call_result_48254)
        
        # Call to assert_allclose(...): (line 301)
        # Processing the call arguments (line 301)
        # Getting the type of 'a' (line 301)
        a_48256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 28), 'a', False)
        # Getting the type of 'resx' (line 301)
        resx_48257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 31), 'resx', False)
        # Processing the call keyword arguments (line 301)
        # Getting the type of 'rtol' (line 301)
        rtol_48258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 42), 'rtol', False)
        keyword_48259 = rtol_48258
        kwargs_48260 = {'rtol': keyword_48259}
        # Getting the type of 'assert_allclose' (line 301)
        assert_allclose_48255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 301)
        assert_allclose_call_result_48261 = invoke(stypy.reporting.localization.Localization(__file__, 301, 12), assert_allclose_48255, *[a_48256, resx_48257], **kwargs_48260)
        
        
        # Assigning a Call to a Name (line 303):
        
        # Assigning a Call to a Name (line 303):
        
        # Call to f(...): (line 303)
        # Processing the call arguments (line 303)
        float_48263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 18), 'float')
        # Getting the type of 'x' (line 303)
        x_48264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 23), 'x', False)
        # Processing the call keyword arguments (line 303)
        # Getting the type of 'a' (line 303)
        a_48265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 28), 'a', False)
        keyword_48266 = a_48265
        kwargs_48267 = {'a': keyword_48266}
        # Getting the type of 'f' (line 303)
        f_48262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 16), 'f', False)
        # Calling f(args, kwargs) (line 303)
        f_call_result_48268 = invoke(stypy.reporting.localization.Localization(__file__, 303, 16), f_48262, *[float_48263, x_48264], **kwargs_48267)
        
        # Assigning a type to the variable 'b' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 12), 'b', f_call_result_48268)
        
        # Call to assert_(...): (line 304)
        # Processing the call arguments (line 304)
        
        # Getting the type of 'a' (line 304)
        a_48270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 20), 'a', False)
        # Getting the type of 'b' (line 304)
        b_48271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 29), 'b', False)
        # Applying the binary operator 'isnot' (line 304)
        result_is_not_48272 = python_operator(stypy.reporting.localization.Localization(__file__, 304, 20), 'isnot', a_48270, b_48271)
        
        # Processing the call keyword arguments (line 304)
        kwargs_48273 = {}
        # Getting the type of 'assert_' (line 304)
        assert__48269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 304)
        assert__call_result_48274 = invoke(stypy.reporting.localization.Localization(__file__, 304, 12), assert__48269, *[result_is_not_48272], **kwargs_48273)
        
        
        # Call to assert_allclose(...): (line 305)
        # Processing the call arguments (line 305)
        # Getting the type of 'b' (line 305)
        b_48276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 28), 'b', False)
        int_48277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 305, 31), 'int')
        # Getting the type of 'resx' (line 305)
        resx_48278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 33), 'resx', False)
        # Applying the binary operator '*' (line 305)
        result_mul_48279 = python_operator(stypy.reporting.localization.Localization(__file__, 305, 31), '*', int_48277, resx_48278)
        
        # Processing the call keyword arguments (line 305)
        # Getting the type of 'rtol' (line 305)
        rtol_48280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 44), 'rtol', False)
        keyword_48281 = rtol_48280
        kwargs_48282 = {'rtol': keyword_48281}
        # Getting the type of 'assert_allclose' (line 305)
        assert_allclose_48275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 305)
        assert_allclose_call_result_48283 = invoke(stypy.reporting.localization.Localization(__file__, 305, 12), assert_allclose_48275, *[b_48276, result_mul_48279], **kwargs_48282)
        
        
        # Call to assert_raises(...): (line 307)
        # Processing the call arguments (line 307)
        # Getting the type of 'Exception' (line 307)
        Exception_48285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 26), 'Exception', False)
        # Getting the type of 'f' (line 307)
        f_48286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 37), 'f', False)
        float_48287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 40), 'float')
        # Getting the type of 'x' (line 307)
        x_48288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 45), 'x', False)
        # Processing the call keyword arguments (line 307)
        int_48289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 53), 'int')
        keyword_48290 = int_48289
        kwargs_48291 = {'incx': keyword_48290}
        # Getting the type of 'assert_raises' (line 307)
        assert_raises_48284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 307)
        assert_raises_call_result_48292 = invoke(stypy.reporting.localization.Localization(__file__, 307, 12), assert_raises_48284, *[Exception_48285, f_48286, float_48287, x_48288], **kwargs_48291)
        
        
        # Call to assert_raises(...): (line 308)
        # Processing the call arguments (line 308)
        # Getting the type of 'Exception' (line 308)
        Exception_48294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 26), 'Exception', False)
        # Getting the type of 'f' (line 308)
        f_48295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 37), 'f', False)
        float_48296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 308, 40), 'float')
        # Getting the type of 'x' (line 308)
        x_48297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 45), 'x', False)
        # Processing the call keyword arguments (line 308)
        int_48298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 308, 53), 'int')
        keyword_48299 = int_48298
        kwargs_48300 = {'offx': keyword_48299}
        # Getting the type of 'assert_raises' (line 308)
        assert_raises_48293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 308)
        assert_raises_call_result_48301 = invoke(stypy.reporting.localization.Localization(__file__, 308, 12), assert_raises_48293, *[Exception_48294, f_48295, float_48296, x_48297], **kwargs_48300)
        
        
        # Call to assert_raises(...): (line 309)
        # Processing the call arguments (line 309)
        # Getting the type of 'Exception' (line 309)
        Exception_48303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 26), 'Exception', False)
        # Getting the type of 'f' (line 309)
        f_48304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 37), 'f', False)
        float_48305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 309, 40), 'float')
        # Getting the type of 'x' (line 309)
        x_48306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 45), 'x', False)
        # Processing the call keyword arguments (line 309)
        int_48307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 309, 53), 'int')
        keyword_48308 = int_48307
        kwargs_48309 = {'offx': keyword_48308}
        # Getting the type of 'assert_raises' (line 309)
        assert_raises_48302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 309)
        assert_raises_call_result_48310 = invoke(stypy.reporting.localization.Localization(__file__, 309, 12), assert_raises_48302, *[Exception_48303, f_48304, float_48305, x_48306], **kwargs_48309)
        
        
        # Call to assert_raises(...): (line 310)
        # Processing the call arguments (line 310)
        # Getting the type of 'Exception' (line 310)
        Exception_48312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 26), 'Exception', False)
        # Getting the type of 'f' (line 310)
        f_48313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 37), 'f', False)
        float_48314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 40), 'float')
        # Getting the type of 'x' (line 310)
        x_48315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 45), 'x', False)
        # Processing the call keyword arguments (line 310)
        int_48316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 50), 'int')
        keyword_48317 = int_48316
        kwargs_48318 = {'n': keyword_48317}
        # Getting the type of 'assert_raises' (line 310)
        assert_raises_48311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 310)
        assert_raises_call_result_48319 = invoke(stypy.reporting.localization.Localization(__file__, 310, 12), assert_raises_48311, *[Exception_48312, f_48313, float_48314, x_48315], **kwargs_48318)
        
        
        # Call to assert_raises(...): (line 311)
        # Processing the call arguments (line 311)
        # Getting the type of 'Exception' (line 311)
        Exception_48321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 26), 'Exception', False)
        # Getting the type of 'f' (line 311)
        f_48322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 37), 'f', False)
        float_48323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 311, 40), 'float')
        # Getting the type of 'x' (line 311)
        x_48324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 45), 'x', False)
        # Processing the call keyword arguments (line 311)
        int_48325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 311, 50), 'int')
        keyword_48326 = int_48325
        kwargs_48327 = {'n': keyword_48326}
        # Getting the type of 'assert_raises' (line 311)
        assert_raises_48320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 311)
        assert_raises_call_result_48328 = invoke(stypy.reporting.localization.Localization(__file__, 311, 12), assert_raises_48320, *[Exception_48321, f_48322, float_48323, x_48324], **kwargs_48327)
        
        
        # Call to assert_raises(...): (line 312)
        # Processing the call arguments (line 312)
        # Getting the type of 'Exception' (line 312)
        Exception_48330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 26), 'Exception', False)
        # Getting the type of 'f' (line 312)
        f_48331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 37), 'f', False)
        float_48332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 40), 'float')
        # Getting the type of 'x' (line 312)
        x_48333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 45), 'x', False)
        # Processing the call keyword arguments (line 312)
        int_48334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 312, 54), 'int')
        keyword_48335 = int_48334
        kwargs_48336 = {'lower': keyword_48335}
        # Getting the type of 'assert_raises' (line 312)
        assert_raises_48329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 312)
        assert_raises_call_result_48337 = invoke(stypy.reporting.localization.Localization(__file__, 312, 12), assert_raises_48329, *[Exception_48330, f_48331, float_48332, x_48333], **kwargs_48336)
        
        
        # Call to assert_raises(...): (line 313)
        # Processing the call arguments (line 313)
        # Getting the type of 'Exception' (line 313)
        Exception_48339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 26), 'Exception', False)
        # Getting the type of 'f' (line 313)
        f_48340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 37), 'f', False)
        float_48341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 40), 'float')
        # Getting the type of 'x' (line 313)
        x_48342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 45), 'x', False)
        # Processing the call keyword arguments (line 313)
        
        # Call to zeros(...): (line 313)
        # Processing the call arguments (line 313)
        
        # Obtaining an instance of the builtin type 'tuple' (line 313)
        tuple_48345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 313)
        # Adding element type (line 313)
        int_48346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 313, 60), tuple_48345, int_48346)
        # Adding element type (line 313)
        int_48347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 313, 60), tuple_48345, int_48347)
        
        str_48348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 67), 'str', 'd')
        str_48349 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 72), 'str', 'F')
        # Processing the call keyword arguments (line 313)
        kwargs_48350 = {}
        # Getting the type of 'np' (line 313)
        np_48343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 50), 'np', False)
        # Obtaining the member 'zeros' of a type (line 313)
        zeros_48344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 50), np_48343, 'zeros')
        # Calling zeros(args, kwargs) (line 313)
        zeros_call_result_48351 = invoke(stypy.reporting.localization.Localization(__file__, 313, 50), zeros_48344, *[tuple_48345, str_48348, str_48349], **kwargs_48350)
        
        keyword_48352 = zeros_call_result_48351
        kwargs_48353 = {'a': keyword_48352}
        # Getting the type of 'assert_raises' (line 313)
        assert_raises_48338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 313)
        assert_raises_call_result_48354 = invoke(stypy.reporting.localization.Localization(__file__, 313, 12), assert_raises_48338, *[Exception_48339, f_48340, float_48341, x_48342], **kwargs_48353)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to zip(...): (line 315)
        # Processing the call arguments (line 315)
        str_48356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 27), 'str', 'cz')
        
        # Obtaining an instance of the builtin type 'list' (line 315)
        list_48357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 315)
        # Adding element type (line 315)
        float_48358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 315, 33), list_48357, float_48358)
        # Adding element type (line 315)
        float_48359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 315, 33), list_48357, float_48359)
        
        # Processing the call keyword arguments (line 315)
        kwargs_48360 = {}
        # Getting the type of 'zip' (line 315)
        zip_48355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 23), 'zip', False)
        # Calling zip(args, kwargs) (line 315)
        zip_call_result_48361 = invoke(stypy.reporting.localization.Localization(__file__, 315, 23), zip_48355, *[str_48356, list_48357], **kwargs_48360)
        
        # Testing the type of a for loop iterable (line 315)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 315, 8), zip_call_result_48361)
        # Getting the type of the for loop variable (line 315)
        for_loop_var_48362 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 315, 8), zip_call_result_48361)
        # Assigning a type to the variable 'p' (line 315)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 315, 8), 'p', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 315, 8), for_loop_var_48362))
        # Assigning a type to the variable 'rtol' (line 315)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 315, 8), 'rtol', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 315, 8), for_loop_var_48362))
        # SSA begins for a for statement (line 315)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 316):
        
        # Assigning a Call to a Name (line 316):
        
        # Call to getattr(...): (line 316)
        # Processing the call arguments (line 316)
        # Getting the type of 'fblas' (line 316)
        fblas_48364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 24), 'fblas', False)
        # Getting the type of 'p' (line 316)
        p_48365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 31), 'p', False)
        str_48366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 33), 'str', 'syr')
        # Applying the binary operator '+' (line 316)
        result_add_48367 = python_operator(stypy.reporting.localization.Localization(__file__, 316, 31), '+', p_48365, str_48366)
        
        # Getting the type of 'None' (line 316)
        None_48368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 40), 'None', False)
        # Processing the call keyword arguments (line 316)
        kwargs_48369 = {}
        # Getting the type of 'getattr' (line 316)
        getattr_48363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 316)
        getattr_call_result_48370 = invoke(stypy.reporting.localization.Localization(__file__, 316, 16), getattr_48363, *[fblas_48364, result_add_48367, None_48368], **kwargs_48369)
        
        # Assigning a type to the variable 'f' (line 316)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 316, 12), 'f', getattr_call_result_48370)
        
        # Type idiom detected: calculating its left and rigth part (line 317)
        # Getting the type of 'f' (line 317)
        f_48371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 15), 'f')
        # Getting the type of 'None' (line 317)
        None_48372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 20), 'None')
        
        (may_be_48373, more_types_in_union_48374) = may_be_none(f_48371, None_48372)

        if may_be_48373:

            if more_types_in_union_48374:
                # Runtime conditional SSA (line 317)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_48374:
                # SSA join for if statement (line 317)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_allclose(...): (line 319)
        # Processing the call arguments (line 319)
        
        # Call to f(...): (line 319)
        # Processing the call arguments (line 319)
        float_48377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 30), 'float')
        # Getting the type of 'z' (line 319)
        z_48378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 35), 'z', False)
        # Processing the call keyword arguments (line 319)
        kwargs_48379 = {}
        # Getting the type of 'f' (line 319)
        f_48376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 28), 'f', False)
        # Calling f(args, kwargs) (line 319)
        f_call_result_48380 = invoke(stypy.reporting.localization.Localization(__file__, 319, 28), f_48376, *[float_48377, z_48378], **kwargs_48379)
        
        # Getting the type of 'resz' (line 319)
        resz_48381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 39), 'resz', False)
        # Processing the call keyword arguments (line 319)
        # Getting the type of 'rtol' (line 319)
        rtol_48382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 50), 'rtol', False)
        keyword_48383 = rtol_48382
        kwargs_48384 = {'rtol': keyword_48383}
        # Getting the type of 'assert_allclose' (line 319)
        assert_allclose_48375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 319)
        assert_allclose_call_result_48385 = invoke(stypy.reporting.localization.Localization(__file__, 319, 12), assert_allclose_48375, *[f_call_result_48380, resz_48381], **kwargs_48384)
        
        
        # Call to assert_allclose(...): (line 320)
        # Processing the call arguments (line 320)
        
        # Call to f(...): (line 320)
        # Processing the call arguments (line 320)
        float_48388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 30), 'float')
        # Getting the type of 'z' (line 320)
        z_48389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 35), 'z', False)
        # Processing the call keyword arguments (line 320)
        # Getting the type of 'True' (line 320)
        True_48390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 44), 'True', False)
        keyword_48391 = True_48390
        kwargs_48392 = {'lower': keyword_48391}
        # Getting the type of 'f' (line 320)
        f_48387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 28), 'f', False)
        # Calling f(args, kwargs) (line 320)
        f_call_result_48393 = invoke(stypy.reporting.localization.Localization(__file__, 320, 28), f_48387, *[float_48388, z_48389], **kwargs_48392)
        
        # Getting the type of 'resz' (line 320)
        resz_48394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 51), 'resz', False)
        # Obtaining the member 'T' of a type (line 320)
        T_48395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 51), resz_48394, 'T')
        # Processing the call keyword arguments (line 320)
        # Getting the type of 'rtol' (line 320)
        rtol_48396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 64), 'rtol', False)
        keyword_48397 = rtol_48396
        kwargs_48398 = {'rtol': keyword_48397}
        # Getting the type of 'assert_allclose' (line 320)
        assert_allclose_48386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 320)
        assert_allclose_call_result_48399 = invoke(stypy.reporting.localization.Localization(__file__, 320, 12), assert_allclose_48386, *[f_call_result_48393, T_48395], **kwargs_48398)
        
        
        # Call to assert_allclose(...): (line 321)
        # Processing the call arguments (line 321)
        
        # Call to f(...): (line 321)
        # Processing the call arguments (line 321)
        float_48402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 30), 'float')
        # Getting the type of 'w' (line 321)
        w_48403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 35), 'w', False)
        # Processing the call keyword arguments (line 321)
        int_48404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 43), 'int')
        keyword_48405 = int_48404
        int_48406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 51), 'int')
        keyword_48407 = int_48406
        int_48408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 56), 'int')
        keyword_48409 = int_48408
        kwargs_48410 = {'incx': keyword_48405, 'offx': keyword_48407, 'n': keyword_48409}
        # Getting the type of 'f' (line 321)
        f_48401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 28), 'f', False)
        # Calling f(args, kwargs) (line 321)
        f_call_result_48411 = invoke(stypy.reporting.localization.Localization(__file__, 321, 28), f_48401, *[float_48402, w_48403], **kwargs_48410)
        
        # Getting the type of 'resz' (line 321)
        resz_48412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 60), 'resz', False)
        # Processing the call keyword arguments (line 321)
        # Getting the type of 'rtol' (line 321)
        rtol_48413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 71), 'rtol', False)
        keyword_48414 = rtol_48413
        kwargs_48415 = {'rtol': keyword_48414}
        # Getting the type of 'assert_allclose' (line 321)
        assert_allclose_48400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 321)
        assert_allclose_call_result_48416 = invoke(stypy.reporting.localization.Localization(__file__, 321, 12), assert_allclose_48400, *[f_call_result_48411, resz_48412], **kwargs_48415)
        
        
        # Call to assert_allclose(...): (line 323)
        # Processing the call arguments (line 323)
        
        # Call to f(...): (line 323)
        # Processing the call arguments (line 323)
        float_48419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 30), 'float')
        # Getting the type of 'w' (line 323)
        w_48420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 35), 'w', False)
        # Processing the call keyword arguments (line 323)
        int_48421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 43), 'int')
        keyword_48422 = int_48421
        int_48423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 52), 'int')
        keyword_48424 = int_48423
        int_48425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 57), 'int')
        keyword_48426 = int_48425
        kwargs_48427 = {'incx': keyword_48422, 'offx': keyword_48424, 'n': keyword_48426}
        # Getting the type of 'f' (line 323)
        f_48418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 28), 'f', False)
        # Calling f(args, kwargs) (line 323)
        f_call_result_48428 = invoke(stypy.reporting.localization.Localization(__file__, 323, 28), f_48418, *[float_48419, w_48420], **kwargs_48427)
        
        # Getting the type of 'resz_reverse' (line 324)
        resz_reverse_48429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 28), 'resz_reverse', False)
        # Processing the call keyword arguments (line 323)
        # Getting the type of 'rtol' (line 324)
        rtol_48430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 47), 'rtol', False)
        keyword_48431 = rtol_48430
        kwargs_48432 = {'rtol': keyword_48431}
        # Getting the type of 'assert_allclose' (line 323)
        assert_allclose_48417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 323)
        assert_allclose_call_result_48433 = invoke(stypy.reporting.localization.Localization(__file__, 323, 12), assert_allclose_48417, *[f_call_result_48428, resz_reverse_48429], **kwargs_48432)
        
        
        # Assigning a Call to a Name (line 326):
        
        # Assigning a Call to a Name (line 326):
        
        # Call to zeros(...): (line 326)
        # Processing the call arguments (line 326)
        
        # Obtaining an instance of the builtin type 'tuple' (line 326)
        tuple_48436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 326)
        # Adding element type (line 326)
        int_48437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 26), tuple_48436, int_48437)
        # Adding element type (line 326)
        int_48438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 26), tuple_48436, int_48438)
        
        
        
        # Getting the type of 'p' (line 326)
        p_48439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 40), 'p', False)
        str_48440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 45), 'str', 'c')
        # Applying the binary operator '==' (line 326)
        result_eq_48441 = python_operator(stypy.reporting.localization.Localization(__file__, 326, 40), '==', p_48439, str_48440)
        
        # Testing the type of an if expression (line 326)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 326, 33), result_eq_48441)
        # SSA begins for if expression (line 326)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        str_48442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 33), 'str', 'F')
        # SSA branch for the else part of an if expression (line 326)
        module_type_store.open_ssa_branch('if expression else')
        str_48443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 54), 'str', 'D')
        # SSA join for if expression (line 326)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_48444 = union_type.UnionType.add(str_48442, str_48443)
        
        str_48445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 59), 'str', 'F')
        # Processing the call keyword arguments (line 326)
        kwargs_48446 = {}
        # Getting the type of 'np' (line 326)
        np_48434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 16), 'np', False)
        # Obtaining the member 'zeros' of a type (line 326)
        zeros_48435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 16), np_48434, 'zeros')
        # Calling zeros(args, kwargs) (line 326)
        zeros_call_result_48447 = invoke(stypy.reporting.localization.Localization(__file__, 326, 16), zeros_48435, *[tuple_48436, if_exp_48444, str_48445], **kwargs_48446)
        
        # Assigning a type to the variable 'a' (line 326)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'a', zeros_call_result_48447)
        
        # Assigning a Call to a Name (line 327):
        
        # Assigning a Call to a Name (line 327):
        
        # Call to f(...): (line 327)
        # Processing the call arguments (line 327)
        float_48449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 18), 'float')
        # Getting the type of 'z' (line 327)
        z_48450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 23), 'z', False)
        # Processing the call keyword arguments (line 327)
        # Getting the type of 'a' (line 327)
        a_48451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 28), 'a', False)
        keyword_48452 = a_48451
        # Getting the type of 'True' (line 327)
        True_48453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 43), 'True', False)
        keyword_48454 = True_48453
        kwargs_48455 = {'a': keyword_48452, 'overwrite_a': keyword_48454}
        # Getting the type of 'f' (line 327)
        f_48448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 16), 'f', False)
        # Calling f(args, kwargs) (line 327)
        f_call_result_48456 = invoke(stypy.reporting.localization.Localization(__file__, 327, 16), f_48448, *[float_48449, z_48450], **kwargs_48455)
        
        # Assigning a type to the variable 'b' (line 327)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 12), 'b', f_call_result_48456)
        
        # Call to assert_allclose(...): (line 328)
        # Processing the call arguments (line 328)
        # Getting the type of 'a' (line 328)
        a_48458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 28), 'a', False)
        # Getting the type of 'resz' (line 328)
        resz_48459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 31), 'resz', False)
        # Processing the call keyword arguments (line 328)
        # Getting the type of 'rtol' (line 328)
        rtol_48460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 42), 'rtol', False)
        keyword_48461 = rtol_48460
        kwargs_48462 = {'rtol': keyword_48461}
        # Getting the type of 'assert_allclose' (line 328)
        assert_allclose_48457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 328)
        assert_allclose_call_result_48463 = invoke(stypy.reporting.localization.Localization(__file__, 328, 12), assert_allclose_48457, *[a_48458, resz_48459], **kwargs_48462)
        
        
        # Assigning a Call to a Name (line 330):
        
        # Assigning a Call to a Name (line 330):
        
        # Call to f(...): (line 330)
        # Processing the call arguments (line 330)
        float_48465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 18), 'float')
        # Getting the type of 'z' (line 330)
        z_48466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 23), 'z', False)
        # Processing the call keyword arguments (line 330)
        # Getting the type of 'a' (line 330)
        a_48467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 28), 'a', False)
        keyword_48468 = a_48467
        kwargs_48469 = {'a': keyword_48468}
        # Getting the type of 'f' (line 330)
        f_48464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 16), 'f', False)
        # Calling f(args, kwargs) (line 330)
        f_call_result_48470 = invoke(stypy.reporting.localization.Localization(__file__, 330, 16), f_48464, *[float_48465, z_48466], **kwargs_48469)
        
        # Assigning a type to the variable 'b' (line 330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 12), 'b', f_call_result_48470)
        
        # Call to assert_(...): (line 331)
        # Processing the call arguments (line 331)
        
        # Getting the type of 'a' (line 331)
        a_48472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 20), 'a', False)
        # Getting the type of 'b' (line 331)
        b_48473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 29), 'b', False)
        # Applying the binary operator 'isnot' (line 331)
        result_is_not_48474 = python_operator(stypy.reporting.localization.Localization(__file__, 331, 20), 'isnot', a_48472, b_48473)
        
        # Processing the call keyword arguments (line 331)
        kwargs_48475 = {}
        # Getting the type of 'assert_' (line 331)
        assert__48471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 331)
        assert__call_result_48476 = invoke(stypy.reporting.localization.Localization(__file__, 331, 12), assert__48471, *[result_is_not_48474], **kwargs_48475)
        
        
        # Call to assert_allclose(...): (line 332)
        # Processing the call arguments (line 332)
        # Getting the type of 'b' (line 332)
        b_48478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 28), 'b', False)
        int_48479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 332, 31), 'int')
        # Getting the type of 'resz' (line 332)
        resz_48480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 33), 'resz', False)
        # Applying the binary operator '*' (line 332)
        result_mul_48481 = python_operator(stypy.reporting.localization.Localization(__file__, 332, 31), '*', int_48479, resz_48480)
        
        # Processing the call keyword arguments (line 332)
        # Getting the type of 'rtol' (line 332)
        rtol_48482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 44), 'rtol', False)
        keyword_48483 = rtol_48482
        kwargs_48484 = {'rtol': keyword_48483}
        # Getting the type of 'assert_allclose' (line 332)
        assert_allclose_48477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 332)
        assert_allclose_call_result_48485 = invoke(stypy.reporting.localization.Localization(__file__, 332, 12), assert_allclose_48477, *[b_48478, result_mul_48481], **kwargs_48484)
        
        
        # Call to assert_raises(...): (line 334)
        # Processing the call arguments (line 334)
        # Getting the type of 'Exception' (line 334)
        Exception_48487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 26), 'Exception', False)
        # Getting the type of 'f' (line 334)
        f_48488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 37), 'f', False)
        float_48489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 40), 'float')
        # Getting the type of 'x' (line 334)
        x_48490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 45), 'x', False)
        # Processing the call keyword arguments (line 334)
        int_48491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 334, 53), 'int')
        keyword_48492 = int_48491
        kwargs_48493 = {'incx': keyword_48492}
        # Getting the type of 'assert_raises' (line 334)
        assert_raises_48486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 334)
        assert_raises_call_result_48494 = invoke(stypy.reporting.localization.Localization(__file__, 334, 12), assert_raises_48486, *[Exception_48487, f_48488, float_48489, x_48490], **kwargs_48493)
        
        
        # Call to assert_raises(...): (line 335)
        # Processing the call arguments (line 335)
        # Getting the type of 'Exception' (line 335)
        Exception_48496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 26), 'Exception', False)
        # Getting the type of 'f' (line 335)
        f_48497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 37), 'f', False)
        float_48498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 40), 'float')
        # Getting the type of 'x' (line 335)
        x_48499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 45), 'x', False)
        # Processing the call keyword arguments (line 335)
        int_48500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 53), 'int')
        keyword_48501 = int_48500
        kwargs_48502 = {'offx': keyword_48501}
        # Getting the type of 'assert_raises' (line 335)
        assert_raises_48495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 335)
        assert_raises_call_result_48503 = invoke(stypy.reporting.localization.Localization(__file__, 335, 12), assert_raises_48495, *[Exception_48496, f_48497, float_48498, x_48499], **kwargs_48502)
        
        
        # Call to assert_raises(...): (line 336)
        # Processing the call arguments (line 336)
        # Getting the type of 'Exception' (line 336)
        Exception_48505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 26), 'Exception', False)
        # Getting the type of 'f' (line 336)
        f_48506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 37), 'f', False)
        float_48507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 40), 'float')
        # Getting the type of 'x' (line 336)
        x_48508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 45), 'x', False)
        # Processing the call keyword arguments (line 336)
        int_48509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 53), 'int')
        keyword_48510 = int_48509
        kwargs_48511 = {'offx': keyword_48510}
        # Getting the type of 'assert_raises' (line 336)
        assert_raises_48504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 336)
        assert_raises_call_result_48512 = invoke(stypy.reporting.localization.Localization(__file__, 336, 12), assert_raises_48504, *[Exception_48505, f_48506, float_48507, x_48508], **kwargs_48511)
        
        
        # Call to assert_raises(...): (line 337)
        # Processing the call arguments (line 337)
        # Getting the type of 'Exception' (line 337)
        Exception_48514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 26), 'Exception', False)
        # Getting the type of 'f' (line 337)
        f_48515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 37), 'f', False)
        float_48516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 40), 'float')
        # Getting the type of 'x' (line 337)
        x_48517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 45), 'x', False)
        # Processing the call keyword arguments (line 337)
        int_48518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 50), 'int')
        keyword_48519 = int_48518
        kwargs_48520 = {'n': keyword_48519}
        # Getting the type of 'assert_raises' (line 337)
        assert_raises_48513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 337)
        assert_raises_call_result_48521 = invoke(stypy.reporting.localization.Localization(__file__, 337, 12), assert_raises_48513, *[Exception_48514, f_48515, float_48516, x_48517], **kwargs_48520)
        
        
        # Call to assert_raises(...): (line 338)
        # Processing the call arguments (line 338)
        # Getting the type of 'Exception' (line 338)
        Exception_48523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 26), 'Exception', False)
        # Getting the type of 'f' (line 338)
        f_48524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 37), 'f', False)
        float_48525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 338, 40), 'float')
        # Getting the type of 'x' (line 338)
        x_48526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 45), 'x', False)
        # Processing the call keyword arguments (line 338)
        int_48527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 338, 50), 'int')
        keyword_48528 = int_48527
        kwargs_48529 = {'n': keyword_48528}
        # Getting the type of 'assert_raises' (line 338)
        assert_raises_48522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 338)
        assert_raises_call_result_48530 = invoke(stypy.reporting.localization.Localization(__file__, 338, 12), assert_raises_48522, *[Exception_48523, f_48524, float_48525, x_48526], **kwargs_48529)
        
        
        # Call to assert_raises(...): (line 339)
        # Processing the call arguments (line 339)
        # Getting the type of 'Exception' (line 339)
        Exception_48532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 26), 'Exception', False)
        # Getting the type of 'f' (line 339)
        f_48533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 37), 'f', False)
        float_48534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, 40), 'float')
        # Getting the type of 'x' (line 339)
        x_48535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 45), 'x', False)
        # Processing the call keyword arguments (line 339)
        int_48536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 339, 54), 'int')
        keyword_48537 = int_48536
        kwargs_48538 = {'lower': keyword_48537}
        # Getting the type of 'assert_raises' (line 339)
        assert_raises_48531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 339)
        assert_raises_call_result_48539 = invoke(stypy.reporting.localization.Localization(__file__, 339, 12), assert_raises_48531, *[Exception_48532, f_48533, float_48534, x_48535], **kwargs_48538)
        
        
        # Call to assert_raises(...): (line 340)
        # Processing the call arguments (line 340)
        # Getting the type of 'Exception' (line 340)
        Exception_48541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 26), 'Exception', False)
        # Getting the type of 'f' (line 340)
        f_48542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 37), 'f', False)
        float_48543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 40), 'float')
        # Getting the type of 'x' (line 340)
        x_48544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 45), 'x', False)
        # Processing the call keyword arguments (line 340)
        
        # Call to zeros(...): (line 340)
        # Processing the call arguments (line 340)
        
        # Obtaining an instance of the builtin type 'tuple' (line 340)
        tuple_48547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 340)
        # Adding element type (line 340)
        int_48548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 60), tuple_48547, int_48548)
        # Adding element type (line 340)
        int_48549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 60), tuple_48547, int_48549)
        
        str_48550 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 67), 'str', 'd')
        str_48551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 72), 'str', 'F')
        # Processing the call keyword arguments (line 340)
        kwargs_48552 = {}
        # Getting the type of 'np' (line 340)
        np_48545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 50), 'np', False)
        # Obtaining the member 'zeros' of a type (line 340)
        zeros_48546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 50), np_48545, 'zeros')
        # Calling zeros(args, kwargs) (line 340)
        zeros_call_result_48553 = invoke(stypy.reporting.localization.Localization(__file__, 340, 50), zeros_48546, *[tuple_48547, str_48550, str_48551], **kwargs_48552)
        
        keyword_48554 = zeros_call_result_48553
        kwargs_48555 = {'a': keyword_48554}
        # Getting the type of 'assert_raises' (line 340)
        assert_raises_48540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 340)
        assert_raises_call_result_48556 = invoke(stypy.reporting.localization.Localization(__file__, 340, 12), assert_raises_48540, *[Exception_48541, f_48542, float_48543, x_48544], **kwargs_48555)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to zip(...): (line 342)
        # Processing the call arguments (line 342)
        str_48558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 27), 'str', 'cz')
        
        # Obtaining an instance of the builtin type 'list' (line 342)
        list_48559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 342)
        # Adding element type (line 342)
        float_48560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 33), list_48559, float_48560)
        # Adding element type (line 342)
        float_48561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 33), list_48559, float_48561)
        
        # Processing the call keyword arguments (line 342)
        kwargs_48562 = {}
        # Getting the type of 'zip' (line 342)
        zip_48557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 23), 'zip', False)
        # Calling zip(args, kwargs) (line 342)
        zip_call_result_48563 = invoke(stypy.reporting.localization.Localization(__file__, 342, 23), zip_48557, *[str_48558, list_48559], **kwargs_48562)
        
        # Testing the type of a for loop iterable (line 342)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 342, 8), zip_call_result_48563)
        # Getting the type of the for loop variable (line 342)
        for_loop_var_48564 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 342, 8), zip_call_result_48563)
        # Assigning a type to the variable 'p' (line 342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'p', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 8), for_loop_var_48564))
        # Assigning a type to the variable 'rtol' (line 342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'rtol', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 342, 8), for_loop_var_48564))
        # SSA begins for a for statement (line 342)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 343):
        
        # Assigning a Call to a Name (line 343):
        
        # Call to getattr(...): (line 343)
        # Processing the call arguments (line 343)
        # Getting the type of 'fblas' (line 343)
        fblas_48566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 24), 'fblas', False)
        # Getting the type of 'p' (line 343)
        p_48567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 31), 'p', False)
        str_48568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 33), 'str', 'her')
        # Applying the binary operator '+' (line 343)
        result_add_48569 = python_operator(stypy.reporting.localization.Localization(__file__, 343, 31), '+', p_48567, str_48568)
        
        # Getting the type of 'None' (line 343)
        None_48570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 40), 'None', False)
        # Processing the call keyword arguments (line 343)
        kwargs_48571 = {}
        # Getting the type of 'getattr' (line 343)
        getattr_48565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 343)
        getattr_call_result_48572 = invoke(stypy.reporting.localization.Localization(__file__, 343, 16), getattr_48565, *[fblas_48566, result_add_48569, None_48570], **kwargs_48571)
        
        # Assigning a type to the variable 'f' (line 343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 12), 'f', getattr_call_result_48572)
        
        # Type idiom detected: calculating its left and rigth part (line 344)
        # Getting the type of 'f' (line 344)
        f_48573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 15), 'f')
        # Getting the type of 'None' (line 344)
        None_48574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 20), 'None')
        
        (may_be_48575, more_types_in_union_48576) = may_be_none(f_48573, None_48574)

        if may_be_48575:

            if more_types_in_union_48576:
                # Runtime conditional SSA (line 344)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_48576:
                # SSA join for if statement (line 344)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_allclose(...): (line 346)
        # Processing the call arguments (line 346)
        
        # Call to f(...): (line 346)
        # Processing the call arguments (line 346)
        float_48579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 30), 'float')
        # Getting the type of 'z' (line 346)
        z_48580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 35), 'z', False)
        # Processing the call keyword arguments (line 346)
        kwargs_48581 = {}
        # Getting the type of 'f' (line 346)
        f_48578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 28), 'f', False)
        # Calling f(args, kwargs) (line 346)
        f_call_result_48582 = invoke(stypy.reporting.localization.Localization(__file__, 346, 28), f_48578, *[float_48579, z_48580], **kwargs_48581)
        
        # Getting the type of 'rehz' (line 346)
        rehz_48583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 39), 'rehz', False)
        # Processing the call keyword arguments (line 346)
        # Getting the type of 'rtol' (line 346)
        rtol_48584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 50), 'rtol', False)
        keyword_48585 = rtol_48584
        kwargs_48586 = {'rtol': keyword_48585}
        # Getting the type of 'assert_allclose' (line 346)
        assert_allclose_48577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 346)
        assert_allclose_call_result_48587 = invoke(stypy.reporting.localization.Localization(__file__, 346, 12), assert_allclose_48577, *[f_call_result_48582, rehz_48583], **kwargs_48586)
        
        
        # Call to assert_allclose(...): (line 347)
        # Processing the call arguments (line 347)
        
        # Call to f(...): (line 347)
        # Processing the call arguments (line 347)
        float_48590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 30), 'float')
        # Getting the type of 'z' (line 347)
        z_48591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 35), 'z', False)
        # Processing the call keyword arguments (line 347)
        # Getting the type of 'True' (line 347)
        True_48592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 44), 'True', False)
        keyword_48593 = True_48592
        kwargs_48594 = {'lower': keyword_48593}
        # Getting the type of 'f' (line 347)
        f_48589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 28), 'f', False)
        # Calling f(args, kwargs) (line 347)
        f_call_result_48595 = invoke(stypy.reporting.localization.Localization(__file__, 347, 28), f_48589, *[float_48590, z_48591], **kwargs_48594)
        
        
        # Call to conj(...): (line 347)
        # Processing the call keyword arguments (line 347)
        kwargs_48599 = {}
        # Getting the type of 'rehz' (line 347)
        rehz_48596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 51), 'rehz', False)
        # Obtaining the member 'T' of a type (line 347)
        T_48597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 51), rehz_48596, 'T')
        # Obtaining the member 'conj' of a type (line 347)
        conj_48598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 51), T_48597, 'conj')
        # Calling conj(args, kwargs) (line 347)
        conj_call_result_48600 = invoke(stypy.reporting.localization.Localization(__file__, 347, 51), conj_48598, *[], **kwargs_48599)
        
        # Processing the call keyword arguments (line 347)
        # Getting the type of 'rtol' (line 347)
        rtol_48601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 71), 'rtol', False)
        keyword_48602 = rtol_48601
        kwargs_48603 = {'rtol': keyword_48602}
        # Getting the type of 'assert_allclose' (line 347)
        assert_allclose_48588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 347)
        assert_allclose_call_result_48604 = invoke(stypy.reporting.localization.Localization(__file__, 347, 12), assert_allclose_48588, *[f_call_result_48595, conj_call_result_48600], **kwargs_48603)
        
        
        # Call to assert_allclose(...): (line 348)
        # Processing the call arguments (line 348)
        
        # Call to f(...): (line 348)
        # Processing the call arguments (line 348)
        float_48607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 30), 'float')
        # Getting the type of 'w' (line 348)
        w_48608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 35), 'w', False)
        # Processing the call keyword arguments (line 348)
        int_48609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 43), 'int')
        keyword_48610 = int_48609
        int_48611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 51), 'int')
        keyword_48612 = int_48611
        int_48613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 348, 56), 'int')
        keyword_48614 = int_48613
        kwargs_48615 = {'incx': keyword_48610, 'offx': keyword_48612, 'n': keyword_48614}
        # Getting the type of 'f' (line 348)
        f_48606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 28), 'f', False)
        # Calling f(args, kwargs) (line 348)
        f_call_result_48616 = invoke(stypy.reporting.localization.Localization(__file__, 348, 28), f_48606, *[float_48607, w_48608], **kwargs_48615)
        
        # Getting the type of 'rehz' (line 348)
        rehz_48617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 60), 'rehz', False)
        # Processing the call keyword arguments (line 348)
        # Getting the type of 'rtol' (line 348)
        rtol_48618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 71), 'rtol', False)
        keyword_48619 = rtol_48618
        kwargs_48620 = {'rtol': keyword_48619}
        # Getting the type of 'assert_allclose' (line 348)
        assert_allclose_48605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 348)
        assert_allclose_call_result_48621 = invoke(stypy.reporting.localization.Localization(__file__, 348, 12), assert_allclose_48605, *[f_call_result_48616, rehz_48617], **kwargs_48620)
        
        
        # Call to assert_allclose(...): (line 350)
        # Processing the call arguments (line 350)
        
        # Call to f(...): (line 350)
        # Processing the call arguments (line 350)
        float_48624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 30), 'float')
        # Getting the type of 'w' (line 350)
        w_48625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 35), 'w', False)
        # Processing the call keyword arguments (line 350)
        int_48626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 43), 'int')
        keyword_48627 = int_48626
        int_48628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 52), 'int')
        keyword_48629 = int_48628
        int_48630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 350, 57), 'int')
        keyword_48631 = int_48630
        kwargs_48632 = {'incx': keyword_48627, 'offx': keyword_48629, 'n': keyword_48631}
        # Getting the type of 'f' (line 350)
        f_48623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 28), 'f', False)
        # Calling f(args, kwargs) (line 350)
        f_call_result_48633 = invoke(stypy.reporting.localization.Localization(__file__, 350, 28), f_48623, *[float_48624, w_48625], **kwargs_48632)
        
        # Getting the type of 'rehz_reverse' (line 351)
        rehz_reverse_48634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'rehz_reverse', False)
        # Processing the call keyword arguments (line 350)
        # Getting the type of 'rtol' (line 351)
        rtol_48635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 47), 'rtol', False)
        keyword_48636 = rtol_48635
        kwargs_48637 = {'rtol': keyword_48636}
        # Getting the type of 'assert_allclose' (line 350)
        assert_allclose_48622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 350)
        assert_allclose_call_result_48638 = invoke(stypy.reporting.localization.Localization(__file__, 350, 12), assert_allclose_48622, *[f_call_result_48633, rehz_reverse_48634], **kwargs_48637)
        
        
        # Assigning a Call to a Name (line 353):
        
        # Assigning a Call to a Name (line 353):
        
        # Call to zeros(...): (line 353)
        # Processing the call arguments (line 353)
        
        # Obtaining an instance of the builtin type 'tuple' (line 353)
        tuple_48641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 353)
        # Adding element type (line 353)
        int_48642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 26), tuple_48641, int_48642)
        # Adding element type (line 353)
        int_48643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 26), tuple_48641, int_48643)
        
        
        
        # Getting the type of 'p' (line 353)
        p_48644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 40), 'p', False)
        str_48645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 45), 'str', 'c')
        # Applying the binary operator '==' (line 353)
        result_eq_48646 = python_operator(stypy.reporting.localization.Localization(__file__, 353, 40), '==', p_48644, str_48645)
        
        # Testing the type of an if expression (line 353)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 353, 33), result_eq_48646)
        # SSA begins for if expression (line 353)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        str_48647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 33), 'str', 'F')
        # SSA branch for the else part of an if expression (line 353)
        module_type_store.open_ssa_branch('if expression else')
        str_48648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 54), 'str', 'D')
        # SSA join for if expression (line 353)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_48649 = union_type.UnionType.add(str_48647, str_48648)
        
        str_48650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 59), 'str', 'F')
        # Processing the call keyword arguments (line 353)
        kwargs_48651 = {}
        # Getting the type of 'np' (line 353)
        np_48639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'np', False)
        # Obtaining the member 'zeros' of a type (line 353)
        zeros_48640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), np_48639, 'zeros')
        # Calling zeros(args, kwargs) (line 353)
        zeros_call_result_48652 = invoke(stypy.reporting.localization.Localization(__file__, 353, 16), zeros_48640, *[tuple_48641, if_exp_48649, str_48650], **kwargs_48651)
        
        # Assigning a type to the variable 'a' (line 353)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'a', zeros_call_result_48652)
        
        # Assigning a Call to a Name (line 354):
        
        # Assigning a Call to a Name (line 354):
        
        # Call to f(...): (line 354)
        # Processing the call arguments (line 354)
        float_48654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 354, 18), 'float')
        # Getting the type of 'z' (line 354)
        z_48655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 23), 'z', False)
        # Processing the call keyword arguments (line 354)
        # Getting the type of 'a' (line 354)
        a_48656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'a', False)
        keyword_48657 = a_48656
        # Getting the type of 'True' (line 354)
        True_48658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 43), 'True', False)
        keyword_48659 = True_48658
        kwargs_48660 = {'a': keyword_48657, 'overwrite_a': keyword_48659}
        # Getting the type of 'f' (line 354)
        f_48653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 16), 'f', False)
        # Calling f(args, kwargs) (line 354)
        f_call_result_48661 = invoke(stypy.reporting.localization.Localization(__file__, 354, 16), f_48653, *[float_48654, z_48655], **kwargs_48660)
        
        # Assigning a type to the variable 'b' (line 354)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 12), 'b', f_call_result_48661)
        
        # Call to assert_allclose(...): (line 355)
        # Processing the call arguments (line 355)
        # Getting the type of 'a' (line 355)
        a_48663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 28), 'a', False)
        # Getting the type of 'rehz' (line 355)
        rehz_48664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 31), 'rehz', False)
        # Processing the call keyword arguments (line 355)
        # Getting the type of 'rtol' (line 355)
        rtol_48665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 42), 'rtol', False)
        keyword_48666 = rtol_48665
        kwargs_48667 = {'rtol': keyword_48666}
        # Getting the type of 'assert_allclose' (line 355)
        assert_allclose_48662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 355)
        assert_allclose_call_result_48668 = invoke(stypy.reporting.localization.Localization(__file__, 355, 12), assert_allclose_48662, *[a_48663, rehz_48664], **kwargs_48667)
        
        
        # Assigning a Call to a Name (line 357):
        
        # Assigning a Call to a Name (line 357):
        
        # Call to f(...): (line 357)
        # Processing the call arguments (line 357)
        float_48670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 18), 'float')
        # Getting the type of 'z' (line 357)
        z_48671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 23), 'z', False)
        # Processing the call keyword arguments (line 357)
        # Getting the type of 'a' (line 357)
        a_48672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 28), 'a', False)
        keyword_48673 = a_48672
        kwargs_48674 = {'a': keyword_48673}
        # Getting the type of 'f' (line 357)
        f_48669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'f', False)
        # Calling f(args, kwargs) (line 357)
        f_call_result_48675 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), f_48669, *[float_48670, z_48671], **kwargs_48674)
        
        # Assigning a type to the variable 'b' (line 357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'b', f_call_result_48675)
        
        # Call to assert_(...): (line 358)
        # Processing the call arguments (line 358)
        
        # Getting the type of 'a' (line 358)
        a_48677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 20), 'a', False)
        # Getting the type of 'b' (line 358)
        b_48678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 29), 'b', False)
        # Applying the binary operator 'isnot' (line 358)
        result_is_not_48679 = python_operator(stypy.reporting.localization.Localization(__file__, 358, 20), 'isnot', a_48677, b_48678)
        
        # Processing the call keyword arguments (line 358)
        kwargs_48680 = {}
        # Getting the type of 'assert_' (line 358)
        assert__48676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 358)
        assert__call_result_48681 = invoke(stypy.reporting.localization.Localization(__file__, 358, 12), assert__48676, *[result_is_not_48679], **kwargs_48680)
        
        
        # Call to assert_allclose(...): (line 359)
        # Processing the call arguments (line 359)
        # Getting the type of 'b' (line 359)
        b_48683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 28), 'b', False)
        int_48684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 31), 'int')
        # Getting the type of 'rehz' (line 359)
        rehz_48685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 33), 'rehz', False)
        # Applying the binary operator '*' (line 359)
        result_mul_48686 = python_operator(stypy.reporting.localization.Localization(__file__, 359, 31), '*', int_48684, rehz_48685)
        
        # Processing the call keyword arguments (line 359)
        # Getting the type of 'rtol' (line 359)
        rtol_48687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 44), 'rtol', False)
        keyword_48688 = rtol_48687
        kwargs_48689 = {'rtol': keyword_48688}
        # Getting the type of 'assert_allclose' (line 359)
        assert_allclose_48682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 359)
        assert_allclose_call_result_48690 = invoke(stypy.reporting.localization.Localization(__file__, 359, 12), assert_allclose_48682, *[b_48683, result_mul_48686], **kwargs_48689)
        
        
        # Call to assert_raises(...): (line 361)
        # Processing the call arguments (line 361)
        # Getting the type of 'Exception' (line 361)
        Exception_48692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 26), 'Exception', False)
        # Getting the type of 'f' (line 361)
        f_48693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 37), 'f', False)
        float_48694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 40), 'float')
        # Getting the type of 'x' (line 361)
        x_48695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 45), 'x', False)
        # Processing the call keyword arguments (line 361)
        int_48696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 361, 53), 'int')
        keyword_48697 = int_48696
        kwargs_48698 = {'incx': keyword_48697}
        # Getting the type of 'assert_raises' (line 361)
        assert_raises_48691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 361)
        assert_raises_call_result_48699 = invoke(stypy.reporting.localization.Localization(__file__, 361, 12), assert_raises_48691, *[Exception_48692, f_48693, float_48694, x_48695], **kwargs_48698)
        
        
        # Call to assert_raises(...): (line 362)
        # Processing the call arguments (line 362)
        # Getting the type of 'Exception' (line 362)
        Exception_48701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 26), 'Exception', False)
        # Getting the type of 'f' (line 362)
        f_48702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 37), 'f', False)
        float_48703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 40), 'float')
        # Getting the type of 'x' (line 362)
        x_48704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 45), 'x', False)
        # Processing the call keyword arguments (line 362)
        int_48705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 53), 'int')
        keyword_48706 = int_48705
        kwargs_48707 = {'offx': keyword_48706}
        # Getting the type of 'assert_raises' (line 362)
        assert_raises_48700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 362)
        assert_raises_call_result_48708 = invoke(stypy.reporting.localization.Localization(__file__, 362, 12), assert_raises_48700, *[Exception_48701, f_48702, float_48703, x_48704], **kwargs_48707)
        
        
        # Call to assert_raises(...): (line 363)
        # Processing the call arguments (line 363)
        # Getting the type of 'Exception' (line 363)
        Exception_48710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 26), 'Exception', False)
        # Getting the type of 'f' (line 363)
        f_48711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 37), 'f', False)
        float_48712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 40), 'float')
        # Getting the type of 'x' (line 363)
        x_48713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 45), 'x', False)
        # Processing the call keyword arguments (line 363)
        int_48714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 53), 'int')
        keyword_48715 = int_48714
        kwargs_48716 = {'offx': keyword_48715}
        # Getting the type of 'assert_raises' (line 363)
        assert_raises_48709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 363)
        assert_raises_call_result_48717 = invoke(stypy.reporting.localization.Localization(__file__, 363, 12), assert_raises_48709, *[Exception_48710, f_48711, float_48712, x_48713], **kwargs_48716)
        
        
        # Call to assert_raises(...): (line 364)
        # Processing the call arguments (line 364)
        # Getting the type of 'Exception' (line 364)
        Exception_48719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 26), 'Exception', False)
        # Getting the type of 'f' (line 364)
        f_48720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 37), 'f', False)
        float_48721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 40), 'float')
        # Getting the type of 'x' (line 364)
        x_48722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 45), 'x', False)
        # Processing the call keyword arguments (line 364)
        int_48723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 50), 'int')
        keyword_48724 = int_48723
        kwargs_48725 = {'n': keyword_48724}
        # Getting the type of 'assert_raises' (line 364)
        assert_raises_48718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 364)
        assert_raises_call_result_48726 = invoke(stypy.reporting.localization.Localization(__file__, 364, 12), assert_raises_48718, *[Exception_48719, f_48720, float_48721, x_48722], **kwargs_48725)
        
        
        # Call to assert_raises(...): (line 365)
        # Processing the call arguments (line 365)
        # Getting the type of 'Exception' (line 365)
        Exception_48728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 26), 'Exception', False)
        # Getting the type of 'f' (line 365)
        f_48729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 37), 'f', False)
        float_48730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 40), 'float')
        # Getting the type of 'x' (line 365)
        x_48731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 45), 'x', False)
        # Processing the call keyword arguments (line 365)
        int_48732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 365, 50), 'int')
        keyword_48733 = int_48732
        kwargs_48734 = {'n': keyword_48733}
        # Getting the type of 'assert_raises' (line 365)
        assert_raises_48727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 365)
        assert_raises_call_result_48735 = invoke(stypy.reporting.localization.Localization(__file__, 365, 12), assert_raises_48727, *[Exception_48728, f_48729, float_48730, x_48731], **kwargs_48734)
        
        
        # Call to assert_raises(...): (line 366)
        # Processing the call arguments (line 366)
        # Getting the type of 'Exception' (line 366)
        Exception_48737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 26), 'Exception', False)
        # Getting the type of 'f' (line 366)
        f_48738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 37), 'f', False)
        float_48739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 40), 'float')
        # Getting the type of 'x' (line 366)
        x_48740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 45), 'x', False)
        # Processing the call keyword arguments (line 366)
        int_48741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 366, 54), 'int')
        keyword_48742 = int_48741
        kwargs_48743 = {'lower': keyword_48742}
        # Getting the type of 'assert_raises' (line 366)
        assert_raises_48736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 366)
        assert_raises_call_result_48744 = invoke(stypy.reporting.localization.Localization(__file__, 366, 12), assert_raises_48736, *[Exception_48737, f_48738, float_48739, x_48740], **kwargs_48743)
        
        
        # Call to assert_raises(...): (line 367)
        # Processing the call arguments (line 367)
        # Getting the type of 'Exception' (line 367)
        Exception_48746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 26), 'Exception', False)
        # Getting the type of 'f' (line 367)
        f_48747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 37), 'f', False)
        float_48748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 40), 'float')
        # Getting the type of 'x' (line 367)
        x_48749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 45), 'x', False)
        # Processing the call keyword arguments (line 367)
        
        # Call to zeros(...): (line 367)
        # Processing the call arguments (line 367)
        
        # Obtaining an instance of the builtin type 'tuple' (line 367)
        tuple_48752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 60), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 367)
        # Adding element type (line 367)
        int_48753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 367, 60), tuple_48752, int_48753)
        # Adding element type (line 367)
        int_48754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 367, 60), tuple_48752, int_48754)
        
        str_48755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 67), 'str', 'd')
        str_48756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 72), 'str', 'F')
        # Processing the call keyword arguments (line 367)
        kwargs_48757 = {}
        # Getting the type of 'np' (line 367)
        np_48750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 50), 'np', False)
        # Obtaining the member 'zeros' of a type (line 367)
        zeros_48751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 50), np_48750, 'zeros')
        # Calling zeros(args, kwargs) (line 367)
        zeros_call_result_48758 = invoke(stypy.reporting.localization.Localization(__file__, 367, 50), zeros_48751, *[tuple_48752, str_48755, str_48756], **kwargs_48757)
        
        keyword_48759 = zeros_call_result_48758
        kwargs_48760 = {'a': keyword_48759}
        # Getting the type of 'assert_raises' (line 367)
        assert_raises_48745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 367)
        assert_raises_call_result_48761 = invoke(stypy.reporting.localization.Localization(__file__, 367, 12), assert_raises_48745, *[Exception_48746, f_48747, float_48748, x_48749], **kwargs_48760)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_syr_her(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_syr_her' in the type store
        # Getting the type of 'stypy_return_type' (line 273)
        stypy_return_type_48762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_48762)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_syr_her'
        return stypy_return_type_48762


    @norecursion
    def test_syr2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_syr2'
        module_type_store = module_type_store.open_function_context('test_syr2', 369, 4, False)
        # Assigning a type to the variable 'self' (line 370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_syr2')
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_syr2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_syr2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_syr2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_syr2(...)' code ##################

        
        # Assigning a Call to a Name (line 370):
        
        # Assigning a Call to a Name (line 370):
        
        # Call to arange(...): (line 370)
        # Processing the call arguments (line 370)
        int_48765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 22), 'int')
        int_48766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 25), 'int')
        # Processing the call keyword arguments (line 370)
        str_48767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 34), 'str', 'd')
        keyword_48768 = str_48767
        kwargs_48769 = {'dtype': keyword_48768}
        # Getting the type of 'np' (line 370)
        np_48763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 12), 'np', False)
        # Obtaining the member 'arange' of a type (line 370)
        arange_48764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 12), np_48763, 'arange')
        # Calling arange(args, kwargs) (line 370)
        arange_call_result_48770 = invoke(stypy.reporting.localization.Localization(__file__, 370, 12), arange_48764, *[int_48765, int_48766], **kwargs_48769)
        
        # Assigning a type to the variable 'x' (line 370)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 8), 'x', arange_call_result_48770)
        
        # Assigning a Call to a Name (line 371):
        
        # Assigning a Call to a Name (line 371):
        
        # Call to arange(...): (line 371)
        # Processing the call arguments (line 371)
        int_48773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 22), 'int')
        int_48774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 25), 'int')
        # Processing the call keyword arguments (line 371)
        str_48775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 371, 34), 'str', 'd')
        keyword_48776 = str_48775
        kwargs_48777 = {'dtype': keyword_48776}
        # Getting the type of 'np' (line 371)
        np_48771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 12), 'np', False)
        # Obtaining the member 'arange' of a type (line 371)
        arange_48772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 371, 12), np_48771, 'arange')
        # Calling arange(args, kwargs) (line 371)
        arange_call_result_48778 = invoke(stypy.reporting.localization.Localization(__file__, 371, 12), arange_48772, *[int_48773, int_48774], **kwargs_48777)
        
        # Assigning a type to the variable 'y' (line 371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 371, 8), 'y', arange_call_result_48778)
        
        # Assigning a Call to a Name (line 372):
        
        # Assigning a Call to a Name (line 372):
        
        # Call to triu(...): (line 372)
        # Processing the call arguments (line 372)
        
        # Obtaining the type of the subscript
        slice_48781 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 372, 24), None, None, None)
        # Getting the type of 'np' (line 372)
        np_48782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 29), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 372)
        newaxis_48783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 29), np_48782, 'newaxis')
        # Getting the type of 'x' (line 372)
        x_48784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 24), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 372)
        getitem___48785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 24), x_48784, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 372)
        subscript_call_result_48786 = invoke(stypy.reporting.localization.Localization(__file__, 372, 24), getitem___48785, (slice_48781, newaxis_48783))
        
        # Getting the type of 'y' (line 372)
        y_48787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 43), 'y', False)
        # Applying the binary operator '*' (line 372)
        result_mul_48788 = python_operator(stypy.reporting.localization.Localization(__file__, 372, 24), '*', subscript_call_result_48786, y_48787)
        
        
        # Obtaining the type of the subscript
        slice_48789 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 372, 47), None, None, None)
        # Getting the type of 'np' (line 372)
        np_48790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 52), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 372)
        newaxis_48791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 52), np_48790, 'newaxis')
        # Getting the type of 'y' (line 372)
        y_48792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 47), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 372)
        getitem___48793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 47), y_48792, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 372)
        subscript_call_result_48794 = invoke(stypy.reporting.localization.Localization(__file__, 372, 47), getitem___48793, (slice_48789, newaxis_48791))
        
        # Getting the type of 'x' (line 372)
        x_48795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 66), 'x', False)
        # Applying the binary operator '*' (line 372)
        result_mul_48796 = python_operator(stypy.reporting.localization.Localization(__file__, 372, 47), '*', subscript_call_result_48794, x_48795)
        
        # Applying the binary operator '+' (line 372)
        result_add_48797 = python_operator(stypy.reporting.localization.Localization(__file__, 372, 24), '+', result_mul_48788, result_mul_48796)
        
        # Processing the call keyword arguments (line 372)
        kwargs_48798 = {}
        # Getting the type of 'np' (line 372)
        np_48779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 16), 'np', False)
        # Obtaining the member 'triu' of a type (line 372)
        triu_48780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 372, 16), np_48779, 'triu')
        # Calling triu(args, kwargs) (line 372)
        triu_call_result_48799 = invoke(stypy.reporting.localization.Localization(__file__, 372, 16), triu_48780, *[result_add_48797], **kwargs_48798)
        
        # Assigning a type to the variable 'resxy' (line 372)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 8), 'resxy', triu_call_result_48799)
        
        # Assigning a Call to a Name (line 373):
        
        # Assigning a Call to a Name (line 373):
        
        # Call to triu(...): (line 373)
        # Processing the call arguments (line 373)
        
        # Obtaining the type of the subscript
        int_48802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 36), 'int')
        slice_48803 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 373, 32), None, None, int_48802)
        # Getting the type of 'np' (line 373)
        np_48804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 40), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 373)
        newaxis_48805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 40), np_48804, 'newaxis')
        # Getting the type of 'x' (line 373)
        x_48806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 32), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 373)
        getitem___48807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 32), x_48806, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 373)
        subscript_call_result_48808 = invoke(stypy.reporting.localization.Localization(__file__, 373, 32), getitem___48807, (slice_48803, newaxis_48805))
        
        
        # Obtaining the type of the subscript
        int_48809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 373, 58), 'int')
        slice_48810 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 373, 54), None, None, int_48809)
        # Getting the type of 'y' (line 373)
        y_48811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 54), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 373)
        getitem___48812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 54), y_48811, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 373)
        subscript_call_result_48813 = invoke(stypy.reporting.localization.Localization(__file__, 373, 54), getitem___48812, slice_48810)
        
        # Applying the binary operator '*' (line 373)
        result_mul_48814 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 32), '*', subscript_call_result_48808, subscript_call_result_48813)
        
        
        # Obtaining the type of the subscript
        int_48815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 38), 'int')
        slice_48816 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 374, 34), None, None, int_48815)
        # Getting the type of 'np' (line 374)
        np_48817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 42), 'np', False)
        # Obtaining the member 'newaxis' of a type (line 374)
        newaxis_48818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 42), np_48817, 'newaxis')
        # Getting the type of 'y' (line 374)
        y_48819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 34), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 374)
        getitem___48820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 34), y_48819, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 374)
        subscript_call_result_48821 = invoke(stypy.reporting.localization.Localization(__file__, 374, 34), getitem___48820, (slice_48816, newaxis_48818))
        
        
        # Obtaining the type of the subscript
        int_48822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 60), 'int')
        slice_48823 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 374, 56), None, None, int_48822)
        # Getting the type of 'x' (line 374)
        x_48824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 56), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 374)
        getitem___48825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 56), x_48824, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 374)
        subscript_call_result_48826 = invoke(stypy.reporting.localization.Localization(__file__, 374, 56), getitem___48825, slice_48823)
        
        # Applying the binary operator '*' (line 374)
        result_mul_48827 = python_operator(stypy.reporting.localization.Localization(__file__, 374, 34), '*', subscript_call_result_48821, subscript_call_result_48826)
        
        # Applying the binary operator '+' (line 373)
        result_add_48828 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 32), '+', result_mul_48814, result_mul_48827)
        
        # Processing the call keyword arguments (line 373)
        kwargs_48829 = {}
        # Getting the type of 'np' (line 373)
        np_48800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 24), 'np', False)
        # Obtaining the member 'triu' of a type (line 373)
        triu_48801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 24), np_48800, 'triu')
        # Calling triu(args, kwargs) (line 373)
        triu_call_result_48830 = invoke(stypy.reporting.localization.Localization(__file__, 373, 24), triu_48801, *[result_add_48828], **kwargs_48829)
        
        # Assigning a type to the variable 'resxy_reverse' (line 373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'resxy_reverse', triu_call_result_48830)
        
        # Assigning a Call to a Name (line 376):
        
        # Assigning a Call to a Name (line 376):
        
        # Call to linspace(...): (line 376)
        # Processing the call arguments (line 376)
        int_48833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 24), 'int')
        float_48834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 27), 'float')
        int_48835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 32), 'int')
        # Processing the call keyword arguments (line 376)
        # Getting the type of 'False' (line 376)
        False_48836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 45), 'False', False)
        keyword_48837 = False_48836
        kwargs_48838 = {'endpoint': keyword_48837}
        # Getting the type of 'np' (line 376)
        np_48831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 12), 'np', False)
        # Obtaining the member 'linspace' of a type (line 376)
        linspace_48832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 376, 12), np_48831, 'linspace')
        # Calling linspace(args, kwargs) (line 376)
        linspace_call_result_48839 = invoke(stypy.reporting.localization.Localization(__file__, 376, 12), linspace_48832, *[int_48833, float_48834, int_48835], **kwargs_48838)
        
        # Assigning a type to the variable 'q' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 8), 'q', linspace_call_result_48839)
        
        
        # Call to zip(...): (line 378)
        # Processing the call arguments (line 378)
        str_48841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 27), 'str', 'sd')
        
        # Obtaining an instance of the builtin type 'list' (line 378)
        list_48842 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 378)
        # Adding element type (line 378)
        float_48843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 33), list_48842, float_48843)
        # Adding element type (line 378)
        float_48844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 33), list_48842, float_48844)
        
        # Processing the call keyword arguments (line 378)
        kwargs_48845 = {}
        # Getting the type of 'zip' (line 378)
        zip_48840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 23), 'zip', False)
        # Calling zip(args, kwargs) (line 378)
        zip_call_result_48846 = invoke(stypy.reporting.localization.Localization(__file__, 378, 23), zip_48840, *[str_48841, list_48842], **kwargs_48845)
        
        # Testing the type of a for loop iterable (line 378)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 378, 8), zip_call_result_48846)
        # Getting the type of the for loop variable (line 378)
        for_loop_var_48847 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 378, 8), zip_call_result_48846)
        # Assigning a type to the variable 'p' (line 378)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 8), 'p', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 8), for_loop_var_48847))
        # Assigning a type to the variable 'rtol' (line 378)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 378, 8), 'rtol', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 378, 8), for_loop_var_48847))
        # SSA begins for a for statement (line 378)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 379):
        
        # Assigning a Call to a Name (line 379):
        
        # Call to getattr(...): (line 379)
        # Processing the call arguments (line 379)
        # Getting the type of 'fblas' (line 379)
        fblas_48849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 24), 'fblas', False)
        # Getting the type of 'p' (line 379)
        p_48850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 31), 'p', False)
        str_48851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 33), 'str', 'syr2')
        # Applying the binary operator '+' (line 379)
        result_add_48852 = python_operator(stypy.reporting.localization.Localization(__file__, 379, 31), '+', p_48850, str_48851)
        
        # Getting the type of 'None' (line 379)
        None_48853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 41), 'None', False)
        # Processing the call keyword arguments (line 379)
        kwargs_48854 = {}
        # Getting the type of 'getattr' (line 379)
        getattr_48848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 379)
        getattr_call_result_48855 = invoke(stypy.reporting.localization.Localization(__file__, 379, 16), getattr_48848, *[fblas_48849, result_add_48852, None_48853], **kwargs_48854)
        
        # Assigning a type to the variable 'f' (line 379)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'f', getattr_call_result_48855)
        
        # Type idiom detected: calculating its left and rigth part (line 380)
        # Getting the type of 'f' (line 380)
        f_48856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 15), 'f')
        # Getting the type of 'None' (line 380)
        None_48857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 20), 'None')
        
        (may_be_48858, more_types_in_union_48859) = may_be_none(f_48856, None_48857)

        if may_be_48858:

            if more_types_in_union_48859:
                # Runtime conditional SSA (line 380)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_48859:
                # SSA join for if statement (line 380)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_allclose(...): (line 382)
        # Processing the call arguments (line 382)
        
        # Call to f(...): (line 382)
        # Processing the call arguments (line 382)
        float_48862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, 30), 'float')
        # Getting the type of 'x' (line 382)
        x_48863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 35), 'x', False)
        # Getting the type of 'y' (line 382)
        y_48864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 38), 'y', False)
        # Processing the call keyword arguments (line 382)
        kwargs_48865 = {}
        # Getting the type of 'f' (line 382)
        f_48861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 28), 'f', False)
        # Calling f(args, kwargs) (line 382)
        f_call_result_48866 = invoke(stypy.reporting.localization.Localization(__file__, 382, 28), f_48861, *[float_48862, x_48863, y_48864], **kwargs_48865)
        
        # Getting the type of 'resxy' (line 382)
        resxy_48867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 42), 'resxy', False)
        # Processing the call keyword arguments (line 382)
        # Getting the type of 'rtol' (line 382)
        rtol_48868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 54), 'rtol', False)
        keyword_48869 = rtol_48868
        kwargs_48870 = {'rtol': keyword_48869}
        # Getting the type of 'assert_allclose' (line 382)
        assert_allclose_48860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 382)
        assert_allclose_call_result_48871 = invoke(stypy.reporting.localization.Localization(__file__, 382, 12), assert_allclose_48860, *[f_call_result_48866, resxy_48867], **kwargs_48870)
        
        
        # Call to assert_allclose(...): (line 383)
        # Processing the call arguments (line 383)
        
        # Call to f(...): (line 383)
        # Processing the call arguments (line 383)
        float_48874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 30), 'float')
        # Getting the type of 'x' (line 383)
        x_48875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 35), 'x', False)
        # Getting the type of 'y' (line 383)
        y_48876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 38), 'y', False)
        # Processing the call keyword arguments (line 383)
        int_48877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 43), 'int')
        keyword_48878 = int_48877
        kwargs_48879 = {'n': keyword_48878}
        # Getting the type of 'f' (line 383)
        f_48873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 28), 'f', False)
        # Calling f(args, kwargs) (line 383)
        f_call_result_48880 = invoke(stypy.reporting.localization.Localization(__file__, 383, 28), f_48873, *[float_48874, x_48875, y_48876], **kwargs_48879)
        
        
        # Obtaining the type of the subscript
        int_48881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 54), 'int')
        slice_48882 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 383, 47), None, int_48881, None)
        int_48883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 58), 'int')
        slice_48884 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 383, 47), None, int_48883, None)
        # Getting the type of 'resxy' (line 383)
        resxy_48885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 47), 'resxy', False)
        # Obtaining the member '__getitem__' of a type (line 383)
        getitem___48886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 47), resxy_48885, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 383)
        subscript_call_result_48887 = invoke(stypy.reporting.localization.Localization(__file__, 383, 47), getitem___48886, (slice_48882, slice_48884))
        
        # Processing the call keyword arguments (line 383)
        # Getting the type of 'rtol' (line 383)
        rtol_48888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 67), 'rtol', False)
        keyword_48889 = rtol_48888
        kwargs_48890 = {'rtol': keyword_48889}
        # Getting the type of 'assert_allclose' (line 383)
        assert_allclose_48872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 383)
        assert_allclose_call_result_48891 = invoke(stypy.reporting.localization.Localization(__file__, 383, 12), assert_allclose_48872, *[f_call_result_48880, subscript_call_result_48887], **kwargs_48890)
        
        
        # Call to assert_allclose(...): (line 384)
        # Processing the call arguments (line 384)
        
        # Call to f(...): (line 384)
        # Processing the call arguments (line 384)
        float_48894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 30), 'float')
        # Getting the type of 'x' (line 384)
        x_48895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 35), 'x', False)
        # Getting the type of 'y' (line 384)
        y_48896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 38), 'y', False)
        # Processing the call keyword arguments (line 384)
        # Getting the type of 'True' (line 384)
        True_48897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 47), 'True', False)
        keyword_48898 = True_48897
        kwargs_48899 = {'lower': keyword_48898}
        # Getting the type of 'f' (line 384)
        f_48893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 28), 'f', False)
        # Calling f(args, kwargs) (line 384)
        f_call_result_48900 = invoke(stypy.reporting.localization.Localization(__file__, 384, 28), f_48893, *[float_48894, x_48895, y_48896], **kwargs_48899)
        
        # Getting the type of 'resxy' (line 384)
        resxy_48901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 54), 'resxy', False)
        # Obtaining the member 'T' of a type (line 384)
        T_48902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 54), resxy_48901, 'T')
        # Processing the call keyword arguments (line 384)
        # Getting the type of 'rtol' (line 384)
        rtol_48903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 68), 'rtol', False)
        keyword_48904 = rtol_48903
        kwargs_48905 = {'rtol': keyword_48904}
        # Getting the type of 'assert_allclose' (line 384)
        assert_allclose_48892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 384)
        assert_allclose_call_result_48906 = invoke(stypy.reporting.localization.Localization(__file__, 384, 12), assert_allclose_48892, *[f_call_result_48900, T_48902], **kwargs_48905)
        
        
        # Call to assert_allclose(...): (line 386)
        # Processing the call arguments (line 386)
        
        # Call to f(...): (line 386)
        # Processing the call arguments (line 386)
        float_48909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 30), 'float')
        # Getting the type of 'q' (line 386)
        q_48910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 35), 'q', False)
        # Getting the type of 'q' (line 386)
        q_48911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 38), 'q', False)
        # Processing the call keyword arguments (line 386)
        int_48912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 46), 'int')
        keyword_48913 = int_48912
        int_48914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 54), 'int')
        keyword_48915 = int_48914
        int_48916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 62), 'int')
        keyword_48917 = int_48916
        int_48918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 70), 'int')
        keyword_48919 = int_48918
        kwargs_48920 = {'incx': keyword_48913, 'offx': keyword_48915, 'offy': keyword_48919, 'incy': keyword_48917}
        # Getting the type of 'f' (line 386)
        f_48908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 28), 'f', False)
        # Calling f(args, kwargs) (line 386)
        f_call_result_48921 = invoke(stypy.reporting.localization.Localization(__file__, 386, 28), f_48908, *[float_48909, q_48910, q_48911], **kwargs_48920)
        
        # Getting the type of 'resxy' (line 387)
        resxy_48922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 28), 'resxy', False)
        # Processing the call keyword arguments (line 386)
        # Getting the type of 'rtol' (line 387)
        rtol_48923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 40), 'rtol', False)
        keyword_48924 = rtol_48923
        kwargs_48925 = {'rtol': keyword_48924}
        # Getting the type of 'assert_allclose' (line 386)
        assert_allclose_48907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 386)
        assert_allclose_call_result_48926 = invoke(stypy.reporting.localization.Localization(__file__, 386, 12), assert_allclose_48907, *[f_call_result_48921, resxy_48922], **kwargs_48925)
        
        
        # Call to assert_allclose(...): (line 388)
        # Processing the call arguments (line 388)
        
        # Call to f(...): (line 388)
        # Processing the call arguments (line 388)
        float_48929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 30), 'float')
        # Getting the type of 'q' (line 388)
        q_48930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 35), 'q', False)
        # Getting the type of 'q' (line 388)
        q_48931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 38), 'q', False)
        # Processing the call keyword arguments (line 388)
        int_48932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 46), 'int')
        keyword_48933 = int_48932
        int_48934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 54), 'int')
        keyword_48935 = int_48934
        int_48936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 62), 'int')
        keyword_48937 = int_48936
        int_48938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 70), 'int')
        keyword_48939 = int_48938
        int_48940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 388, 76), 'int')
        keyword_48941 = int_48940
        kwargs_48942 = {'incx': keyword_48933, 'offx': keyword_48935, 'n': keyword_48941, 'offy': keyword_48939, 'incy': keyword_48937}
        # Getting the type of 'f' (line 388)
        f_48928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 28), 'f', False)
        # Calling f(args, kwargs) (line 388)
        f_call_result_48943 = invoke(stypy.reporting.localization.Localization(__file__, 388, 28), f_48928, *[float_48929, q_48930, q_48931], **kwargs_48942)
        
        
        # Obtaining the type of the subscript
        int_48944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 35), 'int')
        slice_48945 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 389, 28), None, int_48944, None)
        int_48946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 39), 'int')
        slice_48947 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 389, 28), None, int_48946, None)
        # Getting the type of 'resxy' (line 389)
        resxy_48948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 28), 'resxy', False)
        # Obtaining the member '__getitem__' of a type (line 389)
        getitem___48949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 28), resxy_48948, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
        subscript_call_result_48950 = invoke(stypy.reporting.localization.Localization(__file__, 389, 28), getitem___48949, (slice_48945, slice_48947))
        
        # Processing the call keyword arguments (line 388)
        # Getting the type of 'rtol' (line 389)
        rtol_48951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 48), 'rtol', False)
        keyword_48952 = rtol_48951
        kwargs_48953 = {'rtol': keyword_48952}
        # Getting the type of 'assert_allclose' (line 388)
        assert_allclose_48927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 388)
        assert_allclose_call_result_48954 = invoke(stypy.reporting.localization.Localization(__file__, 388, 12), assert_allclose_48927, *[f_call_result_48943, subscript_call_result_48950], **kwargs_48953)
        
        
        # Call to assert_allclose(...): (line 391)
        # Processing the call arguments (line 391)
        
        # Call to f(...): (line 391)
        # Processing the call arguments (line 391)
        float_48957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 30), 'float')
        # Getting the type of 'q' (line 391)
        q_48958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 35), 'q', False)
        # Getting the type of 'q' (line 391)
        q_48959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 38), 'q', False)
        # Processing the call keyword arguments (line 391)
        int_48960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 46), 'int')
        keyword_48961 = int_48960
        int_48962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 55), 'int')
        keyword_48963 = int_48962
        int_48964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 63), 'int')
        keyword_48965 = int_48964
        int_48966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 72), 'int')
        keyword_48967 = int_48966
        kwargs_48968 = {'incx': keyword_48961, 'offx': keyword_48963, 'offy': keyword_48967, 'incy': keyword_48965}
        # Getting the type of 'f' (line 391)
        f_48956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 28), 'f', False)
        # Calling f(args, kwargs) (line 391)
        f_call_result_48969 = invoke(stypy.reporting.localization.Localization(__file__, 391, 28), f_48956, *[float_48957, q_48958, q_48959], **kwargs_48968)
        
        # Getting the type of 'resxy_reverse' (line 392)
        resxy_reverse_48970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 28), 'resxy_reverse', False)
        # Processing the call keyword arguments (line 391)
        # Getting the type of 'rtol' (line 392)
        rtol_48971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 48), 'rtol', False)
        keyword_48972 = rtol_48971
        kwargs_48973 = {'rtol': keyword_48972}
        # Getting the type of 'assert_allclose' (line 391)
        assert_allclose_48955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 391)
        assert_allclose_call_result_48974 = invoke(stypy.reporting.localization.Localization(__file__, 391, 12), assert_allclose_48955, *[f_call_result_48969, resxy_reverse_48970], **kwargs_48973)
        
        
        # Assigning a Call to a Name (line 394):
        
        # Assigning a Call to a Name (line 394):
        
        # Call to zeros(...): (line 394)
        # Processing the call arguments (line 394)
        
        # Obtaining an instance of the builtin type 'tuple' (line 394)
        tuple_48977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 394)
        # Adding element type (line 394)
        int_48978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 394, 26), tuple_48977, int_48978)
        # Adding element type (line 394)
        int_48979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 394, 26), tuple_48977, int_48979)
        
        
        
        # Getting the type of 'p' (line 394)
        p_48980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 40), 'p', False)
        str_48981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 45), 'str', 's')
        # Applying the binary operator '==' (line 394)
        result_eq_48982 = python_operator(stypy.reporting.localization.Localization(__file__, 394, 40), '==', p_48980, str_48981)
        
        # Testing the type of an if expression (line 394)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 394, 33), result_eq_48982)
        # SSA begins for if expression (line 394)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        str_48983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 33), 'str', 'f')
        # SSA branch for the else part of an if expression (line 394)
        module_type_store.open_ssa_branch('if expression else')
        str_48984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 54), 'str', 'd')
        # SSA join for if expression (line 394)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_48985 = union_type.UnionType.add(str_48983, str_48984)
        
        str_48986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 394, 59), 'str', 'F')
        # Processing the call keyword arguments (line 394)
        kwargs_48987 = {}
        # Getting the type of 'np' (line 394)
        np_48975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'np', False)
        # Obtaining the member 'zeros' of a type (line 394)
        zeros_48976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 394, 16), np_48975, 'zeros')
        # Calling zeros(args, kwargs) (line 394)
        zeros_call_result_48988 = invoke(stypy.reporting.localization.Localization(__file__, 394, 16), zeros_48976, *[tuple_48977, if_exp_48985, str_48986], **kwargs_48987)
        
        # Assigning a type to the variable 'a' (line 394)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 12), 'a', zeros_call_result_48988)
        
        # Assigning a Call to a Name (line 395):
        
        # Assigning a Call to a Name (line 395):
        
        # Call to f(...): (line 395)
        # Processing the call arguments (line 395)
        float_48990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 395, 18), 'float')
        # Getting the type of 'x' (line 395)
        x_48991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 23), 'x', False)
        # Getting the type of 'y' (line 395)
        y_48992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 26), 'y', False)
        # Processing the call keyword arguments (line 395)
        # Getting the type of 'a' (line 395)
        a_48993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 31), 'a', False)
        keyword_48994 = a_48993
        # Getting the type of 'True' (line 395)
        True_48995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 46), 'True', False)
        keyword_48996 = True_48995
        kwargs_48997 = {'a': keyword_48994, 'overwrite_a': keyword_48996}
        # Getting the type of 'f' (line 395)
        f_48989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'f', False)
        # Calling f(args, kwargs) (line 395)
        f_call_result_48998 = invoke(stypy.reporting.localization.Localization(__file__, 395, 16), f_48989, *[float_48990, x_48991, y_48992], **kwargs_48997)
        
        # Assigning a type to the variable 'b' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 12), 'b', f_call_result_48998)
        
        # Call to assert_allclose(...): (line 396)
        # Processing the call arguments (line 396)
        # Getting the type of 'a' (line 396)
        a_49000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 28), 'a', False)
        # Getting the type of 'resxy' (line 396)
        resxy_49001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 31), 'resxy', False)
        # Processing the call keyword arguments (line 396)
        # Getting the type of 'rtol' (line 396)
        rtol_49002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 43), 'rtol', False)
        keyword_49003 = rtol_49002
        kwargs_49004 = {'rtol': keyword_49003}
        # Getting the type of 'assert_allclose' (line 396)
        assert_allclose_48999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 396)
        assert_allclose_call_result_49005 = invoke(stypy.reporting.localization.Localization(__file__, 396, 12), assert_allclose_48999, *[a_49000, resxy_49001], **kwargs_49004)
        
        
        # Assigning a Call to a Name (line 398):
        
        # Assigning a Call to a Name (line 398):
        
        # Call to f(...): (line 398)
        # Processing the call arguments (line 398)
        float_49007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 18), 'float')
        # Getting the type of 'x' (line 398)
        x_49008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 23), 'x', False)
        # Getting the type of 'y' (line 398)
        y_49009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 26), 'y', False)
        # Processing the call keyword arguments (line 398)
        # Getting the type of 'a' (line 398)
        a_49010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 31), 'a', False)
        keyword_49011 = a_49010
        kwargs_49012 = {'a': keyword_49011}
        # Getting the type of 'f' (line 398)
        f_49006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 16), 'f', False)
        # Calling f(args, kwargs) (line 398)
        f_call_result_49013 = invoke(stypy.reporting.localization.Localization(__file__, 398, 16), f_49006, *[float_49007, x_49008, y_49009], **kwargs_49012)
        
        # Assigning a type to the variable 'b' (line 398)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 398, 12), 'b', f_call_result_49013)
        
        # Call to assert_(...): (line 399)
        # Processing the call arguments (line 399)
        
        # Getting the type of 'a' (line 399)
        a_49015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 20), 'a', False)
        # Getting the type of 'b' (line 399)
        b_49016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 29), 'b', False)
        # Applying the binary operator 'isnot' (line 399)
        result_is_not_49017 = python_operator(stypy.reporting.localization.Localization(__file__, 399, 20), 'isnot', a_49015, b_49016)
        
        # Processing the call keyword arguments (line 399)
        kwargs_49018 = {}
        # Getting the type of 'assert_' (line 399)
        assert__49014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 399)
        assert__call_result_49019 = invoke(stypy.reporting.localization.Localization(__file__, 399, 12), assert__49014, *[result_is_not_49017], **kwargs_49018)
        
        
        # Call to assert_allclose(...): (line 400)
        # Processing the call arguments (line 400)
        # Getting the type of 'b' (line 400)
        b_49021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 28), 'b', False)
        int_49022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 31), 'int')
        # Getting the type of 'resxy' (line 400)
        resxy_49023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 33), 'resxy', False)
        # Applying the binary operator '*' (line 400)
        result_mul_49024 = python_operator(stypy.reporting.localization.Localization(__file__, 400, 31), '*', int_49022, resxy_49023)
        
        # Processing the call keyword arguments (line 400)
        # Getting the type of 'rtol' (line 400)
        rtol_49025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 45), 'rtol', False)
        keyword_49026 = rtol_49025
        kwargs_49027 = {'rtol': keyword_49026}
        # Getting the type of 'assert_allclose' (line 400)
        assert_allclose_49020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 400)
        assert_allclose_call_result_49028 = invoke(stypy.reporting.localization.Localization(__file__, 400, 12), assert_allclose_49020, *[b_49021, result_mul_49024], **kwargs_49027)
        
        
        # Call to assert_raises(...): (line 402)
        # Processing the call arguments (line 402)
        # Getting the type of 'Exception' (line 402)
        Exception_49030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 26), 'Exception', False)
        # Getting the type of 'f' (line 402)
        f_49031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 37), 'f', False)
        float_49032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 40), 'float')
        # Getting the type of 'x' (line 402)
        x_49033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 45), 'x', False)
        # Getting the type of 'y' (line 402)
        y_49034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 48), 'y', False)
        # Processing the call keyword arguments (line 402)
        int_49035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 56), 'int')
        keyword_49036 = int_49035
        kwargs_49037 = {'incx': keyword_49036}
        # Getting the type of 'assert_raises' (line 402)
        assert_raises_49029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 402)
        assert_raises_call_result_49038 = invoke(stypy.reporting.localization.Localization(__file__, 402, 12), assert_raises_49029, *[Exception_49030, f_49031, float_49032, x_49033, y_49034], **kwargs_49037)
        
        
        # Call to assert_raises(...): (line 403)
        # Processing the call arguments (line 403)
        # Getting the type of 'Exception' (line 403)
        Exception_49040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 26), 'Exception', False)
        # Getting the type of 'f' (line 403)
        f_49041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 37), 'f', False)
        float_49042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 40), 'float')
        # Getting the type of 'x' (line 403)
        x_49043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 45), 'x', False)
        # Getting the type of 'y' (line 403)
        y_49044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 48), 'y', False)
        # Processing the call keyword arguments (line 403)
        int_49045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 56), 'int')
        keyword_49046 = int_49045
        kwargs_49047 = {'offx': keyword_49046}
        # Getting the type of 'assert_raises' (line 403)
        assert_raises_49039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 403)
        assert_raises_call_result_49048 = invoke(stypy.reporting.localization.Localization(__file__, 403, 12), assert_raises_49039, *[Exception_49040, f_49041, float_49042, x_49043, y_49044], **kwargs_49047)
        
        
        # Call to assert_raises(...): (line 404)
        # Processing the call arguments (line 404)
        # Getting the type of 'Exception' (line 404)
        Exception_49050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 26), 'Exception', False)
        # Getting the type of 'f' (line 404)
        f_49051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 37), 'f', False)
        float_49052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 404, 40), 'float')
        # Getting the type of 'x' (line 404)
        x_49053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 45), 'x', False)
        # Getting the type of 'y' (line 404)
        y_49054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 48), 'y', False)
        # Processing the call keyword arguments (line 404)
        int_49055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 404, 56), 'int')
        keyword_49056 = int_49055
        kwargs_49057 = {'offx': keyword_49056}
        # Getting the type of 'assert_raises' (line 404)
        assert_raises_49049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 404)
        assert_raises_call_result_49058 = invoke(stypy.reporting.localization.Localization(__file__, 404, 12), assert_raises_49049, *[Exception_49050, f_49051, float_49052, x_49053, y_49054], **kwargs_49057)
        
        
        # Call to assert_raises(...): (line 405)
        # Processing the call arguments (line 405)
        # Getting the type of 'Exception' (line 405)
        Exception_49060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 26), 'Exception', False)
        # Getting the type of 'f' (line 405)
        f_49061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 37), 'f', False)
        float_49062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 40), 'float')
        # Getting the type of 'x' (line 405)
        x_49063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 45), 'x', False)
        # Getting the type of 'y' (line 405)
        y_49064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 48), 'y', False)
        # Processing the call keyword arguments (line 405)
        int_49065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 56), 'int')
        keyword_49066 = int_49065
        kwargs_49067 = {'incy': keyword_49066}
        # Getting the type of 'assert_raises' (line 405)
        assert_raises_49059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 405)
        assert_raises_call_result_49068 = invoke(stypy.reporting.localization.Localization(__file__, 405, 12), assert_raises_49059, *[Exception_49060, f_49061, float_49062, x_49063, y_49064], **kwargs_49067)
        
        
        # Call to assert_raises(...): (line 406)
        # Processing the call arguments (line 406)
        # Getting the type of 'Exception' (line 406)
        Exception_49070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 26), 'Exception', False)
        # Getting the type of 'f' (line 406)
        f_49071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 37), 'f', False)
        float_49072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 406, 40), 'float')
        # Getting the type of 'x' (line 406)
        x_49073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 45), 'x', False)
        # Getting the type of 'y' (line 406)
        y_49074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 48), 'y', False)
        # Processing the call keyword arguments (line 406)
        int_49075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 406, 56), 'int')
        keyword_49076 = int_49075
        kwargs_49077 = {'offy': keyword_49076}
        # Getting the type of 'assert_raises' (line 406)
        assert_raises_49069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 406)
        assert_raises_call_result_49078 = invoke(stypy.reporting.localization.Localization(__file__, 406, 12), assert_raises_49069, *[Exception_49070, f_49071, float_49072, x_49073, y_49074], **kwargs_49077)
        
        
        # Call to assert_raises(...): (line 407)
        # Processing the call arguments (line 407)
        # Getting the type of 'Exception' (line 407)
        Exception_49080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 26), 'Exception', False)
        # Getting the type of 'f' (line 407)
        f_49081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 37), 'f', False)
        float_49082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 40), 'float')
        # Getting the type of 'x' (line 407)
        x_49083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 45), 'x', False)
        # Getting the type of 'y' (line 407)
        y_49084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 48), 'y', False)
        # Processing the call keyword arguments (line 407)
        int_49085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 56), 'int')
        keyword_49086 = int_49085
        kwargs_49087 = {'offy': keyword_49086}
        # Getting the type of 'assert_raises' (line 407)
        assert_raises_49079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 407)
        assert_raises_call_result_49088 = invoke(stypy.reporting.localization.Localization(__file__, 407, 12), assert_raises_49079, *[Exception_49080, f_49081, float_49082, x_49083, y_49084], **kwargs_49087)
        
        
        # Call to assert_raises(...): (line 408)
        # Processing the call arguments (line 408)
        # Getting the type of 'Exception' (line 408)
        Exception_49090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 26), 'Exception', False)
        # Getting the type of 'f' (line 408)
        f_49091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 37), 'f', False)
        float_49092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 40), 'float')
        # Getting the type of 'x' (line 408)
        x_49093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 45), 'x', False)
        # Getting the type of 'y' (line 408)
        y_49094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 48), 'y', False)
        # Processing the call keyword arguments (line 408)
        int_49095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 53), 'int')
        keyword_49096 = int_49095
        kwargs_49097 = {'n': keyword_49096}
        # Getting the type of 'assert_raises' (line 408)
        assert_raises_49089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 408)
        assert_raises_call_result_49098 = invoke(stypy.reporting.localization.Localization(__file__, 408, 12), assert_raises_49089, *[Exception_49090, f_49091, float_49092, x_49093, y_49094], **kwargs_49097)
        
        
        # Call to assert_raises(...): (line 409)
        # Processing the call arguments (line 409)
        # Getting the type of 'Exception' (line 409)
        Exception_49100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 26), 'Exception', False)
        # Getting the type of 'f' (line 409)
        f_49101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 37), 'f', False)
        float_49102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 40), 'float')
        # Getting the type of 'x' (line 409)
        x_49103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 45), 'x', False)
        # Getting the type of 'y' (line 409)
        y_49104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 48), 'y', False)
        # Processing the call keyword arguments (line 409)
        int_49105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 53), 'int')
        keyword_49106 = int_49105
        kwargs_49107 = {'n': keyword_49106}
        # Getting the type of 'assert_raises' (line 409)
        assert_raises_49099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 409)
        assert_raises_call_result_49108 = invoke(stypy.reporting.localization.Localization(__file__, 409, 12), assert_raises_49099, *[Exception_49100, f_49101, float_49102, x_49103, y_49104], **kwargs_49107)
        
        
        # Call to assert_raises(...): (line 410)
        # Processing the call arguments (line 410)
        # Getting the type of 'Exception' (line 410)
        Exception_49110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 26), 'Exception', False)
        # Getting the type of 'f' (line 410)
        f_49111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 37), 'f', False)
        float_49112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 40), 'float')
        # Getting the type of 'x' (line 410)
        x_49113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 45), 'x', False)
        # Getting the type of 'y' (line 410)
        y_49114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 48), 'y', False)
        # Processing the call keyword arguments (line 410)
        int_49115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 57), 'int')
        keyword_49116 = int_49115
        kwargs_49117 = {'lower': keyword_49116}
        # Getting the type of 'assert_raises' (line 410)
        assert_raises_49109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 410)
        assert_raises_call_result_49118 = invoke(stypy.reporting.localization.Localization(__file__, 410, 12), assert_raises_49109, *[Exception_49110, f_49111, float_49112, x_49113, y_49114], **kwargs_49117)
        
        
        # Call to assert_raises(...): (line 411)
        # Processing the call arguments (line 411)
        # Getting the type of 'Exception' (line 411)
        Exception_49120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 26), 'Exception', False)
        # Getting the type of 'f' (line 411)
        f_49121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 37), 'f', False)
        float_49122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 411, 40), 'float')
        # Getting the type of 'x' (line 411)
        x_49123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 45), 'x', False)
        # Getting the type of 'y' (line 411)
        y_49124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 48), 'y', False)
        # Processing the call keyword arguments (line 411)
        
        # Call to zeros(...): (line 412)
        # Processing the call arguments (line 412)
        
        # Obtaining an instance of the builtin type 'tuple' (line 412)
        tuple_49127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 412)
        # Adding element type (line 412)
        int_49128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 38), tuple_49127, int_49128)
        # Adding element type (line 412)
        int_49129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 38), tuple_49127, int_49129)
        
        str_49130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 45), 'str', 'd')
        str_49131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 50), 'str', 'F')
        # Processing the call keyword arguments (line 412)
        kwargs_49132 = {}
        # Getting the type of 'np' (line 412)
        np_49125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 28), 'np', False)
        # Obtaining the member 'zeros' of a type (line 412)
        zeros_49126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 28), np_49125, 'zeros')
        # Calling zeros(args, kwargs) (line 412)
        zeros_call_result_49133 = invoke(stypy.reporting.localization.Localization(__file__, 412, 28), zeros_49126, *[tuple_49127, str_49130, str_49131], **kwargs_49132)
        
        keyword_49134 = zeros_call_result_49133
        kwargs_49135 = {'a': keyword_49134}
        # Getting the type of 'assert_raises' (line 411)
        assert_raises_49119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 411)
        assert_raises_call_result_49136 = invoke(stypy.reporting.localization.Localization(__file__, 411, 12), assert_raises_49119, *[Exception_49120, f_49121, float_49122, x_49123, y_49124], **kwargs_49135)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_syr2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_syr2' in the type store
        # Getting the type of 'stypy_return_type' (line 369)
        stypy_return_type_49137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_49137)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_syr2'
        return stypy_return_type_49137


    @norecursion
    def test_her2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_her2'
        module_type_store = module_type_store.open_function_context('test_her2', 414, 4, False)
        # Assigning a type to the variable 'self' (line 415)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 415, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_her2')
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_her2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_her2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_her2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_her2(...)' code ##################

        
        # Assigning a Call to a Name (line 415):
        
        # Assigning a Call to a Name (line 415):
        
        # Call to view(...): (line 415)
        # Processing the call arguments (line 415)
        str_49147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 44), 'str', 'D')
        # Processing the call keyword arguments (line 415)
        kwargs_49148 = {}
        
        # Call to arange(...): (line 415)
        # Processing the call arguments (line 415)
        int_49140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 22), 'int')
        int_49141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 25), 'int')
        # Processing the call keyword arguments (line 415)
        str_49142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, 34), 'str', 'd')
        keyword_49143 = str_49142
        kwargs_49144 = {'dtype': keyword_49143}
        # Getting the type of 'np' (line 415)
        np_49138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 12), 'np', False)
        # Obtaining the member 'arange' of a type (line 415)
        arange_49139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 415, 12), np_49138, 'arange')
        # Calling arange(args, kwargs) (line 415)
        arange_call_result_49145 = invoke(stypy.reporting.localization.Localization(__file__, 415, 12), arange_49139, *[int_49140, int_49141], **kwargs_49144)
        
        # Obtaining the member 'view' of a type (line 415)
        view_49146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 415, 12), arange_call_result_49145, 'view')
        # Calling view(args, kwargs) (line 415)
        view_call_result_49149 = invoke(stypy.reporting.localization.Localization(__file__, 415, 12), view_49146, *[str_49147], **kwargs_49148)
        
        # Assigning a type to the variable 'x' (line 415)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 415, 8), 'x', view_call_result_49149)
        
        # Assigning a Call to a Name (line 416):
        
        # Assigning a Call to a Name (line 416):
        
        # Call to view(...): (line 416)
        # Processing the call arguments (line 416)
        str_49159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 45), 'str', 'D')
        # Processing the call keyword arguments (line 416)
        kwargs_49160 = {}
        
        # Call to arange(...): (line 416)
        # Processing the call arguments (line 416)
        int_49152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 22), 'int')
        int_49153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 25), 'int')
        # Processing the call keyword arguments (line 416)
        str_49154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 35), 'str', 'd')
        keyword_49155 = str_49154
        kwargs_49156 = {'dtype': keyword_49155}
        # Getting the type of 'np' (line 416)
        np_49150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 12), 'np', False)
        # Obtaining the member 'arange' of a type (line 416)
        arange_49151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 12), np_49150, 'arange')
        # Calling arange(args, kwargs) (line 416)
        arange_call_result_49157 = invoke(stypy.reporting.localization.Localization(__file__, 416, 12), arange_49151, *[int_49152, int_49153], **kwargs_49156)
        
        # Obtaining the member 'view' of a type (line 416)
        view_49158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 12), arange_call_result_49157, 'view')
        # Calling view(args, kwargs) (line 416)
        view_call_result_49161 = invoke(stypy.reporting.localization.Localization(__file__, 416, 12), view_49158, *[str_49159], **kwargs_49160)
        
        # Assigning a type to the variable 'y' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'y', view_call_result_49161)
        
        # Assigning a BinOp to a Name (line 417):
        
        # Assigning a BinOp to a Name (line 417):
        
        # Obtaining the type of the subscript
        slice_49162 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 417, 16), None, None, None)
        # Getting the type of 'np' (line 417)
        np_49163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 21), 'np')
        # Obtaining the member 'newaxis' of a type (line 417)
        newaxis_49164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 21), np_49163, 'newaxis')
        # Getting the type of 'x' (line 417)
        x_49165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 16), 'x')
        # Obtaining the member '__getitem__' of a type (line 417)
        getitem___49166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 16), x_49165, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 417)
        subscript_call_result_49167 = invoke(stypy.reporting.localization.Localization(__file__, 417, 16), getitem___49166, (slice_49162, newaxis_49164))
        
        
        # Call to conj(...): (line 417)
        # Processing the call keyword arguments (line 417)
        kwargs_49170 = {}
        # Getting the type of 'y' (line 417)
        y_49168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 35), 'y', False)
        # Obtaining the member 'conj' of a type (line 417)
        conj_49169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 35), y_49168, 'conj')
        # Calling conj(args, kwargs) (line 417)
        conj_call_result_49171 = invoke(stypy.reporting.localization.Localization(__file__, 417, 35), conj_49169, *[], **kwargs_49170)
        
        # Applying the binary operator '*' (line 417)
        result_mul_49172 = python_operator(stypy.reporting.localization.Localization(__file__, 417, 16), '*', subscript_call_result_49167, conj_call_result_49171)
        
        
        # Obtaining the type of the subscript
        slice_49173 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 417, 46), None, None, None)
        # Getting the type of 'np' (line 417)
        np_49174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 51), 'np')
        # Obtaining the member 'newaxis' of a type (line 417)
        newaxis_49175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 51), np_49174, 'newaxis')
        # Getting the type of 'y' (line 417)
        y_49176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 46), 'y')
        # Obtaining the member '__getitem__' of a type (line 417)
        getitem___49177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 46), y_49176, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 417)
        subscript_call_result_49178 = invoke(stypy.reporting.localization.Localization(__file__, 417, 46), getitem___49177, (slice_49173, newaxis_49175))
        
        
        # Call to conj(...): (line 417)
        # Processing the call keyword arguments (line 417)
        kwargs_49181 = {}
        # Getting the type of 'x' (line 417)
        x_49179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 65), 'x', False)
        # Obtaining the member 'conj' of a type (line 417)
        conj_49180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 65), x_49179, 'conj')
        # Calling conj(args, kwargs) (line 417)
        conj_call_result_49182 = invoke(stypy.reporting.localization.Localization(__file__, 417, 65), conj_49180, *[], **kwargs_49181)
        
        # Applying the binary operator '*' (line 417)
        result_mul_49183 = python_operator(stypy.reporting.localization.Localization(__file__, 417, 46), '*', subscript_call_result_49178, conj_call_result_49182)
        
        # Applying the binary operator '+' (line 417)
        result_add_49184 = python_operator(stypy.reporting.localization.Localization(__file__, 417, 16), '+', result_mul_49172, result_mul_49183)
        
        # Assigning a type to the variable 'resxy' (line 417)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 8), 'resxy', result_add_49184)
        
        # Assigning a Call to a Name (line 418):
        
        # Assigning a Call to a Name (line 418):
        
        # Call to triu(...): (line 418)
        # Processing the call arguments (line 418)
        # Getting the type of 'resxy' (line 418)
        resxy_49187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 24), 'resxy', False)
        # Processing the call keyword arguments (line 418)
        kwargs_49188 = {}
        # Getting the type of 'np' (line 418)
        np_49185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 16), 'np', False)
        # Obtaining the member 'triu' of a type (line 418)
        triu_49186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 16), np_49185, 'triu')
        # Calling triu(args, kwargs) (line 418)
        triu_call_result_49189 = invoke(stypy.reporting.localization.Localization(__file__, 418, 16), triu_49186, *[resxy_49187], **kwargs_49188)
        
        # Assigning a type to the variable 'resxy' (line 418)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 418, 8), 'resxy', triu_call_result_49189)
        
        # Assigning a BinOp to a Name (line 420):
        
        # Assigning a BinOp to a Name (line 420):
        
        # Obtaining the type of the subscript
        int_49190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 28), 'int')
        slice_49191 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 420, 24), None, None, int_49190)
        # Getting the type of 'np' (line 420)
        np_49192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 32), 'np')
        # Obtaining the member 'newaxis' of a type (line 420)
        newaxis_49193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 32), np_49192, 'newaxis')
        # Getting the type of 'x' (line 420)
        x_49194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 24), 'x')
        # Obtaining the member '__getitem__' of a type (line 420)
        getitem___49195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 24), x_49194, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 420)
        subscript_call_result_49196 = invoke(stypy.reporting.localization.Localization(__file__, 420, 24), getitem___49195, (slice_49191, newaxis_49193))
        
        
        # Call to conj(...): (line 420)
        # Processing the call keyword arguments (line 420)
        kwargs_49203 = {}
        
        # Obtaining the type of the subscript
        int_49197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 50), 'int')
        slice_49198 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 420, 46), None, None, int_49197)
        # Getting the type of 'y' (line 420)
        y_49199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 46), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 420)
        getitem___49200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 46), y_49199, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 420)
        subscript_call_result_49201 = invoke(stypy.reporting.localization.Localization(__file__, 420, 46), getitem___49200, slice_49198)
        
        # Obtaining the member 'conj' of a type (line 420)
        conj_49202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 46), subscript_call_result_49201, 'conj')
        # Calling conj(args, kwargs) (line 420)
        conj_call_result_49204 = invoke(stypy.reporting.localization.Localization(__file__, 420, 46), conj_49202, *[], **kwargs_49203)
        
        # Applying the binary operator '*' (line 420)
        result_mul_49205 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 24), '*', subscript_call_result_49196, conj_call_result_49204)
        
        # Assigning a type to the variable 'resxy_reverse' (line 420)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 8), 'resxy_reverse', result_mul_49205)
        
        # Getting the type of 'resxy_reverse' (line 421)
        resxy_reverse_49206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 8), 'resxy_reverse')
        
        # Obtaining the type of the subscript
        int_49207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 29), 'int')
        slice_49208 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 421, 25), None, None, int_49207)
        # Getting the type of 'np' (line 421)
        np_49209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 33), 'np')
        # Obtaining the member 'newaxis' of a type (line 421)
        newaxis_49210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 33), np_49209, 'newaxis')
        # Getting the type of 'y' (line 421)
        y_49211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 25), 'y')
        # Obtaining the member '__getitem__' of a type (line 421)
        getitem___49212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 25), y_49211, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 421)
        subscript_call_result_49213 = invoke(stypy.reporting.localization.Localization(__file__, 421, 25), getitem___49212, (slice_49208, newaxis_49210))
        
        
        # Call to conj(...): (line 421)
        # Processing the call keyword arguments (line 421)
        kwargs_49220 = {}
        
        # Obtaining the type of the subscript
        int_49214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 51), 'int')
        slice_49215 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 421, 47), None, None, int_49214)
        # Getting the type of 'x' (line 421)
        x_49216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 47), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 421)
        getitem___49217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 47), x_49216, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 421)
        subscript_call_result_49218 = invoke(stypy.reporting.localization.Localization(__file__, 421, 47), getitem___49217, slice_49215)
        
        # Obtaining the member 'conj' of a type (line 421)
        conj_49219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 47), subscript_call_result_49218, 'conj')
        # Calling conj(args, kwargs) (line 421)
        conj_call_result_49221 = invoke(stypy.reporting.localization.Localization(__file__, 421, 47), conj_49219, *[], **kwargs_49220)
        
        # Applying the binary operator '*' (line 421)
        result_mul_49222 = python_operator(stypy.reporting.localization.Localization(__file__, 421, 25), '*', subscript_call_result_49213, conj_call_result_49221)
        
        # Applying the binary operator '+=' (line 421)
        result_iadd_49223 = python_operator(stypy.reporting.localization.Localization(__file__, 421, 8), '+=', resxy_reverse_49206, result_mul_49222)
        # Assigning a type to the variable 'resxy_reverse' (line 421)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 421, 8), 'resxy_reverse', result_iadd_49223)
        
        
        # Assigning a Call to a Name (line 422):
        
        # Assigning a Call to a Name (line 422):
        
        # Call to triu(...): (line 422)
        # Processing the call arguments (line 422)
        # Getting the type of 'resxy_reverse' (line 422)
        resxy_reverse_49226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 32), 'resxy_reverse', False)
        # Processing the call keyword arguments (line 422)
        kwargs_49227 = {}
        # Getting the type of 'np' (line 422)
        np_49224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 24), 'np', False)
        # Obtaining the member 'triu' of a type (line 422)
        triu_49225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 24), np_49224, 'triu')
        # Calling triu(args, kwargs) (line 422)
        triu_call_result_49228 = invoke(stypy.reporting.localization.Localization(__file__, 422, 24), triu_49225, *[resxy_reverse_49226], **kwargs_49227)
        
        # Assigning a type to the variable 'resxy_reverse' (line 422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 422, 8), 'resxy_reverse', triu_call_result_49228)
        
        # Assigning a Call to a Name (line 424):
        
        # Assigning a Call to a Name (line 424):
        
        # Call to ravel(...): (line 424)
        # Processing the call keyword arguments (line 424)
        kwargs_49246 = {}
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 424)
        tuple_49229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 424)
        # Adding element type (line 424)
        
        # Call to zeros(...): (line 424)
        # Processing the call arguments (line 424)
        int_49232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 27), 'int')
        # Processing the call keyword arguments (line 424)
        kwargs_49233 = {}
        # Getting the type of 'np' (line 424)
        np_49230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 18), 'np', False)
        # Obtaining the member 'zeros' of a type (line 424)
        zeros_49231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 18), np_49230, 'zeros')
        # Calling zeros(args, kwargs) (line 424)
        zeros_call_result_49234 = invoke(stypy.reporting.localization.Localization(__file__, 424, 18), zeros_49231, *[int_49232], **kwargs_49233)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 18), tuple_49229, zeros_call_result_49234)
        # Adding element type (line 424)
        # Getting the type of 'x' (line 424)
        x_49235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 31), 'x', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 18), tuple_49229, x_49235)
        # Adding element type (line 424)
        
        # Call to zeros(...): (line 424)
        # Processing the call arguments (line 424)
        int_49238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 424, 43), 'int')
        # Processing the call keyword arguments (line 424)
        kwargs_49239 = {}
        # Getting the type of 'np' (line 424)
        np_49236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 34), 'np', False)
        # Obtaining the member 'zeros' of a type (line 424)
        zeros_49237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 34), np_49236, 'zeros')
        # Calling zeros(args, kwargs) (line 424)
        zeros_call_result_49240 = invoke(stypy.reporting.localization.Localization(__file__, 424, 34), zeros_49237, *[int_49238], **kwargs_49239)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 424, 18), tuple_49229, zeros_call_result_49240)
        
        # Getting the type of 'np' (line 424)
        np_49241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 12), 'np', False)
        # Obtaining the member 'c_' of a type (line 424)
        c__49242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 12), np_49241, 'c_')
        # Obtaining the member '__getitem__' of a type (line 424)
        getitem___49243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 12), c__49242, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 424)
        subscript_call_result_49244 = invoke(stypy.reporting.localization.Localization(__file__, 424, 12), getitem___49243, tuple_49229)
        
        # Obtaining the member 'ravel' of a type (line 424)
        ravel_49245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 12), subscript_call_result_49244, 'ravel')
        # Calling ravel(args, kwargs) (line 424)
        ravel_call_result_49247 = invoke(stypy.reporting.localization.Localization(__file__, 424, 12), ravel_49245, *[], **kwargs_49246)
        
        # Assigning a type to the variable 'u' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'u', ravel_call_result_49247)
        
        # Assigning a Call to a Name (line 425):
        
        # Assigning a Call to a Name (line 425):
        
        # Call to ravel(...): (line 425)
        # Processing the call keyword arguments (line 425)
        kwargs_49265 = {}
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 425)
        tuple_49248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 425)
        # Adding element type (line 425)
        
        # Call to zeros(...): (line 425)
        # Processing the call arguments (line 425)
        int_49251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 27), 'int')
        # Processing the call keyword arguments (line 425)
        kwargs_49252 = {}
        # Getting the type of 'np' (line 425)
        np_49249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 18), 'np', False)
        # Obtaining the member 'zeros' of a type (line 425)
        zeros_49250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 18), np_49249, 'zeros')
        # Calling zeros(args, kwargs) (line 425)
        zeros_call_result_49253 = invoke(stypy.reporting.localization.Localization(__file__, 425, 18), zeros_49250, *[int_49251], **kwargs_49252)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 18), tuple_49248, zeros_call_result_49253)
        # Adding element type (line 425)
        # Getting the type of 'y' (line 425)
        y_49254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 31), 'y', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 18), tuple_49248, y_49254)
        # Adding element type (line 425)
        
        # Call to zeros(...): (line 425)
        # Processing the call arguments (line 425)
        int_49257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 43), 'int')
        # Processing the call keyword arguments (line 425)
        kwargs_49258 = {}
        # Getting the type of 'np' (line 425)
        np_49255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 34), 'np', False)
        # Obtaining the member 'zeros' of a type (line 425)
        zeros_49256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 34), np_49255, 'zeros')
        # Calling zeros(args, kwargs) (line 425)
        zeros_call_result_49259 = invoke(stypy.reporting.localization.Localization(__file__, 425, 34), zeros_49256, *[int_49257], **kwargs_49258)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 425, 18), tuple_49248, zeros_call_result_49259)
        
        # Getting the type of 'np' (line 425)
        np_49260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'np', False)
        # Obtaining the member 'c_' of a type (line 425)
        c__49261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 12), np_49260, 'c_')
        # Obtaining the member '__getitem__' of a type (line 425)
        getitem___49262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 12), c__49261, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 425)
        subscript_call_result_49263 = invoke(stypy.reporting.localization.Localization(__file__, 425, 12), getitem___49262, tuple_49248)
        
        # Obtaining the member 'ravel' of a type (line 425)
        ravel_49264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 12), subscript_call_result_49263, 'ravel')
        # Calling ravel(args, kwargs) (line 425)
        ravel_call_result_49266 = invoke(stypy.reporting.localization.Localization(__file__, 425, 12), ravel_49264, *[], **kwargs_49265)
        
        # Assigning a type to the variable 'v' (line 425)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 8), 'v', ravel_call_result_49266)
        
        
        # Call to zip(...): (line 427)
        # Processing the call arguments (line 427)
        str_49268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 27), 'str', 'cz')
        
        # Obtaining an instance of the builtin type 'list' (line 427)
        list_49269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 427)
        # Adding element type (line 427)
        float_49270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 427, 33), list_49269, float_49270)
        # Adding element type (line 427)
        float_49271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 427, 40), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 427, 33), list_49269, float_49271)
        
        # Processing the call keyword arguments (line 427)
        kwargs_49272 = {}
        # Getting the type of 'zip' (line 427)
        zip_49267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 23), 'zip', False)
        # Calling zip(args, kwargs) (line 427)
        zip_call_result_49273 = invoke(stypy.reporting.localization.Localization(__file__, 427, 23), zip_49267, *[str_49268, list_49269], **kwargs_49272)
        
        # Testing the type of a for loop iterable (line 427)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 427, 8), zip_call_result_49273)
        # Getting the type of the for loop variable (line 427)
        for_loop_var_49274 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 427, 8), zip_call_result_49273)
        # Assigning a type to the variable 'p' (line 427)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 427, 8), 'p', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 427, 8), for_loop_var_49274))
        # Assigning a type to the variable 'rtol' (line 427)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 427, 8), 'rtol', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 427, 8), for_loop_var_49274))
        # SSA begins for a for statement (line 427)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 428):
        
        # Assigning a Call to a Name (line 428):
        
        # Call to getattr(...): (line 428)
        # Processing the call arguments (line 428)
        # Getting the type of 'fblas' (line 428)
        fblas_49276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 24), 'fblas', False)
        # Getting the type of 'p' (line 428)
        p_49277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 31), 'p', False)
        str_49278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 428, 33), 'str', 'her2')
        # Applying the binary operator '+' (line 428)
        result_add_49279 = python_operator(stypy.reporting.localization.Localization(__file__, 428, 31), '+', p_49277, str_49278)
        
        # Getting the type of 'None' (line 428)
        None_49280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 41), 'None', False)
        # Processing the call keyword arguments (line 428)
        kwargs_49281 = {}
        # Getting the type of 'getattr' (line 428)
        getattr_49275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 428)
        getattr_call_result_49282 = invoke(stypy.reporting.localization.Localization(__file__, 428, 16), getattr_49275, *[fblas_49276, result_add_49279, None_49280], **kwargs_49281)
        
        # Assigning a type to the variable 'f' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 12), 'f', getattr_call_result_49282)
        
        # Type idiom detected: calculating its left and rigth part (line 429)
        # Getting the type of 'f' (line 429)
        f_49283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 15), 'f')
        # Getting the type of 'None' (line 429)
        None_49284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 20), 'None')
        
        (may_be_49285, more_types_in_union_49286) = may_be_none(f_49283, None_49284)

        if may_be_49285:

            if more_types_in_union_49286:
                # Runtime conditional SSA (line 429)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_49286:
                # SSA join for if statement (line 429)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_allclose(...): (line 431)
        # Processing the call arguments (line 431)
        
        # Call to f(...): (line 431)
        # Processing the call arguments (line 431)
        float_49289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 30), 'float')
        # Getting the type of 'x' (line 431)
        x_49290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 35), 'x', False)
        # Getting the type of 'y' (line 431)
        y_49291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 38), 'y', False)
        # Processing the call keyword arguments (line 431)
        kwargs_49292 = {}
        # Getting the type of 'f' (line 431)
        f_49288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 28), 'f', False)
        # Calling f(args, kwargs) (line 431)
        f_call_result_49293 = invoke(stypy.reporting.localization.Localization(__file__, 431, 28), f_49288, *[float_49289, x_49290, y_49291], **kwargs_49292)
        
        # Getting the type of 'resxy' (line 431)
        resxy_49294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 42), 'resxy', False)
        # Processing the call keyword arguments (line 431)
        # Getting the type of 'rtol' (line 431)
        rtol_49295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 54), 'rtol', False)
        keyword_49296 = rtol_49295
        kwargs_49297 = {'rtol': keyword_49296}
        # Getting the type of 'assert_allclose' (line 431)
        assert_allclose_49287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 431)
        assert_allclose_call_result_49298 = invoke(stypy.reporting.localization.Localization(__file__, 431, 12), assert_allclose_49287, *[f_call_result_49293, resxy_49294], **kwargs_49297)
        
        
        # Call to assert_allclose(...): (line 432)
        # Processing the call arguments (line 432)
        
        # Call to f(...): (line 432)
        # Processing the call arguments (line 432)
        float_49301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 432, 30), 'float')
        # Getting the type of 'x' (line 432)
        x_49302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 35), 'x', False)
        # Getting the type of 'y' (line 432)
        y_49303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 38), 'y', False)
        # Processing the call keyword arguments (line 432)
        int_49304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 432, 43), 'int')
        keyword_49305 = int_49304
        kwargs_49306 = {'n': keyword_49305}
        # Getting the type of 'f' (line 432)
        f_49300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 28), 'f', False)
        # Calling f(args, kwargs) (line 432)
        f_call_result_49307 = invoke(stypy.reporting.localization.Localization(__file__, 432, 28), f_49300, *[float_49301, x_49302, y_49303], **kwargs_49306)
        
        
        # Obtaining the type of the subscript
        int_49308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 432, 54), 'int')
        slice_49309 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 432, 47), None, int_49308, None)
        int_49310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 432, 58), 'int')
        slice_49311 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 432, 47), None, int_49310, None)
        # Getting the type of 'resxy' (line 432)
        resxy_49312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 47), 'resxy', False)
        # Obtaining the member '__getitem__' of a type (line 432)
        getitem___49313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 432, 47), resxy_49312, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 432)
        subscript_call_result_49314 = invoke(stypy.reporting.localization.Localization(__file__, 432, 47), getitem___49313, (slice_49309, slice_49311))
        
        # Processing the call keyword arguments (line 432)
        # Getting the type of 'rtol' (line 432)
        rtol_49315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 67), 'rtol', False)
        keyword_49316 = rtol_49315
        kwargs_49317 = {'rtol': keyword_49316}
        # Getting the type of 'assert_allclose' (line 432)
        assert_allclose_49299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 432)
        assert_allclose_call_result_49318 = invoke(stypy.reporting.localization.Localization(__file__, 432, 12), assert_allclose_49299, *[f_call_result_49307, subscript_call_result_49314], **kwargs_49317)
        
        
        # Call to assert_allclose(...): (line 433)
        # Processing the call arguments (line 433)
        
        # Call to f(...): (line 433)
        # Processing the call arguments (line 433)
        float_49321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 433, 30), 'float')
        # Getting the type of 'x' (line 433)
        x_49322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 35), 'x', False)
        # Getting the type of 'y' (line 433)
        y_49323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 38), 'y', False)
        # Processing the call keyword arguments (line 433)
        # Getting the type of 'True' (line 433)
        True_49324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 47), 'True', False)
        keyword_49325 = True_49324
        kwargs_49326 = {'lower': keyword_49325}
        # Getting the type of 'f' (line 433)
        f_49320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 28), 'f', False)
        # Calling f(args, kwargs) (line 433)
        f_call_result_49327 = invoke(stypy.reporting.localization.Localization(__file__, 433, 28), f_49320, *[float_49321, x_49322, y_49323], **kwargs_49326)
        
        
        # Call to conj(...): (line 433)
        # Processing the call keyword arguments (line 433)
        kwargs_49331 = {}
        # Getting the type of 'resxy' (line 433)
        resxy_49328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 54), 'resxy', False)
        # Obtaining the member 'T' of a type (line 433)
        T_49329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 54), resxy_49328, 'T')
        # Obtaining the member 'conj' of a type (line 433)
        conj_49330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 54), T_49329, 'conj')
        # Calling conj(args, kwargs) (line 433)
        conj_call_result_49332 = invoke(stypy.reporting.localization.Localization(__file__, 433, 54), conj_49330, *[], **kwargs_49331)
        
        # Processing the call keyword arguments (line 433)
        # Getting the type of 'rtol' (line 434)
        rtol_49333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 33), 'rtol', False)
        keyword_49334 = rtol_49333
        kwargs_49335 = {'rtol': keyword_49334}
        # Getting the type of 'assert_allclose' (line 433)
        assert_allclose_49319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 433)
        assert_allclose_call_result_49336 = invoke(stypy.reporting.localization.Localization(__file__, 433, 12), assert_allclose_49319, *[f_call_result_49327, conj_call_result_49332], **kwargs_49335)
        
        
        # Call to assert_allclose(...): (line 436)
        # Processing the call arguments (line 436)
        
        # Call to f(...): (line 436)
        # Processing the call arguments (line 436)
        float_49339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 30), 'float')
        # Getting the type of 'u' (line 436)
        u_49340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 35), 'u', False)
        # Getting the type of 'v' (line 436)
        v_49341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 38), 'v', False)
        # Processing the call keyword arguments (line 436)
        int_49342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 46), 'int')
        keyword_49343 = int_49342
        int_49344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 54), 'int')
        keyword_49345 = int_49344
        int_49346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 62), 'int')
        keyword_49347 = int_49346
        int_49348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 70), 'int')
        keyword_49349 = int_49348
        kwargs_49350 = {'incx': keyword_49343, 'offx': keyword_49345, 'offy': keyword_49349, 'incy': keyword_49347}
        # Getting the type of 'f' (line 436)
        f_49338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 28), 'f', False)
        # Calling f(args, kwargs) (line 436)
        f_call_result_49351 = invoke(stypy.reporting.localization.Localization(__file__, 436, 28), f_49338, *[float_49339, u_49340, v_49341], **kwargs_49350)
        
        # Getting the type of 'resxy' (line 437)
        resxy_49352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 28), 'resxy', False)
        # Processing the call keyword arguments (line 436)
        # Getting the type of 'rtol' (line 437)
        rtol_49353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 40), 'rtol', False)
        keyword_49354 = rtol_49353
        kwargs_49355 = {'rtol': keyword_49354}
        # Getting the type of 'assert_allclose' (line 436)
        assert_allclose_49337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 436)
        assert_allclose_call_result_49356 = invoke(stypy.reporting.localization.Localization(__file__, 436, 12), assert_allclose_49337, *[f_call_result_49351, resxy_49352], **kwargs_49355)
        
        
        # Call to assert_allclose(...): (line 438)
        # Processing the call arguments (line 438)
        
        # Call to f(...): (line 438)
        # Processing the call arguments (line 438)
        float_49359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 30), 'float')
        # Getting the type of 'u' (line 438)
        u_49360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 35), 'u', False)
        # Getting the type of 'v' (line 438)
        v_49361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 38), 'v', False)
        # Processing the call keyword arguments (line 438)
        int_49362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 46), 'int')
        keyword_49363 = int_49362
        int_49364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 54), 'int')
        keyword_49365 = int_49364
        int_49366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 62), 'int')
        keyword_49367 = int_49366
        int_49368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 70), 'int')
        keyword_49369 = int_49368
        int_49370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 75), 'int')
        keyword_49371 = int_49370
        kwargs_49372 = {'incx': keyword_49363, 'offx': keyword_49365, 'n': keyword_49371, 'offy': keyword_49369, 'incy': keyword_49367}
        # Getting the type of 'f' (line 438)
        f_49358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 28), 'f', False)
        # Calling f(args, kwargs) (line 438)
        f_call_result_49373 = invoke(stypy.reporting.localization.Localization(__file__, 438, 28), f_49358, *[float_49359, u_49360, v_49361], **kwargs_49372)
        
        
        # Obtaining the type of the subscript
        int_49374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 35), 'int')
        slice_49375 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 439, 28), None, int_49374, None)
        int_49376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 39), 'int')
        slice_49377 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 439, 28), None, int_49376, None)
        # Getting the type of 'resxy' (line 439)
        resxy_49378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 28), 'resxy', False)
        # Obtaining the member '__getitem__' of a type (line 439)
        getitem___49379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 28), resxy_49378, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 439)
        subscript_call_result_49380 = invoke(stypy.reporting.localization.Localization(__file__, 439, 28), getitem___49379, (slice_49375, slice_49377))
        
        # Processing the call keyword arguments (line 438)
        # Getting the type of 'rtol' (line 439)
        rtol_49381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 48), 'rtol', False)
        keyword_49382 = rtol_49381
        kwargs_49383 = {'rtol': keyword_49382}
        # Getting the type of 'assert_allclose' (line 438)
        assert_allclose_49357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 438)
        assert_allclose_call_result_49384 = invoke(stypy.reporting.localization.Localization(__file__, 438, 12), assert_allclose_49357, *[f_call_result_49373, subscript_call_result_49380], **kwargs_49383)
        
        
        # Call to assert_allclose(...): (line 441)
        # Processing the call arguments (line 441)
        
        # Call to f(...): (line 441)
        # Processing the call arguments (line 441)
        float_49387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 30), 'float')
        # Getting the type of 'u' (line 441)
        u_49388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 35), 'u', False)
        # Getting the type of 'v' (line 441)
        v_49389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 38), 'v', False)
        # Processing the call keyword arguments (line 441)
        int_49390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 46), 'int')
        keyword_49391 = int_49390
        int_49392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 55), 'int')
        keyword_49393 = int_49392
        int_49394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 63), 'int')
        keyword_49395 = int_49394
        int_49396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 72), 'int')
        keyword_49397 = int_49396
        kwargs_49398 = {'incx': keyword_49391, 'offx': keyword_49393, 'offy': keyword_49397, 'incy': keyword_49395}
        # Getting the type of 'f' (line 441)
        f_49386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 28), 'f', False)
        # Calling f(args, kwargs) (line 441)
        f_call_result_49399 = invoke(stypy.reporting.localization.Localization(__file__, 441, 28), f_49386, *[float_49387, u_49388, v_49389], **kwargs_49398)
        
        # Getting the type of 'resxy_reverse' (line 442)
        resxy_reverse_49400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 28), 'resxy_reverse', False)
        # Processing the call keyword arguments (line 441)
        # Getting the type of 'rtol' (line 442)
        rtol_49401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 48), 'rtol', False)
        keyword_49402 = rtol_49401
        kwargs_49403 = {'rtol': keyword_49402}
        # Getting the type of 'assert_allclose' (line 441)
        assert_allclose_49385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 441)
        assert_allclose_call_result_49404 = invoke(stypy.reporting.localization.Localization(__file__, 441, 12), assert_allclose_49385, *[f_call_result_49399, resxy_reverse_49400], **kwargs_49403)
        
        
        # Assigning a Call to a Name (line 444):
        
        # Assigning a Call to a Name (line 444):
        
        # Call to zeros(...): (line 444)
        # Processing the call arguments (line 444)
        
        # Obtaining an instance of the builtin type 'tuple' (line 444)
        tuple_49407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 444)
        # Adding element type (line 444)
        int_49408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 444, 26), tuple_49407, int_49408)
        # Adding element type (line 444)
        int_49409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 444, 26), tuple_49407, int_49409)
        
        
        
        # Getting the type of 'p' (line 444)
        p_49410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 40), 'p', False)
        str_49411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 45), 'str', 'c')
        # Applying the binary operator '==' (line 444)
        result_eq_49412 = python_operator(stypy.reporting.localization.Localization(__file__, 444, 40), '==', p_49410, str_49411)
        
        # Testing the type of an if expression (line 444)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 444, 33), result_eq_49412)
        # SSA begins for if expression (line 444)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        str_49413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 33), 'str', 'F')
        # SSA branch for the else part of an if expression (line 444)
        module_type_store.open_ssa_branch('if expression else')
        str_49414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 54), 'str', 'D')
        # SSA join for if expression (line 444)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_49415 = union_type.UnionType.add(str_49413, str_49414)
        
        str_49416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 59), 'str', 'F')
        # Processing the call keyword arguments (line 444)
        kwargs_49417 = {}
        # Getting the type of 'np' (line 444)
        np_49405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'np', False)
        # Obtaining the member 'zeros' of a type (line 444)
        zeros_49406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), np_49405, 'zeros')
        # Calling zeros(args, kwargs) (line 444)
        zeros_call_result_49418 = invoke(stypy.reporting.localization.Localization(__file__, 444, 16), zeros_49406, *[tuple_49407, if_exp_49415, str_49416], **kwargs_49417)
        
        # Assigning a type to the variable 'a' (line 444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 12), 'a', zeros_call_result_49418)
        
        # Assigning a Call to a Name (line 445):
        
        # Assigning a Call to a Name (line 445):
        
        # Call to f(...): (line 445)
        # Processing the call arguments (line 445)
        float_49420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 445, 18), 'float')
        # Getting the type of 'x' (line 445)
        x_49421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 23), 'x', False)
        # Getting the type of 'y' (line 445)
        y_49422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 26), 'y', False)
        # Processing the call keyword arguments (line 445)
        # Getting the type of 'a' (line 445)
        a_49423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 31), 'a', False)
        keyword_49424 = a_49423
        # Getting the type of 'True' (line 445)
        True_49425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 46), 'True', False)
        keyword_49426 = True_49425
        kwargs_49427 = {'a': keyword_49424, 'overwrite_a': keyword_49426}
        # Getting the type of 'f' (line 445)
        f_49419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 16), 'f', False)
        # Calling f(args, kwargs) (line 445)
        f_call_result_49428 = invoke(stypy.reporting.localization.Localization(__file__, 445, 16), f_49419, *[float_49420, x_49421, y_49422], **kwargs_49427)
        
        # Assigning a type to the variable 'b' (line 445)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 12), 'b', f_call_result_49428)
        
        # Call to assert_allclose(...): (line 446)
        # Processing the call arguments (line 446)
        # Getting the type of 'a' (line 446)
        a_49430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 28), 'a', False)
        # Getting the type of 'resxy' (line 446)
        resxy_49431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 31), 'resxy', False)
        # Processing the call keyword arguments (line 446)
        # Getting the type of 'rtol' (line 446)
        rtol_49432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 43), 'rtol', False)
        keyword_49433 = rtol_49432
        kwargs_49434 = {'rtol': keyword_49433}
        # Getting the type of 'assert_allclose' (line 446)
        assert_allclose_49429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 446)
        assert_allclose_call_result_49435 = invoke(stypy.reporting.localization.Localization(__file__, 446, 12), assert_allclose_49429, *[a_49430, resxy_49431], **kwargs_49434)
        
        
        # Assigning a Call to a Name (line 448):
        
        # Assigning a Call to a Name (line 448):
        
        # Call to f(...): (line 448)
        # Processing the call arguments (line 448)
        float_49437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 18), 'float')
        # Getting the type of 'x' (line 448)
        x_49438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 23), 'x', False)
        # Getting the type of 'y' (line 448)
        y_49439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 26), 'y', False)
        # Processing the call keyword arguments (line 448)
        # Getting the type of 'a' (line 448)
        a_49440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 31), 'a', False)
        keyword_49441 = a_49440
        kwargs_49442 = {'a': keyword_49441}
        # Getting the type of 'f' (line 448)
        f_49436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'f', False)
        # Calling f(args, kwargs) (line 448)
        f_call_result_49443 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), f_49436, *[float_49437, x_49438, y_49439], **kwargs_49442)
        
        # Assigning a type to the variable 'b' (line 448)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 12), 'b', f_call_result_49443)
        
        # Call to assert_(...): (line 449)
        # Processing the call arguments (line 449)
        
        # Getting the type of 'a' (line 449)
        a_49445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 20), 'a', False)
        # Getting the type of 'b' (line 449)
        b_49446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 29), 'b', False)
        # Applying the binary operator 'isnot' (line 449)
        result_is_not_49447 = python_operator(stypy.reporting.localization.Localization(__file__, 449, 20), 'isnot', a_49445, b_49446)
        
        # Processing the call keyword arguments (line 449)
        kwargs_49448 = {}
        # Getting the type of 'assert_' (line 449)
        assert__49444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 449)
        assert__call_result_49449 = invoke(stypy.reporting.localization.Localization(__file__, 449, 12), assert__49444, *[result_is_not_49447], **kwargs_49448)
        
        
        # Call to assert_allclose(...): (line 450)
        # Processing the call arguments (line 450)
        # Getting the type of 'b' (line 450)
        b_49451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 28), 'b', False)
        int_49452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 450, 31), 'int')
        # Getting the type of 'resxy' (line 450)
        resxy_49453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 33), 'resxy', False)
        # Applying the binary operator '*' (line 450)
        result_mul_49454 = python_operator(stypy.reporting.localization.Localization(__file__, 450, 31), '*', int_49452, resxy_49453)
        
        # Processing the call keyword arguments (line 450)
        # Getting the type of 'rtol' (line 450)
        rtol_49455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 45), 'rtol', False)
        keyword_49456 = rtol_49455
        kwargs_49457 = {'rtol': keyword_49456}
        # Getting the type of 'assert_allclose' (line 450)
        assert_allclose_49450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 450)
        assert_allclose_call_result_49458 = invoke(stypy.reporting.localization.Localization(__file__, 450, 12), assert_allclose_49450, *[b_49451, result_mul_49454], **kwargs_49457)
        
        
        # Call to assert_raises(...): (line 452)
        # Processing the call arguments (line 452)
        # Getting the type of 'Exception' (line 452)
        Exception_49460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 26), 'Exception', False)
        # Getting the type of 'f' (line 452)
        f_49461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 37), 'f', False)
        float_49462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 40), 'float')
        # Getting the type of 'x' (line 452)
        x_49463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 45), 'x', False)
        # Getting the type of 'y' (line 452)
        y_49464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 48), 'y', False)
        # Processing the call keyword arguments (line 452)
        int_49465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 452, 56), 'int')
        keyword_49466 = int_49465
        kwargs_49467 = {'incx': keyword_49466}
        # Getting the type of 'assert_raises' (line 452)
        assert_raises_49459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 452)
        assert_raises_call_result_49468 = invoke(stypy.reporting.localization.Localization(__file__, 452, 12), assert_raises_49459, *[Exception_49460, f_49461, float_49462, x_49463, y_49464], **kwargs_49467)
        
        
        # Call to assert_raises(...): (line 453)
        # Processing the call arguments (line 453)
        # Getting the type of 'Exception' (line 453)
        Exception_49470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 26), 'Exception', False)
        # Getting the type of 'f' (line 453)
        f_49471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 37), 'f', False)
        float_49472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 40), 'float')
        # Getting the type of 'x' (line 453)
        x_49473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 45), 'x', False)
        # Getting the type of 'y' (line 453)
        y_49474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 48), 'y', False)
        # Processing the call keyword arguments (line 453)
        int_49475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 56), 'int')
        keyword_49476 = int_49475
        kwargs_49477 = {'offx': keyword_49476}
        # Getting the type of 'assert_raises' (line 453)
        assert_raises_49469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 453)
        assert_raises_call_result_49478 = invoke(stypy.reporting.localization.Localization(__file__, 453, 12), assert_raises_49469, *[Exception_49470, f_49471, float_49472, x_49473, y_49474], **kwargs_49477)
        
        
        # Call to assert_raises(...): (line 454)
        # Processing the call arguments (line 454)
        # Getting the type of 'Exception' (line 454)
        Exception_49480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 26), 'Exception', False)
        # Getting the type of 'f' (line 454)
        f_49481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 37), 'f', False)
        float_49482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 40), 'float')
        # Getting the type of 'x' (line 454)
        x_49483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 45), 'x', False)
        # Getting the type of 'y' (line 454)
        y_49484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 48), 'y', False)
        # Processing the call keyword arguments (line 454)
        int_49485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 454, 56), 'int')
        keyword_49486 = int_49485
        kwargs_49487 = {'offx': keyword_49486}
        # Getting the type of 'assert_raises' (line 454)
        assert_raises_49479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 454)
        assert_raises_call_result_49488 = invoke(stypy.reporting.localization.Localization(__file__, 454, 12), assert_raises_49479, *[Exception_49480, f_49481, float_49482, x_49483, y_49484], **kwargs_49487)
        
        
        # Call to assert_raises(...): (line 455)
        # Processing the call arguments (line 455)
        # Getting the type of 'Exception' (line 455)
        Exception_49490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 26), 'Exception', False)
        # Getting the type of 'f' (line 455)
        f_49491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 37), 'f', False)
        float_49492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 40), 'float')
        # Getting the type of 'x' (line 455)
        x_49493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 45), 'x', False)
        # Getting the type of 'y' (line 455)
        y_49494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 48), 'y', False)
        # Processing the call keyword arguments (line 455)
        int_49495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 56), 'int')
        keyword_49496 = int_49495
        kwargs_49497 = {'incy': keyword_49496}
        # Getting the type of 'assert_raises' (line 455)
        assert_raises_49489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 455)
        assert_raises_call_result_49498 = invoke(stypy.reporting.localization.Localization(__file__, 455, 12), assert_raises_49489, *[Exception_49490, f_49491, float_49492, x_49493, y_49494], **kwargs_49497)
        
        
        # Call to assert_raises(...): (line 456)
        # Processing the call arguments (line 456)
        # Getting the type of 'Exception' (line 456)
        Exception_49500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 26), 'Exception', False)
        # Getting the type of 'f' (line 456)
        f_49501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 37), 'f', False)
        float_49502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 40), 'float')
        # Getting the type of 'x' (line 456)
        x_49503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 45), 'x', False)
        # Getting the type of 'y' (line 456)
        y_49504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 48), 'y', False)
        # Processing the call keyword arguments (line 456)
        int_49505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 56), 'int')
        keyword_49506 = int_49505
        kwargs_49507 = {'offy': keyword_49506}
        # Getting the type of 'assert_raises' (line 456)
        assert_raises_49499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 456)
        assert_raises_call_result_49508 = invoke(stypy.reporting.localization.Localization(__file__, 456, 12), assert_raises_49499, *[Exception_49500, f_49501, float_49502, x_49503, y_49504], **kwargs_49507)
        
        
        # Call to assert_raises(...): (line 457)
        # Processing the call arguments (line 457)
        # Getting the type of 'Exception' (line 457)
        Exception_49510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 26), 'Exception', False)
        # Getting the type of 'f' (line 457)
        f_49511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 37), 'f', False)
        float_49512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 40), 'float')
        # Getting the type of 'x' (line 457)
        x_49513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 45), 'x', False)
        # Getting the type of 'y' (line 457)
        y_49514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 48), 'y', False)
        # Processing the call keyword arguments (line 457)
        int_49515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 56), 'int')
        keyword_49516 = int_49515
        kwargs_49517 = {'offy': keyword_49516}
        # Getting the type of 'assert_raises' (line 457)
        assert_raises_49509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 457)
        assert_raises_call_result_49518 = invoke(stypy.reporting.localization.Localization(__file__, 457, 12), assert_raises_49509, *[Exception_49510, f_49511, float_49512, x_49513, y_49514], **kwargs_49517)
        
        
        # Call to assert_raises(...): (line 458)
        # Processing the call arguments (line 458)
        # Getting the type of 'Exception' (line 458)
        Exception_49520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 26), 'Exception', False)
        # Getting the type of 'f' (line 458)
        f_49521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 37), 'f', False)
        float_49522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 40), 'float')
        # Getting the type of 'x' (line 458)
        x_49523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 45), 'x', False)
        # Getting the type of 'y' (line 458)
        y_49524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 48), 'y', False)
        # Processing the call keyword arguments (line 458)
        int_49525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 53), 'int')
        keyword_49526 = int_49525
        kwargs_49527 = {'n': keyword_49526}
        # Getting the type of 'assert_raises' (line 458)
        assert_raises_49519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 458)
        assert_raises_call_result_49528 = invoke(stypy.reporting.localization.Localization(__file__, 458, 12), assert_raises_49519, *[Exception_49520, f_49521, float_49522, x_49523, y_49524], **kwargs_49527)
        
        
        # Call to assert_raises(...): (line 459)
        # Processing the call arguments (line 459)
        # Getting the type of 'Exception' (line 459)
        Exception_49530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 26), 'Exception', False)
        # Getting the type of 'f' (line 459)
        f_49531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 37), 'f', False)
        float_49532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 40), 'float')
        # Getting the type of 'x' (line 459)
        x_49533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 45), 'x', False)
        # Getting the type of 'y' (line 459)
        y_49534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 48), 'y', False)
        # Processing the call keyword arguments (line 459)
        int_49535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 53), 'int')
        keyword_49536 = int_49535
        kwargs_49537 = {'n': keyword_49536}
        # Getting the type of 'assert_raises' (line 459)
        assert_raises_49529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 459)
        assert_raises_call_result_49538 = invoke(stypy.reporting.localization.Localization(__file__, 459, 12), assert_raises_49529, *[Exception_49530, f_49531, float_49532, x_49533, y_49534], **kwargs_49537)
        
        
        # Call to assert_raises(...): (line 460)
        # Processing the call arguments (line 460)
        # Getting the type of 'Exception' (line 460)
        Exception_49540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 26), 'Exception', False)
        # Getting the type of 'f' (line 460)
        f_49541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 37), 'f', False)
        float_49542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 40), 'float')
        # Getting the type of 'x' (line 460)
        x_49543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 45), 'x', False)
        # Getting the type of 'y' (line 460)
        y_49544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 48), 'y', False)
        # Processing the call keyword arguments (line 460)
        int_49545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 57), 'int')
        keyword_49546 = int_49545
        kwargs_49547 = {'lower': keyword_49546}
        # Getting the type of 'assert_raises' (line 460)
        assert_raises_49539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 460)
        assert_raises_call_result_49548 = invoke(stypy.reporting.localization.Localization(__file__, 460, 12), assert_raises_49539, *[Exception_49540, f_49541, float_49542, x_49543, y_49544], **kwargs_49547)
        
        
        # Call to assert_raises(...): (line 461)
        # Processing the call arguments (line 461)
        # Getting the type of 'Exception' (line 461)
        Exception_49550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 26), 'Exception', False)
        # Getting the type of 'f' (line 461)
        f_49551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 37), 'f', False)
        float_49552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 40), 'float')
        # Getting the type of 'x' (line 461)
        x_49553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 45), 'x', False)
        # Getting the type of 'y' (line 461)
        y_49554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 48), 'y', False)
        # Processing the call keyword arguments (line 461)
        
        # Call to zeros(...): (line 462)
        # Processing the call arguments (line 462)
        
        # Obtaining an instance of the builtin type 'tuple' (line 462)
        tuple_49557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, 38), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 462)
        # Adding element type (line 462)
        int_49558 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 462, 38), tuple_49557, int_49558)
        # Adding element type (line 462)
        int_49559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 462, 38), tuple_49557, int_49559)
        
        str_49560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, 45), 'str', 'd')
        str_49561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 462, 50), 'str', 'F')
        # Processing the call keyword arguments (line 462)
        kwargs_49562 = {}
        # Getting the type of 'np' (line 462)
        np_49555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 28), 'np', False)
        # Obtaining the member 'zeros' of a type (line 462)
        zeros_49556 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 28), np_49555, 'zeros')
        # Calling zeros(args, kwargs) (line 462)
        zeros_call_result_49563 = invoke(stypy.reporting.localization.Localization(__file__, 462, 28), zeros_49556, *[tuple_49557, str_49560, str_49561], **kwargs_49562)
        
        keyword_49564 = zeros_call_result_49563
        kwargs_49565 = {'a': keyword_49564}
        # Getting the type of 'assert_raises' (line 461)
        assert_raises_49549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 461)
        assert_raises_call_result_49566 = invoke(stypy.reporting.localization.Localization(__file__, 461, 12), assert_raises_49549, *[Exception_49550, f_49551, float_49552, x_49553, y_49554], **kwargs_49565)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_her2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_her2' in the type store
        # Getting the type of 'stypy_return_type' (line 414)
        stypy_return_type_49567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_49567)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_her2'
        return stypy_return_type_49567


    @norecursion
    def test_gbmv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gbmv'
        module_type_store = module_type_store.open_function_context('test_gbmv', 464, 4, False)
        # Assigning a type to the variable 'self' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_gbmv')
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_gbmv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_gbmv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gbmv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gbmv(...)' code ##################

        
        # Call to seed(...): (line 465)
        # Processing the call arguments (line 465)
        int_49569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 13), 'int')
        # Processing the call keyword arguments (line 465)
        kwargs_49570 = {}
        # Getting the type of 'seed' (line 465)
        seed_49568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 465)
        seed_call_result_49571 = invoke(stypy.reporting.localization.Localization(__file__, 465, 8), seed_49568, *[int_49569], **kwargs_49570)
        
        
        
        # Call to enumerate(...): (line 466)
        # Processing the call arguments (line 466)
        # Getting the type of 'DTYPES' (line 466)
        DTYPES_49573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 36), 'DTYPES', False)
        # Processing the call keyword arguments (line 466)
        kwargs_49574 = {}
        # Getting the type of 'enumerate' (line 466)
        enumerate_49572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 466)
        enumerate_call_result_49575 = invoke(stypy.reporting.localization.Localization(__file__, 466, 26), enumerate_49572, *[DTYPES_49573], **kwargs_49574)
        
        # Testing the type of a for loop iterable (line 466)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 466, 8), enumerate_call_result_49575)
        # Getting the type of the for loop variable (line 466)
        for_loop_var_49576 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 466, 8), enumerate_call_result_49575)
        # Assigning a type to the variable 'ind' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 466, 8), for_loop_var_49576))
        # Assigning a type to the variable 'dtype' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 466, 8), for_loop_var_49576))
        # SSA begins for a for statement (line 466)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 467):
        
        # Assigning a Num to a Name (line 467):
        int_49577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 16), 'int')
        # Assigning a type to the variable 'n' (line 467)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 467, 12), 'n', int_49577)
        
        # Assigning a Num to a Name (line 468):
        
        # Assigning a Num to a Name (line 468):
        int_49578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 16), 'int')
        # Assigning a type to the variable 'm' (line 468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 12), 'm', int_49578)
        
        # Assigning a Num to a Name (line 469):
        
        # Assigning a Num to a Name (line 469):
        int_49579 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 17), 'int')
        # Assigning a type to the variable 'kl' (line 469)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 469, 12), 'kl', int_49579)
        
        # Assigning a Num to a Name (line 470):
        
        # Assigning a Num to a Name (line 470):
        int_49580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 470, 17), 'int')
        # Assigning a type to the variable 'ku' (line 470)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 12), 'ku', int_49580)
        
        # Assigning a Call to a Name (line 472):
        
        # Assigning a Call to a Name (line 472):
        
        # Call to toeplitz(...): (line 472)
        # Processing the call arguments (line 472)
        
        # Call to append(...): (line 472)
        # Processing the call arguments (line 472)
        
        # Call to rand(...): (line 472)
        # Processing the call arguments (line 472)
        # Getting the type of 'kl' (line 472)
        kl_49584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 37), 'kl', False)
        int_49585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 40), 'int')
        # Applying the binary operator '+' (line 472)
        result_add_49586 = python_operator(stypy.reporting.localization.Localization(__file__, 472, 37), '+', kl_49584, int_49585)
        
        # Processing the call keyword arguments (line 472)
        kwargs_49587 = {}
        # Getting the type of 'rand' (line 472)
        rand_49583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 32), 'rand', False)
        # Calling rand(args, kwargs) (line 472)
        rand_call_result_49588 = invoke(stypy.reporting.localization.Localization(__file__, 472, 32), rand_49583, *[result_add_49586], **kwargs_49587)
        
        
        # Call to zeros(...): (line 472)
        # Processing the call arguments (line 472)
        # Getting the type of 'm' (line 472)
        m_49590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 50), 'm', False)
        # Getting the type of 'kl' (line 472)
        kl_49591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 52), 'kl', False)
        # Applying the binary operator '-' (line 472)
        result_sub_49592 = python_operator(stypy.reporting.localization.Localization(__file__, 472, 50), '-', m_49590, kl_49591)
        
        int_49593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 55), 'int')
        # Applying the binary operator '-' (line 472)
        result_sub_49594 = python_operator(stypy.reporting.localization.Localization(__file__, 472, 54), '-', result_sub_49592, int_49593)
        
        # Processing the call keyword arguments (line 472)
        kwargs_49595 = {}
        # Getting the type of 'zeros' (line 472)
        zeros_49589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 44), 'zeros', False)
        # Calling zeros(args, kwargs) (line 472)
        zeros_call_result_49596 = invoke(stypy.reporting.localization.Localization(__file__, 472, 44), zeros_49589, *[result_sub_49594], **kwargs_49595)
        
        # Processing the call keyword arguments (line 472)
        kwargs_49597 = {}
        # Getting the type of 'append' (line 472)
        append_49582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 25), 'append', False)
        # Calling append(args, kwargs) (line 472)
        append_call_result_49598 = invoke(stypy.reporting.localization.Localization(__file__, 472, 25), append_49582, *[rand_call_result_49588, zeros_call_result_49596], **kwargs_49597)
        
        
        # Call to append(...): (line 473)
        # Processing the call arguments (line 473)
        
        # Call to rand(...): (line 473)
        # Processing the call arguments (line 473)
        # Getting the type of 'ku' (line 473)
        ku_49601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 37), 'ku', False)
        int_49602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 40), 'int')
        # Applying the binary operator '+' (line 473)
        result_add_49603 = python_operator(stypy.reporting.localization.Localization(__file__, 473, 37), '+', ku_49601, int_49602)
        
        # Processing the call keyword arguments (line 473)
        kwargs_49604 = {}
        # Getting the type of 'rand' (line 473)
        rand_49600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 32), 'rand', False)
        # Calling rand(args, kwargs) (line 473)
        rand_call_result_49605 = invoke(stypy.reporting.localization.Localization(__file__, 473, 32), rand_49600, *[result_add_49603], **kwargs_49604)
        
        
        # Call to zeros(...): (line 473)
        # Processing the call arguments (line 473)
        # Getting the type of 'n' (line 473)
        n_49607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 50), 'n', False)
        # Getting the type of 'ku' (line 473)
        ku_49608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 52), 'ku', False)
        # Applying the binary operator '-' (line 473)
        result_sub_49609 = python_operator(stypy.reporting.localization.Localization(__file__, 473, 50), '-', n_49607, ku_49608)
        
        int_49610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 55), 'int')
        # Applying the binary operator '-' (line 473)
        result_sub_49611 = python_operator(stypy.reporting.localization.Localization(__file__, 473, 54), '-', result_sub_49609, int_49610)
        
        # Processing the call keyword arguments (line 473)
        kwargs_49612 = {}
        # Getting the type of 'zeros' (line 473)
        zeros_49606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 44), 'zeros', False)
        # Calling zeros(args, kwargs) (line 473)
        zeros_call_result_49613 = invoke(stypy.reporting.localization.Localization(__file__, 473, 44), zeros_49606, *[result_sub_49611], **kwargs_49612)
        
        # Processing the call keyword arguments (line 473)
        kwargs_49614 = {}
        # Getting the type of 'append' (line 473)
        append_49599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 25), 'append', False)
        # Calling append(args, kwargs) (line 473)
        append_call_result_49615 = invoke(stypy.reporting.localization.Localization(__file__, 473, 25), append_49599, *[rand_call_result_49605, zeros_call_result_49613], **kwargs_49614)
        
        # Processing the call keyword arguments (line 472)
        kwargs_49616 = {}
        # Getting the type of 'toeplitz' (line 472)
        toeplitz_49581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'toeplitz', False)
        # Calling toeplitz(args, kwargs) (line 472)
        toeplitz_call_result_49617 = invoke(stypy.reporting.localization.Localization(__file__, 472, 16), toeplitz_49581, *[append_call_result_49598, append_call_result_49615], **kwargs_49616)
        
        # Assigning a type to the variable 'A' (line 472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), 'A', toeplitz_call_result_49617)
        
        # Assigning a Call to a Name (line 474):
        
        # Assigning a Call to a Name (line 474):
        
        # Call to astype(...): (line 474)
        # Processing the call arguments (line 474)
        # Getting the type of 'dtype' (line 474)
        dtype_49620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 25), 'dtype', False)
        # Processing the call keyword arguments (line 474)
        kwargs_49621 = {}
        # Getting the type of 'A' (line 474)
        A_49618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 16), 'A', False)
        # Obtaining the member 'astype' of a type (line 474)
        astype_49619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 16), A_49618, 'astype')
        # Calling astype(args, kwargs) (line 474)
        astype_call_result_49622 = invoke(stypy.reporting.localization.Localization(__file__, 474, 16), astype_49619, *[dtype_49620], **kwargs_49621)
        
        # Assigning a type to the variable 'A' (line 474)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 474, 12), 'A', astype_call_result_49622)
        
        # Assigning a Call to a Name (line 475):
        
        # Assigning a Call to a Name (line 475):
        
        # Call to zeros(...): (line 475)
        # Processing the call arguments (line 475)
        
        # Obtaining an instance of the builtin type 'tuple' (line 475)
        tuple_49624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 475)
        # Adding element type (line 475)
        # Getting the type of 'kl' (line 475)
        kl_49625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 24), 'kl', False)
        # Getting the type of 'ku' (line 475)
        ku_49626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 27), 'ku', False)
        # Applying the binary operator '+' (line 475)
        result_add_49627 = python_operator(stypy.reporting.localization.Localization(__file__, 475, 24), '+', kl_49625, ku_49626)
        
        int_49628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 475, 30), 'int')
        # Applying the binary operator '+' (line 475)
        result_add_49629 = python_operator(stypy.reporting.localization.Localization(__file__, 475, 29), '+', result_add_49627, int_49628)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 475, 24), tuple_49624, result_add_49629)
        # Adding element type (line 475)
        # Getting the type of 'n' (line 475)
        n_49630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 33), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 475, 24), tuple_49624, n_49630)
        
        # Processing the call keyword arguments (line 475)
        # Getting the type of 'dtype' (line 475)
        dtype_49631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 43), 'dtype', False)
        keyword_49632 = dtype_49631
        kwargs_49633 = {'dtype': keyword_49632}
        # Getting the type of 'zeros' (line 475)
        zeros_49623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 475)
        zeros_call_result_49634 = invoke(stypy.reporting.localization.Localization(__file__, 475, 17), zeros_49623, *[tuple_49624], **kwargs_49633)
        
        # Assigning a type to the variable 'Ab' (line 475)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 12), 'Ab', zeros_call_result_49634)
        
        # Assigning a Subscript to a Subscript (line 478):
        
        # Assigning a Subscript to a Subscript (line 478):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 478)
        tuple_49635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 478)
        # Adding element type (line 478)
        int_49636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 26), tuple_49635, int_49636)
        # Adding element type (line 478)
        int_49637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 26), tuple_49635, int_49637)
        
        # Getting the type of 'A' (line 478)
        A_49638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 24), 'A')
        # Obtaining the member '__getitem__' of a type (line 478)
        getitem___49639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 24), A_49638, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 478)
        subscript_call_result_49640 = invoke(stypy.reporting.localization.Localization(__file__, 478, 24), getitem___49639, tuple_49635)
        
        # Getting the type of 'Ab' (line 478)
        Ab_49641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 12), 'Ab')
        int_49642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 15), 'int')
        int_49643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 19), 'int')
        slice_49644 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 478, 12), None, int_49643, None)
        # Storing an element on a container (line 478)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 478, 12), Ab_49641, ((int_49642, slice_49644), subscript_call_result_49640))
        
        # Assigning a Subscript to a Subscript (line 479):
        
        # Assigning a Subscript to a Subscript (line 479):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 479)
        tuple_49645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 479)
        # Adding element type (line 479)
        int_49646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 479, 27), tuple_49645, int_49646)
        # Adding element type (line 479)
        int_49647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 479, 27), tuple_49645, int_49647)
        
        # Getting the type of 'A' (line 479)
        A_49648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 25), 'A')
        # Obtaining the member '__getitem__' of a type (line 479)
        getitem___49649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 25), A_49648, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 479)
        subscript_call_result_49650 = invoke(stypy.reporting.localization.Localization(__file__, 479, 25), getitem___49649, tuple_49645)
        
        # Getting the type of 'Ab' (line 479)
        Ab_49651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 12), 'Ab')
        int_49652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 15), 'int')
        int_49653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 18), 'int')
        int_49654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 20), 'int')
        slice_49655 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 479, 12), int_49653, int_49654, None)
        # Storing an element on a container (line 479)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 479, 12), Ab_49651, ((int_49652, slice_49655), subscript_call_result_49650))
        
        # Assigning a Subscript to a Subscript (line 480):
        
        # Assigning a Subscript to a Subscript (line 480):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 480)
        tuple_49656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 480)
        # Adding element type (line 480)
        int_49657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 27), tuple_49656, int_49657)
        # Adding element type (line 480)
        int_49658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 27), tuple_49656, int_49658)
        
        # Getting the type of 'A' (line 480)
        A_49659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 25), 'A')
        # Obtaining the member '__getitem__' of a type (line 480)
        getitem___49660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 25), A_49659, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 480)
        subscript_call_result_49661 = invoke(stypy.reporting.localization.Localization(__file__, 480, 25), getitem___49660, tuple_49656)
        
        # Getting the type of 'Ab' (line 480)
        Ab_49662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 12), 'Ab')
        int_49663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 15), 'int')
        int_49664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 18), 'int')
        int_49665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 20), 'int')
        slice_49666 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 480, 12), int_49664, int_49665, None)
        # Storing an element on a container (line 480)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 12), Ab_49662, ((int_49663, slice_49666), subscript_call_result_49661))
        
        # Assigning a Subscript to a Subscript (line 481):
        
        # Assigning a Subscript to a Subscript (line 481):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 481)
        tuple_49667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 481)
        # Adding element type (line 481)
        int_49668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 26), tuple_49667, int_49668)
        # Adding element type (line 481)
        int_49669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 26), tuple_49667, int_49669)
        
        # Getting the type of 'A' (line 481)
        A_49670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 24), 'A')
        # Obtaining the member '__getitem__' of a type (line 481)
        getitem___49671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 24), A_49670, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 481)
        subscript_call_result_49672 = invoke(stypy.reporting.localization.Localization(__file__, 481, 24), getitem___49671, tuple_49667)
        
        # Getting the type of 'Ab' (line 481)
        Ab_49673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 12), 'Ab')
        int_49674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 15), 'int')
        int_49675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 19), 'int')
        slice_49676 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 481, 12), None, int_49675, None)
        # Storing an element on a container (line 481)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 12), Ab_49673, ((int_49674, slice_49676), subscript_call_result_49672))
        
        # Assigning a Call to a Name (line 483):
        
        # Assigning a Call to a Name (line 483):
        
        # Call to astype(...): (line 483)
        # Processing the call arguments (line 483)
        # Getting the type of 'dtype' (line 483)
        dtype_49682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 31), 'dtype', False)
        # Processing the call keyword arguments (line 483)
        kwargs_49683 = {}
        
        # Call to rand(...): (line 483)
        # Processing the call arguments (line 483)
        # Getting the type of 'n' (line 483)
        n_49678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 21), 'n', False)
        # Processing the call keyword arguments (line 483)
        kwargs_49679 = {}
        # Getting the type of 'rand' (line 483)
        rand_49677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 483)
        rand_call_result_49680 = invoke(stypy.reporting.localization.Localization(__file__, 483, 16), rand_49677, *[n_49678], **kwargs_49679)
        
        # Obtaining the member 'astype' of a type (line 483)
        astype_49681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 16), rand_call_result_49680, 'astype')
        # Calling astype(args, kwargs) (line 483)
        astype_call_result_49684 = invoke(stypy.reporting.localization.Localization(__file__, 483, 16), astype_49681, *[dtype_49682], **kwargs_49683)
        
        # Assigning a type to the variable 'x' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 12), 'x', astype_call_result_49684)
        
        # Assigning a Call to a Name (line 484):
        
        # Assigning a Call to a Name (line 484):
        
        # Call to astype(...): (line 484)
        # Processing the call arguments (line 484)
        # Getting the type of 'dtype' (line 484)
        dtype_49690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 31), 'dtype', False)
        # Processing the call keyword arguments (line 484)
        kwargs_49691 = {}
        
        # Call to rand(...): (line 484)
        # Processing the call arguments (line 484)
        # Getting the type of 'm' (line 484)
        m_49686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 21), 'm', False)
        # Processing the call keyword arguments (line 484)
        kwargs_49687 = {}
        # Getting the type of 'rand' (line 484)
        rand_49685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 484)
        rand_call_result_49688 = invoke(stypy.reporting.localization.Localization(__file__, 484, 16), rand_49685, *[m_49686], **kwargs_49687)
        
        # Obtaining the member 'astype' of a type (line 484)
        astype_49689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 16), rand_call_result_49688, 'astype')
        # Calling astype(args, kwargs) (line 484)
        astype_call_result_49692 = invoke(stypy.reporting.localization.Localization(__file__, 484, 16), astype_49689, *[dtype_49690], **kwargs_49691)
        
        # Assigning a type to the variable 'y' (line 484)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 12), 'y', astype_call_result_49692)
        
        # Assigning a Tuple to a Tuple (line 485):
        
        # Assigning a Call to a Name (line 485):
        
        # Call to dtype(...): (line 485)
        # Processing the call arguments (line 485)
        int_49694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 32), 'int')
        # Processing the call keyword arguments (line 485)
        kwargs_49695 = {}
        # Getting the type of 'dtype' (line 485)
        dtype_49693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 26), 'dtype', False)
        # Calling dtype(args, kwargs) (line 485)
        dtype_call_result_49696 = invoke(stypy.reporting.localization.Localization(__file__, 485, 26), dtype_49693, *[int_49694], **kwargs_49695)
        
        # Assigning a type to the variable 'tuple_assignment_46669' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 12), 'tuple_assignment_46669', dtype_call_result_49696)
        
        # Assigning a Call to a Name (line 485):
        
        # Call to dtype(...): (line 485)
        # Processing the call arguments (line 485)
        int_49698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 42), 'int')
        # Processing the call keyword arguments (line 485)
        kwargs_49699 = {}
        # Getting the type of 'dtype' (line 485)
        dtype_49697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 36), 'dtype', False)
        # Calling dtype(args, kwargs) (line 485)
        dtype_call_result_49700 = invoke(stypy.reporting.localization.Localization(__file__, 485, 36), dtype_49697, *[int_49698], **kwargs_49699)
        
        # Assigning a type to the variable 'tuple_assignment_46670' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 12), 'tuple_assignment_46670', dtype_call_result_49700)
        
        # Assigning a Name to a Name (line 485):
        # Getting the type of 'tuple_assignment_46669' (line 485)
        tuple_assignment_46669_49701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 12), 'tuple_assignment_46669')
        # Assigning a type to the variable 'alpha' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 12), 'alpha', tuple_assignment_46669_49701)
        
        # Assigning a Name to a Name (line 485):
        # Getting the type of 'tuple_assignment_46670' (line 485)
        tuple_assignment_46670_49702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 12), 'tuple_assignment_46670')
        # Assigning a type to the variable 'beta' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 19), 'beta', tuple_assignment_46670_49702)
        
        # Assigning a Call to a Tuple (line 487):
        
        # Assigning a Subscript to a Name (line 487):
        
        # Obtaining the type of the subscript
        int_49703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 12), 'int')
        
        # Call to get_blas_funcs(...): (line 487)
        # Processing the call arguments (line 487)
        
        # Obtaining an instance of the builtin type 'tuple' (line 487)
        tuple_49705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 487)
        # Adding element type (line 487)
        str_49706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 487, 36), 'str', 'gbmv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 487, 36), tuple_49705, str_49706)
        
        # Processing the call keyword arguments (line 487)
        # Getting the type of 'dtype' (line 487)
        dtype_49707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 52), 'dtype', False)
        keyword_49708 = dtype_49707
        kwargs_49709 = {'dtype': keyword_49708}
        # Getting the type of 'get_blas_funcs' (line 487)
        get_blas_funcs_49704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 20), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 487)
        get_blas_funcs_call_result_49710 = invoke(stypy.reporting.localization.Localization(__file__, 487, 20), get_blas_funcs_49704, *[tuple_49705], **kwargs_49709)
        
        # Obtaining the member '__getitem__' of a type (line 487)
        getitem___49711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 12), get_blas_funcs_call_result_49710, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 487)
        subscript_call_result_49712 = invoke(stypy.reporting.localization.Localization(__file__, 487, 12), getitem___49711, int_49703)
        
        # Assigning a type to the variable 'tuple_var_assignment_46671' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 12), 'tuple_var_assignment_46671', subscript_call_result_49712)
        
        # Assigning a Name to a Name (line 487):
        # Getting the type of 'tuple_var_assignment_46671' (line 487)
        tuple_var_assignment_46671_49713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 12), 'tuple_var_assignment_46671')
        # Assigning a type to the variable 'func' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 12), 'func', tuple_var_assignment_46671_49713)
        
        # Assigning a Call to a Name (line 488):
        
        # Assigning a Call to a Name (line 488):
        
        # Call to func(...): (line 488)
        # Processing the call keyword arguments (line 488)
        # Getting the type of 'm' (line 488)
        m_49715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 24), 'm', False)
        keyword_49716 = m_49715
        # Getting the type of 'n' (line 488)
        n_49717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 29), 'n', False)
        keyword_49718 = n_49717
        # Getting the type of 'ku' (line 488)
        ku_49719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 35), 'ku', False)
        keyword_49720 = ku_49719
        # Getting the type of 'kl' (line 488)
        kl_49721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 42), 'kl', False)
        keyword_49722 = kl_49721
        # Getting the type of 'alpha' (line 488)
        alpha_49723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 52), 'alpha', False)
        keyword_49724 = alpha_49723
        # Getting the type of 'Ab' (line 488)
        Ab_49725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 61), 'Ab', False)
        keyword_49726 = Ab_49725
        # Getting the type of 'x' (line 489)
        x_49727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 24), 'x', False)
        keyword_49728 = x_49727
        # Getting the type of 'y' (line 489)
        y_49729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 29), 'y', False)
        keyword_49730 = y_49729
        # Getting the type of 'beta' (line 489)
        beta_49731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 37), 'beta', False)
        keyword_49732 = beta_49731
        kwargs_49733 = {'a': keyword_49726, 'm': keyword_49716, 'kl': keyword_49722, 'beta': keyword_49732, 'ku': keyword_49720, 'x': keyword_49728, 'y': keyword_49730, 'alpha': keyword_49724, 'n': keyword_49718}
        # Getting the type of 'func' (line 488)
        func_49714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 17), 'func', False)
        # Calling func(args, kwargs) (line 488)
        func_call_result_49734 = invoke(stypy.reporting.localization.Localization(__file__, 488, 17), func_49714, *[], **kwargs_49733)
        
        # Assigning a type to the variable 'y1' (line 488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 12), 'y1', func_call_result_49734)
        
        # Assigning a BinOp to a Name (line 490):
        
        # Assigning a BinOp to a Name (line 490):
        # Getting the type of 'alpha' (line 490)
        alpha_49735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 17), 'alpha')
        
        # Call to dot(...): (line 490)
        # Processing the call arguments (line 490)
        # Getting the type of 'x' (line 490)
        x_49738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 31), 'x', False)
        # Processing the call keyword arguments (line 490)
        kwargs_49739 = {}
        # Getting the type of 'A' (line 490)
        A_49736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 25), 'A', False)
        # Obtaining the member 'dot' of a type (line 490)
        dot_49737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 25), A_49736, 'dot')
        # Calling dot(args, kwargs) (line 490)
        dot_call_result_49740 = invoke(stypy.reporting.localization.Localization(__file__, 490, 25), dot_49737, *[x_49738], **kwargs_49739)
        
        # Applying the binary operator '*' (line 490)
        result_mul_49741 = python_operator(stypy.reporting.localization.Localization(__file__, 490, 17), '*', alpha_49735, dot_call_result_49740)
        
        # Getting the type of 'beta' (line 490)
        beta_49742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 36), 'beta')
        # Getting the type of 'y' (line 490)
        y_49743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 43), 'y')
        # Applying the binary operator '*' (line 490)
        result_mul_49744 = python_operator(stypy.reporting.localization.Localization(__file__, 490, 36), '*', beta_49742, y_49743)
        
        # Applying the binary operator '+' (line 490)
        result_add_49745 = python_operator(stypy.reporting.localization.Localization(__file__, 490, 17), '+', result_mul_49741, result_mul_49744)
        
        # Assigning a type to the variable 'y2' (line 490)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 12), 'y2', result_add_49745)
        
        # Call to assert_array_almost_equal(...): (line 491)
        # Processing the call arguments (line 491)
        # Getting the type of 'y1' (line 491)
        y1_49747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 38), 'y1', False)
        # Getting the type of 'y2' (line 491)
        y2_49748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 42), 'y2', False)
        # Processing the call keyword arguments (line 491)
        kwargs_49749 = {}
        # Getting the type of 'assert_array_almost_equal' (line 491)
        assert_array_almost_equal_49746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 491)
        assert_array_almost_equal_call_result_49750 = invoke(stypy.reporting.localization.Localization(__file__, 491, 12), assert_array_almost_equal_49746, *[y1_49747, y2_49748], **kwargs_49749)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_gbmv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gbmv' in the type store
        # Getting the type of 'stypy_return_type' (line 464)
        stypy_return_type_49751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_49751)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gbmv'
        return stypy_return_type_49751


    @norecursion
    def test_sbmv_hbmv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_sbmv_hbmv'
        module_type_store = module_type_store.open_function_context('test_sbmv_hbmv', 493, 4, False)
        # Assigning a type to the variable 'self' (line 494)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_sbmv_hbmv')
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_sbmv_hbmv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_sbmv_hbmv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_sbmv_hbmv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_sbmv_hbmv(...)' code ##################

        
        # Call to seed(...): (line 494)
        # Processing the call arguments (line 494)
        int_49753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 13), 'int')
        # Processing the call keyword arguments (line 494)
        kwargs_49754 = {}
        # Getting the type of 'seed' (line 494)
        seed_49752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 494)
        seed_call_result_49755 = invoke(stypy.reporting.localization.Localization(__file__, 494, 8), seed_49752, *[int_49753], **kwargs_49754)
        
        
        
        # Call to enumerate(...): (line 495)
        # Processing the call arguments (line 495)
        # Getting the type of 'DTYPES' (line 495)
        DTYPES_49757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 36), 'DTYPES', False)
        # Processing the call keyword arguments (line 495)
        kwargs_49758 = {}
        # Getting the type of 'enumerate' (line 495)
        enumerate_49756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 495)
        enumerate_call_result_49759 = invoke(stypy.reporting.localization.Localization(__file__, 495, 26), enumerate_49756, *[DTYPES_49757], **kwargs_49758)
        
        # Testing the type of a for loop iterable (line 495)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 495, 8), enumerate_call_result_49759)
        # Getting the type of the for loop variable (line 495)
        for_loop_var_49760 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 495, 8), enumerate_call_result_49759)
        # Assigning a type to the variable 'ind' (line 495)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 495, 8), for_loop_var_49760))
        # Assigning a type to the variable 'dtype' (line 495)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 495, 8), for_loop_var_49760))
        # SSA begins for a for statement (line 495)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 496):
        
        # Assigning a Num to a Name (line 496):
        int_49761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 16), 'int')
        # Assigning a type to the variable 'n' (line 496)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 496, 12), 'n', int_49761)
        
        # Assigning a Num to a Name (line 497):
        
        # Assigning a Num to a Name (line 497):
        int_49762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 16), 'int')
        # Assigning a type to the variable 'k' (line 497)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 497, 12), 'k', int_49762)
        
        # Assigning a Call to a Name (line 498):
        
        # Assigning a Call to a Name (line 498):
        
        # Call to zeros(...): (line 498)
        # Processing the call arguments (line 498)
        
        # Obtaining an instance of the builtin type 'tuple' (line 498)
        tuple_49764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 498)
        # Adding element type (line 498)
        # Getting the type of 'n' (line 498)
        n_49765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 23), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 498, 23), tuple_49764, n_49765)
        # Adding element type (line 498)
        # Getting the type of 'n' (line 498)
        n_49766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 26), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 498, 23), tuple_49764, n_49766)
        
        # Processing the call keyword arguments (line 498)
        # Getting the type of 'dtype' (line 498)
        dtype_49767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 36), 'dtype', False)
        keyword_49768 = dtype_49767
        kwargs_49769 = {'dtype': keyword_49768}
        # Getting the type of 'zeros' (line 498)
        zeros_49763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 16), 'zeros', False)
        # Calling zeros(args, kwargs) (line 498)
        zeros_call_result_49770 = invoke(stypy.reporting.localization.Localization(__file__, 498, 16), zeros_49763, *[tuple_49764], **kwargs_49769)
        
        # Assigning a type to the variable 'A' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 12), 'A', zeros_call_result_49770)
        
        # Assigning a Call to a Name (line 499):
        
        # Assigning a Call to a Name (line 499):
        
        # Call to zeros(...): (line 499)
        # Processing the call arguments (line 499)
        
        # Obtaining an instance of the builtin type 'tuple' (line 499)
        tuple_49772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 499)
        # Adding element type (line 499)
        # Getting the type of 'k' (line 499)
        k_49773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 24), 'k', False)
        int_49774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 26), 'int')
        # Applying the binary operator '+' (line 499)
        result_add_49775 = python_operator(stypy.reporting.localization.Localization(__file__, 499, 24), '+', k_49773, int_49774)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 499, 24), tuple_49772, result_add_49775)
        # Adding element type (line 499)
        # Getting the type of 'n' (line 499)
        n_49776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 29), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 499, 24), tuple_49772, n_49776)
        
        # Processing the call keyword arguments (line 499)
        # Getting the type of 'dtype' (line 499)
        dtype_49777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 39), 'dtype', False)
        keyword_49778 = dtype_49777
        kwargs_49779 = {'dtype': keyword_49778}
        # Getting the type of 'zeros' (line 499)
        zeros_49771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 499)
        zeros_call_result_49780 = invoke(stypy.reporting.localization.Localization(__file__, 499, 17), zeros_49771, *[tuple_49772], **kwargs_49779)
        
        # Assigning a type to the variable 'Ab' (line 499)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 12), 'Ab', zeros_call_result_49780)
        
        # Assigning a Call to a Subscript (line 502):
        
        # Assigning a Call to a Subscript (line 502):
        
        # Call to rand(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'n' (line 502)
        n_49782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 43), 'n', False)
        # Processing the call keyword arguments (line 502)
        kwargs_49783 = {}
        # Getting the type of 'rand' (line 502)
        rand_49781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 38), 'rand', False)
        # Calling rand(args, kwargs) (line 502)
        rand_call_result_49784 = invoke(stypy.reporting.localization.Localization(__file__, 502, 38), rand_49781, *[n_49782], **kwargs_49783)
        
        # Getting the type of 'A' (line 502)
        A_49785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 12), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 502)
        tuple_49786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 502, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 502)
        # Adding element type (line 502)
        
        # Call to arange(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'n' (line 502)
        n_49788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 21), 'n', False)
        # Processing the call keyword arguments (line 502)
        kwargs_49789 = {}
        # Getting the type of 'arange' (line 502)
        arange_49787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 14), 'arange', False)
        # Calling arange(args, kwargs) (line 502)
        arange_call_result_49790 = invoke(stypy.reporting.localization.Localization(__file__, 502, 14), arange_49787, *[n_49788], **kwargs_49789)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 502, 14), tuple_49786, arange_call_result_49790)
        # Adding element type (line 502)
        
        # Call to arange(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'n' (line 502)
        n_49792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 32), 'n', False)
        # Processing the call keyword arguments (line 502)
        kwargs_49793 = {}
        # Getting the type of 'arange' (line 502)
        arange_49791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 25), 'arange', False)
        # Calling arange(args, kwargs) (line 502)
        arange_call_result_49794 = invoke(stypy.reporting.localization.Localization(__file__, 502, 25), arange_49791, *[n_49792], **kwargs_49793)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 502, 14), tuple_49786, arange_call_result_49794)
        
        # Storing an element on a container (line 502)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 502, 12), A_49785, (tuple_49786, rand_call_result_49784))
        
        
        # Call to range(...): (line 503)
        # Processing the call arguments (line 503)
        int_49796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 30), 'int')
        # Getting the type of 'k' (line 503)
        k_49797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 33), 'k', False)
        int_49798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 35), 'int')
        # Applying the binary operator '+' (line 503)
        result_add_49799 = python_operator(stypy.reporting.localization.Localization(__file__, 503, 33), '+', k_49797, int_49798)
        
        # Processing the call keyword arguments (line 503)
        kwargs_49800 = {}
        # Getting the type of 'range' (line 503)
        range_49795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 24), 'range', False)
        # Calling range(args, kwargs) (line 503)
        range_call_result_49801 = invoke(stypy.reporting.localization.Localization(__file__, 503, 24), range_49795, *[int_49796, result_add_49799], **kwargs_49800)
        
        # Testing the type of a for loop iterable (line 503)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 503, 12), range_call_result_49801)
        # Getting the type of the for loop variable (line 503)
        for_loop_var_49802 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 503, 12), range_call_result_49801)
        # Assigning a type to the variable 'ind2' (line 503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 503, 12), 'ind2', for_loop_var_49802)
        # SSA begins for a for statement (line 503)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 504):
        
        # Assigning a Call to a Name (line 504):
        
        # Call to rand(...): (line 504)
        # Processing the call arguments (line 504)
        # Getting the type of 'n' (line 504)
        n_49804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 28), 'n', False)
        # Getting the type of 'ind2' (line 504)
        ind2_49805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 30), 'ind2', False)
        # Applying the binary operator '-' (line 504)
        result_sub_49806 = python_operator(stypy.reporting.localization.Localization(__file__, 504, 28), '-', n_49804, ind2_49805)
        
        # Processing the call keyword arguments (line 504)
        kwargs_49807 = {}
        # Getting the type of 'rand' (line 504)
        rand_49803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 23), 'rand', False)
        # Calling rand(args, kwargs) (line 504)
        rand_call_result_49808 = invoke(stypy.reporting.localization.Localization(__file__, 504, 23), rand_49803, *[result_sub_49806], **kwargs_49807)
        
        # Assigning a type to the variable 'temp' (line 504)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 504, 16), 'temp', rand_call_result_49808)
        
        # Assigning a Name to a Subscript (line 505):
        
        # Assigning a Name to a Subscript (line 505):
        # Getting the type of 'temp' (line 505)
        temp_49809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 53), 'temp')
        # Getting the type of 'A' (line 505)
        A_49810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 16), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 505)
        tuple_49811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 505, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 505)
        # Adding element type (line 505)
        
        # Call to arange(...): (line 505)
        # Processing the call arguments (line 505)
        # Getting the type of 'n' (line 505)
        n_49813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 25), 'n', False)
        # Getting the type of 'ind2' (line 505)
        ind2_49814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 27), 'ind2', False)
        # Applying the binary operator '-' (line 505)
        result_sub_49815 = python_operator(stypy.reporting.localization.Localization(__file__, 505, 25), '-', n_49813, ind2_49814)
        
        # Processing the call keyword arguments (line 505)
        kwargs_49816 = {}
        # Getting the type of 'arange' (line 505)
        arange_49812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 18), 'arange', False)
        # Calling arange(args, kwargs) (line 505)
        arange_call_result_49817 = invoke(stypy.reporting.localization.Localization(__file__, 505, 18), arange_49812, *[result_sub_49815], **kwargs_49816)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 18), tuple_49811, arange_call_result_49817)
        # Adding element type (line 505)
        
        # Call to arange(...): (line 505)
        # Processing the call arguments (line 505)
        # Getting the type of 'ind2' (line 505)
        ind2_49819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 41), 'ind2', False)
        # Getting the type of 'n' (line 505)
        n_49820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 47), 'n', False)
        # Processing the call keyword arguments (line 505)
        kwargs_49821 = {}
        # Getting the type of 'arange' (line 505)
        arange_49818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 34), 'arange', False)
        # Calling arange(args, kwargs) (line 505)
        arange_call_result_49822 = invoke(stypy.reporting.localization.Localization(__file__, 505, 34), arange_49818, *[ind2_49819, n_49820], **kwargs_49821)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 18), tuple_49811, arange_call_result_49822)
        
        # Storing an element on a container (line 505)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 505, 16), A_49810, (tuple_49811, temp_49809))
        
        # Assigning a Name to a Subscript (line 506):
        
        # Assigning a Name to a Subscript (line 506):
        # Getting the type of 'temp' (line 506)
        temp_49823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 37), 'temp')
        # Getting the type of 'Ab' (line 506)
        Ab_49824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 16), 'Ab')
        int_49825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 19), 'int')
        # Getting the type of 'ind2' (line 506)
        ind2_49826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 22), 'ind2')
        # Applying the binary operator '-' (line 506)
        result_sub_49827 = python_operator(stypy.reporting.localization.Localization(__file__, 506, 19), '-', int_49825, ind2_49826)
        
        # Getting the type of 'ind2' (line 506)
        ind2_49828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 28), 'ind2')
        slice_49829 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 506, 16), ind2_49828, None, None)
        # Storing an element on a container (line 506)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 16), Ab_49824, ((result_sub_49827, slice_49829), temp_49823))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 507):
        
        # Assigning a Call to a Name (line 507):
        
        # Call to astype(...): (line 507)
        # Processing the call arguments (line 507)
        # Getting the type of 'dtype' (line 507)
        dtype_49832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 25), 'dtype', False)
        # Processing the call keyword arguments (line 507)
        kwargs_49833 = {}
        # Getting the type of 'A' (line 507)
        A_49830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 16), 'A', False)
        # Obtaining the member 'astype' of a type (line 507)
        astype_49831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 507, 16), A_49830, 'astype')
        # Calling astype(args, kwargs) (line 507)
        astype_call_result_49834 = invoke(stypy.reporting.localization.Localization(__file__, 507, 16), astype_49831, *[dtype_49832], **kwargs_49833)
        
        # Assigning a type to the variable 'A' (line 507)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 507, 12), 'A', astype_call_result_49834)
        
        # Assigning a IfExp to a Name (line 508):
        
        # Assigning a IfExp to a Name (line 508):
        
        
        # Getting the type of 'ind' (line 508)
        ind_49835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 27), 'ind')
        int_49836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 33), 'int')
        # Applying the binary operator '<' (line 508)
        result_lt_49837 = python_operator(stypy.reporting.localization.Localization(__file__, 508, 27), '<', ind_49835, int_49836)
        
        # Testing the type of an if expression (line 508)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 508, 16), result_lt_49837)
        # SSA begins for if expression (line 508)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        # Getting the type of 'A' (line 508)
        A_49838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 16), 'A')
        # Getting the type of 'A' (line 508)
        A_49839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 20), 'A')
        # Obtaining the member 'T' of a type (line 508)
        T_49840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 20), A_49839, 'T')
        # Applying the binary operator '+' (line 508)
        result_add_49841 = python_operator(stypy.reporting.localization.Localization(__file__, 508, 16), '+', A_49838, T_49840)
        
        # SSA branch for the else part of an if expression (line 508)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'A' (line 508)
        A_49842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 40), 'A')
        
        # Call to conj(...): (line 508)
        # Processing the call keyword arguments (line 508)
        kwargs_49845 = {}
        # Getting the type of 'A' (line 508)
        A_49843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 44), 'A', False)
        # Obtaining the member 'conj' of a type (line 508)
        conj_49844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 44), A_49843, 'conj')
        # Calling conj(args, kwargs) (line 508)
        conj_call_result_49846 = invoke(stypy.reporting.localization.Localization(__file__, 508, 44), conj_49844, *[], **kwargs_49845)
        
        # Obtaining the member 'T' of a type (line 508)
        T_49847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 44), conj_call_result_49846, 'T')
        # Applying the binary operator '+' (line 508)
        result_add_49848 = python_operator(stypy.reporting.localization.Localization(__file__, 508, 40), '+', A_49842, T_49847)
        
        # SSA join for if expression (line 508)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_49849 = union_type.UnionType.add(result_add_49841, result_add_49848)
        
        # Assigning a type to the variable 'A' (line 508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 508, 12), 'A', if_exp_49849)
        
        # Assigning a Call to a Subscript (line 509):
        
        # Assigning a Call to a Subscript (line 509):
        
        # Call to diag(...): (line 509)
        # Processing the call arguments (line 509)
        # Getting the type of 'A' (line 509)
        A_49851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 29), 'A', False)
        # Processing the call keyword arguments (line 509)
        kwargs_49852 = {}
        # Getting the type of 'diag' (line 509)
        diag_49850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 24), 'diag', False)
        # Calling diag(args, kwargs) (line 509)
        diag_call_result_49853 = invoke(stypy.reporting.localization.Localization(__file__, 509, 24), diag_49850, *[A_49851], **kwargs_49852)
        
        # Getting the type of 'Ab' (line 509)
        Ab_49854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 12), 'Ab')
        int_49855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 15), 'int')
        slice_49856 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 509, 12), None, None, None)
        # Storing an element on a container (line 509)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 12), Ab_49854, ((int_49855, slice_49856), diag_call_result_49853))
        
        # Assigning a Call to a Name (line 510):
        
        # Assigning a Call to a Name (line 510):
        
        # Call to astype(...): (line 510)
        # Processing the call arguments (line 510)
        # Getting the type of 'dtype' (line 510)
        dtype_49862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 31), 'dtype', False)
        # Processing the call keyword arguments (line 510)
        kwargs_49863 = {}
        
        # Call to rand(...): (line 510)
        # Processing the call arguments (line 510)
        # Getting the type of 'n' (line 510)
        n_49858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 21), 'n', False)
        # Processing the call keyword arguments (line 510)
        kwargs_49859 = {}
        # Getting the type of 'rand' (line 510)
        rand_49857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 510)
        rand_call_result_49860 = invoke(stypy.reporting.localization.Localization(__file__, 510, 16), rand_49857, *[n_49858], **kwargs_49859)
        
        # Obtaining the member 'astype' of a type (line 510)
        astype_49861 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 16), rand_call_result_49860, 'astype')
        # Calling astype(args, kwargs) (line 510)
        astype_call_result_49864 = invoke(stypy.reporting.localization.Localization(__file__, 510, 16), astype_49861, *[dtype_49862], **kwargs_49863)
        
        # Assigning a type to the variable 'x' (line 510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 12), 'x', astype_call_result_49864)
        
        # Assigning a Call to a Name (line 511):
        
        # Assigning a Call to a Name (line 511):
        
        # Call to astype(...): (line 511)
        # Processing the call arguments (line 511)
        # Getting the type of 'dtype' (line 511)
        dtype_49870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 31), 'dtype', False)
        # Processing the call keyword arguments (line 511)
        kwargs_49871 = {}
        
        # Call to rand(...): (line 511)
        # Processing the call arguments (line 511)
        # Getting the type of 'n' (line 511)
        n_49866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 21), 'n', False)
        # Processing the call keyword arguments (line 511)
        kwargs_49867 = {}
        # Getting the type of 'rand' (line 511)
        rand_49865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 511)
        rand_call_result_49868 = invoke(stypy.reporting.localization.Localization(__file__, 511, 16), rand_49865, *[n_49866], **kwargs_49867)
        
        # Obtaining the member 'astype' of a type (line 511)
        astype_49869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 16), rand_call_result_49868, 'astype')
        # Calling astype(args, kwargs) (line 511)
        astype_call_result_49872 = invoke(stypy.reporting.localization.Localization(__file__, 511, 16), astype_49869, *[dtype_49870], **kwargs_49871)
        
        # Assigning a type to the variable 'y' (line 511)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 511, 12), 'y', astype_call_result_49872)
        
        # Assigning a Tuple to a Tuple (line 512):
        
        # Assigning a Call to a Name (line 512):
        
        # Call to dtype(...): (line 512)
        # Processing the call arguments (line 512)
        float_49874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 32), 'float')
        # Processing the call keyword arguments (line 512)
        kwargs_49875 = {}
        # Getting the type of 'dtype' (line 512)
        dtype_49873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 26), 'dtype', False)
        # Calling dtype(args, kwargs) (line 512)
        dtype_call_result_49876 = invoke(stypy.reporting.localization.Localization(__file__, 512, 26), dtype_49873, *[float_49874], **kwargs_49875)
        
        # Assigning a type to the variable 'tuple_assignment_46672' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 12), 'tuple_assignment_46672', dtype_call_result_49876)
        
        # Assigning a Call to a Name (line 512):
        
        # Call to dtype(...): (line 512)
        # Processing the call arguments (line 512)
        int_49878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 45), 'int')
        # Processing the call keyword arguments (line 512)
        kwargs_49879 = {}
        # Getting the type of 'dtype' (line 512)
        dtype_49877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 39), 'dtype', False)
        # Calling dtype(args, kwargs) (line 512)
        dtype_call_result_49880 = invoke(stypy.reporting.localization.Localization(__file__, 512, 39), dtype_49877, *[int_49878], **kwargs_49879)
        
        # Assigning a type to the variable 'tuple_assignment_46673' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 12), 'tuple_assignment_46673', dtype_call_result_49880)
        
        # Assigning a Name to a Name (line 512):
        # Getting the type of 'tuple_assignment_46672' (line 512)
        tuple_assignment_46672_49881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 12), 'tuple_assignment_46672')
        # Assigning a type to the variable 'alpha' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 12), 'alpha', tuple_assignment_46672_49881)
        
        # Assigning a Name to a Name (line 512):
        # Getting the type of 'tuple_assignment_46673' (line 512)
        tuple_assignment_46673_49882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 12), 'tuple_assignment_46673')
        # Assigning a type to the variable 'beta' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 19), 'beta', tuple_assignment_46673_49882)
        
        
        # Getting the type of 'ind' (line 514)
        ind_49883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 15), 'ind')
        int_49884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 514, 21), 'int')
        # Applying the binary operator '>' (line 514)
        result_gt_49885 = python_operator(stypy.reporting.localization.Localization(__file__, 514, 15), '>', ind_49883, int_49884)
        
        # Testing the type of an if condition (line 514)
        if_condition_49886 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 514, 12), result_gt_49885)
        # Assigning a type to the variable 'if_condition_49886' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 12), 'if_condition_49886', if_condition_49886)
        # SSA begins for if statement (line 514)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 515):
        
        # Assigning a Subscript to a Name (line 515):
        
        # Obtaining the type of the subscript
        int_49887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 16), 'int')
        
        # Call to get_blas_funcs(...): (line 515)
        # Processing the call arguments (line 515)
        
        # Obtaining an instance of the builtin type 'tuple' (line 515)
        tuple_49889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 515)
        # Adding element type (line 515)
        str_49890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 40), 'str', 'hbmv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 515, 40), tuple_49889, str_49890)
        
        # Processing the call keyword arguments (line 515)
        # Getting the type of 'dtype' (line 515)
        dtype_49891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 56), 'dtype', False)
        keyword_49892 = dtype_49891
        kwargs_49893 = {'dtype': keyword_49892}
        # Getting the type of 'get_blas_funcs' (line 515)
        get_blas_funcs_49888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 24), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 515)
        get_blas_funcs_call_result_49894 = invoke(stypy.reporting.localization.Localization(__file__, 515, 24), get_blas_funcs_49888, *[tuple_49889], **kwargs_49893)
        
        # Obtaining the member '__getitem__' of a type (line 515)
        getitem___49895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 16), get_blas_funcs_call_result_49894, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 515)
        subscript_call_result_49896 = invoke(stypy.reporting.localization.Localization(__file__, 515, 16), getitem___49895, int_49887)
        
        # Assigning a type to the variable 'tuple_var_assignment_46674' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 16), 'tuple_var_assignment_46674', subscript_call_result_49896)
        
        # Assigning a Name to a Name (line 515):
        # Getting the type of 'tuple_var_assignment_46674' (line 515)
        tuple_var_assignment_46674_49897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 16), 'tuple_var_assignment_46674')
        # Assigning a type to the variable 'func' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 16), 'func', tuple_var_assignment_46674_49897)
        # SSA branch for the else part of an if statement (line 514)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 517):
        
        # Assigning a Subscript to a Name (line 517):
        
        # Obtaining the type of the subscript
        int_49898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 16), 'int')
        
        # Call to get_blas_funcs(...): (line 517)
        # Processing the call arguments (line 517)
        
        # Obtaining an instance of the builtin type 'tuple' (line 517)
        tuple_49900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 517)
        # Adding element type (line 517)
        str_49901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 517, 40), 'str', 'sbmv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 517, 40), tuple_49900, str_49901)
        
        # Processing the call keyword arguments (line 517)
        # Getting the type of 'dtype' (line 517)
        dtype_49902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 56), 'dtype', False)
        keyword_49903 = dtype_49902
        kwargs_49904 = {'dtype': keyword_49903}
        # Getting the type of 'get_blas_funcs' (line 517)
        get_blas_funcs_49899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 24), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 517)
        get_blas_funcs_call_result_49905 = invoke(stypy.reporting.localization.Localization(__file__, 517, 24), get_blas_funcs_49899, *[tuple_49900], **kwargs_49904)
        
        # Obtaining the member '__getitem__' of a type (line 517)
        getitem___49906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 517, 16), get_blas_funcs_call_result_49905, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 517)
        subscript_call_result_49907 = invoke(stypy.reporting.localization.Localization(__file__, 517, 16), getitem___49906, int_49898)
        
        # Assigning a type to the variable 'tuple_var_assignment_46675' (line 517)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 517, 16), 'tuple_var_assignment_46675', subscript_call_result_49907)
        
        # Assigning a Name to a Name (line 517):
        # Getting the type of 'tuple_var_assignment_46675' (line 517)
        tuple_var_assignment_46675_49908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 517, 16), 'tuple_var_assignment_46675')
        # Assigning a type to the variable 'func' (line 517)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 517, 16), 'func', tuple_var_assignment_46675_49908)
        # SSA join for if statement (line 514)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 518):
        
        # Assigning a Call to a Name (line 518):
        
        # Call to func(...): (line 518)
        # Processing the call keyword arguments (line 518)
        # Getting the type of 'k' (line 518)
        k_49910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 24), 'k', False)
        keyword_49911 = k_49910
        # Getting the type of 'alpha' (line 518)
        alpha_49912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 33), 'alpha', False)
        keyword_49913 = alpha_49912
        # Getting the type of 'Ab' (line 518)
        Ab_49914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 42), 'Ab', False)
        keyword_49915 = Ab_49914
        # Getting the type of 'x' (line 518)
        x_49916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 48), 'x', False)
        keyword_49917 = x_49916
        # Getting the type of 'y' (line 518)
        y_49918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 53), 'y', False)
        keyword_49919 = y_49918
        # Getting the type of 'beta' (line 518)
        beta_49920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 61), 'beta', False)
        keyword_49921 = beta_49920
        kwargs_49922 = {'a': keyword_49915, 'k': keyword_49911, 'beta': keyword_49921, 'x': keyword_49917, 'y': keyword_49919, 'alpha': keyword_49913}
        # Getting the type of 'func' (line 518)
        func_49909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 17), 'func', False)
        # Calling func(args, kwargs) (line 518)
        func_call_result_49923 = invoke(stypy.reporting.localization.Localization(__file__, 518, 17), func_49909, *[], **kwargs_49922)
        
        # Assigning a type to the variable 'y1' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 12), 'y1', func_call_result_49923)
        
        # Assigning a BinOp to a Name (line 519):
        
        # Assigning a BinOp to a Name (line 519):
        # Getting the type of 'alpha' (line 519)
        alpha_49924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 17), 'alpha')
        
        # Call to dot(...): (line 519)
        # Processing the call arguments (line 519)
        # Getting the type of 'x' (line 519)
        x_49927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 31), 'x', False)
        # Processing the call keyword arguments (line 519)
        kwargs_49928 = {}
        # Getting the type of 'A' (line 519)
        A_49925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 25), 'A', False)
        # Obtaining the member 'dot' of a type (line 519)
        dot_49926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 25), A_49925, 'dot')
        # Calling dot(args, kwargs) (line 519)
        dot_call_result_49929 = invoke(stypy.reporting.localization.Localization(__file__, 519, 25), dot_49926, *[x_49927], **kwargs_49928)
        
        # Applying the binary operator '*' (line 519)
        result_mul_49930 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 17), '*', alpha_49924, dot_call_result_49929)
        
        # Getting the type of 'beta' (line 519)
        beta_49931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 36), 'beta')
        # Getting the type of 'y' (line 519)
        y_49932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 43), 'y')
        # Applying the binary operator '*' (line 519)
        result_mul_49933 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 36), '*', beta_49931, y_49932)
        
        # Applying the binary operator '+' (line 519)
        result_add_49934 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 17), '+', result_mul_49930, result_mul_49933)
        
        # Assigning a type to the variable 'y2' (line 519)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 519, 12), 'y2', result_add_49934)
        
        # Call to assert_array_almost_equal(...): (line 520)
        # Processing the call arguments (line 520)
        # Getting the type of 'y1' (line 520)
        y1_49936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 38), 'y1', False)
        # Getting the type of 'y2' (line 520)
        y2_49937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 42), 'y2', False)
        # Processing the call keyword arguments (line 520)
        kwargs_49938 = {}
        # Getting the type of 'assert_array_almost_equal' (line 520)
        assert_array_almost_equal_49935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 520)
        assert_array_almost_equal_call_result_49939 = invoke(stypy.reporting.localization.Localization(__file__, 520, 12), assert_array_almost_equal_49935, *[y1_49936, y2_49937], **kwargs_49938)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_sbmv_hbmv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_sbmv_hbmv' in the type store
        # Getting the type of 'stypy_return_type' (line 493)
        stypy_return_type_49940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_49940)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_sbmv_hbmv'
        return stypy_return_type_49940


    @norecursion
    def test_spmv_hpmv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spmv_hpmv'
        module_type_store = module_type_store.open_function_context('test_spmv_hpmv', 522, 4, False)
        # Assigning a type to the variable 'self' (line 523)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 523, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_spmv_hpmv')
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_spmv_hpmv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_spmv_hpmv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spmv_hpmv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spmv_hpmv(...)' code ##################

        
        # Call to seed(...): (line 523)
        # Processing the call arguments (line 523)
        int_49942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 13), 'int')
        # Processing the call keyword arguments (line 523)
        kwargs_49943 = {}
        # Getting the type of 'seed' (line 523)
        seed_49941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 523)
        seed_call_result_49944 = invoke(stypy.reporting.localization.Localization(__file__, 523, 8), seed_49941, *[int_49942], **kwargs_49943)
        
        
        
        # Call to enumerate(...): (line 524)
        # Processing the call arguments (line 524)
        # Getting the type of 'DTYPES' (line 524)
        DTYPES_49946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 36), 'DTYPES', False)
        # Getting the type of 'COMPLEX_DTYPES' (line 524)
        COMPLEX_DTYPES_49947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 43), 'COMPLEX_DTYPES', False)
        # Applying the binary operator '+' (line 524)
        result_add_49948 = python_operator(stypy.reporting.localization.Localization(__file__, 524, 36), '+', DTYPES_49946, COMPLEX_DTYPES_49947)
        
        # Processing the call keyword arguments (line 524)
        kwargs_49949 = {}
        # Getting the type of 'enumerate' (line 524)
        enumerate_49945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 524)
        enumerate_call_result_49950 = invoke(stypy.reporting.localization.Localization(__file__, 524, 26), enumerate_49945, *[result_add_49948], **kwargs_49949)
        
        # Testing the type of a for loop iterable (line 524)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 524, 8), enumerate_call_result_49950)
        # Getting the type of the for loop variable (line 524)
        for_loop_var_49951 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 524, 8), enumerate_call_result_49950)
        # Assigning a type to the variable 'ind' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 8), for_loop_var_49951))
        # Assigning a type to the variable 'dtype' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 8), for_loop_var_49951))
        # SSA begins for a for statement (line 524)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 525):
        
        # Assigning a Num to a Name (line 525):
        int_49952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 525, 16), 'int')
        # Assigning a type to the variable 'n' (line 525)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 525, 12), 'n', int_49952)
        
        # Assigning a Call to a Name (line 526):
        
        # Assigning a Call to a Name (line 526):
        
        # Call to astype(...): (line 526)
        # Processing the call arguments (line 526)
        # Getting the type of 'dtype' (line 526)
        dtype_49959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 34), 'dtype', False)
        # Processing the call keyword arguments (line 526)
        kwargs_49960 = {}
        
        # Call to rand(...): (line 526)
        # Processing the call arguments (line 526)
        # Getting the type of 'n' (line 526)
        n_49954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 21), 'n', False)
        # Getting the type of 'n' (line 526)
        n_49955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 24), 'n', False)
        # Processing the call keyword arguments (line 526)
        kwargs_49956 = {}
        # Getting the type of 'rand' (line 526)
        rand_49953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 526)
        rand_call_result_49957 = invoke(stypy.reporting.localization.Localization(__file__, 526, 16), rand_49953, *[n_49954, n_49955], **kwargs_49956)
        
        # Obtaining the member 'astype' of a type (line 526)
        astype_49958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 16), rand_call_result_49957, 'astype')
        # Calling astype(args, kwargs) (line 526)
        astype_call_result_49961 = invoke(stypy.reporting.localization.Localization(__file__, 526, 16), astype_49958, *[dtype_49959], **kwargs_49960)
        
        # Assigning a type to the variable 'A' (line 526)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 526, 12), 'A', astype_call_result_49961)
        
        
        # Getting the type of 'ind' (line 527)
        ind_49962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 15), 'ind')
        int_49963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 21), 'int')
        # Applying the binary operator '>' (line 527)
        result_gt_49964 = python_operator(stypy.reporting.localization.Localization(__file__, 527, 15), '>', ind_49962, int_49963)
        
        # Testing the type of an if condition (line 527)
        if_condition_49965 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 527, 12), result_gt_49964)
        # Assigning a type to the variable 'if_condition_49965' (line 527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 12), 'if_condition_49965', if_condition_49965)
        # SSA begins for if statement (line 527)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'A' (line 528)
        A_49966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 16), 'A')
        
        # Call to rand(...): (line 528)
        # Processing the call arguments (line 528)
        # Getting the type of 'n' (line 528)
        n_49968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 26), 'n', False)
        # Getting the type of 'n' (line 528)
        n_49969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 29), 'n', False)
        # Processing the call keyword arguments (line 528)
        kwargs_49970 = {}
        # Getting the type of 'rand' (line 528)
        rand_49967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 21), 'rand', False)
        # Calling rand(args, kwargs) (line 528)
        rand_call_result_49971 = invoke(stypy.reporting.localization.Localization(__file__, 528, 21), rand_49967, *[n_49968, n_49969], **kwargs_49970)
        
        complex_49972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 32), 'complex')
        # Applying the binary operator '*' (line 528)
        result_mul_49973 = python_operator(stypy.reporting.localization.Localization(__file__, 528, 21), '*', rand_call_result_49971, complex_49972)
        
        # Applying the binary operator '+=' (line 528)
        result_iadd_49974 = python_operator(stypy.reporting.localization.Localization(__file__, 528, 16), '+=', A_49966, result_mul_49973)
        # Assigning a type to the variable 'A' (line 528)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 528, 16), 'A', result_iadd_49974)
        
        # SSA join for if statement (line 527)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 529):
        
        # Assigning a Call to a Name (line 529):
        
        # Call to astype(...): (line 529)
        # Processing the call arguments (line 529)
        # Getting the type of 'dtype' (line 529)
        dtype_49977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 25), 'dtype', False)
        # Processing the call keyword arguments (line 529)
        kwargs_49978 = {}
        # Getting the type of 'A' (line 529)
        A_49975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 16), 'A', False)
        # Obtaining the member 'astype' of a type (line 529)
        astype_49976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 16), A_49975, 'astype')
        # Calling astype(args, kwargs) (line 529)
        astype_call_result_49979 = invoke(stypy.reporting.localization.Localization(__file__, 529, 16), astype_49976, *[dtype_49977], **kwargs_49978)
        
        # Assigning a type to the variable 'A' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 12), 'A', astype_call_result_49979)
        
        # Assigning a IfExp to a Name (line 530):
        
        # Assigning a IfExp to a Name (line 530):
        
        
        # Getting the type of 'ind' (line 530)
        ind_49980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 27), 'ind')
        int_49981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 33), 'int')
        # Applying the binary operator '<' (line 530)
        result_lt_49982 = python_operator(stypy.reporting.localization.Localization(__file__, 530, 27), '<', ind_49980, int_49981)
        
        # Testing the type of an if expression (line 530)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 530, 16), result_lt_49982)
        # SSA begins for if expression (line 530)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        # Getting the type of 'A' (line 530)
        A_49983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 16), 'A')
        # Getting the type of 'A' (line 530)
        A_49984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 20), 'A')
        # Obtaining the member 'T' of a type (line 530)
        T_49985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 20), A_49984, 'T')
        # Applying the binary operator '+' (line 530)
        result_add_49986 = python_operator(stypy.reporting.localization.Localization(__file__, 530, 16), '+', A_49983, T_49985)
        
        # SSA branch for the else part of an if expression (line 530)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'A' (line 530)
        A_49987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 40), 'A')
        
        # Call to conj(...): (line 530)
        # Processing the call keyword arguments (line 530)
        kwargs_49990 = {}
        # Getting the type of 'A' (line 530)
        A_49988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 44), 'A', False)
        # Obtaining the member 'conj' of a type (line 530)
        conj_49989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 44), A_49988, 'conj')
        # Calling conj(args, kwargs) (line 530)
        conj_call_result_49991 = invoke(stypy.reporting.localization.Localization(__file__, 530, 44), conj_49989, *[], **kwargs_49990)
        
        # Obtaining the member 'T' of a type (line 530)
        T_49992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 44), conj_call_result_49991, 'T')
        # Applying the binary operator '+' (line 530)
        result_add_49993 = python_operator(stypy.reporting.localization.Localization(__file__, 530, 40), '+', A_49987, T_49992)
        
        # SSA join for if expression (line 530)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_49994 = union_type.UnionType.add(result_add_49986, result_add_49993)
        
        # Assigning a type to the variable 'A' (line 530)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 530, 12), 'A', if_exp_49994)
        
        # Assigning a Call to a Tuple (line 531):
        
        # Assigning a Subscript to a Name (line 531):
        
        # Obtaining the type of the subscript
        int_49995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 12), 'int')
        
        # Call to tril_indices(...): (line 531)
        # Processing the call arguments (line 531)
        # Getting the type of 'n' (line 531)
        n_49997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 32), 'n', False)
        # Processing the call keyword arguments (line 531)
        kwargs_49998 = {}
        # Getting the type of 'tril_indices' (line 531)
        tril_indices_49996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 531)
        tril_indices_call_result_49999 = invoke(stypy.reporting.localization.Localization(__file__, 531, 19), tril_indices_49996, *[n_49997], **kwargs_49998)
        
        # Obtaining the member '__getitem__' of a type (line 531)
        getitem___50000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 12), tril_indices_call_result_49999, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 531)
        subscript_call_result_50001 = invoke(stypy.reporting.localization.Localization(__file__, 531, 12), getitem___50000, int_49995)
        
        # Assigning a type to the variable 'tuple_var_assignment_46676' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 12), 'tuple_var_assignment_46676', subscript_call_result_50001)
        
        # Assigning a Subscript to a Name (line 531):
        
        # Obtaining the type of the subscript
        int_50002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 12), 'int')
        
        # Call to tril_indices(...): (line 531)
        # Processing the call arguments (line 531)
        # Getting the type of 'n' (line 531)
        n_50004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 32), 'n', False)
        # Processing the call keyword arguments (line 531)
        kwargs_50005 = {}
        # Getting the type of 'tril_indices' (line 531)
        tril_indices_50003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 531)
        tril_indices_call_result_50006 = invoke(stypy.reporting.localization.Localization(__file__, 531, 19), tril_indices_50003, *[n_50004], **kwargs_50005)
        
        # Obtaining the member '__getitem__' of a type (line 531)
        getitem___50007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 12), tril_indices_call_result_50006, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 531)
        subscript_call_result_50008 = invoke(stypy.reporting.localization.Localization(__file__, 531, 12), getitem___50007, int_50002)
        
        # Assigning a type to the variable 'tuple_var_assignment_46677' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 12), 'tuple_var_assignment_46677', subscript_call_result_50008)
        
        # Assigning a Name to a Name (line 531):
        # Getting the type of 'tuple_var_assignment_46676' (line 531)
        tuple_var_assignment_46676_50009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 12), 'tuple_var_assignment_46676')
        # Assigning a type to the variable 'c' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 12), 'c', tuple_var_assignment_46676_50009)
        
        # Assigning a Name to a Name (line 531):
        # Getting the type of 'tuple_var_assignment_46677' (line 531)
        tuple_var_assignment_46677_50010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 12), 'tuple_var_assignment_46677')
        # Assigning a type to the variable 'r' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 15), 'r', tuple_var_assignment_46677_50010)
        
        # Assigning a Subscript to a Name (line 532):
        
        # Assigning a Subscript to a Name (line 532):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 532)
        tuple_50011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 532)
        # Adding element type (line 532)
        # Getting the type of 'r' (line 532)
        r_50012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 19), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 19), tuple_50011, r_50012)
        # Adding element type (line 532)
        # Getting the type of 'c' (line 532)
        c_50013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 22), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 19), tuple_50011, c_50013)
        
        # Getting the type of 'A' (line 532)
        A_50014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 17), 'A')
        # Obtaining the member '__getitem__' of a type (line 532)
        getitem___50015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 17), A_50014, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 532)
        subscript_call_result_50016 = invoke(stypy.reporting.localization.Localization(__file__, 532, 17), getitem___50015, tuple_50011)
        
        # Assigning a type to the variable 'Ap' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 12), 'Ap', subscript_call_result_50016)
        
        # Assigning a Call to a Name (line 533):
        
        # Assigning a Call to a Name (line 533):
        
        # Call to astype(...): (line 533)
        # Processing the call arguments (line 533)
        # Getting the type of 'dtype' (line 533)
        dtype_50022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 31), 'dtype', False)
        # Processing the call keyword arguments (line 533)
        kwargs_50023 = {}
        
        # Call to rand(...): (line 533)
        # Processing the call arguments (line 533)
        # Getting the type of 'n' (line 533)
        n_50018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 21), 'n', False)
        # Processing the call keyword arguments (line 533)
        kwargs_50019 = {}
        # Getting the type of 'rand' (line 533)
        rand_50017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 533)
        rand_call_result_50020 = invoke(stypy.reporting.localization.Localization(__file__, 533, 16), rand_50017, *[n_50018], **kwargs_50019)
        
        # Obtaining the member 'astype' of a type (line 533)
        astype_50021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 16), rand_call_result_50020, 'astype')
        # Calling astype(args, kwargs) (line 533)
        astype_call_result_50024 = invoke(stypy.reporting.localization.Localization(__file__, 533, 16), astype_50021, *[dtype_50022], **kwargs_50023)
        
        # Assigning a type to the variable 'x' (line 533)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 533, 12), 'x', astype_call_result_50024)
        
        # Assigning a Call to a Name (line 534):
        
        # Assigning a Call to a Name (line 534):
        
        # Call to astype(...): (line 534)
        # Processing the call arguments (line 534)
        # Getting the type of 'dtype' (line 534)
        dtype_50030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 31), 'dtype', False)
        # Processing the call keyword arguments (line 534)
        kwargs_50031 = {}
        
        # Call to rand(...): (line 534)
        # Processing the call arguments (line 534)
        # Getting the type of 'n' (line 534)
        n_50026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 21), 'n', False)
        # Processing the call keyword arguments (line 534)
        kwargs_50027 = {}
        # Getting the type of 'rand' (line 534)
        rand_50025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 534)
        rand_call_result_50028 = invoke(stypy.reporting.localization.Localization(__file__, 534, 16), rand_50025, *[n_50026], **kwargs_50027)
        
        # Obtaining the member 'astype' of a type (line 534)
        astype_50029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 16), rand_call_result_50028, 'astype')
        # Calling astype(args, kwargs) (line 534)
        astype_call_result_50032 = invoke(stypy.reporting.localization.Localization(__file__, 534, 16), astype_50029, *[dtype_50030], **kwargs_50031)
        
        # Assigning a type to the variable 'y' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 12), 'y', astype_call_result_50032)
        
        # Assigning a Call to a Name (line 535):
        
        # Assigning a Call to a Name (line 535):
        
        # Call to astype(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'dtype' (line 535)
        dtype_50040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 39), 'dtype', False)
        # Processing the call keyword arguments (line 535)
        kwargs_50041 = {}
        
        # Call to arange(...): (line 535)
        # Processing the call arguments (line 535)
        int_50034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 535, 27), 'int')
        # Getting the type of 'n' (line 535)
        n_50035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 29), 'n', False)
        # Applying the binary operator '*' (line 535)
        result_mul_50036 = python_operator(stypy.reporting.localization.Localization(__file__, 535, 27), '*', int_50034, n_50035)
        
        # Processing the call keyword arguments (line 535)
        kwargs_50037 = {}
        # Getting the type of 'arange' (line 535)
        arange_50033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 20), 'arange', False)
        # Calling arange(args, kwargs) (line 535)
        arange_call_result_50038 = invoke(stypy.reporting.localization.Localization(__file__, 535, 20), arange_50033, *[result_mul_50036], **kwargs_50037)
        
        # Obtaining the member 'astype' of a type (line 535)
        astype_50039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 20), arange_call_result_50038, 'astype')
        # Calling astype(args, kwargs) (line 535)
        astype_call_result_50042 = invoke(stypy.reporting.localization.Localization(__file__, 535, 20), astype_50039, *[dtype_50040], **kwargs_50041)
        
        # Assigning a type to the variable 'xlong' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'xlong', astype_call_result_50042)
        
        # Assigning a Call to a Name (line 536):
        
        # Assigning a Call to a Name (line 536):
        
        # Call to astype(...): (line 536)
        # Processing the call arguments (line 536)
        # Getting the type of 'dtype' (line 536)
        dtype_50050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 37), 'dtype', False)
        # Processing the call keyword arguments (line 536)
        kwargs_50051 = {}
        
        # Call to ones(...): (line 536)
        # Processing the call arguments (line 536)
        int_50044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 25), 'int')
        # Getting the type of 'n' (line 536)
        n_50045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 27), 'n', False)
        # Applying the binary operator '*' (line 536)
        result_mul_50046 = python_operator(stypy.reporting.localization.Localization(__file__, 536, 25), '*', int_50044, n_50045)
        
        # Processing the call keyword arguments (line 536)
        kwargs_50047 = {}
        # Getting the type of 'ones' (line 536)
        ones_50043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 20), 'ones', False)
        # Calling ones(args, kwargs) (line 536)
        ones_call_result_50048 = invoke(stypy.reporting.localization.Localization(__file__, 536, 20), ones_50043, *[result_mul_50046], **kwargs_50047)
        
        # Obtaining the member 'astype' of a type (line 536)
        astype_50049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 20), ones_call_result_50048, 'astype')
        # Calling astype(args, kwargs) (line 536)
        astype_call_result_50052 = invoke(stypy.reporting.localization.Localization(__file__, 536, 20), astype_50049, *[dtype_50050], **kwargs_50051)
        
        # Assigning a type to the variable 'ylong' (line 536)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 12), 'ylong', astype_call_result_50052)
        
        # Assigning a Tuple to a Tuple (line 537):
        
        # Assigning a Call to a Name (line 537):
        
        # Call to dtype(...): (line 537)
        # Processing the call arguments (line 537)
        float_50054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, 32), 'float')
        # Processing the call keyword arguments (line 537)
        kwargs_50055 = {}
        # Getting the type of 'dtype' (line 537)
        dtype_50053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 26), 'dtype', False)
        # Calling dtype(args, kwargs) (line 537)
        dtype_call_result_50056 = invoke(stypy.reporting.localization.Localization(__file__, 537, 26), dtype_50053, *[float_50054], **kwargs_50055)
        
        # Assigning a type to the variable 'tuple_assignment_46678' (line 537)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'tuple_assignment_46678', dtype_call_result_50056)
        
        # Assigning a Call to a Name (line 537):
        
        # Call to dtype(...): (line 537)
        # Processing the call arguments (line 537)
        int_50058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, 45), 'int')
        # Processing the call keyword arguments (line 537)
        kwargs_50059 = {}
        # Getting the type of 'dtype' (line 537)
        dtype_50057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 39), 'dtype', False)
        # Calling dtype(args, kwargs) (line 537)
        dtype_call_result_50060 = invoke(stypy.reporting.localization.Localization(__file__, 537, 39), dtype_50057, *[int_50058], **kwargs_50059)
        
        # Assigning a type to the variable 'tuple_assignment_46679' (line 537)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'tuple_assignment_46679', dtype_call_result_50060)
        
        # Assigning a Name to a Name (line 537):
        # Getting the type of 'tuple_assignment_46678' (line 537)
        tuple_assignment_46678_50061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'tuple_assignment_46678')
        # Assigning a type to the variable 'alpha' (line 537)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'alpha', tuple_assignment_46678_50061)
        
        # Assigning a Name to a Name (line 537):
        # Getting the type of 'tuple_assignment_46679' (line 537)
        tuple_assignment_46679_50062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'tuple_assignment_46679')
        # Assigning a type to the variable 'beta' (line 537)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 19), 'beta', tuple_assignment_46679_50062)
        
        
        # Getting the type of 'ind' (line 539)
        ind_50063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 15), 'ind')
        int_50064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 21), 'int')
        # Applying the binary operator '>' (line 539)
        result_gt_50065 = python_operator(stypy.reporting.localization.Localization(__file__, 539, 15), '>', ind_50063, int_50064)
        
        # Testing the type of an if condition (line 539)
        if_condition_50066 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 539, 12), result_gt_50065)
        # Assigning a type to the variable 'if_condition_50066' (line 539)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'if_condition_50066', if_condition_50066)
        # SSA begins for if statement (line 539)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 540):
        
        # Assigning a Subscript to a Name (line 540):
        
        # Obtaining the type of the subscript
        int_50067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 16), 'int')
        
        # Call to get_blas_funcs(...): (line 540)
        # Processing the call arguments (line 540)
        
        # Obtaining an instance of the builtin type 'tuple' (line 540)
        tuple_50069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 540)
        # Adding element type (line 540)
        str_50070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 40), 'str', 'hpmv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 540, 40), tuple_50069, str_50070)
        
        # Processing the call keyword arguments (line 540)
        # Getting the type of 'dtype' (line 540)
        dtype_50071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 56), 'dtype', False)
        keyword_50072 = dtype_50071
        kwargs_50073 = {'dtype': keyword_50072}
        # Getting the type of 'get_blas_funcs' (line 540)
        get_blas_funcs_50068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 24), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 540)
        get_blas_funcs_call_result_50074 = invoke(stypy.reporting.localization.Localization(__file__, 540, 24), get_blas_funcs_50068, *[tuple_50069], **kwargs_50073)
        
        # Obtaining the member '__getitem__' of a type (line 540)
        getitem___50075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 16), get_blas_funcs_call_result_50074, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 540)
        subscript_call_result_50076 = invoke(stypy.reporting.localization.Localization(__file__, 540, 16), getitem___50075, int_50067)
        
        # Assigning a type to the variable 'tuple_var_assignment_46680' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'tuple_var_assignment_46680', subscript_call_result_50076)
        
        # Assigning a Name to a Name (line 540):
        # Getting the type of 'tuple_var_assignment_46680' (line 540)
        tuple_var_assignment_46680_50077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'tuple_var_assignment_46680')
        # Assigning a type to the variable 'func' (line 540)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'func', tuple_var_assignment_46680_50077)
        # SSA branch for the else part of an if statement (line 539)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 542):
        
        # Assigning a Subscript to a Name (line 542):
        
        # Obtaining the type of the subscript
        int_50078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 16), 'int')
        
        # Call to get_blas_funcs(...): (line 542)
        # Processing the call arguments (line 542)
        
        # Obtaining an instance of the builtin type 'tuple' (line 542)
        tuple_50080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 542)
        # Adding element type (line 542)
        str_50081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 40), 'str', 'spmv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 40), tuple_50080, str_50081)
        
        # Processing the call keyword arguments (line 542)
        # Getting the type of 'dtype' (line 542)
        dtype_50082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 56), 'dtype', False)
        keyword_50083 = dtype_50082
        kwargs_50084 = {'dtype': keyword_50083}
        # Getting the type of 'get_blas_funcs' (line 542)
        get_blas_funcs_50079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 24), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 542)
        get_blas_funcs_call_result_50085 = invoke(stypy.reporting.localization.Localization(__file__, 542, 24), get_blas_funcs_50079, *[tuple_50080], **kwargs_50084)
        
        # Obtaining the member '__getitem__' of a type (line 542)
        getitem___50086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 16), get_blas_funcs_call_result_50085, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 542)
        subscript_call_result_50087 = invoke(stypy.reporting.localization.Localization(__file__, 542, 16), getitem___50086, int_50078)
        
        # Assigning a type to the variable 'tuple_var_assignment_46681' (line 542)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 16), 'tuple_var_assignment_46681', subscript_call_result_50087)
        
        # Assigning a Name to a Name (line 542):
        # Getting the type of 'tuple_var_assignment_46681' (line 542)
        tuple_var_assignment_46681_50088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 16), 'tuple_var_assignment_46681')
        # Assigning a type to the variable 'func' (line 542)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 16), 'func', tuple_var_assignment_46681_50088)
        # SSA join for if statement (line 539)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 543):
        
        # Assigning a Call to a Name (line 543):
        
        # Call to func(...): (line 543)
        # Processing the call keyword arguments (line 543)
        # Getting the type of 'n' (line 543)
        n_50090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 24), 'n', False)
        keyword_50091 = n_50090
        # Getting the type of 'alpha' (line 543)
        alpha_50092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 33), 'alpha', False)
        keyword_50093 = alpha_50092
        # Getting the type of 'Ap' (line 543)
        Ap_50094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 43), 'Ap', False)
        keyword_50095 = Ap_50094
        # Getting the type of 'x' (line 543)
        x_50096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 49), 'x', False)
        keyword_50097 = x_50096
        # Getting the type of 'y' (line 543)
        y_50098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 54), 'y', False)
        keyword_50099 = y_50098
        # Getting the type of 'beta' (line 543)
        beta_50100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 62), 'beta', False)
        keyword_50101 = beta_50100
        kwargs_50102 = {'n': keyword_50091, 'ap': keyword_50095, 'beta': keyword_50101, 'x': keyword_50097, 'y': keyword_50099, 'alpha': keyword_50093}
        # Getting the type of 'func' (line 543)
        func_50089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 17), 'func', False)
        # Calling func(args, kwargs) (line 543)
        func_call_result_50103 = invoke(stypy.reporting.localization.Localization(__file__, 543, 17), func_50089, *[], **kwargs_50102)
        
        # Assigning a type to the variable 'y1' (line 543)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 543, 12), 'y1', func_call_result_50103)
        
        # Assigning a BinOp to a Name (line 544):
        
        # Assigning a BinOp to a Name (line 544):
        # Getting the type of 'alpha' (line 544)
        alpha_50104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 17), 'alpha')
        
        # Call to dot(...): (line 544)
        # Processing the call arguments (line 544)
        # Getting the type of 'x' (line 544)
        x_50107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 31), 'x', False)
        # Processing the call keyword arguments (line 544)
        kwargs_50108 = {}
        # Getting the type of 'A' (line 544)
        A_50105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 25), 'A', False)
        # Obtaining the member 'dot' of a type (line 544)
        dot_50106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 25), A_50105, 'dot')
        # Calling dot(args, kwargs) (line 544)
        dot_call_result_50109 = invoke(stypy.reporting.localization.Localization(__file__, 544, 25), dot_50106, *[x_50107], **kwargs_50108)
        
        # Applying the binary operator '*' (line 544)
        result_mul_50110 = python_operator(stypy.reporting.localization.Localization(__file__, 544, 17), '*', alpha_50104, dot_call_result_50109)
        
        # Getting the type of 'beta' (line 544)
        beta_50111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 36), 'beta')
        # Getting the type of 'y' (line 544)
        y_50112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 43), 'y')
        # Applying the binary operator '*' (line 544)
        result_mul_50113 = python_operator(stypy.reporting.localization.Localization(__file__, 544, 36), '*', beta_50111, y_50112)
        
        # Applying the binary operator '+' (line 544)
        result_add_50114 = python_operator(stypy.reporting.localization.Localization(__file__, 544, 17), '+', result_mul_50110, result_mul_50113)
        
        # Assigning a type to the variable 'y2' (line 544)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 12), 'y2', result_add_50114)
        
        # Call to assert_array_almost_equal(...): (line 545)
        # Processing the call arguments (line 545)
        # Getting the type of 'y1' (line 545)
        y1_50116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 38), 'y1', False)
        # Getting the type of 'y2' (line 545)
        y2_50117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 42), 'y2', False)
        # Processing the call keyword arguments (line 545)
        kwargs_50118 = {}
        # Getting the type of 'assert_array_almost_equal' (line 545)
        assert_array_almost_equal_50115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 545)
        assert_array_almost_equal_call_result_50119 = invoke(stypy.reporting.localization.Localization(__file__, 545, 12), assert_array_almost_equal_50115, *[y1_50116, y2_50117], **kwargs_50118)
        
        
        # Assigning a Call to a Name (line 548):
        
        # Assigning a Call to a Name (line 548):
        
        # Call to func(...): (line 548)
        # Processing the call keyword arguments (line 548)
        # Getting the type of 'n' (line 548)
        n_50121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 24), 'n', False)
        int_50122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 26), 'int')
        # Applying the binary operator '-' (line 548)
        result_sub_50123 = python_operator(stypy.reporting.localization.Localization(__file__, 548, 24), '-', n_50121, int_50122)
        
        keyword_50124 = result_sub_50123
        # Getting the type of 'alpha' (line 548)
        alpha_50125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 35), 'alpha', False)
        keyword_50126 = alpha_50125
        # Getting the type of 'beta' (line 548)
        beta_50127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 47), 'beta', False)
        keyword_50128 = beta_50127
        # Getting the type of 'xlong' (line 548)
        xlong_50129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 55), 'xlong', False)
        keyword_50130 = xlong_50129
        # Getting the type of 'ylong' (line 548)
        ylong_50131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 64), 'ylong', False)
        keyword_50132 = ylong_50131
        # Getting the type of 'Ap' (line 548)
        Ap_50133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 74), 'Ap', False)
        keyword_50134 = Ap_50133
        int_50135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 27), 'int')
        keyword_50136 = int_50135
        int_50137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 549, 35), 'int')
        keyword_50138 = int_50137
        # Getting the type of 'n' (line 549)
        n_50139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 43), 'n', False)
        keyword_50140 = n_50139
        # Getting the type of 'n' (line 549)
        n_50141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 51), 'n', False)
        keyword_50142 = n_50141
        kwargs_50143 = {'incx': keyword_50136, 'incy': keyword_50138, 'n': keyword_50124, 'ap': keyword_50134, 'beta': keyword_50128, 'x': keyword_50130, 'y': keyword_50132, 'alpha': keyword_50126, 'offx': keyword_50140, 'offy': keyword_50142}
        # Getting the type of 'func' (line 548)
        func_50120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 17), 'func', False)
        # Calling func(args, kwargs) (line 548)
        func_call_result_50144 = invoke(stypy.reporting.localization.Localization(__file__, 548, 17), func_50120, *[], **kwargs_50143)
        
        # Assigning a type to the variable 'y1' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 12), 'y1', func_call_result_50144)
        
        # Assigning a BinOp to a Name (line 550):
        
        # Assigning a BinOp to a Name (line 550):
        
        # Call to dot(...): (line 550)
        # Processing the call arguments (line 550)
        
        # Obtaining the type of the subscript
        int_50155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 49), 'int')
        int_50156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 52), 'int')
        slice_50157 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 550, 43), int_50155, None, int_50156)
        # Getting the type of 'xlong' (line 550)
        xlong_50158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 43), 'xlong', False)
        # Obtaining the member '__getitem__' of a type (line 550)
        getitem___50159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 43), xlong_50158, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 550)
        subscript_call_result_50160 = invoke(stypy.reporting.localization.Localization(__file__, 550, 43), getitem___50159, slice_50157)
        
        # Processing the call keyword arguments (line 550)
        kwargs_50161 = {}
        # Getting the type of 'alpha' (line 550)
        alpha_50145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 18), 'alpha', False)
        
        # Obtaining the type of the subscript
        int_50146 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 29), 'int')
        slice_50147 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 550, 26), None, int_50146, None)
        int_50148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 34), 'int')
        slice_50149 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 550, 26), None, int_50148, None)
        # Getting the type of 'A' (line 550)
        A_50150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 26), 'A', False)
        # Obtaining the member '__getitem__' of a type (line 550)
        getitem___50151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 26), A_50150, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 550)
        subscript_call_result_50152 = invoke(stypy.reporting.localization.Localization(__file__, 550, 26), getitem___50151, (slice_50147, slice_50149))
        
        # Applying the binary operator '*' (line 550)
        result_mul_50153 = python_operator(stypy.reporting.localization.Localization(__file__, 550, 18), '*', alpha_50145, subscript_call_result_50152)
        
        # Obtaining the member 'dot' of a type (line 550)
        dot_50154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 18), result_mul_50153, 'dot')
        # Calling dot(args, kwargs) (line 550)
        dot_call_result_50162 = invoke(stypy.reporting.localization.Localization(__file__, 550, 18), dot_50154, *[subscript_call_result_50160], **kwargs_50161)
        
        # Getting the type of 'beta' (line 550)
        beta_50163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 58), 'beta')
        
        # Obtaining the type of the subscript
        int_50164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 71), 'int')
        int_50165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 74), 'int')
        slice_50166 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 550, 65), int_50164, None, int_50165)
        # Getting the type of 'ylong' (line 550)
        ylong_50167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 65), 'ylong')
        # Obtaining the member '__getitem__' of a type (line 550)
        getitem___50168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 65), ylong_50167, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 550)
        subscript_call_result_50169 = invoke(stypy.reporting.localization.Localization(__file__, 550, 65), getitem___50168, slice_50166)
        
        # Applying the binary operator '*' (line 550)
        result_mul_50170 = python_operator(stypy.reporting.localization.Localization(__file__, 550, 58), '*', beta_50163, subscript_call_result_50169)
        
        # Applying the binary operator '+' (line 550)
        result_add_50171 = python_operator(stypy.reporting.localization.Localization(__file__, 550, 17), '+', dot_call_result_50162, result_mul_50170)
        
        # Assigning a type to the variable 'y2' (line 550)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 550, 12), 'y2', result_add_50171)
        
        # Call to assert_array_almost_equal(...): (line 551)
        # Processing the call arguments (line 551)
        
        # Obtaining the type of the subscript
        int_50173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 41), 'int')
        int_50174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 44), 'int')
        slice_50175 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 551, 38), int_50173, None, int_50174)
        # Getting the type of 'y1' (line 551)
        y1_50176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 38), 'y1', False)
        # Obtaining the member '__getitem__' of a type (line 551)
        getitem___50177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 38), y1_50176, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 551)
        subscript_call_result_50178 = invoke(stypy.reporting.localization.Localization(__file__, 551, 38), getitem___50177, slice_50175)
        
        # Getting the type of 'y2' (line 551)
        y2_50179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 48), 'y2', False)
        # Processing the call keyword arguments (line 551)
        kwargs_50180 = {}
        # Getting the type of 'assert_array_almost_equal' (line 551)
        assert_array_almost_equal_50172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 551)
        assert_array_almost_equal_call_result_50181 = invoke(stypy.reporting.localization.Localization(__file__, 551, 12), assert_array_almost_equal_50172, *[subscript_call_result_50178, y2_50179], **kwargs_50180)
        
        
        # Call to assert_almost_equal(...): (line 552)
        # Processing the call arguments (line 552)
        
        # Obtaining the type of the subscript
        int_50183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 35), 'int')
        # Getting the type of 'y1' (line 552)
        y1_50184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 32), 'y1', False)
        # Obtaining the member '__getitem__' of a type (line 552)
        getitem___50185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 32), y1_50184, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 552)
        subscript_call_result_50186 = invoke(stypy.reporting.localization.Localization(__file__, 552, 32), getitem___50185, int_50183)
        
        
        # Obtaining the type of the subscript
        int_50187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 45), 'int')
        # Getting the type of 'ylong' (line 552)
        ylong_50188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 39), 'ylong', False)
        # Obtaining the member '__getitem__' of a type (line 552)
        getitem___50189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 39), ylong_50188, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 552)
        subscript_call_result_50190 = invoke(stypy.reporting.localization.Localization(__file__, 552, 39), getitem___50189, int_50187)
        
        # Processing the call keyword arguments (line 552)
        kwargs_50191 = {}
        # Getting the type of 'assert_almost_equal' (line 552)
        assert_almost_equal_50182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 12), 'assert_almost_equal', False)
        # Calling assert_almost_equal(args, kwargs) (line 552)
        assert_almost_equal_call_result_50192 = invoke(stypy.reporting.localization.Localization(__file__, 552, 12), assert_almost_equal_50182, *[subscript_call_result_50186, subscript_call_result_50190], **kwargs_50191)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_spmv_hpmv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spmv_hpmv' in the type store
        # Getting the type of 'stypy_return_type' (line 522)
        stypy_return_type_50193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_50193)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spmv_hpmv'
        return stypy_return_type_50193


    @norecursion
    def test_spr_hpr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spr_hpr'
        module_type_store = module_type_store.open_function_context('test_spr_hpr', 554, 4, False)
        # Assigning a type to the variable 'self' (line 555)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 555, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_spr_hpr')
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_spr_hpr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_spr_hpr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spr_hpr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spr_hpr(...)' code ##################

        
        # Call to seed(...): (line 555)
        # Processing the call arguments (line 555)
        int_50195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 13), 'int')
        # Processing the call keyword arguments (line 555)
        kwargs_50196 = {}
        # Getting the type of 'seed' (line 555)
        seed_50194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 555)
        seed_call_result_50197 = invoke(stypy.reporting.localization.Localization(__file__, 555, 8), seed_50194, *[int_50195], **kwargs_50196)
        
        
        
        # Call to enumerate(...): (line 556)
        # Processing the call arguments (line 556)
        # Getting the type of 'DTYPES' (line 556)
        DTYPES_50199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 36), 'DTYPES', False)
        # Getting the type of 'COMPLEX_DTYPES' (line 556)
        COMPLEX_DTYPES_50200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 43), 'COMPLEX_DTYPES', False)
        # Applying the binary operator '+' (line 556)
        result_add_50201 = python_operator(stypy.reporting.localization.Localization(__file__, 556, 36), '+', DTYPES_50199, COMPLEX_DTYPES_50200)
        
        # Processing the call keyword arguments (line 556)
        kwargs_50202 = {}
        # Getting the type of 'enumerate' (line 556)
        enumerate_50198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 556)
        enumerate_call_result_50203 = invoke(stypy.reporting.localization.Localization(__file__, 556, 26), enumerate_50198, *[result_add_50201], **kwargs_50202)
        
        # Testing the type of a for loop iterable (line 556)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 556, 8), enumerate_call_result_50203)
        # Getting the type of the for loop variable (line 556)
        for_loop_var_50204 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 556, 8), enumerate_call_result_50203)
        # Assigning a type to the variable 'ind' (line 556)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 556, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 556, 8), for_loop_var_50204))
        # Assigning a type to the variable 'dtype' (line 556)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 556, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 556, 8), for_loop_var_50204))
        # SSA begins for a for statement (line 556)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 557):
        
        # Assigning a Num to a Name (line 557):
        int_50205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 557, 16), 'int')
        # Assigning a type to the variable 'n' (line 557)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 557, 12), 'n', int_50205)
        
        # Assigning a Call to a Name (line 558):
        
        # Assigning a Call to a Name (line 558):
        
        # Call to astype(...): (line 558)
        # Processing the call arguments (line 558)
        # Getting the type of 'dtype' (line 558)
        dtype_50212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 34), 'dtype', False)
        # Processing the call keyword arguments (line 558)
        kwargs_50213 = {}
        
        # Call to rand(...): (line 558)
        # Processing the call arguments (line 558)
        # Getting the type of 'n' (line 558)
        n_50207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 21), 'n', False)
        # Getting the type of 'n' (line 558)
        n_50208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 24), 'n', False)
        # Processing the call keyword arguments (line 558)
        kwargs_50209 = {}
        # Getting the type of 'rand' (line 558)
        rand_50206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 558)
        rand_call_result_50210 = invoke(stypy.reporting.localization.Localization(__file__, 558, 16), rand_50206, *[n_50207, n_50208], **kwargs_50209)
        
        # Obtaining the member 'astype' of a type (line 558)
        astype_50211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 16), rand_call_result_50210, 'astype')
        # Calling astype(args, kwargs) (line 558)
        astype_call_result_50214 = invoke(stypy.reporting.localization.Localization(__file__, 558, 16), astype_50211, *[dtype_50212], **kwargs_50213)
        
        # Assigning a type to the variable 'A' (line 558)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 558, 12), 'A', astype_call_result_50214)
        
        
        # Getting the type of 'ind' (line 559)
        ind_50215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 15), 'ind')
        int_50216 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 21), 'int')
        # Applying the binary operator '>' (line 559)
        result_gt_50217 = python_operator(stypy.reporting.localization.Localization(__file__, 559, 15), '>', ind_50215, int_50216)
        
        # Testing the type of an if condition (line 559)
        if_condition_50218 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 559, 12), result_gt_50217)
        # Assigning a type to the variable 'if_condition_50218' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 12), 'if_condition_50218', if_condition_50218)
        # SSA begins for if statement (line 559)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'A' (line 560)
        A_50219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 16), 'A')
        
        # Call to rand(...): (line 560)
        # Processing the call arguments (line 560)
        # Getting the type of 'n' (line 560)
        n_50221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 26), 'n', False)
        # Getting the type of 'n' (line 560)
        n_50222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 29), 'n', False)
        # Processing the call keyword arguments (line 560)
        kwargs_50223 = {}
        # Getting the type of 'rand' (line 560)
        rand_50220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 21), 'rand', False)
        # Calling rand(args, kwargs) (line 560)
        rand_call_result_50224 = invoke(stypy.reporting.localization.Localization(__file__, 560, 21), rand_50220, *[n_50221, n_50222], **kwargs_50223)
        
        complex_50225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 32), 'complex')
        # Applying the binary operator '*' (line 560)
        result_mul_50226 = python_operator(stypy.reporting.localization.Localization(__file__, 560, 21), '*', rand_call_result_50224, complex_50225)
        
        # Applying the binary operator '+=' (line 560)
        result_iadd_50227 = python_operator(stypy.reporting.localization.Localization(__file__, 560, 16), '+=', A_50219, result_mul_50226)
        # Assigning a type to the variable 'A' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 16), 'A', result_iadd_50227)
        
        # SSA join for if statement (line 559)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 561):
        
        # Assigning a Call to a Name (line 561):
        
        # Call to astype(...): (line 561)
        # Processing the call arguments (line 561)
        # Getting the type of 'dtype' (line 561)
        dtype_50230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 25), 'dtype', False)
        # Processing the call keyword arguments (line 561)
        kwargs_50231 = {}
        # Getting the type of 'A' (line 561)
        A_50228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 16), 'A', False)
        # Obtaining the member 'astype' of a type (line 561)
        astype_50229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 561, 16), A_50228, 'astype')
        # Calling astype(args, kwargs) (line 561)
        astype_call_result_50232 = invoke(stypy.reporting.localization.Localization(__file__, 561, 16), astype_50229, *[dtype_50230], **kwargs_50231)
        
        # Assigning a type to the variable 'A' (line 561)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 12), 'A', astype_call_result_50232)
        
        # Assigning a IfExp to a Name (line 562):
        
        # Assigning a IfExp to a Name (line 562):
        
        
        # Getting the type of 'ind' (line 562)
        ind_50233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 27), 'ind')
        int_50234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 33), 'int')
        # Applying the binary operator '<' (line 562)
        result_lt_50235 = python_operator(stypy.reporting.localization.Localization(__file__, 562, 27), '<', ind_50233, int_50234)
        
        # Testing the type of an if expression (line 562)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 562, 16), result_lt_50235)
        # SSA begins for if expression (line 562)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        # Getting the type of 'A' (line 562)
        A_50236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 16), 'A')
        # Getting the type of 'A' (line 562)
        A_50237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 20), 'A')
        # Obtaining the member 'T' of a type (line 562)
        T_50238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 20), A_50237, 'T')
        # Applying the binary operator '+' (line 562)
        result_add_50239 = python_operator(stypy.reporting.localization.Localization(__file__, 562, 16), '+', A_50236, T_50238)
        
        # SSA branch for the else part of an if expression (line 562)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'A' (line 562)
        A_50240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 40), 'A')
        
        # Call to conj(...): (line 562)
        # Processing the call keyword arguments (line 562)
        kwargs_50243 = {}
        # Getting the type of 'A' (line 562)
        A_50241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 44), 'A', False)
        # Obtaining the member 'conj' of a type (line 562)
        conj_50242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 44), A_50241, 'conj')
        # Calling conj(args, kwargs) (line 562)
        conj_call_result_50244 = invoke(stypy.reporting.localization.Localization(__file__, 562, 44), conj_50242, *[], **kwargs_50243)
        
        # Obtaining the member 'T' of a type (line 562)
        T_50245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 44), conj_call_result_50244, 'T')
        # Applying the binary operator '+' (line 562)
        result_add_50246 = python_operator(stypy.reporting.localization.Localization(__file__, 562, 40), '+', A_50240, T_50245)
        
        # SSA join for if expression (line 562)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_50247 = union_type.UnionType.add(result_add_50239, result_add_50246)
        
        # Assigning a type to the variable 'A' (line 562)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 12), 'A', if_exp_50247)
        
        # Assigning a Call to a Tuple (line 563):
        
        # Assigning a Subscript to a Name (line 563):
        
        # Obtaining the type of the subscript
        int_50248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 12), 'int')
        
        # Call to tril_indices(...): (line 563)
        # Processing the call arguments (line 563)
        # Getting the type of 'n' (line 563)
        n_50250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 32), 'n', False)
        # Processing the call keyword arguments (line 563)
        kwargs_50251 = {}
        # Getting the type of 'tril_indices' (line 563)
        tril_indices_50249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 563)
        tril_indices_call_result_50252 = invoke(stypy.reporting.localization.Localization(__file__, 563, 19), tril_indices_50249, *[n_50250], **kwargs_50251)
        
        # Obtaining the member '__getitem__' of a type (line 563)
        getitem___50253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 12), tril_indices_call_result_50252, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 563)
        subscript_call_result_50254 = invoke(stypy.reporting.localization.Localization(__file__, 563, 12), getitem___50253, int_50248)
        
        # Assigning a type to the variable 'tuple_var_assignment_46682' (line 563)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 12), 'tuple_var_assignment_46682', subscript_call_result_50254)
        
        # Assigning a Subscript to a Name (line 563):
        
        # Obtaining the type of the subscript
        int_50255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 12), 'int')
        
        # Call to tril_indices(...): (line 563)
        # Processing the call arguments (line 563)
        # Getting the type of 'n' (line 563)
        n_50257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 32), 'n', False)
        # Processing the call keyword arguments (line 563)
        kwargs_50258 = {}
        # Getting the type of 'tril_indices' (line 563)
        tril_indices_50256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 563)
        tril_indices_call_result_50259 = invoke(stypy.reporting.localization.Localization(__file__, 563, 19), tril_indices_50256, *[n_50257], **kwargs_50258)
        
        # Obtaining the member '__getitem__' of a type (line 563)
        getitem___50260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 12), tril_indices_call_result_50259, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 563)
        subscript_call_result_50261 = invoke(stypy.reporting.localization.Localization(__file__, 563, 12), getitem___50260, int_50255)
        
        # Assigning a type to the variable 'tuple_var_assignment_46683' (line 563)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 12), 'tuple_var_assignment_46683', subscript_call_result_50261)
        
        # Assigning a Name to a Name (line 563):
        # Getting the type of 'tuple_var_assignment_46682' (line 563)
        tuple_var_assignment_46682_50262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 12), 'tuple_var_assignment_46682')
        # Assigning a type to the variable 'c' (line 563)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 12), 'c', tuple_var_assignment_46682_50262)
        
        # Assigning a Name to a Name (line 563):
        # Getting the type of 'tuple_var_assignment_46683' (line 563)
        tuple_var_assignment_46683_50263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 12), 'tuple_var_assignment_46683')
        # Assigning a type to the variable 'r' (line 563)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 15), 'r', tuple_var_assignment_46683_50263)
        
        # Assigning a Subscript to a Name (line 564):
        
        # Assigning a Subscript to a Name (line 564):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 564)
        tuple_50264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 564)
        # Adding element type (line 564)
        # Getting the type of 'r' (line 564)
        r_50265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 19), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 19), tuple_50264, r_50265)
        # Adding element type (line 564)
        # Getting the type of 'c' (line 564)
        c_50266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 22), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 564, 19), tuple_50264, c_50266)
        
        # Getting the type of 'A' (line 564)
        A_50267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 17), 'A')
        # Obtaining the member '__getitem__' of a type (line 564)
        getitem___50268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 17), A_50267, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 564)
        subscript_call_result_50269 = invoke(stypy.reporting.localization.Localization(__file__, 564, 17), getitem___50268, tuple_50264)
        
        # Assigning a type to the variable 'Ap' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 12), 'Ap', subscript_call_result_50269)
        
        # Assigning a Call to a Name (line 565):
        
        # Assigning a Call to a Name (line 565):
        
        # Call to astype(...): (line 565)
        # Processing the call arguments (line 565)
        # Getting the type of 'dtype' (line 565)
        dtype_50275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 31), 'dtype', False)
        # Processing the call keyword arguments (line 565)
        kwargs_50276 = {}
        
        # Call to rand(...): (line 565)
        # Processing the call arguments (line 565)
        # Getting the type of 'n' (line 565)
        n_50271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 21), 'n', False)
        # Processing the call keyword arguments (line 565)
        kwargs_50272 = {}
        # Getting the type of 'rand' (line 565)
        rand_50270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 565)
        rand_call_result_50273 = invoke(stypy.reporting.localization.Localization(__file__, 565, 16), rand_50270, *[n_50271], **kwargs_50272)
        
        # Obtaining the member 'astype' of a type (line 565)
        astype_50274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 16), rand_call_result_50273, 'astype')
        # Calling astype(args, kwargs) (line 565)
        astype_call_result_50277 = invoke(stypy.reporting.localization.Localization(__file__, 565, 16), astype_50274, *[dtype_50275], **kwargs_50276)
        
        # Assigning a type to the variable 'x' (line 565)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 565, 12), 'x', astype_call_result_50277)
        
        # Assigning a Call to a Name (line 566):
        
        # Assigning a Call to a Name (line 566):
        
        # Call to (...): (line 566)
        # Processing the call arguments (line 566)
        float_50288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 57), 'float')
        # Processing the call keyword arguments (line 566)
        kwargs_50289 = {}
        
        # Obtaining the type of the subscript
        
        # Call to mod(...): (line 566)
        # Processing the call arguments (line 566)
        # Getting the type of 'ind' (line 566)
        ind_50279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 48), 'ind', False)
        int_50280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 53), 'int')
        # Processing the call keyword arguments (line 566)
        kwargs_50281 = {}
        # Getting the type of 'mod' (line 566)
        mod_50278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 44), 'mod', False)
        # Calling mod(args, kwargs) (line 566)
        mod_call_result_50282 = invoke(stypy.reporting.localization.Localization(__file__, 566, 44), mod_50278, *[ind_50279, int_50280], **kwargs_50281)
        
        # Getting the type of 'DTYPES' (line 566)
        DTYPES_50283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 21), 'DTYPES', False)
        # Getting the type of 'COMPLEX_DTYPES' (line 566)
        COMPLEX_DTYPES_50284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 28), 'COMPLEX_DTYPES', False)
        # Applying the binary operator '+' (line 566)
        result_add_50285 = python_operator(stypy.reporting.localization.Localization(__file__, 566, 21), '+', DTYPES_50283, COMPLEX_DTYPES_50284)
        
        # Obtaining the member '__getitem__' of a type (line 566)
        getitem___50286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 21), result_add_50285, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 566)
        subscript_call_result_50287 = invoke(stypy.reporting.localization.Localization(__file__, 566, 21), getitem___50286, mod_call_result_50282)
        
        # Calling (args, kwargs) (line 566)
        _call_result_50290 = invoke(stypy.reporting.localization.Localization(__file__, 566, 21), subscript_call_result_50287, *[float_50288], **kwargs_50289)
        
        # Assigning a type to the variable 'alpha' (line 566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 12), 'alpha', _call_result_50290)
        
        
        # Getting the type of 'ind' (line 568)
        ind_50291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 15), 'ind')
        int_50292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 568, 21), 'int')
        # Applying the binary operator '>' (line 568)
        result_gt_50293 = python_operator(stypy.reporting.localization.Localization(__file__, 568, 15), '>', ind_50291, int_50292)
        
        # Testing the type of an if condition (line 568)
        if_condition_50294 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 568, 12), result_gt_50293)
        # Assigning a type to the variable 'if_condition_50294' (line 568)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 568, 12), 'if_condition_50294', if_condition_50294)
        # SSA begins for if statement (line 568)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 569):
        
        # Assigning a Subscript to a Name (line 569):
        
        # Obtaining the type of the subscript
        int_50295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 16), 'int')
        
        # Call to get_blas_funcs(...): (line 569)
        # Processing the call arguments (line 569)
        
        # Obtaining an instance of the builtin type 'tuple' (line 569)
        tuple_50297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 569)
        # Adding element type (line 569)
        str_50298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 40), 'str', 'hpr')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 40), tuple_50297, str_50298)
        
        # Processing the call keyword arguments (line 569)
        # Getting the type of 'dtype' (line 569)
        dtype_50299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 55), 'dtype', False)
        keyword_50300 = dtype_50299
        kwargs_50301 = {'dtype': keyword_50300}
        # Getting the type of 'get_blas_funcs' (line 569)
        get_blas_funcs_50296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 24), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 569)
        get_blas_funcs_call_result_50302 = invoke(stypy.reporting.localization.Localization(__file__, 569, 24), get_blas_funcs_50296, *[tuple_50297], **kwargs_50301)
        
        # Obtaining the member '__getitem__' of a type (line 569)
        getitem___50303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 16), get_blas_funcs_call_result_50302, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 569)
        subscript_call_result_50304 = invoke(stypy.reporting.localization.Localization(__file__, 569, 16), getitem___50303, int_50295)
        
        # Assigning a type to the variable 'tuple_var_assignment_46684' (line 569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 569, 16), 'tuple_var_assignment_46684', subscript_call_result_50304)
        
        # Assigning a Name to a Name (line 569):
        # Getting the type of 'tuple_var_assignment_46684' (line 569)
        tuple_var_assignment_46684_50305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 16), 'tuple_var_assignment_46684')
        # Assigning a type to the variable 'func' (line 569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 569, 16), 'func', tuple_var_assignment_46684_50305)
        
        # Assigning a BinOp to a Name (line 570):
        
        # Assigning a BinOp to a Name (line 570):
        # Getting the type of 'alpha' (line 570)
        alpha_50306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 21), 'alpha')
        
        # Call to dot(...): (line 570)
        # Processing the call arguments (line 570)
        
        # Call to conj(...): (line 570)
        # Processing the call keyword arguments (line 570)
        kwargs_50319 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'None' (line 570)
        None_50313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 46), 'None', False)
        slice_50314 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 570, 44), None, None, None)
        # Getting the type of 'x' (line 570)
        x_50315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 44), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 570)
        getitem___50316 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 44), x_50315, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 570)
        subscript_call_result_50317 = invoke(stypy.reporting.localization.Localization(__file__, 570, 44), getitem___50316, (None_50313, slice_50314))
        
        # Obtaining the member 'conj' of a type (line 570)
        conj_50318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 44), subscript_call_result_50317, 'conj')
        # Calling conj(args, kwargs) (line 570)
        conj_call_result_50320 = invoke(stypy.reporting.localization.Localization(__file__, 570, 44), conj_50318, *[], **kwargs_50319)
        
        # Processing the call keyword arguments (line 570)
        kwargs_50321 = {}
        
        # Obtaining the type of the subscript
        slice_50307 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 570, 29), None, None, None)
        # Getting the type of 'None' (line 570)
        None_50308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 34), 'None', False)
        # Getting the type of 'x' (line 570)
        x_50309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 29), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 570)
        getitem___50310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 29), x_50309, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 570)
        subscript_call_result_50311 = invoke(stypy.reporting.localization.Localization(__file__, 570, 29), getitem___50310, (slice_50307, None_50308))
        
        # Obtaining the member 'dot' of a type (line 570)
        dot_50312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 29), subscript_call_result_50311, 'dot')
        # Calling dot(args, kwargs) (line 570)
        dot_call_result_50322 = invoke(stypy.reporting.localization.Localization(__file__, 570, 29), dot_50312, *[conj_call_result_50320], **kwargs_50321)
        
        # Applying the binary operator '*' (line 570)
        result_mul_50323 = python_operator(stypy.reporting.localization.Localization(__file__, 570, 21), '*', alpha_50306, dot_call_result_50322)
        
        # Getting the type of 'A' (line 570)
        A_50324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 65), 'A')
        # Applying the binary operator '+' (line 570)
        result_add_50325 = python_operator(stypy.reporting.localization.Localization(__file__, 570, 21), '+', result_mul_50323, A_50324)
        
        # Assigning a type to the variable 'y2' (line 570)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 570, 16), 'y2', result_add_50325)
        # SSA branch for the else part of an if statement (line 568)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 572):
        
        # Assigning a Subscript to a Name (line 572):
        
        # Obtaining the type of the subscript
        int_50326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 16), 'int')
        
        # Call to get_blas_funcs(...): (line 572)
        # Processing the call arguments (line 572)
        
        # Obtaining an instance of the builtin type 'tuple' (line 572)
        tuple_50328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 572)
        # Adding element type (line 572)
        str_50329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 40), 'str', 'spr')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 572, 40), tuple_50328, str_50329)
        
        # Processing the call keyword arguments (line 572)
        # Getting the type of 'dtype' (line 572)
        dtype_50330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 55), 'dtype', False)
        keyword_50331 = dtype_50330
        kwargs_50332 = {'dtype': keyword_50331}
        # Getting the type of 'get_blas_funcs' (line 572)
        get_blas_funcs_50327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 24), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 572)
        get_blas_funcs_call_result_50333 = invoke(stypy.reporting.localization.Localization(__file__, 572, 24), get_blas_funcs_50327, *[tuple_50328], **kwargs_50332)
        
        # Obtaining the member '__getitem__' of a type (line 572)
        getitem___50334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 16), get_blas_funcs_call_result_50333, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 572)
        subscript_call_result_50335 = invoke(stypy.reporting.localization.Localization(__file__, 572, 16), getitem___50334, int_50326)
        
        # Assigning a type to the variable 'tuple_var_assignment_46685' (line 572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 16), 'tuple_var_assignment_46685', subscript_call_result_50335)
        
        # Assigning a Name to a Name (line 572):
        # Getting the type of 'tuple_var_assignment_46685' (line 572)
        tuple_var_assignment_46685_50336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 16), 'tuple_var_assignment_46685')
        # Assigning a type to the variable 'func' (line 572)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 16), 'func', tuple_var_assignment_46685_50336)
        
        # Assigning a BinOp to a Name (line 573):
        
        # Assigning a BinOp to a Name (line 573):
        # Getting the type of 'alpha' (line 573)
        alpha_50337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 21), 'alpha')
        
        # Call to dot(...): (line 573)
        # Processing the call arguments (line 573)
        
        # Obtaining the type of the subscript
        # Getting the type of 'None' (line 573)
        None_50344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 46), 'None', False)
        slice_50345 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 573, 44), None, None, None)
        # Getting the type of 'x' (line 573)
        x_50346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 44), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 573)
        getitem___50347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 44), x_50346, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 573)
        subscript_call_result_50348 = invoke(stypy.reporting.localization.Localization(__file__, 573, 44), getitem___50347, (None_50344, slice_50345))
        
        # Processing the call keyword arguments (line 573)
        kwargs_50349 = {}
        
        # Obtaining the type of the subscript
        slice_50338 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 573, 29), None, None, None)
        # Getting the type of 'None' (line 573)
        None_50339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 34), 'None', False)
        # Getting the type of 'x' (line 573)
        x_50340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 29), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 573)
        getitem___50341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 29), x_50340, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 573)
        subscript_call_result_50342 = invoke(stypy.reporting.localization.Localization(__file__, 573, 29), getitem___50341, (slice_50338, None_50339))
        
        # Obtaining the member 'dot' of a type (line 573)
        dot_50343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 29), subscript_call_result_50342, 'dot')
        # Calling dot(args, kwargs) (line 573)
        dot_call_result_50350 = invoke(stypy.reporting.localization.Localization(__file__, 573, 29), dot_50343, *[subscript_call_result_50348], **kwargs_50349)
        
        # Applying the binary operator '*' (line 573)
        result_mul_50351 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 21), '*', alpha_50337, dot_call_result_50350)
        
        # Getting the type of 'A' (line 573)
        A_50352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 58), 'A')
        # Applying the binary operator '+' (line 573)
        result_add_50353 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 21), '+', result_mul_50351, A_50352)
        
        # Assigning a type to the variable 'y2' (line 573)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 573, 16), 'y2', result_add_50353)
        # SSA join for if statement (line 568)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 575):
        
        # Assigning a Call to a Name (line 575):
        
        # Call to func(...): (line 575)
        # Processing the call keyword arguments (line 575)
        # Getting the type of 'n' (line 575)
        n_50355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 24), 'n', False)
        keyword_50356 = n_50355
        # Getting the type of 'alpha' (line 575)
        alpha_50357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 33), 'alpha', False)
        keyword_50358 = alpha_50357
        # Getting the type of 'Ap' (line 575)
        Ap_50359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 43), 'Ap', False)
        keyword_50360 = Ap_50359
        # Getting the type of 'x' (line 575)
        x_50361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 49), 'x', False)
        keyword_50362 = x_50361
        kwargs_50363 = {'ap': keyword_50360, 'alpha': keyword_50358, 'x': keyword_50362, 'n': keyword_50356}
        # Getting the type of 'func' (line 575)
        func_50354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 17), 'func', False)
        # Calling func(args, kwargs) (line 575)
        func_call_result_50364 = invoke(stypy.reporting.localization.Localization(__file__, 575, 17), func_50354, *[], **kwargs_50363)
        
        # Assigning a type to the variable 'y1' (line 575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'y1', func_call_result_50364)
        
        # Assigning a Call to a Name (line 576):
        
        # Assigning a Call to a Name (line 576):
        
        # Call to zeros(...): (line 576)
        # Processing the call arguments (line 576)
        
        # Obtaining an instance of the builtin type 'tuple' (line 576)
        tuple_50366 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 576)
        # Adding element type (line 576)
        int_50367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 25), tuple_50366, int_50367)
        # Adding element type (line 576)
        int_50368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 576, 25), tuple_50366, int_50368)
        
        # Processing the call keyword arguments (line 576)
        # Getting the type of 'dtype' (line 576)
        dtype_50369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 38), 'dtype', False)
        keyword_50370 = dtype_50369
        kwargs_50371 = {'dtype': keyword_50370}
        # Getting the type of 'zeros' (line 576)
        zeros_50365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 18), 'zeros', False)
        # Calling zeros(args, kwargs) (line 576)
        zeros_call_result_50372 = invoke(stypy.reporting.localization.Localization(__file__, 576, 18), zeros_50365, *[tuple_50366], **kwargs_50371)
        
        # Assigning a type to the variable 'y1f' (line 576)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 576, 12), 'y1f', zeros_call_result_50372)
        
        # Assigning a Name to a Subscript (line 577):
        
        # Assigning a Name to a Subscript (line 577):
        # Getting the type of 'y1' (line 577)
        y1_50373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 24), 'y1')
        # Getting the type of 'y1f' (line 577)
        y1f_50374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 12), 'y1f')
        
        # Obtaining an instance of the builtin type 'tuple' (line 577)
        tuple_50375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 577, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 577)
        # Adding element type (line 577)
        # Getting the type of 'r' (line 577)
        r_50376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 16), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 16), tuple_50375, r_50376)
        # Adding element type (line 577)
        # Getting the type of 'c' (line 577)
        c_50377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 19), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 16), tuple_50375, c_50377)
        
        # Storing an element on a container (line 577)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 577, 12), y1f_50374, (tuple_50375, y1_50373))
        
        # Assigning a IfExp to a Subscript (line 578):
        
        # Assigning a IfExp to a Subscript (line 578):
        
        
        # Getting the type of 'ind' (line 578)
        ind_50378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 37), 'ind')
        int_50379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 43), 'int')
        # Applying the binary operator '>' (line 578)
        result_gt_50380 = python_operator(stypy.reporting.localization.Localization(__file__, 578, 37), '>', ind_50378, int_50379)
        
        # Testing the type of an if expression (line 578)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 578, 24), result_gt_50380)
        # SSA begins for if expression (line 578)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to conj(...): (line 578)
        # Processing the call keyword arguments (line 578)
        kwargs_50383 = {}
        # Getting the type of 'y1' (line 578)
        y1_50381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 24), 'y1', False)
        # Obtaining the member 'conj' of a type (line 578)
        conj_50382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 24), y1_50381, 'conj')
        # Calling conj(args, kwargs) (line 578)
        conj_call_result_50384 = invoke(stypy.reporting.localization.Localization(__file__, 578, 24), conj_50382, *[], **kwargs_50383)
        
        # SSA branch for the else part of an if expression (line 578)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'y1' (line 578)
        y1_50385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 50), 'y1')
        # SSA join for if expression (line 578)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_50386 = union_type.UnionType.add(conj_call_result_50384, y1_50385)
        
        # Getting the type of 'y1f' (line 578)
        y1f_50387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 12), 'y1f')
        
        # Obtaining an instance of the builtin type 'tuple' (line 578)
        tuple_50388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 578)
        # Adding element type (line 578)
        # Getting the type of 'c' (line 578)
        c_50389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 16), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 16), tuple_50388, c_50389)
        # Adding element type (line 578)
        # Getting the type of 'r' (line 578)
        r_50390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 19), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 16), tuple_50388, r_50390)
        
        # Storing an element on a container (line 578)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 12), y1f_50387, (tuple_50388, if_exp_50386))
        
        # Call to assert_array_almost_equal(...): (line 579)
        # Processing the call arguments (line 579)
        # Getting the type of 'y1f' (line 579)
        y1f_50392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 38), 'y1f', False)
        # Getting the type of 'y2' (line 579)
        y2_50393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 43), 'y2', False)
        # Processing the call keyword arguments (line 579)
        kwargs_50394 = {}
        # Getting the type of 'assert_array_almost_equal' (line 579)
        assert_array_almost_equal_50391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 579)
        assert_array_almost_equal_call_result_50395 = invoke(stypy.reporting.localization.Localization(__file__, 579, 12), assert_array_almost_equal_50391, *[y1f_50392, y2_50393], **kwargs_50394)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_spr_hpr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spr_hpr' in the type store
        # Getting the type of 'stypy_return_type' (line 554)
        stypy_return_type_50396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_50396)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spr_hpr'
        return stypy_return_type_50396


    @norecursion
    def test_spr2_hpr2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_spr2_hpr2'
        module_type_store = module_type_store.open_function_context('test_spr2_hpr2', 581, 4, False)
        # Assigning a type to the variable 'self' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_spr2_hpr2')
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_spr2_hpr2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_spr2_hpr2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_spr2_hpr2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_spr2_hpr2(...)' code ##################

        
        # Call to seed(...): (line 582)
        # Processing the call arguments (line 582)
        int_50398 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 13), 'int')
        # Processing the call keyword arguments (line 582)
        kwargs_50399 = {}
        # Getting the type of 'seed' (line 582)
        seed_50397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 582)
        seed_call_result_50400 = invoke(stypy.reporting.localization.Localization(__file__, 582, 8), seed_50397, *[int_50398], **kwargs_50399)
        
        
        
        # Call to enumerate(...): (line 583)
        # Processing the call arguments (line 583)
        # Getting the type of 'DTYPES' (line 583)
        DTYPES_50402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 36), 'DTYPES', False)
        # Processing the call keyword arguments (line 583)
        kwargs_50403 = {}
        # Getting the type of 'enumerate' (line 583)
        enumerate_50401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 583)
        enumerate_call_result_50404 = invoke(stypy.reporting.localization.Localization(__file__, 583, 26), enumerate_50401, *[DTYPES_50402], **kwargs_50403)
        
        # Testing the type of a for loop iterable (line 583)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 583, 8), enumerate_call_result_50404)
        # Getting the type of the for loop variable (line 583)
        for_loop_var_50405 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 583, 8), enumerate_call_result_50404)
        # Assigning a type to the variable 'ind' (line 583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 8), for_loop_var_50405))
        # Assigning a type to the variable 'dtype' (line 583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 8), for_loop_var_50405))
        # SSA begins for a for statement (line 583)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 584):
        
        # Assigning a Num to a Name (line 584):
        int_50406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 16), 'int')
        # Assigning a type to the variable 'n' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 12), 'n', int_50406)
        
        # Assigning a Call to a Name (line 585):
        
        # Assigning a Call to a Name (line 585):
        
        # Call to astype(...): (line 585)
        # Processing the call arguments (line 585)
        # Getting the type of 'dtype' (line 585)
        dtype_50413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 34), 'dtype', False)
        # Processing the call keyword arguments (line 585)
        kwargs_50414 = {}
        
        # Call to rand(...): (line 585)
        # Processing the call arguments (line 585)
        # Getting the type of 'n' (line 585)
        n_50408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 21), 'n', False)
        # Getting the type of 'n' (line 585)
        n_50409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 24), 'n', False)
        # Processing the call keyword arguments (line 585)
        kwargs_50410 = {}
        # Getting the type of 'rand' (line 585)
        rand_50407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 585)
        rand_call_result_50411 = invoke(stypy.reporting.localization.Localization(__file__, 585, 16), rand_50407, *[n_50408, n_50409], **kwargs_50410)
        
        # Obtaining the member 'astype' of a type (line 585)
        astype_50412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 16), rand_call_result_50411, 'astype')
        # Calling astype(args, kwargs) (line 585)
        astype_call_result_50415 = invoke(stypy.reporting.localization.Localization(__file__, 585, 16), astype_50412, *[dtype_50413], **kwargs_50414)
        
        # Assigning a type to the variable 'A' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 12), 'A', astype_call_result_50415)
        
        
        # Getting the type of 'ind' (line 586)
        ind_50416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 15), 'ind')
        int_50417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 21), 'int')
        # Applying the binary operator '>' (line 586)
        result_gt_50418 = python_operator(stypy.reporting.localization.Localization(__file__, 586, 15), '>', ind_50416, int_50417)
        
        # Testing the type of an if condition (line 586)
        if_condition_50419 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 586, 12), result_gt_50418)
        # Assigning a type to the variable 'if_condition_50419' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'if_condition_50419', if_condition_50419)
        # SSA begins for if statement (line 586)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'A' (line 587)
        A_50420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 16), 'A')
        
        # Call to rand(...): (line 587)
        # Processing the call arguments (line 587)
        # Getting the type of 'n' (line 587)
        n_50422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 26), 'n', False)
        # Getting the type of 'n' (line 587)
        n_50423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 29), 'n', False)
        # Processing the call keyword arguments (line 587)
        kwargs_50424 = {}
        # Getting the type of 'rand' (line 587)
        rand_50421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 21), 'rand', False)
        # Calling rand(args, kwargs) (line 587)
        rand_call_result_50425 = invoke(stypy.reporting.localization.Localization(__file__, 587, 21), rand_50421, *[n_50422, n_50423], **kwargs_50424)
        
        complex_50426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 32), 'complex')
        # Applying the binary operator '*' (line 587)
        result_mul_50427 = python_operator(stypy.reporting.localization.Localization(__file__, 587, 21), '*', rand_call_result_50425, complex_50426)
        
        # Applying the binary operator '+=' (line 587)
        result_iadd_50428 = python_operator(stypy.reporting.localization.Localization(__file__, 587, 16), '+=', A_50420, result_mul_50427)
        # Assigning a type to the variable 'A' (line 587)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 16), 'A', result_iadd_50428)
        
        # SSA join for if statement (line 586)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 588):
        
        # Assigning a Call to a Name (line 588):
        
        # Call to astype(...): (line 588)
        # Processing the call arguments (line 588)
        # Getting the type of 'dtype' (line 588)
        dtype_50431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 25), 'dtype', False)
        # Processing the call keyword arguments (line 588)
        kwargs_50432 = {}
        # Getting the type of 'A' (line 588)
        A_50429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 16), 'A', False)
        # Obtaining the member 'astype' of a type (line 588)
        astype_50430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 16), A_50429, 'astype')
        # Calling astype(args, kwargs) (line 588)
        astype_call_result_50433 = invoke(stypy.reporting.localization.Localization(__file__, 588, 16), astype_50430, *[dtype_50431], **kwargs_50432)
        
        # Assigning a type to the variable 'A' (line 588)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 588, 12), 'A', astype_call_result_50433)
        
        # Assigning a IfExp to a Name (line 589):
        
        # Assigning a IfExp to a Name (line 589):
        
        
        # Getting the type of 'ind' (line 589)
        ind_50434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 27), 'ind')
        int_50435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 589, 33), 'int')
        # Applying the binary operator '<' (line 589)
        result_lt_50436 = python_operator(stypy.reporting.localization.Localization(__file__, 589, 27), '<', ind_50434, int_50435)
        
        # Testing the type of an if expression (line 589)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 589, 16), result_lt_50436)
        # SSA begins for if expression (line 589)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        # Getting the type of 'A' (line 589)
        A_50437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 16), 'A')
        # Getting the type of 'A' (line 589)
        A_50438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 20), 'A')
        # Obtaining the member 'T' of a type (line 589)
        T_50439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 20), A_50438, 'T')
        # Applying the binary operator '+' (line 589)
        result_add_50440 = python_operator(stypy.reporting.localization.Localization(__file__, 589, 16), '+', A_50437, T_50439)
        
        # SSA branch for the else part of an if expression (line 589)
        module_type_store.open_ssa_branch('if expression else')
        # Getting the type of 'A' (line 589)
        A_50441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 40), 'A')
        
        # Call to conj(...): (line 589)
        # Processing the call keyword arguments (line 589)
        kwargs_50444 = {}
        # Getting the type of 'A' (line 589)
        A_50442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 44), 'A', False)
        # Obtaining the member 'conj' of a type (line 589)
        conj_50443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 44), A_50442, 'conj')
        # Calling conj(args, kwargs) (line 589)
        conj_call_result_50445 = invoke(stypy.reporting.localization.Localization(__file__, 589, 44), conj_50443, *[], **kwargs_50444)
        
        # Obtaining the member 'T' of a type (line 589)
        T_50446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 44), conj_call_result_50445, 'T')
        # Applying the binary operator '+' (line 589)
        result_add_50447 = python_operator(stypy.reporting.localization.Localization(__file__, 589, 40), '+', A_50441, T_50446)
        
        # SSA join for if expression (line 589)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_50448 = union_type.UnionType.add(result_add_50440, result_add_50447)
        
        # Assigning a type to the variable 'A' (line 589)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 589, 12), 'A', if_exp_50448)
        
        # Assigning a Call to a Tuple (line 590):
        
        # Assigning a Subscript to a Name (line 590):
        
        # Obtaining the type of the subscript
        int_50449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 12), 'int')
        
        # Call to tril_indices(...): (line 590)
        # Processing the call arguments (line 590)
        # Getting the type of 'n' (line 590)
        n_50451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 32), 'n', False)
        # Processing the call keyword arguments (line 590)
        kwargs_50452 = {}
        # Getting the type of 'tril_indices' (line 590)
        tril_indices_50450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 590)
        tril_indices_call_result_50453 = invoke(stypy.reporting.localization.Localization(__file__, 590, 19), tril_indices_50450, *[n_50451], **kwargs_50452)
        
        # Obtaining the member '__getitem__' of a type (line 590)
        getitem___50454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 12), tril_indices_call_result_50453, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 590)
        subscript_call_result_50455 = invoke(stypy.reporting.localization.Localization(__file__, 590, 12), getitem___50454, int_50449)
        
        # Assigning a type to the variable 'tuple_var_assignment_46686' (line 590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'tuple_var_assignment_46686', subscript_call_result_50455)
        
        # Assigning a Subscript to a Name (line 590):
        
        # Obtaining the type of the subscript
        int_50456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 590, 12), 'int')
        
        # Call to tril_indices(...): (line 590)
        # Processing the call arguments (line 590)
        # Getting the type of 'n' (line 590)
        n_50458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 32), 'n', False)
        # Processing the call keyword arguments (line 590)
        kwargs_50459 = {}
        # Getting the type of 'tril_indices' (line 590)
        tril_indices_50457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 590)
        tril_indices_call_result_50460 = invoke(stypy.reporting.localization.Localization(__file__, 590, 19), tril_indices_50457, *[n_50458], **kwargs_50459)
        
        # Obtaining the member '__getitem__' of a type (line 590)
        getitem___50461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 12), tril_indices_call_result_50460, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 590)
        subscript_call_result_50462 = invoke(stypy.reporting.localization.Localization(__file__, 590, 12), getitem___50461, int_50456)
        
        # Assigning a type to the variable 'tuple_var_assignment_46687' (line 590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'tuple_var_assignment_46687', subscript_call_result_50462)
        
        # Assigning a Name to a Name (line 590):
        # Getting the type of 'tuple_var_assignment_46686' (line 590)
        tuple_var_assignment_46686_50463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'tuple_var_assignment_46686')
        # Assigning a type to the variable 'c' (line 590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'c', tuple_var_assignment_46686_50463)
        
        # Assigning a Name to a Name (line 590):
        # Getting the type of 'tuple_var_assignment_46687' (line 590)
        tuple_var_assignment_46687_50464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 12), 'tuple_var_assignment_46687')
        # Assigning a type to the variable 'r' (line 590)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 590, 15), 'r', tuple_var_assignment_46687_50464)
        
        # Assigning a Subscript to a Name (line 591):
        
        # Assigning a Subscript to a Name (line 591):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 591)
        tuple_50465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 591)
        # Adding element type (line 591)
        # Getting the type of 'r' (line 591)
        r_50466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 19), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 19), tuple_50465, r_50466)
        # Adding element type (line 591)
        # Getting the type of 'c' (line 591)
        c_50467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 22), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 591, 19), tuple_50465, c_50467)
        
        # Getting the type of 'A' (line 591)
        A_50468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 17), 'A')
        # Obtaining the member '__getitem__' of a type (line 591)
        getitem___50469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 591, 17), A_50468, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 591)
        subscript_call_result_50470 = invoke(stypy.reporting.localization.Localization(__file__, 591, 17), getitem___50469, tuple_50465)
        
        # Assigning a type to the variable 'Ap' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 12), 'Ap', subscript_call_result_50470)
        
        # Assigning a Call to a Name (line 592):
        
        # Assigning a Call to a Name (line 592):
        
        # Call to astype(...): (line 592)
        # Processing the call arguments (line 592)
        # Getting the type of 'dtype' (line 592)
        dtype_50476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 31), 'dtype', False)
        # Processing the call keyword arguments (line 592)
        kwargs_50477 = {}
        
        # Call to rand(...): (line 592)
        # Processing the call arguments (line 592)
        # Getting the type of 'n' (line 592)
        n_50472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 21), 'n', False)
        # Processing the call keyword arguments (line 592)
        kwargs_50473 = {}
        # Getting the type of 'rand' (line 592)
        rand_50471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 592)
        rand_call_result_50474 = invoke(stypy.reporting.localization.Localization(__file__, 592, 16), rand_50471, *[n_50472], **kwargs_50473)
        
        # Obtaining the member 'astype' of a type (line 592)
        astype_50475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 16), rand_call_result_50474, 'astype')
        # Calling astype(args, kwargs) (line 592)
        astype_call_result_50478 = invoke(stypy.reporting.localization.Localization(__file__, 592, 16), astype_50475, *[dtype_50476], **kwargs_50477)
        
        # Assigning a type to the variable 'x' (line 592)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 12), 'x', astype_call_result_50478)
        
        # Assigning a Call to a Name (line 593):
        
        # Assigning a Call to a Name (line 593):
        
        # Call to astype(...): (line 593)
        # Processing the call arguments (line 593)
        # Getting the type of 'dtype' (line 593)
        dtype_50484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 31), 'dtype', False)
        # Processing the call keyword arguments (line 593)
        kwargs_50485 = {}
        
        # Call to rand(...): (line 593)
        # Processing the call arguments (line 593)
        # Getting the type of 'n' (line 593)
        n_50480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 21), 'n', False)
        # Processing the call keyword arguments (line 593)
        kwargs_50481 = {}
        # Getting the type of 'rand' (line 593)
        rand_50479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 593)
        rand_call_result_50482 = invoke(stypy.reporting.localization.Localization(__file__, 593, 16), rand_50479, *[n_50480], **kwargs_50481)
        
        # Obtaining the member 'astype' of a type (line 593)
        astype_50483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 16), rand_call_result_50482, 'astype')
        # Calling astype(args, kwargs) (line 593)
        astype_call_result_50486 = invoke(stypy.reporting.localization.Localization(__file__, 593, 16), astype_50483, *[dtype_50484], **kwargs_50485)
        
        # Assigning a type to the variable 'y' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 12), 'y', astype_call_result_50486)
        
        # Assigning a Call to a Name (line 594):
        
        # Assigning a Call to a Name (line 594):
        
        # Call to dtype(...): (line 594)
        # Processing the call arguments (line 594)
        int_50488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 26), 'int')
        # Processing the call keyword arguments (line 594)
        kwargs_50489 = {}
        # Getting the type of 'dtype' (line 594)
        dtype_50487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 20), 'dtype', False)
        # Calling dtype(args, kwargs) (line 594)
        dtype_call_result_50490 = invoke(stypy.reporting.localization.Localization(__file__, 594, 20), dtype_50487, *[int_50488], **kwargs_50489)
        
        # Assigning a type to the variable 'alpha' (line 594)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 12), 'alpha', dtype_call_result_50490)
        
        
        # Getting the type of 'ind' (line 596)
        ind_50491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 15), 'ind')
        int_50492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 21), 'int')
        # Applying the binary operator '>' (line 596)
        result_gt_50493 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 15), '>', ind_50491, int_50492)
        
        # Testing the type of an if condition (line 596)
        if_condition_50494 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 596, 12), result_gt_50493)
        # Assigning a type to the variable 'if_condition_50494' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'if_condition_50494', if_condition_50494)
        # SSA begins for if statement (line 596)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Tuple (line 597):
        
        # Assigning a Subscript to a Name (line 597):
        
        # Obtaining the type of the subscript
        int_50495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 16), 'int')
        
        # Call to get_blas_funcs(...): (line 597)
        # Processing the call arguments (line 597)
        
        # Obtaining an instance of the builtin type 'tuple' (line 597)
        tuple_50497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 597)
        # Adding element type (line 597)
        str_50498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 40), 'str', 'hpr2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 597, 40), tuple_50497, str_50498)
        
        # Processing the call keyword arguments (line 597)
        # Getting the type of 'dtype' (line 597)
        dtype_50499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 56), 'dtype', False)
        keyword_50500 = dtype_50499
        kwargs_50501 = {'dtype': keyword_50500}
        # Getting the type of 'get_blas_funcs' (line 597)
        get_blas_funcs_50496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 24), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 597)
        get_blas_funcs_call_result_50502 = invoke(stypy.reporting.localization.Localization(__file__, 597, 24), get_blas_funcs_50496, *[tuple_50497], **kwargs_50501)
        
        # Obtaining the member '__getitem__' of a type (line 597)
        getitem___50503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 16), get_blas_funcs_call_result_50502, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 597)
        subscript_call_result_50504 = invoke(stypy.reporting.localization.Localization(__file__, 597, 16), getitem___50503, int_50495)
        
        # Assigning a type to the variable 'tuple_var_assignment_46688' (line 597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 16), 'tuple_var_assignment_46688', subscript_call_result_50504)
        
        # Assigning a Name to a Name (line 597):
        # Getting the type of 'tuple_var_assignment_46688' (line 597)
        tuple_var_assignment_46688_50505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 16), 'tuple_var_assignment_46688')
        # Assigning a type to the variable 'func' (line 597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 16), 'func', tuple_var_assignment_46688_50505)
        # SSA branch for the else part of an if statement (line 596)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Tuple (line 599):
        
        # Assigning a Subscript to a Name (line 599):
        
        # Obtaining the type of the subscript
        int_50506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 16), 'int')
        
        # Call to get_blas_funcs(...): (line 599)
        # Processing the call arguments (line 599)
        
        # Obtaining an instance of the builtin type 'tuple' (line 599)
        tuple_50508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 40), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 599)
        # Adding element type (line 599)
        str_50509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 40), 'str', 'spr2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 599, 40), tuple_50508, str_50509)
        
        # Processing the call keyword arguments (line 599)
        # Getting the type of 'dtype' (line 599)
        dtype_50510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 56), 'dtype', False)
        keyword_50511 = dtype_50510
        kwargs_50512 = {'dtype': keyword_50511}
        # Getting the type of 'get_blas_funcs' (line 599)
        get_blas_funcs_50507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 24), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 599)
        get_blas_funcs_call_result_50513 = invoke(stypy.reporting.localization.Localization(__file__, 599, 24), get_blas_funcs_50507, *[tuple_50508], **kwargs_50512)
        
        # Obtaining the member '__getitem__' of a type (line 599)
        getitem___50514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 16), get_blas_funcs_call_result_50513, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 599)
        subscript_call_result_50515 = invoke(stypy.reporting.localization.Localization(__file__, 599, 16), getitem___50514, int_50506)
        
        # Assigning a type to the variable 'tuple_var_assignment_46689' (line 599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 16), 'tuple_var_assignment_46689', subscript_call_result_50515)
        
        # Assigning a Name to a Name (line 599):
        # Getting the type of 'tuple_var_assignment_46689' (line 599)
        tuple_var_assignment_46689_50516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 16), 'tuple_var_assignment_46689')
        # Assigning a type to the variable 'func' (line 599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 16), 'func', tuple_var_assignment_46689_50516)
        # SSA join for if statement (line 596)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a BinOp to a Name (line 601):
        
        # Assigning a BinOp to a Name (line 601):
        
        # Call to conj(...): (line 601)
        # Processing the call keyword arguments (line 601)
        kwargs_50519 = {}
        # Getting the type of 'alpha' (line 601)
        alpha_50517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 16), 'alpha', False)
        # Obtaining the member 'conj' of a type (line 601)
        conj_50518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 16), alpha_50517, 'conj')
        # Calling conj(args, kwargs) (line 601)
        conj_call_result_50520 = invoke(stypy.reporting.localization.Localization(__file__, 601, 16), conj_50518, *[], **kwargs_50519)
        
        
        # Call to dot(...): (line 601)
        # Processing the call arguments (line 601)
        
        # Call to conj(...): (line 601)
        # Processing the call keyword arguments (line 601)
        kwargs_50533 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'None' (line 601)
        None_50527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 48), 'None', False)
        slice_50528 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 601, 46), None, None, None)
        # Getting the type of 'y' (line 601)
        y_50529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 46), 'y', False)
        # Obtaining the member '__getitem__' of a type (line 601)
        getitem___50530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 46), y_50529, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 601)
        subscript_call_result_50531 = invoke(stypy.reporting.localization.Localization(__file__, 601, 46), getitem___50530, (None_50527, slice_50528))
        
        # Obtaining the member 'conj' of a type (line 601)
        conj_50532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 46), subscript_call_result_50531, 'conj')
        # Calling conj(args, kwargs) (line 601)
        conj_call_result_50534 = invoke(stypy.reporting.localization.Localization(__file__, 601, 46), conj_50532, *[], **kwargs_50533)
        
        # Processing the call keyword arguments (line 601)
        kwargs_50535 = {}
        
        # Obtaining the type of the subscript
        slice_50521 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 601, 31), None, None, None)
        # Getting the type of 'None' (line 601)
        None_50522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 36), 'None', False)
        # Getting the type of 'x' (line 601)
        x_50523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 31), 'x', False)
        # Obtaining the member '__getitem__' of a type (line 601)
        getitem___50524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 31), x_50523, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 601)
        subscript_call_result_50525 = invoke(stypy.reporting.localization.Localization(__file__, 601, 31), getitem___50524, (slice_50521, None_50522))
        
        # Obtaining the member 'dot' of a type (line 601)
        dot_50526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 31), subscript_call_result_50525, 'dot')
        # Calling dot(args, kwargs) (line 601)
        dot_call_result_50536 = invoke(stypy.reporting.localization.Localization(__file__, 601, 31), dot_50526, *[conj_call_result_50534], **kwargs_50535)
        
        # Applying the binary operator '*' (line 601)
        result_mul_50537 = python_operator(stypy.reporting.localization.Localization(__file__, 601, 16), '*', conj_call_result_50520, dot_call_result_50536)
        
        # Assigning a type to the variable 'u' (line 601)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 12), 'u', result_mul_50537)
        
        # Assigning a BinOp to a Name (line 602):
        
        # Assigning a BinOp to a Name (line 602):
        # Getting the type of 'A' (line 602)
        A_50538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 17), 'A')
        # Getting the type of 'u' (line 602)
        u_50539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 21), 'u')
        # Applying the binary operator '+' (line 602)
        result_add_50540 = python_operator(stypy.reporting.localization.Localization(__file__, 602, 17), '+', A_50538, u_50539)
        
        
        # Call to conj(...): (line 602)
        # Processing the call keyword arguments (line 602)
        kwargs_50543 = {}
        # Getting the type of 'u' (line 602)
        u_50541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 25), 'u', False)
        # Obtaining the member 'conj' of a type (line 602)
        conj_50542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 25), u_50541, 'conj')
        # Calling conj(args, kwargs) (line 602)
        conj_call_result_50544 = invoke(stypy.reporting.localization.Localization(__file__, 602, 25), conj_50542, *[], **kwargs_50543)
        
        # Obtaining the member 'T' of a type (line 602)
        T_50545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 602, 25), conj_call_result_50544, 'T')
        # Applying the binary operator '+' (line 602)
        result_add_50546 = python_operator(stypy.reporting.localization.Localization(__file__, 602, 23), '+', result_add_50540, T_50545)
        
        # Assigning a type to the variable 'y2' (line 602)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 12), 'y2', result_add_50546)
        
        # Assigning a Call to a Name (line 603):
        
        # Assigning a Call to a Name (line 603):
        
        # Call to func(...): (line 603)
        # Processing the call keyword arguments (line 603)
        # Getting the type of 'n' (line 603)
        n_50548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 24), 'n', False)
        keyword_50549 = n_50548
        # Getting the type of 'alpha' (line 603)
        alpha_50550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 33), 'alpha', False)
        keyword_50551 = alpha_50550
        # Getting the type of 'x' (line 603)
        x_50552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 42), 'x', False)
        keyword_50553 = x_50552
        # Getting the type of 'y' (line 603)
        y_50554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 47), 'y', False)
        keyword_50555 = y_50554
        # Getting the type of 'Ap' (line 603)
        Ap_50556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 53), 'Ap', False)
        keyword_50557 = Ap_50556
        kwargs_50558 = {'y': keyword_50555, 'alpha': keyword_50551, 'ap': keyword_50557, 'x': keyword_50553, 'n': keyword_50549}
        # Getting the type of 'func' (line 603)
        func_50547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 17), 'func', False)
        # Calling func(args, kwargs) (line 603)
        func_call_result_50559 = invoke(stypy.reporting.localization.Localization(__file__, 603, 17), func_50547, *[], **kwargs_50558)
        
        # Assigning a type to the variable 'y1' (line 603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 12), 'y1', func_call_result_50559)
        
        # Assigning a Call to a Name (line 604):
        
        # Assigning a Call to a Name (line 604):
        
        # Call to zeros(...): (line 604)
        # Processing the call arguments (line 604)
        
        # Obtaining an instance of the builtin type 'tuple' (line 604)
        tuple_50561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 25), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 604)
        # Adding element type (line 604)
        int_50562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 25), tuple_50561, int_50562)
        # Adding element type (line 604)
        int_50563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 604, 25), tuple_50561, int_50563)
        
        # Processing the call keyword arguments (line 604)
        # Getting the type of 'dtype' (line 604)
        dtype_50564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 38), 'dtype', False)
        keyword_50565 = dtype_50564
        kwargs_50566 = {'dtype': keyword_50565}
        # Getting the type of 'zeros' (line 604)
        zeros_50560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 18), 'zeros', False)
        # Calling zeros(args, kwargs) (line 604)
        zeros_call_result_50567 = invoke(stypy.reporting.localization.Localization(__file__, 604, 18), zeros_50560, *[tuple_50561], **kwargs_50566)
        
        # Assigning a type to the variable 'y1f' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 12), 'y1f', zeros_call_result_50567)
        
        # Assigning a Name to a Subscript (line 605):
        
        # Assigning a Name to a Subscript (line 605):
        # Getting the type of 'y1' (line 605)
        y1_50568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 24), 'y1')
        # Getting the type of 'y1f' (line 605)
        y1f_50569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 12), 'y1f')
        
        # Obtaining an instance of the builtin type 'tuple' (line 605)
        tuple_50570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 605)
        # Adding element type (line 605)
        # Getting the type of 'r' (line 605)
        r_50571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 16), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 16), tuple_50570, r_50571)
        # Adding element type (line 605)
        # Getting the type of 'c' (line 605)
        c_50572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 19), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 16), tuple_50570, c_50572)
        
        # Storing an element on a container (line 605)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 605, 12), y1f_50569, (tuple_50570, y1_50568))
        
        # Assigning a Call to a Subscript (line 606):
        
        # Assigning a Call to a Subscript (line 606):
        
        # Call to conj(...): (line 606)
        # Processing the call keyword arguments (line 606)
        kwargs_50581 = {}
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'list' (line 606)
        list_50573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 606)
        # Adding element type (line 606)
        int_50574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 43), list_50573, int_50574)
        # Adding element type (line 606)
        int_50575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 43), list_50573, int_50575)
        # Adding element type (line 606)
        int_50576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 43), list_50573, int_50576)
        
        # Getting the type of 'y1' (line 606)
        y1_50577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 40), 'y1', False)
        # Obtaining the member '__getitem__' of a type (line 606)
        getitem___50578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 40), y1_50577, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 606)
        subscript_call_result_50579 = invoke(stypy.reporting.localization.Localization(__file__, 606, 40), getitem___50578, list_50573)
        
        # Obtaining the member 'conj' of a type (line 606)
        conj_50580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 40), subscript_call_result_50579, 'conj')
        # Calling conj(args, kwargs) (line 606)
        conj_call_result_50582 = invoke(stypy.reporting.localization.Localization(__file__, 606, 40), conj_50580, *[], **kwargs_50581)
        
        # Getting the type of 'y1f' (line 606)
        y1f_50583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 12), 'y1f')
        
        # Obtaining an instance of the builtin type 'tuple' (line 606)
        tuple_50584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 606)
        # Adding element type (line 606)
        
        # Obtaining an instance of the builtin type 'list' (line 606)
        list_50585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 606)
        # Adding element type (line 606)
        int_50586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 17), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 16), list_50585, int_50586)
        # Adding element type (line 606)
        int_50587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 20), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 16), list_50585, int_50587)
        # Adding element type (line 606)
        int_50588 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 16), list_50585, int_50588)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 16), tuple_50584, list_50585)
        # Adding element type (line 606)
        
        # Obtaining an instance of the builtin type 'list' (line 606)
        list_50589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 606)
        # Adding element type (line 606)
        int_50590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 27), list_50589, int_50590)
        # Adding element type (line 606)
        int_50591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 27), list_50589, int_50591)
        # Adding element type (line 606)
        int_50592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 27), list_50589, int_50592)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 16), tuple_50584, list_50589)
        
        # Storing an element on a container (line 606)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 606, 12), y1f_50583, (tuple_50584, conj_call_result_50582))
        
        # Call to assert_array_almost_equal(...): (line 607)
        # Processing the call arguments (line 607)
        # Getting the type of 'y1f' (line 607)
        y1f_50594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 38), 'y1f', False)
        # Getting the type of 'y2' (line 607)
        y2_50595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 43), 'y2', False)
        # Processing the call keyword arguments (line 607)
        kwargs_50596 = {}
        # Getting the type of 'assert_array_almost_equal' (line 607)
        assert_array_almost_equal_50593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 607)
        assert_array_almost_equal_call_result_50597 = invoke(stypy.reporting.localization.Localization(__file__, 607, 12), assert_array_almost_equal_50593, *[y1f_50594, y2_50595], **kwargs_50596)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_spr2_hpr2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_spr2_hpr2' in the type store
        # Getting the type of 'stypy_return_type' (line 581)
        stypy_return_type_50598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_50598)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_spr2_hpr2'
        return stypy_return_type_50598


    @norecursion
    def test_tbmv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_tbmv'
        module_type_store = module_type_store.open_function_context('test_tbmv', 609, 4, False)
        # Assigning a type to the variable 'self' (line 610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 610, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_tbmv')
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_tbmv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_tbmv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_tbmv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_tbmv(...)' code ##################

        
        # Call to seed(...): (line 610)
        # Processing the call arguments (line 610)
        int_50600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 13), 'int')
        # Processing the call keyword arguments (line 610)
        kwargs_50601 = {}
        # Getting the type of 'seed' (line 610)
        seed_50599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 610)
        seed_call_result_50602 = invoke(stypy.reporting.localization.Localization(__file__, 610, 8), seed_50599, *[int_50600], **kwargs_50601)
        
        
        
        # Call to enumerate(...): (line 611)
        # Processing the call arguments (line 611)
        # Getting the type of 'DTYPES' (line 611)
        DTYPES_50604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 36), 'DTYPES', False)
        # Processing the call keyword arguments (line 611)
        kwargs_50605 = {}
        # Getting the type of 'enumerate' (line 611)
        enumerate_50603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 611)
        enumerate_call_result_50606 = invoke(stypy.reporting.localization.Localization(__file__, 611, 26), enumerate_50603, *[DTYPES_50604], **kwargs_50605)
        
        # Testing the type of a for loop iterable (line 611)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 611, 8), enumerate_call_result_50606)
        # Getting the type of the for loop variable (line 611)
        for_loop_var_50607 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 611, 8), enumerate_call_result_50606)
        # Assigning a type to the variable 'ind' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 8), for_loop_var_50607))
        # Assigning a type to the variable 'dtype' (line 611)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 611, 8), for_loop_var_50607))
        # SSA begins for a for statement (line 611)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 612):
        
        # Assigning a Num to a Name (line 612):
        int_50608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 16), 'int')
        # Assigning a type to the variable 'n' (line 612)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 12), 'n', int_50608)
        
        # Assigning a Num to a Name (line 613):
        
        # Assigning a Num to a Name (line 613):
        int_50609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 16), 'int')
        # Assigning a type to the variable 'k' (line 613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 12), 'k', int_50609)
        
        # Assigning a Call to a Name (line 614):
        
        # Assigning a Call to a Name (line 614):
        
        # Call to astype(...): (line 614)
        # Processing the call arguments (line 614)
        # Getting the type of 'dtype' (line 614)
        dtype_50615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 31), 'dtype', False)
        # Processing the call keyword arguments (line 614)
        kwargs_50616 = {}
        
        # Call to rand(...): (line 614)
        # Processing the call arguments (line 614)
        # Getting the type of 'n' (line 614)
        n_50611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 21), 'n', False)
        # Processing the call keyword arguments (line 614)
        kwargs_50612 = {}
        # Getting the type of 'rand' (line 614)
        rand_50610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 614)
        rand_call_result_50613 = invoke(stypy.reporting.localization.Localization(__file__, 614, 16), rand_50610, *[n_50611], **kwargs_50612)
        
        # Obtaining the member 'astype' of a type (line 614)
        astype_50614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 614, 16), rand_call_result_50613, 'astype')
        # Calling astype(args, kwargs) (line 614)
        astype_call_result_50617 = invoke(stypy.reporting.localization.Localization(__file__, 614, 16), astype_50614, *[dtype_50615], **kwargs_50616)
        
        # Assigning a type to the variable 'x' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 12), 'x', astype_call_result_50617)
        
        # Assigning a Call to a Name (line 615):
        
        # Assigning a Call to a Name (line 615):
        
        # Call to zeros(...): (line 615)
        # Processing the call arguments (line 615)
        
        # Obtaining an instance of the builtin type 'tuple' (line 615)
        tuple_50619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 615)
        # Adding element type (line 615)
        # Getting the type of 'n' (line 615)
        n_50620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 23), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 615, 23), tuple_50619, n_50620)
        # Adding element type (line 615)
        # Getting the type of 'n' (line 615)
        n_50621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 26), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 615, 23), tuple_50619, n_50621)
        
        # Processing the call keyword arguments (line 615)
        # Getting the type of 'dtype' (line 615)
        dtype_50622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 36), 'dtype', False)
        keyword_50623 = dtype_50622
        kwargs_50624 = {'dtype': keyword_50623}
        # Getting the type of 'zeros' (line 615)
        zeros_50618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 16), 'zeros', False)
        # Calling zeros(args, kwargs) (line 615)
        zeros_call_result_50625 = invoke(stypy.reporting.localization.Localization(__file__, 615, 16), zeros_50618, *[tuple_50619], **kwargs_50624)
        
        # Assigning a type to the variable 'A' (line 615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 12), 'A', zeros_call_result_50625)
        
        
        # Call to range(...): (line 617)
        # Processing the call arguments (line 617)
        # Getting the type of 'k' (line 617)
        k_50627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 29), 'k', False)
        int_50628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 31), 'int')
        # Applying the binary operator '+' (line 617)
        result_add_50629 = python_operator(stypy.reporting.localization.Localization(__file__, 617, 29), '+', k_50627, int_50628)
        
        # Processing the call keyword arguments (line 617)
        kwargs_50630 = {}
        # Getting the type of 'range' (line 617)
        range_50626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 23), 'range', False)
        # Calling range(args, kwargs) (line 617)
        range_call_result_50631 = invoke(stypy.reporting.localization.Localization(__file__, 617, 23), range_50626, *[result_add_50629], **kwargs_50630)
        
        # Testing the type of a for loop iterable (line 617)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 617, 12), range_call_result_50631)
        # Getting the type of the for loop variable (line 617)
        for_loop_var_50632 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 617, 12), range_call_result_50631)
        # Assigning a type to the variable 'sup' (line 617)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 617, 12), 'sup', for_loop_var_50632)
        # SSA begins for a for statement (line 617)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Subscript (line 618):
        
        # Assigning a Call to a Subscript (line 618):
        
        # Call to rand(...): (line 618)
        # Processing the call arguments (line 618)
        # Getting the type of 'n' (line 618)
        n_50634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 56), 'n', False)
        # Getting the type of 'sup' (line 618)
        sup_50635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 58), 'sup', False)
        # Applying the binary operator '-' (line 618)
        result_sub_50636 = python_operator(stypy.reporting.localization.Localization(__file__, 618, 56), '-', n_50634, sup_50635)
        
        # Processing the call keyword arguments (line 618)
        kwargs_50637 = {}
        # Getting the type of 'rand' (line 618)
        rand_50633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 51), 'rand', False)
        # Calling rand(args, kwargs) (line 618)
        rand_call_result_50638 = invoke(stypy.reporting.localization.Localization(__file__, 618, 51), rand_50633, *[result_sub_50636], **kwargs_50637)
        
        # Getting the type of 'A' (line 618)
        A_50639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 16), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 618)
        tuple_50640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 618)
        # Adding element type (line 618)
        
        # Call to arange(...): (line 618)
        # Processing the call arguments (line 618)
        # Getting the type of 'n' (line 618)
        n_50642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 25), 'n', False)
        # Getting the type of 'sup' (line 618)
        sup_50643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 27), 'sup', False)
        # Applying the binary operator '-' (line 618)
        result_sub_50644 = python_operator(stypy.reporting.localization.Localization(__file__, 618, 25), '-', n_50642, sup_50643)
        
        # Processing the call keyword arguments (line 618)
        kwargs_50645 = {}
        # Getting the type of 'arange' (line 618)
        arange_50641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 18), 'arange', False)
        # Calling arange(args, kwargs) (line 618)
        arange_call_result_50646 = invoke(stypy.reporting.localization.Localization(__file__, 618, 18), arange_50641, *[result_sub_50644], **kwargs_50645)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 618, 18), tuple_50640, arange_call_result_50646)
        # Adding element type (line 618)
        
        # Call to arange(...): (line 618)
        # Processing the call arguments (line 618)
        # Getting the type of 'sup' (line 618)
        sup_50648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 40), 'sup', False)
        # Getting the type of 'n' (line 618)
        n_50649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 45), 'n', False)
        # Processing the call keyword arguments (line 618)
        kwargs_50650 = {}
        # Getting the type of 'arange' (line 618)
        arange_50647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 33), 'arange', False)
        # Calling arange(args, kwargs) (line 618)
        arange_call_result_50651 = invoke(stypy.reporting.localization.Localization(__file__, 618, 33), arange_50647, *[sup_50648, n_50649], **kwargs_50650)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 618, 18), tuple_50640, arange_call_result_50651)
        
        # Storing an element on a container (line 618)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 618, 16), A_50639, (tuple_50640, rand_call_result_50638))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'ind' (line 621)
        ind_50652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 15), 'ind')
        int_50653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 621, 21), 'int')
        # Applying the binary operator '>' (line 621)
        result_gt_50654 = python_operator(stypy.reporting.localization.Localization(__file__, 621, 15), '>', ind_50652, int_50653)
        
        # Testing the type of an if condition (line 621)
        if_condition_50655 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 621, 12), result_gt_50654)
        # Assigning a type to the variable 'if_condition_50655' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 12), 'if_condition_50655', if_condition_50655)
        # SSA begins for if statement (line 621)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'A' (line 622)
        A_50656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 16), 'A')
        
        # Obtaining the type of the subscript
        
        # Call to nonzero(...): (line 622)
        # Processing the call arguments (line 622)
        # Getting the type of 'A' (line 622)
        A_50658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 26), 'A', False)
        # Processing the call keyword arguments (line 622)
        kwargs_50659 = {}
        # Getting the type of 'nonzero' (line 622)
        nonzero_50657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 18), 'nonzero', False)
        # Calling nonzero(args, kwargs) (line 622)
        nonzero_call_result_50660 = invoke(stypy.reporting.localization.Localization(__file__, 622, 18), nonzero_50657, *[A_50658], **kwargs_50659)
        
        # Getting the type of 'A' (line 622)
        A_50661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 16), 'A')
        # Obtaining the member '__getitem__' of a type (line 622)
        getitem___50662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 16), A_50661, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 622)
        subscript_call_result_50663 = invoke(stypy.reporting.localization.Localization(__file__, 622, 16), getitem___50662, nonzero_call_result_50660)
        
        complex_50664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 33), 'complex')
        
        # Call to astype(...): (line 622)
        # Processing the call arguments (line 622)
        # Getting the type of 'dtype' (line 622)
        dtype_50682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 72), 'dtype', False)
        # Processing the call keyword arguments (line 622)
        kwargs_50683 = {}
        
        # Call to rand(...): (line 622)
        # Processing the call arguments (line 622)
        # Getting the type of 'k' (line 622)
        k_50666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 44), 'k', False)
        int_50667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 46), 'int')
        # Applying the binary operator '+' (line 622)
        result_add_50668 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 44), '+', k_50666, int_50667)
        
        # Getting the type of 'n' (line 622)
        n_50669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 49), 'n', False)
        # Applying the binary operator '*' (line 622)
        result_mul_50670 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 43), '*', result_add_50668, n_50669)
        
        # Getting the type of 'k' (line 622)
        k_50671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 52), 'k', False)
        # Getting the type of 'k' (line 622)
        k_50672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 55), 'k', False)
        int_50673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 57), 'int')
        # Applying the binary operator '+' (line 622)
        result_add_50674 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 55), '+', k_50672, int_50673)
        
        # Applying the binary operator '*' (line 622)
        result_mul_50675 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 52), '*', k_50671, result_add_50674)
        
        int_50676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 61), 'int')
        # Applying the binary operator '//' (line 622)
        result_floordiv_50677 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 59), '//', result_mul_50675, int_50676)
        
        # Applying the binary operator '-' (line 622)
        result_sub_50678 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 43), '-', result_mul_50670, result_floordiv_50677)
        
        # Processing the call keyword arguments (line 622)
        kwargs_50679 = {}
        # Getting the type of 'rand' (line 622)
        rand_50665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 38), 'rand', False)
        # Calling rand(args, kwargs) (line 622)
        rand_call_result_50680 = invoke(stypy.reporting.localization.Localization(__file__, 622, 38), rand_50665, *[result_sub_50678], **kwargs_50679)
        
        # Obtaining the member 'astype' of a type (line 622)
        astype_50681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 38), rand_call_result_50680, 'astype')
        # Calling astype(args, kwargs) (line 622)
        astype_call_result_50684 = invoke(stypy.reporting.localization.Localization(__file__, 622, 38), astype_50681, *[dtype_50682], **kwargs_50683)
        
        # Applying the binary operator '*' (line 622)
        result_mul_50685 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 33), '*', complex_50664, astype_call_result_50684)
        
        # Applying the binary operator '+=' (line 622)
        result_iadd_50686 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 16), '+=', subscript_call_result_50663, result_mul_50685)
        # Getting the type of 'A' (line 622)
        A_50687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 16), 'A')
        
        # Call to nonzero(...): (line 622)
        # Processing the call arguments (line 622)
        # Getting the type of 'A' (line 622)
        A_50689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 26), 'A', False)
        # Processing the call keyword arguments (line 622)
        kwargs_50690 = {}
        # Getting the type of 'nonzero' (line 622)
        nonzero_50688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 18), 'nonzero', False)
        # Calling nonzero(args, kwargs) (line 622)
        nonzero_call_result_50691 = invoke(stypy.reporting.localization.Localization(__file__, 622, 18), nonzero_50688, *[A_50689], **kwargs_50690)
        
        # Storing an element on a container (line 622)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 622, 16), A_50687, (nonzero_call_result_50691, result_iadd_50686))
        
        # SSA join for if statement (line 621)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 625):
        
        # Assigning a Call to a Name (line 625):
        
        # Call to zeros(...): (line 625)
        # Processing the call arguments (line 625)
        
        # Obtaining an instance of the builtin type 'tuple' (line 625)
        tuple_50693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 625)
        # Adding element type (line 625)
        # Getting the type of 'k' (line 625)
        k_50694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 24), 'k', False)
        int_50695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 26), 'int')
        # Applying the binary operator '+' (line 625)
        result_add_50696 = python_operator(stypy.reporting.localization.Localization(__file__, 625, 24), '+', k_50694, int_50695)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 24), tuple_50693, result_add_50696)
        # Adding element type (line 625)
        # Getting the type of 'n' (line 625)
        n_50697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 29), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 24), tuple_50693, n_50697)
        
        # Processing the call keyword arguments (line 625)
        # Getting the type of 'dtype' (line 625)
        dtype_50698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 39), 'dtype', False)
        keyword_50699 = dtype_50698
        kwargs_50700 = {'dtype': keyword_50699}
        # Getting the type of 'zeros' (line 625)
        zeros_50692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 625)
        zeros_call_result_50701 = invoke(stypy.reporting.localization.Localization(__file__, 625, 17), zeros_50692, *[tuple_50693], **kwargs_50700)
        
        # Assigning a type to the variable 'Ab' (line 625)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 625, 12), 'Ab', zeros_call_result_50701)
        
        
        # Call to range(...): (line 626)
        # Processing the call arguments (line 626)
        # Getting the type of 'k' (line 626)
        k_50703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 29), 'k', False)
        int_50704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 626, 31), 'int')
        # Applying the binary operator '+' (line 626)
        result_add_50705 = python_operator(stypy.reporting.localization.Localization(__file__, 626, 29), '+', k_50703, int_50704)
        
        # Processing the call keyword arguments (line 626)
        kwargs_50706 = {}
        # Getting the type of 'range' (line 626)
        range_50702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 23), 'range', False)
        # Calling range(args, kwargs) (line 626)
        range_call_result_50707 = invoke(stypy.reporting.localization.Localization(__file__, 626, 23), range_50702, *[result_add_50705], **kwargs_50706)
        
        # Testing the type of a for loop iterable (line 626)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 626, 12), range_call_result_50707)
        # Getting the type of the for loop variable (line 626)
        for_loop_var_50708 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 626, 12), range_call_result_50707)
        # Assigning a type to the variable 'row' (line 626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 12), 'row', for_loop_var_50708)
        # SSA begins for a for statement (line 626)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Subscript (line 627):
        
        # Assigning a Call to a Subscript (line 627):
        
        # Call to diag(...): (line 627)
        # Processing the call arguments (line 627)
        # Getting the type of 'A' (line 627)
        A_50710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 40), 'A', False)
        # Processing the call keyword arguments (line 627)
        # Getting the type of 'row' (line 627)
        row_50711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 45), 'row', False)
        keyword_50712 = row_50711
        kwargs_50713 = {'k': keyword_50712}
        # Getting the type of 'diag' (line 627)
        diag_50709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 35), 'diag', False)
        # Calling diag(args, kwargs) (line 627)
        diag_call_result_50714 = invoke(stypy.reporting.localization.Localization(__file__, 627, 35), diag_50709, *[A_50710], **kwargs_50713)
        
        # Getting the type of 'Ab' (line 627)
        Ab_50715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 16), 'Ab')
        
        # Getting the type of 'row' (line 627)
        row_50716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 20), 'row')
        # Applying the 'usub' unary operator (line 627)
        result___neg___50717 = python_operator(stypy.reporting.localization.Localization(__file__, 627, 19), 'usub', row_50716)
        
        int_50718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 24), 'int')
        # Applying the binary operator '-' (line 627)
        result_sub_50719 = python_operator(stypy.reporting.localization.Localization(__file__, 627, 19), '-', result___neg___50717, int_50718)
        
        # Getting the type of 'row' (line 627)
        row_50720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 27), 'row')
        slice_50721 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 627, 16), row_50720, None, None)
        # Storing an element on a container (line 627)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 627, 16), Ab_50715, ((result_sub_50719, slice_50721), diag_call_result_50714))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 628):
        
        # Assigning a Subscript to a Name (line 628):
        
        # Obtaining the type of the subscript
        int_50722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 12), 'int')
        
        # Call to get_blas_funcs(...): (line 628)
        # Processing the call arguments (line 628)
        
        # Obtaining an instance of the builtin type 'tuple' (line 628)
        tuple_50724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 628)
        # Adding element type (line 628)
        str_50725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 36), 'str', 'tbmv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 628, 36), tuple_50724, str_50725)
        
        # Processing the call keyword arguments (line 628)
        # Getting the type of 'dtype' (line 628)
        dtype_50726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 52), 'dtype', False)
        keyword_50727 = dtype_50726
        kwargs_50728 = {'dtype': keyword_50727}
        # Getting the type of 'get_blas_funcs' (line 628)
        get_blas_funcs_50723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 20), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 628)
        get_blas_funcs_call_result_50729 = invoke(stypy.reporting.localization.Localization(__file__, 628, 20), get_blas_funcs_50723, *[tuple_50724], **kwargs_50728)
        
        # Obtaining the member '__getitem__' of a type (line 628)
        getitem___50730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 12), get_blas_funcs_call_result_50729, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 628)
        subscript_call_result_50731 = invoke(stypy.reporting.localization.Localization(__file__, 628, 12), getitem___50730, int_50722)
        
        # Assigning a type to the variable 'tuple_var_assignment_46690' (line 628)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 12), 'tuple_var_assignment_46690', subscript_call_result_50731)
        
        # Assigning a Name to a Name (line 628):
        # Getting the type of 'tuple_var_assignment_46690' (line 628)
        tuple_var_assignment_46690_50732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 12), 'tuple_var_assignment_46690')
        # Assigning a type to the variable 'func' (line 628)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 12), 'func', tuple_var_assignment_46690_50732)
        
        # Assigning a Call to a Name (line 630):
        
        # Assigning a Call to a Name (line 630):
        
        # Call to func(...): (line 630)
        # Processing the call keyword arguments (line 630)
        # Getting the type of 'k' (line 630)
        k_50734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 24), 'k', False)
        keyword_50735 = k_50734
        # Getting the type of 'Ab' (line 630)
        Ab_50736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 29), 'Ab', False)
        keyword_50737 = Ab_50736
        # Getting the type of 'x' (line 630)
        x_50738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 35), 'x', False)
        keyword_50739 = x_50738
        kwargs_50740 = {'a': keyword_50737, 'x': keyword_50739, 'k': keyword_50735}
        # Getting the type of 'func' (line 630)
        func_50733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 17), 'func', False)
        # Calling func(args, kwargs) (line 630)
        func_call_result_50741 = invoke(stypy.reporting.localization.Localization(__file__, 630, 17), func_50733, *[], **kwargs_50740)
        
        # Assigning a type to the variable 'y1' (line 630)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 630, 12), 'y1', func_call_result_50741)
        
        # Assigning a Call to a Name (line 631):
        
        # Assigning a Call to a Name (line 631):
        
        # Call to dot(...): (line 631)
        # Processing the call arguments (line 631)
        # Getting the type of 'x' (line 631)
        x_50744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 23), 'x', False)
        # Processing the call keyword arguments (line 631)
        kwargs_50745 = {}
        # Getting the type of 'A' (line 631)
        A_50742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 17), 'A', False)
        # Obtaining the member 'dot' of a type (line 631)
        dot_50743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 17), A_50742, 'dot')
        # Calling dot(args, kwargs) (line 631)
        dot_call_result_50746 = invoke(stypy.reporting.localization.Localization(__file__, 631, 17), dot_50743, *[x_50744], **kwargs_50745)
        
        # Assigning a type to the variable 'y2' (line 631)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 631, 12), 'y2', dot_call_result_50746)
        
        # Call to assert_array_almost_equal(...): (line 632)
        # Processing the call arguments (line 632)
        # Getting the type of 'y1' (line 632)
        y1_50748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 38), 'y1', False)
        # Getting the type of 'y2' (line 632)
        y2_50749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 42), 'y2', False)
        # Processing the call keyword arguments (line 632)
        kwargs_50750 = {}
        # Getting the type of 'assert_array_almost_equal' (line 632)
        assert_array_almost_equal_50747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 632)
        assert_array_almost_equal_call_result_50751 = invoke(stypy.reporting.localization.Localization(__file__, 632, 12), assert_array_almost_equal_50747, *[y1_50748, y2_50749], **kwargs_50750)
        
        
        # Assigning a Call to a Name (line 634):
        
        # Assigning a Call to a Name (line 634):
        
        # Call to func(...): (line 634)
        # Processing the call keyword arguments (line 634)
        # Getting the type of 'k' (line 634)
        k_50753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 24), 'k', False)
        keyword_50754 = k_50753
        # Getting the type of 'Ab' (line 634)
        Ab_50755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 29), 'Ab', False)
        keyword_50756 = Ab_50755
        # Getting the type of 'x' (line 634)
        x_50757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 35), 'x', False)
        keyword_50758 = x_50757
        int_50759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 634, 43), 'int')
        keyword_50760 = int_50759
        kwargs_50761 = {'a': keyword_50756, 'x': keyword_50758, 'k': keyword_50754, 'diag': keyword_50760}
        # Getting the type of 'func' (line 634)
        func_50752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 17), 'func', False)
        # Calling func(args, kwargs) (line 634)
        func_call_result_50762 = invoke(stypy.reporting.localization.Localization(__file__, 634, 17), func_50752, *[], **kwargs_50761)
        
        # Assigning a type to the variable 'y1' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 12), 'y1', func_call_result_50762)
        
        # Assigning a Call to a Subscript (line 635):
        
        # Assigning a Call to a Subscript (line 635):
        
        # Call to dtype(...): (line 635)
        # Processing the call arguments (line 635)
        int_50764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 44), 'int')
        # Processing the call keyword arguments (line 635)
        kwargs_50765 = {}
        # Getting the type of 'dtype' (line 635)
        dtype_50763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 38), 'dtype', False)
        # Calling dtype(args, kwargs) (line 635)
        dtype_call_result_50766 = invoke(stypy.reporting.localization.Localization(__file__, 635, 38), dtype_50763, *[int_50764], **kwargs_50765)
        
        # Getting the type of 'A' (line 635)
        A_50767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 12), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 635)
        tuple_50768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 635)
        # Adding element type (line 635)
        
        # Call to arange(...): (line 635)
        # Processing the call arguments (line 635)
        # Getting the type of 'n' (line 635)
        n_50770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 21), 'n', False)
        # Processing the call keyword arguments (line 635)
        kwargs_50771 = {}
        # Getting the type of 'arange' (line 635)
        arange_50769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 14), 'arange', False)
        # Calling arange(args, kwargs) (line 635)
        arange_call_result_50772 = invoke(stypy.reporting.localization.Localization(__file__, 635, 14), arange_50769, *[n_50770], **kwargs_50771)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 635, 14), tuple_50768, arange_call_result_50772)
        # Adding element type (line 635)
        
        # Call to arange(...): (line 635)
        # Processing the call arguments (line 635)
        # Getting the type of 'n' (line 635)
        n_50774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 32), 'n', False)
        # Processing the call keyword arguments (line 635)
        kwargs_50775 = {}
        # Getting the type of 'arange' (line 635)
        arange_50773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 25), 'arange', False)
        # Calling arange(args, kwargs) (line 635)
        arange_call_result_50776 = invoke(stypy.reporting.localization.Localization(__file__, 635, 25), arange_50773, *[n_50774], **kwargs_50775)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 635, 14), tuple_50768, arange_call_result_50776)
        
        # Storing an element on a container (line 635)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 635, 12), A_50767, (tuple_50768, dtype_call_result_50766))
        
        # Assigning a Call to a Name (line 636):
        
        # Assigning a Call to a Name (line 636):
        
        # Call to dot(...): (line 636)
        # Processing the call arguments (line 636)
        # Getting the type of 'x' (line 636)
        x_50779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 23), 'x', False)
        # Processing the call keyword arguments (line 636)
        kwargs_50780 = {}
        # Getting the type of 'A' (line 636)
        A_50777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 17), 'A', False)
        # Obtaining the member 'dot' of a type (line 636)
        dot_50778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 636, 17), A_50777, 'dot')
        # Calling dot(args, kwargs) (line 636)
        dot_call_result_50781 = invoke(stypy.reporting.localization.Localization(__file__, 636, 17), dot_50778, *[x_50779], **kwargs_50780)
        
        # Assigning a type to the variable 'y2' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 12), 'y2', dot_call_result_50781)
        
        # Call to assert_array_almost_equal(...): (line 637)
        # Processing the call arguments (line 637)
        # Getting the type of 'y1' (line 637)
        y1_50783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 38), 'y1', False)
        # Getting the type of 'y2' (line 637)
        y2_50784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 42), 'y2', False)
        # Processing the call keyword arguments (line 637)
        kwargs_50785 = {}
        # Getting the type of 'assert_array_almost_equal' (line 637)
        assert_array_almost_equal_50782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 637)
        assert_array_almost_equal_call_result_50786 = invoke(stypy.reporting.localization.Localization(__file__, 637, 12), assert_array_almost_equal_50782, *[y1_50783, y2_50784], **kwargs_50785)
        
        
        # Assigning a Call to a Name (line 639):
        
        # Assigning a Call to a Name (line 639):
        
        # Call to func(...): (line 639)
        # Processing the call keyword arguments (line 639)
        # Getting the type of 'k' (line 639)
        k_50788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 24), 'k', False)
        keyword_50789 = k_50788
        # Getting the type of 'Ab' (line 639)
        Ab_50790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 29), 'Ab', False)
        keyword_50791 = Ab_50790
        # Getting the type of 'x' (line 639)
        x_50792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 35), 'x', False)
        keyword_50793 = x_50792
        int_50794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 43), 'int')
        keyword_50795 = int_50794
        int_50796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 639, 52), 'int')
        keyword_50797 = int_50796
        kwargs_50798 = {'a': keyword_50791, 'x': keyword_50793, 'k': keyword_50789, 'trans': keyword_50797, 'diag': keyword_50795}
        # Getting the type of 'func' (line 639)
        func_50787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 17), 'func', False)
        # Calling func(args, kwargs) (line 639)
        func_call_result_50799 = invoke(stypy.reporting.localization.Localization(__file__, 639, 17), func_50787, *[], **kwargs_50798)
        
        # Assigning a type to the variable 'y1' (line 639)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 639, 12), 'y1', func_call_result_50799)
        
        # Assigning a Call to a Name (line 640):
        
        # Assigning a Call to a Name (line 640):
        
        # Call to dot(...): (line 640)
        # Processing the call arguments (line 640)
        # Getting the type of 'x' (line 640)
        x_50803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 25), 'x', False)
        # Processing the call keyword arguments (line 640)
        kwargs_50804 = {}
        # Getting the type of 'A' (line 640)
        A_50800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 17), 'A', False)
        # Obtaining the member 'T' of a type (line 640)
        T_50801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 17), A_50800, 'T')
        # Obtaining the member 'dot' of a type (line 640)
        dot_50802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 17), T_50801, 'dot')
        # Calling dot(args, kwargs) (line 640)
        dot_call_result_50805 = invoke(stypy.reporting.localization.Localization(__file__, 640, 17), dot_50802, *[x_50803], **kwargs_50804)
        
        # Assigning a type to the variable 'y2' (line 640)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 12), 'y2', dot_call_result_50805)
        
        # Call to assert_array_almost_equal(...): (line 641)
        # Processing the call arguments (line 641)
        # Getting the type of 'y1' (line 641)
        y1_50807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 38), 'y1', False)
        # Getting the type of 'y2' (line 641)
        y2_50808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 42), 'y2', False)
        # Processing the call keyword arguments (line 641)
        kwargs_50809 = {}
        # Getting the type of 'assert_array_almost_equal' (line 641)
        assert_array_almost_equal_50806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 641)
        assert_array_almost_equal_call_result_50810 = invoke(stypy.reporting.localization.Localization(__file__, 641, 12), assert_array_almost_equal_50806, *[y1_50807, y2_50808], **kwargs_50809)
        
        
        # Assigning a Call to a Name (line 643):
        
        # Assigning a Call to a Name (line 643):
        
        # Call to func(...): (line 643)
        # Processing the call keyword arguments (line 643)
        # Getting the type of 'k' (line 643)
        k_50812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 24), 'k', False)
        keyword_50813 = k_50812
        # Getting the type of 'Ab' (line 643)
        Ab_50814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 29), 'Ab', False)
        keyword_50815 = Ab_50814
        # Getting the type of 'x' (line 643)
        x_50816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 35), 'x', False)
        keyword_50817 = x_50816
        int_50818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 43), 'int')
        keyword_50819 = int_50818
        int_50820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 52), 'int')
        keyword_50821 = int_50820
        kwargs_50822 = {'a': keyword_50815, 'x': keyword_50817, 'k': keyword_50813, 'trans': keyword_50821, 'diag': keyword_50819}
        # Getting the type of 'func' (line 643)
        func_50811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 17), 'func', False)
        # Calling func(args, kwargs) (line 643)
        func_call_result_50823 = invoke(stypy.reporting.localization.Localization(__file__, 643, 17), func_50811, *[], **kwargs_50822)
        
        # Assigning a type to the variable 'y1' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'y1', func_call_result_50823)
        
        # Assigning a Call to a Name (line 644):
        
        # Assigning a Call to a Name (line 644):
        
        # Call to dot(...): (line 644)
        # Processing the call arguments (line 644)
        # Getting the type of 'x' (line 644)
        x_50830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 32), 'x', False)
        # Processing the call keyword arguments (line 644)
        kwargs_50831 = {}
        
        # Call to conj(...): (line 644)
        # Processing the call keyword arguments (line 644)
        kwargs_50826 = {}
        # Getting the type of 'A' (line 644)
        A_50824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 17), 'A', False)
        # Obtaining the member 'conj' of a type (line 644)
        conj_50825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 17), A_50824, 'conj')
        # Calling conj(args, kwargs) (line 644)
        conj_call_result_50827 = invoke(stypy.reporting.localization.Localization(__file__, 644, 17), conj_50825, *[], **kwargs_50826)
        
        # Obtaining the member 'T' of a type (line 644)
        T_50828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 17), conj_call_result_50827, 'T')
        # Obtaining the member 'dot' of a type (line 644)
        dot_50829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 17), T_50828, 'dot')
        # Calling dot(args, kwargs) (line 644)
        dot_call_result_50832 = invoke(stypy.reporting.localization.Localization(__file__, 644, 17), dot_50829, *[x_50830], **kwargs_50831)
        
        # Assigning a type to the variable 'y2' (line 644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 12), 'y2', dot_call_result_50832)
        
        # Call to assert_array_almost_equal(...): (line 645)
        # Processing the call arguments (line 645)
        # Getting the type of 'y1' (line 645)
        y1_50834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 38), 'y1', False)
        # Getting the type of 'y2' (line 645)
        y2_50835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 42), 'y2', False)
        # Processing the call keyword arguments (line 645)
        kwargs_50836 = {}
        # Getting the type of 'assert_array_almost_equal' (line 645)
        assert_array_almost_equal_50833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 645)
        assert_array_almost_equal_call_result_50837 = invoke(stypy.reporting.localization.Localization(__file__, 645, 12), assert_array_almost_equal_50833, *[y1_50834, y2_50835], **kwargs_50836)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_tbmv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_tbmv' in the type store
        # Getting the type of 'stypy_return_type' (line 609)
        stypy_return_type_50838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_50838)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_tbmv'
        return stypy_return_type_50838


    @norecursion
    def test_tbsv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_tbsv'
        module_type_store = module_type_store.open_function_context('test_tbsv', 647, 4, False)
        # Assigning a type to the variable 'self' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_tbsv')
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_tbsv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_tbsv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_tbsv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_tbsv(...)' code ##################

        
        # Call to seed(...): (line 648)
        # Processing the call arguments (line 648)
        int_50840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 13), 'int')
        # Processing the call keyword arguments (line 648)
        kwargs_50841 = {}
        # Getting the type of 'seed' (line 648)
        seed_50839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 648)
        seed_call_result_50842 = invoke(stypy.reporting.localization.Localization(__file__, 648, 8), seed_50839, *[int_50840], **kwargs_50841)
        
        
        
        # Call to enumerate(...): (line 649)
        # Processing the call arguments (line 649)
        # Getting the type of 'DTYPES' (line 649)
        DTYPES_50844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 36), 'DTYPES', False)
        # Processing the call keyword arguments (line 649)
        kwargs_50845 = {}
        # Getting the type of 'enumerate' (line 649)
        enumerate_50843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 649)
        enumerate_call_result_50846 = invoke(stypy.reporting.localization.Localization(__file__, 649, 26), enumerate_50843, *[DTYPES_50844], **kwargs_50845)
        
        # Testing the type of a for loop iterable (line 649)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 649, 8), enumerate_call_result_50846)
        # Getting the type of the for loop variable (line 649)
        for_loop_var_50847 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 649, 8), enumerate_call_result_50846)
        # Assigning a type to the variable 'ind' (line 649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 8), for_loop_var_50847))
        # Assigning a type to the variable 'dtype' (line 649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 649, 8), for_loop_var_50847))
        # SSA begins for a for statement (line 649)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 650):
        
        # Assigning a Num to a Name (line 650):
        int_50848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 16), 'int')
        # Assigning a type to the variable 'n' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'n', int_50848)
        
        # Assigning a Num to a Name (line 651):
        
        # Assigning a Num to a Name (line 651):
        int_50849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 16), 'int')
        # Assigning a type to the variable 'k' (line 651)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 651, 12), 'k', int_50849)
        
        # Assigning a Call to a Name (line 652):
        
        # Assigning a Call to a Name (line 652):
        
        # Call to astype(...): (line 652)
        # Processing the call arguments (line 652)
        # Getting the type of 'dtype' (line 652)
        dtype_50855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 31), 'dtype', False)
        # Processing the call keyword arguments (line 652)
        kwargs_50856 = {}
        
        # Call to rand(...): (line 652)
        # Processing the call arguments (line 652)
        # Getting the type of 'n' (line 652)
        n_50851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 21), 'n', False)
        # Processing the call keyword arguments (line 652)
        kwargs_50852 = {}
        # Getting the type of 'rand' (line 652)
        rand_50850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 652)
        rand_call_result_50853 = invoke(stypy.reporting.localization.Localization(__file__, 652, 16), rand_50850, *[n_50851], **kwargs_50852)
        
        # Obtaining the member 'astype' of a type (line 652)
        astype_50854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 652, 16), rand_call_result_50853, 'astype')
        # Calling astype(args, kwargs) (line 652)
        astype_call_result_50857 = invoke(stypy.reporting.localization.Localization(__file__, 652, 16), astype_50854, *[dtype_50855], **kwargs_50856)
        
        # Assigning a type to the variable 'x' (line 652)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 652, 12), 'x', astype_call_result_50857)
        
        # Assigning a Call to a Name (line 653):
        
        # Assigning a Call to a Name (line 653):
        
        # Call to zeros(...): (line 653)
        # Processing the call arguments (line 653)
        
        # Obtaining an instance of the builtin type 'tuple' (line 653)
        tuple_50859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 23), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 653)
        # Adding element type (line 653)
        # Getting the type of 'n' (line 653)
        n_50860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 23), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 23), tuple_50859, n_50860)
        # Adding element type (line 653)
        # Getting the type of 'n' (line 653)
        n_50861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 26), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 23), tuple_50859, n_50861)
        
        # Processing the call keyword arguments (line 653)
        # Getting the type of 'dtype' (line 653)
        dtype_50862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 36), 'dtype', False)
        keyword_50863 = dtype_50862
        kwargs_50864 = {'dtype': keyword_50863}
        # Getting the type of 'zeros' (line 653)
        zeros_50858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 16), 'zeros', False)
        # Calling zeros(args, kwargs) (line 653)
        zeros_call_result_50865 = invoke(stypy.reporting.localization.Localization(__file__, 653, 16), zeros_50858, *[tuple_50859], **kwargs_50864)
        
        # Assigning a type to the variable 'A' (line 653)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 653, 12), 'A', zeros_call_result_50865)
        
        
        # Call to range(...): (line 655)
        # Processing the call arguments (line 655)
        # Getting the type of 'k' (line 655)
        k_50867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 29), 'k', False)
        int_50868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 31), 'int')
        # Applying the binary operator '+' (line 655)
        result_add_50869 = python_operator(stypy.reporting.localization.Localization(__file__, 655, 29), '+', k_50867, int_50868)
        
        # Processing the call keyword arguments (line 655)
        kwargs_50870 = {}
        # Getting the type of 'range' (line 655)
        range_50866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 23), 'range', False)
        # Calling range(args, kwargs) (line 655)
        range_call_result_50871 = invoke(stypy.reporting.localization.Localization(__file__, 655, 23), range_50866, *[result_add_50869], **kwargs_50870)
        
        # Testing the type of a for loop iterable (line 655)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 655, 12), range_call_result_50871)
        # Getting the type of the for loop variable (line 655)
        for_loop_var_50872 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 655, 12), range_call_result_50871)
        # Assigning a type to the variable 'sup' (line 655)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 655, 12), 'sup', for_loop_var_50872)
        # SSA begins for a for statement (line 655)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Subscript (line 656):
        
        # Assigning a Call to a Subscript (line 656):
        
        # Call to rand(...): (line 656)
        # Processing the call arguments (line 656)
        # Getting the type of 'n' (line 656)
        n_50874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 56), 'n', False)
        # Getting the type of 'sup' (line 656)
        sup_50875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 58), 'sup', False)
        # Applying the binary operator '-' (line 656)
        result_sub_50876 = python_operator(stypy.reporting.localization.Localization(__file__, 656, 56), '-', n_50874, sup_50875)
        
        # Processing the call keyword arguments (line 656)
        kwargs_50877 = {}
        # Getting the type of 'rand' (line 656)
        rand_50873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 51), 'rand', False)
        # Calling rand(args, kwargs) (line 656)
        rand_call_result_50878 = invoke(stypy.reporting.localization.Localization(__file__, 656, 51), rand_50873, *[result_sub_50876], **kwargs_50877)
        
        # Getting the type of 'A' (line 656)
        A_50879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 16), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 656)
        tuple_50880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 656)
        # Adding element type (line 656)
        
        # Call to arange(...): (line 656)
        # Processing the call arguments (line 656)
        # Getting the type of 'n' (line 656)
        n_50882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 25), 'n', False)
        # Getting the type of 'sup' (line 656)
        sup_50883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 27), 'sup', False)
        # Applying the binary operator '-' (line 656)
        result_sub_50884 = python_operator(stypy.reporting.localization.Localization(__file__, 656, 25), '-', n_50882, sup_50883)
        
        # Processing the call keyword arguments (line 656)
        kwargs_50885 = {}
        # Getting the type of 'arange' (line 656)
        arange_50881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 18), 'arange', False)
        # Calling arange(args, kwargs) (line 656)
        arange_call_result_50886 = invoke(stypy.reporting.localization.Localization(__file__, 656, 18), arange_50881, *[result_sub_50884], **kwargs_50885)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 18), tuple_50880, arange_call_result_50886)
        # Adding element type (line 656)
        
        # Call to arange(...): (line 656)
        # Processing the call arguments (line 656)
        # Getting the type of 'sup' (line 656)
        sup_50888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 40), 'sup', False)
        # Getting the type of 'n' (line 656)
        n_50889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 45), 'n', False)
        # Processing the call keyword arguments (line 656)
        kwargs_50890 = {}
        # Getting the type of 'arange' (line 656)
        arange_50887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 33), 'arange', False)
        # Calling arange(args, kwargs) (line 656)
        arange_call_result_50891 = invoke(stypy.reporting.localization.Localization(__file__, 656, 33), arange_50887, *[sup_50888, n_50889], **kwargs_50890)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 18), tuple_50880, arange_call_result_50891)
        
        # Storing an element on a container (line 656)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 16), A_50879, (tuple_50880, rand_call_result_50878))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Getting the type of 'ind' (line 659)
        ind_50892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 15), 'ind')
        int_50893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 21), 'int')
        # Applying the binary operator '>' (line 659)
        result_gt_50894 = python_operator(stypy.reporting.localization.Localization(__file__, 659, 15), '>', ind_50892, int_50893)
        
        # Testing the type of an if condition (line 659)
        if_condition_50895 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 659, 12), result_gt_50894)
        # Assigning a type to the variable 'if_condition_50895' (line 659)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 659, 12), 'if_condition_50895', if_condition_50895)
        # SSA begins for if statement (line 659)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'A' (line 660)
        A_50896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 16), 'A')
        
        # Obtaining the type of the subscript
        
        # Call to nonzero(...): (line 660)
        # Processing the call arguments (line 660)
        # Getting the type of 'A' (line 660)
        A_50898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 26), 'A', False)
        # Processing the call keyword arguments (line 660)
        kwargs_50899 = {}
        # Getting the type of 'nonzero' (line 660)
        nonzero_50897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 18), 'nonzero', False)
        # Calling nonzero(args, kwargs) (line 660)
        nonzero_call_result_50900 = invoke(stypy.reporting.localization.Localization(__file__, 660, 18), nonzero_50897, *[A_50898], **kwargs_50899)
        
        # Getting the type of 'A' (line 660)
        A_50901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 16), 'A')
        # Obtaining the member '__getitem__' of a type (line 660)
        getitem___50902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 16), A_50901, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 660)
        subscript_call_result_50903 = invoke(stypy.reporting.localization.Localization(__file__, 660, 16), getitem___50902, nonzero_call_result_50900)
        
        complex_50904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 33), 'complex')
        
        # Call to astype(...): (line 660)
        # Processing the call arguments (line 660)
        # Getting the type of 'dtype' (line 660)
        dtype_50922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 72), 'dtype', False)
        # Processing the call keyword arguments (line 660)
        kwargs_50923 = {}
        
        # Call to rand(...): (line 660)
        # Processing the call arguments (line 660)
        # Getting the type of 'k' (line 660)
        k_50906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 44), 'k', False)
        int_50907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 46), 'int')
        # Applying the binary operator '+' (line 660)
        result_add_50908 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 44), '+', k_50906, int_50907)
        
        # Getting the type of 'n' (line 660)
        n_50909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 49), 'n', False)
        # Applying the binary operator '*' (line 660)
        result_mul_50910 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 43), '*', result_add_50908, n_50909)
        
        # Getting the type of 'k' (line 660)
        k_50911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 52), 'k', False)
        # Getting the type of 'k' (line 660)
        k_50912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 55), 'k', False)
        int_50913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 57), 'int')
        # Applying the binary operator '+' (line 660)
        result_add_50914 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 55), '+', k_50912, int_50913)
        
        # Applying the binary operator '*' (line 660)
        result_mul_50915 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 52), '*', k_50911, result_add_50914)
        
        int_50916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 61), 'int')
        # Applying the binary operator '//' (line 660)
        result_floordiv_50917 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 59), '//', result_mul_50915, int_50916)
        
        # Applying the binary operator '-' (line 660)
        result_sub_50918 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 43), '-', result_mul_50910, result_floordiv_50917)
        
        # Processing the call keyword arguments (line 660)
        kwargs_50919 = {}
        # Getting the type of 'rand' (line 660)
        rand_50905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 38), 'rand', False)
        # Calling rand(args, kwargs) (line 660)
        rand_call_result_50920 = invoke(stypy.reporting.localization.Localization(__file__, 660, 38), rand_50905, *[result_sub_50918], **kwargs_50919)
        
        # Obtaining the member 'astype' of a type (line 660)
        astype_50921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 38), rand_call_result_50920, 'astype')
        # Calling astype(args, kwargs) (line 660)
        astype_call_result_50924 = invoke(stypy.reporting.localization.Localization(__file__, 660, 38), astype_50921, *[dtype_50922], **kwargs_50923)
        
        # Applying the binary operator '*' (line 660)
        result_mul_50925 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 33), '*', complex_50904, astype_call_result_50924)
        
        # Applying the binary operator '+=' (line 660)
        result_iadd_50926 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 16), '+=', subscript_call_result_50903, result_mul_50925)
        # Getting the type of 'A' (line 660)
        A_50927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 16), 'A')
        
        # Call to nonzero(...): (line 660)
        # Processing the call arguments (line 660)
        # Getting the type of 'A' (line 660)
        A_50929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 26), 'A', False)
        # Processing the call keyword arguments (line 660)
        kwargs_50930 = {}
        # Getting the type of 'nonzero' (line 660)
        nonzero_50928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 18), 'nonzero', False)
        # Calling nonzero(args, kwargs) (line 660)
        nonzero_call_result_50931 = invoke(stypy.reporting.localization.Localization(__file__, 660, 18), nonzero_50928, *[A_50929], **kwargs_50930)
        
        # Storing an element on a container (line 660)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 16), A_50927, (nonzero_call_result_50931, result_iadd_50926))
        
        # SSA join for if statement (line 659)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Name (line 663):
        
        # Assigning a Call to a Name (line 663):
        
        # Call to zeros(...): (line 663)
        # Processing the call arguments (line 663)
        
        # Obtaining an instance of the builtin type 'tuple' (line 663)
        tuple_50933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 24), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 663)
        # Adding element type (line 663)
        # Getting the type of 'k' (line 663)
        k_50934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 24), 'k', False)
        int_50935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 26), 'int')
        # Applying the binary operator '+' (line 663)
        result_add_50936 = python_operator(stypy.reporting.localization.Localization(__file__, 663, 24), '+', k_50934, int_50935)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 663, 24), tuple_50933, result_add_50936)
        # Adding element type (line 663)
        # Getting the type of 'n' (line 663)
        n_50937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 29), 'n', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 663, 24), tuple_50933, n_50937)
        
        # Processing the call keyword arguments (line 663)
        # Getting the type of 'dtype' (line 663)
        dtype_50938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 39), 'dtype', False)
        keyword_50939 = dtype_50938
        kwargs_50940 = {'dtype': keyword_50939}
        # Getting the type of 'zeros' (line 663)
        zeros_50932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 17), 'zeros', False)
        # Calling zeros(args, kwargs) (line 663)
        zeros_call_result_50941 = invoke(stypy.reporting.localization.Localization(__file__, 663, 17), zeros_50932, *[tuple_50933], **kwargs_50940)
        
        # Assigning a type to the variable 'Ab' (line 663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 663, 12), 'Ab', zeros_call_result_50941)
        
        
        # Call to range(...): (line 664)
        # Processing the call arguments (line 664)
        # Getting the type of 'k' (line 664)
        k_50943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 29), 'k', False)
        int_50944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 664, 31), 'int')
        # Applying the binary operator '+' (line 664)
        result_add_50945 = python_operator(stypy.reporting.localization.Localization(__file__, 664, 29), '+', k_50943, int_50944)
        
        # Processing the call keyword arguments (line 664)
        kwargs_50946 = {}
        # Getting the type of 'range' (line 664)
        range_50942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 664, 23), 'range', False)
        # Calling range(args, kwargs) (line 664)
        range_call_result_50947 = invoke(stypy.reporting.localization.Localization(__file__, 664, 23), range_50942, *[result_add_50945], **kwargs_50946)
        
        # Testing the type of a for loop iterable (line 664)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 664, 12), range_call_result_50947)
        # Getting the type of the for loop variable (line 664)
        for_loop_var_50948 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 664, 12), range_call_result_50947)
        # Assigning a type to the variable 'row' (line 664)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 664, 12), 'row', for_loop_var_50948)
        # SSA begins for a for statement (line 664)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Subscript (line 665):
        
        # Assigning a Call to a Subscript (line 665):
        
        # Call to diag(...): (line 665)
        # Processing the call arguments (line 665)
        # Getting the type of 'A' (line 665)
        A_50950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 40), 'A', False)
        # Processing the call keyword arguments (line 665)
        # Getting the type of 'row' (line 665)
        row_50951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 45), 'row', False)
        keyword_50952 = row_50951
        kwargs_50953 = {'k': keyword_50952}
        # Getting the type of 'diag' (line 665)
        diag_50949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 35), 'diag', False)
        # Calling diag(args, kwargs) (line 665)
        diag_call_result_50954 = invoke(stypy.reporting.localization.Localization(__file__, 665, 35), diag_50949, *[A_50950], **kwargs_50953)
        
        # Getting the type of 'Ab' (line 665)
        Ab_50955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 16), 'Ab')
        
        # Getting the type of 'row' (line 665)
        row_50956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 20), 'row')
        # Applying the 'usub' unary operator (line 665)
        result___neg___50957 = python_operator(stypy.reporting.localization.Localization(__file__, 665, 19), 'usub', row_50956)
        
        int_50958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 24), 'int')
        # Applying the binary operator '-' (line 665)
        result_sub_50959 = python_operator(stypy.reporting.localization.Localization(__file__, 665, 19), '-', result___neg___50957, int_50958)
        
        # Getting the type of 'row' (line 665)
        row_50960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 27), 'row')
        slice_50961 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 665, 16), row_50960, None, None)
        # Storing an element on a container (line 665)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 665, 16), Ab_50955, ((result_sub_50959, slice_50961), diag_call_result_50954))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a Call to a Tuple (line 666):
        
        # Assigning a Subscript to a Name (line 666):
        
        # Obtaining the type of the subscript
        int_50962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 12), 'int')
        
        # Call to get_blas_funcs(...): (line 666)
        # Processing the call arguments (line 666)
        
        # Obtaining an instance of the builtin type 'tuple' (line 666)
        tuple_50964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 666)
        # Adding element type (line 666)
        str_50965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 666, 36), 'str', 'tbsv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 666, 36), tuple_50964, str_50965)
        
        # Processing the call keyword arguments (line 666)
        # Getting the type of 'dtype' (line 666)
        dtype_50966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 52), 'dtype', False)
        keyword_50967 = dtype_50966
        kwargs_50968 = {'dtype': keyword_50967}
        # Getting the type of 'get_blas_funcs' (line 666)
        get_blas_funcs_50963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 20), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 666)
        get_blas_funcs_call_result_50969 = invoke(stypy.reporting.localization.Localization(__file__, 666, 20), get_blas_funcs_50963, *[tuple_50964], **kwargs_50968)
        
        # Obtaining the member '__getitem__' of a type (line 666)
        getitem___50970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 12), get_blas_funcs_call_result_50969, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 666)
        subscript_call_result_50971 = invoke(stypy.reporting.localization.Localization(__file__, 666, 12), getitem___50970, int_50962)
        
        # Assigning a type to the variable 'tuple_var_assignment_46691' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 12), 'tuple_var_assignment_46691', subscript_call_result_50971)
        
        # Assigning a Name to a Name (line 666):
        # Getting the type of 'tuple_var_assignment_46691' (line 666)
        tuple_var_assignment_46691_50972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 12), 'tuple_var_assignment_46691')
        # Assigning a type to the variable 'func' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 12), 'func', tuple_var_assignment_46691_50972)
        
        # Assigning a Call to a Name (line 668):
        
        # Assigning a Call to a Name (line 668):
        
        # Call to func(...): (line 668)
        # Processing the call keyword arguments (line 668)
        # Getting the type of 'k' (line 668)
        k_50974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 24), 'k', False)
        keyword_50975 = k_50974
        # Getting the type of 'Ab' (line 668)
        Ab_50976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 29), 'Ab', False)
        keyword_50977 = Ab_50976
        # Getting the type of 'x' (line 668)
        x_50978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 35), 'x', False)
        keyword_50979 = x_50978
        kwargs_50980 = {'a': keyword_50977, 'x': keyword_50979, 'k': keyword_50975}
        # Getting the type of 'func' (line 668)
        func_50973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 17), 'func', False)
        # Calling func(args, kwargs) (line 668)
        func_call_result_50981 = invoke(stypy.reporting.localization.Localization(__file__, 668, 17), func_50973, *[], **kwargs_50980)
        
        # Assigning a type to the variable 'y1' (line 668)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 668, 12), 'y1', func_call_result_50981)
        
        # Assigning a Call to a Name (line 669):
        
        # Assigning a Call to a Name (line 669):
        
        # Call to solve(...): (line 669)
        # Processing the call arguments (line 669)
        # Getting the type of 'A' (line 669)
        A_50983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 23), 'A', False)
        # Getting the type of 'x' (line 669)
        x_50984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 26), 'x', False)
        # Processing the call keyword arguments (line 669)
        kwargs_50985 = {}
        # Getting the type of 'solve' (line 669)
        solve_50982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 669)
        solve_call_result_50986 = invoke(stypy.reporting.localization.Localization(__file__, 669, 17), solve_50982, *[A_50983, x_50984], **kwargs_50985)
        
        # Assigning a type to the variable 'y2' (line 669)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 669, 12), 'y2', solve_call_result_50986)
        
        # Call to assert_array_almost_equal(...): (line 670)
        # Processing the call arguments (line 670)
        # Getting the type of 'y1' (line 670)
        y1_50988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 38), 'y1', False)
        # Getting the type of 'y2' (line 670)
        y2_50989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 42), 'y2', False)
        # Processing the call keyword arguments (line 670)
        kwargs_50990 = {}
        # Getting the type of 'assert_array_almost_equal' (line 670)
        assert_array_almost_equal_50987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 670)
        assert_array_almost_equal_call_result_50991 = invoke(stypy.reporting.localization.Localization(__file__, 670, 12), assert_array_almost_equal_50987, *[y1_50988, y2_50989], **kwargs_50990)
        
        
        # Assigning a Call to a Name (line 672):
        
        # Assigning a Call to a Name (line 672):
        
        # Call to func(...): (line 672)
        # Processing the call keyword arguments (line 672)
        # Getting the type of 'k' (line 672)
        k_50993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 24), 'k', False)
        keyword_50994 = k_50993
        # Getting the type of 'Ab' (line 672)
        Ab_50995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 29), 'Ab', False)
        keyword_50996 = Ab_50995
        # Getting the type of 'x' (line 672)
        x_50997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 35), 'x', False)
        keyword_50998 = x_50997
        int_50999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 43), 'int')
        keyword_51000 = int_50999
        kwargs_51001 = {'a': keyword_50996, 'x': keyword_50998, 'k': keyword_50994, 'diag': keyword_51000}
        # Getting the type of 'func' (line 672)
        func_50992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 17), 'func', False)
        # Calling func(args, kwargs) (line 672)
        func_call_result_51002 = invoke(stypy.reporting.localization.Localization(__file__, 672, 17), func_50992, *[], **kwargs_51001)
        
        # Assigning a type to the variable 'y1' (line 672)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 672, 12), 'y1', func_call_result_51002)
        
        # Assigning a Call to a Subscript (line 673):
        
        # Assigning a Call to a Subscript (line 673):
        
        # Call to dtype(...): (line 673)
        # Processing the call arguments (line 673)
        int_51004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 44), 'int')
        # Processing the call keyword arguments (line 673)
        kwargs_51005 = {}
        # Getting the type of 'dtype' (line 673)
        dtype_51003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 38), 'dtype', False)
        # Calling dtype(args, kwargs) (line 673)
        dtype_call_result_51006 = invoke(stypy.reporting.localization.Localization(__file__, 673, 38), dtype_51003, *[int_51004], **kwargs_51005)
        
        # Getting the type of 'A' (line 673)
        A_51007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 673)
        tuple_51008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 673)
        # Adding element type (line 673)
        
        # Call to arange(...): (line 673)
        # Processing the call arguments (line 673)
        # Getting the type of 'n' (line 673)
        n_51010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 21), 'n', False)
        # Processing the call keyword arguments (line 673)
        kwargs_51011 = {}
        # Getting the type of 'arange' (line 673)
        arange_51009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 14), 'arange', False)
        # Calling arange(args, kwargs) (line 673)
        arange_call_result_51012 = invoke(stypy.reporting.localization.Localization(__file__, 673, 14), arange_51009, *[n_51010], **kwargs_51011)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 673, 14), tuple_51008, arange_call_result_51012)
        # Adding element type (line 673)
        
        # Call to arange(...): (line 673)
        # Processing the call arguments (line 673)
        # Getting the type of 'n' (line 673)
        n_51014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 32), 'n', False)
        # Processing the call keyword arguments (line 673)
        kwargs_51015 = {}
        # Getting the type of 'arange' (line 673)
        arange_51013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 25), 'arange', False)
        # Calling arange(args, kwargs) (line 673)
        arange_call_result_51016 = invoke(stypy.reporting.localization.Localization(__file__, 673, 25), arange_51013, *[n_51014], **kwargs_51015)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 673, 14), tuple_51008, arange_call_result_51016)
        
        # Storing an element on a container (line 673)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 673, 12), A_51007, (tuple_51008, dtype_call_result_51006))
        
        # Assigning a Call to a Name (line 674):
        
        # Assigning a Call to a Name (line 674):
        
        # Call to solve(...): (line 674)
        # Processing the call arguments (line 674)
        # Getting the type of 'A' (line 674)
        A_51018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 23), 'A', False)
        # Getting the type of 'x' (line 674)
        x_51019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 26), 'x', False)
        # Processing the call keyword arguments (line 674)
        kwargs_51020 = {}
        # Getting the type of 'solve' (line 674)
        solve_51017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 674)
        solve_call_result_51021 = invoke(stypy.reporting.localization.Localization(__file__, 674, 17), solve_51017, *[A_51018, x_51019], **kwargs_51020)
        
        # Assigning a type to the variable 'y2' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 12), 'y2', solve_call_result_51021)
        
        # Call to assert_array_almost_equal(...): (line 675)
        # Processing the call arguments (line 675)
        # Getting the type of 'y1' (line 675)
        y1_51023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 38), 'y1', False)
        # Getting the type of 'y2' (line 675)
        y2_51024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 42), 'y2', False)
        # Processing the call keyword arguments (line 675)
        kwargs_51025 = {}
        # Getting the type of 'assert_array_almost_equal' (line 675)
        assert_array_almost_equal_51022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 675)
        assert_array_almost_equal_call_result_51026 = invoke(stypy.reporting.localization.Localization(__file__, 675, 12), assert_array_almost_equal_51022, *[y1_51023, y2_51024], **kwargs_51025)
        
        
        # Assigning a Call to a Name (line 677):
        
        # Assigning a Call to a Name (line 677):
        
        # Call to func(...): (line 677)
        # Processing the call keyword arguments (line 677)
        # Getting the type of 'k' (line 677)
        k_51028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 24), 'k', False)
        keyword_51029 = k_51028
        # Getting the type of 'Ab' (line 677)
        Ab_51030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 29), 'Ab', False)
        keyword_51031 = Ab_51030
        # Getting the type of 'x' (line 677)
        x_51032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 35), 'x', False)
        keyword_51033 = x_51032
        int_51034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 43), 'int')
        keyword_51035 = int_51034
        int_51036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 677, 52), 'int')
        keyword_51037 = int_51036
        kwargs_51038 = {'a': keyword_51031, 'x': keyword_51033, 'k': keyword_51029, 'trans': keyword_51037, 'diag': keyword_51035}
        # Getting the type of 'func' (line 677)
        func_51027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 17), 'func', False)
        # Calling func(args, kwargs) (line 677)
        func_call_result_51039 = invoke(stypy.reporting.localization.Localization(__file__, 677, 17), func_51027, *[], **kwargs_51038)
        
        # Assigning a type to the variable 'y1' (line 677)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 12), 'y1', func_call_result_51039)
        
        # Assigning a Call to a Name (line 678):
        
        # Assigning a Call to a Name (line 678):
        
        # Call to solve(...): (line 678)
        # Processing the call arguments (line 678)
        # Getting the type of 'A' (line 678)
        A_51041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 23), 'A', False)
        # Obtaining the member 'T' of a type (line 678)
        T_51042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 23), A_51041, 'T')
        # Getting the type of 'x' (line 678)
        x_51043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 28), 'x', False)
        # Processing the call keyword arguments (line 678)
        kwargs_51044 = {}
        # Getting the type of 'solve' (line 678)
        solve_51040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 678)
        solve_call_result_51045 = invoke(stypy.reporting.localization.Localization(__file__, 678, 17), solve_51040, *[T_51042, x_51043], **kwargs_51044)
        
        # Assigning a type to the variable 'y2' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'y2', solve_call_result_51045)
        
        # Call to assert_array_almost_equal(...): (line 679)
        # Processing the call arguments (line 679)
        # Getting the type of 'y1' (line 679)
        y1_51047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 38), 'y1', False)
        # Getting the type of 'y2' (line 679)
        y2_51048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 42), 'y2', False)
        # Processing the call keyword arguments (line 679)
        kwargs_51049 = {}
        # Getting the type of 'assert_array_almost_equal' (line 679)
        assert_array_almost_equal_51046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 679)
        assert_array_almost_equal_call_result_51050 = invoke(stypy.reporting.localization.Localization(__file__, 679, 12), assert_array_almost_equal_51046, *[y1_51047, y2_51048], **kwargs_51049)
        
        
        # Assigning a Call to a Name (line 681):
        
        # Assigning a Call to a Name (line 681):
        
        # Call to func(...): (line 681)
        # Processing the call keyword arguments (line 681)
        # Getting the type of 'k' (line 681)
        k_51052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 24), 'k', False)
        keyword_51053 = k_51052
        # Getting the type of 'Ab' (line 681)
        Ab_51054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 29), 'Ab', False)
        keyword_51055 = Ab_51054
        # Getting the type of 'x' (line 681)
        x_51056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 35), 'x', False)
        keyword_51057 = x_51056
        int_51058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 43), 'int')
        keyword_51059 = int_51058
        int_51060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 681, 52), 'int')
        keyword_51061 = int_51060
        kwargs_51062 = {'a': keyword_51055, 'x': keyword_51057, 'k': keyword_51053, 'trans': keyword_51061, 'diag': keyword_51059}
        # Getting the type of 'func' (line 681)
        func_51051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 681, 17), 'func', False)
        # Calling func(args, kwargs) (line 681)
        func_call_result_51063 = invoke(stypy.reporting.localization.Localization(__file__, 681, 17), func_51051, *[], **kwargs_51062)
        
        # Assigning a type to the variable 'y1' (line 681)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 681, 12), 'y1', func_call_result_51063)
        
        # Assigning a Call to a Name (line 682):
        
        # Assigning a Call to a Name (line 682):
        
        # Call to solve(...): (line 682)
        # Processing the call arguments (line 682)
        
        # Call to conj(...): (line 682)
        # Processing the call keyword arguments (line 682)
        kwargs_51067 = {}
        # Getting the type of 'A' (line 682)
        A_51065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 23), 'A', False)
        # Obtaining the member 'conj' of a type (line 682)
        conj_51066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 23), A_51065, 'conj')
        # Calling conj(args, kwargs) (line 682)
        conj_call_result_51068 = invoke(stypy.reporting.localization.Localization(__file__, 682, 23), conj_51066, *[], **kwargs_51067)
        
        # Obtaining the member 'T' of a type (line 682)
        T_51069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 23), conj_call_result_51068, 'T')
        # Getting the type of 'x' (line 682)
        x_51070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 35), 'x', False)
        # Processing the call keyword arguments (line 682)
        kwargs_51071 = {}
        # Getting the type of 'solve' (line 682)
        solve_51064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 682)
        solve_call_result_51072 = invoke(stypy.reporting.localization.Localization(__file__, 682, 17), solve_51064, *[T_51069, x_51070], **kwargs_51071)
        
        # Assigning a type to the variable 'y2' (line 682)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 682, 12), 'y2', solve_call_result_51072)
        
        # Call to assert_array_almost_equal(...): (line 683)
        # Processing the call arguments (line 683)
        # Getting the type of 'y1' (line 683)
        y1_51074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 38), 'y1', False)
        # Getting the type of 'y2' (line 683)
        y2_51075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 42), 'y2', False)
        # Processing the call keyword arguments (line 683)
        kwargs_51076 = {}
        # Getting the type of 'assert_array_almost_equal' (line 683)
        assert_array_almost_equal_51073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 683)
        assert_array_almost_equal_call_result_51077 = invoke(stypy.reporting.localization.Localization(__file__, 683, 12), assert_array_almost_equal_51073, *[y1_51074, y2_51075], **kwargs_51076)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_tbsv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_tbsv' in the type store
        # Getting the type of 'stypy_return_type' (line 647)
        stypy_return_type_51078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_51078)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_tbsv'
        return stypy_return_type_51078


    @norecursion
    def test_tpmv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_tpmv'
        module_type_store = module_type_store.open_function_context('test_tpmv', 685, 4, False)
        # Assigning a type to the variable 'self' (line 686)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 686, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_tpmv')
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_tpmv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_tpmv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_tpmv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_tpmv(...)' code ##################

        
        # Call to seed(...): (line 686)
        # Processing the call arguments (line 686)
        int_51080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 13), 'int')
        # Processing the call keyword arguments (line 686)
        kwargs_51081 = {}
        # Getting the type of 'seed' (line 686)
        seed_51079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 686)
        seed_call_result_51082 = invoke(stypy.reporting.localization.Localization(__file__, 686, 8), seed_51079, *[int_51080], **kwargs_51081)
        
        
        
        # Call to enumerate(...): (line 687)
        # Processing the call arguments (line 687)
        # Getting the type of 'DTYPES' (line 687)
        DTYPES_51084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 36), 'DTYPES', False)
        # Processing the call keyword arguments (line 687)
        kwargs_51085 = {}
        # Getting the type of 'enumerate' (line 687)
        enumerate_51083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 687)
        enumerate_call_result_51086 = invoke(stypy.reporting.localization.Localization(__file__, 687, 26), enumerate_51083, *[DTYPES_51084], **kwargs_51085)
        
        # Testing the type of a for loop iterable (line 687)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 687, 8), enumerate_call_result_51086)
        # Getting the type of the for loop variable (line 687)
        for_loop_var_51087 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 687, 8), enumerate_call_result_51086)
        # Assigning a type to the variable 'ind' (line 687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 687, 8), for_loop_var_51087))
        # Assigning a type to the variable 'dtype' (line 687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 687, 8), for_loop_var_51087))
        # SSA begins for a for statement (line 687)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 688):
        
        # Assigning a Num to a Name (line 688):
        int_51088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 16), 'int')
        # Assigning a type to the variable 'n' (line 688)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 12), 'n', int_51088)
        
        # Assigning a Call to a Name (line 689):
        
        # Assigning a Call to a Name (line 689):
        
        # Call to astype(...): (line 689)
        # Processing the call arguments (line 689)
        # Getting the type of 'dtype' (line 689)
        dtype_51094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 31), 'dtype', False)
        # Processing the call keyword arguments (line 689)
        kwargs_51095 = {}
        
        # Call to rand(...): (line 689)
        # Processing the call arguments (line 689)
        # Getting the type of 'n' (line 689)
        n_51090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 21), 'n', False)
        # Processing the call keyword arguments (line 689)
        kwargs_51091 = {}
        # Getting the type of 'rand' (line 689)
        rand_51089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 689)
        rand_call_result_51092 = invoke(stypy.reporting.localization.Localization(__file__, 689, 16), rand_51089, *[n_51090], **kwargs_51091)
        
        # Obtaining the member 'astype' of a type (line 689)
        astype_51093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 16), rand_call_result_51092, 'astype')
        # Calling astype(args, kwargs) (line 689)
        astype_call_result_51096 = invoke(stypy.reporting.localization.Localization(__file__, 689, 16), astype_51093, *[dtype_51094], **kwargs_51095)
        
        # Assigning a type to the variable 'x' (line 689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 12), 'x', astype_call_result_51096)
        
        # Assigning a IfExp to a Name (line 691):
        
        # Assigning a IfExp to a Name (line 691):
        
        
        # Getting the type of 'ind' (line 691)
        ind_51097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 36), 'ind')
        int_51098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 42), 'int')
        # Applying the binary operator '<' (line 691)
        result_lt_51099 = python_operator(stypy.reporting.localization.Localization(__file__, 691, 36), '<', ind_51097, int_51098)
        
        # Testing the type of an if expression (line 691)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 691, 16), result_lt_51099)
        # SSA begins for if expression (line 691)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to triu(...): (line 691)
        # Processing the call arguments (line 691)
        
        # Call to rand(...): (line 691)
        # Processing the call arguments (line 691)
        # Getting the type of 'n' (line 691)
        n_51102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 26), 'n', False)
        # Getting the type of 'n' (line 691)
        n_51103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 29), 'n', False)
        # Processing the call keyword arguments (line 691)
        kwargs_51104 = {}
        # Getting the type of 'rand' (line 691)
        rand_51101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 21), 'rand', False)
        # Calling rand(args, kwargs) (line 691)
        rand_call_result_51105 = invoke(stypy.reporting.localization.Localization(__file__, 691, 21), rand_51101, *[n_51102, n_51103], **kwargs_51104)
        
        # Processing the call keyword arguments (line 691)
        kwargs_51106 = {}
        # Getting the type of 'triu' (line 691)
        triu_51100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 16), 'triu', False)
        # Calling triu(args, kwargs) (line 691)
        triu_call_result_51107 = invoke(stypy.reporting.localization.Localization(__file__, 691, 16), triu_51100, *[rand_call_result_51105], **kwargs_51106)
        
        # SSA branch for the else part of an if expression (line 691)
        module_type_store.open_ssa_branch('if expression else')
        
        # Call to triu(...): (line 691)
        # Processing the call arguments (line 691)
        
        # Call to rand(...): (line 691)
        # Processing the call arguments (line 691)
        # Getting the type of 'n' (line 691)
        n_51110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 59), 'n', False)
        # Getting the type of 'n' (line 691)
        n_51111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 62), 'n', False)
        # Processing the call keyword arguments (line 691)
        kwargs_51112 = {}
        # Getting the type of 'rand' (line 691)
        rand_51109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 54), 'rand', False)
        # Calling rand(args, kwargs) (line 691)
        rand_call_result_51113 = invoke(stypy.reporting.localization.Localization(__file__, 691, 54), rand_51109, *[n_51110, n_51111], **kwargs_51112)
        
        
        # Call to rand(...): (line 691)
        # Processing the call arguments (line 691)
        # Getting the type of 'n' (line 691)
        n_51115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 70), 'n', False)
        # Getting the type of 'n' (line 691)
        n_51116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 73), 'n', False)
        # Processing the call keyword arguments (line 691)
        kwargs_51117 = {}
        # Getting the type of 'rand' (line 691)
        rand_51114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 65), 'rand', False)
        # Calling rand(args, kwargs) (line 691)
        rand_call_result_51118 = invoke(stypy.reporting.localization.Localization(__file__, 691, 65), rand_51114, *[n_51115, n_51116], **kwargs_51117)
        
        complex_51119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 76), 'complex')
        # Applying the binary operator '*' (line 691)
        result_mul_51120 = python_operator(stypy.reporting.localization.Localization(__file__, 691, 65), '*', rand_call_result_51118, complex_51119)
        
        # Applying the binary operator '+' (line 691)
        result_add_51121 = python_operator(stypy.reporting.localization.Localization(__file__, 691, 54), '+', rand_call_result_51113, result_mul_51120)
        
        # Processing the call keyword arguments (line 691)
        kwargs_51122 = {}
        # Getting the type of 'triu' (line 691)
        triu_51108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 49), 'triu', False)
        # Calling triu(args, kwargs) (line 691)
        triu_call_result_51123 = invoke(stypy.reporting.localization.Localization(__file__, 691, 49), triu_51108, *[result_add_51121], **kwargs_51122)
        
        # SSA join for if expression (line 691)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_51124 = union_type.UnionType.add(triu_call_result_51107, triu_call_result_51123)
        
        # Assigning a type to the variable 'A' (line 691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'A', if_exp_51124)
        
        # Assigning a Call to a Tuple (line 693):
        
        # Assigning a Subscript to a Name (line 693):
        
        # Obtaining the type of the subscript
        int_51125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 12), 'int')
        
        # Call to tril_indices(...): (line 693)
        # Processing the call arguments (line 693)
        # Getting the type of 'n' (line 693)
        n_51127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 32), 'n', False)
        # Processing the call keyword arguments (line 693)
        kwargs_51128 = {}
        # Getting the type of 'tril_indices' (line 693)
        tril_indices_51126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 693)
        tril_indices_call_result_51129 = invoke(stypy.reporting.localization.Localization(__file__, 693, 19), tril_indices_51126, *[n_51127], **kwargs_51128)
        
        # Obtaining the member '__getitem__' of a type (line 693)
        getitem___51130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 12), tril_indices_call_result_51129, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 693)
        subscript_call_result_51131 = invoke(stypy.reporting.localization.Localization(__file__, 693, 12), getitem___51130, int_51125)
        
        # Assigning a type to the variable 'tuple_var_assignment_46692' (line 693)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 693, 12), 'tuple_var_assignment_46692', subscript_call_result_51131)
        
        # Assigning a Subscript to a Name (line 693):
        
        # Obtaining the type of the subscript
        int_51132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 12), 'int')
        
        # Call to tril_indices(...): (line 693)
        # Processing the call arguments (line 693)
        # Getting the type of 'n' (line 693)
        n_51134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 32), 'n', False)
        # Processing the call keyword arguments (line 693)
        kwargs_51135 = {}
        # Getting the type of 'tril_indices' (line 693)
        tril_indices_51133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 693)
        tril_indices_call_result_51136 = invoke(stypy.reporting.localization.Localization(__file__, 693, 19), tril_indices_51133, *[n_51134], **kwargs_51135)
        
        # Obtaining the member '__getitem__' of a type (line 693)
        getitem___51137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 12), tril_indices_call_result_51136, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 693)
        subscript_call_result_51138 = invoke(stypy.reporting.localization.Localization(__file__, 693, 12), getitem___51137, int_51132)
        
        # Assigning a type to the variable 'tuple_var_assignment_46693' (line 693)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 693, 12), 'tuple_var_assignment_46693', subscript_call_result_51138)
        
        # Assigning a Name to a Name (line 693):
        # Getting the type of 'tuple_var_assignment_46692' (line 693)
        tuple_var_assignment_46692_51139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 12), 'tuple_var_assignment_46692')
        # Assigning a type to the variable 'c' (line 693)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 693, 12), 'c', tuple_var_assignment_46692_51139)
        
        # Assigning a Name to a Name (line 693):
        # Getting the type of 'tuple_var_assignment_46693' (line 693)
        tuple_var_assignment_46693_51140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 12), 'tuple_var_assignment_46693')
        # Assigning a type to the variable 'r' (line 693)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 693, 15), 'r', tuple_var_assignment_46693_51140)
        
        # Assigning a Subscript to a Name (line 694):
        
        # Assigning a Subscript to a Name (line 694):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 694)
        tuple_51141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 694, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 694)
        # Adding element type (line 694)
        # Getting the type of 'r' (line 694)
        r_51142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 19), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 694, 19), tuple_51141, r_51142)
        # Adding element type (line 694)
        # Getting the type of 'c' (line 694)
        c_51143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 22), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 694, 19), tuple_51141, c_51143)
        
        # Getting the type of 'A' (line 694)
        A_51144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 17), 'A')
        # Obtaining the member '__getitem__' of a type (line 694)
        getitem___51145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 17), A_51144, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 694)
        subscript_call_result_51146 = invoke(stypy.reporting.localization.Localization(__file__, 694, 17), getitem___51145, tuple_51141)
        
        # Assigning a type to the variable 'Ap' (line 694)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 694, 12), 'Ap', subscript_call_result_51146)
        
        # Assigning a Call to a Tuple (line 695):
        
        # Assigning a Subscript to a Name (line 695):
        
        # Obtaining the type of the subscript
        int_51147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 12), 'int')
        
        # Call to get_blas_funcs(...): (line 695)
        # Processing the call arguments (line 695)
        
        # Obtaining an instance of the builtin type 'tuple' (line 695)
        tuple_51149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 695)
        # Adding element type (line 695)
        str_51150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 36), 'str', 'tpmv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 695, 36), tuple_51149, str_51150)
        
        # Processing the call keyword arguments (line 695)
        # Getting the type of 'dtype' (line 695)
        dtype_51151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 52), 'dtype', False)
        keyword_51152 = dtype_51151
        kwargs_51153 = {'dtype': keyword_51152}
        # Getting the type of 'get_blas_funcs' (line 695)
        get_blas_funcs_51148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 20), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 695)
        get_blas_funcs_call_result_51154 = invoke(stypy.reporting.localization.Localization(__file__, 695, 20), get_blas_funcs_51148, *[tuple_51149], **kwargs_51153)
        
        # Obtaining the member '__getitem__' of a type (line 695)
        getitem___51155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 695, 12), get_blas_funcs_call_result_51154, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 695)
        subscript_call_result_51156 = invoke(stypy.reporting.localization.Localization(__file__, 695, 12), getitem___51155, int_51147)
        
        # Assigning a type to the variable 'tuple_var_assignment_46694' (line 695)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 695, 12), 'tuple_var_assignment_46694', subscript_call_result_51156)
        
        # Assigning a Name to a Name (line 695):
        # Getting the type of 'tuple_var_assignment_46694' (line 695)
        tuple_var_assignment_46694_51157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 12), 'tuple_var_assignment_46694')
        # Assigning a type to the variable 'func' (line 695)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 695, 12), 'func', tuple_var_assignment_46694_51157)
        
        # Assigning a Call to a Name (line 697):
        
        # Assigning a Call to a Name (line 697):
        
        # Call to func(...): (line 697)
        # Processing the call keyword arguments (line 697)
        # Getting the type of 'n' (line 697)
        n_51159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 24), 'n', False)
        keyword_51160 = n_51159
        # Getting the type of 'Ap' (line 697)
        Ap_51161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 30), 'Ap', False)
        keyword_51162 = Ap_51161
        # Getting the type of 'x' (line 697)
        x_51163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 36), 'x', False)
        keyword_51164 = x_51163
        kwargs_51165 = {'ap': keyword_51162, 'x': keyword_51164, 'n': keyword_51160}
        # Getting the type of 'func' (line 697)
        func_51158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 17), 'func', False)
        # Calling func(args, kwargs) (line 697)
        func_call_result_51166 = invoke(stypy.reporting.localization.Localization(__file__, 697, 17), func_51158, *[], **kwargs_51165)
        
        # Assigning a type to the variable 'y1' (line 697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 697, 12), 'y1', func_call_result_51166)
        
        # Assigning a Call to a Name (line 698):
        
        # Assigning a Call to a Name (line 698):
        
        # Call to dot(...): (line 698)
        # Processing the call arguments (line 698)
        # Getting the type of 'x' (line 698)
        x_51169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 23), 'x', False)
        # Processing the call keyword arguments (line 698)
        kwargs_51170 = {}
        # Getting the type of 'A' (line 698)
        A_51167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 17), 'A', False)
        # Obtaining the member 'dot' of a type (line 698)
        dot_51168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 17), A_51167, 'dot')
        # Calling dot(args, kwargs) (line 698)
        dot_call_result_51171 = invoke(stypy.reporting.localization.Localization(__file__, 698, 17), dot_51168, *[x_51169], **kwargs_51170)
        
        # Assigning a type to the variable 'y2' (line 698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 698, 12), 'y2', dot_call_result_51171)
        
        # Call to assert_array_almost_equal(...): (line 699)
        # Processing the call arguments (line 699)
        # Getting the type of 'y1' (line 699)
        y1_51173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 38), 'y1', False)
        # Getting the type of 'y2' (line 699)
        y2_51174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 42), 'y2', False)
        # Processing the call keyword arguments (line 699)
        kwargs_51175 = {}
        # Getting the type of 'assert_array_almost_equal' (line 699)
        assert_array_almost_equal_51172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 699)
        assert_array_almost_equal_call_result_51176 = invoke(stypy.reporting.localization.Localization(__file__, 699, 12), assert_array_almost_equal_51172, *[y1_51173, y2_51174], **kwargs_51175)
        
        
        # Assigning a Call to a Name (line 701):
        
        # Assigning a Call to a Name (line 701):
        
        # Call to func(...): (line 701)
        # Processing the call keyword arguments (line 701)
        # Getting the type of 'n' (line 701)
        n_51178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 24), 'n', False)
        keyword_51179 = n_51178
        # Getting the type of 'Ap' (line 701)
        Ap_51180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 30), 'Ap', False)
        keyword_51181 = Ap_51180
        # Getting the type of 'x' (line 701)
        x_51182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 36), 'x', False)
        keyword_51183 = x_51182
        int_51184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 44), 'int')
        keyword_51185 = int_51184
        kwargs_51186 = {'ap': keyword_51181, 'diag': keyword_51185, 'x': keyword_51183, 'n': keyword_51179}
        # Getting the type of 'func' (line 701)
        func_51177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 17), 'func', False)
        # Calling func(args, kwargs) (line 701)
        func_call_result_51187 = invoke(stypy.reporting.localization.Localization(__file__, 701, 17), func_51177, *[], **kwargs_51186)
        
        # Assigning a type to the variable 'y1' (line 701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 12), 'y1', func_call_result_51187)
        
        # Assigning a Call to a Subscript (line 702):
        
        # Assigning a Call to a Subscript (line 702):
        
        # Call to dtype(...): (line 702)
        # Processing the call arguments (line 702)
        int_51189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 44), 'int')
        # Processing the call keyword arguments (line 702)
        kwargs_51190 = {}
        # Getting the type of 'dtype' (line 702)
        dtype_51188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 38), 'dtype', False)
        # Calling dtype(args, kwargs) (line 702)
        dtype_call_result_51191 = invoke(stypy.reporting.localization.Localization(__file__, 702, 38), dtype_51188, *[int_51189], **kwargs_51190)
        
        # Getting the type of 'A' (line 702)
        A_51192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 702)
        tuple_51193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 702, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 702)
        # Adding element type (line 702)
        
        # Call to arange(...): (line 702)
        # Processing the call arguments (line 702)
        # Getting the type of 'n' (line 702)
        n_51195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 21), 'n', False)
        # Processing the call keyword arguments (line 702)
        kwargs_51196 = {}
        # Getting the type of 'arange' (line 702)
        arange_51194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 14), 'arange', False)
        # Calling arange(args, kwargs) (line 702)
        arange_call_result_51197 = invoke(stypy.reporting.localization.Localization(__file__, 702, 14), arange_51194, *[n_51195], **kwargs_51196)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 702, 14), tuple_51193, arange_call_result_51197)
        # Adding element type (line 702)
        
        # Call to arange(...): (line 702)
        # Processing the call arguments (line 702)
        # Getting the type of 'n' (line 702)
        n_51199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 32), 'n', False)
        # Processing the call keyword arguments (line 702)
        kwargs_51200 = {}
        # Getting the type of 'arange' (line 702)
        arange_51198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 25), 'arange', False)
        # Calling arange(args, kwargs) (line 702)
        arange_call_result_51201 = invoke(stypy.reporting.localization.Localization(__file__, 702, 25), arange_51198, *[n_51199], **kwargs_51200)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 702, 14), tuple_51193, arange_call_result_51201)
        
        # Storing an element on a container (line 702)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 702, 12), A_51192, (tuple_51193, dtype_call_result_51191))
        
        # Assigning a Call to a Name (line 703):
        
        # Assigning a Call to a Name (line 703):
        
        # Call to dot(...): (line 703)
        # Processing the call arguments (line 703)
        # Getting the type of 'x' (line 703)
        x_51204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 23), 'x', False)
        # Processing the call keyword arguments (line 703)
        kwargs_51205 = {}
        # Getting the type of 'A' (line 703)
        A_51202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 17), 'A', False)
        # Obtaining the member 'dot' of a type (line 703)
        dot_51203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 17), A_51202, 'dot')
        # Calling dot(args, kwargs) (line 703)
        dot_call_result_51206 = invoke(stypy.reporting.localization.Localization(__file__, 703, 17), dot_51203, *[x_51204], **kwargs_51205)
        
        # Assigning a type to the variable 'y2' (line 703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 703, 12), 'y2', dot_call_result_51206)
        
        # Call to assert_array_almost_equal(...): (line 704)
        # Processing the call arguments (line 704)
        # Getting the type of 'y1' (line 704)
        y1_51208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 38), 'y1', False)
        # Getting the type of 'y2' (line 704)
        y2_51209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 42), 'y2', False)
        # Processing the call keyword arguments (line 704)
        kwargs_51210 = {}
        # Getting the type of 'assert_array_almost_equal' (line 704)
        assert_array_almost_equal_51207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 704)
        assert_array_almost_equal_call_result_51211 = invoke(stypy.reporting.localization.Localization(__file__, 704, 12), assert_array_almost_equal_51207, *[y1_51208, y2_51209], **kwargs_51210)
        
        
        # Assigning a Call to a Name (line 706):
        
        # Assigning a Call to a Name (line 706):
        
        # Call to func(...): (line 706)
        # Processing the call keyword arguments (line 706)
        # Getting the type of 'n' (line 706)
        n_51213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 24), 'n', False)
        keyword_51214 = n_51213
        # Getting the type of 'Ap' (line 706)
        Ap_51215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 30), 'Ap', False)
        keyword_51216 = Ap_51215
        # Getting the type of 'x' (line 706)
        x_51217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 36), 'x', False)
        keyword_51218 = x_51217
        int_51219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 44), 'int')
        keyword_51220 = int_51219
        int_51221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 53), 'int')
        keyword_51222 = int_51221
        kwargs_51223 = {'ap': keyword_51216, 'diag': keyword_51220, 'trans': keyword_51222, 'x': keyword_51218, 'n': keyword_51214}
        # Getting the type of 'func' (line 706)
        func_51212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 17), 'func', False)
        # Calling func(args, kwargs) (line 706)
        func_call_result_51224 = invoke(stypy.reporting.localization.Localization(__file__, 706, 17), func_51212, *[], **kwargs_51223)
        
        # Assigning a type to the variable 'y1' (line 706)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 706, 12), 'y1', func_call_result_51224)
        
        # Assigning a Call to a Name (line 707):
        
        # Assigning a Call to a Name (line 707):
        
        # Call to dot(...): (line 707)
        # Processing the call arguments (line 707)
        # Getting the type of 'x' (line 707)
        x_51228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 25), 'x', False)
        # Processing the call keyword arguments (line 707)
        kwargs_51229 = {}
        # Getting the type of 'A' (line 707)
        A_51225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 17), 'A', False)
        # Obtaining the member 'T' of a type (line 707)
        T_51226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 707, 17), A_51225, 'T')
        # Obtaining the member 'dot' of a type (line 707)
        dot_51227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 707, 17), T_51226, 'dot')
        # Calling dot(args, kwargs) (line 707)
        dot_call_result_51230 = invoke(stypy.reporting.localization.Localization(__file__, 707, 17), dot_51227, *[x_51228], **kwargs_51229)
        
        # Assigning a type to the variable 'y2' (line 707)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 12), 'y2', dot_call_result_51230)
        
        # Call to assert_array_almost_equal(...): (line 708)
        # Processing the call arguments (line 708)
        # Getting the type of 'y1' (line 708)
        y1_51232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 38), 'y1', False)
        # Getting the type of 'y2' (line 708)
        y2_51233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 42), 'y2', False)
        # Processing the call keyword arguments (line 708)
        kwargs_51234 = {}
        # Getting the type of 'assert_array_almost_equal' (line 708)
        assert_array_almost_equal_51231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 708)
        assert_array_almost_equal_call_result_51235 = invoke(stypy.reporting.localization.Localization(__file__, 708, 12), assert_array_almost_equal_51231, *[y1_51232, y2_51233], **kwargs_51234)
        
        
        # Assigning a Call to a Name (line 710):
        
        # Assigning a Call to a Name (line 710):
        
        # Call to func(...): (line 710)
        # Processing the call keyword arguments (line 710)
        # Getting the type of 'n' (line 710)
        n_51237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 24), 'n', False)
        keyword_51238 = n_51237
        # Getting the type of 'Ap' (line 710)
        Ap_51239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 30), 'Ap', False)
        keyword_51240 = Ap_51239
        # Getting the type of 'x' (line 710)
        x_51241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 36), 'x', False)
        keyword_51242 = x_51241
        int_51243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 44), 'int')
        keyword_51244 = int_51243
        int_51245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 53), 'int')
        keyword_51246 = int_51245
        kwargs_51247 = {'ap': keyword_51240, 'diag': keyword_51244, 'trans': keyword_51246, 'x': keyword_51242, 'n': keyword_51238}
        # Getting the type of 'func' (line 710)
        func_51236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 17), 'func', False)
        # Calling func(args, kwargs) (line 710)
        func_call_result_51248 = invoke(stypy.reporting.localization.Localization(__file__, 710, 17), func_51236, *[], **kwargs_51247)
        
        # Assigning a type to the variable 'y1' (line 710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 12), 'y1', func_call_result_51248)
        
        # Assigning a Call to a Name (line 711):
        
        # Assigning a Call to a Name (line 711):
        
        # Call to dot(...): (line 711)
        # Processing the call arguments (line 711)
        # Getting the type of 'x' (line 711)
        x_51255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 32), 'x', False)
        # Processing the call keyword arguments (line 711)
        kwargs_51256 = {}
        
        # Call to conj(...): (line 711)
        # Processing the call keyword arguments (line 711)
        kwargs_51251 = {}
        # Getting the type of 'A' (line 711)
        A_51249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 17), 'A', False)
        # Obtaining the member 'conj' of a type (line 711)
        conj_51250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 17), A_51249, 'conj')
        # Calling conj(args, kwargs) (line 711)
        conj_call_result_51252 = invoke(stypy.reporting.localization.Localization(__file__, 711, 17), conj_51250, *[], **kwargs_51251)
        
        # Obtaining the member 'T' of a type (line 711)
        T_51253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 17), conj_call_result_51252, 'T')
        # Obtaining the member 'dot' of a type (line 711)
        dot_51254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 17), T_51253, 'dot')
        # Calling dot(args, kwargs) (line 711)
        dot_call_result_51257 = invoke(stypy.reporting.localization.Localization(__file__, 711, 17), dot_51254, *[x_51255], **kwargs_51256)
        
        # Assigning a type to the variable 'y2' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 12), 'y2', dot_call_result_51257)
        
        # Call to assert_array_almost_equal(...): (line 712)
        # Processing the call arguments (line 712)
        # Getting the type of 'y1' (line 712)
        y1_51259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 38), 'y1', False)
        # Getting the type of 'y2' (line 712)
        y2_51260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 42), 'y2', False)
        # Processing the call keyword arguments (line 712)
        kwargs_51261 = {}
        # Getting the type of 'assert_array_almost_equal' (line 712)
        assert_array_almost_equal_51258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 712)
        assert_array_almost_equal_call_result_51262 = invoke(stypy.reporting.localization.Localization(__file__, 712, 12), assert_array_almost_equal_51258, *[y1_51259, y2_51260], **kwargs_51261)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_tpmv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_tpmv' in the type store
        # Getting the type of 'stypy_return_type' (line 685)
        stypy_return_type_51263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_51263)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_tpmv'
        return stypy_return_type_51263


    @norecursion
    def test_tpsv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_tpsv'
        module_type_store = module_type_store.open_function_context('test_tpsv', 714, 4, False)
        # Assigning a type to the variable 'self' (line 715)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 715, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_tpsv')
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_tpsv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_tpsv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_tpsv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_tpsv(...)' code ##################

        
        # Call to seed(...): (line 715)
        # Processing the call arguments (line 715)
        int_51265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 715, 13), 'int')
        # Processing the call keyword arguments (line 715)
        kwargs_51266 = {}
        # Getting the type of 'seed' (line 715)
        seed_51264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 715)
        seed_call_result_51267 = invoke(stypy.reporting.localization.Localization(__file__, 715, 8), seed_51264, *[int_51265], **kwargs_51266)
        
        
        
        # Call to enumerate(...): (line 716)
        # Processing the call arguments (line 716)
        # Getting the type of 'DTYPES' (line 716)
        DTYPES_51269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 36), 'DTYPES', False)
        # Processing the call keyword arguments (line 716)
        kwargs_51270 = {}
        # Getting the type of 'enumerate' (line 716)
        enumerate_51268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 716)
        enumerate_call_result_51271 = invoke(stypy.reporting.localization.Localization(__file__, 716, 26), enumerate_51268, *[DTYPES_51269], **kwargs_51270)
        
        # Testing the type of a for loop iterable (line 716)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 716, 8), enumerate_call_result_51271)
        # Getting the type of the for loop variable (line 716)
        for_loop_var_51272 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 716, 8), enumerate_call_result_51271)
        # Assigning a type to the variable 'ind' (line 716)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 8), for_loop_var_51272))
        # Assigning a type to the variable 'dtype' (line 716)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 8), for_loop_var_51272))
        # SSA begins for a for statement (line 716)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 717):
        
        # Assigning a Num to a Name (line 717):
        int_51273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 16), 'int')
        # Assigning a type to the variable 'n' (line 717)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 717, 12), 'n', int_51273)
        
        # Assigning a Call to a Name (line 718):
        
        # Assigning a Call to a Name (line 718):
        
        # Call to astype(...): (line 718)
        # Processing the call arguments (line 718)
        # Getting the type of 'dtype' (line 718)
        dtype_51279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 31), 'dtype', False)
        # Processing the call keyword arguments (line 718)
        kwargs_51280 = {}
        
        # Call to rand(...): (line 718)
        # Processing the call arguments (line 718)
        # Getting the type of 'n' (line 718)
        n_51275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 21), 'n', False)
        # Processing the call keyword arguments (line 718)
        kwargs_51276 = {}
        # Getting the type of 'rand' (line 718)
        rand_51274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 718)
        rand_call_result_51277 = invoke(stypy.reporting.localization.Localization(__file__, 718, 16), rand_51274, *[n_51275], **kwargs_51276)
        
        # Obtaining the member 'astype' of a type (line 718)
        astype_51278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 16), rand_call_result_51277, 'astype')
        # Calling astype(args, kwargs) (line 718)
        astype_call_result_51281 = invoke(stypy.reporting.localization.Localization(__file__, 718, 16), astype_51278, *[dtype_51279], **kwargs_51280)
        
        # Assigning a type to the variable 'x' (line 718)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 718, 12), 'x', astype_call_result_51281)
        
        # Assigning a IfExp to a Name (line 720):
        
        # Assigning a IfExp to a Name (line 720):
        
        
        # Getting the type of 'ind' (line 720)
        ind_51282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 36), 'ind')
        int_51283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 42), 'int')
        # Applying the binary operator '<' (line 720)
        result_lt_51284 = python_operator(stypy.reporting.localization.Localization(__file__, 720, 36), '<', ind_51282, int_51283)
        
        # Testing the type of an if expression (line 720)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 720, 16), result_lt_51284)
        # SSA begins for if expression (line 720)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Call to triu(...): (line 720)
        # Processing the call arguments (line 720)
        
        # Call to rand(...): (line 720)
        # Processing the call arguments (line 720)
        # Getting the type of 'n' (line 720)
        n_51287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 26), 'n', False)
        # Getting the type of 'n' (line 720)
        n_51288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 29), 'n', False)
        # Processing the call keyword arguments (line 720)
        kwargs_51289 = {}
        # Getting the type of 'rand' (line 720)
        rand_51286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 21), 'rand', False)
        # Calling rand(args, kwargs) (line 720)
        rand_call_result_51290 = invoke(stypy.reporting.localization.Localization(__file__, 720, 21), rand_51286, *[n_51287, n_51288], **kwargs_51289)
        
        # Processing the call keyword arguments (line 720)
        kwargs_51291 = {}
        # Getting the type of 'triu' (line 720)
        triu_51285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 16), 'triu', False)
        # Calling triu(args, kwargs) (line 720)
        triu_call_result_51292 = invoke(stypy.reporting.localization.Localization(__file__, 720, 16), triu_51285, *[rand_call_result_51290], **kwargs_51291)
        
        # SSA branch for the else part of an if expression (line 720)
        module_type_store.open_ssa_branch('if expression else')
        
        # Call to triu(...): (line 720)
        # Processing the call arguments (line 720)
        
        # Call to rand(...): (line 720)
        # Processing the call arguments (line 720)
        # Getting the type of 'n' (line 720)
        n_51295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 59), 'n', False)
        # Getting the type of 'n' (line 720)
        n_51296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 62), 'n', False)
        # Processing the call keyword arguments (line 720)
        kwargs_51297 = {}
        # Getting the type of 'rand' (line 720)
        rand_51294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 54), 'rand', False)
        # Calling rand(args, kwargs) (line 720)
        rand_call_result_51298 = invoke(stypy.reporting.localization.Localization(__file__, 720, 54), rand_51294, *[n_51295, n_51296], **kwargs_51297)
        
        
        # Call to rand(...): (line 720)
        # Processing the call arguments (line 720)
        # Getting the type of 'n' (line 720)
        n_51300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 70), 'n', False)
        # Getting the type of 'n' (line 720)
        n_51301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 73), 'n', False)
        # Processing the call keyword arguments (line 720)
        kwargs_51302 = {}
        # Getting the type of 'rand' (line 720)
        rand_51299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 65), 'rand', False)
        # Calling rand(args, kwargs) (line 720)
        rand_call_result_51303 = invoke(stypy.reporting.localization.Localization(__file__, 720, 65), rand_51299, *[n_51300, n_51301], **kwargs_51302)
        
        complex_51304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 76), 'complex')
        # Applying the binary operator '*' (line 720)
        result_mul_51305 = python_operator(stypy.reporting.localization.Localization(__file__, 720, 65), '*', rand_call_result_51303, complex_51304)
        
        # Applying the binary operator '+' (line 720)
        result_add_51306 = python_operator(stypy.reporting.localization.Localization(__file__, 720, 54), '+', rand_call_result_51298, result_mul_51305)
        
        # Processing the call keyword arguments (line 720)
        kwargs_51307 = {}
        # Getting the type of 'triu' (line 720)
        triu_51293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 49), 'triu', False)
        # Calling triu(args, kwargs) (line 720)
        triu_call_result_51308 = invoke(stypy.reporting.localization.Localization(__file__, 720, 49), triu_51293, *[result_add_51306], **kwargs_51307)
        
        # SSA join for if expression (line 720)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_51309 = union_type.UnionType.add(triu_call_result_51292, triu_call_result_51308)
        
        # Assigning a type to the variable 'A' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 12), 'A', if_exp_51309)
        
        # Getting the type of 'A' (line 721)
        A_51310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'A')
        
        # Call to eye(...): (line 721)
        # Processing the call arguments (line 721)
        # Getting the type of 'n' (line 721)
        n_51312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 21), 'n', False)
        # Processing the call keyword arguments (line 721)
        kwargs_51313 = {}
        # Getting the type of 'eye' (line 721)
        eye_51311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 17), 'eye', False)
        # Calling eye(args, kwargs) (line 721)
        eye_call_result_51314 = invoke(stypy.reporting.localization.Localization(__file__, 721, 17), eye_51311, *[n_51312], **kwargs_51313)
        
        # Applying the binary operator '+=' (line 721)
        result_iadd_51315 = python_operator(stypy.reporting.localization.Localization(__file__, 721, 12), '+=', A_51310, eye_call_result_51314)
        # Assigning a type to the variable 'A' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 12), 'A', result_iadd_51315)
        
        
        # Assigning a Call to a Tuple (line 723):
        
        # Assigning a Subscript to a Name (line 723):
        
        # Obtaining the type of the subscript
        int_51316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 12), 'int')
        
        # Call to tril_indices(...): (line 723)
        # Processing the call arguments (line 723)
        # Getting the type of 'n' (line 723)
        n_51318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 32), 'n', False)
        # Processing the call keyword arguments (line 723)
        kwargs_51319 = {}
        # Getting the type of 'tril_indices' (line 723)
        tril_indices_51317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 723)
        tril_indices_call_result_51320 = invoke(stypy.reporting.localization.Localization(__file__, 723, 19), tril_indices_51317, *[n_51318], **kwargs_51319)
        
        # Obtaining the member '__getitem__' of a type (line 723)
        getitem___51321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 12), tril_indices_call_result_51320, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 723)
        subscript_call_result_51322 = invoke(stypy.reporting.localization.Localization(__file__, 723, 12), getitem___51321, int_51316)
        
        # Assigning a type to the variable 'tuple_var_assignment_46695' (line 723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 12), 'tuple_var_assignment_46695', subscript_call_result_51322)
        
        # Assigning a Subscript to a Name (line 723):
        
        # Obtaining the type of the subscript
        int_51323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 12), 'int')
        
        # Call to tril_indices(...): (line 723)
        # Processing the call arguments (line 723)
        # Getting the type of 'n' (line 723)
        n_51325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 32), 'n', False)
        # Processing the call keyword arguments (line 723)
        kwargs_51326 = {}
        # Getting the type of 'tril_indices' (line 723)
        tril_indices_51324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 19), 'tril_indices', False)
        # Calling tril_indices(args, kwargs) (line 723)
        tril_indices_call_result_51327 = invoke(stypy.reporting.localization.Localization(__file__, 723, 19), tril_indices_51324, *[n_51325], **kwargs_51326)
        
        # Obtaining the member '__getitem__' of a type (line 723)
        getitem___51328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 12), tril_indices_call_result_51327, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 723)
        subscript_call_result_51329 = invoke(stypy.reporting.localization.Localization(__file__, 723, 12), getitem___51328, int_51323)
        
        # Assigning a type to the variable 'tuple_var_assignment_46696' (line 723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 12), 'tuple_var_assignment_46696', subscript_call_result_51329)
        
        # Assigning a Name to a Name (line 723):
        # Getting the type of 'tuple_var_assignment_46695' (line 723)
        tuple_var_assignment_46695_51330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 12), 'tuple_var_assignment_46695')
        # Assigning a type to the variable 'c' (line 723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 12), 'c', tuple_var_assignment_46695_51330)
        
        # Assigning a Name to a Name (line 723):
        # Getting the type of 'tuple_var_assignment_46696' (line 723)
        tuple_var_assignment_46696_51331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 12), 'tuple_var_assignment_46696')
        # Assigning a type to the variable 'r' (line 723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 15), 'r', tuple_var_assignment_46696_51331)
        
        # Assigning a Subscript to a Name (line 724):
        
        # Assigning a Subscript to a Name (line 724):
        
        # Obtaining the type of the subscript
        
        # Obtaining an instance of the builtin type 'tuple' (line 724)
        tuple_51332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 19), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 724)
        # Adding element type (line 724)
        # Getting the type of 'r' (line 724)
        r_51333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 19), 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 19), tuple_51332, r_51333)
        # Adding element type (line 724)
        # Getting the type of 'c' (line 724)
        c_51334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 22), 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 724, 19), tuple_51332, c_51334)
        
        # Getting the type of 'A' (line 724)
        A_51335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 17), 'A')
        # Obtaining the member '__getitem__' of a type (line 724)
        getitem___51336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 17), A_51335, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 724)
        subscript_call_result_51337 = invoke(stypy.reporting.localization.Localization(__file__, 724, 17), getitem___51336, tuple_51332)
        
        # Assigning a type to the variable 'Ap' (line 724)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 12), 'Ap', subscript_call_result_51337)
        
        # Assigning a Call to a Tuple (line 725):
        
        # Assigning a Subscript to a Name (line 725):
        
        # Obtaining the type of the subscript
        int_51338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 12), 'int')
        
        # Call to get_blas_funcs(...): (line 725)
        # Processing the call arguments (line 725)
        
        # Obtaining an instance of the builtin type 'tuple' (line 725)
        tuple_51340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 725)
        # Adding element type (line 725)
        str_51341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 36), 'str', 'tpsv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 36), tuple_51340, str_51341)
        
        # Processing the call keyword arguments (line 725)
        # Getting the type of 'dtype' (line 725)
        dtype_51342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 52), 'dtype', False)
        keyword_51343 = dtype_51342
        kwargs_51344 = {'dtype': keyword_51343}
        # Getting the type of 'get_blas_funcs' (line 725)
        get_blas_funcs_51339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 20), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 725)
        get_blas_funcs_call_result_51345 = invoke(stypy.reporting.localization.Localization(__file__, 725, 20), get_blas_funcs_51339, *[tuple_51340], **kwargs_51344)
        
        # Obtaining the member '__getitem__' of a type (line 725)
        getitem___51346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 12), get_blas_funcs_call_result_51345, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 725)
        subscript_call_result_51347 = invoke(stypy.reporting.localization.Localization(__file__, 725, 12), getitem___51346, int_51338)
        
        # Assigning a type to the variable 'tuple_var_assignment_46697' (line 725)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 725, 12), 'tuple_var_assignment_46697', subscript_call_result_51347)
        
        # Assigning a Name to a Name (line 725):
        # Getting the type of 'tuple_var_assignment_46697' (line 725)
        tuple_var_assignment_46697_51348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 12), 'tuple_var_assignment_46697')
        # Assigning a type to the variable 'func' (line 725)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 725, 12), 'func', tuple_var_assignment_46697_51348)
        
        # Assigning a Call to a Name (line 727):
        
        # Assigning a Call to a Name (line 727):
        
        # Call to func(...): (line 727)
        # Processing the call keyword arguments (line 727)
        # Getting the type of 'n' (line 727)
        n_51350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 24), 'n', False)
        keyword_51351 = n_51350
        # Getting the type of 'Ap' (line 727)
        Ap_51352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 30), 'Ap', False)
        keyword_51353 = Ap_51352
        # Getting the type of 'x' (line 727)
        x_51354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 36), 'x', False)
        keyword_51355 = x_51354
        kwargs_51356 = {'ap': keyword_51353, 'x': keyword_51355, 'n': keyword_51351}
        # Getting the type of 'func' (line 727)
        func_51349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 17), 'func', False)
        # Calling func(args, kwargs) (line 727)
        func_call_result_51357 = invoke(stypy.reporting.localization.Localization(__file__, 727, 17), func_51349, *[], **kwargs_51356)
        
        # Assigning a type to the variable 'y1' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 12), 'y1', func_call_result_51357)
        
        # Assigning a Call to a Name (line 728):
        
        # Assigning a Call to a Name (line 728):
        
        # Call to solve(...): (line 728)
        # Processing the call arguments (line 728)
        # Getting the type of 'A' (line 728)
        A_51359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 23), 'A', False)
        # Getting the type of 'x' (line 728)
        x_51360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 26), 'x', False)
        # Processing the call keyword arguments (line 728)
        kwargs_51361 = {}
        # Getting the type of 'solve' (line 728)
        solve_51358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 728)
        solve_call_result_51362 = invoke(stypy.reporting.localization.Localization(__file__, 728, 17), solve_51358, *[A_51359, x_51360], **kwargs_51361)
        
        # Assigning a type to the variable 'y2' (line 728)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 728, 12), 'y2', solve_call_result_51362)
        
        # Call to assert_array_almost_equal(...): (line 729)
        # Processing the call arguments (line 729)
        # Getting the type of 'y1' (line 729)
        y1_51364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 38), 'y1', False)
        # Getting the type of 'y2' (line 729)
        y2_51365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 42), 'y2', False)
        # Processing the call keyword arguments (line 729)
        kwargs_51366 = {}
        # Getting the type of 'assert_array_almost_equal' (line 729)
        assert_array_almost_equal_51363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 729)
        assert_array_almost_equal_call_result_51367 = invoke(stypy.reporting.localization.Localization(__file__, 729, 12), assert_array_almost_equal_51363, *[y1_51364, y2_51365], **kwargs_51366)
        
        
        # Assigning a Call to a Name (line 731):
        
        # Assigning a Call to a Name (line 731):
        
        # Call to func(...): (line 731)
        # Processing the call keyword arguments (line 731)
        # Getting the type of 'n' (line 731)
        n_51369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 24), 'n', False)
        keyword_51370 = n_51369
        # Getting the type of 'Ap' (line 731)
        Ap_51371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 30), 'Ap', False)
        keyword_51372 = Ap_51371
        # Getting the type of 'x' (line 731)
        x_51373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 36), 'x', False)
        keyword_51374 = x_51373
        int_51375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 44), 'int')
        keyword_51376 = int_51375
        kwargs_51377 = {'ap': keyword_51372, 'diag': keyword_51376, 'x': keyword_51374, 'n': keyword_51370}
        # Getting the type of 'func' (line 731)
        func_51368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 17), 'func', False)
        # Calling func(args, kwargs) (line 731)
        func_call_result_51378 = invoke(stypy.reporting.localization.Localization(__file__, 731, 17), func_51368, *[], **kwargs_51377)
        
        # Assigning a type to the variable 'y1' (line 731)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 731, 12), 'y1', func_call_result_51378)
        
        # Assigning a Call to a Subscript (line 732):
        
        # Assigning a Call to a Subscript (line 732):
        
        # Call to dtype(...): (line 732)
        # Processing the call arguments (line 732)
        int_51380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 44), 'int')
        # Processing the call keyword arguments (line 732)
        kwargs_51381 = {}
        # Getting the type of 'dtype' (line 732)
        dtype_51379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 38), 'dtype', False)
        # Calling dtype(args, kwargs) (line 732)
        dtype_call_result_51382 = invoke(stypy.reporting.localization.Localization(__file__, 732, 38), dtype_51379, *[int_51380], **kwargs_51381)
        
        # Getting the type of 'A' (line 732)
        A_51383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 12), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 732)
        tuple_51384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 732)
        # Adding element type (line 732)
        
        # Call to arange(...): (line 732)
        # Processing the call arguments (line 732)
        # Getting the type of 'n' (line 732)
        n_51386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 21), 'n', False)
        # Processing the call keyword arguments (line 732)
        kwargs_51387 = {}
        # Getting the type of 'arange' (line 732)
        arange_51385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 14), 'arange', False)
        # Calling arange(args, kwargs) (line 732)
        arange_call_result_51388 = invoke(stypy.reporting.localization.Localization(__file__, 732, 14), arange_51385, *[n_51386], **kwargs_51387)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 14), tuple_51384, arange_call_result_51388)
        # Adding element type (line 732)
        
        # Call to arange(...): (line 732)
        # Processing the call arguments (line 732)
        # Getting the type of 'n' (line 732)
        n_51390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 32), 'n', False)
        # Processing the call keyword arguments (line 732)
        kwargs_51391 = {}
        # Getting the type of 'arange' (line 732)
        arange_51389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 25), 'arange', False)
        # Calling arange(args, kwargs) (line 732)
        arange_call_result_51392 = invoke(stypy.reporting.localization.Localization(__file__, 732, 25), arange_51389, *[n_51390], **kwargs_51391)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 14), tuple_51384, arange_call_result_51392)
        
        # Storing an element on a container (line 732)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 12), A_51383, (tuple_51384, dtype_call_result_51382))
        
        # Assigning a Call to a Name (line 733):
        
        # Assigning a Call to a Name (line 733):
        
        # Call to solve(...): (line 733)
        # Processing the call arguments (line 733)
        # Getting the type of 'A' (line 733)
        A_51394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 23), 'A', False)
        # Getting the type of 'x' (line 733)
        x_51395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 26), 'x', False)
        # Processing the call keyword arguments (line 733)
        kwargs_51396 = {}
        # Getting the type of 'solve' (line 733)
        solve_51393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 733)
        solve_call_result_51397 = invoke(stypy.reporting.localization.Localization(__file__, 733, 17), solve_51393, *[A_51394, x_51395], **kwargs_51396)
        
        # Assigning a type to the variable 'y2' (line 733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 12), 'y2', solve_call_result_51397)
        
        # Call to assert_array_almost_equal(...): (line 734)
        # Processing the call arguments (line 734)
        # Getting the type of 'y1' (line 734)
        y1_51399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 38), 'y1', False)
        # Getting the type of 'y2' (line 734)
        y2_51400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 42), 'y2', False)
        # Processing the call keyword arguments (line 734)
        kwargs_51401 = {}
        # Getting the type of 'assert_array_almost_equal' (line 734)
        assert_array_almost_equal_51398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 734)
        assert_array_almost_equal_call_result_51402 = invoke(stypy.reporting.localization.Localization(__file__, 734, 12), assert_array_almost_equal_51398, *[y1_51399, y2_51400], **kwargs_51401)
        
        
        # Assigning a Call to a Name (line 736):
        
        # Assigning a Call to a Name (line 736):
        
        # Call to func(...): (line 736)
        # Processing the call keyword arguments (line 736)
        # Getting the type of 'n' (line 736)
        n_51404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 24), 'n', False)
        keyword_51405 = n_51404
        # Getting the type of 'Ap' (line 736)
        Ap_51406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 30), 'Ap', False)
        keyword_51407 = Ap_51406
        # Getting the type of 'x' (line 736)
        x_51408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 36), 'x', False)
        keyword_51409 = x_51408
        int_51410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 44), 'int')
        keyword_51411 = int_51410
        int_51412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 53), 'int')
        keyword_51413 = int_51412
        kwargs_51414 = {'ap': keyword_51407, 'diag': keyword_51411, 'trans': keyword_51413, 'x': keyword_51409, 'n': keyword_51405}
        # Getting the type of 'func' (line 736)
        func_51403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 17), 'func', False)
        # Calling func(args, kwargs) (line 736)
        func_call_result_51415 = invoke(stypy.reporting.localization.Localization(__file__, 736, 17), func_51403, *[], **kwargs_51414)
        
        # Assigning a type to the variable 'y1' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 12), 'y1', func_call_result_51415)
        
        # Assigning a Call to a Name (line 737):
        
        # Assigning a Call to a Name (line 737):
        
        # Call to solve(...): (line 737)
        # Processing the call arguments (line 737)
        # Getting the type of 'A' (line 737)
        A_51417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 23), 'A', False)
        # Obtaining the member 'T' of a type (line 737)
        T_51418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 23), A_51417, 'T')
        # Getting the type of 'x' (line 737)
        x_51419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 28), 'x', False)
        # Processing the call keyword arguments (line 737)
        kwargs_51420 = {}
        # Getting the type of 'solve' (line 737)
        solve_51416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 737)
        solve_call_result_51421 = invoke(stypy.reporting.localization.Localization(__file__, 737, 17), solve_51416, *[T_51418, x_51419], **kwargs_51420)
        
        # Assigning a type to the variable 'y2' (line 737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 737, 12), 'y2', solve_call_result_51421)
        
        # Call to assert_array_almost_equal(...): (line 738)
        # Processing the call arguments (line 738)
        # Getting the type of 'y1' (line 738)
        y1_51423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 38), 'y1', False)
        # Getting the type of 'y2' (line 738)
        y2_51424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 42), 'y2', False)
        # Processing the call keyword arguments (line 738)
        kwargs_51425 = {}
        # Getting the type of 'assert_array_almost_equal' (line 738)
        assert_array_almost_equal_51422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 738)
        assert_array_almost_equal_call_result_51426 = invoke(stypy.reporting.localization.Localization(__file__, 738, 12), assert_array_almost_equal_51422, *[y1_51423, y2_51424], **kwargs_51425)
        
        
        # Assigning a Call to a Name (line 740):
        
        # Assigning a Call to a Name (line 740):
        
        # Call to func(...): (line 740)
        # Processing the call keyword arguments (line 740)
        # Getting the type of 'n' (line 740)
        n_51428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 24), 'n', False)
        keyword_51429 = n_51428
        # Getting the type of 'Ap' (line 740)
        Ap_51430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 30), 'Ap', False)
        keyword_51431 = Ap_51430
        # Getting the type of 'x' (line 740)
        x_51432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 36), 'x', False)
        keyword_51433 = x_51432
        int_51434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 44), 'int')
        keyword_51435 = int_51434
        int_51436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 53), 'int')
        keyword_51437 = int_51436
        kwargs_51438 = {'ap': keyword_51431, 'diag': keyword_51435, 'trans': keyword_51437, 'x': keyword_51433, 'n': keyword_51429}
        # Getting the type of 'func' (line 740)
        func_51427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 17), 'func', False)
        # Calling func(args, kwargs) (line 740)
        func_call_result_51439 = invoke(stypy.reporting.localization.Localization(__file__, 740, 17), func_51427, *[], **kwargs_51438)
        
        # Assigning a type to the variable 'y1' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 12), 'y1', func_call_result_51439)
        
        # Assigning a Call to a Name (line 741):
        
        # Assigning a Call to a Name (line 741):
        
        # Call to solve(...): (line 741)
        # Processing the call arguments (line 741)
        
        # Call to conj(...): (line 741)
        # Processing the call keyword arguments (line 741)
        kwargs_51443 = {}
        # Getting the type of 'A' (line 741)
        A_51441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 23), 'A', False)
        # Obtaining the member 'conj' of a type (line 741)
        conj_51442 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 23), A_51441, 'conj')
        # Calling conj(args, kwargs) (line 741)
        conj_call_result_51444 = invoke(stypy.reporting.localization.Localization(__file__, 741, 23), conj_51442, *[], **kwargs_51443)
        
        # Obtaining the member 'T' of a type (line 741)
        T_51445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 23), conj_call_result_51444, 'T')
        # Getting the type of 'x' (line 741)
        x_51446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 35), 'x', False)
        # Processing the call keyword arguments (line 741)
        kwargs_51447 = {}
        # Getting the type of 'solve' (line 741)
        solve_51440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 741)
        solve_call_result_51448 = invoke(stypy.reporting.localization.Localization(__file__, 741, 17), solve_51440, *[T_51445, x_51446], **kwargs_51447)
        
        # Assigning a type to the variable 'y2' (line 741)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 741, 12), 'y2', solve_call_result_51448)
        
        # Call to assert_array_almost_equal(...): (line 742)
        # Processing the call arguments (line 742)
        # Getting the type of 'y1' (line 742)
        y1_51450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 38), 'y1', False)
        # Getting the type of 'y2' (line 742)
        y2_51451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 42), 'y2', False)
        # Processing the call keyword arguments (line 742)
        kwargs_51452 = {}
        # Getting the type of 'assert_array_almost_equal' (line 742)
        assert_array_almost_equal_51449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 742)
        assert_array_almost_equal_call_result_51453 = invoke(stypy.reporting.localization.Localization(__file__, 742, 12), assert_array_almost_equal_51449, *[y1_51450, y2_51451], **kwargs_51452)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_tpsv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_tpsv' in the type store
        # Getting the type of 'stypy_return_type' (line 714)
        stypy_return_type_51454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_51454)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_tpsv'
        return stypy_return_type_51454


    @norecursion
    def test_trmv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_trmv'
        module_type_store = module_type_store.open_function_context('test_trmv', 744, 4, False)
        # Assigning a type to the variable 'self' (line 745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_trmv')
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_trmv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_trmv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_trmv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_trmv(...)' code ##################

        
        # Call to seed(...): (line 745)
        # Processing the call arguments (line 745)
        int_51456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 13), 'int')
        # Processing the call keyword arguments (line 745)
        kwargs_51457 = {}
        # Getting the type of 'seed' (line 745)
        seed_51455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 745)
        seed_call_result_51458 = invoke(stypy.reporting.localization.Localization(__file__, 745, 8), seed_51455, *[int_51456], **kwargs_51457)
        
        
        
        # Call to enumerate(...): (line 746)
        # Processing the call arguments (line 746)
        # Getting the type of 'DTYPES' (line 746)
        DTYPES_51460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 36), 'DTYPES', False)
        # Processing the call keyword arguments (line 746)
        kwargs_51461 = {}
        # Getting the type of 'enumerate' (line 746)
        enumerate_51459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 746)
        enumerate_call_result_51462 = invoke(stypy.reporting.localization.Localization(__file__, 746, 26), enumerate_51459, *[DTYPES_51460], **kwargs_51461)
        
        # Testing the type of a for loop iterable (line 746)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 746, 8), enumerate_call_result_51462)
        # Getting the type of the for loop variable (line 746)
        for_loop_var_51463 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 746, 8), enumerate_call_result_51462)
        # Assigning a type to the variable 'ind' (line 746)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 746, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 8), for_loop_var_51463))
        # Assigning a type to the variable 'dtype' (line 746)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 746, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 8), for_loop_var_51463))
        # SSA begins for a for statement (line 746)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 747):
        
        # Assigning a Num to a Name (line 747):
        int_51464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 16), 'int')
        # Assigning a type to the variable 'n' (line 747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 12), 'n', int_51464)
        
        # Assigning a Call to a Name (line 748):
        
        # Assigning a Call to a Name (line 748):
        
        # Call to astype(...): (line 748)
        # Processing the call arguments (line 748)
        # Getting the type of 'dtype' (line 748)
        dtype_51476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 43), 'dtype', False)
        # Processing the call keyword arguments (line 748)
        kwargs_51477 = {}
        
        # Call to rand(...): (line 748)
        # Processing the call arguments (line 748)
        # Getting the type of 'n' (line 748)
        n_51466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 22), 'n', False)
        # Getting the type of 'n' (line 748)
        n_51467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 25), 'n', False)
        # Processing the call keyword arguments (line 748)
        kwargs_51468 = {}
        # Getting the type of 'rand' (line 748)
        rand_51465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 17), 'rand', False)
        # Calling rand(args, kwargs) (line 748)
        rand_call_result_51469 = invoke(stypy.reporting.localization.Localization(__file__, 748, 17), rand_51465, *[n_51466, n_51467], **kwargs_51468)
        
        
        # Call to eye(...): (line 748)
        # Processing the call arguments (line 748)
        # Getting the type of 'n' (line 748)
        n_51471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 32), 'n', False)
        # Processing the call keyword arguments (line 748)
        kwargs_51472 = {}
        # Getting the type of 'eye' (line 748)
        eye_51470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 28), 'eye', False)
        # Calling eye(args, kwargs) (line 748)
        eye_call_result_51473 = invoke(stypy.reporting.localization.Localization(__file__, 748, 28), eye_51470, *[n_51471], **kwargs_51472)
        
        # Applying the binary operator '+' (line 748)
        result_add_51474 = python_operator(stypy.reporting.localization.Localization(__file__, 748, 17), '+', rand_call_result_51469, eye_call_result_51473)
        
        # Obtaining the member 'astype' of a type (line 748)
        astype_51475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 17), result_add_51474, 'astype')
        # Calling astype(args, kwargs) (line 748)
        astype_call_result_51478 = invoke(stypy.reporting.localization.Localization(__file__, 748, 17), astype_51475, *[dtype_51476], **kwargs_51477)
        
        # Assigning a type to the variable 'A' (line 748)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 12), 'A', astype_call_result_51478)
        
        # Assigning a Call to a Name (line 749):
        
        # Assigning a Call to a Name (line 749):
        
        # Call to astype(...): (line 749)
        # Processing the call arguments (line 749)
        # Getting the type of 'dtype' (line 749)
        dtype_51484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 31), 'dtype', False)
        # Processing the call keyword arguments (line 749)
        kwargs_51485 = {}
        
        # Call to rand(...): (line 749)
        # Processing the call arguments (line 749)
        int_51480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 749, 21), 'int')
        # Processing the call keyword arguments (line 749)
        kwargs_51481 = {}
        # Getting the type of 'rand' (line 749)
        rand_51479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 749)
        rand_call_result_51482 = invoke(stypy.reporting.localization.Localization(__file__, 749, 16), rand_51479, *[int_51480], **kwargs_51481)
        
        # Obtaining the member 'astype' of a type (line 749)
        astype_51483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 16), rand_call_result_51482, 'astype')
        # Calling astype(args, kwargs) (line 749)
        astype_call_result_51486 = invoke(stypy.reporting.localization.Localization(__file__, 749, 16), astype_51483, *[dtype_51484], **kwargs_51485)
        
        # Assigning a type to the variable 'x' (line 749)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 749, 12), 'x', astype_call_result_51486)
        
        # Assigning a Call to a Tuple (line 750):
        
        # Assigning a Subscript to a Name (line 750):
        
        # Obtaining the type of the subscript
        int_51487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 12), 'int')
        
        # Call to get_blas_funcs(...): (line 750)
        # Processing the call arguments (line 750)
        
        # Obtaining an instance of the builtin type 'tuple' (line 750)
        tuple_51489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 750)
        # Adding element type (line 750)
        str_51490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 750, 36), 'str', 'trmv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 750, 36), tuple_51489, str_51490)
        
        # Processing the call keyword arguments (line 750)
        # Getting the type of 'dtype' (line 750)
        dtype_51491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 52), 'dtype', False)
        keyword_51492 = dtype_51491
        kwargs_51493 = {'dtype': keyword_51492}
        # Getting the type of 'get_blas_funcs' (line 750)
        get_blas_funcs_51488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 20), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 750)
        get_blas_funcs_call_result_51494 = invoke(stypy.reporting.localization.Localization(__file__, 750, 20), get_blas_funcs_51488, *[tuple_51489], **kwargs_51493)
        
        # Obtaining the member '__getitem__' of a type (line 750)
        getitem___51495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 750, 12), get_blas_funcs_call_result_51494, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 750)
        subscript_call_result_51496 = invoke(stypy.reporting.localization.Localization(__file__, 750, 12), getitem___51495, int_51487)
        
        # Assigning a type to the variable 'tuple_var_assignment_46698' (line 750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 12), 'tuple_var_assignment_46698', subscript_call_result_51496)
        
        # Assigning a Name to a Name (line 750):
        # Getting the type of 'tuple_var_assignment_46698' (line 750)
        tuple_var_assignment_46698_51497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 12), 'tuple_var_assignment_46698')
        # Assigning a type to the variable 'func' (line 750)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 12), 'func', tuple_var_assignment_46698_51497)
        
        # Assigning a Call to a Name (line 752):
        
        # Assigning a Call to a Name (line 752):
        
        # Call to func(...): (line 752)
        # Processing the call keyword arguments (line 752)
        # Getting the type of 'A' (line 752)
        A_51499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 24), 'A', False)
        keyword_51500 = A_51499
        # Getting the type of 'x' (line 752)
        x_51501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 29), 'x', False)
        keyword_51502 = x_51501
        kwargs_51503 = {'a': keyword_51500, 'x': keyword_51502}
        # Getting the type of 'func' (line 752)
        func_51498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 17), 'func', False)
        # Calling func(args, kwargs) (line 752)
        func_call_result_51504 = invoke(stypy.reporting.localization.Localization(__file__, 752, 17), func_51498, *[], **kwargs_51503)
        
        # Assigning a type to the variable 'y1' (line 752)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 12), 'y1', func_call_result_51504)
        
        # Assigning a Call to a Name (line 753):
        
        # Assigning a Call to a Name (line 753):
        
        # Call to dot(...): (line 753)
        # Processing the call arguments (line 753)
        # Getting the type of 'x' (line 753)
        x_51510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 29), 'x', False)
        # Processing the call keyword arguments (line 753)
        kwargs_51511 = {}
        
        # Call to triu(...): (line 753)
        # Processing the call arguments (line 753)
        # Getting the type of 'A' (line 753)
        A_51506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 22), 'A', False)
        # Processing the call keyword arguments (line 753)
        kwargs_51507 = {}
        # Getting the type of 'triu' (line 753)
        triu_51505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 17), 'triu', False)
        # Calling triu(args, kwargs) (line 753)
        triu_call_result_51508 = invoke(stypy.reporting.localization.Localization(__file__, 753, 17), triu_51505, *[A_51506], **kwargs_51507)
        
        # Obtaining the member 'dot' of a type (line 753)
        dot_51509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 17), triu_call_result_51508, 'dot')
        # Calling dot(args, kwargs) (line 753)
        dot_call_result_51512 = invoke(stypy.reporting.localization.Localization(__file__, 753, 17), dot_51509, *[x_51510], **kwargs_51511)
        
        # Assigning a type to the variable 'y2' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 12), 'y2', dot_call_result_51512)
        
        # Call to assert_array_almost_equal(...): (line 754)
        # Processing the call arguments (line 754)
        # Getting the type of 'y1' (line 754)
        y1_51514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 38), 'y1', False)
        # Getting the type of 'y2' (line 754)
        y2_51515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 42), 'y2', False)
        # Processing the call keyword arguments (line 754)
        kwargs_51516 = {}
        # Getting the type of 'assert_array_almost_equal' (line 754)
        assert_array_almost_equal_51513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 754)
        assert_array_almost_equal_call_result_51517 = invoke(stypy.reporting.localization.Localization(__file__, 754, 12), assert_array_almost_equal_51513, *[y1_51514, y2_51515], **kwargs_51516)
        
        
        # Assigning a Call to a Name (line 756):
        
        # Assigning a Call to a Name (line 756):
        
        # Call to func(...): (line 756)
        # Processing the call keyword arguments (line 756)
        # Getting the type of 'A' (line 756)
        A_51519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 24), 'A', False)
        keyword_51520 = A_51519
        # Getting the type of 'x' (line 756)
        x_51521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 29), 'x', False)
        keyword_51522 = x_51521
        int_51523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 756, 37), 'int')
        keyword_51524 = int_51523
        kwargs_51525 = {'a': keyword_51520, 'x': keyword_51522, 'diag': keyword_51524}
        # Getting the type of 'func' (line 756)
        func_51518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 17), 'func', False)
        # Calling func(args, kwargs) (line 756)
        func_call_result_51526 = invoke(stypy.reporting.localization.Localization(__file__, 756, 17), func_51518, *[], **kwargs_51525)
        
        # Assigning a type to the variable 'y1' (line 756)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 756, 12), 'y1', func_call_result_51526)
        
        # Assigning a Call to a Subscript (line 757):
        
        # Assigning a Call to a Subscript (line 757):
        
        # Call to dtype(...): (line 757)
        # Processing the call arguments (line 757)
        int_51528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 44), 'int')
        # Processing the call keyword arguments (line 757)
        kwargs_51529 = {}
        # Getting the type of 'dtype' (line 757)
        dtype_51527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 38), 'dtype', False)
        # Calling dtype(args, kwargs) (line 757)
        dtype_call_result_51530 = invoke(stypy.reporting.localization.Localization(__file__, 757, 38), dtype_51527, *[int_51528], **kwargs_51529)
        
        # Getting the type of 'A' (line 757)
        A_51531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 12), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 757)
        tuple_51532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 757, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 757)
        # Adding element type (line 757)
        
        # Call to arange(...): (line 757)
        # Processing the call arguments (line 757)
        # Getting the type of 'n' (line 757)
        n_51534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 21), 'n', False)
        # Processing the call keyword arguments (line 757)
        kwargs_51535 = {}
        # Getting the type of 'arange' (line 757)
        arange_51533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 14), 'arange', False)
        # Calling arange(args, kwargs) (line 757)
        arange_call_result_51536 = invoke(stypy.reporting.localization.Localization(__file__, 757, 14), arange_51533, *[n_51534], **kwargs_51535)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 757, 14), tuple_51532, arange_call_result_51536)
        # Adding element type (line 757)
        
        # Call to arange(...): (line 757)
        # Processing the call arguments (line 757)
        # Getting the type of 'n' (line 757)
        n_51538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 32), 'n', False)
        # Processing the call keyword arguments (line 757)
        kwargs_51539 = {}
        # Getting the type of 'arange' (line 757)
        arange_51537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 25), 'arange', False)
        # Calling arange(args, kwargs) (line 757)
        arange_call_result_51540 = invoke(stypy.reporting.localization.Localization(__file__, 757, 25), arange_51537, *[n_51538], **kwargs_51539)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 757, 14), tuple_51532, arange_call_result_51540)
        
        # Storing an element on a container (line 757)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 757, 12), A_51531, (tuple_51532, dtype_call_result_51530))
        
        # Assigning a Call to a Name (line 758):
        
        # Assigning a Call to a Name (line 758):
        
        # Call to dot(...): (line 758)
        # Processing the call arguments (line 758)
        # Getting the type of 'x' (line 758)
        x_51546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 29), 'x', False)
        # Processing the call keyword arguments (line 758)
        kwargs_51547 = {}
        
        # Call to triu(...): (line 758)
        # Processing the call arguments (line 758)
        # Getting the type of 'A' (line 758)
        A_51542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 22), 'A', False)
        # Processing the call keyword arguments (line 758)
        kwargs_51543 = {}
        # Getting the type of 'triu' (line 758)
        triu_51541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 17), 'triu', False)
        # Calling triu(args, kwargs) (line 758)
        triu_call_result_51544 = invoke(stypy.reporting.localization.Localization(__file__, 758, 17), triu_51541, *[A_51542], **kwargs_51543)
        
        # Obtaining the member 'dot' of a type (line 758)
        dot_51545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 758, 17), triu_call_result_51544, 'dot')
        # Calling dot(args, kwargs) (line 758)
        dot_call_result_51548 = invoke(stypy.reporting.localization.Localization(__file__, 758, 17), dot_51545, *[x_51546], **kwargs_51547)
        
        # Assigning a type to the variable 'y2' (line 758)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 758, 12), 'y2', dot_call_result_51548)
        
        # Call to assert_array_almost_equal(...): (line 759)
        # Processing the call arguments (line 759)
        # Getting the type of 'y1' (line 759)
        y1_51550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 38), 'y1', False)
        # Getting the type of 'y2' (line 759)
        y2_51551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 42), 'y2', False)
        # Processing the call keyword arguments (line 759)
        kwargs_51552 = {}
        # Getting the type of 'assert_array_almost_equal' (line 759)
        assert_array_almost_equal_51549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 759)
        assert_array_almost_equal_call_result_51553 = invoke(stypy.reporting.localization.Localization(__file__, 759, 12), assert_array_almost_equal_51549, *[y1_51550, y2_51551], **kwargs_51552)
        
        
        # Assigning a Call to a Name (line 761):
        
        # Assigning a Call to a Name (line 761):
        
        # Call to func(...): (line 761)
        # Processing the call keyword arguments (line 761)
        # Getting the type of 'A' (line 761)
        A_51555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 24), 'A', False)
        keyword_51556 = A_51555
        # Getting the type of 'x' (line 761)
        x_51557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 29), 'x', False)
        keyword_51558 = x_51557
        int_51559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 37), 'int')
        keyword_51560 = int_51559
        int_51561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 761, 46), 'int')
        keyword_51562 = int_51561
        kwargs_51563 = {'a': keyword_51556, 'x': keyword_51558, 'trans': keyword_51562, 'diag': keyword_51560}
        # Getting the type of 'func' (line 761)
        func_51554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 17), 'func', False)
        # Calling func(args, kwargs) (line 761)
        func_call_result_51564 = invoke(stypy.reporting.localization.Localization(__file__, 761, 17), func_51554, *[], **kwargs_51563)
        
        # Assigning a type to the variable 'y1' (line 761)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 12), 'y1', func_call_result_51564)
        
        # Assigning a Call to a Name (line 762):
        
        # Assigning a Call to a Name (line 762):
        
        # Call to dot(...): (line 762)
        # Processing the call arguments (line 762)
        # Getting the type of 'x' (line 762)
        x_51571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 31), 'x', False)
        # Processing the call keyword arguments (line 762)
        kwargs_51572 = {}
        
        # Call to triu(...): (line 762)
        # Processing the call arguments (line 762)
        # Getting the type of 'A' (line 762)
        A_51566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 22), 'A', False)
        # Processing the call keyword arguments (line 762)
        kwargs_51567 = {}
        # Getting the type of 'triu' (line 762)
        triu_51565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 17), 'triu', False)
        # Calling triu(args, kwargs) (line 762)
        triu_call_result_51568 = invoke(stypy.reporting.localization.Localization(__file__, 762, 17), triu_51565, *[A_51566], **kwargs_51567)
        
        # Obtaining the member 'T' of a type (line 762)
        T_51569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 762, 17), triu_call_result_51568, 'T')
        # Obtaining the member 'dot' of a type (line 762)
        dot_51570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 762, 17), T_51569, 'dot')
        # Calling dot(args, kwargs) (line 762)
        dot_call_result_51573 = invoke(stypy.reporting.localization.Localization(__file__, 762, 17), dot_51570, *[x_51571], **kwargs_51572)
        
        # Assigning a type to the variable 'y2' (line 762)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 762, 12), 'y2', dot_call_result_51573)
        
        # Call to assert_array_almost_equal(...): (line 763)
        # Processing the call arguments (line 763)
        # Getting the type of 'y1' (line 763)
        y1_51575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 38), 'y1', False)
        # Getting the type of 'y2' (line 763)
        y2_51576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 42), 'y2', False)
        # Processing the call keyword arguments (line 763)
        kwargs_51577 = {}
        # Getting the type of 'assert_array_almost_equal' (line 763)
        assert_array_almost_equal_51574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 763)
        assert_array_almost_equal_call_result_51578 = invoke(stypy.reporting.localization.Localization(__file__, 763, 12), assert_array_almost_equal_51574, *[y1_51575, y2_51576], **kwargs_51577)
        
        
        # Assigning a Call to a Name (line 765):
        
        # Assigning a Call to a Name (line 765):
        
        # Call to func(...): (line 765)
        # Processing the call keyword arguments (line 765)
        # Getting the type of 'A' (line 765)
        A_51580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 24), 'A', False)
        keyword_51581 = A_51580
        # Getting the type of 'x' (line 765)
        x_51582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 29), 'x', False)
        keyword_51583 = x_51582
        int_51584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 37), 'int')
        keyword_51585 = int_51584
        int_51586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 46), 'int')
        keyword_51587 = int_51586
        kwargs_51588 = {'a': keyword_51581, 'x': keyword_51583, 'trans': keyword_51587, 'diag': keyword_51585}
        # Getting the type of 'func' (line 765)
        func_51579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 17), 'func', False)
        # Calling func(args, kwargs) (line 765)
        func_call_result_51589 = invoke(stypy.reporting.localization.Localization(__file__, 765, 17), func_51579, *[], **kwargs_51588)
        
        # Assigning a type to the variable 'y1' (line 765)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 765, 12), 'y1', func_call_result_51589)
        
        # Assigning a Call to a Name (line 766):
        
        # Assigning a Call to a Name (line 766):
        
        # Call to dot(...): (line 766)
        # Processing the call arguments (line 766)
        # Getting the type of 'x' (line 766)
        x_51599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 38), 'x', False)
        # Processing the call keyword arguments (line 766)
        kwargs_51600 = {}
        
        # Call to conj(...): (line 766)
        # Processing the call keyword arguments (line 766)
        kwargs_51595 = {}
        
        # Call to triu(...): (line 766)
        # Processing the call arguments (line 766)
        # Getting the type of 'A' (line 766)
        A_51591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 22), 'A', False)
        # Processing the call keyword arguments (line 766)
        kwargs_51592 = {}
        # Getting the type of 'triu' (line 766)
        triu_51590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 17), 'triu', False)
        # Calling triu(args, kwargs) (line 766)
        triu_call_result_51593 = invoke(stypy.reporting.localization.Localization(__file__, 766, 17), triu_51590, *[A_51591], **kwargs_51592)
        
        # Obtaining the member 'conj' of a type (line 766)
        conj_51594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 17), triu_call_result_51593, 'conj')
        # Calling conj(args, kwargs) (line 766)
        conj_call_result_51596 = invoke(stypy.reporting.localization.Localization(__file__, 766, 17), conj_51594, *[], **kwargs_51595)
        
        # Obtaining the member 'T' of a type (line 766)
        T_51597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 17), conj_call_result_51596, 'T')
        # Obtaining the member 'dot' of a type (line 766)
        dot_51598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 17), T_51597, 'dot')
        # Calling dot(args, kwargs) (line 766)
        dot_call_result_51601 = invoke(stypy.reporting.localization.Localization(__file__, 766, 17), dot_51598, *[x_51599], **kwargs_51600)
        
        # Assigning a type to the variable 'y2' (line 766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 12), 'y2', dot_call_result_51601)
        
        # Call to assert_array_almost_equal(...): (line 767)
        # Processing the call arguments (line 767)
        # Getting the type of 'y1' (line 767)
        y1_51603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 38), 'y1', False)
        # Getting the type of 'y2' (line 767)
        y2_51604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 42), 'y2', False)
        # Processing the call keyword arguments (line 767)
        kwargs_51605 = {}
        # Getting the type of 'assert_array_almost_equal' (line 767)
        assert_array_almost_equal_51602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 767)
        assert_array_almost_equal_call_result_51606 = invoke(stypy.reporting.localization.Localization(__file__, 767, 12), assert_array_almost_equal_51602, *[y1_51603, y2_51604], **kwargs_51605)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_trmv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_trmv' in the type store
        # Getting the type of 'stypy_return_type' (line 744)
        stypy_return_type_51607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_51607)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_trmv'
        return stypy_return_type_51607


    @norecursion
    def test_trsv(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_trsv'
        module_type_store = module_type_store.open_function_context('test_trsv', 769, 4, False)
        # Assigning a type to the variable 'self' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_function_name', 'TestFBLAS2Simple.test_trsv')
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS2Simple.test_trsv.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.test_trsv', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_trsv', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_trsv(...)' code ##################

        
        # Call to seed(...): (line 770)
        # Processing the call arguments (line 770)
        int_51609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 13), 'int')
        # Processing the call keyword arguments (line 770)
        kwargs_51610 = {}
        # Getting the type of 'seed' (line 770)
        seed_51608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'seed', False)
        # Calling seed(args, kwargs) (line 770)
        seed_call_result_51611 = invoke(stypy.reporting.localization.Localization(__file__, 770, 8), seed_51608, *[int_51609], **kwargs_51610)
        
        
        
        # Call to enumerate(...): (line 771)
        # Processing the call arguments (line 771)
        # Getting the type of 'DTYPES' (line 771)
        DTYPES_51613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 36), 'DTYPES', False)
        # Processing the call keyword arguments (line 771)
        kwargs_51614 = {}
        # Getting the type of 'enumerate' (line 771)
        enumerate_51612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 26), 'enumerate', False)
        # Calling enumerate(args, kwargs) (line 771)
        enumerate_call_result_51615 = invoke(stypy.reporting.localization.Localization(__file__, 771, 26), enumerate_51612, *[DTYPES_51613], **kwargs_51614)
        
        # Testing the type of a for loop iterable (line 771)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 771, 8), enumerate_call_result_51615)
        # Getting the type of the for loop variable (line 771)
        for_loop_var_51616 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 771, 8), enumerate_call_result_51615)
        # Assigning a type to the variable 'ind' (line 771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 8), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 8), for_loop_var_51616))
        # Assigning a type to the variable 'dtype' (line 771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 8), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 771, 8), for_loop_var_51616))
        # SSA begins for a for statement (line 771)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Name (line 772):
        
        # Assigning a Num to a Name (line 772):
        int_51617 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 16), 'int')
        # Assigning a type to the variable 'n' (line 772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 12), 'n', int_51617)
        
        # Assigning a Call to a Name (line 773):
        
        # Assigning a Call to a Name (line 773):
        
        # Call to astype(...): (line 773)
        # Processing the call arguments (line 773)
        # Getting the type of 'dtype' (line 773)
        dtype_51629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 43), 'dtype', False)
        # Processing the call keyword arguments (line 773)
        kwargs_51630 = {}
        
        # Call to rand(...): (line 773)
        # Processing the call arguments (line 773)
        # Getting the type of 'n' (line 773)
        n_51619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 22), 'n', False)
        # Getting the type of 'n' (line 773)
        n_51620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 25), 'n', False)
        # Processing the call keyword arguments (line 773)
        kwargs_51621 = {}
        # Getting the type of 'rand' (line 773)
        rand_51618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 17), 'rand', False)
        # Calling rand(args, kwargs) (line 773)
        rand_call_result_51622 = invoke(stypy.reporting.localization.Localization(__file__, 773, 17), rand_51618, *[n_51619, n_51620], **kwargs_51621)
        
        
        # Call to eye(...): (line 773)
        # Processing the call arguments (line 773)
        # Getting the type of 'n' (line 773)
        n_51624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 32), 'n', False)
        # Processing the call keyword arguments (line 773)
        kwargs_51625 = {}
        # Getting the type of 'eye' (line 773)
        eye_51623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 28), 'eye', False)
        # Calling eye(args, kwargs) (line 773)
        eye_call_result_51626 = invoke(stypy.reporting.localization.Localization(__file__, 773, 28), eye_51623, *[n_51624], **kwargs_51625)
        
        # Applying the binary operator '+' (line 773)
        result_add_51627 = python_operator(stypy.reporting.localization.Localization(__file__, 773, 17), '+', rand_call_result_51622, eye_call_result_51626)
        
        # Obtaining the member 'astype' of a type (line 773)
        astype_51628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 17), result_add_51627, 'astype')
        # Calling astype(args, kwargs) (line 773)
        astype_call_result_51631 = invoke(stypy.reporting.localization.Localization(__file__, 773, 17), astype_51628, *[dtype_51629], **kwargs_51630)
        
        # Assigning a type to the variable 'A' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 12), 'A', astype_call_result_51631)
        
        # Assigning a Call to a Name (line 774):
        
        # Assigning a Call to a Name (line 774):
        
        # Call to astype(...): (line 774)
        # Processing the call arguments (line 774)
        # Getting the type of 'dtype' (line 774)
        dtype_51637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 31), 'dtype', False)
        # Processing the call keyword arguments (line 774)
        kwargs_51638 = {}
        
        # Call to rand(...): (line 774)
        # Processing the call arguments (line 774)
        # Getting the type of 'n' (line 774)
        n_51633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 21), 'n', False)
        # Processing the call keyword arguments (line 774)
        kwargs_51634 = {}
        # Getting the type of 'rand' (line 774)
        rand_51632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 16), 'rand', False)
        # Calling rand(args, kwargs) (line 774)
        rand_call_result_51635 = invoke(stypy.reporting.localization.Localization(__file__, 774, 16), rand_51632, *[n_51633], **kwargs_51634)
        
        # Obtaining the member 'astype' of a type (line 774)
        astype_51636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 16), rand_call_result_51635, 'astype')
        # Calling astype(args, kwargs) (line 774)
        astype_call_result_51639 = invoke(stypy.reporting.localization.Localization(__file__, 774, 16), astype_51636, *[dtype_51637], **kwargs_51638)
        
        # Assigning a type to the variable 'x' (line 774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 12), 'x', astype_call_result_51639)
        
        # Assigning a Call to a Tuple (line 775):
        
        # Assigning a Subscript to a Name (line 775):
        
        # Obtaining the type of the subscript
        int_51640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 12), 'int')
        
        # Call to get_blas_funcs(...): (line 775)
        # Processing the call arguments (line 775)
        
        # Obtaining an instance of the builtin type 'tuple' (line 775)
        tuple_51642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 36), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 775)
        # Adding element type (line 775)
        str_51643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 36), 'str', 'trsv')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 775, 36), tuple_51642, str_51643)
        
        # Processing the call keyword arguments (line 775)
        # Getting the type of 'dtype' (line 775)
        dtype_51644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 52), 'dtype', False)
        keyword_51645 = dtype_51644
        kwargs_51646 = {'dtype': keyword_51645}
        # Getting the type of 'get_blas_funcs' (line 775)
        get_blas_funcs_51641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 20), 'get_blas_funcs', False)
        # Calling get_blas_funcs(args, kwargs) (line 775)
        get_blas_funcs_call_result_51647 = invoke(stypy.reporting.localization.Localization(__file__, 775, 20), get_blas_funcs_51641, *[tuple_51642], **kwargs_51646)
        
        # Obtaining the member '__getitem__' of a type (line 775)
        getitem___51648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 775, 12), get_blas_funcs_call_result_51647, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 775)
        subscript_call_result_51649 = invoke(stypy.reporting.localization.Localization(__file__, 775, 12), getitem___51648, int_51640)
        
        # Assigning a type to the variable 'tuple_var_assignment_46699' (line 775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 775, 12), 'tuple_var_assignment_46699', subscript_call_result_51649)
        
        # Assigning a Name to a Name (line 775):
        # Getting the type of 'tuple_var_assignment_46699' (line 775)
        tuple_var_assignment_46699_51650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 12), 'tuple_var_assignment_46699')
        # Assigning a type to the variable 'func' (line 775)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 775, 12), 'func', tuple_var_assignment_46699_51650)
        
        # Assigning a Call to a Name (line 777):
        
        # Assigning a Call to a Name (line 777):
        
        # Call to func(...): (line 777)
        # Processing the call keyword arguments (line 777)
        # Getting the type of 'A' (line 777)
        A_51652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 24), 'A', False)
        keyword_51653 = A_51652
        # Getting the type of 'x' (line 777)
        x_51654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 29), 'x', False)
        keyword_51655 = x_51654
        kwargs_51656 = {'a': keyword_51653, 'x': keyword_51655}
        # Getting the type of 'func' (line 777)
        func_51651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 17), 'func', False)
        # Calling func(args, kwargs) (line 777)
        func_call_result_51657 = invoke(stypy.reporting.localization.Localization(__file__, 777, 17), func_51651, *[], **kwargs_51656)
        
        # Assigning a type to the variable 'y1' (line 777)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 12), 'y1', func_call_result_51657)
        
        # Assigning a Call to a Name (line 778):
        
        # Assigning a Call to a Name (line 778):
        
        # Call to solve(...): (line 778)
        # Processing the call arguments (line 778)
        
        # Call to triu(...): (line 778)
        # Processing the call arguments (line 778)
        # Getting the type of 'A' (line 778)
        A_51660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 28), 'A', False)
        # Processing the call keyword arguments (line 778)
        kwargs_51661 = {}
        # Getting the type of 'triu' (line 778)
        triu_51659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 23), 'triu', False)
        # Calling triu(args, kwargs) (line 778)
        triu_call_result_51662 = invoke(stypy.reporting.localization.Localization(__file__, 778, 23), triu_51659, *[A_51660], **kwargs_51661)
        
        # Getting the type of 'x' (line 778)
        x_51663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 32), 'x', False)
        # Processing the call keyword arguments (line 778)
        kwargs_51664 = {}
        # Getting the type of 'solve' (line 778)
        solve_51658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 778)
        solve_call_result_51665 = invoke(stypy.reporting.localization.Localization(__file__, 778, 17), solve_51658, *[triu_call_result_51662, x_51663], **kwargs_51664)
        
        # Assigning a type to the variable 'y2' (line 778)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'y2', solve_call_result_51665)
        
        # Call to assert_array_almost_equal(...): (line 779)
        # Processing the call arguments (line 779)
        # Getting the type of 'y1' (line 779)
        y1_51667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 38), 'y1', False)
        # Getting the type of 'y2' (line 779)
        y2_51668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 42), 'y2', False)
        # Processing the call keyword arguments (line 779)
        kwargs_51669 = {}
        # Getting the type of 'assert_array_almost_equal' (line 779)
        assert_array_almost_equal_51666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 779)
        assert_array_almost_equal_call_result_51670 = invoke(stypy.reporting.localization.Localization(__file__, 779, 12), assert_array_almost_equal_51666, *[y1_51667, y2_51668], **kwargs_51669)
        
        
        # Assigning a Call to a Name (line 781):
        
        # Assigning a Call to a Name (line 781):
        
        # Call to func(...): (line 781)
        # Processing the call keyword arguments (line 781)
        # Getting the type of 'A' (line 781)
        A_51672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 24), 'A', False)
        keyword_51673 = A_51672
        # Getting the type of 'x' (line 781)
        x_51674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 29), 'x', False)
        keyword_51675 = x_51674
        int_51676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 781, 38), 'int')
        keyword_51677 = int_51676
        kwargs_51678 = {'a': keyword_51673, 'x': keyword_51675, 'lower': keyword_51677}
        # Getting the type of 'func' (line 781)
        func_51671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 17), 'func', False)
        # Calling func(args, kwargs) (line 781)
        func_call_result_51679 = invoke(stypy.reporting.localization.Localization(__file__, 781, 17), func_51671, *[], **kwargs_51678)
        
        # Assigning a type to the variable 'y1' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 12), 'y1', func_call_result_51679)
        
        # Assigning a Call to a Name (line 782):
        
        # Assigning a Call to a Name (line 782):
        
        # Call to solve(...): (line 782)
        # Processing the call arguments (line 782)
        
        # Call to tril(...): (line 782)
        # Processing the call arguments (line 782)
        # Getting the type of 'A' (line 782)
        A_51682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 28), 'A', False)
        # Processing the call keyword arguments (line 782)
        kwargs_51683 = {}
        # Getting the type of 'tril' (line 782)
        tril_51681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 23), 'tril', False)
        # Calling tril(args, kwargs) (line 782)
        tril_call_result_51684 = invoke(stypy.reporting.localization.Localization(__file__, 782, 23), tril_51681, *[A_51682], **kwargs_51683)
        
        # Getting the type of 'x' (line 782)
        x_51685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 32), 'x', False)
        # Processing the call keyword arguments (line 782)
        kwargs_51686 = {}
        # Getting the type of 'solve' (line 782)
        solve_51680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 782)
        solve_call_result_51687 = invoke(stypy.reporting.localization.Localization(__file__, 782, 17), solve_51680, *[tril_call_result_51684, x_51685], **kwargs_51686)
        
        # Assigning a type to the variable 'y2' (line 782)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'y2', solve_call_result_51687)
        
        # Call to assert_array_almost_equal(...): (line 783)
        # Processing the call arguments (line 783)
        # Getting the type of 'y1' (line 783)
        y1_51689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 38), 'y1', False)
        # Getting the type of 'y2' (line 783)
        y2_51690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 42), 'y2', False)
        # Processing the call keyword arguments (line 783)
        kwargs_51691 = {}
        # Getting the type of 'assert_array_almost_equal' (line 783)
        assert_array_almost_equal_51688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 783)
        assert_array_almost_equal_call_result_51692 = invoke(stypy.reporting.localization.Localization(__file__, 783, 12), assert_array_almost_equal_51688, *[y1_51689, y2_51690], **kwargs_51691)
        
        
        # Assigning a Call to a Name (line 785):
        
        # Assigning a Call to a Name (line 785):
        
        # Call to func(...): (line 785)
        # Processing the call keyword arguments (line 785)
        # Getting the type of 'A' (line 785)
        A_51694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 24), 'A', False)
        keyword_51695 = A_51694
        # Getting the type of 'x' (line 785)
        x_51696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 29), 'x', False)
        keyword_51697 = x_51696
        int_51698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 785, 37), 'int')
        keyword_51699 = int_51698
        kwargs_51700 = {'a': keyword_51695, 'x': keyword_51697, 'diag': keyword_51699}
        # Getting the type of 'func' (line 785)
        func_51693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 17), 'func', False)
        # Calling func(args, kwargs) (line 785)
        func_call_result_51701 = invoke(stypy.reporting.localization.Localization(__file__, 785, 17), func_51693, *[], **kwargs_51700)
        
        # Assigning a type to the variable 'y1' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 12), 'y1', func_call_result_51701)
        
        # Assigning a Call to a Subscript (line 786):
        
        # Assigning a Call to a Subscript (line 786):
        
        # Call to dtype(...): (line 786)
        # Processing the call arguments (line 786)
        int_51703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 44), 'int')
        # Processing the call keyword arguments (line 786)
        kwargs_51704 = {}
        # Getting the type of 'dtype' (line 786)
        dtype_51702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 38), 'dtype', False)
        # Calling dtype(args, kwargs) (line 786)
        dtype_call_result_51705 = invoke(stypy.reporting.localization.Localization(__file__, 786, 38), dtype_51702, *[int_51703], **kwargs_51704)
        
        # Getting the type of 'A' (line 786)
        A_51706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'A')
        
        # Obtaining an instance of the builtin type 'tuple' (line 786)
        tuple_51707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 786)
        # Adding element type (line 786)
        
        # Call to arange(...): (line 786)
        # Processing the call arguments (line 786)
        # Getting the type of 'n' (line 786)
        n_51709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 21), 'n', False)
        # Processing the call keyword arguments (line 786)
        kwargs_51710 = {}
        # Getting the type of 'arange' (line 786)
        arange_51708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 14), 'arange', False)
        # Calling arange(args, kwargs) (line 786)
        arange_call_result_51711 = invoke(stypy.reporting.localization.Localization(__file__, 786, 14), arange_51708, *[n_51709], **kwargs_51710)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 14), tuple_51707, arange_call_result_51711)
        # Adding element type (line 786)
        
        # Call to arange(...): (line 786)
        # Processing the call arguments (line 786)
        # Getting the type of 'n' (line 786)
        n_51713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 32), 'n', False)
        # Processing the call keyword arguments (line 786)
        kwargs_51714 = {}
        # Getting the type of 'arange' (line 786)
        arange_51712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 25), 'arange', False)
        # Calling arange(args, kwargs) (line 786)
        arange_call_result_51715 = invoke(stypy.reporting.localization.Localization(__file__, 786, 25), arange_51712, *[n_51713], **kwargs_51714)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 14), tuple_51707, arange_call_result_51715)
        
        # Storing an element on a container (line 786)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 12), A_51706, (tuple_51707, dtype_call_result_51705))
        
        # Assigning a Call to a Name (line 787):
        
        # Assigning a Call to a Name (line 787):
        
        # Call to solve(...): (line 787)
        # Processing the call arguments (line 787)
        
        # Call to triu(...): (line 787)
        # Processing the call arguments (line 787)
        # Getting the type of 'A' (line 787)
        A_51718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 28), 'A', False)
        # Processing the call keyword arguments (line 787)
        kwargs_51719 = {}
        # Getting the type of 'triu' (line 787)
        triu_51717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 23), 'triu', False)
        # Calling triu(args, kwargs) (line 787)
        triu_call_result_51720 = invoke(stypy.reporting.localization.Localization(__file__, 787, 23), triu_51717, *[A_51718], **kwargs_51719)
        
        # Getting the type of 'x' (line 787)
        x_51721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 32), 'x', False)
        # Processing the call keyword arguments (line 787)
        kwargs_51722 = {}
        # Getting the type of 'solve' (line 787)
        solve_51716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 787)
        solve_call_result_51723 = invoke(stypy.reporting.localization.Localization(__file__, 787, 17), solve_51716, *[triu_call_result_51720, x_51721], **kwargs_51722)
        
        # Assigning a type to the variable 'y2' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 12), 'y2', solve_call_result_51723)
        
        # Call to assert_array_almost_equal(...): (line 788)
        # Processing the call arguments (line 788)
        # Getting the type of 'y1' (line 788)
        y1_51725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 38), 'y1', False)
        # Getting the type of 'y2' (line 788)
        y2_51726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 42), 'y2', False)
        # Processing the call keyword arguments (line 788)
        kwargs_51727 = {}
        # Getting the type of 'assert_array_almost_equal' (line 788)
        assert_array_almost_equal_51724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 788)
        assert_array_almost_equal_call_result_51728 = invoke(stypy.reporting.localization.Localization(__file__, 788, 12), assert_array_almost_equal_51724, *[y1_51725, y2_51726], **kwargs_51727)
        
        
        # Assigning a Call to a Name (line 790):
        
        # Assigning a Call to a Name (line 790):
        
        # Call to func(...): (line 790)
        # Processing the call keyword arguments (line 790)
        # Getting the type of 'A' (line 790)
        A_51730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 24), 'A', False)
        keyword_51731 = A_51730
        # Getting the type of 'x' (line 790)
        x_51732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 29), 'x', False)
        keyword_51733 = x_51732
        int_51734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 790, 37), 'int')
        keyword_51735 = int_51734
        int_51736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 790, 46), 'int')
        keyword_51737 = int_51736
        kwargs_51738 = {'a': keyword_51731, 'x': keyword_51733, 'trans': keyword_51737, 'diag': keyword_51735}
        # Getting the type of 'func' (line 790)
        func_51729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 17), 'func', False)
        # Calling func(args, kwargs) (line 790)
        func_call_result_51739 = invoke(stypy.reporting.localization.Localization(__file__, 790, 17), func_51729, *[], **kwargs_51738)
        
        # Assigning a type to the variable 'y1' (line 790)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 12), 'y1', func_call_result_51739)
        
        # Assigning a Call to a Name (line 791):
        
        # Assigning a Call to a Name (line 791):
        
        # Call to solve(...): (line 791)
        # Processing the call arguments (line 791)
        
        # Call to triu(...): (line 791)
        # Processing the call arguments (line 791)
        # Getting the type of 'A' (line 791)
        A_51742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 28), 'A', False)
        # Processing the call keyword arguments (line 791)
        kwargs_51743 = {}
        # Getting the type of 'triu' (line 791)
        triu_51741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 23), 'triu', False)
        # Calling triu(args, kwargs) (line 791)
        triu_call_result_51744 = invoke(stypy.reporting.localization.Localization(__file__, 791, 23), triu_51741, *[A_51742], **kwargs_51743)
        
        # Obtaining the member 'T' of a type (line 791)
        T_51745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 791, 23), triu_call_result_51744, 'T')
        # Getting the type of 'x' (line 791)
        x_51746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 34), 'x', False)
        # Processing the call keyword arguments (line 791)
        kwargs_51747 = {}
        # Getting the type of 'solve' (line 791)
        solve_51740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 791)
        solve_call_result_51748 = invoke(stypy.reporting.localization.Localization(__file__, 791, 17), solve_51740, *[T_51745, x_51746], **kwargs_51747)
        
        # Assigning a type to the variable 'y2' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 12), 'y2', solve_call_result_51748)
        
        # Call to assert_array_almost_equal(...): (line 792)
        # Processing the call arguments (line 792)
        # Getting the type of 'y1' (line 792)
        y1_51750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 38), 'y1', False)
        # Getting the type of 'y2' (line 792)
        y2_51751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 42), 'y2', False)
        # Processing the call keyword arguments (line 792)
        kwargs_51752 = {}
        # Getting the type of 'assert_array_almost_equal' (line 792)
        assert_array_almost_equal_51749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 792)
        assert_array_almost_equal_call_result_51753 = invoke(stypy.reporting.localization.Localization(__file__, 792, 12), assert_array_almost_equal_51749, *[y1_51750, y2_51751], **kwargs_51752)
        
        
        # Assigning a Call to a Name (line 794):
        
        # Assigning a Call to a Name (line 794):
        
        # Call to func(...): (line 794)
        # Processing the call keyword arguments (line 794)
        # Getting the type of 'A' (line 794)
        A_51755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 24), 'A', False)
        keyword_51756 = A_51755
        # Getting the type of 'x' (line 794)
        x_51757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 29), 'x', False)
        keyword_51758 = x_51757
        int_51759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 37), 'int')
        keyword_51760 = int_51759
        int_51761 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 46), 'int')
        keyword_51762 = int_51761
        kwargs_51763 = {'a': keyword_51756, 'x': keyword_51758, 'trans': keyword_51762, 'diag': keyword_51760}
        # Getting the type of 'func' (line 794)
        func_51754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 17), 'func', False)
        # Calling func(args, kwargs) (line 794)
        func_call_result_51764 = invoke(stypy.reporting.localization.Localization(__file__, 794, 17), func_51754, *[], **kwargs_51763)
        
        # Assigning a type to the variable 'y1' (line 794)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 12), 'y1', func_call_result_51764)
        
        # Assigning a Call to a Name (line 795):
        
        # Assigning a Call to a Name (line 795):
        
        # Call to solve(...): (line 795)
        # Processing the call arguments (line 795)
        
        # Call to conj(...): (line 795)
        # Processing the call keyword arguments (line 795)
        kwargs_51771 = {}
        
        # Call to triu(...): (line 795)
        # Processing the call arguments (line 795)
        # Getting the type of 'A' (line 795)
        A_51767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 28), 'A', False)
        # Processing the call keyword arguments (line 795)
        kwargs_51768 = {}
        # Getting the type of 'triu' (line 795)
        triu_51766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 23), 'triu', False)
        # Calling triu(args, kwargs) (line 795)
        triu_call_result_51769 = invoke(stypy.reporting.localization.Localization(__file__, 795, 23), triu_51766, *[A_51767], **kwargs_51768)
        
        # Obtaining the member 'conj' of a type (line 795)
        conj_51770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 23), triu_call_result_51769, 'conj')
        # Calling conj(args, kwargs) (line 795)
        conj_call_result_51772 = invoke(stypy.reporting.localization.Localization(__file__, 795, 23), conj_51770, *[], **kwargs_51771)
        
        # Obtaining the member 'T' of a type (line 795)
        T_51773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 23), conj_call_result_51772, 'T')
        # Getting the type of 'x' (line 795)
        x_51774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 41), 'x', False)
        # Processing the call keyword arguments (line 795)
        kwargs_51775 = {}
        # Getting the type of 'solve' (line 795)
        solve_51765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 17), 'solve', False)
        # Calling solve(args, kwargs) (line 795)
        solve_call_result_51776 = invoke(stypy.reporting.localization.Localization(__file__, 795, 17), solve_51765, *[T_51773, x_51774], **kwargs_51775)
        
        # Assigning a type to the variable 'y2' (line 795)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 12), 'y2', solve_call_result_51776)
        
        # Call to assert_array_almost_equal(...): (line 796)
        # Processing the call arguments (line 796)
        # Getting the type of 'y1' (line 796)
        y1_51778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 38), 'y1', False)
        # Getting the type of 'y2' (line 796)
        y2_51779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 42), 'y2', False)
        # Processing the call keyword arguments (line 796)
        kwargs_51780 = {}
        # Getting the type of 'assert_array_almost_equal' (line 796)
        assert_array_almost_equal_51777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 796)
        assert_array_almost_equal_call_result_51781 = invoke(stypy.reporting.localization.Localization(__file__, 796, 12), assert_array_almost_equal_51777, *[y1_51778, y2_51779], **kwargs_51780)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_trsv(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_trsv' in the type store
        # Getting the type of 'stypy_return_type' (line 769)
        stypy_return_type_51782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_51782)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_trsv'
        return stypy_return_type_51782


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 224, 0, False)
        # Assigning a type to the variable 'self' (line 225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS2Simple.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestFBLAS2Simple' (line 224)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 0), 'TestFBLAS2Simple', TestFBLAS2Simple)
# Declaration of the 'TestFBLAS3Simple' class

class TestFBLAS3Simple(object, ):

    @norecursion
    def test_gemm(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_gemm'
        module_type_store = module_type_store.open_function_context('test_gemm', 801, 4, False)
        # Assigning a type to the variable 'self' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_localization', localization)
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_function_name', 'TestFBLAS3Simple.test_gemm')
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_param_names_list', [])
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFBLAS3Simple.test_gemm.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS3Simple.test_gemm', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_gemm', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_gemm(...)' code ##################

        
        str_51783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 17), 'str', 'sd')
        # Testing the type of a for loop iterable (line 802)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 802, 8), str_51783)
        # Getting the type of the for loop variable (line 802)
        for_loop_var_51784 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 802, 8), str_51783)
        # Assigning a type to the variable 'p' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'p', for_loop_var_51784)
        # SSA begins for a for statement (line 802)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 803):
        
        # Assigning a Call to a Name (line 803):
        
        # Call to getattr(...): (line 803)
        # Processing the call arguments (line 803)
        # Getting the type of 'fblas' (line 803)
        fblas_51786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 24), 'fblas', False)
        # Getting the type of 'p' (line 803)
        p_51787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 31), 'p', False)
        str_51788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 33), 'str', 'gemm')
        # Applying the binary operator '+' (line 803)
        result_add_51789 = python_operator(stypy.reporting.localization.Localization(__file__, 803, 31), '+', p_51787, str_51788)
        
        # Getting the type of 'None' (line 803)
        None_51790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 41), 'None', False)
        # Processing the call keyword arguments (line 803)
        kwargs_51791 = {}
        # Getting the type of 'getattr' (line 803)
        getattr_51785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 803)
        getattr_call_result_51792 = invoke(stypy.reporting.localization.Localization(__file__, 803, 16), getattr_51785, *[fblas_51786, result_add_51789, None_51790], **kwargs_51791)
        
        # Assigning a type to the variable 'f' (line 803)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 803, 12), 'f', getattr_call_result_51792)
        
        # Type idiom detected: calculating its left and rigth part (line 804)
        # Getting the type of 'f' (line 804)
        f_51793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 15), 'f')
        # Getting the type of 'None' (line 804)
        None_51794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 20), 'None')
        
        (may_be_51795, more_types_in_union_51796) = may_be_none(f_51793, None_51794)

        if may_be_51795:

            if more_types_in_union_51796:
                # Runtime conditional SSA (line 804)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_51796:
                # SSA join for if statement (line 804)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 806)
        # Processing the call arguments (line 806)
        
        # Call to f(...): (line 806)
        # Processing the call arguments (line 806)
        int_51799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 806)
        list_51800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 806)
        # Adding element type (line 806)
        int_51801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 43), list_51800, int_51801)
        
        
        # Obtaining an instance of the builtin type 'list' (line 806)
        list_51802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 806)
        # Adding element type (line 806)
        int_51803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 48), list_51802, int_51803)
        
        # Processing the call keyword arguments (line 806)
        kwargs_51804 = {}
        # Getting the type of 'f' (line 806)
        f_51798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 38), 'f', False)
        # Calling f(args, kwargs) (line 806)
        f_call_result_51805 = invoke(stypy.reporting.localization.Localization(__file__, 806, 38), f_51798, *[int_51799, list_51800, list_51802], **kwargs_51804)
        
        
        # Obtaining an instance of the builtin type 'list' (line 806)
        list_51806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 806)
        # Adding element type (line 806)
        
        # Obtaining an instance of the builtin type 'list' (line 806)
        list_51807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 56), 'list')
        # Adding type elements to the builtin type 'list' instance (line 806)
        # Adding element type (line 806)
        int_51808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 57), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 56), list_51807, int_51808)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 55), list_51806, list_51807)
        
        # Processing the call keyword arguments (line 806)
        kwargs_51809 = {}
        # Getting the type of 'assert_array_almost_equal' (line 806)
        assert_array_almost_equal_51797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 806)
        assert_array_almost_equal_call_result_51810 = invoke(stypy.reporting.localization.Localization(__file__, 806, 12), assert_array_almost_equal_51797, *[f_call_result_51805, list_51806], **kwargs_51809)
        
        
        # Call to assert_array_almost_equal(...): (line 807)
        # Processing the call arguments (line 807)
        
        # Call to f(...): (line 807)
        # Processing the call arguments (line 807)
        int_51813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 40), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 807)
        list_51814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 43), 'list')
        # Adding type elements to the builtin type 'list' instance (line 807)
        # Adding element type (line 807)
        int_51815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 807, 43), list_51814, int_51815)
        
        
        # Obtaining an instance of the builtin type 'list' (line 807)
        list_51816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 48), 'list')
        # Adding type elements to the builtin type 'list' instance (line 807)
        # Adding element type (line 807)
        int_51817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 807, 48), list_51816, int_51817)
        
        int_51818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 54), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 807)
        list_51819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 807)
        # Adding element type (line 807)
        int_51820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 807, 57), list_51819, int_51820)
        
        # Processing the call keyword arguments (line 807)
        kwargs_51821 = {}
        # Getting the type of 'f' (line 807)
        f_51812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 38), 'f', False)
        # Calling f(args, kwargs) (line 807)
        f_call_result_51822 = invoke(stypy.reporting.localization.Localization(__file__, 807, 38), f_51812, *[int_51813, list_51814, list_51816, int_51818, list_51819], **kwargs_51821)
        
        
        # Obtaining an instance of the builtin type 'list' (line 807)
        list_51823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 63), 'list')
        # Adding type elements to the builtin type 'list' instance (line 807)
        # Adding element type (line 807)
        int_51824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 807, 64), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 807, 63), list_51823, int_51824)
        
        # Processing the call keyword arguments (line 807)
        kwargs_51825 = {}
        # Getting the type of 'assert_array_almost_equal' (line 807)
        assert_array_almost_equal_51811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 807)
        assert_array_almost_equal_call_result_51826 = invoke(stypy.reporting.localization.Localization(__file__, 807, 12), assert_array_almost_equal_51811, *[f_call_result_51822, list_51823], **kwargs_51825)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        str_51827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 808, 17), 'str', 'cz')
        # Testing the type of a for loop iterable (line 808)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 808, 8), str_51827)
        # Getting the type of the for loop variable (line 808)
        for_loop_var_51828 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 808, 8), str_51827)
        # Assigning a type to the variable 'p' (line 808)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 8), 'p', for_loop_var_51828)
        # SSA begins for a for statement (line 808)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 809):
        
        # Assigning a Call to a Name (line 809):
        
        # Call to getattr(...): (line 809)
        # Processing the call arguments (line 809)
        # Getting the type of 'fblas' (line 809)
        fblas_51830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 24), 'fblas', False)
        # Getting the type of 'p' (line 809)
        p_51831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 31), 'p', False)
        str_51832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 33), 'str', 'gemm')
        # Applying the binary operator '+' (line 809)
        result_add_51833 = python_operator(stypy.reporting.localization.Localization(__file__, 809, 31), '+', p_51831, str_51832)
        
        # Getting the type of 'None' (line 809)
        None_51834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 41), 'None', False)
        # Processing the call keyword arguments (line 809)
        kwargs_51835 = {}
        # Getting the type of 'getattr' (line 809)
        getattr_51829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 16), 'getattr', False)
        # Calling getattr(args, kwargs) (line 809)
        getattr_call_result_51836 = invoke(stypy.reporting.localization.Localization(__file__, 809, 16), getattr_51829, *[fblas_51830, result_add_51833, None_51834], **kwargs_51835)
        
        # Assigning a type to the variable 'f' (line 809)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 12), 'f', getattr_call_result_51836)
        
        # Type idiom detected: calculating its left and rigth part (line 810)
        # Getting the type of 'f' (line 810)
        f_51837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 15), 'f')
        # Getting the type of 'None' (line 810)
        None_51838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 20), 'None')
        
        (may_be_51839, more_types_in_union_51840) = may_be_none(f_51837, None_51838)

        if may_be_51839:

            if more_types_in_union_51840:
                # Runtime conditional SSA (line 810)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store


            if more_types_in_union_51840:
                # SSA join for if statement (line 810)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to assert_array_almost_equal(...): (line 812)
        # Processing the call arguments (line 812)
        
        # Call to f(...): (line 812)
        # Processing the call arguments (line 812)
        complex_51843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 40), 'complex')
        
        # Obtaining an instance of the builtin type 'list' (line 812)
        list_51844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 812)
        # Adding element type (line 812)
        int_51845 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 45), 'int')
        complex_51846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 47), 'complex')
        # Applying the binary operator '-' (line 812)
        result_sub_51847 = python_operator(stypy.reporting.localization.Localization(__file__, 812, 45), '-', int_51845, complex_51846)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 44), list_51844, result_sub_51847)
        
        
        # Obtaining an instance of the builtin type 'list' (line 812)
        list_51848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 52), 'list')
        # Adding type elements to the builtin type 'list' instance (line 812)
        # Adding element type (line 812)
        int_51849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 52), list_51848, int_51849)
        
        # Processing the call keyword arguments (line 812)
        kwargs_51850 = {}
        # Getting the type of 'f' (line 812)
        f_51842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 38), 'f', False)
        # Calling f(args, kwargs) (line 812)
        f_call_result_51851 = invoke(stypy.reporting.localization.Localization(__file__, 812, 38), f_51842, *[complex_51843, list_51844, list_51848], **kwargs_51850)
        
        
        # Obtaining an instance of the builtin type 'list' (line 812)
        list_51852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 812)
        # Adding element type (line 812)
        
        # Obtaining an instance of the builtin type 'list' (line 812)
        list_51853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 812)
        # Adding element type (line 812)
        int_51854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 61), 'int')
        complex_51855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 65), 'complex')
        # Applying the binary operator '-' (line 812)
        result_sub_51856 = python_operator(stypy.reporting.localization.Localization(__file__, 812, 61), '-', int_51854, complex_51855)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 60), list_51853, result_sub_51856)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 59), list_51852, list_51853)
        
        # Processing the call keyword arguments (line 812)
        kwargs_51857 = {}
        # Getting the type of 'assert_array_almost_equal' (line 812)
        assert_array_almost_equal_51841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 812)
        assert_array_almost_equal_call_result_51858 = invoke(stypy.reporting.localization.Localization(__file__, 812, 12), assert_array_almost_equal_51841, *[f_call_result_51851, list_51852], **kwargs_51857)
        
        
        # Call to assert_array_almost_equal(...): (line 813)
        # Processing the call arguments (line 813)
        
        # Call to f(...): (line 813)
        # Processing the call arguments (line 813)
        complex_51861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 40), 'complex')
        
        # Obtaining an instance of the builtin type 'list' (line 813)
        list_51862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 44), 'list')
        # Adding type elements to the builtin type 'list' instance (line 813)
        # Adding element type (line 813)
        int_51863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 45), 'int')
        complex_51864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 47), 'complex')
        # Applying the binary operator '-' (line 813)
        result_sub_51865 = python_operator(stypy.reporting.localization.Localization(__file__, 813, 45), '-', int_51863, complex_51864)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 44), list_51862, result_sub_51865)
        
        
        # Obtaining an instance of the builtin type 'list' (line 813)
        list_51866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 52), 'list')
        # Adding type elements to the builtin type 'list' instance (line 813)
        # Adding element type (line 813)
        int_51867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 52), list_51866, int_51867)
        
        int_51868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 58), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 813)
        list_51869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 813)
        # Adding element type (line 813)
        complex_51870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 62), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 61), list_51869, complex_51870)
        
        # Processing the call keyword arguments (line 813)
        kwargs_51871 = {}
        # Getting the type of 'f' (line 813)
        f_51860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 38), 'f', False)
        # Calling f(args, kwargs) (line 813)
        f_call_result_51872 = invoke(stypy.reporting.localization.Localization(__file__, 813, 38), f_51860, *[complex_51861, list_51862, list_51866, int_51868, list_51869], **kwargs_51871)
        
        
        # Obtaining an instance of the builtin type 'list' (line 813)
        list_51873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 68), 'list')
        # Adding type elements to the builtin type 'list' instance (line 813)
        # Adding element type (line 813)
        int_51874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 69), 'int')
        complex_51875 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 73), 'complex')
        # Applying the binary operator '-' (line 813)
        result_sub_51876 = python_operator(stypy.reporting.localization.Localization(__file__, 813, 69), '-', int_51874, complex_51875)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 68), list_51873, result_sub_51876)
        
        # Processing the call keyword arguments (line 813)
        kwargs_51877 = {}
        # Getting the type of 'assert_array_almost_equal' (line 813)
        assert_array_almost_equal_51859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 813)
        assert_array_almost_equal_call_result_51878 = invoke(stypy.reporting.localization.Localization(__file__, 813, 12), assert_array_almost_equal_51859, *[f_call_result_51872, list_51873], **kwargs_51877)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_gemm(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_gemm' in the type store
        # Getting the type of 'stypy_return_type' (line 801)
        stypy_return_type_51879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_51879)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_gemm'
        return stypy_return_type_51879


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 799, 0, False)
        # Assigning a type to the variable 'self' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFBLAS3Simple.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestFBLAS3Simple' (line 799)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 0), 'TestFBLAS3Simple', TestFBLAS3Simple)

@norecursion
def _get_func(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    str_51880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 23), 'str', 'sdzc')
    defaults = [str_51880]
    # Create a new context for function '_get_func'
    module_type_store = module_type_store.open_function_context('_get_func', 816, 0, False)
    
    # Passed parameters checking function
    _get_func.stypy_localization = localization
    _get_func.stypy_type_of_self = None
    _get_func.stypy_type_store = module_type_store
    _get_func.stypy_function_name = '_get_func'
    _get_func.stypy_param_names_list = ['func', 'ps']
    _get_func.stypy_varargs_param_name = None
    _get_func.stypy_kwargs_param_name = None
    _get_func.stypy_call_defaults = defaults
    _get_func.stypy_call_varargs = varargs
    _get_func.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, '_get_func', ['func', 'ps'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, '_get_func', localization, ['func', 'ps'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of '_get_func(...)' code ##################

    str_51881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 4), 'str', 'Just a helper: return a specified BLAS function w/typecode.')
    
    # Getting the type of 'ps' (line 818)
    ps_51882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 13), 'ps')
    # Testing the type of a for loop iterable (line 818)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 818, 4), ps_51882)
    # Getting the type of the for loop variable (line 818)
    for_loop_var_51883 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 818, 4), ps_51882)
    # Assigning a type to the variable 'p' (line 818)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 4), 'p', for_loop_var_51883)
    # SSA begins for a for statement (line 818)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 819):
    
    # Assigning a Call to a Name (line 819):
    
    # Call to getattr(...): (line 819)
    # Processing the call arguments (line 819)
    # Getting the type of 'fblas' (line 819)
    fblas_51885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 20), 'fblas', False)
    # Getting the type of 'p' (line 819)
    p_51886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 27), 'p', False)
    # Getting the type of 'func' (line 819)
    func_51887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 29), 'func', False)
    # Applying the binary operator '+' (line 819)
    result_add_51888 = python_operator(stypy.reporting.localization.Localization(__file__, 819, 27), '+', p_51886, func_51887)
    
    # Getting the type of 'None' (line 819)
    None_51889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 35), 'None', False)
    # Processing the call keyword arguments (line 819)
    kwargs_51890 = {}
    # Getting the type of 'getattr' (line 819)
    getattr_51884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 12), 'getattr', False)
    # Calling getattr(args, kwargs) (line 819)
    getattr_call_result_51891 = invoke(stypy.reporting.localization.Localization(__file__, 819, 12), getattr_51884, *[fblas_51885, result_add_51888, None_51889], **kwargs_51890)
    
    # Assigning a type to the variable 'f' (line 819)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 8), 'f', getattr_call_result_51891)
    
    # Type idiom detected: calculating its left and rigth part (line 820)
    # Getting the type of 'f' (line 820)
    f_51892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 11), 'f')
    # Getting the type of 'None' (line 820)
    None_51893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 16), 'None')
    
    (may_be_51894, more_types_in_union_51895) = may_be_none(f_51892, None_51893)

    if may_be_51894:

        if more_types_in_union_51895:
            # Runtime conditional SSA (line 820)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store


        if more_types_in_union_51895:
            # SSA join for if statement (line 820)
            module_type_store = module_type_store.join_ssa_context()


    
    # Creating a generator
    # Getting the type of 'f' (line 822)
    f_51896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 14), 'f')
    GeneratorType_51897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 822, 8), 'GeneratorType')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 822, 8), GeneratorType_51897, f_51896)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 822, 8), 'stypy_return_type', GeneratorType_51897)
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of '_get_func(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function '_get_func' in the type store
    # Getting the type of 'stypy_return_type' (line 816)
    stypy_return_type_51898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_51898)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function '_get_func'
    return stypy_return_type_51898

# Assigning a type to the variable '_get_func' (line 816)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 0), '_get_func', _get_func)
# Declaration of the 'TestBLAS3Symm' class

class TestBLAS3Symm(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 827, 4, False)
        # Assigning a type to the variable 'self' (line 828)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Symm.setup_method')
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Symm.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Symm.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Call to a Attribute (line 828):
        
        # Assigning a Call to a Attribute (line 828):
        
        # Call to array(...): (line 828)
        # Processing the call arguments (line 828)
        
        # Obtaining an instance of the builtin type 'list' (line 828)
        list_51901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 828)
        # Adding element type (line 828)
        
        # Obtaining an instance of the builtin type 'list' (line 828)
        list_51902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 828)
        # Adding element type (line 828)
        float_51903 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 27), list_51902, float_51903)
        # Adding element type (line 828)
        float_51904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 27), list_51902, float_51904)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 26), list_51901, list_51902)
        # Adding element type (line 828)
        
        # Obtaining an instance of the builtin type 'list' (line 829)
        list_51905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 829)
        # Adding element type (line 829)
        float_51906 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 829, 27), list_51905, float_51906)
        # Adding element type (line 829)
        float_51907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 829, 27), list_51905, float_51907)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 26), list_51901, list_51905)
        
        # Processing the call keyword arguments (line 828)
        kwargs_51908 = {}
        # Getting the type of 'np' (line 828)
        np_51899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 828)
        array_51900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 17), np_51899, 'array')
        # Calling array(args, kwargs) (line 828)
        array_call_result_51909 = invoke(stypy.reporting.localization.Localization(__file__, 828, 17), array_51900, *[list_51901], **kwargs_51908)
        
        # Getting the type of 'self' (line 828)
        self_51910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 8), 'self')
        # Setting the type of the member 'a' of a type (line 828)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 8), self_51910, 'a', array_call_result_51909)
        
        # Assigning a Call to a Attribute (line 830):
        
        # Assigning a Call to a Attribute (line 830):
        
        # Call to array(...): (line 830)
        # Processing the call arguments (line 830)
        
        # Obtaining an instance of the builtin type 'list' (line 830)
        list_51913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 830)
        # Adding element type (line 830)
        
        # Obtaining an instance of the builtin type 'list' (line 830)
        list_51914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 830)
        # Adding element type (line 830)
        float_51915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 27), list_51914, float_51915)
        # Adding element type (line 830)
        float_51916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 27), list_51914, float_51916)
        # Adding element type (line 830)
        float_51917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 27), list_51914, float_51917)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 26), list_51913, list_51914)
        # Adding element type (line 830)
        
        # Obtaining an instance of the builtin type 'list' (line 831)
        list_51918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 831)
        # Adding element type (line 831)
        float_51919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 831, 27), list_51918, float_51919)
        # Adding element type (line 831)
        float_51920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 831, 27), list_51918, float_51920)
        # Adding element type (line 831)
        float_51921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 831, 27), list_51918, float_51921)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 26), list_51913, list_51918)
        
        # Processing the call keyword arguments (line 830)
        kwargs_51922 = {}
        # Getting the type of 'np' (line 830)
        np_51911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 830)
        array_51912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 17), np_51911, 'array')
        # Calling array(args, kwargs) (line 830)
        array_call_result_51923 = invoke(stypy.reporting.localization.Localization(__file__, 830, 17), array_51912, *[list_51913], **kwargs_51922)
        
        # Getting the type of 'self' (line 830)
        self_51924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 8), 'self')
        # Setting the type of the member 'b' of a type (line 830)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 8), self_51924, 'b', array_call_result_51923)
        
        # Assigning a Call to a Attribute (line 832):
        
        # Assigning a Call to a Attribute (line 832):
        
        # Call to ones(...): (line 832)
        # Processing the call arguments (line 832)
        
        # Obtaining an instance of the builtin type 'tuple' (line 832)
        tuple_51927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 26), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 832)
        # Adding element type (line 832)
        int_51928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 832, 26), tuple_51927, int_51928)
        # Adding element type (line 832)
        int_51929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 832, 26), tuple_51927, int_51929)
        
        # Processing the call keyword arguments (line 832)
        kwargs_51930 = {}
        # Getting the type of 'np' (line 832)
        np_51925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 17), 'np', False)
        # Obtaining the member 'ones' of a type (line 832)
        ones_51926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 17), np_51925, 'ones')
        # Calling ones(args, kwargs) (line 832)
        ones_call_result_51931 = invoke(stypy.reporting.localization.Localization(__file__, 832, 17), ones_51926, *[tuple_51927], **kwargs_51930)
        
        # Getting the type of 'self' (line 832)
        self_51932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'self')
        # Setting the type of the member 'c' of a type (line 832)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 8), self_51932, 'c', ones_call_result_51931)
        
        # Assigning a Call to a Attribute (line 833):
        
        # Assigning a Call to a Attribute (line 833):
        
        # Call to array(...): (line 833)
        # Processing the call arguments (line 833)
        
        # Obtaining an instance of the builtin type 'list' (line 833)
        list_51935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 833)
        # Adding element type (line 833)
        
        # Obtaining an instance of the builtin type 'list' (line 833)
        list_51936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 833)
        # Adding element type (line 833)
        float_51937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 27), list_51936, float_51937)
        # Adding element type (line 833)
        float_51938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 27), list_51936, float_51938)
        # Adding element type (line 833)
        float_51939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 27), list_51936, float_51939)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 26), list_51935, list_51936)
        # Adding element type (line 833)
        
        # Obtaining an instance of the builtin type 'list' (line 834)
        list_51940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 834)
        # Adding element type (line 834)
        float_51941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 27), list_51940, float_51941)
        # Adding element type (line 834)
        float_51942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 27), list_51940, float_51942)
        # Adding element type (line 834)
        float_51943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 27), list_51940, float_51943)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 26), list_51935, list_51940)
        
        # Processing the call keyword arguments (line 833)
        kwargs_51944 = {}
        # Getting the type of 'np' (line 833)
        np_51933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 833)
        array_51934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 17), np_51933, 'array')
        # Calling array(args, kwargs) (line 833)
        array_call_result_51945 = invoke(stypy.reporting.localization.Localization(__file__, 833, 17), array_51934, *[list_51935], **kwargs_51944)
        
        # Getting the type of 'self' (line 833)
        self_51946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'self')
        # Setting the type of the member 't' of a type (line 833)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 8), self_51946, 't', array_call_result_51945)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 827)
        stypy_return_type_51947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_51947)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_51947


    @norecursion
    def test_symm(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_symm'
        module_type_store = module_type_store.open_function_context('test_symm', 836, 4, False)
        # Assigning a type to the variable 'self' (line 837)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 837, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Symm.test_symm')
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Symm.test_symm.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Symm.test_symm', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_symm', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_symm(...)' code ##################

        
        
        # Call to _get_func(...): (line 837)
        # Processing the call arguments (line 837)
        str_51949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 27), 'str', 'symm')
        # Processing the call keyword arguments (line 837)
        kwargs_51950 = {}
        # Getting the type of '_get_func' (line 837)
        _get_func_51948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 17), '_get_func', False)
        # Calling _get_func(args, kwargs) (line 837)
        _get_func_call_result_51951 = invoke(stypy.reporting.localization.Localization(__file__, 837, 17), _get_func_51948, *[str_51949], **kwargs_51950)
        
        # Testing the type of a for loop iterable (line 837)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 837, 8), _get_func_call_result_51951)
        # Getting the type of the for loop variable (line 837)
        for_loop_var_51952 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 837, 8), _get_func_call_result_51951)
        # Assigning a type to the variable 'f' (line 837)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 837, 8), 'f', for_loop_var_51952)
        # SSA begins for a for statement (line 837)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 838):
        
        # Assigning a Call to a Name (line 838):
        
        # Call to f(...): (line 838)
        # Processing the call keyword arguments (line 838)
        # Getting the type of 'self' (line 838)
        self_51954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 22), 'self', False)
        # Obtaining the member 'a' of a type (line 838)
        a_51955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 22), self_51954, 'a')
        keyword_51956 = a_51955
        # Getting the type of 'self' (line 838)
        self_51957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 32), 'self', False)
        # Obtaining the member 'b' of a type (line 838)
        b_51958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 32), self_51957, 'b')
        keyword_51959 = b_51958
        # Getting the type of 'self' (line 838)
        self_51960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 42), 'self', False)
        # Obtaining the member 'c' of a type (line 838)
        c_51961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 42), self_51960, 'c')
        keyword_51962 = c_51961
        float_51963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 56), 'float')
        keyword_51964 = float_51963
        float_51965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 65), 'float')
        keyword_51966 = float_51965
        kwargs_51967 = {'a': keyword_51956, 'alpha': keyword_51964, 'c': keyword_51962, 'b': keyword_51959, 'beta': keyword_51966}
        # Getting the type of 'f' (line 838)
        f_51953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 18), 'f', False)
        # Calling f(args, kwargs) (line 838)
        f_call_result_51968 = invoke(stypy.reporting.localization.Localization(__file__, 838, 18), f_51953, *[], **kwargs_51967)
        
        # Assigning a type to the variable 'res' (line 838)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 12), 'res', f_call_result_51968)
        
        # Call to assert_array_almost_equal(...): (line 839)
        # Processing the call arguments (line 839)
        # Getting the type of 'res' (line 839)
        res_51970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 38), 'res', False)
        # Getting the type of 'self' (line 839)
        self_51971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 43), 'self', False)
        # Obtaining the member 't' of a type (line 839)
        t_51972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 43), self_51971, 't')
        # Processing the call keyword arguments (line 839)
        kwargs_51973 = {}
        # Getting the type of 'assert_array_almost_equal' (line 839)
        assert_array_almost_equal_51969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 839)
        assert_array_almost_equal_call_result_51974 = invoke(stypy.reporting.localization.Localization(__file__, 839, 12), assert_array_almost_equal_51969, *[res_51970, t_51972], **kwargs_51973)
        
        
        # Assigning a Call to a Name (line 841):
        
        # Assigning a Call to a Name (line 841):
        
        # Call to f(...): (line 841)
        # Processing the call keyword arguments (line 841)
        # Getting the type of 'self' (line 841)
        self_51976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 22), 'self', False)
        # Obtaining the member 'a' of a type (line 841)
        a_51977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 22), self_51976, 'a')
        # Obtaining the member 'T' of a type (line 841)
        T_51978 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 22), a_51977, 'T')
        keyword_51979 = T_51978
        # Getting the type of 'self' (line 841)
        self_51980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 34), 'self', False)
        # Obtaining the member 'b' of a type (line 841)
        b_51981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 34), self_51980, 'b')
        keyword_51982 = b_51981
        int_51983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 48), 'int')
        keyword_51984 = int_51983
        # Getting the type of 'self' (line 841)
        self_51985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 53), 'self', False)
        # Obtaining the member 'c' of a type (line 841)
        c_51986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 53), self_51985, 'c')
        keyword_51987 = c_51986
        float_51988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 67), 'float')
        keyword_51989 = float_51988
        float_51990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 76), 'float')
        keyword_51991 = float_51990
        kwargs_51992 = {'a': keyword_51979, 'lower': keyword_51984, 'b': keyword_51982, 'c': keyword_51987, 'beta': keyword_51991, 'alpha': keyword_51989}
        # Getting the type of 'f' (line 841)
        f_51975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 18), 'f', False)
        # Calling f(args, kwargs) (line 841)
        f_call_result_51993 = invoke(stypy.reporting.localization.Localization(__file__, 841, 18), f_51975, *[], **kwargs_51992)
        
        # Assigning a type to the variable 'res' (line 841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 12), 'res', f_call_result_51993)
        
        # Call to assert_array_almost_equal(...): (line 842)
        # Processing the call arguments (line 842)
        # Getting the type of 'res' (line 842)
        res_51995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 38), 'res', False)
        # Getting the type of 'self' (line 842)
        self_51996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 43), 'self', False)
        # Obtaining the member 't' of a type (line 842)
        t_51997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 43), self_51996, 't')
        # Processing the call keyword arguments (line 842)
        kwargs_51998 = {}
        # Getting the type of 'assert_array_almost_equal' (line 842)
        assert_array_almost_equal_51994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 842)
        assert_array_almost_equal_call_result_51999 = invoke(stypy.reporting.localization.Localization(__file__, 842, 12), assert_array_almost_equal_51994, *[res_51995, t_51997], **kwargs_51998)
        
        
        # Assigning a Call to a Name (line 844):
        
        # Assigning a Call to a Name (line 844):
        
        # Call to f(...): (line 844)
        # Processing the call keyword arguments (line 844)
        # Getting the type of 'self' (line 844)
        self_52001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 22), 'self', False)
        # Obtaining the member 'a' of a type (line 844)
        a_52002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 844, 22), self_52001, 'a')
        keyword_52003 = a_52002
        # Getting the type of 'self' (line 844)
        self_52004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 32), 'self', False)
        # Obtaining the member 'b' of a type (line 844)
        b_52005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 844, 32), self_52004, 'b')
        # Obtaining the member 'T' of a type (line 844)
        T_52006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 844, 32), b_52005, 'T')
        keyword_52007 = T_52006
        int_52008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 47), 'int')
        keyword_52009 = int_52008
        # Getting the type of 'self' (line 844)
        self_52010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 52), 'self', False)
        # Obtaining the member 'c' of a type (line 844)
        c_52011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 844, 52), self_52010, 'c')
        # Obtaining the member 'T' of a type (line 844)
        T_52012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 844, 52), c_52011, 'T')
        keyword_52013 = T_52012
        float_52014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 26), 'float')
        keyword_52015 = float_52014
        float_52016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 35), 'float')
        keyword_52017 = float_52016
        kwargs_52018 = {'a': keyword_52003, 'c': keyword_52013, 'b': keyword_52007, 'beta': keyword_52017, 'alpha': keyword_52015, 'side': keyword_52009}
        # Getting the type of 'f' (line 844)
        f_52000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 18), 'f', False)
        # Calling f(args, kwargs) (line 844)
        f_call_result_52019 = invoke(stypy.reporting.localization.Localization(__file__, 844, 18), f_52000, *[], **kwargs_52018)
        
        # Assigning a type to the variable 'res' (line 844)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 12), 'res', f_call_result_52019)
        
        # Call to assert_array_almost_equal(...): (line 846)
        # Processing the call arguments (line 846)
        # Getting the type of 'res' (line 846)
        res_52021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 38), 'res', False)
        # Getting the type of 'self' (line 846)
        self_52022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 43), 'self', False)
        # Obtaining the member 't' of a type (line 846)
        t_52023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 43), self_52022, 't')
        # Obtaining the member 'T' of a type (line 846)
        T_52024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 43), t_52023, 'T')
        # Processing the call keyword arguments (line 846)
        kwargs_52025 = {}
        # Getting the type of 'assert_array_almost_equal' (line 846)
        assert_array_almost_equal_52020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 846)
        assert_array_almost_equal_call_result_52026 = invoke(stypy.reporting.localization.Localization(__file__, 846, 12), assert_array_almost_equal_52020, *[res_52021, T_52024], **kwargs_52025)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_symm(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_symm' in the type store
        # Getting the type of 'stypy_return_type' (line 836)
        stypy_return_type_52027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52027)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_symm'
        return stypy_return_type_52027


    @norecursion
    def test_summ_wrong_side(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_summ_wrong_side'
        module_type_store = module_type_store.open_function_context('test_summ_wrong_side', 848, 4, False)
        # Assigning a type to the variable 'self' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Symm.test_summ_wrong_side')
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Symm.test_summ_wrong_side.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Symm.test_summ_wrong_side', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_summ_wrong_side', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_summ_wrong_side(...)' code ##################

        
        # Assigning a Call to a Name (line 849):
        
        # Assigning a Call to a Name (line 849):
        
        # Call to getattr(...): (line 849)
        # Processing the call arguments (line 849)
        # Getting the type of 'fblas' (line 849)
        fblas_52029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 20), 'fblas', False)
        str_52030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 27), 'str', 'dsymm')
        # Getting the type of 'None' (line 849)
        None_52031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 36), 'None', False)
        # Processing the call keyword arguments (line 849)
        kwargs_52032 = {}
        # Getting the type of 'getattr' (line 849)
        getattr_52028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'getattr', False)
        # Calling getattr(args, kwargs) (line 849)
        getattr_call_result_52033 = invoke(stypy.reporting.localization.Localization(__file__, 849, 12), getattr_52028, *[fblas_52029, str_52030, None_52031], **kwargs_52032)
        
        # Assigning a type to the variable 'f' (line 849)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 8), 'f', getattr_call_result_52033)
        
        # Type idiom detected: calculating its left and rigth part (line 850)
        # Getting the type of 'f' (line 850)
        f_52034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'f')
        # Getting the type of 'None' (line 850)
        None_52035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 20), 'None')
        
        (may_be_52036, more_types_in_union_52037) = may_not_be_none(f_52034, None_52035)

        if may_be_52036:

            if more_types_in_union_52037:
                # Runtime conditional SSA (line 850)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to assert_raises(...): (line 851)
            # Processing the call arguments (line 851)
            # Getting the type of 'Exception' (line 851)
            Exception_52039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 26), 'Exception', False)
            # Getting the type of 'f' (line 851)
            f_52040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 37), 'f', False)
            # Processing the call keyword arguments (line 851)
            
            # Obtaining an instance of the builtin type 'dict' (line 851)
            dict_52041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 851)
            # Adding element type (key, value) (line 851)
            str_52042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 43), 'str', 'a')
            # Getting the type of 'self' (line 851)
            self_52043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 48), 'self', False)
            # Obtaining the member 'a' of a type (line 851)
            a_52044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 48), self_52043, 'a')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 42), dict_52041, (str_52042, a_52044))
            # Adding element type (key, value) (line 851)
            str_52045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 56), 'str', 'b')
            # Getting the type of 'self' (line 851)
            self_52046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 61), 'self', False)
            # Obtaining the member 'b' of a type (line 851)
            b_52047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 61), self_52046, 'b')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 42), dict_52041, (str_52045, b_52047))
            # Adding element type (key, value) (line 851)
            str_52048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 43), 'str', 'alpha')
            int_52049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 52), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 42), dict_52041, (str_52048, int_52049))
            # Adding element type (key, value) (line 851)
            str_52050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 55), 'str', 'side')
            int_52051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 63), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 851, 42), dict_52041, (str_52050, int_52051))
            
            kwargs_52052 = {'dict_52041': dict_52041}
            # Getting the type of 'assert_raises' (line 851)
            assert_raises_52038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 12), 'assert_raises', False)
            # Calling assert_raises(args, kwargs) (line 851)
            assert_raises_call_result_52053 = invoke(stypy.reporting.localization.Localization(__file__, 851, 12), assert_raises_52038, *[Exception_52039, f_52040], **kwargs_52052)
            

            if more_types_in_union_52037:
                # SSA join for if statement (line 850)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'test_summ_wrong_side(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_summ_wrong_side' in the type store
        # Getting the type of 'stypy_return_type' (line 848)
        stypy_return_type_52054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52054)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_summ_wrong_side'
        return stypy_return_type_52054


    @norecursion
    def test_symm_wrong_uplo(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_symm_wrong_uplo'
        module_type_store = module_type_store.open_function_context('test_symm_wrong_uplo', 856, 4, False)
        # Assigning a type to the variable 'self' (line 857)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 857, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Symm.test_symm_wrong_uplo')
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Symm.test_symm_wrong_uplo.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Symm.test_symm_wrong_uplo', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_symm_wrong_uplo', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_symm_wrong_uplo(...)' code ##################

        str_52055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, (-1)), 'str', 'SYMM only considers the upper/lower part of A. Hence setting\n        wrong value for `lower` (default is lower=0, meaning upper triangle)\n        gives a wrong result.\n        ')
        
        # Assigning a Call to a Name (line 861):
        
        # Assigning a Call to a Name (line 861):
        
        # Call to getattr(...): (line 861)
        # Processing the call arguments (line 861)
        # Getting the type of 'fblas' (line 861)
        fblas_52057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 20), 'fblas', False)
        str_52058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 27), 'str', 'dsymm')
        # Getting the type of 'None' (line 861)
        None_52059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 36), 'None', False)
        # Processing the call keyword arguments (line 861)
        kwargs_52060 = {}
        # Getting the type of 'getattr' (line 861)
        getattr_52056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 12), 'getattr', False)
        # Calling getattr(args, kwargs) (line 861)
        getattr_call_result_52061 = invoke(stypy.reporting.localization.Localization(__file__, 861, 12), getattr_52056, *[fblas_52057, str_52058, None_52059], **kwargs_52060)
        
        # Assigning a type to the variable 'f' (line 861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 861, 8), 'f', getattr_call_result_52061)
        
        # Type idiom detected: calculating its left and rigth part (line 862)
        # Getting the type of 'f' (line 862)
        f_52062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 8), 'f')
        # Getting the type of 'None' (line 862)
        None_52063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 20), 'None')
        
        (may_be_52064, more_types_in_union_52065) = may_not_be_none(f_52062, None_52063)

        if may_be_52064:

            if more_types_in_union_52065:
                # Runtime conditional SSA (line 862)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 863):
            
            # Assigning a Call to a Name (line 863):
            
            # Call to f(...): (line 863)
            # Processing the call keyword arguments (line 863)
            # Getting the type of 'self' (line 863)
            self_52067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 22), 'self', False)
            # Obtaining the member 'a' of a type (line 863)
            a_52068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 22), self_52067, 'a')
            keyword_52069 = a_52068
            # Getting the type of 'self' (line 863)
            self_52070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 32), 'self', False)
            # Obtaining the member 'b' of a type (line 863)
            b_52071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 32), self_52070, 'b')
            keyword_52072 = b_52071
            # Getting the type of 'self' (line 863)
            self_52073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 42), 'self', False)
            # Obtaining the member 'c' of a type (line 863)
            c_52074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 42), self_52073, 'c')
            keyword_52075 = c_52074
            float_52076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 56), 'float')
            keyword_52077 = float_52076
            float_52078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 65), 'float')
            keyword_52079 = float_52078
            kwargs_52080 = {'a': keyword_52069, 'alpha': keyword_52077, 'c': keyword_52075, 'b': keyword_52072, 'beta': keyword_52079}
            # Getting the type of 'f' (line 863)
            f_52066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 18), 'f', False)
            # Calling f(args, kwargs) (line 863)
            f_call_result_52081 = invoke(stypy.reporting.localization.Localization(__file__, 863, 18), f_52066, *[], **kwargs_52080)
            
            # Assigning a type to the variable 'res' (line 863)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 12), 'res', f_call_result_52081)
            # Evaluating assert statement condition
            
            # Call to allclose(...): (line 864)
            # Processing the call arguments (line 864)
            # Getting the type of 'res' (line 864)
            res_52084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 31), 'res', False)
            # Getting the type of 'self' (line 864)
            self_52085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 36), 'self', False)
            # Obtaining the member 't' of a type (line 864)
            t_52086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 36), self_52085, 't')
            # Processing the call keyword arguments (line 864)
            kwargs_52087 = {}
            # Getting the type of 'np' (line 864)
            np_52082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 19), 'np', False)
            # Obtaining the member 'allclose' of a type (line 864)
            allclose_52083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 19), np_52082, 'allclose')
            # Calling allclose(args, kwargs) (line 864)
            allclose_call_result_52088 = invoke(stypy.reporting.localization.Localization(__file__, 864, 19), allclose_52083, *[res_52084, t_52086], **kwargs_52087)
            
            
            # Assigning a Call to a Name (line 866):
            
            # Assigning a Call to a Name (line 866):
            
            # Call to f(...): (line 866)
            # Processing the call keyword arguments (line 866)
            # Getting the type of 'self' (line 866)
            self_52090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 22), 'self', False)
            # Obtaining the member 'a' of a type (line 866)
            a_52091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 22), self_52090, 'a')
            keyword_52092 = a_52091
            # Getting the type of 'self' (line 866)
            self_52093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 32), 'self', False)
            # Obtaining the member 'b' of a type (line 866)
            b_52094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 32), self_52093, 'b')
            keyword_52095 = b_52094
            int_52096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 46), 'int')
            keyword_52097 = int_52096
            # Getting the type of 'self' (line 866)
            self_52098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 51), 'self', False)
            # Obtaining the member 'c' of a type (line 866)
            c_52099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 51), self_52098, 'c')
            keyword_52100 = c_52099
            float_52101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 65), 'float')
            keyword_52102 = float_52101
            float_52103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 74), 'float')
            keyword_52104 = float_52103
            kwargs_52105 = {'a': keyword_52092, 'lower': keyword_52097, 'b': keyword_52095, 'c': keyword_52100, 'beta': keyword_52104, 'alpha': keyword_52102}
            # Getting the type of 'f' (line 866)
            f_52089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 18), 'f', False)
            # Calling f(args, kwargs) (line 866)
            f_call_result_52106 = invoke(stypy.reporting.localization.Localization(__file__, 866, 18), f_52089, *[], **kwargs_52105)
            
            # Assigning a type to the variable 'res' (line 866)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 866, 12), 'res', f_call_result_52106)
            # Evaluating assert statement condition
            
            
            # Call to allclose(...): (line 867)
            # Processing the call arguments (line 867)
            # Getting the type of 'res' (line 867)
            res_52109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 35), 'res', False)
            # Getting the type of 'self' (line 867)
            self_52110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 40), 'self', False)
            # Obtaining the member 't' of a type (line 867)
            t_52111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 40), self_52110, 't')
            # Processing the call keyword arguments (line 867)
            kwargs_52112 = {}
            # Getting the type of 'np' (line 867)
            np_52107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 23), 'np', False)
            # Obtaining the member 'allclose' of a type (line 867)
            allclose_52108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 23), np_52107, 'allclose')
            # Calling allclose(args, kwargs) (line 867)
            allclose_call_result_52113 = invoke(stypy.reporting.localization.Localization(__file__, 867, 23), allclose_52108, *[res_52109, t_52111], **kwargs_52112)
            
            # Applying the 'not' unary operator (line 867)
            result_not__52114 = python_operator(stypy.reporting.localization.Localization(__file__, 867, 19), 'not', allclose_call_result_52113)
            

            if more_types_in_union_52065:
                # SSA join for if statement (line 862)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'test_symm_wrong_uplo(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_symm_wrong_uplo' in the type store
        # Getting the type of 'stypy_return_type' (line 856)
        stypy_return_type_52115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52115)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_symm_wrong_uplo'
        return stypy_return_type_52115


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 825, 0, False)
        # Assigning a type to the variable 'self' (line 826)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Symm.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestBLAS3Symm' (line 825)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 825, 0), 'TestBLAS3Symm', TestBLAS3Symm)
# Declaration of the 'TestBLAS3Syrk' class

class TestBLAS3Syrk(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 871, 4, False)
        # Assigning a type to the variable 'self' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Syrk.setup_method')
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Syrk.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Syrk.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Call to a Attribute (line 872):
        
        # Assigning a Call to a Attribute (line 872):
        
        # Call to array(...): (line 872)
        # Processing the call arguments (line 872)
        
        # Obtaining an instance of the builtin type 'list' (line 872)
        list_52118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 872)
        # Adding element type (line 872)
        
        # Obtaining an instance of the builtin type 'list' (line 872)
        list_52119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 872)
        # Adding element type (line 872)
        float_52120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 872, 27), list_52119, float_52120)
        # Adding element type (line 872)
        float_52121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 872, 27), list_52119, float_52121)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 872, 26), list_52118, list_52119)
        # Adding element type (line 872)
        
        # Obtaining an instance of the builtin type 'list' (line 873)
        list_52122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 873)
        # Adding element type (line 873)
        float_52123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 873, 27), list_52122, float_52123)
        # Adding element type (line 873)
        float_52124 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 873, 27), list_52122, float_52124)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 872, 26), list_52118, list_52122)
        # Adding element type (line 872)
        
        # Obtaining an instance of the builtin type 'list' (line 874)
        list_52125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 874)
        # Adding element type (line 874)
        float_52126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 874, 27), list_52125, float_52126)
        # Adding element type (line 874)
        float_52127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 874, 27), list_52125, float_52127)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 872, 26), list_52118, list_52125)
        
        # Processing the call keyword arguments (line 872)
        kwargs_52128 = {}
        # Getting the type of 'np' (line 872)
        np_52116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 872)
        array_52117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 17), np_52116, 'array')
        # Calling array(args, kwargs) (line 872)
        array_call_result_52129 = invoke(stypy.reporting.localization.Localization(__file__, 872, 17), array_52117, *[list_52118], **kwargs_52128)
        
        # Getting the type of 'self' (line 872)
        self_52130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 8), 'self')
        # Setting the type of the member 'a' of a type (line 872)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 8), self_52130, 'a', array_call_result_52129)
        
        # Assigning a Call to a Attribute (line 875):
        
        # Assigning a Call to a Attribute (line 875):
        
        # Call to array(...): (line 875)
        # Processing the call arguments (line 875)
        
        # Obtaining an instance of the builtin type 'list' (line 875)
        list_52133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 875)
        # Adding element type (line 875)
        
        # Obtaining an instance of the builtin type 'list' (line 875)
        list_52134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 875)
        # Adding element type (line 875)
        float_52135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 875, 27), list_52134, float_52135)
        # Adding element type (line 875)
        float_52136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 875, 27), list_52134, float_52136)
        # Adding element type (line 875)
        float_52137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 875, 27), list_52134, float_52137)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 875, 26), list_52133, list_52134)
        # Adding element type (line 875)
        
        # Obtaining an instance of the builtin type 'list' (line 876)
        list_52138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 876)
        # Adding element type (line 876)
        float_52139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 876, 27), list_52138, float_52139)
        # Adding element type (line 876)
        float_52140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 876, 27), list_52138, float_52140)
        # Adding element type (line 876)
        float_52141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 876, 27), list_52138, float_52141)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 875, 26), list_52133, list_52138)
        # Adding element type (line 875)
        
        # Obtaining an instance of the builtin type 'list' (line 877)
        list_52142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 877)
        # Adding element type (line 877)
        float_52143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 877, 27), list_52142, float_52143)
        # Adding element type (line 877)
        float_52144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 877, 27), list_52142, float_52144)
        # Adding element type (line 877)
        float_52145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 877, 27), list_52142, float_52145)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 875, 26), list_52133, list_52142)
        
        # Processing the call keyword arguments (line 875)
        kwargs_52146 = {}
        # Getting the type of 'np' (line 875)
        np_52131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 875)
        array_52132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 17), np_52131, 'array')
        # Calling array(args, kwargs) (line 875)
        array_call_result_52147 = invoke(stypy.reporting.localization.Localization(__file__, 875, 17), array_52132, *[list_52133], **kwargs_52146)
        
        # Getting the type of 'self' (line 875)
        self_52148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 8), 'self')
        # Setting the type of the member 't' of a type (line 875)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 8), self_52148, 't', array_call_result_52147)
        
        # Assigning a Call to a Attribute (line 878):
        
        # Assigning a Call to a Attribute (line 878):
        
        # Call to array(...): (line 878)
        # Processing the call arguments (line 878)
        
        # Obtaining an instance of the builtin type 'list' (line 878)
        list_52151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 878, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 878)
        # Adding element type (line 878)
        
        # Obtaining an instance of the builtin type 'list' (line 878)
        list_52152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 878, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 878)
        # Adding element type (line 878)
        float_52153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 878, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 878, 28), list_52152, float_52153)
        # Adding element type (line 878)
        float_52154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 878, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 878, 28), list_52152, float_52154)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 878, 27), list_52151, list_52152)
        # Adding element type (line 878)
        
        # Obtaining an instance of the builtin type 'list' (line 879)
        list_52155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 879)
        # Adding element type (line 879)
        float_52156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 879, 28), list_52155, float_52156)
        # Adding element type (line 879)
        float_52157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 879, 28), list_52155, float_52157)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 878, 27), list_52151, list_52155)
        
        # Processing the call keyword arguments (line 878)
        kwargs_52158 = {}
        # Getting the type of 'np' (line 878)
        np_52149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 18), 'np', False)
        # Obtaining the member 'array' of a type (line 878)
        array_52150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 878, 18), np_52149, 'array')
        # Calling array(args, kwargs) (line 878)
        array_call_result_52159 = invoke(stypy.reporting.localization.Localization(__file__, 878, 18), array_52150, *[list_52151], **kwargs_52158)
        
        # Getting the type of 'self' (line 878)
        self_52160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 8), 'self')
        # Setting the type of the member 'tt' of a type (line 878)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 878, 8), self_52160, 'tt', array_call_result_52159)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 871)
        stypy_return_type_52161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52161)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_52161


    @norecursion
    def test_syrk(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_syrk'
        module_type_store = module_type_store.open_function_context('test_syrk', 881, 4, False)
        # Assigning a type to the variable 'self' (line 882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 882, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Syrk.test_syrk')
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Syrk.test_syrk.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Syrk.test_syrk', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_syrk', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_syrk(...)' code ##################

        
        
        # Call to _get_func(...): (line 882)
        # Processing the call arguments (line 882)
        str_52163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 27), 'str', 'syrk')
        # Processing the call keyword arguments (line 882)
        kwargs_52164 = {}
        # Getting the type of '_get_func' (line 882)
        _get_func_52162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 17), '_get_func', False)
        # Calling _get_func(args, kwargs) (line 882)
        _get_func_call_result_52165 = invoke(stypy.reporting.localization.Localization(__file__, 882, 17), _get_func_52162, *[str_52163], **kwargs_52164)
        
        # Testing the type of a for loop iterable (line 882)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 882, 8), _get_func_call_result_52165)
        # Getting the type of the for loop variable (line 882)
        for_loop_var_52166 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 882, 8), _get_func_call_result_52165)
        # Assigning a type to the variable 'f' (line 882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 882, 8), 'f', for_loop_var_52166)
        # SSA begins for a for statement (line 882)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 883):
        
        # Assigning a Call to a Name (line 883):
        
        # Call to f(...): (line 883)
        # Processing the call keyword arguments (line 883)
        # Getting the type of 'self' (line 883)
        self_52168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 20), 'self', False)
        # Obtaining the member 'a' of a type (line 883)
        a_52169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 20), self_52168, 'a')
        keyword_52170 = a_52169
        float_52171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 883, 34), 'float')
        keyword_52172 = float_52171
        kwargs_52173 = {'a': keyword_52170, 'alpha': keyword_52172}
        # Getting the type of 'f' (line 883)
        f_52167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 16), 'f', False)
        # Calling f(args, kwargs) (line 883)
        f_call_result_52174 = invoke(stypy.reporting.localization.Localization(__file__, 883, 16), f_52167, *[], **kwargs_52173)
        
        # Assigning a type to the variable 'c' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 12), 'c', f_call_result_52174)
        
        # Call to assert_array_almost_equal(...): (line 884)
        # Processing the call arguments (line 884)
        
        # Call to triu(...): (line 884)
        # Processing the call arguments (line 884)
        # Getting the type of 'c' (line 884)
        c_52178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 46), 'c', False)
        # Processing the call keyword arguments (line 884)
        kwargs_52179 = {}
        # Getting the type of 'np' (line 884)
        np_52176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 884)
        triu_52177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 38), np_52176, 'triu')
        # Calling triu(args, kwargs) (line 884)
        triu_call_result_52180 = invoke(stypy.reporting.localization.Localization(__file__, 884, 38), triu_52177, *[c_52178], **kwargs_52179)
        
        
        # Call to triu(...): (line 884)
        # Processing the call arguments (line 884)
        # Getting the type of 'self' (line 884)
        self_52183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 58), 'self', False)
        # Obtaining the member 't' of a type (line 884)
        t_52184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 58), self_52183, 't')
        # Processing the call keyword arguments (line 884)
        kwargs_52185 = {}
        # Getting the type of 'np' (line 884)
        np_52181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 50), 'np', False)
        # Obtaining the member 'triu' of a type (line 884)
        triu_52182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 50), np_52181, 'triu')
        # Calling triu(args, kwargs) (line 884)
        triu_call_result_52186 = invoke(stypy.reporting.localization.Localization(__file__, 884, 50), triu_52182, *[t_52184], **kwargs_52185)
        
        # Processing the call keyword arguments (line 884)
        kwargs_52187 = {}
        # Getting the type of 'assert_array_almost_equal' (line 884)
        assert_array_almost_equal_52175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 884)
        assert_array_almost_equal_call_result_52188 = invoke(stypy.reporting.localization.Localization(__file__, 884, 12), assert_array_almost_equal_52175, *[triu_call_result_52180, triu_call_result_52186], **kwargs_52187)
        
        
        # Assigning a Call to a Name (line 886):
        
        # Assigning a Call to a Name (line 886):
        
        # Call to f(...): (line 886)
        # Processing the call keyword arguments (line 886)
        # Getting the type of 'self' (line 886)
        self_52190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 20), 'self', False)
        # Obtaining the member 'a' of a type (line 886)
        a_52191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 20), self_52190, 'a')
        keyword_52192 = a_52191
        float_52193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 34), 'float')
        keyword_52194 = float_52193
        int_52195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 44), 'int')
        keyword_52196 = int_52195
        kwargs_52197 = {'a': keyword_52192, 'alpha': keyword_52194, 'lower': keyword_52196}
        # Getting the type of 'f' (line 886)
        f_52189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 16), 'f', False)
        # Calling f(args, kwargs) (line 886)
        f_call_result_52198 = invoke(stypy.reporting.localization.Localization(__file__, 886, 16), f_52189, *[], **kwargs_52197)
        
        # Assigning a type to the variable 'c' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 12), 'c', f_call_result_52198)
        
        # Call to assert_array_almost_equal(...): (line 887)
        # Processing the call arguments (line 887)
        
        # Call to tril(...): (line 887)
        # Processing the call arguments (line 887)
        # Getting the type of 'c' (line 887)
        c_52202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 46), 'c', False)
        # Processing the call keyword arguments (line 887)
        kwargs_52203 = {}
        # Getting the type of 'np' (line 887)
        np_52200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 38), 'np', False)
        # Obtaining the member 'tril' of a type (line 887)
        tril_52201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 38), np_52200, 'tril')
        # Calling tril(args, kwargs) (line 887)
        tril_call_result_52204 = invoke(stypy.reporting.localization.Localization(__file__, 887, 38), tril_52201, *[c_52202], **kwargs_52203)
        
        
        # Call to tril(...): (line 887)
        # Processing the call arguments (line 887)
        # Getting the type of 'self' (line 887)
        self_52207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 58), 'self', False)
        # Obtaining the member 't' of a type (line 887)
        t_52208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 58), self_52207, 't')
        # Processing the call keyword arguments (line 887)
        kwargs_52209 = {}
        # Getting the type of 'np' (line 887)
        np_52205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 50), 'np', False)
        # Obtaining the member 'tril' of a type (line 887)
        tril_52206 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 50), np_52205, 'tril')
        # Calling tril(args, kwargs) (line 887)
        tril_call_result_52210 = invoke(stypy.reporting.localization.Localization(__file__, 887, 50), tril_52206, *[t_52208], **kwargs_52209)
        
        # Processing the call keyword arguments (line 887)
        kwargs_52211 = {}
        # Getting the type of 'assert_array_almost_equal' (line 887)
        assert_array_almost_equal_52199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 887)
        assert_array_almost_equal_call_result_52212 = invoke(stypy.reporting.localization.Localization(__file__, 887, 12), assert_array_almost_equal_52199, *[tril_call_result_52204, tril_call_result_52210], **kwargs_52211)
        
        
        # Assigning a Call to a Name (line 889):
        
        # Assigning a Call to a Name (line 889):
        
        # Call to ones(...): (line 889)
        # Processing the call arguments (line 889)
        # Getting the type of 'self' (line 889)
        self_52215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 25), 'self', False)
        # Obtaining the member 't' of a type (line 889)
        t_52216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 25), self_52215, 't')
        # Obtaining the member 'shape' of a type (line 889)
        shape_52217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 25), t_52216, 'shape')
        # Processing the call keyword arguments (line 889)
        kwargs_52218 = {}
        # Getting the type of 'np' (line 889)
        np_52213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 17), 'np', False)
        # Obtaining the member 'ones' of a type (line 889)
        ones_52214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 17), np_52213, 'ones')
        # Calling ones(args, kwargs) (line 889)
        ones_call_result_52219 = invoke(stypy.reporting.localization.Localization(__file__, 889, 17), ones_52214, *[shape_52217], **kwargs_52218)
        
        # Assigning a type to the variable 'c0' (line 889)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 12), 'c0', ones_call_result_52219)
        
        # Assigning a Call to a Name (line 890):
        
        # Assigning a Call to a Name (line 890):
        
        # Call to f(...): (line 890)
        # Processing the call keyword arguments (line 890)
        # Getting the type of 'self' (line 890)
        self_52221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 20), 'self', False)
        # Obtaining the member 'a' of a type (line 890)
        a_52222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 890, 20), self_52221, 'a')
        keyword_52223 = a_52222
        float_52224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 34), 'float')
        keyword_52225 = float_52224
        float_52226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 43), 'float')
        keyword_52227 = float_52226
        # Getting the type of 'c0' (line 890)
        c0_52228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 49), 'c0', False)
        keyword_52229 = c0_52228
        kwargs_52230 = {'a': keyword_52223, 'alpha': keyword_52225, 'beta': keyword_52227, 'c': keyword_52229}
        # Getting the type of 'f' (line 890)
        f_52220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 16), 'f', False)
        # Calling f(args, kwargs) (line 890)
        f_call_result_52231 = invoke(stypy.reporting.localization.Localization(__file__, 890, 16), f_52220, *[], **kwargs_52230)
        
        # Assigning a type to the variable 'c' (line 890)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 890, 12), 'c', f_call_result_52231)
        
        # Call to assert_array_almost_equal(...): (line 891)
        # Processing the call arguments (line 891)
        
        # Call to triu(...): (line 891)
        # Processing the call arguments (line 891)
        # Getting the type of 'c' (line 891)
        c_52235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 46), 'c', False)
        # Processing the call keyword arguments (line 891)
        kwargs_52236 = {}
        # Getting the type of 'np' (line 891)
        np_52233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 891)
        triu_52234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 38), np_52233, 'triu')
        # Calling triu(args, kwargs) (line 891)
        triu_call_result_52237 = invoke(stypy.reporting.localization.Localization(__file__, 891, 38), triu_52234, *[c_52235], **kwargs_52236)
        
        
        # Call to triu(...): (line 891)
        # Processing the call arguments (line 891)
        # Getting the type of 'self' (line 891)
        self_52240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 58), 'self', False)
        # Obtaining the member 't' of a type (line 891)
        t_52241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 58), self_52240, 't')
        # Getting the type of 'c0' (line 891)
        c0_52242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 65), 'c0', False)
        # Applying the binary operator '+' (line 891)
        result_add_52243 = python_operator(stypy.reporting.localization.Localization(__file__, 891, 58), '+', t_52241, c0_52242)
        
        # Processing the call keyword arguments (line 891)
        kwargs_52244 = {}
        # Getting the type of 'np' (line 891)
        np_52238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 50), 'np', False)
        # Obtaining the member 'triu' of a type (line 891)
        triu_52239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 50), np_52238, 'triu')
        # Calling triu(args, kwargs) (line 891)
        triu_call_result_52245 = invoke(stypy.reporting.localization.Localization(__file__, 891, 50), triu_52239, *[result_add_52243], **kwargs_52244)
        
        # Processing the call keyword arguments (line 891)
        kwargs_52246 = {}
        # Getting the type of 'assert_array_almost_equal' (line 891)
        assert_array_almost_equal_52232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 891)
        assert_array_almost_equal_call_result_52247 = invoke(stypy.reporting.localization.Localization(__file__, 891, 12), assert_array_almost_equal_52232, *[triu_call_result_52237, triu_call_result_52245], **kwargs_52246)
        
        
        # Assigning a Call to a Name (line 893):
        
        # Assigning a Call to a Name (line 893):
        
        # Call to f(...): (line 893)
        # Processing the call keyword arguments (line 893)
        # Getting the type of 'self' (line 893)
        self_52249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 20), 'self', False)
        # Obtaining the member 'a' of a type (line 893)
        a_52250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 20), self_52249, 'a')
        keyword_52251 = a_52250
        float_52252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 34), 'float')
        keyword_52253 = float_52252
        int_52254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 44), 'int')
        keyword_52255 = int_52254
        kwargs_52256 = {'a': keyword_52251, 'alpha': keyword_52253, 'trans': keyword_52255}
        # Getting the type of 'f' (line 893)
        f_52248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 16), 'f', False)
        # Calling f(args, kwargs) (line 893)
        f_call_result_52257 = invoke(stypy.reporting.localization.Localization(__file__, 893, 16), f_52248, *[], **kwargs_52256)
        
        # Assigning a type to the variable 'c' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 12), 'c', f_call_result_52257)
        
        # Call to assert_array_almost_equal(...): (line 894)
        # Processing the call arguments (line 894)
        
        # Call to triu(...): (line 894)
        # Processing the call arguments (line 894)
        # Getting the type of 'c' (line 894)
        c_52261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 46), 'c', False)
        # Processing the call keyword arguments (line 894)
        kwargs_52262 = {}
        # Getting the type of 'np' (line 894)
        np_52259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 894)
        triu_52260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 894, 38), np_52259, 'triu')
        # Calling triu(args, kwargs) (line 894)
        triu_call_result_52263 = invoke(stypy.reporting.localization.Localization(__file__, 894, 38), triu_52260, *[c_52261], **kwargs_52262)
        
        
        # Call to triu(...): (line 894)
        # Processing the call arguments (line 894)
        # Getting the type of 'self' (line 894)
        self_52266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 58), 'self', False)
        # Obtaining the member 'tt' of a type (line 894)
        tt_52267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 894, 58), self_52266, 'tt')
        # Processing the call keyword arguments (line 894)
        kwargs_52268 = {}
        # Getting the type of 'np' (line 894)
        np_52264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 50), 'np', False)
        # Obtaining the member 'triu' of a type (line 894)
        triu_52265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 894, 50), np_52264, 'triu')
        # Calling triu(args, kwargs) (line 894)
        triu_call_result_52269 = invoke(stypy.reporting.localization.Localization(__file__, 894, 50), triu_52265, *[tt_52267], **kwargs_52268)
        
        # Processing the call keyword arguments (line 894)
        kwargs_52270 = {}
        # Getting the type of 'assert_array_almost_equal' (line 894)
        assert_array_almost_equal_52258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 894)
        assert_array_almost_equal_call_result_52271 = invoke(stypy.reporting.localization.Localization(__file__, 894, 12), assert_array_almost_equal_52258, *[triu_call_result_52263, triu_call_result_52269], **kwargs_52270)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_syrk(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_syrk' in the type store
        # Getting the type of 'stypy_return_type' (line 881)
        stypy_return_type_52272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52272)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_syrk'
        return stypy_return_type_52272


    @norecursion
    def test_syrk_wrong_c(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_syrk_wrong_c'
        module_type_store = module_type_store.open_function_context('test_syrk_wrong_c', 899, 4, False)
        # Assigning a type to the variable 'self' (line 900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 900, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Syrk.test_syrk_wrong_c')
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Syrk.test_syrk_wrong_c.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Syrk.test_syrk_wrong_c', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_syrk_wrong_c', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_syrk_wrong_c(...)' code ##################

        
        # Assigning a Call to a Name (line 900):
        
        # Assigning a Call to a Name (line 900):
        
        # Call to getattr(...): (line 900)
        # Processing the call arguments (line 900)
        # Getting the type of 'fblas' (line 900)
        fblas_52274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 20), 'fblas', False)
        str_52275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 27), 'str', 'dsyrk')
        # Getting the type of 'None' (line 900)
        None_52276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 36), 'None', False)
        # Processing the call keyword arguments (line 900)
        kwargs_52277 = {}
        # Getting the type of 'getattr' (line 900)
        getattr_52273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 12), 'getattr', False)
        # Calling getattr(args, kwargs) (line 900)
        getattr_call_result_52278 = invoke(stypy.reporting.localization.Localization(__file__, 900, 12), getattr_52273, *[fblas_52274, str_52275, None_52276], **kwargs_52277)
        
        # Assigning a type to the variable 'f' (line 900)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 900, 8), 'f', getattr_call_result_52278)
        
        # Type idiom detected: calculating its left and rigth part (line 901)
        # Getting the type of 'f' (line 901)
        f_52279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'f')
        # Getting the type of 'None' (line 901)
        None_52280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 20), 'None')
        
        (may_be_52281, more_types_in_union_52282) = may_not_be_none(f_52279, None_52280)

        if may_be_52281:

            if more_types_in_union_52282:
                # Runtime conditional SSA (line 901)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to assert_raises(...): (line 902)
            # Processing the call arguments (line 902)
            # Getting the type of 'Exception' (line 902)
            Exception_52284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 26), 'Exception', False)
            # Getting the type of 'f' (line 902)
            f_52285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 37), 'f', False)
            # Processing the call keyword arguments (line 902)
            
            # Obtaining an instance of the builtin type 'dict' (line 902)
            dict_52286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 902)
            # Adding element type (key, value) (line 902)
            str_52287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 43), 'str', 'a')
            # Getting the type of 'self' (line 902)
            self_52288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 48), 'self', False)
            # Obtaining the member 'a' of a type (line 902)
            a_52289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 902, 48), self_52288, 'a')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 42), dict_52286, (str_52287, a_52289))
            # Adding element type (key, value) (line 902)
            str_52290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 56), 'str', 'alpha')
            float_52291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 65), 'float')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 42), dict_52286, (str_52290, float_52291))
            # Adding element type (key, value) (line 902)
            str_52292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 43), 'str', 'c')
            
            # Call to ones(...): (line 903)
            # Processing the call arguments (line 903)
            
            # Obtaining an instance of the builtin type 'tuple' (line 903)
            tuple_52295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 57), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 903)
            # Adding element type (line 903)
            int_52296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 57), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 57), tuple_52295, int_52296)
            # Adding element type (line 903)
            int_52297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 60), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 57), tuple_52295, int_52297)
            
            # Processing the call keyword arguments (line 903)
            kwargs_52298 = {}
            # Getting the type of 'np' (line 903)
            np_52293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 48), 'np', False)
            # Obtaining the member 'ones' of a type (line 903)
            ones_52294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 903, 48), np_52293, 'ones')
            # Calling ones(args, kwargs) (line 903)
            ones_call_result_52299 = invoke(stypy.reporting.localization.Localization(__file__, 903, 48), ones_52294, *[tuple_52295], **kwargs_52298)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 42), dict_52286, (str_52292, ones_call_result_52299))
            
            kwargs_52300 = {'dict_52286': dict_52286}
            # Getting the type of 'assert_raises' (line 902)
            assert_raises_52283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 12), 'assert_raises', False)
            # Calling assert_raises(args, kwargs) (line 902)
            assert_raises_call_result_52301 = invoke(stypy.reporting.localization.Localization(__file__, 902, 12), assert_raises_52283, *[Exception_52284, f_52285], **kwargs_52300)
            

            if more_types_in_union_52282:
                # SSA join for if statement (line 901)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'test_syrk_wrong_c(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_syrk_wrong_c' in the type store
        # Getting the type of 'stypy_return_type' (line 899)
        stypy_return_type_52302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52302)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_syrk_wrong_c'
        return stypy_return_type_52302


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 870, 0, False)
        # Assigning a type to the variable 'self' (line 871)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Syrk.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestBLAS3Syrk' (line 870)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 870, 0), 'TestBLAS3Syrk', TestBLAS3Syrk)
# Declaration of the 'TestBLAS3Syr2k' class

class TestBLAS3Syr2k(object, ):

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 908, 4, False)
        # Assigning a type to the variable 'self' (line 909)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 909, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Syr2k.setup_method')
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Syr2k.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Syr2k.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Call to a Attribute (line 909):
        
        # Assigning a Call to a Attribute (line 909):
        
        # Call to array(...): (line 909)
        # Processing the call arguments (line 909)
        
        # Obtaining an instance of the builtin type 'list' (line 909)
        list_52305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 909)
        # Adding element type (line 909)
        
        # Obtaining an instance of the builtin type 'list' (line 909)
        list_52306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 909)
        # Adding element type (line 909)
        float_52307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 909, 27), list_52306, float_52307)
        # Adding element type (line 909)
        float_52308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 909, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 909, 27), list_52306, float_52308)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 909, 26), list_52305, list_52306)
        # Adding element type (line 909)
        
        # Obtaining an instance of the builtin type 'list' (line 910)
        list_52309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 910)
        # Adding element type (line 910)
        float_52310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 910, 27), list_52309, float_52310)
        # Adding element type (line 910)
        float_52311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 910, 27), list_52309, float_52311)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 909, 26), list_52305, list_52309)
        # Adding element type (line 909)
        
        # Obtaining an instance of the builtin type 'list' (line 911)
        list_52312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 911, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 911)
        # Adding element type (line 911)
        float_52313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 911, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 911, 27), list_52312, float_52313)
        # Adding element type (line 911)
        float_52314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 911, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 911, 27), list_52312, float_52314)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 909, 26), list_52305, list_52312)
        
        # Processing the call keyword arguments (line 909)
        kwargs_52315 = {}
        # Getting the type of 'np' (line 909)
        np_52303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 909)
        array_52304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 909, 17), np_52303, 'array')
        # Calling array(args, kwargs) (line 909)
        array_call_result_52316 = invoke(stypy.reporting.localization.Localization(__file__, 909, 17), array_52304, *[list_52305], **kwargs_52315)
        
        # Getting the type of 'self' (line 909)
        self_52317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 8), 'self')
        # Setting the type of the member 'a' of a type (line 909)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 909, 8), self_52317, 'a', array_call_result_52316)
        
        # Assigning a Call to a Attribute (line 912):
        
        # Assigning a Call to a Attribute (line 912):
        
        # Call to array(...): (line 912)
        # Processing the call arguments (line 912)
        
        # Obtaining an instance of the builtin type 'list' (line 912)
        list_52320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 912)
        # Adding element type (line 912)
        
        # Obtaining an instance of the builtin type 'list' (line 912)
        list_52321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 912)
        # Adding element type (line 912)
        float_52322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 27), list_52321, float_52322)
        # Adding element type (line 912)
        float_52323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 27), list_52321, float_52323)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 26), list_52320, list_52321)
        # Adding element type (line 912)
        
        # Obtaining an instance of the builtin type 'list' (line 913)
        list_52324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 913)
        # Adding element type (line 913)
        float_52325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 913, 27), list_52324, float_52325)
        # Adding element type (line 913)
        float_52326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 913, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 913, 27), list_52324, float_52326)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 26), list_52320, list_52324)
        # Adding element type (line 912)
        
        # Obtaining an instance of the builtin type 'list' (line 914)
        list_52327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 914)
        # Adding element type (line 914)
        int_52328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 914, 27), list_52327, int_52328)
        # Adding element type (line 914)
        float_52329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 914, 27), list_52327, float_52329)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 26), list_52320, list_52327)
        
        # Processing the call keyword arguments (line 912)
        kwargs_52330 = {}
        # Getting the type of 'np' (line 912)
        np_52318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 912)
        array_52319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 17), np_52318, 'array')
        # Calling array(args, kwargs) (line 912)
        array_call_result_52331 = invoke(stypy.reporting.localization.Localization(__file__, 912, 17), array_52319, *[list_52320], **kwargs_52330)
        
        # Getting the type of 'self' (line 912)
        self_52332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'self')
        # Setting the type of the member 'b' of a type (line 912)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 8), self_52332, 'b', array_call_result_52331)
        
        # Assigning a Call to a Attribute (line 915):
        
        # Assigning a Call to a Attribute (line 915):
        
        # Call to array(...): (line 915)
        # Processing the call arguments (line 915)
        
        # Obtaining an instance of the builtin type 'list' (line 915)
        list_52335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 915)
        # Adding element type (line 915)
        
        # Obtaining an instance of the builtin type 'list' (line 915)
        list_52336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 915)
        # Adding element type (line 915)
        float_52337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 27), list_52336, float_52337)
        # Adding element type (line 915)
        float_52338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 27), list_52336, float_52338)
        # Adding element type (line 915)
        float_52339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 27), list_52336, float_52339)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 26), list_52335, list_52336)
        # Adding element type (line 915)
        
        # Obtaining an instance of the builtin type 'list' (line 916)
        list_52340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 916)
        # Adding element type (line 916)
        float_52341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 916, 27), list_52340, float_52341)
        # Adding element type (line 916)
        float_52342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 916, 27), list_52340, float_52342)
        # Adding element type (line 916)
        float_52343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 916, 27), list_52340, float_52343)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 26), list_52335, list_52340)
        # Adding element type (line 915)
        
        # Obtaining an instance of the builtin type 'list' (line 917)
        list_52344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 917)
        # Adding element type (line 917)
        float_52345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 917, 27), list_52344, float_52345)
        # Adding element type (line 917)
        float_52346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 917, 27), list_52344, float_52346)
        # Adding element type (line 917)
        float_52347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 917, 27), list_52344, float_52347)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 26), list_52335, list_52344)
        
        # Processing the call keyword arguments (line 915)
        kwargs_52348 = {}
        # Getting the type of 'np' (line 915)
        np_52333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 915)
        array_52334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 915, 17), np_52333, 'array')
        # Calling array(args, kwargs) (line 915)
        array_call_result_52349 = invoke(stypy.reporting.localization.Localization(__file__, 915, 17), array_52334, *[list_52335], **kwargs_52348)
        
        # Getting the type of 'self' (line 915)
        self_52350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 8), 'self')
        # Setting the type of the member 't' of a type (line 915)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 915, 8), self_52350, 't', array_call_result_52349)
        
        # Assigning a Call to a Attribute (line 918):
        
        # Assigning a Call to a Attribute (line 918):
        
        # Call to array(...): (line 918)
        # Processing the call arguments (line 918)
        
        # Obtaining an instance of the builtin type 'list' (line 918)
        list_52353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 918)
        # Adding element type (line 918)
        
        # Obtaining an instance of the builtin type 'list' (line 918)
        list_52354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 918)
        # Adding element type (line 918)
        float_52355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 28), list_52354, float_52355)
        # Adding element type (line 918)
        float_52356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 28), list_52354, float_52356)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 27), list_52353, list_52354)
        # Adding element type (line 918)
        
        # Obtaining an instance of the builtin type 'list' (line 919)
        list_52357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 919)
        # Adding element type (line 919)
        float_52358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 919, 28), list_52357, float_52358)
        # Adding element type (line 919)
        int_52359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 919, 28), list_52357, int_52359)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 27), list_52353, list_52357)
        
        # Processing the call keyword arguments (line 918)
        kwargs_52360 = {}
        # Getting the type of 'np' (line 918)
        np_52351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 18), 'np', False)
        # Obtaining the member 'array' of a type (line 918)
        array_52352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 18), np_52351, 'array')
        # Calling array(args, kwargs) (line 918)
        array_call_result_52361 = invoke(stypy.reporting.localization.Localization(__file__, 918, 18), array_52352, *[list_52353], **kwargs_52360)
        
        # Getting the type of 'self' (line 918)
        self_52362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 8), 'self')
        # Setting the type of the member 'tt' of a type (line 918)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 8), self_52362, 'tt', array_call_result_52361)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 908)
        stypy_return_type_52363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52363)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_52363


    @norecursion
    def test_syr2k(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_syr2k'
        module_type_store = module_type_store.open_function_context('test_syr2k', 921, 4, False)
        # Assigning a type to the variable 'self' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Syr2k.test_syr2k')
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Syr2k.test_syr2k.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Syr2k.test_syr2k', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_syr2k', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_syr2k(...)' code ##################

        
        
        # Call to _get_func(...): (line 922)
        # Processing the call arguments (line 922)
        str_52365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 922, 27), 'str', 'syr2k')
        # Processing the call keyword arguments (line 922)
        kwargs_52366 = {}
        # Getting the type of '_get_func' (line 922)
        _get_func_52364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 17), '_get_func', False)
        # Calling _get_func(args, kwargs) (line 922)
        _get_func_call_result_52367 = invoke(stypy.reporting.localization.Localization(__file__, 922, 17), _get_func_52364, *[str_52365], **kwargs_52366)
        
        # Testing the type of a for loop iterable (line 922)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 922, 8), _get_func_call_result_52367)
        # Getting the type of the for loop variable (line 922)
        for_loop_var_52368 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 922, 8), _get_func_call_result_52367)
        # Assigning a type to the variable 'f' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'f', for_loop_var_52368)
        # SSA begins for a for statement (line 922)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 923):
        
        # Assigning a Call to a Name (line 923):
        
        # Call to f(...): (line 923)
        # Processing the call keyword arguments (line 923)
        # Getting the type of 'self' (line 923)
        self_52370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 20), 'self', False)
        # Obtaining the member 'a' of a type (line 923)
        a_52371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 923, 20), self_52370, 'a')
        keyword_52372 = a_52371
        # Getting the type of 'self' (line 923)
        self_52373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 30), 'self', False)
        # Obtaining the member 'b' of a type (line 923)
        b_52374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 923, 30), self_52373, 'b')
        keyword_52375 = b_52374
        float_52376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 923, 44), 'float')
        keyword_52377 = float_52376
        kwargs_52378 = {'a': keyword_52372, 'alpha': keyword_52377, 'b': keyword_52375}
        # Getting the type of 'f' (line 923)
        f_52369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 16), 'f', False)
        # Calling f(args, kwargs) (line 923)
        f_call_result_52379 = invoke(stypy.reporting.localization.Localization(__file__, 923, 16), f_52369, *[], **kwargs_52378)
        
        # Assigning a type to the variable 'c' (line 923)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 923, 12), 'c', f_call_result_52379)
        
        # Call to assert_array_almost_equal(...): (line 924)
        # Processing the call arguments (line 924)
        
        # Call to triu(...): (line 924)
        # Processing the call arguments (line 924)
        # Getting the type of 'c' (line 924)
        c_52383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 46), 'c', False)
        # Processing the call keyword arguments (line 924)
        kwargs_52384 = {}
        # Getting the type of 'np' (line 924)
        np_52381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 924)
        triu_52382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 38), np_52381, 'triu')
        # Calling triu(args, kwargs) (line 924)
        triu_call_result_52385 = invoke(stypy.reporting.localization.Localization(__file__, 924, 38), triu_52382, *[c_52383], **kwargs_52384)
        
        
        # Call to triu(...): (line 924)
        # Processing the call arguments (line 924)
        # Getting the type of 'self' (line 924)
        self_52388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 58), 'self', False)
        # Obtaining the member 't' of a type (line 924)
        t_52389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 58), self_52388, 't')
        # Processing the call keyword arguments (line 924)
        kwargs_52390 = {}
        # Getting the type of 'np' (line 924)
        np_52386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 50), 'np', False)
        # Obtaining the member 'triu' of a type (line 924)
        triu_52387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 50), np_52386, 'triu')
        # Calling triu(args, kwargs) (line 924)
        triu_call_result_52391 = invoke(stypy.reporting.localization.Localization(__file__, 924, 50), triu_52387, *[t_52389], **kwargs_52390)
        
        # Processing the call keyword arguments (line 924)
        kwargs_52392 = {}
        # Getting the type of 'assert_array_almost_equal' (line 924)
        assert_array_almost_equal_52380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 924)
        assert_array_almost_equal_call_result_52393 = invoke(stypy.reporting.localization.Localization(__file__, 924, 12), assert_array_almost_equal_52380, *[triu_call_result_52385, triu_call_result_52391], **kwargs_52392)
        
        
        # Assigning a Call to a Name (line 926):
        
        # Assigning a Call to a Name (line 926):
        
        # Call to f(...): (line 926)
        # Processing the call keyword arguments (line 926)
        # Getting the type of 'self' (line 926)
        self_52395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 20), 'self', False)
        # Obtaining the member 'a' of a type (line 926)
        a_52396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 926, 20), self_52395, 'a')
        keyword_52397 = a_52396
        # Getting the type of 'self' (line 926)
        self_52398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 30), 'self', False)
        # Obtaining the member 'b' of a type (line 926)
        b_52399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 926, 30), self_52398, 'b')
        keyword_52400 = b_52399
        float_52401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 44), 'float')
        keyword_52402 = float_52401
        int_52403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 54), 'int')
        keyword_52404 = int_52403
        kwargs_52405 = {'a': keyword_52397, 'alpha': keyword_52402, 'lower': keyword_52404, 'b': keyword_52400}
        # Getting the type of 'f' (line 926)
        f_52394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 16), 'f', False)
        # Calling f(args, kwargs) (line 926)
        f_call_result_52406 = invoke(stypy.reporting.localization.Localization(__file__, 926, 16), f_52394, *[], **kwargs_52405)
        
        # Assigning a type to the variable 'c' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 12), 'c', f_call_result_52406)
        
        # Call to assert_array_almost_equal(...): (line 927)
        # Processing the call arguments (line 927)
        
        # Call to tril(...): (line 927)
        # Processing the call arguments (line 927)
        # Getting the type of 'c' (line 927)
        c_52410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 46), 'c', False)
        # Processing the call keyword arguments (line 927)
        kwargs_52411 = {}
        # Getting the type of 'np' (line 927)
        np_52408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 38), 'np', False)
        # Obtaining the member 'tril' of a type (line 927)
        tril_52409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 927, 38), np_52408, 'tril')
        # Calling tril(args, kwargs) (line 927)
        tril_call_result_52412 = invoke(stypy.reporting.localization.Localization(__file__, 927, 38), tril_52409, *[c_52410], **kwargs_52411)
        
        
        # Call to tril(...): (line 927)
        # Processing the call arguments (line 927)
        # Getting the type of 'self' (line 927)
        self_52415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 58), 'self', False)
        # Obtaining the member 't' of a type (line 927)
        t_52416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 927, 58), self_52415, 't')
        # Processing the call keyword arguments (line 927)
        kwargs_52417 = {}
        # Getting the type of 'np' (line 927)
        np_52413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 50), 'np', False)
        # Obtaining the member 'tril' of a type (line 927)
        tril_52414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 927, 50), np_52413, 'tril')
        # Calling tril(args, kwargs) (line 927)
        tril_call_result_52418 = invoke(stypy.reporting.localization.Localization(__file__, 927, 50), tril_52414, *[t_52416], **kwargs_52417)
        
        # Processing the call keyword arguments (line 927)
        kwargs_52419 = {}
        # Getting the type of 'assert_array_almost_equal' (line 927)
        assert_array_almost_equal_52407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 927)
        assert_array_almost_equal_call_result_52420 = invoke(stypy.reporting.localization.Localization(__file__, 927, 12), assert_array_almost_equal_52407, *[tril_call_result_52412, tril_call_result_52418], **kwargs_52419)
        
        
        # Assigning a Call to a Name (line 929):
        
        # Assigning a Call to a Name (line 929):
        
        # Call to ones(...): (line 929)
        # Processing the call arguments (line 929)
        # Getting the type of 'self' (line 929)
        self_52423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 25), 'self', False)
        # Obtaining the member 't' of a type (line 929)
        t_52424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 25), self_52423, 't')
        # Obtaining the member 'shape' of a type (line 929)
        shape_52425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 25), t_52424, 'shape')
        # Processing the call keyword arguments (line 929)
        kwargs_52426 = {}
        # Getting the type of 'np' (line 929)
        np_52421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 17), 'np', False)
        # Obtaining the member 'ones' of a type (line 929)
        ones_52422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 17), np_52421, 'ones')
        # Calling ones(args, kwargs) (line 929)
        ones_call_result_52427 = invoke(stypy.reporting.localization.Localization(__file__, 929, 17), ones_52422, *[shape_52425], **kwargs_52426)
        
        # Assigning a type to the variable 'c0' (line 929)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 929, 12), 'c0', ones_call_result_52427)
        
        # Assigning a Call to a Name (line 930):
        
        # Assigning a Call to a Name (line 930):
        
        # Call to f(...): (line 930)
        # Processing the call keyword arguments (line 930)
        # Getting the type of 'self' (line 930)
        self_52429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 20), 'self', False)
        # Obtaining the member 'a' of a type (line 930)
        a_52430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 930, 20), self_52429, 'a')
        keyword_52431 = a_52430
        # Getting the type of 'self' (line 930)
        self_52432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 30), 'self', False)
        # Obtaining the member 'b' of a type (line 930)
        b_52433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 930, 30), self_52432, 'b')
        keyword_52434 = b_52433
        float_52435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 44), 'float')
        keyword_52436 = float_52435
        float_52437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 53), 'float')
        keyword_52438 = float_52437
        # Getting the type of 'c0' (line 930)
        c0_52439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 59), 'c0', False)
        keyword_52440 = c0_52439
        kwargs_52441 = {'a': keyword_52431, 'alpha': keyword_52436, 'beta': keyword_52438, 'b': keyword_52434, 'c': keyword_52440}
        # Getting the type of 'f' (line 930)
        f_52428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 16), 'f', False)
        # Calling f(args, kwargs) (line 930)
        f_call_result_52442 = invoke(stypy.reporting.localization.Localization(__file__, 930, 16), f_52428, *[], **kwargs_52441)
        
        # Assigning a type to the variable 'c' (line 930)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 930, 12), 'c', f_call_result_52442)
        
        # Call to assert_array_almost_equal(...): (line 931)
        # Processing the call arguments (line 931)
        
        # Call to triu(...): (line 931)
        # Processing the call arguments (line 931)
        # Getting the type of 'c' (line 931)
        c_52446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 46), 'c', False)
        # Processing the call keyword arguments (line 931)
        kwargs_52447 = {}
        # Getting the type of 'np' (line 931)
        np_52444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 931)
        triu_52445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 38), np_52444, 'triu')
        # Calling triu(args, kwargs) (line 931)
        triu_call_result_52448 = invoke(stypy.reporting.localization.Localization(__file__, 931, 38), triu_52445, *[c_52446], **kwargs_52447)
        
        
        # Call to triu(...): (line 931)
        # Processing the call arguments (line 931)
        # Getting the type of 'self' (line 931)
        self_52451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 58), 'self', False)
        # Obtaining the member 't' of a type (line 931)
        t_52452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 58), self_52451, 't')
        # Getting the type of 'c0' (line 931)
        c0_52453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 65), 'c0', False)
        # Applying the binary operator '+' (line 931)
        result_add_52454 = python_operator(stypy.reporting.localization.Localization(__file__, 931, 58), '+', t_52452, c0_52453)
        
        # Processing the call keyword arguments (line 931)
        kwargs_52455 = {}
        # Getting the type of 'np' (line 931)
        np_52449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 50), 'np', False)
        # Obtaining the member 'triu' of a type (line 931)
        triu_52450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 50), np_52449, 'triu')
        # Calling triu(args, kwargs) (line 931)
        triu_call_result_52456 = invoke(stypy.reporting.localization.Localization(__file__, 931, 50), triu_52450, *[result_add_52454], **kwargs_52455)
        
        # Processing the call keyword arguments (line 931)
        kwargs_52457 = {}
        # Getting the type of 'assert_array_almost_equal' (line 931)
        assert_array_almost_equal_52443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 931)
        assert_array_almost_equal_call_result_52458 = invoke(stypy.reporting.localization.Localization(__file__, 931, 12), assert_array_almost_equal_52443, *[triu_call_result_52448, triu_call_result_52456], **kwargs_52457)
        
        
        # Assigning a Call to a Name (line 933):
        
        # Assigning a Call to a Name (line 933):
        
        # Call to f(...): (line 933)
        # Processing the call keyword arguments (line 933)
        # Getting the type of 'self' (line 933)
        self_52460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 20), 'self', False)
        # Obtaining the member 'a' of a type (line 933)
        a_52461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 20), self_52460, 'a')
        keyword_52462 = a_52461
        # Getting the type of 'self' (line 933)
        self_52463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 30), 'self', False)
        # Obtaining the member 'b' of a type (line 933)
        b_52464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 933, 30), self_52463, 'b')
        keyword_52465 = b_52464
        float_52466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 44), 'float')
        keyword_52467 = float_52466
        int_52468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 54), 'int')
        keyword_52469 = int_52468
        kwargs_52470 = {'a': keyword_52462, 'alpha': keyword_52467, 'trans': keyword_52469, 'b': keyword_52465}
        # Getting the type of 'f' (line 933)
        f_52459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 16), 'f', False)
        # Calling f(args, kwargs) (line 933)
        f_call_result_52471 = invoke(stypy.reporting.localization.Localization(__file__, 933, 16), f_52459, *[], **kwargs_52470)
        
        # Assigning a type to the variable 'c' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 12), 'c', f_call_result_52471)
        
        # Call to assert_array_almost_equal(...): (line 934)
        # Processing the call arguments (line 934)
        
        # Call to triu(...): (line 934)
        # Processing the call arguments (line 934)
        # Getting the type of 'c' (line 934)
        c_52475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 46), 'c', False)
        # Processing the call keyword arguments (line 934)
        kwargs_52476 = {}
        # Getting the type of 'np' (line 934)
        np_52473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 934)
        triu_52474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 934, 38), np_52473, 'triu')
        # Calling triu(args, kwargs) (line 934)
        triu_call_result_52477 = invoke(stypy.reporting.localization.Localization(__file__, 934, 38), triu_52474, *[c_52475], **kwargs_52476)
        
        
        # Call to triu(...): (line 934)
        # Processing the call arguments (line 934)
        # Getting the type of 'self' (line 934)
        self_52480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 58), 'self', False)
        # Obtaining the member 'tt' of a type (line 934)
        tt_52481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 934, 58), self_52480, 'tt')
        # Processing the call keyword arguments (line 934)
        kwargs_52482 = {}
        # Getting the type of 'np' (line 934)
        np_52478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 50), 'np', False)
        # Obtaining the member 'triu' of a type (line 934)
        triu_52479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 934, 50), np_52478, 'triu')
        # Calling triu(args, kwargs) (line 934)
        triu_call_result_52483 = invoke(stypy.reporting.localization.Localization(__file__, 934, 50), triu_52479, *[tt_52481], **kwargs_52482)
        
        # Processing the call keyword arguments (line 934)
        kwargs_52484 = {}
        # Getting the type of 'assert_array_almost_equal' (line 934)
        assert_array_almost_equal_52472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 934)
        assert_array_almost_equal_call_result_52485 = invoke(stypy.reporting.localization.Localization(__file__, 934, 12), assert_array_almost_equal_52472, *[triu_call_result_52477, triu_call_result_52483], **kwargs_52484)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_syr2k(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_syr2k' in the type store
        # Getting the type of 'stypy_return_type' (line 921)
        stypy_return_type_52486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52486)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_syr2k'
        return stypy_return_type_52486


    @norecursion
    def test_syr2k_wrong_c(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_syr2k_wrong_c'
        module_type_store = module_type_store.open_function_context('test_syr2k_wrong_c', 937, 4, False)
        # Assigning a type to the variable 'self' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_localization', localization)
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_function_name', 'TestBLAS3Syr2k.test_syr2k_wrong_c')
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_param_names_list', [])
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestBLAS3Syr2k.test_syr2k_wrong_c.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Syr2k.test_syr2k_wrong_c', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_syr2k_wrong_c', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_syr2k_wrong_c(...)' code ##################

        
        # Assigning a Call to a Name (line 938):
        
        # Assigning a Call to a Name (line 938):
        
        # Call to getattr(...): (line 938)
        # Processing the call arguments (line 938)
        # Getting the type of 'fblas' (line 938)
        fblas_52488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 20), 'fblas', False)
        str_52489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 938, 27), 'str', 'dsyr2k')
        # Getting the type of 'None' (line 938)
        None_52490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 37), 'None', False)
        # Processing the call keyword arguments (line 938)
        kwargs_52491 = {}
        # Getting the type of 'getattr' (line 938)
        getattr_52487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 12), 'getattr', False)
        # Calling getattr(args, kwargs) (line 938)
        getattr_call_result_52492 = invoke(stypy.reporting.localization.Localization(__file__, 938, 12), getattr_52487, *[fblas_52488, str_52489, None_52490], **kwargs_52491)
        
        # Assigning a type to the variable 'f' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'f', getattr_call_result_52492)
        
        # Type idiom detected: calculating its left and rigth part (line 939)
        # Getting the type of 'f' (line 939)
        f_52493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'f')
        # Getting the type of 'None' (line 939)
        None_52494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 20), 'None')
        
        (may_be_52495, more_types_in_union_52496) = may_not_be_none(f_52493, None_52494)

        if may_be_52495:

            if more_types_in_union_52496:
                # Runtime conditional SSA (line 939)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Call to assert_raises(...): (line 940)
            # Processing the call arguments (line 940)
            # Getting the type of 'Exception' (line 940)
            Exception_52498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 26), 'Exception', False)
            # Getting the type of 'f' (line 940)
            f_52499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 37), 'f', False)
            # Processing the call keyword arguments (line 940)
            
            # Obtaining an instance of the builtin type 'dict' (line 940)
            dict_52500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 940)
            # Adding element type (key, value) (line 940)
            str_52501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 940, 43), 'str', 'a')
            # Getting the type of 'self' (line 940)
            self_52502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 48), 'self', False)
            # Obtaining the member 'a' of a type (line 940)
            a_52503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 940, 48), self_52502, 'a')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 42), dict_52500, (str_52501, a_52503))
            # Adding element type (key, value) (line 940)
            str_52504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 941, 43), 'str', 'b')
            # Getting the type of 'self' (line 941)
            self_52505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 48), 'self', False)
            # Obtaining the member 'b' of a type (line 941)
            b_52506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 941, 48), self_52505, 'b')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 42), dict_52500, (str_52504, b_52506))
            # Adding element type (key, value) (line 940)
            str_52507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 43), 'str', 'alpha')
            float_52508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 52), 'float')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 42), dict_52500, (str_52507, float_52508))
            # Adding element type (key, value) (line 940)
            str_52509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 43), 'str', 'c')
            
            # Call to zeros(...): (line 943)
            # Processing the call arguments (line 943)
            
            # Obtaining an instance of the builtin type 'tuple' (line 943)
            tuple_52512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 58), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 943)
            # Adding element type (line 943)
            int_52513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 58), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 943, 58), tuple_52512, int_52513)
            # Adding element type (line 943)
            int_52514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 62), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 943, 58), tuple_52512, int_52514)
            
            # Processing the call keyword arguments (line 943)
            kwargs_52515 = {}
            # Getting the type of 'np' (line 943)
            np_52510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 48), 'np', False)
            # Obtaining the member 'zeros' of a type (line 943)
            zeros_52511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 943, 48), np_52510, 'zeros')
            # Calling zeros(args, kwargs) (line 943)
            zeros_call_result_52516 = invoke(stypy.reporting.localization.Localization(__file__, 943, 48), zeros_52511, *[tuple_52512], **kwargs_52515)
            
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 940, 42), dict_52500, (str_52509, zeros_call_result_52516))
            
            kwargs_52517 = {'dict_52500': dict_52500}
            # Getting the type of 'assert_raises' (line 940)
            assert_raises_52497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 12), 'assert_raises', False)
            # Calling assert_raises(args, kwargs) (line 940)
            assert_raises_call_result_52518 = invoke(stypy.reporting.localization.Localization(__file__, 940, 12), assert_raises_52497, *[Exception_52498, f_52499], **kwargs_52517)
            

            if more_types_in_union_52496:
                # SSA join for if statement (line 939)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'test_syr2k_wrong_c(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_syr2k_wrong_c' in the type store
        # Getting the type of 'stypy_return_type' (line 937)
        stypy_return_type_52519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52519)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_syr2k_wrong_c'
        return stypy_return_type_52519


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 907, 0, False)
        # Assigning a type to the variable 'self' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestBLAS3Syr2k.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestBLAS3Syr2k' (line 907)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 0), 'TestBLAS3Syr2k', TestBLAS3Syr2k)
# Declaration of the 'TestSyHe' class

class TestSyHe(object, ):
    str_52520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 4), 'str', 'Quick and simple tests for (zc)-symm, syrk, syr2k.')

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 949, 4, False)
        # Assigning a type to the variable 'self' (line 950)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 950, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSyHe.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestSyHe.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSyHe.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSyHe.setup_method.__dict__.__setitem__('stypy_function_name', 'TestSyHe.setup_method')
        TestSyHe.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestSyHe.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSyHe.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSyHe.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSyHe.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSyHe.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSyHe.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSyHe.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Call to a Attribute (line 950):
        
        # Assigning a Call to a Attribute (line 950):
        
        # Call to array(...): (line 950)
        # Processing the call arguments (line 950)
        
        # Obtaining an instance of the builtin type 'list' (line 950)
        list_52523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 950)
        # Adding element type (line 950)
        
        # Obtaining an instance of the builtin type 'list' (line 950)
        list_52524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 950)
        # Adding element type (line 950)
        float_52525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 33), list_52524, float_52525)
        # Adding element type (line 950)
        complex_52526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 38), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 33), list_52524, complex_52526)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 32), list_52523, list_52524)
        # Adding element type (line 950)
        
        # Obtaining an instance of the builtin type 'list' (line 951)
        list_52527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 951, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 951)
        # Adding element type (line 951)
        complex_52528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 951, 34), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 33), list_52527, complex_52528)
        # Adding element type (line 951)
        float_52529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 951, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 951, 33), list_52527, float_52529)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 32), list_52523, list_52527)
        
        # Processing the call keyword arguments (line 950)
        kwargs_52530 = {}
        # Getting the type of 'np' (line 950)
        np_52521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 23), 'np', False)
        # Obtaining the member 'array' of a type (line 950)
        array_52522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 23), np_52521, 'array')
        # Calling array(args, kwargs) (line 950)
        array_call_result_52531 = invoke(stypy.reporting.localization.Localization(__file__, 950, 23), array_52522, *[list_52523], **kwargs_52530)
        
        # Getting the type of 'self' (line 950)
        self_52532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 8), 'self')
        # Setting the type of the member 'sigma_y' of a type (line 950)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 8), self_52532, 'sigma_y', array_call_result_52531)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 949)
        stypy_return_type_52533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52533)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_52533


    @norecursion
    def test_symm_zc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_symm_zc'
        module_type_store = module_type_store.open_function_context('test_symm_zc', 953, 4, False)
        # Assigning a type to the variable 'self' (line 954)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 954, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_localization', localization)
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_function_name', 'TestSyHe.test_symm_zc')
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_param_names_list', [])
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSyHe.test_symm_zc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSyHe.test_symm_zc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_symm_zc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_symm_zc(...)' code ##################

        
        
        # Call to _get_func(...): (line 954)
        # Processing the call arguments (line 954)
        str_52535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 27), 'str', 'symm')
        str_52536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 35), 'str', 'zc')
        # Processing the call keyword arguments (line 954)
        kwargs_52537 = {}
        # Getting the type of '_get_func' (line 954)
        _get_func_52534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 17), '_get_func', False)
        # Calling _get_func(args, kwargs) (line 954)
        _get_func_call_result_52538 = invoke(stypy.reporting.localization.Localization(__file__, 954, 17), _get_func_52534, *[str_52535, str_52536], **kwargs_52537)
        
        # Testing the type of a for loop iterable (line 954)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 954, 8), _get_func_call_result_52538)
        # Getting the type of the for loop variable (line 954)
        for_loop_var_52539 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 954, 8), _get_func_call_result_52538)
        # Assigning a type to the variable 'f' (line 954)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 954, 8), 'f', for_loop_var_52539)
        # SSA begins for a for statement (line 954)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 956):
        
        # Assigning a Call to a Name (line 956):
        
        # Call to f(...): (line 956)
        # Processing the call keyword arguments (line 956)
        # Getting the type of 'self' (line 956)
        self_52541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 22), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 956)
        sigma_y_52542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 22), self_52541, 'sigma_y')
        keyword_52543 = sigma_y_52542
        # Getting the type of 'self' (line 956)
        self_52544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 38), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 956)
        sigma_y_52545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 38), self_52544, 'sigma_y')
        keyword_52546 = sigma_y_52545
        float_52547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 956, 58), 'float')
        keyword_52548 = float_52547
        kwargs_52549 = {'a': keyword_52543, 'alpha': keyword_52548, 'b': keyword_52546}
        # Getting the type of 'f' (line 956)
        f_52540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 18), 'f', False)
        # Calling f(args, kwargs) (line 956)
        f_call_result_52550 = invoke(stypy.reporting.localization.Localization(__file__, 956, 18), f_52540, *[], **kwargs_52549)
        
        # Assigning a type to the variable 'res' (line 956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 956, 12), 'res', f_call_result_52550)
        
        # Call to assert_array_almost_equal(...): (line 957)
        # Processing the call arguments (line 957)
        
        # Call to triu(...): (line 957)
        # Processing the call arguments (line 957)
        # Getting the type of 'res' (line 957)
        res_52554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 46), 'res', False)
        # Processing the call keyword arguments (line 957)
        kwargs_52555 = {}
        # Getting the type of 'np' (line 957)
        np_52552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 957)
        triu_52553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 38), np_52552, 'triu')
        # Calling triu(args, kwargs) (line 957)
        triu_call_result_52556 = invoke(stypy.reporting.localization.Localization(__file__, 957, 38), triu_52553, *[res_52554], **kwargs_52555)
        
        
        # Call to diag(...): (line 957)
        # Processing the call arguments (line 957)
        
        # Obtaining an instance of the builtin type 'list' (line 957)
        list_52559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 957)
        # Adding element type (line 957)
        int_52560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 957, 60), list_52559, int_52560)
        # Adding element type (line 957)
        int_52561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 64), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 957, 60), list_52559, int_52561)
        
        # Processing the call keyword arguments (line 957)
        kwargs_52562 = {}
        # Getting the type of 'np' (line 957)
        np_52557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 52), 'np', False)
        # Obtaining the member 'diag' of a type (line 957)
        diag_52558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 52), np_52557, 'diag')
        # Calling diag(args, kwargs) (line 957)
        diag_call_result_52563 = invoke(stypy.reporting.localization.Localization(__file__, 957, 52), diag_52558, *[list_52559], **kwargs_52562)
        
        # Processing the call keyword arguments (line 957)
        kwargs_52564 = {}
        # Getting the type of 'assert_array_almost_equal' (line 957)
        assert_array_almost_equal_52551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 957)
        assert_array_almost_equal_call_result_52565 = invoke(stypy.reporting.localization.Localization(__file__, 957, 12), assert_array_almost_equal_52551, *[triu_call_result_52556, diag_call_result_52563], **kwargs_52564)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_symm_zc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_symm_zc' in the type store
        # Getting the type of 'stypy_return_type' (line 953)
        stypy_return_type_52566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52566)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_symm_zc'
        return stypy_return_type_52566


    @norecursion
    def test_hemm_zc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_hemm_zc'
        module_type_store = module_type_store.open_function_context('test_hemm_zc', 959, 4, False)
        # Assigning a type to the variable 'self' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_localization', localization)
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_function_name', 'TestSyHe.test_hemm_zc')
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_param_names_list', [])
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSyHe.test_hemm_zc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSyHe.test_hemm_zc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_hemm_zc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_hemm_zc(...)' code ##################

        
        
        # Call to _get_func(...): (line 960)
        # Processing the call arguments (line 960)
        str_52568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 27), 'str', 'hemm')
        str_52569 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 960, 35), 'str', 'zc')
        # Processing the call keyword arguments (line 960)
        kwargs_52570 = {}
        # Getting the type of '_get_func' (line 960)
        _get_func_52567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 17), '_get_func', False)
        # Calling _get_func(args, kwargs) (line 960)
        _get_func_call_result_52571 = invoke(stypy.reporting.localization.Localization(__file__, 960, 17), _get_func_52567, *[str_52568, str_52569], **kwargs_52570)
        
        # Testing the type of a for loop iterable (line 960)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 960, 8), _get_func_call_result_52571)
        # Getting the type of the for loop variable (line 960)
        for_loop_var_52572 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 960, 8), _get_func_call_result_52571)
        # Assigning a type to the variable 'f' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'f', for_loop_var_52572)
        # SSA begins for a for statement (line 960)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 962):
        
        # Assigning a Call to a Name (line 962):
        
        # Call to f(...): (line 962)
        # Processing the call keyword arguments (line 962)
        # Getting the type of 'self' (line 962)
        self_52574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 22), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 962)
        sigma_y_52575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 962, 22), self_52574, 'sigma_y')
        keyword_52576 = sigma_y_52575
        # Getting the type of 'self' (line 962)
        self_52577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 38), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 962)
        sigma_y_52578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 962, 38), self_52577, 'sigma_y')
        keyword_52579 = sigma_y_52578
        float_52580 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 962, 58), 'float')
        keyword_52581 = float_52580
        kwargs_52582 = {'a': keyword_52576, 'alpha': keyword_52581, 'b': keyword_52579}
        # Getting the type of 'f' (line 962)
        f_52573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 18), 'f', False)
        # Calling f(args, kwargs) (line 962)
        f_call_result_52583 = invoke(stypy.reporting.localization.Localization(__file__, 962, 18), f_52573, *[], **kwargs_52582)
        
        # Assigning a type to the variable 'res' (line 962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 962, 12), 'res', f_call_result_52583)
        
        # Call to assert_array_almost_equal(...): (line 963)
        # Processing the call arguments (line 963)
        
        # Call to triu(...): (line 963)
        # Processing the call arguments (line 963)
        # Getting the type of 'res' (line 963)
        res_52587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 46), 'res', False)
        # Processing the call keyword arguments (line 963)
        kwargs_52588 = {}
        # Getting the type of 'np' (line 963)
        np_52585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 963)
        triu_52586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 963, 38), np_52585, 'triu')
        # Calling triu(args, kwargs) (line 963)
        triu_call_result_52589 = invoke(stypy.reporting.localization.Localization(__file__, 963, 38), triu_52586, *[res_52587], **kwargs_52588)
        
        
        # Call to diag(...): (line 963)
        # Processing the call arguments (line 963)
        
        # Obtaining an instance of the builtin type 'list' (line 963)
        list_52592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 963)
        # Adding element type (line 963)
        int_52593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 963, 60), list_52592, int_52593)
        # Adding element type (line 963)
        int_52594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 64), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 963, 60), list_52592, int_52594)
        
        # Processing the call keyword arguments (line 963)
        kwargs_52595 = {}
        # Getting the type of 'np' (line 963)
        np_52590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 52), 'np', False)
        # Obtaining the member 'diag' of a type (line 963)
        diag_52591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 963, 52), np_52590, 'diag')
        # Calling diag(args, kwargs) (line 963)
        diag_call_result_52596 = invoke(stypy.reporting.localization.Localization(__file__, 963, 52), diag_52591, *[list_52592], **kwargs_52595)
        
        # Processing the call keyword arguments (line 963)
        kwargs_52597 = {}
        # Getting the type of 'assert_array_almost_equal' (line 963)
        assert_array_almost_equal_52584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 963)
        assert_array_almost_equal_call_result_52598 = invoke(stypy.reporting.localization.Localization(__file__, 963, 12), assert_array_almost_equal_52584, *[triu_call_result_52589, diag_call_result_52596], **kwargs_52597)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_hemm_zc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_hemm_zc' in the type store
        # Getting the type of 'stypy_return_type' (line 959)
        stypy_return_type_52599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52599)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_hemm_zc'
        return stypy_return_type_52599


    @norecursion
    def test_syrk_zr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_syrk_zr'
        module_type_store = module_type_store.open_function_context('test_syrk_zr', 965, 4, False)
        # Assigning a type to the variable 'self' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_localization', localization)
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_function_name', 'TestSyHe.test_syrk_zr')
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_param_names_list', [])
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSyHe.test_syrk_zr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSyHe.test_syrk_zr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_syrk_zr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_syrk_zr(...)' code ##################

        
        
        # Call to _get_func(...): (line 966)
        # Processing the call arguments (line 966)
        str_52601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 27), 'str', 'syrk')
        str_52602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 35), 'str', 'zc')
        # Processing the call keyword arguments (line 966)
        kwargs_52603 = {}
        # Getting the type of '_get_func' (line 966)
        _get_func_52600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 17), '_get_func', False)
        # Calling _get_func(args, kwargs) (line 966)
        _get_func_call_result_52604 = invoke(stypy.reporting.localization.Localization(__file__, 966, 17), _get_func_52600, *[str_52601, str_52602], **kwargs_52603)
        
        # Testing the type of a for loop iterable (line 966)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 966, 8), _get_func_call_result_52604)
        # Getting the type of the for loop variable (line 966)
        for_loop_var_52605 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 966, 8), _get_func_call_result_52604)
        # Assigning a type to the variable 'f' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'f', for_loop_var_52605)
        # SSA begins for a for statement (line 966)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 967):
        
        # Assigning a Call to a Name (line 967):
        
        # Call to f(...): (line 967)
        # Processing the call keyword arguments (line 967)
        # Getting the type of 'self' (line 967)
        self_52607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 22), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 967)
        sigma_y_52608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 967, 22), self_52607, 'sigma_y')
        keyword_52609 = sigma_y_52608
        float_52610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 967, 42), 'float')
        keyword_52611 = float_52610
        kwargs_52612 = {'a': keyword_52609, 'alpha': keyword_52611}
        # Getting the type of 'f' (line 967)
        f_52606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 18), 'f', False)
        # Calling f(args, kwargs) (line 967)
        f_call_result_52613 = invoke(stypy.reporting.localization.Localization(__file__, 967, 18), f_52606, *[], **kwargs_52612)
        
        # Assigning a type to the variable 'res' (line 967)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 967, 12), 'res', f_call_result_52613)
        
        # Call to assert_array_almost_equal(...): (line 968)
        # Processing the call arguments (line 968)
        
        # Call to triu(...): (line 968)
        # Processing the call arguments (line 968)
        # Getting the type of 'res' (line 968)
        res_52617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 46), 'res', False)
        # Processing the call keyword arguments (line 968)
        kwargs_52618 = {}
        # Getting the type of 'np' (line 968)
        np_52615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 968)
        triu_52616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 968, 38), np_52615, 'triu')
        # Calling triu(args, kwargs) (line 968)
        triu_call_result_52619 = invoke(stypy.reporting.localization.Localization(__file__, 968, 38), triu_52616, *[res_52617], **kwargs_52618)
        
        
        # Call to diag(...): (line 968)
        # Processing the call arguments (line 968)
        
        # Obtaining an instance of the builtin type 'list' (line 968)
        list_52622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 968)
        # Adding element type (line 968)
        int_52623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 60), list_52622, int_52623)
        # Adding element type (line 968)
        int_52624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 65), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 60), list_52622, int_52624)
        
        # Processing the call keyword arguments (line 968)
        kwargs_52625 = {}
        # Getting the type of 'np' (line 968)
        np_52620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 52), 'np', False)
        # Obtaining the member 'diag' of a type (line 968)
        diag_52621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 968, 52), np_52620, 'diag')
        # Calling diag(args, kwargs) (line 968)
        diag_call_result_52626 = invoke(stypy.reporting.localization.Localization(__file__, 968, 52), diag_52621, *[list_52622], **kwargs_52625)
        
        # Processing the call keyword arguments (line 968)
        kwargs_52627 = {}
        # Getting the type of 'assert_array_almost_equal' (line 968)
        assert_array_almost_equal_52614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 968)
        assert_array_almost_equal_call_result_52628 = invoke(stypy.reporting.localization.Localization(__file__, 968, 12), assert_array_almost_equal_52614, *[triu_call_result_52619, diag_call_result_52626], **kwargs_52627)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_syrk_zr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_syrk_zr' in the type store
        # Getting the type of 'stypy_return_type' (line 965)
        stypy_return_type_52629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52629)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_syrk_zr'
        return stypy_return_type_52629


    @norecursion
    def test_herk_zr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_herk_zr'
        module_type_store = module_type_store.open_function_context('test_herk_zr', 970, 4, False)
        # Assigning a type to the variable 'self' (line 971)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 971, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_localization', localization)
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_function_name', 'TestSyHe.test_herk_zr')
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_param_names_list', [])
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSyHe.test_herk_zr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSyHe.test_herk_zr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_herk_zr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_herk_zr(...)' code ##################

        
        
        # Call to _get_func(...): (line 971)
        # Processing the call arguments (line 971)
        str_52631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 27), 'str', 'herk')
        str_52632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 35), 'str', 'zc')
        # Processing the call keyword arguments (line 971)
        kwargs_52633 = {}
        # Getting the type of '_get_func' (line 971)
        _get_func_52630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 17), '_get_func', False)
        # Calling _get_func(args, kwargs) (line 971)
        _get_func_call_result_52634 = invoke(stypy.reporting.localization.Localization(__file__, 971, 17), _get_func_52630, *[str_52631, str_52632], **kwargs_52633)
        
        # Testing the type of a for loop iterable (line 971)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 971, 8), _get_func_call_result_52634)
        # Getting the type of the for loop variable (line 971)
        for_loop_var_52635 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 971, 8), _get_func_call_result_52634)
        # Assigning a type to the variable 'f' (line 971)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'f', for_loop_var_52635)
        # SSA begins for a for statement (line 971)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 972):
        
        # Assigning a Call to a Name (line 972):
        
        # Call to f(...): (line 972)
        # Processing the call keyword arguments (line 972)
        # Getting the type of 'self' (line 972)
        self_52637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 22), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 972)
        sigma_y_52638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 972, 22), self_52637, 'sigma_y')
        keyword_52639 = sigma_y_52638
        float_52640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 972, 42), 'float')
        keyword_52641 = float_52640
        kwargs_52642 = {'a': keyword_52639, 'alpha': keyword_52641}
        # Getting the type of 'f' (line 972)
        f_52636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 18), 'f', False)
        # Calling f(args, kwargs) (line 972)
        f_call_result_52643 = invoke(stypy.reporting.localization.Localization(__file__, 972, 18), f_52636, *[], **kwargs_52642)
        
        # Assigning a type to the variable 'res' (line 972)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 972, 12), 'res', f_call_result_52643)
        
        # Call to assert_array_almost_equal(...): (line 973)
        # Processing the call arguments (line 973)
        
        # Call to triu(...): (line 973)
        # Processing the call arguments (line 973)
        # Getting the type of 'res' (line 973)
        res_52647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 46), 'res', False)
        # Processing the call keyword arguments (line 973)
        kwargs_52648 = {}
        # Getting the type of 'np' (line 973)
        np_52645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 973)
        triu_52646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 38), np_52645, 'triu')
        # Calling triu(args, kwargs) (line 973)
        triu_call_result_52649 = invoke(stypy.reporting.localization.Localization(__file__, 973, 38), triu_52646, *[res_52647], **kwargs_52648)
        
        
        # Call to diag(...): (line 973)
        # Processing the call arguments (line 973)
        
        # Obtaining an instance of the builtin type 'list' (line 973)
        list_52652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 973)
        # Adding element type (line 973)
        int_52653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 61), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 60), list_52652, int_52653)
        # Adding element type (line 973)
        int_52654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 64), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 973, 60), list_52652, int_52654)
        
        # Processing the call keyword arguments (line 973)
        kwargs_52655 = {}
        # Getting the type of 'np' (line 973)
        np_52650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 52), 'np', False)
        # Obtaining the member 'diag' of a type (line 973)
        diag_52651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 52), np_52650, 'diag')
        # Calling diag(args, kwargs) (line 973)
        diag_call_result_52656 = invoke(stypy.reporting.localization.Localization(__file__, 973, 52), diag_52651, *[list_52652], **kwargs_52655)
        
        # Processing the call keyword arguments (line 973)
        kwargs_52657 = {}
        # Getting the type of 'assert_array_almost_equal' (line 973)
        assert_array_almost_equal_52644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 973)
        assert_array_almost_equal_call_result_52658 = invoke(stypy.reporting.localization.Localization(__file__, 973, 12), assert_array_almost_equal_52644, *[triu_call_result_52649, diag_call_result_52656], **kwargs_52657)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_herk_zr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_herk_zr' in the type store
        # Getting the type of 'stypy_return_type' (line 970)
        stypy_return_type_52659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52659)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_herk_zr'
        return stypy_return_type_52659


    @norecursion
    def test_syr2k_zr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_syr2k_zr'
        module_type_store = module_type_store.open_function_context('test_syr2k_zr', 975, 4, False)
        # Assigning a type to the variable 'self' (line 976)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 976, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_localization', localization)
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_function_name', 'TestSyHe.test_syr2k_zr')
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_param_names_list', [])
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSyHe.test_syr2k_zr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSyHe.test_syr2k_zr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_syr2k_zr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_syr2k_zr(...)' code ##################

        
        
        # Call to _get_func(...): (line 976)
        # Processing the call arguments (line 976)
        str_52661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 27), 'str', 'syr2k')
        str_52662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 36), 'str', 'zc')
        # Processing the call keyword arguments (line 976)
        kwargs_52663 = {}
        # Getting the type of '_get_func' (line 976)
        _get_func_52660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 17), '_get_func', False)
        # Calling _get_func(args, kwargs) (line 976)
        _get_func_call_result_52664 = invoke(stypy.reporting.localization.Localization(__file__, 976, 17), _get_func_52660, *[str_52661, str_52662], **kwargs_52663)
        
        # Testing the type of a for loop iterable (line 976)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 976, 8), _get_func_call_result_52664)
        # Getting the type of the for loop variable (line 976)
        for_loop_var_52665 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 976, 8), _get_func_call_result_52664)
        # Assigning a type to the variable 'f' (line 976)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 976, 8), 'f', for_loop_var_52665)
        # SSA begins for a for statement (line 976)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 977):
        
        # Assigning a Call to a Name (line 977):
        
        # Call to f(...): (line 977)
        # Processing the call keyword arguments (line 977)
        # Getting the type of 'self' (line 977)
        self_52667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 22), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 977)
        sigma_y_52668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 977, 22), self_52667, 'sigma_y')
        keyword_52669 = sigma_y_52668
        # Getting the type of 'self' (line 977)
        self_52670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 38), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 977)
        sigma_y_52671 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 977, 38), self_52670, 'sigma_y')
        keyword_52672 = sigma_y_52671
        float_52673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 977, 58), 'float')
        keyword_52674 = float_52673
        kwargs_52675 = {'a': keyword_52669, 'alpha': keyword_52674, 'b': keyword_52672}
        # Getting the type of 'f' (line 977)
        f_52666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 18), 'f', False)
        # Calling f(args, kwargs) (line 977)
        f_call_result_52676 = invoke(stypy.reporting.localization.Localization(__file__, 977, 18), f_52666, *[], **kwargs_52675)
        
        # Assigning a type to the variable 'res' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 12), 'res', f_call_result_52676)
        
        # Call to assert_array_almost_equal(...): (line 978)
        # Processing the call arguments (line 978)
        
        # Call to triu(...): (line 978)
        # Processing the call arguments (line 978)
        # Getting the type of 'res' (line 978)
        res_52680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 46), 'res', False)
        # Processing the call keyword arguments (line 978)
        kwargs_52681 = {}
        # Getting the type of 'np' (line 978)
        np_52678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 978)
        triu_52679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 38), np_52678, 'triu')
        # Calling triu(args, kwargs) (line 978)
        triu_call_result_52682 = invoke(stypy.reporting.localization.Localization(__file__, 978, 38), triu_52679, *[res_52680], **kwargs_52681)
        
        float_52683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 52), 'float')
        
        # Call to diag(...): (line 978)
        # Processing the call arguments (line 978)
        
        # Obtaining an instance of the builtin type 'list' (line 978)
        list_52686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 63), 'list')
        # Adding type elements to the builtin type 'list' instance (line 978)
        # Adding element type (line 978)
        int_52687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 64), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 978, 63), list_52686, int_52687)
        # Adding element type (line 978)
        int_52688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 68), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 978, 63), list_52686, int_52688)
        
        # Processing the call keyword arguments (line 978)
        kwargs_52689 = {}
        # Getting the type of 'np' (line 978)
        np_52684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 55), 'np', False)
        # Obtaining the member 'diag' of a type (line 978)
        diag_52685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 55), np_52684, 'diag')
        # Calling diag(args, kwargs) (line 978)
        diag_call_result_52690 = invoke(stypy.reporting.localization.Localization(__file__, 978, 55), diag_52685, *[list_52686], **kwargs_52689)
        
        # Applying the binary operator '*' (line 978)
        result_mul_52691 = python_operator(stypy.reporting.localization.Localization(__file__, 978, 52), '*', float_52683, diag_call_result_52690)
        
        # Processing the call keyword arguments (line 978)
        kwargs_52692 = {}
        # Getting the type of 'assert_array_almost_equal' (line 978)
        assert_array_almost_equal_52677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 978)
        assert_array_almost_equal_call_result_52693 = invoke(stypy.reporting.localization.Localization(__file__, 978, 12), assert_array_almost_equal_52677, *[triu_call_result_52682, result_mul_52691], **kwargs_52692)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_syr2k_zr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_syr2k_zr' in the type store
        # Getting the type of 'stypy_return_type' (line 975)
        stypy_return_type_52694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52694)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_syr2k_zr'
        return stypy_return_type_52694


    @norecursion
    def test_her2k_zr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_her2k_zr'
        module_type_store = module_type_store.open_function_context('test_her2k_zr', 980, 4, False)
        # Assigning a type to the variable 'self' (line 981)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 981, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_localization', localization)
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_function_name', 'TestSyHe.test_her2k_zr')
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_param_names_list', [])
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestSyHe.test_her2k_zr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSyHe.test_her2k_zr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_her2k_zr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_her2k_zr(...)' code ##################

        
        
        # Call to _get_func(...): (line 981)
        # Processing the call arguments (line 981)
        str_52696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 27), 'str', 'her2k')
        str_52697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 36), 'str', 'zc')
        # Processing the call keyword arguments (line 981)
        kwargs_52698 = {}
        # Getting the type of '_get_func' (line 981)
        _get_func_52695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 17), '_get_func', False)
        # Calling _get_func(args, kwargs) (line 981)
        _get_func_call_result_52699 = invoke(stypy.reporting.localization.Localization(__file__, 981, 17), _get_func_52695, *[str_52696, str_52697], **kwargs_52698)
        
        # Testing the type of a for loop iterable (line 981)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 981, 8), _get_func_call_result_52699)
        # Getting the type of the for loop variable (line 981)
        for_loop_var_52700 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 981, 8), _get_func_call_result_52699)
        # Assigning a type to the variable 'f' (line 981)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 981, 8), 'f', for_loop_var_52700)
        # SSA begins for a for statement (line 981)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 982):
        
        # Assigning a Call to a Name (line 982):
        
        # Call to f(...): (line 982)
        # Processing the call keyword arguments (line 982)
        # Getting the type of 'self' (line 982)
        self_52702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 22), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 982)
        sigma_y_52703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 982, 22), self_52702, 'sigma_y')
        keyword_52704 = sigma_y_52703
        # Getting the type of 'self' (line 982)
        self_52705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 38), 'self', False)
        # Obtaining the member 'sigma_y' of a type (line 982)
        sigma_y_52706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 982, 38), self_52705, 'sigma_y')
        keyword_52707 = sigma_y_52706
        float_52708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 58), 'float')
        keyword_52709 = float_52708
        kwargs_52710 = {'a': keyword_52704, 'alpha': keyword_52709, 'b': keyword_52707}
        # Getting the type of 'f' (line 982)
        f_52701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 18), 'f', False)
        # Calling f(args, kwargs) (line 982)
        f_call_result_52711 = invoke(stypy.reporting.localization.Localization(__file__, 982, 18), f_52701, *[], **kwargs_52710)
        
        # Assigning a type to the variable 'res' (line 982)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 982, 12), 'res', f_call_result_52711)
        
        # Call to assert_array_almost_equal(...): (line 983)
        # Processing the call arguments (line 983)
        
        # Call to triu(...): (line 983)
        # Processing the call arguments (line 983)
        # Getting the type of 'res' (line 983)
        res_52715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 46), 'res', False)
        # Processing the call keyword arguments (line 983)
        kwargs_52716 = {}
        # Getting the type of 'np' (line 983)
        np_52713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 38), 'np', False)
        # Obtaining the member 'triu' of a type (line 983)
        triu_52714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 38), np_52713, 'triu')
        # Calling triu(args, kwargs) (line 983)
        triu_call_result_52717 = invoke(stypy.reporting.localization.Localization(__file__, 983, 38), triu_52714, *[res_52715], **kwargs_52716)
        
        float_52718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 52), 'float')
        
        # Call to diag(...): (line 983)
        # Processing the call arguments (line 983)
        
        # Obtaining an instance of the builtin type 'list' (line 983)
        list_52721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 63), 'list')
        # Adding type elements to the builtin type 'list' instance (line 983)
        # Adding element type (line 983)
        int_52722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 64), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 983, 63), list_52721, int_52722)
        # Adding element type (line 983)
        int_52723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 67), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 983, 63), list_52721, int_52723)
        
        # Processing the call keyword arguments (line 983)
        kwargs_52724 = {}
        # Getting the type of 'np' (line 983)
        np_52719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 55), 'np', False)
        # Obtaining the member 'diag' of a type (line 983)
        diag_52720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 55), np_52719, 'diag')
        # Calling diag(args, kwargs) (line 983)
        diag_call_result_52725 = invoke(stypy.reporting.localization.Localization(__file__, 983, 55), diag_52720, *[list_52721], **kwargs_52724)
        
        # Applying the binary operator '*' (line 983)
        result_mul_52726 = python_operator(stypy.reporting.localization.Localization(__file__, 983, 52), '*', float_52718, diag_call_result_52725)
        
        # Processing the call keyword arguments (line 983)
        kwargs_52727 = {}
        # Getting the type of 'assert_array_almost_equal' (line 983)
        assert_array_almost_equal_52712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 12), 'assert_array_almost_equal', False)
        # Calling assert_array_almost_equal(args, kwargs) (line 983)
        assert_array_almost_equal_call_result_52728 = invoke(stypy.reporting.localization.Localization(__file__, 983, 12), assert_array_almost_equal_52712, *[triu_call_result_52717, result_mul_52726], **kwargs_52727)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_her2k_zr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_her2k_zr' in the type store
        # Getting the type of 'stypy_return_type' (line 980)
        stypy_return_type_52729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52729)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_her2k_zr'
        return stypy_return_type_52729


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 947, 0, False)
        # Assigning a type to the variable 'self' (line 948)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 948, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestSyHe.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestSyHe' (line 947)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 0), 'TestSyHe', TestSyHe)
# Declaration of the 'TestTRMM' class

class TestTRMM(object, ):
    str_52730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 987, 4), 'str', 'Quick and simple tests for dtrmm.')

    @norecursion
    def setup_method(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'setup_method'
        module_type_store = module_type_store.open_function_context('setup_method', 988, 4, False)
        # Assigning a type to the variable 'self' (line 989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestTRMM.setup_method.__dict__.__setitem__('stypy_localization', localization)
        TestTRMM.setup_method.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestTRMM.setup_method.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestTRMM.setup_method.__dict__.__setitem__('stypy_function_name', 'TestTRMM.setup_method')
        TestTRMM.setup_method.__dict__.__setitem__('stypy_param_names_list', [])
        TestTRMM.setup_method.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestTRMM.setup_method.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestTRMM.setup_method.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestTRMM.setup_method.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestTRMM.setup_method.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestTRMM.setup_method.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestTRMM.setup_method', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'setup_method', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'setup_method(...)' code ##################

        
        # Assigning a Call to a Attribute (line 989):
        
        # Assigning a Call to a Attribute (line 989):
        
        # Call to array(...): (line 989)
        # Processing the call arguments (line 989)
        
        # Obtaining an instance of the builtin type 'list' (line 989)
        list_52733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 989)
        # Adding element type (line 989)
        
        # Obtaining an instance of the builtin type 'list' (line 989)
        list_52734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 989)
        # Adding element type (line 989)
        float_52735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 27), list_52734, float_52735)
        # Adding element type (line 989)
        float_52736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 27), list_52734, float_52736)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 26), list_52733, list_52734)
        # Adding element type (line 989)
        
        # Obtaining an instance of the builtin type 'list' (line 990)
        list_52737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 990)
        # Adding element type (line 990)
        float_52738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 990, 27), list_52737, float_52738)
        # Adding element type (line 990)
        float_52739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 990, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 990, 27), list_52737, float_52739)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 989, 26), list_52733, list_52737)
        
        # Processing the call keyword arguments (line 989)
        kwargs_52740 = {}
        # Getting the type of 'np' (line 989)
        np_52731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 989)
        array_52732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 17), np_52731, 'array')
        # Calling array(args, kwargs) (line 989)
        array_call_result_52741 = invoke(stypy.reporting.localization.Localization(__file__, 989, 17), array_52732, *[list_52733], **kwargs_52740)
        
        # Getting the type of 'self' (line 989)
        self_52742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'self')
        # Setting the type of the member 'a' of a type (line 989)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 8), self_52742, 'a', array_call_result_52741)
        
        # Assigning a Call to a Attribute (line 991):
        
        # Assigning a Call to a Attribute (line 991):
        
        # Call to array(...): (line 991)
        # Processing the call arguments (line 991)
        
        # Obtaining an instance of the builtin type 'list' (line 991)
        list_52745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 991)
        # Adding element type (line 991)
        
        # Obtaining an instance of the builtin type 'list' (line 991)
        list_52746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 991)
        # Adding element type (line 991)
        float_52747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 27), list_52746, float_52747)
        # Adding element type (line 991)
        float_52748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 27), list_52746, float_52748)
        # Adding element type (line 991)
        float_52749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 27), list_52746, float_52749)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 26), list_52745, list_52746)
        # Adding element type (line 991)
        
        # Obtaining an instance of the builtin type 'list' (line 992)
        list_52750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 992)
        # Adding element type (line 992)
        float_52751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 28), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 27), list_52750, float_52751)
        # Adding element type (line 992)
        float_52752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 27), list_52750, float_52752)
        # Adding element type (line 992)
        float_52753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 36), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 992, 27), list_52750, float_52753)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 26), list_52745, list_52750)
        
        # Processing the call keyword arguments (line 991)
        kwargs_52754 = {}
        # Getting the type of 'np' (line 991)
        np_52743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 17), 'np', False)
        # Obtaining the member 'array' of a type (line 991)
        array_52744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 17), np_52743, 'array')
        # Calling array(args, kwargs) (line 991)
        array_call_result_52755 = invoke(stypy.reporting.localization.Localization(__file__, 991, 17), array_52744, *[list_52745], **kwargs_52754)
        
        # Getting the type of 'self' (line 991)
        self_52756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 8), 'self')
        # Setting the type of the member 'b' of a type (line 991)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 8), self_52756, 'b', array_call_result_52755)
        
        # ################# End of 'setup_method(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'setup_method' in the type store
        # Getting the type of 'stypy_return_type' (line 988)
        stypy_return_type_52757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52757)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'setup_method'
        return stypy_return_type_52757


    @norecursion
    def test_ab(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ab'
        module_type_store = module_type_store.open_function_context('test_ab', 994, 4, False)
        # Assigning a type to the variable 'self' (line 995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 995, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestTRMM.test_ab.__dict__.__setitem__('stypy_localization', localization)
        TestTRMM.test_ab.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestTRMM.test_ab.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestTRMM.test_ab.__dict__.__setitem__('stypy_function_name', 'TestTRMM.test_ab')
        TestTRMM.test_ab.__dict__.__setitem__('stypy_param_names_list', [])
        TestTRMM.test_ab.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestTRMM.test_ab.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestTRMM.test_ab.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestTRMM.test_ab.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestTRMM.test_ab.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestTRMM.test_ab.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestTRMM.test_ab', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ab', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ab(...)' code ##################

        
        # Assigning a Call to a Name (line 995):
        
        # Assigning a Call to a Name (line 995):
        
        # Call to getattr(...): (line 995)
        # Processing the call arguments (line 995)
        # Getting the type of 'fblas' (line 995)
        fblas_52759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 20), 'fblas', False)
        str_52760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 27), 'str', 'dtrmm')
        # Getting the type of 'None' (line 995)
        None_52761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 36), 'None', False)
        # Processing the call keyword arguments (line 995)
        kwargs_52762 = {}
        # Getting the type of 'getattr' (line 995)
        getattr_52758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 12), 'getattr', False)
        # Calling getattr(args, kwargs) (line 995)
        getattr_call_result_52763 = invoke(stypy.reporting.localization.Localization(__file__, 995, 12), getattr_52758, *[fblas_52759, str_52760, None_52761], **kwargs_52762)
        
        # Assigning a type to the variable 'f' (line 995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 995, 8), 'f', getattr_call_result_52763)
        
        # Type idiom detected: calculating its left and rigth part (line 996)
        # Getting the type of 'f' (line 996)
        f_52764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'f')
        # Getting the type of 'None' (line 996)
        None_52765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 20), 'None')
        
        (may_be_52766, more_types_in_union_52767) = may_not_be_none(f_52764, None_52765)

        if may_be_52766:

            if more_types_in_union_52767:
                # Runtime conditional SSA (line 996)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 997):
            
            # Assigning a Call to a Name (line 997):
            
            # Call to f(...): (line 997)
            # Processing the call arguments (line 997)
            float_52769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 23), 'float')
            # Getting the type of 'self' (line 997)
            self_52770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 27), 'self', False)
            # Obtaining the member 'a' of a type (line 997)
            a_52771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 997, 27), self_52770, 'a')
            # Getting the type of 'self' (line 997)
            self_52772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 35), 'self', False)
            # Obtaining the member 'b' of a type (line 997)
            b_52773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 997, 35), self_52772, 'b')
            # Processing the call keyword arguments (line 997)
            kwargs_52774 = {}
            # Getting the type of 'f' (line 997)
            f_52768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 21), 'f', False)
            # Calling f(args, kwargs) (line 997)
            f_call_result_52775 = invoke(stypy.reporting.localization.Localization(__file__, 997, 21), f_52768, *[float_52769, a_52771, b_52773], **kwargs_52774)
            
            # Assigning a type to the variable 'result' (line 997)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 997, 12), 'result', f_call_result_52775)
            
            # Assigning a Call to a Name (line 999):
            
            # Assigning a Call to a Name (line 999):
            
            # Call to array(...): (line 999)
            # Processing the call arguments (line 999)
            
            # Obtaining an instance of the builtin type 'list' (line 999)
            list_52778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 32), 'list')
            # Adding type elements to the builtin type 'list' instance (line 999)
            # Adding element type (line 999)
            
            # Obtaining an instance of the builtin type 'list' (line 999)
            list_52779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 33), 'list')
            # Adding type elements to the builtin type 'list' instance (line 999)
            # Adding element type (line 999)
            float_52780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 34), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 33), list_52779, float_52780)
            # Adding element type (line 999)
            float_52781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 39), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 33), list_52779, float_52781)
            # Adding element type (line 999)
            float_52782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 44), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 33), list_52779, float_52782)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 32), list_52778, list_52779)
            # Adding element type (line 999)
            
            # Obtaining an instance of the builtin type 'list' (line 1000)
            list_52783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 33), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1000)
            # Adding element type (line 1000)
            float_52784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 34), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 33), list_52783, float_52784)
            # Adding element type (line 1000)
            float_52785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 38), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 33), list_52783, float_52785)
            # Adding element type (line 1000)
            float_52786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 42), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1000, 33), list_52783, float_52786)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 999, 32), list_52778, list_52783)
            
            # Processing the call keyword arguments (line 999)
            kwargs_52787 = {}
            # Getting the type of 'np' (line 999)
            np_52776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 23), 'np', False)
            # Obtaining the member 'array' of a type (line 999)
            array_52777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 23), np_52776, 'array')
            # Calling array(args, kwargs) (line 999)
            array_call_result_52788 = invoke(stypy.reporting.localization.Localization(__file__, 999, 23), array_52777, *[list_52778], **kwargs_52787)
            
            # Assigning a type to the variable 'expected' (line 999)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 999, 12), 'expected', array_call_result_52788)
            
            # Call to assert_array_almost_equal(...): (line 1001)
            # Processing the call arguments (line 1001)
            # Getting the type of 'result' (line 1001)
            result_52790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 38), 'result', False)
            # Getting the type of 'expected' (line 1001)
            expected_52791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 46), 'expected', False)
            # Processing the call keyword arguments (line 1001)
            kwargs_52792 = {}
            # Getting the type of 'assert_array_almost_equal' (line 1001)
            assert_array_almost_equal_52789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 12), 'assert_array_almost_equal', False)
            # Calling assert_array_almost_equal(args, kwargs) (line 1001)
            assert_array_almost_equal_call_result_52793 = invoke(stypy.reporting.localization.Localization(__file__, 1001, 12), assert_array_almost_equal_52789, *[result_52790, expected_52791], **kwargs_52792)
            

            if more_types_in_union_52767:
                # SSA join for if statement (line 996)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'test_ab(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ab' in the type store
        # Getting the type of 'stypy_return_type' (line 994)
        stypy_return_type_52794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52794)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ab'
        return stypy_return_type_52794


    @norecursion
    def test_ab_lower(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_ab_lower'
        module_type_store = module_type_store.open_function_context('test_ab_lower', 1003, 4, False)
        # Assigning a type to the variable 'self' (line 1004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_localization', localization)
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_function_name', 'TestTRMM.test_ab_lower')
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_param_names_list', [])
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestTRMM.test_ab_lower.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestTRMM.test_ab_lower', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_ab_lower', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_ab_lower(...)' code ##################

        
        # Assigning a Call to a Name (line 1004):
        
        # Assigning a Call to a Name (line 1004):
        
        # Call to getattr(...): (line 1004)
        # Processing the call arguments (line 1004)
        # Getting the type of 'fblas' (line 1004)
        fblas_52796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 20), 'fblas', False)
        str_52797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 27), 'str', 'dtrmm')
        # Getting the type of 'None' (line 1004)
        None_52798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 36), 'None', False)
        # Processing the call keyword arguments (line 1004)
        kwargs_52799 = {}
        # Getting the type of 'getattr' (line 1004)
        getattr_52795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 12), 'getattr', False)
        # Calling getattr(args, kwargs) (line 1004)
        getattr_call_result_52800 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 12), getattr_52795, *[fblas_52796, str_52797, None_52798], **kwargs_52799)
        
        # Assigning a type to the variable 'f' (line 1004)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1004, 8), 'f', getattr_call_result_52800)
        
        # Type idiom detected: calculating its left and rigth part (line 1005)
        # Getting the type of 'f' (line 1005)
        f_52801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'f')
        # Getting the type of 'None' (line 1005)
        None_52802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 20), 'None')
        
        (may_be_52803, more_types_in_union_52804) = may_not_be_none(f_52801, None_52802)

        if may_be_52803:

            if more_types_in_union_52804:
                # Runtime conditional SSA (line 1005)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1006):
            
            # Assigning a Call to a Name (line 1006):
            
            # Call to f(...): (line 1006)
            # Processing the call arguments (line 1006)
            float_52806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 23), 'float')
            # Getting the type of 'self' (line 1006)
            self_52807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 27), 'self', False)
            # Obtaining the member 'a' of a type (line 1006)
            a_52808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1006, 27), self_52807, 'a')
            # Getting the type of 'self' (line 1006)
            self_52809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 35), 'self', False)
            # Obtaining the member 'b' of a type (line 1006)
            b_52810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1006, 35), self_52809, 'b')
            # Processing the call keyword arguments (line 1006)
            # Getting the type of 'True' (line 1006)
            True_52811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 49), 'True', False)
            keyword_52812 = True_52811
            kwargs_52813 = {'lower': keyword_52812}
            # Getting the type of 'f' (line 1006)
            f_52805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 21), 'f', False)
            # Calling f(args, kwargs) (line 1006)
            f_call_result_52814 = invoke(stypy.reporting.localization.Localization(__file__, 1006, 21), f_52805, *[float_52806, a_52808, b_52810], **kwargs_52813)
            
            # Assigning a type to the variable 'result' (line 1006)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1006, 12), 'result', f_call_result_52814)
            
            # Assigning a Call to a Name (line 1007):
            
            # Assigning a Call to a Name (line 1007):
            
            # Call to array(...): (line 1007)
            # Processing the call arguments (line 1007)
            
            # Obtaining an instance of the builtin type 'list' (line 1007)
            list_52817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 32), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1007)
            # Adding element type (line 1007)
            
            # Obtaining an instance of the builtin type 'list' (line 1007)
            list_52818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 33), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1007)
            # Adding element type (line 1007)
            float_52819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 34), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1007, 33), list_52818, float_52819)
            # Adding element type (line 1007)
            float_52820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 38), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1007, 33), list_52818, float_52820)
            # Adding element type (line 1007)
            float_52821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 42), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1007, 33), list_52818, float_52821)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1007, 32), list_52817, list_52818)
            # Adding element type (line 1007)
            
            # Obtaining an instance of the builtin type 'list' (line 1008)
            list_52822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 33), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1008)
            # Adding element type (line 1008)
            float_52823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 34), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 33), list_52822, float_52823)
            # Adding element type (line 1008)
            float_52824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 39), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 33), list_52822, float_52824)
            # Adding element type (line 1008)
            float_52825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 44), 'float')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 33), list_52822, float_52825)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1007, 32), list_52817, list_52822)
            
            # Processing the call keyword arguments (line 1007)
            kwargs_52826 = {}
            # Getting the type of 'np' (line 1007)
            np_52815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 23), 'np', False)
            # Obtaining the member 'array' of a type (line 1007)
            array_52816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 23), np_52815, 'array')
            # Calling array(args, kwargs) (line 1007)
            array_call_result_52827 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 23), array_52816, *[list_52817], **kwargs_52826)
            
            # Assigning a type to the variable 'expected' (line 1007)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1007, 12), 'expected', array_call_result_52827)
            
            # Call to assert_array_almost_equal(...): (line 1009)
            # Processing the call arguments (line 1009)
            # Getting the type of 'result' (line 1009)
            result_52829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 38), 'result', False)
            # Getting the type of 'expected' (line 1009)
            expected_52830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 46), 'expected', False)
            # Processing the call keyword arguments (line 1009)
            kwargs_52831 = {}
            # Getting the type of 'assert_array_almost_equal' (line 1009)
            assert_array_almost_equal_52828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 12), 'assert_array_almost_equal', False)
            # Calling assert_array_almost_equal(args, kwargs) (line 1009)
            assert_array_almost_equal_call_result_52832 = invoke(stypy.reporting.localization.Localization(__file__, 1009, 12), assert_array_almost_equal_52828, *[result_52829, expected_52830], **kwargs_52831)
            

            if more_types_in_union_52804:
                # SSA join for if statement (line 1005)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'test_ab_lower(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_ab_lower' in the type store
        # Getting the type of 'stypy_return_type' (line 1003)
        stypy_return_type_52833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52833)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_ab_lower'
        return stypy_return_type_52833


    @norecursion
    def test_b_overwrites(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_b_overwrites'
        module_type_store = module_type_store.open_function_context('test_b_overwrites', 1011, 4, False)
        # Assigning a type to the variable 'self' (line 1012)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1012, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_localization', localization)
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_function_name', 'TestTRMM.test_b_overwrites')
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_param_names_list', [])
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestTRMM.test_b_overwrites.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestTRMM.test_b_overwrites', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_b_overwrites', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_b_overwrites(...)' code ##################

        
        # Assigning a Call to a Name (line 1014):
        
        # Assigning a Call to a Name (line 1014):
        
        # Call to getattr(...): (line 1014)
        # Processing the call arguments (line 1014)
        # Getting the type of 'fblas' (line 1014)
        fblas_52835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 20), 'fblas', False)
        str_52836 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, 27), 'str', 'dtrmm')
        # Getting the type of 'None' (line 1014)
        None_52837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 36), 'None', False)
        # Processing the call keyword arguments (line 1014)
        kwargs_52838 = {}
        # Getting the type of 'getattr' (line 1014)
        getattr_52834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 12), 'getattr', False)
        # Calling getattr(args, kwargs) (line 1014)
        getattr_call_result_52839 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 12), getattr_52834, *[fblas_52835, str_52836, None_52837], **kwargs_52838)
        
        # Assigning a type to the variable 'f' (line 1014)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1014, 8), 'f', getattr_call_result_52839)
        
        # Type idiom detected: calculating its left and rigth part (line 1015)
        # Getting the type of 'f' (line 1015)
        f_52840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 8), 'f')
        # Getting the type of 'None' (line 1015)
        None_52841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 20), 'None')
        
        (may_be_52842, more_types_in_union_52843) = may_not_be_none(f_52840, None_52841)

        if may_be_52842:

            if more_types_in_union_52843:
                # Runtime conditional SSA (line 1015)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            
            # Obtaining an instance of the builtin type 'list' (line 1016)
            list_52844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 26), 'list')
            # Adding type elements to the builtin type 'list' instance (line 1016)
            # Adding element type (line 1016)
            # Getting the type of 'True' (line 1016)
            True_52845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 27), 'True')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 26), list_52844, True_52845)
            # Adding element type (line 1016)
            # Getting the type of 'False' (line 1016)
            False_52846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 33), 'False')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1016, 26), list_52844, False_52846)
            
            # Testing the type of a for loop iterable (line 1016)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1016, 12), list_52844)
            # Getting the type of the for loop variable (line 1016)
            for_loop_var_52847 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1016, 12), list_52844)
            # Assigning a type to the variable 'overwr' (line 1016)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1016, 12), 'overwr', for_loop_var_52847)
            # SSA begins for a for statement (line 1016)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 1017):
            
            # Assigning a Call to a Name (line 1017):
            
            # Call to copy(...): (line 1017)
            # Processing the call keyword arguments (line 1017)
            kwargs_52851 = {}
            # Getting the type of 'self' (line 1017)
            self_52848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 24), 'self', False)
            # Obtaining the member 'b' of a type (line 1017)
            b_52849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1017, 24), self_52848, 'b')
            # Obtaining the member 'copy' of a type (line 1017)
            copy_52850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1017, 24), b_52849, 'copy')
            # Calling copy(args, kwargs) (line 1017)
            copy_call_result_52852 = invoke(stypy.reporting.localization.Localization(__file__, 1017, 24), copy_52850, *[], **kwargs_52851)
            
            # Assigning a type to the variable 'bcopy' (line 1017)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 16), 'bcopy', copy_call_result_52852)
            
            # Assigning a Call to a Name (line 1018):
            
            # Assigning a Call to a Name (line 1018):
            
            # Call to f(...): (line 1018)
            # Processing the call arguments (line 1018)
            float_52854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1018, 27), 'float')
            # Getting the type of 'self' (line 1018)
            self_52855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 31), 'self', False)
            # Obtaining the member 'a' of a type (line 1018)
            a_52856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1018, 31), self_52855, 'a')
            # Getting the type of 'bcopy' (line 1018)
            bcopy_52857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 39), 'bcopy', False)
            # Processing the call keyword arguments (line 1018)
            # Getting the type of 'overwr' (line 1018)
            overwr_52858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 58), 'overwr', False)
            keyword_52859 = overwr_52858
            kwargs_52860 = {'overwrite_b': keyword_52859}
            # Getting the type of 'f' (line 1018)
            f_52853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 25), 'f', False)
            # Calling f(args, kwargs) (line 1018)
            f_call_result_52861 = invoke(stypy.reporting.localization.Localization(__file__, 1018, 25), f_52853, *[float_52854, a_52856, bcopy_52857], **kwargs_52860)
            
            # Assigning a type to the variable 'result' (line 1018)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1018, 16), 'result', f_call_result_52861)
            
            # Call to assert_(...): (line 1020)
            # Processing the call arguments (line 1020)
            
            # Evaluating a boolean operation
            
            # Getting the type of 'bcopy' (line 1020)
            bcopy_52863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 24), 'bcopy', False)
            # Obtaining the member 'flags' of a type (line 1020)
            flags_52864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1020, 24), bcopy_52863, 'flags')
            # Obtaining the member 'f_contiguous' of a type (line 1020)
            f_contiguous_52865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1020, 24), flags_52864, 'f_contiguous')
            # Getting the type of 'False' (line 1020)
            False_52866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 52), 'False', False)
            # Applying the binary operator 'is' (line 1020)
            result_is__52867 = python_operator(stypy.reporting.localization.Localization(__file__, 1020, 24), 'is', f_contiguous_52865, False_52866)
            
            
            
            # Call to may_share_memory(...): (line 1021)
            # Processing the call arguments (line 1021)
            # Getting the type of 'bcopy' (line 1021)
            bcopy_52870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 44), 'bcopy', False)
            # Getting the type of 'result' (line 1021)
            result_52871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 51), 'result', False)
            # Processing the call keyword arguments (line 1021)
            kwargs_52872 = {}
            # Getting the type of 'np' (line 1021)
            np_52868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 24), 'np', False)
            # Obtaining the member 'may_share_memory' of a type (line 1021)
            may_share_memory_52869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1021, 24), np_52868, 'may_share_memory')
            # Calling may_share_memory(args, kwargs) (line 1021)
            may_share_memory_call_result_52873 = invoke(stypy.reporting.localization.Localization(__file__, 1021, 24), may_share_memory_52869, *[bcopy_52870, result_52871], **kwargs_52872)
            
            # Getting the type of 'False' (line 1021)
            False_52874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 62), 'False', False)
            # Applying the binary operator 'is' (line 1021)
            result_is__52875 = python_operator(stypy.reporting.localization.Localization(__file__, 1021, 24), 'is', may_share_memory_call_result_52873, False_52874)
            
            # Applying the binary operator 'and' (line 1020)
            result_and_keyword_52876 = python_operator(stypy.reporting.localization.Localization(__file__, 1020, 24), 'and', result_is__52867, result_is__52875)
            
            # Processing the call keyword arguments (line 1020)
            kwargs_52877 = {}
            # Getting the type of 'assert_' (line 1020)
            assert__52862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 16), 'assert_', False)
            # Calling assert_(args, kwargs) (line 1020)
            assert__call_result_52878 = invoke(stypy.reporting.localization.Localization(__file__, 1020, 16), assert__52862, *[result_and_keyword_52876], **kwargs_52877)
            
            
            # Call to assert_equal(...): (line 1022)
            # Processing the call arguments (line 1022)
            # Getting the type of 'bcopy' (line 1022)
            bcopy_52880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 29), 'bcopy', False)
            # Getting the type of 'self' (line 1022)
            self_52881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 36), 'self', False)
            # Obtaining the member 'b' of a type (line 1022)
            b_52882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 36), self_52881, 'b')
            # Processing the call keyword arguments (line 1022)
            kwargs_52883 = {}
            # Getting the type of 'assert_equal' (line 1022)
            assert_equal_52879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 16), 'assert_equal', False)
            # Calling assert_equal(args, kwargs) (line 1022)
            assert_equal_call_result_52884 = invoke(stypy.reporting.localization.Localization(__file__, 1022, 16), assert_equal_52879, *[bcopy_52880, b_52882], **kwargs_52883)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()
            
            
            # Assigning a Call to a Name (line 1024):
            
            # Assigning a Call to a Name (line 1024):
            
            # Call to asfortranarray(...): (line 1024)
            # Processing the call arguments (line 1024)
            
            # Call to copy(...): (line 1024)
            # Processing the call keyword arguments (line 1024)
            kwargs_52890 = {}
            # Getting the type of 'self' (line 1024)
            self_52887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 38), 'self', False)
            # Obtaining the member 'b' of a type (line 1024)
            b_52888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1024, 38), self_52887, 'b')
            # Obtaining the member 'copy' of a type (line 1024)
            copy_52889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1024, 38), b_52888, 'copy')
            # Calling copy(args, kwargs) (line 1024)
            copy_call_result_52891 = invoke(stypy.reporting.localization.Localization(__file__, 1024, 38), copy_52889, *[], **kwargs_52890)
            
            # Processing the call keyword arguments (line 1024)
            kwargs_52892 = {}
            # Getting the type of 'np' (line 1024)
            np_52885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 20), 'np', False)
            # Obtaining the member 'asfortranarray' of a type (line 1024)
            asfortranarray_52886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1024, 20), np_52885, 'asfortranarray')
            # Calling asfortranarray(args, kwargs) (line 1024)
            asfortranarray_call_result_52893 = invoke(stypy.reporting.localization.Localization(__file__, 1024, 20), asfortranarray_52886, *[copy_call_result_52891], **kwargs_52892)
            
            # Assigning a type to the variable 'bcopy' (line 1024)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1024, 12), 'bcopy', asfortranarray_call_result_52893)
            
            # Assigning a Call to a Name (line 1025):
            
            # Assigning a Call to a Name (line 1025):
            
            # Call to f(...): (line 1025)
            # Processing the call arguments (line 1025)
            float_52895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 23), 'float')
            # Getting the type of 'self' (line 1025)
            self_52896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 27), 'self', False)
            # Obtaining the member 'a' of a type (line 1025)
            a_52897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1025, 27), self_52896, 'a')
            # Getting the type of 'bcopy' (line 1025)
            bcopy_52898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 35), 'bcopy', False)
            # Processing the call keyword arguments (line 1025)
            # Getting the type of 'True' (line 1025)
            True_52899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 54), 'True', False)
            keyword_52900 = True_52899
            kwargs_52901 = {'overwrite_b': keyword_52900}
            # Getting the type of 'f' (line 1025)
            f_52894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 21), 'f', False)
            # Calling f(args, kwargs) (line 1025)
            f_call_result_52902 = invoke(stypy.reporting.localization.Localization(__file__, 1025, 21), f_52894, *[float_52895, a_52897, bcopy_52898], **kwargs_52901)
            
            # Assigning a type to the variable 'result' (line 1025)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 12), 'result', f_call_result_52902)
            
            # Call to assert_(...): (line 1026)
            # Processing the call arguments (line 1026)
            
            # Evaluating a boolean operation
            
            # Getting the type of 'bcopy' (line 1026)
            bcopy_52904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 20), 'bcopy', False)
            # Obtaining the member 'flags' of a type (line 1026)
            flags_52905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 20), bcopy_52904, 'flags')
            # Obtaining the member 'f_contiguous' of a type (line 1026)
            f_contiguous_52906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 20), flags_52905, 'f_contiguous')
            # Getting the type of 'True' (line 1026)
            True_52907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 48), 'True', False)
            # Applying the binary operator 'is' (line 1026)
            result_is__52908 = python_operator(stypy.reporting.localization.Localization(__file__, 1026, 20), 'is', f_contiguous_52906, True_52907)
            
            
            
            # Call to may_share_memory(...): (line 1027)
            # Processing the call arguments (line 1027)
            # Getting the type of 'bcopy' (line 1027)
            bcopy_52911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 40), 'bcopy', False)
            # Getting the type of 'result' (line 1027)
            result_52912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 47), 'result', False)
            # Processing the call keyword arguments (line 1027)
            kwargs_52913 = {}
            # Getting the type of 'np' (line 1027)
            np_52909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 20), 'np', False)
            # Obtaining the member 'may_share_memory' of a type (line 1027)
            may_share_memory_52910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 20), np_52909, 'may_share_memory')
            # Calling may_share_memory(args, kwargs) (line 1027)
            may_share_memory_call_result_52914 = invoke(stypy.reporting.localization.Localization(__file__, 1027, 20), may_share_memory_52910, *[bcopy_52911, result_52912], **kwargs_52913)
            
            # Getting the type of 'True' (line 1027)
            True_52915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 58), 'True', False)
            # Applying the binary operator 'is' (line 1027)
            result_is__52916 = python_operator(stypy.reporting.localization.Localization(__file__, 1027, 20), 'is', may_share_memory_call_result_52914, True_52915)
            
            # Applying the binary operator 'and' (line 1026)
            result_and_keyword_52917 = python_operator(stypy.reporting.localization.Localization(__file__, 1026, 20), 'and', result_is__52908, result_is__52916)
            
            # Processing the call keyword arguments (line 1026)
            kwargs_52918 = {}
            # Getting the type of 'assert_' (line 1026)
            assert__52903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 12), 'assert_', False)
            # Calling assert_(args, kwargs) (line 1026)
            assert__call_result_52919 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 12), assert__52903, *[result_and_keyword_52917], **kwargs_52918)
            
            
            # Call to assert_array_almost_equal(...): (line 1028)
            # Processing the call arguments (line 1028)
            # Getting the type of 'bcopy' (line 1028)
            bcopy_52921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 38), 'bcopy', False)
            # Getting the type of 'result' (line 1028)
            result_52922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 45), 'result', False)
            # Processing the call keyword arguments (line 1028)
            kwargs_52923 = {}
            # Getting the type of 'assert_array_almost_equal' (line 1028)
            assert_array_almost_equal_52920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 12), 'assert_array_almost_equal', False)
            # Calling assert_array_almost_equal(args, kwargs) (line 1028)
            assert_array_almost_equal_call_result_52924 = invoke(stypy.reporting.localization.Localization(__file__, 1028, 12), assert_array_almost_equal_52920, *[bcopy_52921, result_52922], **kwargs_52923)
            

            if more_types_in_union_52843:
                # SSA join for if statement (line 1015)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'test_b_overwrites(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_b_overwrites' in the type store
        # Getting the type of 'stypy_return_type' (line 1011)
        stypy_return_type_52925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_52925)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_b_overwrites'
        return stypy_return_type_52925


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 986, 0, False)
        # Assigning a type to the variable 'self' (line 987)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 987, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestTRMM.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestTRMM' (line 986)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 986, 0), 'TestTRMM', TestTRMM)

@norecursion
def test_trsm(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_trsm'
    module_type_store = module_type_store.open_function_context('test_trsm', 1031, 0, False)
    
    # Passed parameters checking function
    test_trsm.stypy_localization = localization
    test_trsm.stypy_type_of_self = None
    test_trsm.stypy_type_store = module_type_store
    test_trsm.stypy_function_name = 'test_trsm'
    test_trsm.stypy_param_names_list = []
    test_trsm.stypy_varargs_param_name = None
    test_trsm.stypy_kwargs_param_name = None
    test_trsm.stypy_call_defaults = defaults
    test_trsm.stypy_call_varargs = varargs
    test_trsm.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_trsm', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_trsm', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_trsm(...)' code ##################

    
    # Call to seed(...): (line 1032)
    # Processing the call arguments (line 1032)
    int_52927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1032, 9), 'int')
    # Processing the call keyword arguments (line 1032)
    kwargs_52928 = {}
    # Getting the type of 'seed' (line 1032)
    seed_52926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 4), 'seed', False)
    # Calling seed(args, kwargs) (line 1032)
    seed_call_result_52929 = invoke(stypy.reporting.localization.Localization(__file__, 1032, 4), seed_52926, *[int_52927], **kwargs_52928)
    
    
    
    # Call to enumerate(...): (line 1033)
    # Processing the call arguments (line 1033)
    # Getting the type of 'DTYPES' (line 1033)
    DTYPES_52931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 32), 'DTYPES', False)
    # Processing the call keyword arguments (line 1033)
    kwargs_52932 = {}
    # Getting the type of 'enumerate' (line 1033)
    enumerate_52930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 22), 'enumerate', False)
    # Calling enumerate(args, kwargs) (line 1033)
    enumerate_call_result_52933 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 22), enumerate_52930, *[DTYPES_52931], **kwargs_52932)
    
    # Testing the type of a for loop iterable (line 1033)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1033, 4), enumerate_call_result_52933)
    # Getting the type of the for loop variable (line 1033)
    for_loop_var_52934 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1033, 4), enumerate_call_result_52933)
    # Assigning a type to the variable 'ind' (line 1033)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1033, 4), 'ind', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 4), for_loop_var_52934))
    # Assigning a type to the variable 'dtype' (line 1033)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1033, 4), 'dtype', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 4), for_loop_var_52934))
    # SSA begins for a for statement (line 1033)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a BinOp to a Name (line 1034):
    
    # Assigning a BinOp to a Name (line 1034):
    
    # Call to finfo(...): (line 1034)
    # Processing the call arguments (line 1034)
    # Getting the type of 'dtype' (line 1034)
    dtype_52937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 23), 'dtype', False)
    # Processing the call keyword arguments (line 1034)
    kwargs_52938 = {}
    # Getting the type of 'np' (line 1034)
    np_52935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 14), 'np', False)
    # Obtaining the member 'finfo' of a type (line 1034)
    finfo_52936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 14), np_52935, 'finfo')
    # Calling finfo(args, kwargs) (line 1034)
    finfo_call_result_52939 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 14), finfo_52936, *[dtype_52937], **kwargs_52938)
    
    # Obtaining the member 'eps' of a type (line 1034)
    eps_52940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 14), finfo_call_result_52939, 'eps')
    int_52941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1034, 34), 'int')
    # Applying the binary operator '*' (line 1034)
    result_mul_52942 = python_operator(stypy.reporting.localization.Localization(__file__, 1034, 14), '*', eps_52940, int_52941)
    
    # Assigning a type to the variable 'tol' (line 1034)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 8), 'tol', result_mul_52942)
    
    # Assigning a Call to a Tuple (line 1035):
    
    # Assigning a Subscript to a Name (line 1035):
    
    # Obtaining the type of the subscript
    int_52943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 8), 'int')
    
    # Call to get_blas_funcs(...): (line 1035)
    # Processing the call arguments (line 1035)
    
    # Obtaining an instance of the builtin type 'tuple' (line 1035)
    tuple_52945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 32), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1035)
    # Adding element type (line 1035)
    str_52946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 32), 'str', 'trsm')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1035, 32), tuple_52945, str_52946)
    
    # Processing the call keyword arguments (line 1035)
    # Getting the type of 'dtype' (line 1035)
    dtype_52947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 48), 'dtype', False)
    keyword_52948 = dtype_52947
    kwargs_52949 = {'dtype': keyword_52948}
    # Getting the type of 'get_blas_funcs' (line 1035)
    get_blas_funcs_52944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 16), 'get_blas_funcs', False)
    # Calling get_blas_funcs(args, kwargs) (line 1035)
    get_blas_funcs_call_result_52950 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 16), get_blas_funcs_52944, *[tuple_52945], **kwargs_52949)
    
    # Obtaining the member '__getitem__' of a type (line 1035)
    getitem___52951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1035, 8), get_blas_funcs_call_result_52950, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1035)
    subscript_call_result_52952 = invoke(stypy.reporting.localization.Localization(__file__, 1035, 8), getitem___52951, int_52943)
    
    # Assigning a type to the variable 'tuple_var_assignment_46700' (line 1035)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_46700', subscript_call_result_52952)
    
    # Assigning a Name to a Name (line 1035):
    # Getting the type of 'tuple_var_assignment_46700' (line 1035)
    tuple_var_assignment_46700_52953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'tuple_var_assignment_46700')
    # Assigning a type to the variable 'func' (line 1035)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1035, 8), 'func', tuple_var_assignment_46700_52953)
    
    # Assigning a Call to a Name (line 1038):
    
    # Assigning a Call to a Name (line 1038):
    
    # Call to astype(...): (line 1038)
    # Processing the call arguments (line 1038)
    # Getting the type of 'dtype' (line 1038)
    dtype_52960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 30), 'dtype', False)
    # Processing the call keyword arguments (line 1038)
    kwargs_52961 = {}
    
    # Call to rand(...): (line 1038)
    # Processing the call arguments (line 1038)
    int_52955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 17), 'int')
    int_52956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 20), 'int')
    # Processing the call keyword arguments (line 1038)
    kwargs_52957 = {}
    # Getting the type of 'rand' (line 1038)
    rand_52954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 12), 'rand', False)
    # Calling rand(args, kwargs) (line 1038)
    rand_call_result_52958 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 12), rand_52954, *[int_52955, int_52956], **kwargs_52957)
    
    # Obtaining the member 'astype' of a type (line 1038)
    astype_52959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 12), rand_call_result_52958, 'astype')
    # Calling astype(args, kwargs) (line 1038)
    astype_call_result_52962 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 12), astype_52959, *[dtype_52960], **kwargs_52961)
    
    # Assigning a type to the variable 'A' (line 1038)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1038, 8), 'A', astype_call_result_52962)
    
    # Assigning a Call to a Name (line 1039):
    
    # Assigning a Call to a Name (line 1039):
    
    # Call to astype(...): (line 1039)
    # Processing the call arguments (line 1039)
    # Getting the type of 'dtype' (line 1039)
    dtype_52969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 30), 'dtype', False)
    # Processing the call keyword arguments (line 1039)
    kwargs_52970 = {}
    
    # Call to rand(...): (line 1039)
    # Processing the call arguments (line 1039)
    int_52964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1039, 17), 'int')
    int_52965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1039, 20), 'int')
    # Processing the call keyword arguments (line 1039)
    kwargs_52966 = {}
    # Getting the type of 'rand' (line 1039)
    rand_52963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 12), 'rand', False)
    # Calling rand(args, kwargs) (line 1039)
    rand_call_result_52967 = invoke(stypy.reporting.localization.Localization(__file__, 1039, 12), rand_52963, *[int_52964, int_52965], **kwargs_52966)
    
    # Obtaining the member 'astype' of a type (line 1039)
    astype_52968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1039, 12), rand_call_result_52967, 'astype')
    # Calling astype(args, kwargs) (line 1039)
    astype_call_result_52971 = invoke(stypy.reporting.localization.Localization(__file__, 1039, 12), astype_52968, *[dtype_52969], **kwargs_52970)
    
    # Assigning a type to the variable 'B' (line 1039)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1039, 8), 'B', astype_call_result_52971)
    
    # Assigning a Call to a Name (line 1040):
    
    # Assigning a Call to a Name (line 1040):
    
    # Call to dtype(...): (line 1040)
    # Processing the call arguments (line 1040)
    int_52973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 22), 'int')
    # Processing the call keyword arguments (line 1040)
    kwargs_52974 = {}
    # Getting the type of 'dtype' (line 1040)
    dtype_52972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 16), 'dtype', False)
    # Calling dtype(args, kwargs) (line 1040)
    dtype_call_result_52975 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 16), dtype_52972, *[int_52973], **kwargs_52974)
    
    # Assigning a type to the variable 'alpha' (line 1040)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1040, 8), 'alpha', dtype_call_result_52975)
    
    # Call to assert_raises(...): (line 1041)
    # Processing the call arguments (line 1041)
    # Getting the type of 'Exception' (line 1041)
    Exception_52977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 22), 'Exception', False)
    # Getting the type of 'func' (line 1041)
    func_52978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 33), 'func', False)
    # Getting the type of 'alpha' (line 1041)
    alpha_52979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 39), 'alpha', False)
    # Getting the type of 'A' (line 1041)
    A_52980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 46), 'A', False)
    # Getting the type of 'B' (line 1041)
    B_52981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 49), 'B', False)
    # Processing the call keyword arguments (line 1041)
    kwargs_52982 = {}
    # Getting the type of 'assert_raises' (line 1041)
    assert_raises_52976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 8), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 1041)
    assert_raises_call_result_52983 = invoke(stypy.reporting.localization.Localization(__file__, 1041, 8), assert_raises_52976, *[Exception_52977, func_52978, alpha_52979, A_52980, B_52981], **kwargs_52982)
    
    
    # Call to assert_raises(...): (line 1042)
    # Processing the call arguments (line 1042)
    # Getting the type of 'Exception' (line 1042)
    Exception_52985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 22), 'Exception', False)
    # Getting the type of 'func' (line 1042)
    func_52986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 33), 'func', False)
    # Getting the type of 'alpha' (line 1042)
    alpha_52987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 39), 'alpha', False)
    # Getting the type of 'A' (line 1042)
    A_52988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 46), 'A', False)
    # Obtaining the member 'T' of a type (line 1042)
    T_52989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1042, 46), A_52988, 'T')
    # Getting the type of 'B' (line 1042)
    B_52990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 51), 'B', False)
    # Processing the call keyword arguments (line 1042)
    kwargs_52991 = {}
    # Getting the type of 'assert_raises' (line 1042)
    assert_raises_52984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 8), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 1042)
    assert_raises_call_result_52992 = invoke(stypy.reporting.localization.Localization(__file__, 1042, 8), assert_raises_52984, *[Exception_52985, func_52986, alpha_52987, T_52989, B_52990], **kwargs_52991)
    
    
    # Assigning a Num to a Name (line 1044):
    
    # Assigning a Num to a Name (line 1044):
    int_52993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1044, 12), 'int')
    # Assigning a type to the variable 'n' (line 1044)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1044, 8), 'n', int_52993)
    
    # Assigning a Num to a Name (line 1045):
    
    # Assigning a Num to a Name (line 1045):
    int_52994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 12), 'int')
    # Assigning a type to the variable 'm' (line 1045)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1045, 8), 'm', int_52994)
    
    # Assigning a Call to a Name (line 1046):
    
    # Assigning a Call to a Name (line 1046):
    
    # Call to dtype(...): (line 1046)
    # Processing the call arguments (line 1046)
    float_52996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1046, 22), 'float')
    # Processing the call keyword arguments (line 1046)
    kwargs_52997 = {}
    # Getting the type of 'dtype' (line 1046)
    dtype_52995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 16), 'dtype', False)
    # Calling dtype(args, kwargs) (line 1046)
    dtype_call_result_52998 = invoke(stypy.reporting.localization.Localization(__file__, 1046, 16), dtype_52995, *[float_52996], **kwargs_52997)
    
    # Assigning a type to the variable 'alpha' (line 1046)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1046, 8), 'alpha', dtype_call_result_52998)
    
    # Assigning a BinOp to a Name (line 1047):
    
    # Assigning a BinOp to a Name (line 1047):
    
    
    # Getting the type of 'ind' (line 1047)
    ind_52999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 27), 'ind')
    int_53000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 33), 'int')
    # Applying the binary operator '<' (line 1047)
    result_lt_53001 = python_operator(stypy.reporting.localization.Localization(__file__, 1047, 27), '<', ind_52999, int_53000)
    
    # Testing the type of an if expression (line 1047)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 1047, 13), result_lt_53001)
    # SSA begins for if expression (line 1047)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
    
    # Call to rand(...): (line 1047)
    # Processing the call arguments (line 1047)
    # Getting the type of 'm' (line 1047)
    m_53003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 18), 'm', False)
    # Getting the type of 'm' (line 1047)
    m_53004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 21), 'm', False)
    # Processing the call keyword arguments (line 1047)
    kwargs_53005 = {}
    # Getting the type of 'rand' (line 1047)
    rand_53002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 13), 'rand', False)
    # Calling rand(args, kwargs) (line 1047)
    rand_call_result_53006 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 13), rand_53002, *[m_53003, m_53004], **kwargs_53005)
    
    # SSA branch for the else part of an if expression (line 1047)
    module_type_store.open_ssa_branch('if expression else')
    
    # Call to rand(...): (line 1047)
    # Processing the call arguments (line 1047)
    # Getting the type of 'm' (line 1047)
    m_53008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 45), 'm', False)
    # Getting the type of 'm' (line 1047)
    m_53009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 48), 'm', False)
    # Processing the call keyword arguments (line 1047)
    kwargs_53010 = {}
    # Getting the type of 'rand' (line 1047)
    rand_53007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 40), 'rand', False)
    # Calling rand(args, kwargs) (line 1047)
    rand_call_result_53011 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 40), rand_53007, *[m_53008, m_53009], **kwargs_53010)
    
    
    # Call to rand(...): (line 1047)
    # Processing the call arguments (line 1047)
    # Getting the type of 'm' (line 1047)
    m_53013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 58), 'm', False)
    # Getting the type of 'm' (line 1047)
    m_53014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 61), 'm', False)
    # Processing the call keyword arguments (line 1047)
    kwargs_53015 = {}
    # Getting the type of 'rand' (line 1047)
    rand_53012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 53), 'rand', False)
    # Calling rand(args, kwargs) (line 1047)
    rand_call_result_53016 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 53), rand_53012, *[m_53013, m_53014], **kwargs_53015)
    
    complex_53017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 64), 'complex')
    # Applying the binary operator '*' (line 1047)
    result_mul_53018 = python_operator(stypy.reporting.localization.Localization(__file__, 1047, 53), '*', rand_call_result_53016, complex_53017)
    
    # Applying the binary operator '+' (line 1047)
    result_add_53019 = python_operator(stypy.reporting.localization.Localization(__file__, 1047, 40), '+', rand_call_result_53011, result_mul_53018)
    
    # SSA join for if expression (line 1047)
    module_type_store = module_type_store.join_ssa_context()
    if_exp_53020 = union_type.UnionType.add(rand_call_result_53006, result_add_53019)
    
    
    # Call to eye(...): (line 1047)
    # Processing the call arguments (line 1047)
    # Getting the type of 'm' (line 1047)
    m_53022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 74), 'm', False)
    # Processing the call keyword arguments (line 1047)
    kwargs_53023 = {}
    # Getting the type of 'eye' (line 1047)
    eye_53021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 70), 'eye', False)
    # Calling eye(args, kwargs) (line 1047)
    eye_call_result_53024 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 70), eye_53021, *[m_53022], **kwargs_53023)
    
    # Applying the binary operator '+' (line 1047)
    result_add_53025 = python_operator(stypy.reporting.localization.Localization(__file__, 1047, 12), '+', if_exp_53020, eye_call_result_53024)
    
    # Assigning a type to the variable 'A' (line 1047)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1047, 8), 'A', result_add_53025)
    
    # Assigning a Call to a Name (line 1048):
    
    # Assigning a Call to a Name (line 1048):
    
    # Call to astype(...): (line 1048)
    # Processing the call arguments (line 1048)
    # Getting the type of 'dtype' (line 1048)
    dtype_53028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 21), 'dtype', False)
    # Processing the call keyword arguments (line 1048)
    kwargs_53029 = {}
    # Getting the type of 'A' (line 1048)
    A_53026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 12), 'A', False)
    # Obtaining the member 'astype' of a type (line 1048)
    astype_53027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1048, 12), A_53026, 'astype')
    # Calling astype(args, kwargs) (line 1048)
    astype_call_result_53030 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 12), astype_53027, *[dtype_53028], **kwargs_53029)
    
    # Assigning a type to the variable 'A' (line 1048)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1048, 8), 'A', astype_call_result_53030)
    
    # Assigning a Call to a Name (line 1049):
    
    # Assigning a Call to a Name (line 1049):
    
    # Call to triu(...): (line 1049)
    # Processing the call arguments (line 1049)
    # Getting the type of 'A' (line 1049)
    A_53032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 18), 'A', False)
    # Processing the call keyword arguments (line 1049)
    kwargs_53033 = {}
    # Getting the type of 'triu' (line 1049)
    triu_53031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 13), 'triu', False)
    # Calling triu(args, kwargs) (line 1049)
    triu_call_result_53034 = invoke(stypy.reporting.localization.Localization(__file__, 1049, 13), triu_53031, *[A_53032], **kwargs_53033)
    
    # Assigning a type to the variable 'Au' (line 1049)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1049, 8), 'Au', triu_call_result_53034)
    
    # Assigning a Call to a Name (line 1050):
    
    # Assigning a Call to a Name (line 1050):
    
    # Call to tril(...): (line 1050)
    # Processing the call arguments (line 1050)
    # Getting the type of 'A' (line 1050)
    A_53036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 18), 'A', False)
    # Processing the call keyword arguments (line 1050)
    kwargs_53037 = {}
    # Getting the type of 'tril' (line 1050)
    tril_53035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 13), 'tril', False)
    # Calling tril(args, kwargs) (line 1050)
    tril_call_result_53038 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 13), tril_53035, *[A_53036], **kwargs_53037)
    
    # Assigning a type to the variable 'Al' (line 1050)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1050, 8), 'Al', tril_call_result_53038)
    
    # Assigning a Call to a Name (line 1051):
    
    # Assigning a Call to a Name (line 1051):
    
    # Call to astype(...): (line 1051)
    # Processing the call arguments (line 1051)
    # Getting the type of 'dtype' (line 1051)
    dtype_53045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 31), 'dtype', False)
    # Processing the call keyword arguments (line 1051)
    kwargs_53046 = {}
    
    # Call to rand(...): (line 1051)
    # Processing the call arguments (line 1051)
    # Getting the type of 'm' (line 1051)
    m_53040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 18), 'm', False)
    # Getting the type of 'n' (line 1051)
    n_53041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 21), 'n', False)
    # Processing the call keyword arguments (line 1051)
    kwargs_53042 = {}
    # Getting the type of 'rand' (line 1051)
    rand_53039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 13), 'rand', False)
    # Calling rand(args, kwargs) (line 1051)
    rand_call_result_53043 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 13), rand_53039, *[m_53040, n_53041], **kwargs_53042)
    
    # Obtaining the member 'astype' of a type (line 1051)
    astype_53044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 13), rand_call_result_53043, 'astype')
    # Calling astype(args, kwargs) (line 1051)
    astype_call_result_53047 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 13), astype_53044, *[dtype_53045], **kwargs_53046)
    
    # Assigning a type to the variable 'B1' (line 1051)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1051, 8), 'B1', astype_call_result_53047)
    
    # Assigning a Call to a Name (line 1052):
    
    # Assigning a Call to a Name (line 1052):
    
    # Call to astype(...): (line 1052)
    # Processing the call arguments (line 1052)
    # Getting the type of 'dtype' (line 1052)
    dtype_53054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 31), 'dtype', False)
    # Processing the call keyword arguments (line 1052)
    kwargs_53055 = {}
    
    # Call to rand(...): (line 1052)
    # Processing the call arguments (line 1052)
    # Getting the type of 'n' (line 1052)
    n_53049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 18), 'n', False)
    # Getting the type of 'm' (line 1052)
    m_53050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 21), 'm', False)
    # Processing the call keyword arguments (line 1052)
    kwargs_53051 = {}
    # Getting the type of 'rand' (line 1052)
    rand_53048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1052, 13), 'rand', False)
    # Calling rand(args, kwargs) (line 1052)
    rand_call_result_53052 = invoke(stypy.reporting.localization.Localization(__file__, 1052, 13), rand_53048, *[n_53049, m_53050], **kwargs_53051)
    
    # Obtaining the member 'astype' of a type (line 1052)
    astype_53053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1052, 13), rand_call_result_53052, 'astype')
    # Calling astype(args, kwargs) (line 1052)
    astype_call_result_53056 = invoke(stypy.reporting.localization.Localization(__file__, 1052, 13), astype_53053, *[dtype_53054], **kwargs_53055)
    
    # Assigning a type to the variable 'B2' (line 1052)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1052, 8), 'B2', astype_call_result_53056)
    
    # Assigning a Call to a Name (line 1054):
    
    # Assigning a Call to a Name (line 1054):
    
    # Call to func(...): (line 1054)
    # Processing the call keyword arguments (line 1054)
    # Getting the type of 'alpha' (line 1054)
    alpha_53058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 24), 'alpha', False)
    keyword_53059 = alpha_53058
    # Getting the type of 'A' (line 1054)
    A_53060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 33), 'A', False)
    keyword_53061 = A_53060
    # Getting the type of 'B1' (line 1054)
    B1_53062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 38), 'B1', False)
    keyword_53063 = B1_53062
    kwargs_53064 = {'a': keyword_53061, 'alpha': keyword_53059, 'b': keyword_53063}
    # Getting the type of 'func' (line 1054)
    func_53057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 13), 'func', False)
    # Calling func(args, kwargs) (line 1054)
    func_call_result_53065 = invoke(stypy.reporting.localization.Localization(__file__, 1054, 13), func_53057, *[], **kwargs_53064)
    
    # Assigning a type to the variable 'x1' (line 1054)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1054, 8), 'x1', func_call_result_53065)
    
    # Call to assert_equal(...): (line 1055)
    # Processing the call arguments (line 1055)
    # Getting the type of 'B1' (line 1055)
    B1_53067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 21), 'B1', False)
    # Obtaining the member 'shape' of a type (line 1055)
    shape_53068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1055, 21), B1_53067, 'shape')
    # Getting the type of 'x1' (line 1055)
    x1_53069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 31), 'x1', False)
    # Obtaining the member 'shape' of a type (line 1055)
    shape_53070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1055, 31), x1_53069, 'shape')
    # Processing the call keyword arguments (line 1055)
    kwargs_53071 = {}
    # Getting the type of 'assert_equal' (line 1055)
    assert_equal_53066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 8), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1055)
    assert_equal_call_result_53072 = invoke(stypy.reporting.localization.Localization(__file__, 1055, 8), assert_equal_53066, *[shape_53068, shape_53070], **kwargs_53071)
    
    
    # Assigning a Call to a Name (line 1056):
    
    # Assigning a Call to a Name (line 1056):
    
    # Call to solve(...): (line 1056)
    # Processing the call arguments (line 1056)
    # Getting the type of 'Au' (line 1056)
    Au_53074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 19), 'Au', False)
    # Getting the type of 'alpha' (line 1056)
    alpha_53075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 23), 'alpha', False)
    # Getting the type of 'B1' (line 1056)
    B1_53076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 29), 'B1', False)
    # Applying the binary operator '*' (line 1056)
    result_mul_53077 = python_operator(stypy.reporting.localization.Localization(__file__, 1056, 23), '*', alpha_53075, B1_53076)
    
    # Processing the call keyword arguments (line 1056)
    kwargs_53078 = {}
    # Getting the type of 'solve' (line 1056)
    solve_53073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 13), 'solve', False)
    # Calling solve(args, kwargs) (line 1056)
    solve_call_result_53079 = invoke(stypy.reporting.localization.Localization(__file__, 1056, 13), solve_53073, *[Au_53074, result_mul_53077], **kwargs_53078)
    
    # Assigning a type to the variable 'x2' (line 1056)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1056, 8), 'x2', solve_call_result_53079)
    
    # Call to assert_allclose(...): (line 1057)
    # Processing the call arguments (line 1057)
    # Getting the type of 'x1' (line 1057)
    x1_53081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 24), 'x1', False)
    # Getting the type of 'x2' (line 1057)
    x2_53082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 28), 'x2', False)
    # Processing the call keyword arguments (line 1057)
    # Getting the type of 'tol' (line 1057)
    tol_53083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 37), 'tol', False)
    keyword_53084 = tol_53083
    kwargs_53085 = {'atol': keyword_53084}
    # Getting the type of 'assert_allclose' (line 1057)
    assert_allclose_53080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 1057)
    assert_allclose_call_result_53086 = invoke(stypy.reporting.localization.Localization(__file__, 1057, 8), assert_allclose_53080, *[x1_53081, x2_53082], **kwargs_53085)
    
    
    # Assigning a Call to a Name (line 1059):
    
    # Assigning a Call to a Name (line 1059):
    
    # Call to func(...): (line 1059)
    # Processing the call keyword arguments (line 1059)
    # Getting the type of 'alpha' (line 1059)
    alpha_53088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 24), 'alpha', False)
    keyword_53089 = alpha_53088
    # Getting the type of 'A' (line 1059)
    A_53090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 33), 'A', False)
    keyword_53091 = A_53090
    # Getting the type of 'B1' (line 1059)
    B1_53092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 38), 'B1', False)
    keyword_53093 = B1_53092
    int_53094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1059, 50), 'int')
    keyword_53095 = int_53094
    kwargs_53096 = {'a': keyword_53091, 'alpha': keyword_53089, 'b': keyword_53093, 'trans_a': keyword_53095}
    # Getting the type of 'func' (line 1059)
    func_53087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 13), 'func', False)
    # Calling func(args, kwargs) (line 1059)
    func_call_result_53097 = invoke(stypy.reporting.localization.Localization(__file__, 1059, 13), func_53087, *[], **kwargs_53096)
    
    # Assigning a type to the variable 'x1' (line 1059)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1059, 8), 'x1', func_call_result_53097)
    
    # Assigning a Call to a Name (line 1060):
    
    # Assigning a Call to a Name (line 1060):
    
    # Call to solve(...): (line 1060)
    # Processing the call arguments (line 1060)
    # Getting the type of 'Au' (line 1060)
    Au_53099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 19), 'Au', False)
    # Obtaining the member 'T' of a type (line 1060)
    T_53100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1060, 19), Au_53099, 'T')
    # Getting the type of 'alpha' (line 1060)
    alpha_53101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 25), 'alpha', False)
    # Getting the type of 'B1' (line 1060)
    B1_53102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 31), 'B1', False)
    # Applying the binary operator '*' (line 1060)
    result_mul_53103 = python_operator(stypy.reporting.localization.Localization(__file__, 1060, 25), '*', alpha_53101, B1_53102)
    
    # Processing the call keyword arguments (line 1060)
    kwargs_53104 = {}
    # Getting the type of 'solve' (line 1060)
    solve_53098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 13), 'solve', False)
    # Calling solve(args, kwargs) (line 1060)
    solve_call_result_53105 = invoke(stypy.reporting.localization.Localization(__file__, 1060, 13), solve_53098, *[T_53100, result_mul_53103], **kwargs_53104)
    
    # Assigning a type to the variable 'x2' (line 1060)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 8), 'x2', solve_call_result_53105)
    
    # Call to assert_allclose(...): (line 1061)
    # Processing the call arguments (line 1061)
    # Getting the type of 'x1' (line 1061)
    x1_53107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 24), 'x1', False)
    # Getting the type of 'x2' (line 1061)
    x2_53108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 28), 'x2', False)
    # Processing the call keyword arguments (line 1061)
    # Getting the type of 'tol' (line 1061)
    tol_53109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 37), 'tol', False)
    keyword_53110 = tol_53109
    kwargs_53111 = {'atol': keyword_53110}
    # Getting the type of 'assert_allclose' (line 1061)
    assert_allclose_53106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 1061)
    assert_allclose_call_result_53112 = invoke(stypy.reporting.localization.Localization(__file__, 1061, 8), assert_allclose_53106, *[x1_53107, x2_53108], **kwargs_53111)
    
    
    # Assigning a Call to a Name (line 1063):
    
    # Assigning a Call to a Name (line 1063):
    
    # Call to func(...): (line 1063)
    # Processing the call keyword arguments (line 1063)
    # Getting the type of 'alpha' (line 1063)
    alpha_53114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 24), 'alpha', False)
    keyword_53115 = alpha_53114
    # Getting the type of 'A' (line 1063)
    A_53116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 33), 'A', False)
    keyword_53117 = A_53116
    # Getting the type of 'B1' (line 1063)
    B1_53118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 38), 'B1', False)
    keyword_53119 = B1_53118
    int_53120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1063, 50), 'int')
    keyword_53121 = int_53120
    kwargs_53122 = {'a': keyword_53117, 'alpha': keyword_53115, 'b': keyword_53119, 'trans_a': keyword_53121}
    # Getting the type of 'func' (line 1063)
    func_53113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1063, 13), 'func', False)
    # Calling func(args, kwargs) (line 1063)
    func_call_result_53123 = invoke(stypy.reporting.localization.Localization(__file__, 1063, 13), func_53113, *[], **kwargs_53122)
    
    # Assigning a type to the variable 'x1' (line 1063)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1063, 8), 'x1', func_call_result_53123)
    
    # Assigning a Call to a Name (line 1064):
    
    # Assigning a Call to a Name (line 1064):
    
    # Call to solve(...): (line 1064)
    # Processing the call arguments (line 1064)
    
    # Call to conj(...): (line 1064)
    # Processing the call keyword arguments (line 1064)
    kwargs_53127 = {}
    # Getting the type of 'Au' (line 1064)
    Au_53125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 19), 'Au', False)
    # Obtaining the member 'conj' of a type (line 1064)
    conj_53126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1064, 19), Au_53125, 'conj')
    # Calling conj(args, kwargs) (line 1064)
    conj_call_result_53128 = invoke(stypy.reporting.localization.Localization(__file__, 1064, 19), conj_53126, *[], **kwargs_53127)
    
    # Obtaining the member 'T' of a type (line 1064)
    T_53129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1064, 19), conj_call_result_53128, 'T')
    # Getting the type of 'alpha' (line 1064)
    alpha_53130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 32), 'alpha', False)
    # Getting the type of 'B1' (line 1064)
    B1_53131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 38), 'B1', False)
    # Applying the binary operator '*' (line 1064)
    result_mul_53132 = python_operator(stypy.reporting.localization.Localization(__file__, 1064, 32), '*', alpha_53130, B1_53131)
    
    # Processing the call keyword arguments (line 1064)
    kwargs_53133 = {}
    # Getting the type of 'solve' (line 1064)
    solve_53124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 13), 'solve', False)
    # Calling solve(args, kwargs) (line 1064)
    solve_call_result_53134 = invoke(stypy.reporting.localization.Localization(__file__, 1064, 13), solve_53124, *[T_53129, result_mul_53132], **kwargs_53133)
    
    # Assigning a type to the variable 'x2' (line 1064)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1064, 8), 'x2', solve_call_result_53134)
    
    # Call to assert_allclose(...): (line 1065)
    # Processing the call arguments (line 1065)
    # Getting the type of 'x1' (line 1065)
    x1_53136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 24), 'x1', False)
    # Getting the type of 'x2' (line 1065)
    x2_53137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 28), 'x2', False)
    # Processing the call keyword arguments (line 1065)
    # Getting the type of 'tol' (line 1065)
    tol_53138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 37), 'tol', False)
    keyword_53139 = tol_53138
    kwargs_53140 = {'atol': keyword_53139}
    # Getting the type of 'assert_allclose' (line 1065)
    assert_allclose_53135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1065, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 1065)
    assert_allclose_call_result_53141 = invoke(stypy.reporting.localization.Localization(__file__, 1065, 8), assert_allclose_53135, *[x1_53136, x2_53137], **kwargs_53140)
    
    
    # Assigning a Call to a Name (line 1067):
    
    # Assigning a Call to a Name (line 1067):
    
    # Call to func(...): (line 1067)
    # Processing the call keyword arguments (line 1067)
    # Getting the type of 'alpha' (line 1067)
    alpha_53143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 24), 'alpha', False)
    keyword_53144 = alpha_53143
    # Getting the type of 'A' (line 1067)
    A_53145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 33), 'A', False)
    keyword_53146 = A_53145
    # Getting the type of 'B1' (line 1067)
    B1_53147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 38), 'B1', False)
    keyword_53148 = B1_53147
    int_53149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1067, 47), 'int')
    keyword_53150 = int_53149
    kwargs_53151 = {'a': keyword_53146, 'alpha': keyword_53144, 'b': keyword_53148, 'diag': keyword_53150}
    # Getting the type of 'func' (line 1067)
    func_53142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1067, 13), 'func', False)
    # Calling func(args, kwargs) (line 1067)
    func_call_result_53152 = invoke(stypy.reporting.localization.Localization(__file__, 1067, 13), func_53142, *[], **kwargs_53151)
    
    # Assigning a type to the variable 'x1' (line 1067)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1067, 8), 'x1', func_call_result_53152)
    
    # Assigning a Call to a Subscript (line 1068):
    
    # Assigning a Call to a Subscript (line 1068):
    
    # Call to dtype(...): (line 1068)
    # Processing the call arguments (line 1068)
    int_53154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1068, 41), 'int')
    # Processing the call keyword arguments (line 1068)
    kwargs_53155 = {}
    # Getting the type of 'dtype' (line 1068)
    dtype_53153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 35), 'dtype', False)
    # Calling dtype(args, kwargs) (line 1068)
    dtype_call_result_53156 = invoke(stypy.reporting.localization.Localization(__file__, 1068, 35), dtype_53153, *[int_53154], **kwargs_53155)
    
    # Getting the type of 'Au' (line 1068)
    Au_53157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 8), 'Au')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1068)
    tuple_53158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1068, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1068)
    # Adding element type (line 1068)
    
    # Call to arange(...): (line 1068)
    # Processing the call arguments (line 1068)
    # Getting the type of 'm' (line 1068)
    m_53160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 18), 'm', False)
    # Processing the call keyword arguments (line 1068)
    kwargs_53161 = {}
    # Getting the type of 'arange' (line 1068)
    arange_53159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 11), 'arange', False)
    # Calling arange(args, kwargs) (line 1068)
    arange_call_result_53162 = invoke(stypy.reporting.localization.Localization(__file__, 1068, 11), arange_53159, *[m_53160], **kwargs_53161)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1068, 11), tuple_53158, arange_call_result_53162)
    # Adding element type (line 1068)
    
    # Call to arange(...): (line 1068)
    # Processing the call arguments (line 1068)
    # Getting the type of 'm' (line 1068)
    m_53164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 29), 'm', False)
    # Processing the call keyword arguments (line 1068)
    kwargs_53165 = {}
    # Getting the type of 'arange' (line 1068)
    arange_53163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1068, 22), 'arange', False)
    # Calling arange(args, kwargs) (line 1068)
    arange_call_result_53166 = invoke(stypy.reporting.localization.Localization(__file__, 1068, 22), arange_53163, *[m_53164], **kwargs_53165)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1068, 11), tuple_53158, arange_call_result_53166)
    
    # Storing an element on a container (line 1068)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1068, 8), Au_53157, (tuple_53158, dtype_call_result_53156))
    
    # Assigning a Call to a Name (line 1069):
    
    # Assigning a Call to a Name (line 1069):
    
    # Call to solve(...): (line 1069)
    # Processing the call arguments (line 1069)
    # Getting the type of 'Au' (line 1069)
    Au_53168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 19), 'Au', False)
    # Getting the type of 'alpha' (line 1069)
    alpha_53169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 23), 'alpha', False)
    # Getting the type of 'B1' (line 1069)
    B1_53170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 29), 'B1', False)
    # Applying the binary operator '*' (line 1069)
    result_mul_53171 = python_operator(stypy.reporting.localization.Localization(__file__, 1069, 23), '*', alpha_53169, B1_53170)
    
    # Processing the call keyword arguments (line 1069)
    kwargs_53172 = {}
    # Getting the type of 'solve' (line 1069)
    solve_53167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1069, 13), 'solve', False)
    # Calling solve(args, kwargs) (line 1069)
    solve_call_result_53173 = invoke(stypy.reporting.localization.Localization(__file__, 1069, 13), solve_53167, *[Au_53168, result_mul_53171], **kwargs_53172)
    
    # Assigning a type to the variable 'x2' (line 1069)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1069, 8), 'x2', solve_call_result_53173)
    
    # Call to assert_allclose(...): (line 1070)
    # Processing the call arguments (line 1070)
    # Getting the type of 'x1' (line 1070)
    x1_53175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 24), 'x1', False)
    # Getting the type of 'x2' (line 1070)
    x2_53176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 28), 'x2', False)
    # Processing the call keyword arguments (line 1070)
    # Getting the type of 'tol' (line 1070)
    tol_53177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 37), 'tol', False)
    keyword_53178 = tol_53177
    kwargs_53179 = {'atol': keyword_53178}
    # Getting the type of 'assert_allclose' (line 1070)
    assert_allclose_53174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1070, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 1070)
    assert_allclose_call_result_53180 = invoke(stypy.reporting.localization.Localization(__file__, 1070, 8), assert_allclose_53174, *[x1_53175, x2_53176], **kwargs_53179)
    
    
    # Assigning a Call to a Name (line 1072):
    
    # Assigning a Call to a Name (line 1072):
    
    # Call to func(...): (line 1072)
    # Processing the call keyword arguments (line 1072)
    # Getting the type of 'alpha' (line 1072)
    alpha_53182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 24), 'alpha', False)
    keyword_53183 = alpha_53182
    # Getting the type of 'A' (line 1072)
    A_53184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 33), 'A', False)
    keyword_53185 = A_53184
    # Getting the type of 'B2' (line 1072)
    B2_53186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 38), 'B2', False)
    keyword_53187 = B2_53186
    int_53188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 47), 'int')
    keyword_53189 = int_53188
    int_53190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 55), 'int')
    keyword_53191 = int_53190
    kwargs_53192 = {'a': keyword_53185, 'alpha': keyword_53183, 'b': keyword_53187, 'side': keyword_53191, 'diag': keyword_53189}
    # Getting the type of 'func' (line 1072)
    func_53181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 13), 'func', False)
    # Calling func(args, kwargs) (line 1072)
    func_call_result_53193 = invoke(stypy.reporting.localization.Localization(__file__, 1072, 13), func_53181, *[], **kwargs_53192)
    
    # Assigning a type to the variable 'x1' (line 1072)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1072, 8), 'x1', func_call_result_53193)
    
    # Assigning a Call to a Name (line 1073):
    
    # Assigning a Call to a Name (line 1073):
    
    # Call to solve(...): (line 1073)
    # Processing the call arguments (line 1073)
    
    # Call to conj(...): (line 1073)
    # Processing the call keyword arguments (line 1073)
    kwargs_53197 = {}
    # Getting the type of 'Au' (line 1073)
    Au_53195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 19), 'Au', False)
    # Obtaining the member 'conj' of a type (line 1073)
    conj_53196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 19), Au_53195, 'conj')
    # Calling conj(args, kwargs) (line 1073)
    conj_call_result_53198 = invoke(stypy.reporting.localization.Localization(__file__, 1073, 19), conj_53196, *[], **kwargs_53197)
    
    # Obtaining the member 'T' of a type (line 1073)
    T_53199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 19), conj_call_result_53198, 'T')
    # Getting the type of 'alpha' (line 1073)
    alpha_53200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 32), 'alpha', False)
    
    # Call to conj(...): (line 1073)
    # Processing the call keyword arguments (line 1073)
    kwargs_53203 = {}
    # Getting the type of 'B2' (line 1073)
    B2_53201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 38), 'B2', False)
    # Obtaining the member 'conj' of a type (line 1073)
    conj_53202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 38), B2_53201, 'conj')
    # Calling conj(args, kwargs) (line 1073)
    conj_call_result_53204 = invoke(stypy.reporting.localization.Localization(__file__, 1073, 38), conj_53202, *[], **kwargs_53203)
    
    # Obtaining the member 'T' of a type (line 1073)
    T_53205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 38), conj_call_result_53204, 'T')
    # Applying the binary operator '*' (line 1073)
    result_mul_53206 = python_operator(stypy.reporting.localization.Localization(__file__, 1073, 32), '*', alpha_53200, T_53205)
    
    # Processing the call keyword arguments (line 1073)
    kwargs_53207 = {}
    # Getting the type of 'solve' (line 1073)
    solve_53194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 13), 'solve', False)
    # Calling solve(args, kwargs) (line 1073)
    solve_call_result_53208 = invoke(stypy.reporting.localization.Localization(__file__, 1073, 13), solve_53194, *[T_53199, result_mul_53206], **kwargs_53207)
    
    # Assigning a type to the variable 'x2' (line 1073)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1073, 8), 'x2', solve_call_result_53208)
    
    # Call to assert_allclose(...): (line 1074)
    # Processing the call arguments (line 1074)
    # Getting the type of 'x1' (line 1074)
    x1_53210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 24), 'x1', False)
    
    # Call to conj(...): (line 1074)
    # Processing the call keyword arguments (line 1074)
    kwargs_53213 = {}
    # Getting the type of 'x2' (line 1074)
    x2_53211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 28), 'x2', False)
    # Obtaining the member 'conj' of a type (line 1074)
    conj_53212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1074, 28), x2_53211, 'conj')
    # Calling conj(args, kwargs) (line 1074)
    conj_call_result_53214 = invoke(stypy.reporting.localization.Localization(__file__, 1074, 28), conj_53212, *[], **kwargs_53213)
    
    # Obtaining the member 'T' of a type (line 1074)
    T_53215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1074, 28), conj_call_result_53214, 'T')
    # Processing the call keyword arguments (line 1074)
    # Getting the type of 'tol' (line 1074)
    tol_53216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 46), 'tol', False)
    keyword_53217 = tol_53216
    kwargs_53218 = {'atol': keyword_53217}
    # Getting the type of 'assert_allclose' (line 1074)
    assert_allclose_53209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 1074)
    assert_allclose_call_result_53219 = invoke(stypy.reporting.localization.Localization(__file__, 1074, 8), assert_allclose_53209, *[x1_53210, T_53215], **kwargs_53218)
    
    
    # Assigning a Call to a Name (line 1076):
    
    # Assigning a Call to a Name (line 1076):
    
    # Call to func(...): (line 1076)
    # Processing the call keyword arguments (line 1076)
    # Getting the type of 'alpha' (line 1076)
    alpha_53221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 24), 'alpha', False)
    keyword_53222 = alpha_53221
    # Getting the type of 'A' (line 1076)
    A_53223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 33), 'A', False)
    keyword_53224 = A_53223
    # Getting the type of 'B2' (line 1076)
    B2_53225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 38), 'B2', False)
    keyword_53226 = B2_53225
    int_53227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1076, 47), 'int')
    keyword_53228 = int_53227
    int_53229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1076, 55), 'int')
    keyword_53230 = int_53229
    int_53231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1076, 64), 'int')
    keyword_53232 = int_53231
    kwargs_53233 = {'a': keyword_53224, 'lower': keyword_53232, 'b': keyword_53226, 'diag': keyword_53228, 'alpha': keyword_53222, 'side': keyword_53230}
    # Getting the type of 'func' (line 1076)
    func_53220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 13), 'func', False)
    # Calling func(args, kwargs) (line 1076)
    func_call_result_53234 = invoke(stypy.reporting.localization.Localization(__file__, 1076, 13), func_53220, *[], **kwargs_53233)
    
    # Assigning a type to the variable 'x1' (line 1076)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1076, 8), 'x1', func_call_result_53234)
    
    # Assigning a Call to a Subscript (line 1077):
    
    # Assigning a Call to a Subscript (line 1077):
    
    # Call to dtype(...): (line 1077)
    # Processing the call arguments (line 1077)
    int_53236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1077, 41), 'int')
    # Processing the call keyword arguments (line 1077)
    kwargs_53237 = {}
    # Getting the type of 'dtype' (line 1077)
    dtype_53235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 35), 'dtype', False)
    # Calling dtype(args, kwargs) (line 1077)
    dtype_call_result_53238 = invoke(stypy.reporting.localization.Localization(__file__, 1077, 35), dtype_53235, *[int_53236], **kwargs_53237)
    
    # Getting the type of 'Al' (line 1077)
    Al_53239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 8), 'Al')
    
    # Obtaining an instance of the builtin type 'tuple' (line 1077)
    tuple_53240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1077, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 1077)
    # Adding element type (line 1077)
    
    # Call to arange(...): (line 1077)
    # Processing the call arguments (line 1077)
    # Getting the type of 'm' (line 1077)
    m_53242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 18), 'm', False)
    # Processing the call keyword arguments (line 1077)
    kwargs_53243 = {}
    # Getting the type of 'arange' (line 1077)
    arange_53241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 11), 'arange', False)
    # Calling arange(args, kwargs) (line 1077)
    arange_call_result_53244 = invoke(stypy.reporting.localization.Localization(__file__, 1077, 11), arange_53241, *[m_53242], **kwargs_53243)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1077, 11), tuple_53240, arange_call_result_53244)
    # Adding element type (line 1077)
    
    # Call to arange(...): (line 1077)
    # Processing the call arguments (line 1077)
    # Getting the type of 'm' (line 1077)
    m_53246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 29), 'm', False)
    # Processing the call keyword arguments (line 1077)
    kwargs_53247 = {}
    # Getting the type of 'arange' (line 1077)
    arange_53245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1077, 22), 'arange', False)
    # Calling arange(args, kwargs) (line 1077)
    arange_call_result_53248 = invoke(stypy.reporting.localization.Localization(__file__, 1077, 22), arange_53245, *[m_53246], **kwargs_53247)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1077, 11), tuple_53240, arange_call_result_53248)
    
    # Storing an element on a container (line 1077)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1077, 8), Al_53239, (tuple_53240, dtype_call_result_53238))
    
    # Assigning a Call to a Name (line 1078):
    
    # Assigning a Call to a Name (line 1078):
    
    # Call to solve(...): (line 1078)
    # Processing the call arguments (line 1078)
    
    # Call to conj(...): (line 1078)
    # Processing the call keyword arguments (line 1078)
    kwargs_53252 = {}
    # Getting the type of 'Al' (line 1078)
    Al_53250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 19), 'Al', False)
    # Obtaining the member 'conj' of a type (line 1078)
    conj_53251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1078, 19), Al_53250, 'conj')
    # Calling conj(args, kwargs) (line 1078)
    conj_call_result_53253 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 19), conj_53251, *[], **kwargs_53252)
    
    # Obtaining the member 'T' of a type (line 1078)
    T_53254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1078, 19), conj_call_result_53253, 'T')
    # Getting the type of 'alpha' (line 1078)
    alpha_53255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 32), 'alpha', False)
    
    # Call to conj(...): (line 1078)
    # Processing the call keyword arguments (line 1078)
    kwargs_53258 = {}
    # Getting the type of 'B2' (line 1078)
    B2_53256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 38), 'B2', False)
    # Obtaining the member 'conj' of a type (line 1078)
    conj_53257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1078, 38), B2_53256, 'conj')
    # Calling conj(args, kwargs) (line 1078)
    conj_call_result_53259 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 38), conj_53257, *[], **kwargs_53258)
    
    # Obtaining the member 'T' of a type (line 1078)
    T_53260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1078, 38), conj_call_result_53259, 'T')
    # Applying the binary operator '*' (line 1078)
    result_mul_53261 = python_operator(stypy.reporting.localization.Localization(__file__, 1078, 32), '*', alpha_53255, T_53260)
    
    # Processing the call keyword arguments (line 1078)
    kwargs_53262 = {}
    # Getting the type of 'solve' (line 1078)
    solve_53249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 13), 'solve', False)
    # Calling solve(args, kwargs) (line 1078)
    solve_call_result_53263 = invoke(stypy.reporting.localization.Localization(__file__, 1078, 13), solve_53249, *[T_53254, result_mul_53261], **kwargs_53262)
    
    # Assigning a type to the variable 'x2' (line 1078)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1078, 8), 'x2', solve_call_result_53263)
    
    # Call to assert_allclose(...): (line 1079)
    # Processing the call arguments (line 1079)
    # Getting the type of 'x1' (line 1079)
    x1_53265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 24), 'x1', False)
    
    # Call to conj(...): (line 1079)
    # Processing the call keyword arguments (line 1079)
    kwargs_53268 = {}
    # Getting the type of 'x2' (line 1079)
    x2_53266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 28), 'x2', False)
    # Obtaining the member 'conj' of a type (line 1079)
    conj_53267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1079, 28), x2_53266, 'conj')
    # Calling conj(args, kwargs) (line 1079)
    conj_call_result_53269 = invoke(stypy.reporting.localization.Localization(__file__, 1079, 28), conj_53267, *[], **kwargs_53268)
    
    # Obtaining the member 'T' of a type (line 1079)
    T_53270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1079, 28), conj_call_result_53269, 'T')
    # Processing the call keyword arguments (line 1079)
    # Getting the type of 'tol' (line 1079)
    tol_53271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 46), 'tol', False)
    keyword_53272 = tol_53271
    kwargs_53273 = {'atol': keyword_53272}
    # Getting the type of 'assert_allclose' (line 1079)
    assert_allclose_53264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1079, 8), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 1079)
    assert_allclose_call_result_53274 = invoke(stypy.reporting.localization.Localization(__file__, 1079, 8), assert_allclose_53264, *[x1_53265, T_53270], **kwargs_53273)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_trsm(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_trsm' in the type store
    # Getting the type of 'stypy_return_type' (line 1031)
    stypy_return_type_53275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_53275)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_trsm'
    return stypy_return_type_53275

# Assigning a type to the variable 'test_trsm' (line 1031)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1031, 0), 'test_trsm', test_trsm)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
