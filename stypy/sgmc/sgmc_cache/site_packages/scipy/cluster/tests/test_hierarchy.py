
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: #
2: # Author: Damian Eads
3: # Date: April 17, 2008
4: #
5: # Copyright (C) 2008 Damian Eads
6: #
7: # Redistribution and use in source and binary forms, with or without
8: # modification, are permitted provided that the following conditions
9: # are met:
10: #
11: # 1. Redistributions of source code must retain the above copyright
12: #    notice, this list of conditions and the following disclaimer.
13: #
14: # 2. Redistributions in binary form must reproduce the above
15: #    copyright notice, this list of conditions and the following
16: #    disclaimer in the documentation and/or other materials provided
17: #    with the distribution.
18: #
19: # 3. The name of the author may not be used to endorse or promote
20: #    products derived from this software without specific prior
21: #    written permission.
22: #
23: # THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
24: # OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
25: # WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
26: # ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
27: # DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
28: # DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
29: # GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
30: # INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
31: # WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
32: # NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
33: # SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
34: from __future__ import division, print_function, absolute_import
35: 
36: import numpy as np
37: from numpy.testing import assert_allclose, assert_equal, assert_, assert_warns
38: import pytest
39: from pytest import raises as assert_raises
40: 
41: from scipy._lib.six import xrange, u
42: 
43: import scipy.cluster.hierarchy
44: from scipy.cluster.hierarchy import (
45:     ClusterWarning, linkage, from_mlab_linkage, to_mlab_linkage,
46:     num_obs_linkage, inconsistent, cophenet, fclusterdata, fcluster,
47:     is_isomorphic, single, leaders, complete, weighted, centroid,
48:     correspond, is_monotonic, maxdists, maxinconsts, maxRstat,
49:     is_valid_linkage, is_valid_im, to_tree, leaves_list, dendrogram,
50:     set_link_color_palette, cut_tree, optimal_leaf_ordering,
51:     _order_cluster_tree, _hierarchy, _LINKAGE_METHODS)
52: from scipy.spatial.distance import pdist
53: from scipy.cluster._hierarchy import Heap
54: 
55: from . import hierarchy_test_data
56: 
57: 
58: # Matplotlib is not a scipy dependency but is optionally used in dendrogram, so
59: # check if it's available
60: try:
61:     import matplotlib
62:     # and set the backend to be Agg (no gui)
63:     matplotlib.use('Agg')
64:     # before importing pyplot
65:     import matplotlib.pyplot as plt
66:     have_matplotlib = True
67: except:
68:     have_matplotlib = False
69: 
70: 
71: class TestLinkage(object):
72:     def test_linkage_non_finite_elements_in_distance_matrix(self):
73:         # Tests linkage(Y) where Y contains a non-finite element (e.g. NaN or Inf).
74:         # Exception expected.
75:         y = np.zeros((6,))
76:         y[0] = np.nan
77:         assert_raises(ValueError, linkage, y)
78: 
79:     def test_linkage_empty_distance_matrix(self):
80:         # Tests linkage(Y) where Y is a 0x4 linkage matrix. Exception expected.
81:         y = np.zeros((0,))
82:         assert_raises(ValueError, linkage, y)
83: 
84:     def test_linkage_tdist(self):
85:         for method in ['single', 'complete', 'average', 'weighted', u('single')]:
86:             self.check_linkage_tdist(method)
87: 
88:     def check_linkage_tdist(self, method):
89:         # Tests linkage(Y, method) on the tdist data set.
90:         Z = linkage(hierarchy_test_data.ytdist, method)
91:         expectedZ = getattr(hierarchy_test_data, 'linkage_ytdist_' + method)
92:         assert_allclose(Z, expectedZ, atol=1e-10)
93: 
94:     def test_linkage_X(self):
95:         for method in ['centroid', 'median', 'ward']:
96:             self.check_linkage_q(method)
97: 
98:     def check_linkage_q(self, method):
99:         # Tests linkage(Y, method) on the Q data set.
100:         Z = linkage(hierarchy_test_data.X, method)
101:         expectedZ = getattr(hierarchy_test_data, 'linkage_X_' + method)
102:         assert_allclose(Z, expectedZ, atol=1e-06)
103: 
104:         y = scipy.spatial.distance.pdist(hierarchy_test_data.X,
105:                                          metric="euclidean")
106:         Z = linkage(y, method)
107:         assert_allclose(Z, expectedZ, atol=1e-06)
108: 
109:     def test_compare_with_trivial(self):
110:         rng = np.random.RandomState(0)
111:         n = 20
112:         X = rng.rand(n, 2)
113:         d = pdist(X)
114: 
115:         for method, code in _LINKAGE_METHODS.items():
116:             Z_trivial = _hierarchy.linkage(d, n, code)
117:             Z = linkage(d, method)
118:             assert_allclose(Z_trivial, Z, rtol=1e-14, atol=1e-15)
119: 
120:     def test_optimal_leaf_ordering(self):
121:         Z = linkage(hierarchy_test_data.ytdist, optimal_ordering=True)
122:         expectedZ = getattr(hierarchy_test_data, 'linkage_ytdist_single_olo')
123:         assert_allclose(Z, expectedZ, atol=1e-10)
124: 
125: 
126: class TestLinkageTies(object):
127:     _expectations = {
128:         'single': np.array([[0, 1, 1.41421356, 2],
129:                             [2, 3, 1.41421356, 3]]),
130:         'complete': np.array([[0, 1, 1.41421356, 2],
131:                               [2, 3, 2.82842712, 3]]),
132:         'average': np.array([[0, 1, 1.41421356, 2],
133:                              [2, 3, 2.12132034, 3]]),
134:         'weighted': np.array([[0, 1, 1.41421356, 2],
135:                               [2, 3, 2.12132034, 3]]),
136:         'centroid': np.array([[0, 1, 1.41421356, 2],
137:                               [2, 3, 2.12132034, 3]]),
138:         'median': np.array([[0, 1, 1.41421356, 2],
139:                             [2, 3, 2.12132034, 3]]),
140:         'ward': np.array([[0, 1, 1.41421356, 2],
141:                           [2, 3, 2.44948974, 3]]),
142:     }
143: 
144:     def test_linkage_ties(self):
145:         for method in ['single', 'complete', 'average', 'weighted', 'centroid', 'median', 'ward']:
146:             self.check_linkage_ties(method)
147: 
148:     def check_linkage_ties(self, method):
149:         X = np.array([[-1, -1], [0, 0], [1, 1]])
150:         Z = linkage(X, method=method)
151:         expectedZ = self._expectations[method]
152:         assert_allclose(Z, expectedZ, atol=1e-06)
153: 
154: 
155: class TestInconsistent(object):
156:     def test_inconsistent_tdist(self):
157:         for depth in hierarchy_test_data.inconsistent_ytdist:
158:             self.check_inconsistent_tdist(depth)
159: 
160:     def check_inconsistent_tdist(self, depth):
161:         Z = hierarchy_test_data.linkage_ytdist_single
162:         assert_allclose(inconsistent(Z, depth),
163:                         hierarchy_test_data.inconsistent_ytdist[depth])
164: 
165: 
166: class TestCopheneticDistance(object):
167:     def test_linkage_cophenet_tdist_Z(self):
168:         # Tests cophenet(Z) on tdist data set.
169:         expectedM = np.array([268, 295, 255, 255, 295, 295, 268, 268, 295, 295,
170:                               295, 138, 219, 295, 295])
171:         Z = hierarchy_test_data.linkage_ytdist_single
172:         M = cophenet(Z)
173:         assert_allclose(M, expectedM, atol=1e-10)
174: 
175:     def test_linkage_cophenet_tdist_Z_Y(self):
176:         # Tests cophenet(Z, Y) on tdist data set.
177:         Z = hierarchy_test_data.linkage_ytdist_single
178:         (c, M) = cophenet(Z, hierarchy_test_data.ytdist)
179:         expectedM = np.array([268, 295, 255, 255, 295, 295, 268, 268, 295, 295,
180:                               295, 138, 219, 295, 295])
181:         expectedc = 0.639931296433393415057366837573
182:         assert_allclose(c, expectedc, atol=1e-10)
183:         assert_allclose(M, expectedM, atol=1e-10)
184: 
185: 
186: class TestMLabLinkageConversion(object):
187:     def test_mlab_linkage_conversion_empty(self):
188:         # Tests from/to_mlab_linkage on empty linkage array.
189:         X = np.asarray([])
190:         assert_equal(from_mlab_linkage([]), X)
191:         assert_equal(to_mlab_linkage([]), X)
192: 
193:     def test_mlab_linkage_conversion_single_row(self):
194:         # Tests from/to_mlab_linkage on linkage array with single row.
195:         Z = np.asarray([[0., 1., 3., 2.]])
196:         Zm = [[1, 2, 3]]
197:         assert_equal(from_mlab_linkage(Zm), Z)
198:         assert_equal(to_mlab_linkage(Z), Zm)
199: 
200:     def test_mlab_linkage_conversion_multiple_rows(self):
201:         # Tests from/to_mlab_linkage on linkage array with multiple rows.
202:         Zm = np.asarray([[3, 6, 138], [4, 5, 219],
203:                          [1, 8, 255], [2, 9, 268], [7, 10, 295]])
204:         Z = np.array([[2., 5., 138., 2.],
205:                       [3., 4., 219., 2.],
206:                       [0., 7., 255., 3.],
207:                       [1., 8., 268., 4.],
208:                       [6., 9., 295., 6.]],
209:                       dtype=np.double)
210:         assert_equal(from_mlab_linkage(Zm), Z)
211:         assert_equal(to_mlab_linkage(Z), Zm)
212: 
213: 
214: class TestFcluster(object):
215:     def test_fclusterdata(self):
216:         for t in hierarchy_test_data.fcluster_inconsistent:
217:             self.check_fclusterdata(t, 'inconsistent')
218:         for t in hierarchy_test_data.fcluster_distance:
219:             self.check_fclusterdata(t, 'distance')
220:         for t in hierarchy_test_data.fcluster_maxclust:
221:             self.check_fclusterdata(t, 'maxclust')
222: 
223:     def check_fclusterdata(self, t, criterion):
224:         # Tests fclusterdata(X, criterion=criterion, t=t) on a random 3-cluster data set.
225:         expectedT = getattr(hierarchy_test_data, 'fcluster_' + criterion)[t]
226:         X = hierarchy_test_data.Q_X
227:         T = fclusterdata(X, criterion=criterion, t=t)
228:         assert_(is_isomorphic(T, expectedT))
229: 
230:     def test_fcluster(self):
231:         for t in hierarchy_test_data.fcluster_inconsistent:
232:             self.check_fcluster(t, 'inconsistent')
233:         for t in hierarchy_test_data.fcluster_distance:
234:             self.check_fcluster(t, 'distance')
235:         for t in hierarchy_test_data.fcluster_maxclust:
236:             self.check_fcluster(t, 'maxclust')
237: 
238:     def check_fcluster(self, t, criterion):
239:         # Tests fcluster(Z, criterion=criterion, t=t) on a random 3-cluster data set.
240:         expectedT = getattr(hierarchy_test_data, 'fcluster_' + criterion)[t]
241:         Z = single(hierarchy_test_data.Q_X)
242:         T = fcluster(Z, criterion=criterion, t=t)
243:         assert_(is_isomorphic(T, expectedT))
244: 
245:     def test_fcluster_monocrit(self):
246:         for t in hierarchy_test_data.fcluster_distance:
247:             self.check_fcluster_monocrit(t)
248:         for t in hierarchy_test_data.fcluster_maxclust:
249:             self.check_fcluster_maxclust_monocrit(t)
250: 
251:     def check_fcluster_monocrit(self, t):
252:         expectedT = hierarchy_test_data.fcluster_distance[t]
253:         Z = single(hierarchy_test_data.Q_X)
254:         T = fcluster(Z, t, criterion='monocrit', monocrit=maxdists(Z))
255:         assert_(is_isomorphic(T, expectedT))
256: 
257:     def check_fcluster_maxclust_monocrit(self, t):
258:         expectedT = hierarchy_test_data.fcluster_maxclust[t]
259:         Z = single(hierarchy_test_data.Q_X)
260:         T = fcluster(Z, t, criterion='maxclust_monocrit', monocrit=maxdists(Z))
261:         assert_(is_isomorphic(T, expectedT))
262: 
263: 
264: class TestLeaders(object):
265:     def test_leaders_single(self):
266:         # Tests leaders using a flat clustering generated by single linkage.
267:         X = hierarchy_test_data.Q_X
268:         Y = pdist(X)
269:         Z = linkage(Y)
270:         T = fcluster(Z, criterion='maxclust', t=3)
271:         Lright = (np.array([53, 55, 56]), np.array([2, 3, 1]))
272:         L = leaders(Z, T)
273:         assert_equal(L, Lright)
274: 
275: 
276: class TestIsIsomorphic(object):
277:     def test_is_isomorphic_1(self):
278:         # Tests is_isomorphic on test case #1 (one flat cluster, different labellings)
279:         a = [1, 1, 1]
280:         b = [2, 2, 2]
281:         assert_(is_isomorphic(a, b))
282:         assert_(is_isomorphic(b, a))
283: 
284:     def test_is_isomorphic_2(self):
285:         # Tests is_isomorphic on test case #2 (two flat clusters, different labelings)
286:         a = [1, 7, 1]
287:         b = [2, 3, 2]
288:         assert_(is_isomorphic(a, b))
289:         assert_(is_isomorphic(b, a))
290: 
291:     def test_is_isomorphic_3(self):
292:         # Tests is_isomorphic on test case #3 (no flat clusters)
293:         a = []
294:         b = []
295:         assert_(is_isomorphic(a, b))
296: 
297:     def test_is_isomorphic_4A(self):
298:         # Tests is_isomorphic on test case #4A (3 flat clusters, different labelings, isomorphic)
299:         a = [1, 2, 3]
300:         b = [1, 3, 2]
301:         assert_(is_isomorphic(a, b))
302:         assert_(is_isomorphic(b, a))
303: 
304:     def test_is_isomorphic_4B(self):
305:         # Tests is_isomorphic on test case #4B (3 flat clusters, different labelings, nonisomorphic)
306:         a = [1, 2, 3, 3]
307:         b = [1, 3, 2, 3]
308:         assert_(is_isomorphic(a, b) == False)
309:         assert_(is_isomorphic(b, a) == False)
310: 
311:     def test_is_isomorphic_4C(self):
312:         # Tests is_isomorphic on test case #4C (3 flat clusters, different labelings, isomorphic)
313:         a = [7, 2, 3]
314:         b = [6, 3, 2]
315:         assert_(is_isomorphic(a, b))
316:         assert_(is_isomorphic(b, a))
317: 
318:     def test_is_isomorphic_5(self):
319:         # Tests is_isomorphic on test case #5 (1000 observations, 2/3/5 random
320:         # clusters, random permutation of the labeling).
321:         for nc in [2, 3, 5]:
322:             self.help_is_isomorphic_randperm(1000, nc)
323: 
324:     def test_is_isomorphic_6(self):
325:         # Tests is_isomorphic on test case #5A (1000 observations, 2/3/5 random
326:         # clusters, random permutation of the labeling, slightly
327:         # nonisomorphic.)
328:         for nc in [2, 3, 5]:
329:             self.help_is_isomorphic_randperm(1000, nc, True, 5)
330:             
331:     def test_is_isomorphic_7(self):
332:         # Regression test for gh-6271
333:         assert_(not is_isomorphic([1, 2, 3], [1, 1, 1]))
334:     
335:     def help_is_isomorphic_randperm(self, nobs, nclusters, noniso=False, nerrors=0):
336:         for k in range(3):
337:             a = np.int_(np.random.rand(nobs) * nclusters)
338:             b = np.zeros(a.size, dtype=np.int_)
339:             P = np.random.permutation(nclusters)
340:             for i in xrange(0, a.shape[0]):
341:                 b[i] = P[a[i]]
342:             if noniso:
343:                 Q = np.random.permutation(nobs)
344:                 b[Q[0:nerrors]] += 1
345:                 b[Q[0:nerrors]] %= nclusters
346:             assert_(is_isomorphic(a, b) == (not noniso))
347:             assert_(is_isomorphic(b, a) == (not noniso))
348: 
349: 
350: class TestIsValidLinkage(object):
351:     def test_is_valid_linkage_various_size(self):
352:         for nrow, ncol, valid in [(2, 5, False), (2, 3, False),
353:                                   (1, 4, True), (2, 4, True)]:
354:             self.check_is_valid_linkage_various_size(nrow, ncol, valid)
355: 
356:     def check_is_valid_linkage_various_size(self, nrow, ncol, valid):
357:         # Tests is_valid_linkage(Z) with linkage matrics of various sizes
358:         Z = np.asarray([[0, 1, 3.0, 2, 5],
359:                         [3, 2, 4.0, 3, 3]], dtype=np.double)
360:         Z = Z[:nrow, :ncol]
361:         assert_(is_valid_linkage(Z) == valid)
362:         if not valid:
363:             assert_raises(ValueError, is_valid_linkage, Z, throw=True)
364: 
365:     def test_is_valid_linkage_int_type(self):
366:         # Tests is_valid_linkage(Z) with integer type.
367:         Z = np.asarray([[0, 1, 3.0, 2],
368:                         [3, 2, 4.0, 3]], dtype=int)
369:         assert_(is_valid_linkage(Z) == False)
370:         assert_raises(TypeError, is_valid_linkage, Z, throw=True)
371: 
372:     def test_is_valid_linkage_empty(self):
373:         # Tests is_valid_linkage(Z) with empty linkage.
374:         Z = np.zeros((0, 4), dtype=np.double)
375:         assert_(is_valid_linkage(Z) == False)
376:         assert_raises(ValueError, is_valid_linkage, Z, throw=True)
377: 
378:     def test_is_valid_linkage_4_and_up(self):
379:         # Tests is_valid_linkage(Z) on linkage on observation sets between
380:         # sizes 4 and 15 (step size 3).
381:         for i in xrange(4, 15, 3):
382:             y = np.random.rand(i*(i-1)//2)
383:             Z = linkage(y)
384:             assert_(is_valid_linkage(Z) == True)
385: 
386:     def test_is_valid_linkage_4_and_up_neg_index_left(self):
387:         # Tests is_valid_linkage(Z) on linkage on observation sets between
388:         # sizes 4 and 15 (step size 3) with negative indices (left).
389:         for i in xrange(4, 15, 3):
390:             y = np.random.rand(i*(i-1)//2)
391:             Z = linkage(y)
392:             Z[i//2,0] = -2
393:             assert_(is_valid_linkage(Z) == False)
394:             assert_raises(ValueError, is_valid_linkage, Z, throw=True)
395: 
396:     def test_is_valid_linkage_4_and_up_neg_index_right(self):
397:         # Tests is_valid_linkage(Z) on linkage on observation sets between
398:         # sizes 4 and 15 (step size 3) with negative indices (right).
399:         for i in xrange(4, 15, 3):
400:             y = np.random.rand(i*(i-1)//2)
401:             Z = linkage(y)
402:             Z[i//2,1] = -2
403:             assert_(is_valid_linkage(Z) == False)
404:             assert_raises(ValueError, is_valid_linkage, Z, throw=True)
405: 
406:     def test_is_valid_linkage_4_and_up_neg_dist(self):
407:         # Tests is_valid_linkage(Z) on linkage on observation sets between
408:         # sizes 4 and 15 (step size 3) with negative distances.
409:         for i in xrange(4, 15, 3):
410:             y = np.random.rand(i*(i-1)//2)
411:             Z = linkage(y)
412:             Z[i//2,2] = -0.5
413:             assert_(is_valid_linkage(Z) == False)
414:             assert_raises(ValueError, is_valid_linkage, Z, throw=True)
415: 
416:     def test_is_valid_linkage_4_and_up_neg_counts(self):
417:         # Tests is_valid_linkage(Z) on linkage on observation sets between
418:         # sizes 4 and 15 (step size 3) with negative counts.
419:         for i in xrange(4, 15, 3):
420:             y = np.random.rand(i*(i-1)//2)
421:             Z = linkage(y)
422:             Z[i//2,3] = -2
423:             assert_(is_valid_linkage(Z) == False)
424:             assert_raises(ValueError, is_valid_linkage, Z, throw=True)
425: 
426: 
427: class TestIsValidInconsistent(object):
428:     def test_is_valid_im_int_type(self):
429:         # Tests is_valid_im(R) with integer type.
430:         R = np.asarray([[0, 1, 3.0, 2],
431:                         [3, 2, 4.0, 3]], dtype=int)
432:         assert_(is_valid_im(R) == False)
433:         assert_raises(TypeError, is_valid_im, R, throw=True)
434: 
435:     def test_is_valid_im_various_size(self):
436:         for nrow, ncol, valid in [(2, 5, False), (2, 3, False),
437:                                   (1, 4, True), (2, 4, True)]:
438:             self.check_is_valid_im_various_size(nrow, ncol, valid)
439: 
440:     def check_is_valid_im_various_size(self, nrow, ncol, valid):
441:         # Tests is_valid_im(R) with linkage matrics of various sizes
442:         R = np.asarray([[0, 1, 3.0, 2, 5],
443:                         [3, 2, 4.0, 3, 3]], dtype=np.double)
444:         R = R[:nrow, :ncol]
445:         assert_(is_valid_im(R) == valid)
446:         if not valid:
447:             assert_raises(ValueError, is_valid_im, R, throw=True)
448: 
449:     def test_is_valid_im_empty(self):
450:         # Tests is_valid_im(R) with empty inconsistency matrix.
451:         R = np.zeros((0, 4), dtype=np.double)
452:         assert_(is_valid_im(R) == False)
453:         assert_raises(ValueError, is_valid_im, R, throw=True)
454: 
455:     def test_is_valid_im_4_and_up(self):
456:         # Tests is_valid_im(R) on im on observation sets between sizes 4 and 15
457:         # (step size 3).
458:         for i in xrange(4, 15, 3):
459:             y = np.random.rand(i*(i-1)//2)
460:             Z = linkage(y)
461:             R = inconsistent(Z)
462:             assert_(is_valid_im(R) == True)
463: 
464:     def test_is_valid_im_4_and_up_neg_index_left(self):
465:         # Tests is_valid_im(R) on im on observation sets between sizes 4 and 15
466:         # (step size 3) with negative link height means.
467:         for i in xrange(4, 15, 3):
468:             y = np.random.rand(i*(i-1)//2)
469:             Z = linkage(y)
470:             R = inconsistent(Z)
471:             R[i//2,0] = -2.0
472:             assert_(is_valid_im(R) == False)
473:             assert_raises(ValueError, is_valid_im, R, throw=True)
474: 
475:     def test_is_valid_im_4_and_up_neg_index_right(self):
476:         # Tests is_valid_im(R) on im on observation sets between sizes 4 and 15
477:         # (step size 3) with negative link height standard deviations.
478:         for i in xrange(4, 15, 3):
479:             y = np.random.rand(i*(i-1)//2)
480:             Z = linkage(y)
481:             R = inconsistent(Z)
482:             R[i//2,1] = -2.0
483:             assert_(is_valid_im(R) == False)
484:             assert_raises(ValueError, is_valid_im, R, throw=True)
485: 
486:     def test_is_valid_im_4_and_up_neg_dist(self):
487:         # Tests is_valid_im(R) on im on observation sets between sizes 4 and 15
488:         # (step size 3) with negative link counts.
489:         for i in xrange(4, 15, 3):
490:             y = np.random.rand(i*(i-1)//2)
491:             Z = linkage(y)
492:             R = inconsistent(Z)
493:             R[i//2,2] = -0.5
494:             assert_(is_valid_im(R) == False)
495:             assert_raises(ValueError, is_valid_im, R, throw=True)
496: 
497: 
498: class TestNumObsLinkage(object):
499:     def test_num_obs_linkage_empty(self):
500:         # Tests num_obs_linkage(Z) with empty linkage.
501:         Z = np.zeros((0, 4), dtype=np.double)
502:         assert_raises(ValueError, num_obs_linkage, Z)
503: 
504:     def test_num_obs_linkage_1x4(self):
505:         # Tests num_obs_linkage(Z) on linkage over 2 observations.
506:         Z = np.asarray([[0, 1, 3.0, 2]], dtype=np.double)
507:         assert_equal(num_obs_linkage(Z), 2)
508: 
509:     def test_num_obs_linkage_2x4(self):
510:         # Tests num_obs_linkage(Z) on linkage over 3 observations.
511:         Z = np.asarray([[0, 1, 3.0, 2],
512:                         [3, 2, 4.0, 3]], dtype=np.double)
513:         assert_equal(num_obs_linkage(Z), 3)
514: 
515:     def test_num_obs_linkage_4_and_up(self):
516:         # Tests num_obs_linkage(Z) on linkage on observation sets between sizes
517:         # 4 and 15 (step size 3).
518:         for i in xrange(4, 15, 3):
519:             y = np.random.rand(i*(i-1)//2)
520:             Z = linkage(y)
521:             assert_equal(num_obs_linkage(Z), i)
522: 
523: 
524: class TestLeavesList(object):
525:     def test_leaves_list_1x4(self):
526:         # Tests leaves_list(Z) on a 1x4 linkage.
527:         Z = np.asarray([[0, 1, 3.0, 2]], dtype=np.double)
528:         to_tree(Z)
529:         assert_equal(leaves_list(Z), [0, 1])
530: 
531:     def test_leaves_list_2x4(self):
532:         # Tests leaves_list(Z) on a 2x4 linkage.
533:         Z = np.asarray([[0, 1, 3.0, 2],
534:                         [3, 2, 4.0, 3]], dtype=np.double)
535:         to_tree(Z)
536:         assert_equal(leaves_list(Z), [0, 1, 2])
537: 
538:     def test_leaves_list_Q(self):
539:         for method in ['single', 'complete', 'average', 'weighted', 'centroid',
540:                        'median', 'ward']:
541:             self.check_leaves_list_Q(method)
542: 
543:     def check_leaves_list_Q(self, method):
544:         # Tests leaves_list(Z) on the Q data set
545:         X = hierarchy_test_data.Q_X
546:         Z = linkage(X, method)
547:         node = to_tree(Z)
548:         assert_equal(node.pre_order(), leaves_list(Z))
549: 
550:     def test_Q_subtree_pre_order(self):
551:         # Tests that pre_order() works when called on sub-trees.
552:         X = hierarchy_test_data.Q_X
553:         Z = linkage(X, 'single')
554:         node = to_tree(Z)
555:         assert_equal(node.pre_order(), (node.get_left().pre_order()
556:                                         + node.get_right().pre_order()))
557: 
558: 
559: class TestCorrespond(object):
560:     def test_correspond_empty(self):
561:         # Tests correspond(Z, y) with empty linkage and condensed distance matrix.
562:         y = np.zeros((0,))
563:         Z = np.zeros((0,4))
564:         assert_raises(ValueError, correspond, Z, y)
565: 
566:     def test_correspond_2_and_up(self):
567:         # Tests correspond(Z, y) on linkage and CDMs over observation sets of
568:         # different sizes.
569:         for i in xrange(2, 4):
570:             y = np.random.rand(i*(i-1)//2)
571:             Z = linkage(y)
572:             assert_(correspond(Z, y))
573:         for i in xrange(4, 15, 3):
574:             y = np.random.rand(i*(i-1)//2)
575:             Z = linkage(y)
576:             assert_(correspond(Z, y))
577: 
578:     def test_correspond_4_and_up(self):
579:         # Tests correspond(Z, y) on linkage and CDMs over observation sets of
580:         # different sizes. Correspondance should be false.
581:         for (i, j) in (list(zip(list(range(2, 4)), list(range(3, 5)))) +
582:                        list(zip(list(range(3, 5)), list(range(2, 4))))):
583:             y = np.random.rand(i*(i-1)//2)
584:             y2 = np.random.rand(j*(j-1)//2)
585:             Z = linkage(y)
586:             Z2 = linkage(y2)
587:             assert_equal(correspond(Z, y2), False)
588:             assert_equal(correspond(Z2, y), False)
589: 
590:     def test_correspond_4_and_up_2(self):
591:         # Tests correspond(Z, y) on linkage and CDMs over observation sets of
592:         # different sizes. Correspondance should be false.
593:         for (i, j) in (list(zip(list(range(2, 7)), list(range(16, 21)))) +
594:                        list(zip(list(range(2, 7)), list(range(16, 21))))):
595:             y = np.random.rand(i*(i-1)//2)
596:             y2 = np.random.rand(j*(j-1)//2)
597:             Z = linkage(y)
598:             Z2 = linkage(y2)
599:             assert_equal(correspond(Z, y2), False)
600:             assert_equal(correspond(Z2, y), False)
601: 
602:     def test_num_obs_linkage_multi_matrix(self):
603:         # Tests num_obs_linkage with observation matrices of multiple sizes.
604:         for n in xrange(2, 10):
605:             X = np.random.rand(n, 4)
606:             Y = pdist(X)
607:             Z = linkage(Y)
608:             assert_equal(num_obs_linkage(Z), n)
609: 
610: 
611: class TestIsMonotonic(object):
612:     def test_is_monotonic_empty(self):
613:         # Tests is_monotonic(Z) on an empty linkage.
614:         Z = np.zeros((0, 4))
615:         assert_raises(ValueError, is_monotonic, Z)
616: 
617:     def test_is_monotonic_1x4(self):
618:         # Tests is_monotonic(Z) on 1x4 linkage. Expecting True.
619:         Z = np.asarray([[0, 1, 0.3, 2]], dtype=np.double)
620:         assert_equal(is_monotonic(Z), True)
621: 
622:     def test_is_monotonic_2x4_T(self):
623:         # Tests is_monotonic(Z) on 2x4 linkage. Expecting True.
624:         Z = np.asarray([[0, 1, 0.3, 2],
625:                         [2, 3, 0.4, 3]], dtype=np.double)
626:         assert_equal(is_monotonic(Z), True)
627: 
628:     def test_is_monotonic_2x4_F(self):
629:         # Tests is_monotonic(Z) on 2x4 linkage. Expecting False.
630:         Z = np.asarray([[0, 1, 0.4, 2],
631:                         [2, 3, 0.3, 3]], dtype=np.double)
632:         assert_equal(is_monotonic(Z), False)
633: 
634:     def test_is_monotonic_3x4_T(self):
635:         # Tests is_monotonic(Z) on 3x4 linkage. Expecting True.
636:         Z = np.asarray([[0, 1, 0.3, 2],
637:                         [2, 3, 0.4, 2],
638:                         [4, 5, 0.6, 4]], dtype=np.double)
639:         assert_equal(is_monotonic(Z), True)
640: 
641:     def test_is_monotonic_3x4_F1(self):
642:         # Tests is_monotonic(Z) on 3x4 linkage (case 1). Expecting False.
643:         Z = np.asarray([[0, 1, 0.3, 2],
644:                         [2, 3, 0.2, 2],
645:                         [4, 5, 0.6, 4]], dtype=np.double)
646:         assert_equal(is_monotonic(Z), False)
647: 
648:     def test_is_monotonic_3x4_F2(self):
649:         # Tests is_monotonic(Z) on 3x4 linkage (case 2). Expecting False.
650:         Z = np.asarray([[0, 1, 0.8, 2],
651:                         [2, 3, 0.4, 2],
652:                         [4, 5, 0.6, 4]], dtype=np.double)
653:         assert_equal(is_monotonic(Z), False)
654: 
655:     def test_is_monotonic_3x4_F3(self):
656:         # Tests is_monotonic(Z) on 3x4 linkage (case 3). Expecting False
657:         Z = np.asarray([[0, 1, 0.3, 2],
658:                         [2, 3, 0.4, 2],
659:                         [4, 5, 0.2, 4]], dtype=np.double)
660:         assert_equal(is_monotonic(Z), False)
661: 
662:     def test_is_monotonic_tdist_linkage1(self):
663:         # Tests is_monotonic(Z) on clustering generated by single linkage on
664:         # tdist data set. Expecting True.
665:         Z = linkage(hierarchy_test_data.ytdist, 'single')
666:         assert_equal(is_monotonic(Z), True)
667: 
668:     def test_is_monotonic_tdist_linkage2(self):
669:         # Tests is_monotonic(Z) on clustering generated by single linkage on
670:         # tdist data set. Perturbing. Expecting False.
671:         Z = linkage(hierarchy_test_data.ytdist, 'single')
672:         Z[2,2] = 0.0
673:         assert_equal(is_monotonic(Z), False)
674: 
675:     def test_is_monotonic_Q_linkage(self):
676:         # Tests is_monotonic(Z) on clustering generated by single linkage on
677:         # Q data set. Expecting True.
678:         X = hierarchy_test_data.Q_X
679:         Z = linkage(X, 'single')
680:         assert_equal(is_monotonic(Z), True)
681: 
682: 
683: class TestMaxDists(object):
684:     def test_maxdists_empty_linkage(self):
685:         # Tests maxdists(Z) on empty linkage. Expecting exception.
686:         Z = np.zeros((0, 4), dtype=np.double)
687:         assert_raises(ValueError, maxdists, Z)
688: 
689:     def test_maxdists_one_cluster_linkage(self):
690:         # Tests maxdists(Z) on linkage with one cluster.
691:         Z = np.asarray([[0, 1, 0.3, 4]], dtype=np.double)
692:         MD = maxdists(Z)
693:         expectedMD = calculate_maximum_distances(Z)
694:         assert_allclose(MD, expectedMD, atol=1e-15)
695: 
696:     def test_maxdists_Q_linkage(self):
697:         for method in ['single', 'complete', 'ward', 'centroid', 'median']:
698:             self.check_maxdists_Q_linkage(method)
699: 
700:     def check_maxdists_Q_linkage(self, method):
701:         # Tests maxdists(Z) on the Q data set
702:         X = hierarchy_test_data.Q_X
703:         Z = linkage(X, method)
704:         MD = maxdists(Z)
705:         expectedMD = calculate_maximum_distances(Z)
706:         assert_allclose(MD, expectedMD, atol=1e-15)
707: 
708: 
709: class TestMaxInconsts(object):
710:     def test_maxinconsts_empty_linkage(self):
711:         # Tests maxinconsts(Z, R) on empty linkage. Expecting exception.
712:         Z = np.zeros((0, 4), dtype=np.double)
713:         R = np.zeros((0, 4), dtype=np.double)
714:         assert_raises(ValueError, maxinconsts, Z, R)
715: 
716:     def test_maxinconsts_difrow_linkage(self):
717:         # Tests maxinconsts(Z, R) on linkage and inconsistency matrices with
718:         # different numbers of clusters. Expecting exception.
719:         Z = np.asarray([[0, 1, 0.3, 4]], dtype=np.double)
720:         R = np.random.rand(2, 4)
721:         assert_raises(ValueError, maxinconsts, Z, R)
722: 
723:     def test_maxinconsts_one_cluster_linkage(self):
724:         # Tests maxinconsts(Z, R) on linkage with one cluster.
725:         Z = np.asarray([[0, 1, 0.3, 4]], dtype=np.double)
726:         R = np.asarray([[0, 0, 0, 0.3]], dtype=np.double)
727:         MD = maxinconsts(Z, R)
728:         expectedMD = calculate_maximum_inconsistencies(Z, R)
729:         assert_allclose(MD, expectedMD, atol=1e-15)
730: 
731:     def test_maxinconsts_Q_linkage(self):
732:         for method in ['single', 'complete', 'ward', 'centroid', 'median']:
733:             self.check_maxinconsts_Q_linkage(method)
734: 
735:     def check_maxinconsts_Q_linkage(self, method):
736:         # Tests maxinconsts(Z, R) on the Q data set
737:         X = hierarchy_test_data.Q_X
738:         Z = linkage(X, method)
739:         R = inconsistent(Z)
740:         MD = maxinconsts(Z, R)
741:         expectedMD = calculate_maximum_inconsistencies(Z, R)
742:         assert_allclose(MD, expectedMD, atol=1e-15)
743: 
744: 
745: class TestMaxRStat(object):
746:     def test_maxRstat_invalid_index(self):
747:         for i in [3.3, -1, 4]:
748:             self.check_maxRstat_invalid_index(i)
749: 
750:     def check_maxRstat_invalid_index(self, i):
751:         # Tests maxRstat(Z, R, i). Expecting exception.
752:         Z = np.asarray([[0, 1, 0.3, 4]], dtype=np.double)
753:         R = np.asarray([[0, 0, 0, 0.3]], dtype=np.double)
754:         if isinstance(i, int):
755:             assert_raises(ValueError, maxRstat, Z, R, i)
756:         else:
757:             assert_raises(TypeError, maxRstat, Z, R, i)
758: 
759:     def test_maxRstat_empty_linkage(self):
760:         for i in range(4):
761:             self.check_maxRstat_empty_linkage(i)
762: 
763:     def check_maxRstat_empty_linkage(self, i):
764:         # Tests maxRstat(Z, R, i) on empty linkage. Expecting exception.
765:         Z = np.zeros((0, 4), dtype=np.double)
766:         R = np.zeros((0, 4), dtype=np.double)
767:         assert_raises(ValueError, maxRstat, Z, R, i)
768: 
769:     def test_maxRstat_difrow_linkage(self):
770:         for i in range(4):
771:             self.check_maxRstat_difrow_linkage(i)
772: 
773:     def check_maxRstat_difrow_linkage(self, i):
774:         # Tests maxRstat(Z, R, i) on linkage and inconsistency matrices with
775:         # different numbers of clusters. Expecting exception.
776:         Z = np.asarray([[0, 1, 0.3, 4]], dtype=np.double)
777:         R = np.random.rand(2, 4)
778:         assert_raises(ValueError, maxRstat, Z, R, i)
779: 
780:     def test_maxRstat_one_cluster_linkage(self):
781:         for i in range(4):
782:             self.check_maxRstat_one_cluster_linkage(i)
783: 
784:     def check_maxRstat_one_cluster_linkage(self, i):
785:         # Tests maxRstat(Z, R, i) on linkage with one cluster.
786:         Z = np.asarray([[0, 1, 0.3, 4]], dtype=np.double)
787:         R = np.asarray([[0, 0, 0, 0.3]], dtype=np.double)
788:         MD = maxRstat(Z, R, 1)
789:         expectedMD = calculate_maximum_inconsistencies(Z, R, 1)
790:         assert_allclose(MD, expectedMD, atol=1e-15)
791: 
792:     def test_maxRstat_Q_linkage(self):
793:         for method in ['single', 'complete', 'ward', 'centroid', 'median']:
794:             for i in range(4):
795:                 self.check_maxRstat_Q_linkage(method, i)
796: 
797:     def check_maxRstat_Q_linkage(self, method, i):
798:         # Tests maxRstat(Z, R, i) on the Q data set
799:         X = hierarchy_test_data.Q_X
800:         Z = linkage(X, method)
801:         R = inconsistent(Z)
802:         MD = maxRstat(Z, R, 1)
803:         expectedMD = calculate_maximum_inconsistencies(Z, R, 1)
804:         assert_allclose(MD, expectedMD, atol=1e-15)
805: 
806: 
807: class TestDendrogram(object):
808:     def test_dendrogram_single_linkage_tdist(self):
809:         # Tests dendrogram calculation on single linkage of the tdist data set.
810:         Z = linkage(hierarchy_test_data.ytdist, 'single')
811:         R = dendrogram(Z, no_plot=True)
812:         leaves = R["leaves"]
813:         assert_equal(leaves, [2, 5, 1, 0, 3, 4])
814: 
815:     def test_valid_orientation(self):
816:         Z = linkage(hierarchy_test_data.ytdist, 'single')
817:         assert_raises(ValueError, dendrogram, Z, orientation="foo")
818: 
819:     @pytest.mark.skipif(not have_matplotlib, reason="no matplotlib")
820:     def test_dendrogram_plot(self):
821:         for orientation in ['top', 'bottom', 'left', 'right']:
822:             self.check_dendrogram_plot(orientation)
823: 
824:     def check_dendrogram_plot(self, orientation):
825:         # Tests dendrogram plotting.
826:         Z = linkage(hierarchy_test_data.ytdist, 'single')
827:         expected = {'color_list': ['g', 'b', 'b', 'b', 'b'],
828:                     'dcoord': [[0.0, 138.0, 138.0, 0.0],
829:                                [0.0, 219.0, 219.0, 0.0],
830:                                [0.0, 255.0, 255.0, 219.0],
831:                                [0.0, 268.0, 268.0, 255.0],
832:                                [138.0, 295.0, 295.0, 268.0]],
833:                     'icoord': [[5.0, 5.0, 15.0, 15.0],
834:                                [45.0, 45.0, 55.0, 55.0],
835:                                [35.0, 35.0, 50.0, 50.0],
836:                                [25.0, 25.0, 42.5, 42.5],
837:                                [10.0, 10.0, 33.75, 33.75]],
838:                     'ivl': ['2', '5', '1', '0', '3', '4'],
839:                     'leaves': [2, 5, 1, 0, 3, 4]}
840: 
841:         fig = plt.figure()
842:         ax = fig.add_subplot(221)
843: 
844:         # test that dendrogram accepts ax keyword
845:         R1 = dendrogram(Z, ax=ax, orientation=orientation)
846:         assert_equal(R1, expected)
847: 
848:         # test that dendrogram accepts and handle the leaf_font_size and
849:         # leaf_rotation keywords
850:         R1a = dendrogram(Z, ax=ax, orientation=orientation,
851:                          leaf_font_size=20, leaf_rotation=90)
852:         testlabel = (
853:             ax.get_xticklabels()[0]
854:             if orientation in ['top', 'bottom']
855:             else ax.get_yticklabels()[0]
856:         )
857:         assert_equal(testlabel.get_rotation(), 90)
858:         assert_equal(testlabel.get_size(), 20)
859:         R1a = dendrogram(Z, ax=ax, orientation=orientation,
860:                          leaf_rotation=90)
861:         testlabel = (
862:             ax.get_xticklabels()[0]
863:             if orientation in ['top', 'bottom']
864:             else ax.get_yticklabels()[0]
865:         )
866:         assert_equal(testlabel.get_rotation(), 90)
867:         R1a = dendrogram(Z, ax=ax, orientation=orientation,
868:                          leaf_font_size=20)
869:         testlabel = (
870:             ax.get_xticklabels()[0]
871:             if orientation in ['top', 'bottom']
872:             else ax.get_yticklabels()[0]
873:         )
874:         assert_equal(testlabel.get_size(), 20)
875:         plt.close()
876: 
877:         # test plotting to gca (will import pylab)
878:         R2 = dendrogram(Z, orientation=orientation)
879:         plt.close()
880:         assert_equal(R2, expected)
881: 
882:     @pytest.mark.skipif(not have_matplotlib, reason="no matplotlib")
883:     def test_dendrogram_truncate_mode(self):
884:         Z = linkage(hierarchy_test_data.ytdist, 'single')
885: 
886:         R = dendrogram(Z, 2, 'lastp', show_contracted=True)
887:         plt.close()
888:         assert_equal(R, {'color_list': ['b'],
889:                          'dcoord': [[0.0, 295.0, 295.0, 0.0]],
890:                          'icoord': [[5.0, 5.0, 15.0, 15.0]],
891:                          'ivl': ['(2)', '(4)'],
892:                          'leaves': [6, 9]})
893: 
894:         R = dendrogram(Z, 2, 'mtica', show_contracted=True)
895:         plt.close()
896:         assert_equal(R, {'color_list': ['g', 'b', 'b', 'b'],
897:                          'dcoord': [[0.0, 138.0, 138.0, 0.0],
898:                                     [0.0, 255.0, 255.0, 0.0],
899:                                     [0.0, 268.0, 268.0, 255.0],
900:                                     [138.0, 295.0, 295.0, 268.0]],
901:                          'icoord': [[5.0, 5.0, 15.0, 15.0],
902:                                     [35.0, 35.0, 45.0, 45.0],
903:                                     [25.0, 25.0, 40.0, 40.0],
904:                                     [10.0, 10.0, 32.5, 32.5]],
905:                          'ivl': ['2', '5', '1', '0', '(2)'],
906:                          'leaves': [2, 5, 1, 0, 7]})
907: 
908:     def test_dendrogram_colors(self):
909:         # Tests dendrogram plots with alternate colors
910:         Z = linkage(hierarchy_test_data.ytdist, 'single')
911: 
912:         set_link_color_palette(['c', 'm', 'y', 'k'])
913:         R = dendrogram(Z, no_plot=True,
914:                        above_threshold_color='g', color_threshold=250)
915:         set_link_color_palette(['g', 'r', 'c', 'm', 'y', 'k'])
916: 
917:         color_list = R['color_list']
918:         assert_equal(color_list, ['c', 'm', 'g', 'g', 'g'])
919: 
920:         # reset color palette (global list)
921:         set_link_color_palette(None)
922: 
923: 
924: def calculate_maximum_distances(Z):
925:     # Used for testing correctness of maxdists.
926:     n = Z.shape[0] + 1
927:     B = np.zeros((n-1,))
928:     q = np.zeros((3,))
929:     for i in xrange(0, n - 1):
930:         q[:] = 0.0
931:         left = Z[i, 0]
932:         right = Z[i, 1]
933:         if left >= n:
934:             q[0] = B[int(left) - n]
935:         if right >= n:
936:             q[1] = B[int(right) - n]
937:         q[2] = Z[i, 2]
938:         B[i] = q.max()
939:     return B
940: 
941: 
942: def calculate_maximum_inconsistencies(Z, R, k=3):
943:     # Used for testing correctness of maxinconsts.
944:     n = Z.shape[0] + 1
945:     B = np.zeros((n-1,))
946:     q = np.zeros((3,))
947:     for i in xrange(0, n - 1):
948:         q[:] = 0.0
949:         left = Z[i, 0]
950:         right = Z[i, 1]
951:         if left >= n:
952:             q[0] = B[int(left) - n]
953:         if right >= n:
954:             q[1] = B[int(right) - n]
955:         q[2] = R[i, k]
956:         B[i] = q.max()
957:     return B
958: 
959: 
960: def within_tol(a, b, tol):
961:     return np.abs(a - b).max() < tol
962: 
963: 
964: def test_unsupported_uncondensed_distance_matrix_linkage_warning():
965:     assert_warns(ClusterWarning, linkage, [[0, 1], [1, 0]])
966: 
967: 
968: def test_euclidean_linkage_value_error():
969:     for method in scipy.cluster.hierarchy._EUCLIDEAN_METHODS:
970:         assert_raises(ValueError, linkage, [[1, 1], [1, 1]],
971:                       method=method, metric='cityblock')
972: 
973: 
974: def test_2x2_linkage():
975:     Z1 = linkage([1], method='single', metric='euclidean')
976:     Z2 = linkage([[0, 1], [0, 0]], method='single', metric='euclidean')
977:     assert_allclose(Z1, Z2)
978: 
979: 
980: def test_node_compare():
981:     np.random.seed(23)
982:     nobs = 50
983:     X = np.random.randn(nobs, 4)
984:     Z = scipy.cluster.hierarchy.ward(X)
985:     tree = to_tree(Z)
986:     assert_(tree > tree.get_left())
987:     assert_(tree.get_right() > tree.get_left())
988:     assert_(tree.get_right() == tree.get_right())
989:     assert_(tree.get_right() != tree.get_left())
990: 
991: 
992: def test_cut_tree():
993:     np.random.seed(23)
994:     nobs = 50
995:     X = np.random.randn(nobs, 4)
996:     Z = scipy.cluster.hierarchy.ward(X)
997:     cutree = cut_tree(Z)
998: 
999:     assert_equal(cutree[:, 0], np.arange(nobs))
1000:     assert_equal(cutree[:, -1], np.zeros(nobs))
1001:     assert_equal(cutree.max(0), np.arange(nobs - 1, -1, -1))
1002: 
1003:     assert_equal(cutree[:, [-5]], cut_tree(Z, n_clusters=5))
1004:     assert_equal(cutree[:, [-5, -10]], cut_tree(Z, n_clusters=[5, 10]))
1005:     assert_equal(cutree[:, [-10, -5]], cut_tree(Z, n_clusters=[10, 5]))
1006: 
1007:     nodes = _order_cluster_tree(Z)
1008:     heights = np.array([node.dist for node in nodes])
1009: 
1010:     assert_equal(cutree[:, np.searchsorted(heights, [5])],
1011:                  cut_tree(Z, height=5))
1012:     assert_equal(cutree[:, np.searchsorted(heights, [5, 10])],
1013:                  cut_tree(Z, height=[5, 10]))
1014:     assert_equal(cutree[:, np.searchsorted(heights, [10, 5])],
1015:                  cut_tree(Z, height=[10, 5]))
1016: 
1017: 
1018: def test_optimal_leaf_ordering():
1019:     # test with the distance vector y
1020:     Z = optimal_leaf_ordering(linkage(hierarchy_test_data.ytdist),
1021:                               hierarchy_test_data.ytdist)
1022:     expectedZ = hierarchy_test_data.linkage_ytdist_single_olo
1023:     assert_allclose(Z, expectedZ, atol=1e-10)
1024: 
1025:     # test with the observation matrix X
1026:     Z = optimal_leaf_ordering(linkage(hierarchy_test_data.X, 'ward'),
1027:                               hierarchy_test_data.X)
1028:     expectedZ = hierarchy_test_data.linkage_X_ward_olo
1029:     assert_allclose(Z, expectedZ, atol=1e-06)
1030: 
1031: 
1032: def test_Heap():
1033:     values = np.array([2, -1, 0, -1.5, 3])
1034:     heap = Heap(values)
1035: 
1036:     pair = heap.get_min()
1037:     assert_equal(pair['key'], 3)
1038:     assert_equal(pair['value'], -1.5)
1039: 
1040:     heap.remove_min()
1041:     pair = heap.get_min()
1042:     assert_equal(pair['key'], 1)
1043:     assert_equal(pair['value'], -1)
1044: 
1045:     heap.change_value(1, 2.5)
1046:     pair = heap.get_min()
1047:     assert_equal(pair['key'], 2)
1048:     assert_equal(pair['value'], 0)
1049: 
1050:     heap.remove_min()
1051:     heap.remove_min()
1052: 
1053:     heap.change_value(1, 10)
1054:     pair = heap.get_min()
1055:     assert_equal(pair['key'], 4)
1056:     assert_equal(pair['value'], 3)
1057: 
1058:     heap.remove_min()
1059:     pair = heap.get_min()
1060:     assert_equal(pair['key'], 1)
1061:     assert_equal(pair['value'], 10)
1062: 
1063: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 36, 0))

# 'import numpy' statement (line 36)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7447 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 36, 0), 'numpy')

if (type(import_7447) is not StypyTypeError):

    if (import_7447 != 'pyd_module'):
        __import__(import_7447)
        sys_modules_7448 = sys.modules[import_7447]
        import_module(stypy.reporting.localization.Localization(__file__, 36, 0), 'np', sys_modules_7448.module_type_store, module_type_store)
    else:
        import numpy as np

        import_module(stypy.reporting.localization.Localization(__file__, 36, 0), 'np', numpy, module_type_store)

else:
    # Assigning a type to the variable 'numpy' (line 36)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 0), 'numpy', import_7447)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 37, 0))

# 'from numpy.testing import assert_allclose, assert_equal, assert_, assert_warns' statement (line 37)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7449 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 37, 0), 'numpy.testing')

if (type(import_7449) is not StypyTypeError):

    if (import_7449 != 'pyd_module'):
        __import__(import_7449)
        sys_modules_7450 = sys.modules[import_7449]
        import_from_module(stypy.reporting.localization.Localization(__file__, 37, 0), 'numpy.testing', sys_modules_7450.module_type_store, module_type_store, ['assert_allclose', 'assert_equal', 'assert_', 'assert_warns'])
        nest_module(stypy.reporting.localization.Localization(__file__, 37, 0), __file__, sys_modules_7450, sys_modules_7450.module_type_store, module_type_store)
    else:
        from numpy.testing import assert_allclose, assert_equal, assert_, assert_warns

        import_from_module(stypy.reporting.localization.Localization(__file__, 37, 0), 'numpy.testing', None, module_type_store, ['assert_allclose', 'assert_equal', 'assert_', 'assert_warns'], [assert_allclose, assert_equal, assert_, assert_warns])

else:
    # Assigning a type to the variable 'numpy.testing' (line 37)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 37, 0), 'numpy.testing', import_7449)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 38, 0))

# 'import pytest' statement (line 38)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7451 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'pytest')

if (type(import_7451) is not StypyTypeError):

    if (import_7451 != 'pyd_module'):
        __import__(import_7451)
        sys_modules_7452 = sys.modules[import_7451]
        import_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'pytest', sys_modules_7452.module_type_store, module_type_store)
    else:
        import pytest

        import_module(stypy.reporting.localization.Localization(__file__, 38, 0), 'pytest', pytest, module_type_store)

else:
    # Assigning a type to the variable 'pytest' (line 38)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 0), 'pytest', import_7451)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 39, 0))

# 'from pytest import assert_raises' statement (line 39)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7453 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 39, 0), 'pytest')

if (type(import_7453) is not StypyTypeError):

    if (import_7453 != 'pyd_module'):
        __import__(import_7453)
        sys_modules_7454 = sys.modules[import_7453]
        import_from_module(stypy.reporting.localization.Localization(__file__, 39, 0), 'pytest', sys_modules_7454.module_type_store, module_type_store, ['raises'])
        nest_module(stypy.reporting.localization.Localization(__file__, 39, 0), __file__, sys_modules_7454, sys_modules_7454.module_type_store, module_type_store)
    else:
        from pytest import raises as assert_raises

        import_from_module(stypy.reporting.localization.Localization(__file__, 39, 0), 'pytest', None, module_type_store, ['raises'], [assert_raises])

else:
    # Assigning a type to the variable 'pytest' (line 39)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 39, 0), 'pytest', import_7453)

# Adding an alias
module_type_store.add_alias('assert_raises', 'raises')
remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 41, 0))

# 'from scipy._lib.six import xrange, u' statement (line 41)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7455 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 41, 0), 'scipy._lib.six')

if (type(import_7455) is not StypyTypeError):

    if (import_7455 != 'pyd_module'):
        __import__(import_7455)
        sys_modules_7456 = sys.modules[import_7455]
        import_from_module(stypy.reporting.localization.Localization(__file__, 41, 0), 'scipy._lib.six', sys_modules_7456.module_type_store, module_type_store, ['xrange', 'u'])
        nest_module(stypy.reporting.localization.Localization(__file__, 41, 0), __file__, sys_modules_7456, sys_modules_7456.module_type_store, module_type_store)
    else:
        from scipy._lib.six import xrange, u

        import_from_module(stypy.reporting.localization.Localization(__file__, 41, 0), 'scipy._lib.six', None, module_type_store, ['xrange', 'u'], [xrange, u])

else:
    # Assigning a type to the variable 'scipy._lib.six' (line 41)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 41, 0), 'scipy._lib.six', import_7455)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 43, 0))

# 'import scipy.cluster.hierarchy' statement (line 43)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7457 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 43, 0), 'scipy.cluster.hierarchy')

if (type(import_7457) is not StypyTypeError):

    if (import_7457 != 'pyd_module'):
        __import__(import_7457)
        sys_modules_7458 = sys.modules[import_7457]
        import_module(stypy.reporting.localization.Localization(__file__, 43, 0), 'scipy.cluster.hierarchy', sys_modules_7458.module_type_store, module_type_store)
    else:
        import scipy.cluster.hierarchy

        import_module(stypy.reporting.localization.Localization(__file__, 43, 0), 'scipy.cluster.hierarchy', scipy.cluster.hierarchy, module_type_store)

else:
    # Assigning a type to the variable 'scipy.cluster.hierarchy' (line 43)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 0), 'scipy.cluster.hierarchy', import_7457)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 44, 0))

# 'from scipy.cluster.hierarchy import ClusterWarning, linkage, from_mlab_linkage, to_mlab_linkage, num_obs_linkage, inconsistent, cophenet, fclusterdata, fcluster, is_isomorphic, single, leaders, complete, weighted, centroid, correspond, is_monotonic, maxdists, maxinconsts, maxRstat, is_valid_linkage, is_valid_im, to_tree, leaves_list, dendrogram, set_link_color_palette, cut_tree, optimal_leaf_ordering, _order_cluster_tree, _hierarchy, _LINKAGE_METHODS' statement (line 44)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7459 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 44, 0), 'scipy.cluster.hierarchy')

if (type(import_7459) is not StypyTypeError):

    if (import_7459 != 'pyd_module'):
        __import__(import_7459)
        sys_modules_7460 = sys.modules[import_7459]
        import_from_module(stypy.reporting.localization.Localization(__file__, 44, 0), 'scipy.cluster.hierarchy', sys_modules_7460.module_type_store, module_type_store, ['ClusterWarning', 'linkage', 'from_mlab_linkage', 'to_mlab_linkage', 'num_obs_linkage', 'inconsistent', 'cophenet', 'fclusterdata', 'fcluster', 'is_isomorphic', 'single', 'leaders', 'complete', 'weighted', 'centroid', 'correspond', 'is_monotonic', 'maxdists', 'maxinconsts', 'maxRstat', 'is_valid_linkage', 'is_valid_im', 'to_tree', 'leaves_list', 'dendrogram', 'set_link_color_palette', 'cut_tree', 'optimal_leaf_ordering', '_order_cluster_tree', '_hierarchy', '_LINKAGE_METHODS'])
        nest_module(stypy.reporting.localization.Localization(__file__, 44, 0), __file__, sys_modules_7460, sys_modules_7460.module_type_store, module_type_store)
    else:
        from scipy.cluster.hierarchy import ClusterWarning, linkage, from_mlab_linkage, to_mlab_linkage, num_obs_linkage, inconsistent, cophenet, fclusterdata, fcluster, is_isomorphic, single, leaders, complete, weighted, centroid, correspond, is_monotonic, maxdists, maxinconsts, maxRstat, is_valid_linkage, is_valid_im, to_tree, leaves_list, dendrogram, set_link_color_palette, cut_tree, optimal_leaf_ordering, _order_cluster_tree, _hierarchy, _LINKAGE_METHODS

        import_from_module(stypy.reporting.localization.Localization(__file__, 44, 0), 'scipy.cluster.hierarchy', None, module_type_store, ['ClusterWarning', 'linkage', 'from_mlab_linkage', 'to_mlab_linkage', 'num_obs_linkage', 'inconsistent', 'cophenet', 'fclusterdata', 'fcluster', 'is_isomorphic', 'single', 'leaders', 'complete', 'weighted', 'centroid', 'correspond', 'is_monotonic', 'maxdists', 'maxinconsts', 'maxRstat', 'is_valid_linkage', 'is_valid_im', 'to_tree', 'leaves_list', 'dendrogram', 'set_link_color_palette', 'cut_tree', 'optimal_leaf_ordering', '_order_cluster_tree', '_hierarchy', '_LINKAGE_METHODS'], [ClusterWarning, linkage, from_mlab_linkage, to_mlab_linkage, num_obs_linkage, inconsistent, cophenet, fclusterdata, fcluster, is_isomorphic, single, leaders, complete, weighted, centroid, correspond, is_monotonic, maxdists, maxinconsts, maxRstat, is_valid_linkage, is_valid_im, to_tree, leaves_list, dendrogram, set_link_color_palette, cut_tree, optimal_leaf_ordering, _order_cluster_tree, _hierarchy, _LINKAGE_METHODS])

else:
    # Assigning a type to the variable 'scipy.cluster.hierarchy' (line 44)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 44, 0), 'scipy.cluster.hierarchy', import_7459)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 52, 0))

# 'from scipy.spatial.distance import pdist' statement (line 52)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7461 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 52, 0), 'scipy.spatial.distance')

if (type(import_7461) is not StypyTypeError):

    if (import_7461 != 'pyd_module'):
        __import__(import_7461)
        sys_modules_7462 = sys.modules[import_7461]
        import_from_module(stypy.reporting.localization.Localization(__file__, 52, 0), 'scipy.spatial.distance', sys_modules_7462.module_type_store, module_type_store, ['pdist'])
        nest_module(stypy.reporting.localization.Localization(__file__, 52, 0), __file__, sys_modules_7462, sys_modules_7462.module_type_store, module_type_store)
    else:
        from scipy.spatial.distance import pdist

        import_from_module(stypy.reporting.localization.Localization(__file__, 52, 0), 'scipy.spatial.distance', None, module_type_store, ['pdist'], [pdist])

else:
    # Assigning a type to the variable 'scipy.spatial.distance' (line 52)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 52, 0), 'scipy.spatial.distance', import_7461)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 53, 0))

# 'from scipy.cluster._hierarchy import Heap' statement (line 53)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7463 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 53, 0), 'scipy.cluster._hierarchy')

if (type(import_7463) is not StypyTypeError):

    if (import_7463 != 'pyd_module'):
        __import__(import_7463)
        sys_modules_7464 = sys.modules[import_7463]
        import_from_module(stypy.reporting.localization.Localization(__file__, 53, 0), 'scipy.cluster._hierarchy', sys_modules_7464.module_type_store, module_type_store, ['Heap'])
        nest_module(stypy.reporting.localization.Localization(__file__, 53, 0), __file__, sys_modules_7464, sys_modules_7464.module_type_store, module_type_store)
    else:
        from scipy.cluster._hierarchy import Heap

        import_from_module(stypy.reporting.localization.Localization(__file__, 53, 0), 'scipy.cluster._hierarchy', None, module_type_store, ['Heap'], [Heap])

else:
    # Assigning a type to the variable 'scipy.cluster._hierarchy' (line 53)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 53, 0), 'scipy.cluster._hierarchy', import_7463)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 55, 0))

# 'from scipy.cluster.tests import hierarchy_test_data' statement (line 55)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7465 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 55, 0), 'scipy.cluster.tests')

if (type(import_7465) is not StypyTypeError):

    if (import_7465 != 'pyd_module'):
        __import__(import_7465)
        sys_modules_7466 = sys.modules[import_7465]
        import_from_module(stypy.reporting.localization.Localization(__file__, 55, 0), 'scipy.cluster.tests', sys_modules_7466.module_type_store, module_type_store, ['hierarchy_test_data'])
        nest_module(stypy.reporting.localization.Localization(__file__, 55, 0), __file__, sys_modules_7466, sys_modules_7466.module_type_store, module_type_store)
    else:
        from scipy.cluster.tests import hierarchy_test_data

        import_from_module(stypy.reporting.localization.Localization(__file__, 55, 0), 'scipy.cluster.tests', None, module_type_store, ['hierarchy_test_data'], [hierarchy_test_data])

else:
    # Assigning a type to the variable 'scipy.cluster.tests' (line 55)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 55, 0), 'scipy.cluster.tests', import_7465)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')



# SSA begins for try-except statement (line 60)
module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 61, 4))

# 'import matplotlib' statement (line 61)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7467 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 61, 4), 'matplotlib')

if (type(import_7467) is not StypyTypeError):

    if (import_7467 != 'pyd_module'):
        __import__(import_7467)
        sys_modules_7468 = sys.modules[import_7467]
        import_module(stypy.reporting.localization.Localization(__file__, 61, 4), 'matplotlib', sys_modules_7468.module_type_store, module_type_store)
    else:
        import matplotlib

        import_module(stypy.reporting.localization.Localization(__file__, 61, 4), 'matplotlib', matplotlib, module_type_store)

else:
    # Assigning a type to the variable 'matplotlib' (line 61)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 61, 4), 'matplotlib', import_7467)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')


# Call to use(...): (line 63)
# Processing the call arguments (line 63)
str_7471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 63, 19), 'str', 'Agg')
# Processing the call keyword arguments (line 63)
kwargs_7472 = {}
# Getting the type of 'matplotlib' (line 63)
matplotlib_7469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 4), 'matplotlib', False)
# Obtaining the member 'use' of a type (line 63)
use_7470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 63, 4), matplotlib_7469, 'use')
# Calling use(args, kwargs) (line 63)
use_call_result_7473 = invoke(stypy.reporting.localization.Localization(__file__, 63, 4), use_7470, *[str_7471], **kwargs_7472)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 65, 4))

# 'import matplotlib.pyplot' statement (line 65)
update_path_to_current_file_folder('C:/Python27/lib/site-packages/scipy/cluster/tests/')
import_7474 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 65, 4), 'matplotlib.pyplot')

if (type(import_7474) is not StypyTypeError):

    if (import_7474 != 'pyd_module'):
        __import__(import_7474)
        sys_modules_7475 = sys.modules[import_7474]
        import_module(stypy.reporting.localization.Localization(__file__, 65, 4), 'plt', sys_modules_7475.module_type_store, module_type_store)
    else:
        import matplotlib.pyplot as plt

        import_module(stypy.reporting.localization.Localization(__file__, 65, 4), 'plt', matplotlib.pyplot, module_type_store)

else:
    # Assigning a type to the variable 'matplotlib.pyplot' (line 65)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 4), 'matplotlib.pyplot', import_7474)

remove_current_file_folder_from_path('C:/Python27/lib/site-packages/scipy/cluster/tests/')


# Assigning a Name to a Name (line 66):

# Assigning a Name to a Name (line 66):
# Getting the type of 'True' (line 66)
True_7476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 22), 'True')
# Assigning a type to the variable 'have_matplotlib' (line 66)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 66, 4), 'have_matplotlib', True_7476)
# SSA branch for the except part of a try statement (line 60)
# SSA branch for the except '<any exception>' branch of a try statement (line 60)
module_type_store.open_ssa_branch('except')

# Assigning a Name to a Name (line 68):

# Assigning a Name to a Name (line 68):
# Getting the type of 'False' (line 68)
False_7477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 22), 'False')
# Assigning a type to the variable 'have_matplotlib' (line 68)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 4), 'have_matplotlib', False_7477)
# SSA join for try-except statement (line 60)
module_type_store = module_type_store.join_ssa_context()

# Declaration of the 'TestLinkage' class

class TestLinkage(object, ):

    @norecursion
    def test_linkage_non_finite_elements_in_distance_matrix(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_linkage_non_finite_elements_in_distance_matrix'
        module_type_store = module_type_store.open_function_context('test_linkage_non_finite_elements_in_distance_matrix', 72, 4, False)
        # Assigning a type to the variable 'self' (line 73)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 73, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_localization', localization)
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_function_name', 'TestLinkage.test_linkage_non_finite_elements_in_distance_matrix')
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_param_names_list', [])
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkage.test_linkage_non_finite_elements_in_distance_matrix.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkage.test_linkage_non_finite_elements_in_distance_matrix', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_linkage_non_finite_elements_in_distance_matrix', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_linkage_non_finite_elements_in_distance_matrix(...)' code ##################

        
        # Assigning a Call to a Name (line 75):
        
        # Assigning a Call to a Name (line 75):
        
        # Call to zeros(...): (line 75)
        # Processing the call arguments (line 75)
        
        # Obtaining an instance of the builtin type 'tuple' (line 75)
        tuple_7480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 75)
        # Adding element type (line 75)
        int_7481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 75, 22), tuple_7480, int_7481)
        
        # Processing the call keyword arguments (line 75)
        kwargs_7482 = {}
        # Getting the type of 'np' (line 75)
        np_7478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 75)
        zeros_7479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 12), np_7478, 'zeros')
        # Calling zeros(args, kwargs) (line 75)
        zeros_call_result_7483 = invoke(stypy.reporting.localization.Localization(__file__, 75, 12), zeros_7479, *[tuple_7480], **kwargs_7482)
        
        # Assigning a type to the variable 'y' (line 75)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 8), 'y', zeros_call_result_7483)
        
        # Assigning a Attribute to a Subscript (line 76):
        
        # Assigning a Attribute to a Subscript (line 76):
        # Getting the type of 'np' (line 76)
        np_7484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 15), 'np')
        # Obtaining the member 'nan' of a type (line 76)
        nan_7485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 76, 15), np_7484, 'nan')
        # Getting the type of 'y' (line 76)
        y_7486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 8), 'y')
        int_7487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 76, 10), 'int')
        # Storing an element on a container (line 76)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 76, 8), y_7486, (int_7487, nan_7485))
        
        # Call to assert_raises(...): (line 77)
        # Processing the call arguments (line 77)
        # Getting the type of 'ValueError' (line 77)
        ValueError_7489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 22), 'ValueError', False)
        # Getting the type of 'linkage' (line 77)
        linkage_7490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 34), 'linkage', False)
        # Getting the type of 'y' (line 77)
        y_7491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 43), 'y', False)
        # Processing the call keyword arguments (line 77)
        kwargs_7492 = {}
        # Getting the type of 'assert_raises' (line 77)
        assert_raises_7488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 77)
        assert_raises_call_result_7493 = invoke(stypy.reporting.localization.Localization(__file__, 77, 8), assert_raises_7488, *[ValueError_7489, linkage_7490, y_7491], **kwargs_7492)
        
        
        # ################# End of 'test_linkage_non_finite_elements_in_distance_matrix(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_linkage_non_finite_elements_in_distance_matrix' in the type store
        # Getting the type of 'stypy_return_type' (line 72)
        stypy_return_type_7494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7494)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_linkage_non_finite_elements_in_distance_matrix'
        return stypy_return_type_7494


    @norecursion
    def test_linkage_empty_distance_matrix(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_linkage_empty_distance_matrix'
        module_type_store = module_type_store.open_function_context('test_linkage_empty_distance_matrix', 79, 4, False)
        # Assigning a type to the variable 'self' (line 80)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_localization', localization)
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_function_name', 'TestLinkage.test_linkage_empty_distance_matrix')
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_param_names_list', [])
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkage.test_linkage_empty_distance_matrix.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkage.test_linkage_empty_distance_matrix', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_linkage_empty_distance_matrix', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_linkage_empty_distance_matrix(...)' code ##################

        
        # Assigning a Call to a Name (line 81):
        
        # Assigning a Call to a Name (line 81):
        
        # Call to zeros(...): (line 81)
        # Processing the call arguments (line 81)
        
        # Obtaining an instance of the builtin type 'tuple' (line 81)
        tuple_7497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 81)
        # Adding element type (line 81)
        int_7498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 81, 22), tuple_7497, int_7498)
        
        # Processing the call keyword arguments (line 81)
        kwargs_7499 = {}
        # Getting the type of 'np' (line 81)
        np_7495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 81)
        zeros_7496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 81, 12), np_7495, 'zeros')
        # Calling zeros(args, kwargs) (line 81)
        zeros_call_result_7500 = invoke(stypy.reporting.localization.Localization(__file__, 81, 12), zeros_7496, *[tuple_7497], **kwargs_7499)
        
        # Assigning a type to the variable 'y' (line 81)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 8), 'y', zeros_call_result_7500)
        
        # Call to assert_raises(...): (line 82)
        # Processing the call arguments (line 82)
        # Getting the type of 'ValueError' (line 82)
        ValueError_7502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 22), 'ValueError', False)
        # Getting the type of 'linkage' (line 82)
        linkage_7503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 34), 'linkage', False)
        # Getting the type of 'y' (line 82)
        y_7504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 43), 'y', False)
        # Processing the call keyword arguments (line 82)
        kwargs_7505 = {}
        # Getting the type of 'assert_raises' (line 82)
        assert_raises_7501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 82)
        assert_raises_call_result_7506 = invoke(stypy.reporting.localization.Localization(__file__, 82, 8), assert_raises_7501, *[ValueError_7502, linkage_7503, y_7504], **kwargs_7505)
        
        
        # ################# End of 'test_linkage_empty_distance_matrix(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_linkage_empty_distance_matrix' in the type store
        # Getting the type of 'stypy_return_type' (line 79)
        stypy_return_type_7507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7507)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_linkage_empty_distance_matrix'
        return stypy_return_type_7507


    @norecursion
    def test_linkage_tdist(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_linkage_tdist'
        module_type_store = module_type_store.open_function_context('test_linkage_tdist', 84, 4, False)
        # Assigning a type to the variable 'self' (line 85)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_localization', localization)
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_function_name', 'TestLinkage.test_linkage_tdist')
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_param_names_list', [])
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkage.test_linkage_tdist.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkage.test_linkage_tdist', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_linkage_tdist', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_linkage_tdist(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 85)
        list_7508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 85)
        # Adding element type (line 85)
        str_7509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 23), 'str', 'single')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 85, 22), list_7508, str_7509)
        # Adding element type (line 85)
        str_7510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 33), 'str', 'complete')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 85, 22), list_7508, str_7510)
        # Adding element type (line 85)
        str_7511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 45), 'str', 'average')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 85, 22), list_7508, str_7511)
        # Adding element type (line 85)
        str_7512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 56), 'str', 'weighted')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 85, 22), list_7508, str_7512)
        # Adding element type (line 85)
        
        # Call to u(...): (line 85)
        # Processing the call arguments (line 85)
        str_7514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 70), 'str', 'single')
        # Processing the call keyword arguments (line 85)
        kwargs_7515 = {}
        # Getting the type of 'u' (line 85)
        u_7513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 68), 'u', False)
        # Calling u(args, kwargs) (line 85)
        u_call_result_7516 = invoke(stypy.reporting.localization.Localization(__file__, 85, 68), u_7513, *[str_7514], **kwargs_7515)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 85, 22), list_7508, u_call_result_7516)
        
        # Testing the type of a for loop iterable (line 85)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 85, 8), list_7508)
        # Getting the type of the for loop variable (line 85)
        for_loop_var_7517 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 85, 8), list_7508)
        # Assigning a type to the variable 'method' (line 85)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 8), 'method', for_loop_var_7517)
        # SSA begins for a for statement (line 85)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_linkage_tdist(...): (line 86)
        # Processing the call arguments (line 86)
        # Getting the type of 'method' (line 86)
        method_7520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 37), 'method', False)
        # Processing the call keyword arguments (line 86)
        kwargs_7521 = {}
        # Getting the type of 'self' (line 86)
        self_7518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 12), 'self', False)
        # Obtaining the member 'check_linkage_tdist' of a type (line 86)
        check_linkage_tdist_7519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 12), self_7518, 'check_linkage_tdist')
        # Calling check_linkage_tdist(args, kwargs) (line 86)
        check_linkage_tdist_call_result_7522 = invoke(stypy.reporting.localization.Localization(__file__, 86, 12), check_linkage_tdist_7519, *[method_7520], **kwargs_7521)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_linkage_tdist(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_linkage_tdist' in the type store
        # Getting the type of 'stypy_return_type' (line 84)
        stypy_return_type_7523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7523)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_linkage_tdist'
        return stypy_return_type_7523


    @norecursion
    def check_linkage_tdist(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_linkage_tdist'
        module_type_store = module_type_store.open_function_context('check_linkage_tdist', 88, 4, False)
        # Assigning a type to the variable 'self' (line 89)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_localization', localization)
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_function_name', 'TestLinkage.check_linkage_tdist')
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_param_names_list', ['method'])
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkage.check_linkage_tdist.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkage.check_linkage_tdist', ['method'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_linkage_tdist', localization, ['method'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_linkage_tdist(...)' code ##################

        
        # Assigning a Call to a Name (line 90):
        
        # Assigning a Call to a Name (line 90):
        
        # Call to linkage(...): (line 90)
        # Processing the call arguments (line 90)
        # Getting the type of 'hierarchy_test_data' (line 90)
        hierarchy_test_data_7525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 90)
        ytdist_7526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 20), hierarchy_test_data_7525, 'ytdist')
        # Getting the type of 'method' (line 90)
        method_7527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 48), 'method', False)
        # Processing the call keyword arguments (line 90)
        kwargs_7528 = {}
        # Getting the type of 'linkage' (line 90)
        linkage_7524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 90)
        linkage_call_result_7529 = invoke(stypy.reporting.localization.Localization(__file__, 90, 12), linkage_7524, *[ytdist_7526, method_7527], **kwargs_7528)
        
        # Assigning a type to the variable 'Z' (line 90)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 8), 'Z', linkage_call_result_7529)
        
        # Assigning a Call to a Name (line 91):
        
        # Assigning a Call to a Name (line 91):
        
        # Call to getattr(...): (line 91)
        # Processing the call arguments (line 91)
        # Getting the type of 'hierarchy_test_data' (line 91)
        hierarchy_test_data_7531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 28), 'hierarchy_test_data', False)
        str_7532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, 49), 'str', 'linkage_ytdist_')
        # Getting the type of 'method' (line 91)
        method_7533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 69), 'method', False)
        # Applying the binary operator '+' (line 91)
        result_add_7534 = python_operator(stypy.reporting.localization.Localization(__file__, 91, 49), '+', str_7532, method_7533)
        
        # Processing the call keyword arguments (line 91)
        kwargs_7535 = {}
        # Getting the type of 'getattr' (line 91)
        getattr_7530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 20), 'getattr', False)
        # Calling getattr(args, kwargs) (line 91)
        getattr_call_result_7536 = invoke(stypy.reporting.localization.Localization(__file__, 91, 20), getattr_7530, *[hierarchy_test_data_7531, result_add_7534], **kwargs_7535)
        
        # Assigning a type to the variable 'expectedZ' (line 91)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'expectedZ', getattr_call_result_7536)
        
        # Call to assert_allclose(...): (line 92)
        # Processing the call arguments (line 92)
        # Getting the type of 'Z' (line 92)
        Z_7538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 24), 'Z', False)
        # Getting the type of 'expectedZ' (line 92)
        expectedZ_7539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 27), 'expectedZ', False)
        # Processing the call keyword arguments (line 92)
        float_7540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 43), 'float')
        keyword_7541 = float_7540
        kwargs_7542 = {'atol': keyword_7541}
        # Getting the type of 'assert_allclose' (line 92)
        assert_allclose_7537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 92)
        assert_allclose_call_result_7543 = invoke(stypy.reporting.localization.Localization(__file__, 92, 8), assert_allclose_7537, *[Z_7538, expectedZ_7539], **kwargs_7542)
        
        
        # ################# End of 'check_linkage_tdist(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_linkage_tdist' in the type store
        # Getting the type of 'stypy_return_type' (line 88)
        stypy_return_type_7544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7544)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_linkage_tdist'
        return stypy_return_type_7544


    @norecursion
    def test_linkage_X(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_linkage_X'
        module_type_store = module_type_store.open_function_context('test_linkage_X', 94, 4, False)
        # Assigning a type to the variable 'self' (line 95)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_localization', localization)
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_function_name', 'TestLinkage.test_linkage_X')
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_param_names_list', [])
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkage.test_linkage_X.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkage.test_linkage_X', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_linkage_X', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_linkage_X(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 95)
        list_7545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 95)
        # Adding element type (line 95)
        str_7546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 23), 'str', 'centroid')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 95, 22), list_7545, str_7546)
        # Adding element type (line 95)
        str_7547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 35), 'str', 'median')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 95, 22), list_7545, str_7547)
        # Adding element type (line 95)
        str_7548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 45), 'str', 'ward')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 95, 22), list_7545, str_7548)
        
        # Testing the type of a for loop iterable (line 95)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 95, 8), list_7545)
        # Getting the type of the for loop variable (line 95)
        for_loop_var_7549 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 95, 8), list_7545)
        # Assigning a type to the variable 'method' (line 95)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 8), 'method', for_loop_var_7549)
        # SSA begins for a for statement (line 95)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_linkage_q(...): (line 96)
        # Processing the call arguments (line 96)
        # Getting the type of 'method' (line 96)
        method_7552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 33), 'method', False)
        # Processing the call keyword arguments (line 96)
        kwargs_7553 = {}
        # Getting the type of 'self' (line 96)
        self_7550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 12), 'self', False)
        # Obtaining the member 'check_linkage_q' of a type (line 96)
        check_linkage_q_7551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 96, 12), self_7550, 'check_linkage_q')
        # Calling check_linkage_q(args, kwargs) (line 96)
        check_linkage_q_call_result_7554 = invoke(stypy.reporting.localization.Localization(__file__, 96, 12), check_linkage_q_7551, *[method_7552], **kwargs_7553)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_linkage_X(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_linkage_X' in the type store
        # Getting the type of 'stypy_return_type' (line 94)
        stypy_return_type_7555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7555)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_linkage_X'
        return stypy_return_type_7555


    @norecursion
    def check_linkage_q(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_linkage_q'
        module_type_store = module_type_store.open_function_context('check_linkage_q', 98, 4, False)
        # Assigning a type to the variable 'self' (line 99)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_localization', localization)
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_function_name', 'TestLinkage.check_linkage_q')
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_param_names_list', ['method'])
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkage.check_linkage_q.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkage.check_linkage_q', ['method'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_linkage_q', localization, ['method'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_linkage_q(...)' code ##################

        
        # Assigning a Call to a Name (line 100):
        
        # Assigning a Call to a Name (line 100):
        
        # Call to linkage(...): (line 100)
        # Processing the call arguments (line 100)
        # Getting the type of 'hierarchy_test_data' (line 100)
        hierarchy_test_data_7557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'X' of a type (line 100)
        X_7558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 100, 20), hierarchy_test_data_7557, 'X')
        # Getting the type of 'method' (line 100)
        method_7559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 43), 'method', False)
        # Processing the call keyword arguments (line 100)
        kwargs_7560 = {}
        # Getting the type of 'linkage' (line 100)
        linkage_7556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 100)
        linkage_call_result_7561 = invoke(stypy.reporting.localization.Localization(__file__, 100, 12), linkage_7556, *[X_7558, method_7559], **kwargs_7560)
        
        # Assigning a type to the variable 'Z' (line 100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'Z', linkage_call_result_7561)
        
        # Assigning a Call to a Name (line 101):
        
        # Assigning a Call to a Name (line 101):
        
        # Call to getattr(...): (line 101)
        # Processing the call arguments (line 101)
        # Getting the type of 'hierarchy_test_data' (line 101)
        hierarchy_test_data_7563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 28), 'hierarchy_test_data', False)
        str_7564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 101, 49), 'str', 'linkage_X_')
        # Getting the type of 'method' (line 101)
        method_7565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 64), 'method', False)
        # Applying the binary operator '+' (line 101)
        result_add_7566 = python_operator(stypy.reporting.localization.Localization(__file__, 101, 49), '+', str_7564, method_7565)
        
        # Processing the call keyword arguments (line 101)
        kwargs_7567 = {}
        # Getting the type of 'getattr' (line 101)
        getattr_7562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 20), 'getattr', False)
        # Calling getattr(args, kwargs) (line 101)
        getattr_call_result_7568 = invoke(stypy.reporting.localization.Localization(__file__, 101, 20), getattr_7562, *[hierarchy_test_data_7563, result_add_7566], **kwargs_7567)
        
        # Assigning a type to the variable 'expectedZ' (line 101)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 8), 'expectedZ', getattr_call_result_7568)
        
        # Call to assert_allclose(...): (line 102)
        # Processing the call arguments (line 102)
        # Getting the type of 'Z' (line 102)
        Z_7570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 24), 'Z', False)
        # Getting the type of 'expectedZ' (line 102)
        expectedZ_7571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 27), 'expectedZ', False)
        # Processing the call keyword arguments (line 102)
        float_7572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 43), 'float')
        keyword_7573 = float_7572
        kwargs_7574 = {'atol': keyword_7573}
        # Getting the type of 'assert_allclose' (line 102)
        assert_allclose_7569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 102)
        assert_allclose_call_result_7575 = invoke(stypy.reporting.localization.Localization(__file__, 102, 8), assert_allclose_7569, *[Z_7570, expectedZ_7571], **kwargs_7574)
        
        
        # Assigning a Call to a Name (line 104):
        
        # Assigning a Call to a Name (line 104):
        
        # Call to pdist(...): (line 104)
        # Processing the call arguments (line 104)
        # Getting the type of 'hierarchy_test_data' (line 104)
        hierarchy_test_data_7580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 41), 'hierarchy_test_data', False)
        # Obtaining the member 'X' of a type (line 104)
        X_7581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 41), hierarchy_test_data_7580, 'X')
        # Processing the call keyword arguments (line 104)
        str_7582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 48), 'str', 'euclidean')
        keyword_7583 = str_7582
        kwargs_7584 = {'metric': keyword_7583}
        # Getting the type of 'scipy' (line 104)
        scipy_7576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 12), 'scipy', False)
        # Obtaining the member 'spatial' of a type (line 104)
        spatial_7577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 12), scipy_7576, 'spatial')
        # Obtaining the member 'distance' of a type (line 104)
        distance_7578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 12), spatial_7577, 'distance')
        # Obtaining the member 'pdist' of a type (line 104)
        pdist_7579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 12), distance_7578, 'pdist')
        # Calling pdist(args, kwargs) (line 104)
        pdist_call_result_7585 = invoke(stypy.reporting.localization.Localization(__file__, 104, 12), pdist_7579, *[X_7581], **kwargs_7584)
        
        # Assigning a type to the variable 'y' (line 104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 8), 'y', pdist_call_result_7585)
        
        # Assigning a Call to a Name (line 106):
        
        # Assigning a Call to a Name (line 106):
        
        # Call to linkage(...): (line 106)
        # Processing the call arguments (line 106)
        # Getting the type of 'y' (line 106)
        y_7587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 20), 'y', False)
        # Getting the type of 'method' (line 106)
        method_7588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 23), 'method', False)
        # Processing the call keyword arguments (line 106)
        kwargs_7589 = {}
        # Getting the type of 'linkage' (line 106)
        linkage_7586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 106)
        linkage_call_result_7590 = invoke(stypy.reporting.localization.Localization(__file__, 106, 12), linkage_7586, *[y_7587, method_7588], **kwargs_7589)
        
        # Assigning a type to the variable 'Z' (line 106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 8), 'Z', linkage_call_result_7590)
        
        # Call to assert_allclose(...): (line 107)
        # Processing the call arguments (line 107)
        # Getting the type of 'Z' (line 107)
        Z_7592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 24), 'Z', False)
        # Getting the type of 'expectedZ' (line 107)
        expectedZ_7593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 27), 'expectedZ', False)
        # Processing the call keyword arguments (line 107)
        float_7594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 107, 43), 'float')
        keyword_7595 = float_7594
        kwargs_7596 = {'atol': keyword_7595}
        # Getting the type of 'assert_allclose' (line 107)
        assert_allclose_7591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 107)
        assert_allclose_call_result_7597 = invoke(stypy.reporting.localization.Localization(__file__, 107, 8), assert_allclose_7591, *[Z_7592, expectedZ_7593], **kwargs_7596)
        
        
        # ################# End of 'check_linkage_q(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_linkage_q' in the type store
        # Getting the type of 'stypy_return_type' (line 98)
        stypy_return_type_7598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7598)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_linkage_q'
        return stypy_return_type_7598


    @norecursion
    def test_compare_with_trivial(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_compare_with_trivial'
        module_type_store = module_type_store.open_function_context('test_compare_with_trivial', 109, 4, False)
        # Assigning a type to the variable 'self' (line 110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 110, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_localization', localization)
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_function_name', 'TestLinkage.test_compare_with_trivial')
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_param_names_list', [])
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkage.test_compare_with_trivial.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkage.test_compare_with_trivial', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_compare_with_trivial', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_compare_with_trivial(...)' code ##################

        
        # Assigning a Call to a Name (line 110):
        
        # Assigning a Call to a Name (line 110):
        
        # Call to RandomState(...): (line 110)
        # Processing the call arguments (line 110)
        int_7602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 36), 'int')
        # Processing the call keyword arguments (line 110)
        kwargs_7603 = {}
        # Getting the type of 'np' (line 110)
        np_7599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 14), 'np', False)
        # Obtaining the member 'random' of a type (line 110)
        random_7600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 14), np_7599, 'random')
        # Obtaining the member 'RandomState' of a type (line 110)
        RandomState_7601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 14), random_7600, 'RandomState')
        # Calling RandomState(args, kwargs) (line 110)
        RandomState_call_result_7604 = invoke(stypy.reporting.localization.Localization(__file__, 110, 14), RandomState_7601, *[int_7602], **kwargs_7603)
        
        # Assigning a type to the variable 'rng' (line 110)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 110, 8), 'rng', RandomState_call_result_7604)
        
        # Assigning a Num to a Name (line 111):
        
        # Assigning a Num to a Name (line 111):
        int_7605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 12), 'int')
        # Assigning a type to the variable 'n' (line 111)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 111, 8), 'n', int_7605)
        
        # Assigning a Call to a Name (line 112):
        
        # Assigning a Call to a Name (line 112):
        
        # Call to rand(...): (line 112)
        # Processing the call arguments (line 112)
        # Getting the type of 'n' (line 112)
        n_7608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 21), 'n', False)
        int_7609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 112, 24), 'int')
        # Processing the call keyword arguments (line 112)
        kwargs_7610 = {}
        # Getting the type of 'rng' (line 112)
        rng_7606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 12), 'rng', False)
        # Obtaining the member 'rand' of a type (line 112)
        rand_7607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 112, 12), rng_7606, 'rand')
        # Calling rand(args, kwargs) (line 112)
        rand_call_result_7611 = invoke(stypy.reporting.localization.Localization(__file__, 112, 12), rand_7607, *[n_7608, int_7609], **kwargs_7610)
        
        # Assigning a type to the variable 'X' (line 112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 112, 8), 'X', rand_call_result_7611)
        
        # Assigning a Call to a Name (line 113):
        
        # Assigning a Call to a Name (line 113):
        
        # Call to pdist(...): (line 113)
        # Processing the call arguments (line 113)
        # Getting the type of 'X' (line 113)
        X_7613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 18), 'X', False)
        # Processing the call keyword arguments (line 113)
        kwargs_7614 = {}
        # Getting the type of 'pdist' (line 113)
        pdist_7612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 12), 'pdist', False)
        # Calling pdist(args, kwargs) (line 113)
        pdist_call_result_7615 = invoke(stypy.reporting.localization.Localization(__file__, 113, 12), pdist_7612, *[X_7613], **kwargs_7614)
        
        # Assigning a type to the variable 'd' (line 113)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 113, 8), 'd', pdist_call_result_7615)
        
        
        # Call to items(...): (line 115)
        # Processing the call keyword arguments (line 115)
        kwargs_7618 = {}
        # Getting the type of '_LINKAGE_METHODS' (line 115)
        _LINKAGE_METHODS_7616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 28), '_LINKAGE_METHODS', False)
        # Obtaining the member 'items' of a type (line 115)
        items_7617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 28), _LINKAGE_METHODS_7616, 'items')
        # Calling items(args, kwargs) (line 115)
        items_call_result_7619 = invoke(stypy.reporting.localization.Localization(__file__, 115, 28), items_7617, *[], **kwargs_7618)
        
        # Testing the type of a for loop iterable (line 115)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 115, 8), items_call_result_7619)
        # Getting the type of the for loop variable (line 115)
        for_loop_var_7620 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 115, 8), items_call_result_7619)
        # Assigning a type to the variable 'method' (line 115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 8), 'method', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 115, 8), for_loop_var_7620))
        # Assigning a type to the variable 'code' (line 115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 8), 'code', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 115, 8), for_loop_var_7620))
        # SSA begins for a for statement (line 115)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 116):
        
        # Assigning a Call to a Name (line 116):
        
        # Call to linkage(...): (line 116)
        # Processing the call arguments (line 116)
        # Getting the type of 'd' (line 116)
        d_7623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 43), 'd', False)
        # Getting the type of 'n' (line 116)
        n_7624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 46), 'n', False)
        # Getting the type of 'code' (line 116)
        code_7625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 49), 'code', False)
        # Processing the call keyword arguments (line 116)
        kwargs_7626 = {}
        # Getting the type of '_hierarchy' (line 116)
        _hierarchy_7621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 24), '_hierarchy', False)
        # Obtaining the member 'linkage' of a type (line 116)
        linkage_7622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 116, 24), _hierarchy_7621, 'linkage')
        # Calling linkage(args, kwargs) (line 116)
        linkage_call_result_7627 = invoke(stypy.reporting.localization.Localization(__file__, 116, 24), linkage_7622, *[d_7623, n_7624, code_7625], **kwargs_7626)
        
        # Assigning a type to the variable 'Z_trivial' (line 116)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 116, 12), 'Z_trivial', linkage_call_result_7627)
        
        # Assigning a Call to a Name (line 117):
        
        # Assigning a Call to a Name (line 117):
        
        # Call to linkage(...): (line 117)
        # Processing the call arguments (line 117)
        # Getting the type of 'd' (line 117)
        d_7629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 24), 'd', False)
        # Getting the type of 'method' (line 117)
        method_7630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 27), 'method', False)
        # Processing the call keyword arguments (line 117)
        kwargs_7631 = {}
        # Getting the type of 'linkage' (line 117)
        linkage_7628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 117)
        linkage_call_result_7632 = invoke(stypy.reporting.localization.Localization(__file__, 117, 16), linkage_7628, *[d_7629, method_7630], **kwargs_7631)
        
        # Assigning a type to the variable 'Z' (line 117)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 12), 'Z', linkage_call_result_7632)
        
        # Call to assert_allclose(...): (line 118)
        # Processing the call arguments (line 118)
        # Getting the type of 'Z_trivial' (line 118)
        Z_trivial_7634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 28), 'Z_trivial', False)
        # Getting the type of 'Z' (line 118)
        Z_7635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 39), 'Z', False)
        # Processing the call keyword arguments (line 118)
        float_7636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 47), 'float')
        keyword_7637 = float_7636
        float_7638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 59), 'float')
        keyword_7639 = float_7638
        kwargs_7640 = {'rtol': keyword_7637, 'atol': keyword_7639}
        # Getting the type of 'assert_allclose' (line 118)
        assert_allclose_7633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 12), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 118)
        assert_allclose_call_result_7641 = invoke(stypy.reporting.localization.Localization(__file__, 118, 12), assert_allclose_7633, *[Z_trivial_7634, Z_7635], **kwargs_7640)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_compare_with_trivial(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_compare_with_trivial' in the type store
        # Getting the type of 'stypy_return_type' (line 109)
        stypy_return_type_7642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7642)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_compare_with_trivial'
        return stypy_return_type_7642


    @norecursion
    def test_optimal_leaf_ordering(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_optimal_leaf_ordering'
        module_type_store = module_type_store.open_function_context('test_optimal_leaf_ordering', 120, 4, False)
        # Assigning a type to the variable 'self' (line 121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_localization', localization)
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_function_name', 'TestLinkage.test_optimal_leaf_ordering')
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_param_names_list', [])
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkage.test_optimal_leaf_ordering.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkage.test_optimal_leaf_ordering', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_optimal_leaf_ordering', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_optimal_leaf_ordering(...)' code ##################

        
        # Assigning a Call to a Name (line 121):
        
        # Assigning a Call to a Name (line 121):
        
        # Call to linkage(...): (line 121)
        # Processing the call arguments (line 121)
        # Getting the type of 'hierarchy_test_data' (line 121)
        hierarchy_test_data_7644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 121)
        ytdist_7645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 20), hierarchy_test_data_7644, 'ytdist')
        # Processing the call keyword arguments (line 121)
        # Getting the type of 'True' (line 121)
        True_7646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 65), 'True', False)
        keyword_7647 = True_7646
        kwargs_7648 = {'optimal_ordering': keyword_7647}
        # Getting the type of 'linkage' (line 121)
        linkage_7643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 121)
        linkage_call_result_7649 = invoke(stypy.reporting.localization.Localization(__file__, 121, 12), linkage_7643, *[ytdist_7645], **kwargs_7648)
        
        # Assigning a type to the variable 'Z' (line 121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 8), 'Z', linkage_call_result_7649)
        
        # Assigning a Call to a Name (line 122):
        
        # Assigning a Call to a Name (line 122):
        
        # Call to getattr(...): (line 122)
        # Processing the call arguments (line 122)
        # Getting the type of 'hierarchy_test_data' (line 122)
        hierarchy_test_data_7651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 28), 'hierarchy_test_data', False)
        str_7652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 49), 'str', 'linkage_ytdist_single_olo')
        # Processing the call keyword arguments (line 122)
        kwargs_7653 = {}
        # Getting the type of 'getattr' (line 122)
        getattr_7650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 20), 'getattr', False)
        # Calling getattr(args, kwargs) (line 122)
        getattr_call_result_7654 = invoke(stypy.reporting.localization.Localization(__file__, 122, 20), getattr_7650, *[hierarchy_test_data_7651, str_7652], **kwargs_7653)
        
        # Assigning a type to the variable 'expectedZ' (line 122)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 122, 8), 'expectedZ', getattr_call_result_7654)
        
        # Call to assert_allclose(...): (line 123)
        # Processing the call arguments (line 123)
        # Getting the type of 'Z' (line 123)
        Z_7656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 24), 'Z', False)
        # Getting the type of 'expectedZ' (line 123)
        expectedZ_7657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 27), 'expectedZ', False)
        # Processing the call keyword arguments (line 123)
        float_7658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 123, 43), 'float')
        keyword_7659 = float_7658
        kwargs_7660 = {'atol': keyword_7659}
        # Getting the type of 'assert_allclose' (line 123)
        assert_allclose_7655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 123)
        assert_allclose_call_result_7661 = invoke(stypy.reporting.localization.Localization(__file__, 123, 8), assert_allclose_7655, *[Z_7656, expectedZ_7657], **kwargs_7660)
        
        
        # ################# End of 'test_optimal_leaf_ordering(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_optimal_leaf_ordering' in the type store
        # Getting the type of 'stypy_return_type' (line 120)
        stypy_return_type_7662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7662)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_optimal_leaf_ordering'
        return stypy_return_type_7662


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 71, 0, False)
        # Assigning a type to the variable 'self' (line 72)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkage.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestLinkage' (line 71)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 71, 0), 'TestLinkage', TestLinkage)
# Declaration of the 'TestLinkageTies' class

class TestLinkageTies(object, ):
    
    # Assigning a Dict to a Name (line 127):

    @norecursion
    def test_linkage_ties(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_linkage_ties'
        module_type_store = module_type_store.open_function_context('test_linkage_ties', 144, 4, False)
        # Assigning a type to the variable 'self' (line 145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_localization', localization)
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_function_name', 'TestLinkageTies.test_linkage_ties')
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_param_names_list', [])
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkageTies.test_linkage_ties.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkageTies.test_linkage_ties', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_linkage_ties', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_linkage_ties(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 145)
        list_7663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 145)
        # Adding element type (line 145)
        str_7664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 23), 'str', 'single')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 145, 22), list_7663, str_7664)
        # Adding element type (line 145)
        str_7665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 33), 'str', 'complete')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 145, 22), list_7663, str_7665)
        # Adding element type (line 145)
        str_7666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 45), 'str', 'average')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 145, 22), list_7663, str_7666)
        # Adding element type (line 145)
        str_7667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 56), 'str', 'weighted')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 145, 22), list_7663, str_7667)
        # Adding element type (line 145)
        str_7668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 68), 'str', 'centroid')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 145, 22), list_7663, str_7668)
        # Adding element type (line 145)
        str_7669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 80), 'str', 'median')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 145, 22), list_7663, str_7669)
        # Adding element type (line 145)
        str_7670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 145, 90), 'str', 'ward')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 145, 22), list_7663, str_7670)
        
        # Testing the type of a for loop iterable (line 145)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 145, 8), list_7663)
        # Getting the type of the for loop variable (line 145)
        for_loop_var_7671 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 145, 8), list_7663)
        # Assigning a type to the variable 'method' (line 145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 8), 'method', for_loop_var_7671)
        # SSA begins for a for statement (line 145)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_linkage_ties(...): (line 146)
        # Processing the call arguments (line 146)
        # Getting the type of 'method' (line 146)
        method_7674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 36), 'method', False)
        # Processing the call keyword arguments (line 146)
        kwargs_7675 = {}
        # Getting the type of 'self' (line 146)
        self_7672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 12), 'self', False)
        # Obtaining the member 'check_linkage_ties' of a type (line 146)
        check_linkage_ties_7673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 12), self_7672, 'check_linkage_ties')
        # Calling check_linkage_ties(args, kwargs) (line 146)
        check_linkage_ties_call_result_7676 = invoke(stypy.reporting.localization.Localization(__file__, 146, 12), check_linkage_ties_7673, *[method_7674], **kwargs_7675)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_linkage_ties(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_linkage_ties' in the type store
        # Getting the type of 'stypy_return_type' (line 144)
        stypy_return_type_7677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7677)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_linkage_ties'
        return stypy_return_type_7677


    @norecursion
    def check_linkage_ties(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_linkage_ties'
        module_type_store = module_type_store.open_function_context('check_linkage_ties', 148, 4, False)
        # Assigning a type to the variable 'self' (line 149)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 149, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_localization', localization)
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_function_name', 'TestLinkageTies.check_linkage_ties')
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_param_names_list', ['method'])
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLinkageTies.check_linkage_ties.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkageTies.check_linkage_ties', ['method'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_linkage_ties', localization, ['method'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_linkage_ties(...)' code ##################

        
        # Assigning a Call to a Name (line 149):
        
        # Assigning a Call to a Name (line 149):
        
        # Call to array(...): (line 149)
        # Processing the call arguments (line 149)
        
        # Obtaining an instance of the builtin type 'list' (line 149)
        list_7680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 149)
        # Adding element type (line 149)
        
        # Obtaining an instance of the builtin type 'list' (line 149)
        list_7681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 149)
        # Adding element type (line 149)
        int_7682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 22), list_7681, int_7682)
        # Adding element type (line 149)
        int_7683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 22), list_7681, int_7683)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 21), list_7680, list_7681)
        # Adding element type (line 149)
        
        # Obtaining an instance of the builtin type 'list' (line 149)
        list_7684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 149)
        # Adding element type (line 149)
        int_7685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 32), list_7684, int_7685)
        # Adding element type (line 149)
        int_7686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 32), list_7684, int_7686)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 21), list_7680, list_7684)
        # Adding element type (line 149)
        
        # Obtaining an instance of the builtin type 'list' (line 149)
        list_7687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 149)
        # Adding element type (line 149)
        int_7688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 40), list_7687, int_7688)
        # Adding element type (line 149)
        int_7689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 149, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 40), list_7687, int_7689)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 149, 21), list_7680, list_7687)
        
        # Processing the call keyword arguments (line 149)
        kwargs_7690 = {}
        # Getting the type of 'np' (line 149)
        np_7678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 149)
        array_7679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 149, 12), np_7678, 'array')
        # Calling array(args, kwargs) (line 149)
        array_call_result_7691 = invoke(stypy.reporting.localization.Localization(__file__, 149, 12), array_7679, *[list_7680], **kwargs_7690)
        
        # Assigning a type to the variable 'X' (line 149)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 149, 8), 'X', array_call_result_7691)
        
        # Assigning a Call to a Name (line 150):
        
        # Assigning a Call to a Name (line 150):
        
        # Call to linkage(...): (line 150)
        # Processing the call arguments (line 150)
        # Getting the type of 'X' (line 150)
        X_7693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 20), 'X', False)
        # Processing the call keyword arguments (line 150)
        # Getting the type of 'method' (line 150)
        method_7694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 30), 'method', False)
        keyword_7695 = method_7694
        kwargs_7696 = {'method': keyword_7695}
        # Getting the type of 'linkage' (line 150)
        linkage_7692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 150)
        linkage_call_result_7697 = invoke(stypy.reporting.localization.Localization(__file__, 150, 12), linkage_7692, *[X_7693], **kwargs_7696)
        
        # Assigning a type to the variable 'Z' (line 150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 150, 8), 'Z', linkage_call_result_7697)
        
        # Assigning a Subscript to a Name (line 151):
        
        # Assigning a Subscript to a Name (line 151):
        
        # Obtaining the type of the subscript
        # Getting the type of 'method' (line 151)
        method_7698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 39), 'method')
        # Getting the type of 'self' (line 151)
        self_7699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 20), 'self')
        # Obtaining the member '_expectations' of a type (line 151)
        _expectations_7700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 20), self_7699, '_expectations')
        # Obtaining the member '__getitem__' of a type (line 151)
        getitem___7701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 20), _expectations_7700, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 151)
        subscript_call_result_7702 = invoke(stypy.reporting.localization.Localization(__file__, 151, 20), getitem___7701, method_7698)
        
        # Assigning a type to the variable 'expectedZ' (line 151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 8), 'expectedZ', subscript_call_result_7702)
        
        # Call to assert_allclose(...): (line 152)
        # Processing the call arguments (line 152)
        # Getting the type of 'Z' (line 152)
        Z_7704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 24), 'Z', False)
        # Getting the type of 'expectedZ' (line 152)
        expectedZ_7705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 27), 'expectedZ', False)
        # Processing the call keyword arguments (line 152)
        float_7706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 152, 43), 'float')
        keyword_7707 = float_7706
        kwargs_7708 = {'atol': keyword_7707}
        # Getting the type of 'assert_allclose' (line 152)
        assert_allclose_7703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 152)
        assert_allclose_call_result_7709 = invoke(stypy.reporting.localization.Localization(__file__, 152, 8), assert_allclose_7703, *[Z_7704, expectedZ_7705], **kwargs_7708)
        
        
        # ################# End of 'check_linkage_ties(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_linkage_ties' in the type store
        # Getting the type of 'stypy_return_type' (line 148)
        stypy_return_type_7710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7710)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_linkage_ties'
        return stypy_return_type_7710


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 126, 0, False)
        # Assigning a type to the variable 'self' (line 127)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 127, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLinkageTies.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestLinkageTies' (line 126)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 126, 0), 'TestLinkageTies', TestLinkageTies)

# Assigning a Dict to a Name (line 127):

# Obtaining an instance of the builtin type 'dict' (line 127)
dict_7711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 127, 20), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 127)
# Adding element type (key, value) (line 127)
str_7712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 8), 'str', 'single')

# Call to array(...): (line 128)
# Processing the call arguments (line 128)

# Obtaining an instance of the builtin type 'list' (line 128)
list_7715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 128)
# Adding element type (line 128)

# Obtaining an instance of the builtin type 'list' (line 128)
list_7716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 128)
# Adding element type (line 128)
int_7717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 29), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 28), list_7716, int_7717)
# Adding element type (line 128)
int_7718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 32), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 28), list_7716, int_7718)
# Adding element type (line 128)
float_7719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 28), list_7716, float_7719)
# Adding element type (line 128)
int_7720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 47), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 28), list_7716, int_7720)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 27), list_7715, list_7716)
# Adding element type (line 128)

# Obtaining an instance of the builtin type 'list' (line 129)
list_7721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 129)
# Adding element type (line 129)
int_7722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 29), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 28), list_7721, int_7722)
# Adding element type (line 129)
int_7723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 32), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 28), list_7721, int_7723)
# Adding element type (line 129)
float_7724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 28), list_7721, float_7724)
# Adding element type (line 129)
int_7725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 129, 47), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 129, 28), list_7721, int_7725)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 27), list_7715, list_7721)

# Processing the call keyword arguments (line 128)
kwargs_7726 = {}
# Getting the type of 'np' (line 128)
np_7713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 18), 'np', False)
# Obtaining the member 'array' of a type (line 128)
array_7714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 128, 18), np_7713, 'array')
# Calling array(args, kwargs) (line 128)
array_call_result_7727 = invoke(stypy.reporting.localization.Localization(__file__, 128, 18), array_7714, *[list_7715], **kwargs_7726)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 20), dict_7711, (str_7712, array_call_result_7727))
# Adding element type (key, value) (line 127)
str_7728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 8), 'str', 'complete')

# Call to array(...): (line 130)
# Processing the call arguments (line 130)

# Obtaining an instance of the builtin type 'list' (line 130)
list_7731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 130)
# Adding element type (line 130)

# Obtaining an instance of the builtin type 'list' (line 130)
list_7732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 130)
# Adding element type (line 130)
int_7733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 30), list_7732, int_7733)
# Adding element type (line 130)
int_7734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 30), list_7732, int_7734)
# Adding element type (line 130)
float_7735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 37), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 30), list_7732, float_7735)
# Adding element type (line 130)
int_7736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 49), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 30), list_7732, int_7736)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 29), list_7731, list_7732)
# Adding element type (line 130)

# Obtaining an instance of the builtin type 'list' (line 131)
list_7737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 131)
# Adding element type (line 131)
int_7738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 131, 30), list_7737, int_7738)
# Adding element type (line 131)
int_7739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 131, 30), list_7737, int_7739)
# Adding element type (line 131)
float_7740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 37), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 131, 30), list_7737, float_7740)
# Adding element type (line 131)
int_7741 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 131, 49), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 131, 30), list_7737, int_7741)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 29), list_7731, list_7737)

# Processing the call keyword arguments (line 130)
kwargs_7742 = {}
# Getting the type of 'np' (line 130)
np_7729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 20), 'np', False)
# Obtaining the member 'array' of a type (line 130)
array_7730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 130, 20), np_7729, 'array')
# Calling array(args, kwargs) (line 130)
array_call_result_7743 = invoke(stypy.reporting.localization.Localization(__file__, 130, 20), array_7730, *[list_7731], **kwargs_7742)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 20), dict_7711, (str_7728, array_call_result_7743))
# Adding element type (key, value) (line 127)
str_7744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 8), 'str', 'average')

# Call to array(...): (line 132)
# Processing the call arguments (line 132)

# Obtaining an instance of the builtin type 'list' (line 132)
list_7747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 132)
# Adding element type (line 132)

# Obtaining an instance of the builtin type 'list' (line 132)
list_7748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 132)
# Adding element type (line 132)
int_7749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 30), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 29), list_7748, int_7749)
# Adding element type (line 132)
int_7750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 33), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 29), list_7748, int_7750)
# Adding element type (line 132)
float_7751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 29), list_7748, float_7751)
# Adding element type (line 132)
int_7752 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 48), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 29), list_7748, int_7752)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 28), list_7747, list_7748)
# Adding element type (line 132)

# Obtaining an instance of the builtin type 'list' (line 133)
list_7753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 133)
# Adding element type (line 133)
int_7754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 30), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 29), list_7753, int_7754)
# Adding element type (line 133)
int_7755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 33), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 29), list_7753, int_7755)
# Adding element type (line 133)
float_7756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 36), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 29), list_7753, float_7756)
# Adding element type (line 133)
int_7757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 48), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 133, 29), list_7753, int_7757)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 132, 28), list_7747, list_7753)

# Processing the call keyword arguments (line 132)
kwargs_7758 = {}
# Getting the type of 'np' (line 132)
np_7745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 19), 'np', False)
# Obtaining the member 'array' of a type (line 132)
array_7746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 132, 19), np_7745, 'array')
# Calling array(args, kwargs) (line 132)
array_call_result_7759 = invoke(stypy.reporting.localization.Localization(__file__, 132, 19), array_7746, *[list_7747], **kwargs_7758)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 20), dict_7711, (str_7744, array_call_result_7759))
# Adding element type (key, value) (line 127)
str_7760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 8), 'str', 'weighted')

# Call to array(...): (line 134)
# Processing the call arguments (line 134)

# Obtaining an instance of the builtin type 'list' (line 134)
list_7763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 134)
# Adding element type (line 134)

# Obtaining an instance of the builtin type 'list' (line 134)
list_7764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 134)
# Adding element type (line 134)
int_7765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 30), list_7764, int_7765)
# Adding element type (line 134)
int_7766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 30), list_7764, int_7766)
# Adding element type (line 134)
float_7767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 37), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 30), list_7764, float_7767)
# Adding element type (line 134)
int_7768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 49), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 30), list_7764, int_7768)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 29), list_7763, list_7764)
# Adding element type (line 134)

# Obtaining an instance of the builtin type 'list' (line 135)
list_7769 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 135)
# Adding element type (line 135)
int_7770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 30), list_7769, int_7770)
# Adding element type (line 135)
int_7771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 30), list_7769, int_7771)
# Adding element type (line 135)
float_7772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 37), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 30), list_7769, float_7772)
# Adding element type (line 135)
int_7773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 135, 49), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 135, 30), list_7769, int_7773)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 134, 29), list_7763, list_7769)

# Processing the call keyword arguments (line 134)
kwargs_7774 = {}
# Getting the type of 'np' (line 134)
np_7761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 20), 'np', False)
# Obtaining the member 'array' of a type (line 134)
array_7762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 20), np_7761, 'array')
# Calling array(args, kwargs) (line 134)
array_call_result_7775 = invoke(stypy.reporting.localization.Localization(__file__, 134, 20), array_7762, *[list_7763], **kwargs_7774)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 20), dict_7711, (str_7760, array_call_result_7775))
# Adding element type (key, value) (line 127)
str_7776 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 8), 'str', 'centroid')

# Call to array(...): (line 136)
# Processing the call arguments (line 136)

# Obtaining an instance of the builtin type 'list' (line 136)
list_7779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 29), 'list')
# Adding type elements to the builtin type 'list' instance (line 136)
# Adding element type (line 136)

# Obtaining an instance of the builtin type 'list' (line 136)
list_7780 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 136)
# Adding element type (line 136)
int_7781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 30), list_7780, int_7781)
# Adding element type (line 136)
int_7782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 30), list_7780, int_7782)
# Adding element type (line 136)
float_7783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 37), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 30), list_7780, float_7783)
# Adding element type (line 136)
int_7784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 136, 49), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 30), list_7780, int_7784)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 29), list_7779, list_7780)
# Adding element type (line 136)

# Obtaining an instance of the builtin type 'list' (line 137)
list_7785 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 30), 'list')
# Adding type elements to the builtin type 'list' instance (line 137)
# Adding element type (line 137)
int_7786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 31), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 137, 30), list_7785, int_7786)
# Adding element type (line 137)
int_7787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 34), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 137, 30), list_7785, int_7787)
# Adding element type (line 137)
float_7788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 37), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 137, 30), list_7785, float_7788)
# Adding element type (line 137)
int_7789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 49), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 137, 30), list_7785, int_7789)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 136, 29), list_7779, list_7785)

# Processing the call keyword arguments (line 136)
kwargs_7790 = {}
# Getting the type of 'np' (line 136)
np_7777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 20), 'np', False)
# Obtaining the member 'array' of a type (line 136)
array_7778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 136, 20), np_7777, 'array')
# Calling array(args, kwargs) (line 136)
array_call_result_7791 = invoke(stypy.reporting.localization.Localization(__file__, 136, 20), array_7778, *[list_7779], **kwargs_7790)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 20), dict_7711, (str_7776, array_call_result_7791))
# Adding element type (key, value) (line 127)
str_7792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 8), 'str', 'median')

# Call to array(...): (line 138)
# Processing the call arguments (line 138)

# Obtaining an instance of the builtin type 'list' (line 138)
list_7795 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 138)
# Adding element type (line 138)

# Obtaining an instance of the builtin type 'list' (line 138)
list_7796 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 138)
# Adding element type (line 138)
int_7797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 29), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 28), list_7796, int_7797)
# Adding element type (line 138)
int_7798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 32), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 28), list_7796, int_7798)
# Adding element type (line 138)
float_7799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 28), list_7796, float_7799)
# Adding element type (line 138)
int_7800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 47), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 28), list_7796, int_7800)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 27), list_7795, list_7796)
# Adding element type (line 138)

# Obtaining an instance of the builtin type 'list' (line 139)
list_7801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 28), 'list')
# Adding type elements to the builtin type 'list' instance (line 139)
# Adding element type (line 139)
int_7802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 29), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 28), list_7801, int_7802)
# Adding element type (line 139)
int_7803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 32), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 28), list_7801, int_7803)
# Adding element type (line 139)
float_7804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 35), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 28), list_7801, float_7804)
# Adding element type (line 139)
int_7805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 139, 47), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 139, 28), list_7801, int_7805)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 138, 27), list_7795, list_7801)

# Processing the call keyword arguments (line 138)
kwargs_7806 = {}
# Getting the type of 'np' (line 138)
np_7793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 18), 'np', False)
# Obtaining the member 'array' of a type (line 138)
array_7794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 138, 18), np_7793, 'array')
# Calling array(args, kwargs) (line 138)
array_call_result_7807 = invoke(stypy.reporting.localization.Localization(__file__, 138, 18), array_7794, *[list_7795], **kwargs_7806)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 20), dict_7711, (str_7792, array_call_result_7807))
# Adding element type (key, value) (line 127)
str_7808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 8), 'str', 'ward')

# Call to array(...): (line 140)
# Processing the call arguments (line 140)

# Obtaining an instance of the builtin type 'list' (line 140)
list_7811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 25), 'list')
# Adding type elements to the builtin type 'list' instance (line 140)
# Adding element type (line 140)

# Obtaining an instance of the builtin type 'list' (line 140)
list_7812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 140)
# Adding element type (line 140)
int_7813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 27), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 26), list_7812, int_7813)
# Adding element type (line 140)
int_7814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 30), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 26), list_7812, int_7814)
# Adding element type (line 140)
float_7815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 33), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 26), list_7812, float_7815)
# Adding element type (line 140)
int_7816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 45), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 26), list_7812, int_7816)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 25), list_7811, list_7812)
# Adding element type (line 140)

# Obtaining an instance of the builtin type 'list' (line 141)
list_7817 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 26), 'list')
# Adding type elements to the builtin type 'list' instance (line 141)
# Adding element type (line 141)
int_7818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 27), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 26), list_7817, int_7818)
# Adding element type (line 141)
int_7819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 30), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 26), list_7817, int_7819)
# Adding element type (line 141)
float_7820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 33), 'float')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 26), list_7817, float_7820)
# Adding element type (line 141)
int_7821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 45), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 26), list_7817, int_7821)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 25), list_7811, list_7817)

# Processing the call keyword arguments (line 140)
kwargs_7822 = {}
# Getting the type of 'np' (line 140)
np_7809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 16), 'np', False)
# Obtaining the member 'array' of a type (line 140)
array_7810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 140, 16), np_7809, 'array')
# Calling array(args, kwargs) (line 140)
array_call_result_7823 = invoke(stypy.reporting.localization.Localization(__file__, 140, 16), array_7810, *[list_7811], **kwargs_7822)

set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 127, 20), dict_7711, (str_7808, array_call_result_7823))

# Getting the type of 'TestLinkageTies'
TestLinkageTies_7824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'TestLinkageTies')
# Setting the type of the member '_expectations' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), TestLinkageTies_7824, '_expectations', dict_7711)
# Declaration of the 'TestInconsistent' class

class TestInconsistent(object, ):

    @norecursion
    def test_inconsistent_tdist(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_inconsistent_tdist'
        module_type_store = module_type_store.open_function_context('test_inconsistent_tdist', 156, 4, False)
        # Assigning a type to the variable 'self' (line 157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_localization', localization)
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_function_name', 'TestInconsistent.test_inconsistent_tdist')
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_param_names_list', [])
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestInconsistent.test_inconsistent_tdist.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestInconsistent.test_inconsistent_tdist', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_inconsistent_tdist', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_inconsistent_tdist(...)' code ##################

        
        # Getting the type of 'hierarchy_test_data' (line 157)
        hierarchy_test_data_7825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 21), 'hierarchy_test_data')
        # Obtaining the member 'inconsistent_ytdist' of a type (line 157)
        inconsistent_ytdist_7826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 21), hierarchy_test_data_7825, 'inconsistent_ytdist')
        # Testing the type of a for loop iterable (line 157)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 157, 8), inconsistent_ytdist_7826)
        # Getting the type of the for loop variable (line 157)
        for_loop_var_7827 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 157, 8), inconsistent_ytdist_7826)
        # Assigning a type to the variable 'depth' (line 157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 8), 'depth', for_loop_var_7827)
        # SSA begins for a for statement (line 157)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_inconsistent_tdist(...): (line 158)
        # Processing the call arguments (line 158)
        # Getting the type of 'depth' (line 158)
        depth_7830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 42), 'depth', False)
        # Processing the call keyword arguments (line 158)
        kwargs_7831 = {}
        # Getting the type of 'self' (line 158)
        self_7828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 12), 'self', False)
        # Obtaining the member 'check_inconsistent_tdist' of a type (line 158)
        check_inconsistent_tdist_7829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 158, 12), self_7828, 'check_inconsistent_tdist')
        # Calling check_inconsistent_tdist(args, kwargs) (line 158)
        check_inconsistent_tdist_call_result_7832 = invoke(stypy.reporting.localization.Localization(__file__, 158, 12), check_inconsistent_tdist_7829, *[depth_7830], **kwargs_7831)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_inconsistent_tdist(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_inconsistent_tdist' in the type store
        # Getting the type of 'stypy_return_type' (line 156)
        stypy_return_type_7833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7833)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_inconsistent_tdist'
        return stypy_return_type_7833


    @norecursion
    def check_inconsistent_tdist(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_inconsistent_tdist'
        module_type_store = module_type_store.open_function_context('check_inconsistent_tdist', 160, 4, False)
        # Assigning a type to the variable 'self' (line 161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 161, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_localization', localization)
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_function_name', 'TestInconsistent.check_inconsistent_tdist')
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_param_names_list', ['depth'])
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestInconsistent.check_inconsistent_tdist.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestInconsistent.check_inconsistent_tdist', ['depth'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_inconsistent_tdist', localization, ['depth'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_inconsistent_tdist(...)' code ##################

        
        # Assigning a Attribute to a Name (line 161):
        
        # Assigning a Attribute to a Name (line 161):
        # Getting the type of 'hierarchy_test_data' (line 161)
        hierarchy_test_data_7834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 161, 12), 'hierarchy_test_data')
        # Obtaining the member 'linkage_ytdist_single' of a type (line 161)
        linkage_ytdist_single_7835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 161, 12), hierarchy_test_data_7834, 'linkage_ytdist_single')
        # Assigning a type to the variable 'Z' (line 161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 161, 8), 'Z', linkage_ytdist_single_7835)
        
        # Call to assert_allclose(...): (line 162)
        # Processing the call arguments (line 162)
        
        # Call to inconsistent(...): (line 162)
        # Processing the call arguments (line 162)
        # Getting the type of 'Z' (line 162)
        Z_7838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 37), 'Z', False)
        # Getting the type of 'depth' (line 162)
        depth_7839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 40), 'depth', False)
        # Processing the call keyword arguments (line 162)
        kwargs_7840 = {}
        # Getting the type of 'inconsistent' (line 162)
        inconsistent_7837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 24), 'inconsistent', False)
        # Calling inconsistent(args, kwargs) (line 162)
        inconsistent_call_result_7841 = invoke(stypy.reporting.localization.Localization(__file__, 162, 24), inconsistent_7837, *[Z_7838, depth_7839], **kwargs_7840)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'depth' (line 163)
        depth_7842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 64), 'depth', False)
        # Getting the type of 'hierarchy_test_data' (line 163)
        hierarchy_test_data_7843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 24), 'hierarchy_test_data', False)
        # Obtaining the member 'inconsistent_ytdist' of a type (line 163)
        inconsistent_ytdist_7844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 24), hierarchy_test_data_7843, 'inconsistent_ytdist')
        # Obtaining the member '__getitem__' of a type (line 163)
        getitem___7845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 24), inconsistent_ytdist_7844, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 163)
        subscript_call_result_7846 = invoke(stypy.reporting.localization.Localization(__file__, 163, 24), getitem___7845, depth_7842)
        
        # Processing the call keyword arguments (line 162)
        kwargs_7847 = {}
        # Getting the type of 'assert_allclose' (line 162)
        assert_allclose_7836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 162)
        assert_allclose_call_result_7848 = invoke(stypy.reporting.localization.Localization(__file__, 162, 8), assert_allclose_7836, *[inconsistent_call_result_7841, subscript_call_result_7846], **kwargs_7847)
        
        
        # ################# End of 'check_inconsistent_tdist(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_inconsistent_tdist' in the type store
        # Getting the type of 'stypy_return_type' (line 160)
        stypy_return_type_7849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7849)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_inconsistent_tdist'
        return stypy_return_type_7849


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 155, 0, False)
        # Assigning a type to the variable 'self' (line 156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestInconsistent.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestInconsistent' (line 155)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 155, 0), 'TestInconsistent', TestInconsistent)
# Declaration of the 'TestCopheneticDistance' class

class TestCopheneticDistance(object, ):

    @norecursion
    def test_linkage_cophenet_tdist_Z(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_linkage_cophenet_tdist_Z'
        module_type_store = module_type_store.open_function_context('test_linkage_cophenet_tdist_Z', 167, 4, False)
        # Assigning a type to the variable 'self' (line 168)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 168, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_localization', localization)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_function_name', 'TestCopheneticDistance.test_linkage_cophenet_tdist_Z')
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_param_names_list', [])
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCopheneticDistance.test_linkage_cophenet_tdist_Z', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_linkage_cophenet_tdist_Z', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_linkage_cophenet_tdist_Z(...)' code ##################

        
        # Assigning a Call to a Name (line 169):
        
        # Assigning a Call to a Name (line 169):
        
        # Call to array(...): (line 169)
        # Processing the call arguments (line 169)
        
        # Obtaining an instance of the builtin type 'list' (line 169)
        list_7852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 169)
        # Adding element type (line 169)
        int_7853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7853)
        # Adding element type (line 169)
        int_7854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7854)
        # Adding element type (line 169)
        int_7855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7855)
        # Adding element type (line 169)
        int_7856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7856)
        # Adding element type (line 169)
        int_7857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7857)
        # Adding element type (line 169)
        int_7858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7858)
        # Adding element type (line 169)
        int_7859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7859)
        # Adding element type (line 169)
        int_7860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 65), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7860)
        # Adding element type (line 169)
        int_7861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 70), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7861)
        # Adding element type (line 169)
        int_7862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 75), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7862)
        # Adding element type (line 169)
        int_7863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7863)
        # Adding element type (line 169)
        int_7864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7864)
        # Adding element type (line 169)
        int_7865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7865)
        # Adding element type (line 169)
        int_7866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7866)
        # Adding element type (line 169)
        int_7867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 169, 29), list_7852, int_7867)
        
        # Processing the call keyword arguments (line 169)
        kwargs_7868 = {}
        # Getting the type of 'np' (line 169)
        np_7850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 20), 'np', False)
        # Obtaining the member 'array' of a type (line 169)
        array_7851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 169, 20), np_7850, 'array')
        # Calling array(args, kwargs) (line 169)
        array_call_result_7869 = invoke(stypy.reporting.localization.Localization(__file__, 169, 20), array_7851, *[list_7852], **kwargs_7868)
        
        # Assigning a type to the variable 'expectedM' (line 169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 169, 8), 'expectedM', array_call_result_7869)
        
        # Assigning a Attribute to a Name (line 171):
        
        # Assigning a Attribute to a Name (line 171):
        # Getting the type of 'hierarchy_test_data' (line 171)
        hierarchy_test_data_7870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 12), 'hierarchy_test_data')
        # Obtaining the member 'linkage_ytdist_single' of a type (line 171)
        linkage_ytdist_single_7871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 12), hierarchy_test_data_7870, 'linkage_ytdist_single')
        # Assigning a type to the variable 'Z' (line 171)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 171, 8), 'Z', linkage_ytdist_single_7871)
        
        # Assigning a Call to a Name (line 172):
        
        # Assigning a Call to a Name (line 172):
        
        # Call to cophenet(...): (line 172)
        # Processing the call arguments (line 172)
        # Getting the type of 'Z' (line 172)
        Z_7873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 21), 'Z', False)
        # Processing the call keyword arguments (line 172)
        kwargs_7874 = {}
        # Getting the type of 'cophenet' (line 172)
        cophenet_7872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 12), 'cophenet', False)
        # Calling cophenet(args, kwargs) (line 172)
        cophenet_call_result_7875 = invoke(stypy.reporting.localization.Localization(__file__, 172, 12), cophenet_7872, *[Z_7873], **kwargs_7874)
        
        # Assigning a type to the variable 'M' (line 172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 8), 'M', cophenet_call_result_7875)
        
        # Call to assert_allclose(...): (line 173)
        # Processing the call arguments (line 173)
        # Getting the type of 'M' (line 173)
        M_7877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 24), 'M', False)
        # Getting the type of 'expectedM' (line 173)
        expectedM_7878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 27), 'expectedM', False)
        # Processing the call keyword arguments (line 173)
        float_7879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 43), 'float')
        keyword_7880 = float_7879
        kwargs_7881 = {'atol': keyword_7880}
        # Getting the type of 'assert_allclose' (line 173)
        assert_allclose_7876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 173)
        assert_allclose_call_result_7882 = invoke(stypy.reporting.localization.Localization(__file__, 173, 8), assert_allclose_7876, *[M_7877, expectedM_7878], **kwargs_7881)
        
        
        # ################# End of 'test_linkage_cophenet_tdist_Z(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_linkage_cophenet_tdist_Z' in the type store
        # Getting the type of 'stypy_return_type' (line 167)
        stypy_return_type_7883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7883)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_linkage_cophenet_tdist_Z'
        return stypy_return_type_7883


    @norecursion
    def test_linkage_cophenet_tdist_Z_Y(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_linkage_cophenet_tdist_Z_Y'
        module_type_store = module_type_store.open_function_context('test_linkage_cophenet_tdist_Z_Y', 175, 4, False)
        # Assigning a type to the variable 'self' (line 176)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 176, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_localization', localization)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_function_name', 'TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y')
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_param_names_list', [])
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCopheneticDistance.test_linkage_cophenet_tdist_Z_Y', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_linkage_cophenet_tdist_Z_Y', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_linkage_cophenet_tdist_Z_Y(...)' code ##################

        
        # Assigning a Attribute to a Name (line 177):
        
        # Assigning a Attribute to a Name (line 177):
        # Getting the type of 'hierarchy_test_data' (line 177)
        hierarchy_test_data_7884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 12), 'hierarchy_test_data')
        # Obtaining the member 'linkage_ytdist_single' of a type (line 177)
        linkage_ytdist_single_7885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 12), hierarchy_test_data_7884, 'linkage_ytdist_single')
        # Assigning a type to the variable 'Z' (line 177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 8), 'Z', linkage_ytdist_single_7885)
        
        # Assigning a Call to a Tuple (line 178):
        
        # Assigning a Subscript to a Name (line 178):
        
        # Obtaining the type of the subscript
        int_7886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 178, 8), 'int')
        
        # Call to cophenet(...): (line 178)
        # Processing the call arguments (line 178)
        # Getting the type of 'Z' (line 178)
        Z_7888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 26), 'Z', False)
        # Getting the type of 'hierarchy_test_data' (line 178)
        hierarchy_test_data_7889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 29), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 178)
        ytdist_7890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 29), hierarchy_test_data_7889, 'ytdist')
        # Processing the call keyword arguments (line 178)
        kwargs_7891 = {}
        # Getting the type of 'cophenet' (line 178)
        cophenet_7887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 17), 'cophenet', False)
        # Calling cophenet(args, kwargs) (line 178)
        cophenet_call_result_7892 = invoke(stypy.reporting.localization.Localization(__file__, 178, 17), cophenet_7887, *[Z_7888, ytdist_7890], **kwargs_7891)
        
        # Obtaining the member '__getitem__' of a type (line 178)
        getitem___7893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 8), cophenet_call_result_7892, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 178)
        subscript_call_result_7894 = invoke(stypy.reporting.localization.Localization(__file__, 178, 8), getitem___7893, int_7886)
        
        # Assigning a type to the variable 'tuple_var_assignment_7445' (line 178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 8), 'tuple_var_assignment_7445', subscript_call_result_7894)
        
        # Assigning a Subscript to a Name (line 178):
        
        # Obtaining the type of the subscript
        int_7895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 178, 8), 'int')
        
        # Call to cophenet(...): (line 178)
        # Processing the call arguments (line 178)
        # Getting the type of 'Z' (line 178)
        Z_7897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 26), 'Z', False)
        # Getting the type of 'hierarchy_test_data' (line 178)
        hierarchy_test_data_7898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 29), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 178)
        ytdist_7899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 29), hierarchy_test_data_7898, 'ytdist')
        # Processing the call keyword arguments (line 178)
        kwargs_7900 = {}
        # Getting the type of 'cophenet' (line 178)
        cophenet_7896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 17), 'cophenet', False)
        # Calling cophenet(args, kwargs) (line 178)
        cophenet_call_result_7901 = invoke(stypy.reporting.localization.Localization(__file__, 178, 17), cophenet_7896, *[Z_7897, ytdist_7899], **kwargs_7900)
        
        # Obtaining the member '__getitem__' of a type (line 178)
        getitem___7902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 8), cophenet_call_result_7901, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 178)
        subscript_call_result_7903 = invoke(stypy.reporting.localization.Localization(__file__, 178, 8), getitem___7902, int_7895)
        
        # Assigning a type to the variable 'tuple_var_assignment_7446' (line 178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 8), 'tuple_var_assignment_7446', subscript_call_result_7903)
        
        # Assigning a Name to a Name (line 178):
        # Getting the type of 'tuple_var_assignment_7445' (line 178)
        tuple_var_assignment_7445_7904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 8), 'tuple_var_assignment_7445')
        # Assigning a type to the variable 'c' (line 178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 9), 'c', tuple_var_assignment_7445_7904)
        
        # Assigning a Name to a Name (line 178):
        # Getting the type of 'tuple_var_assignment_7446' (line 178)
        tuple_var_assignment_7446_7905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 8), 'tuple_var_assignment_7446')
        # Assigning a type to the variable 'M' (line 178)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 12), 'M', tuple_var_assignment_7446_7905)
        
        # Assigning a Call to a Name (line 179):
        
        # Assigning a Call to a Name (line 179):
        
        # Call to array(...): (line 179)
        # Processing the call arguments (line 179)
        
        # Obtaining an instance of the builtin type 'list' (line 179)
        list_7908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 179)
        # Adding element type (line 179)
        int_7909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7909)
        # Adding element type (line 179)
        int_7910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7910)
        # Adding element type (line 179)
        int_7911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7911)
        # Adding element type (line 179)
        int_7912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7912)
        # Adding element type (line 179)
        int_7913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7913)
        # Adding element type (line 179)
        int_7914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7914)
        # Adding element type (line 179)
        int_7915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7915)
        # Adding element type (line 179)
        int_7916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 65), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7916)
        # Adding element type (line 179)
        int_7917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 70), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7917)
        # Adding element type (line 179)
        int_7918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 179, 75), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7918)
        # Adding element type (line 179)
        int_7919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7919)
        # Adding element type (line 179)
        int_7920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7920)
        # Adding element type (line 179)
        int_7921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7921)
        # Adding element type (line 179)
        int_7922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7922)
        # Adding element type (line 179)
        int_7923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 179, 29), list_7908, int_7923)
        
        # Processing the call keyword arguments (line 179)
        kwargs_7924 = {}
        # Getting the type of 'np' (line 179)
        np_7906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 20), 'np', False)
        # Obtaining the member 'array' of a type (line 179)
        array_7907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 179, 20), np_7906, 'array')
        # Calling array(args, kwargs) (line 179)
        array_call_result_7925 = invoke(stypy.reporting.localization.Localization(__file__, 179, 20), array_7907, *[list_7908], **kwargs_7924)
        
        # Assigning a type to the variable 'expectedM' (line 179)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 179, 8), 'expectedM', array_call_result_7925)
        
        # Assigning a Num to a Name (line 181):
        
        # Assigning a Num to a Name (line 181):
        float_7926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 181, 20), 'float')
        # Assigning a type to the variable 'expectedc' (line 181)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 181, 8), 'expectedc', float_7926)
        
        # Call to assert_allclose(...): (line 182)
        # Processing the call arguments (line 182)
        # Getting the type of 'c' (line 182)
        c_7928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 24), 'c', False)
        # Getting the type of 'expectedc' (line 182)
        expectedc_7929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 27), 'expectedc', False)
        # Processing the call keyword arguments (line 182)
        float_7930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 182, 43), 'float')
        keyword_7931 = float_7930
        kwargs_7932 = {'atol': keyword_7931}
        # Getting the type of 'assert_allclose' (line 182)
        assert_allclose_7927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 182)
        assert_allclose_call_result_7933 = invoke(stypy.reporting.localization.Localization(__file__, 182, 8), assert_allclose_7927, *[c_7928, expectedc_7929], **kwargs_7932)
        
        
        # Call to assert_allclose(...): (line 183)
        # Processing the call arguments (line 183)
        # Getting the type of 'M' (line 183)
        M_7935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 24), 'M', False)
        # Getting the type of 'expectedM' (line 183)
        expectedM_7936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 27), 'expectedM', False)
        # Processing the call keyword arguments (line 183)
        float_7937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 183, 43), 'float')
        keyword_7938 = float_7937
        kwargs_7939 = {'atol': keyword_7938}
        # Getting the type of 'assert_allclose' (line 183)
        assert_allclose_7934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 183, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 183)
        assert_allclose_call_result_7940 = invoke(stypy.reporting.localization.Localization(__file__, 183, 8), assert_allclose_7934, *[M_7935, expectedM_7936], **kwargs_7939)
        
        
        # ################# End of 'test_linkage_cophenet_tdist_Z_Y(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_linkage_cophenet_tdist_Z_Y' in the type store
        # Getting the type of 'stypy_return_type' (line 175)
        stypy_return_type_7941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7941)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_linkage_cophenet_tdist_Z_Y'
        return stypy_return_type_7941


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 166, 0, False)
        # Assigning a type to the variable 'self' (line 167)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 167, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCopheneticDistance.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestCopheneticDistance' (line 166)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 166, 0), 'TestCopheneticDistance', TestCopheneticDistance)
# Declaration of the 'TestMLabLinkageConversion' class

class TestMLabLinkageConversion(object, ):

    @norecursion
    def test_mlab_linkage_conversion_empty(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_mlab_linkage_conversion_empty'
        module_type_store = module_type_store.open_function_context('test_mlab_linkage_conversion_empty', 187, 4, False)
        # Assigning a type to the variable 'self' (line 188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_localization', localization)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_function_name', 'TestMLabLinkageConversion.test_mlab_linkage_conversion_empty')
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_param_names_list', [])
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_empty.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMLabLinkageConversion.test_mlab_linkage_conversion_empty', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_mlab_linkage_conversion_empty', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_mlab_linkage_conversion_empty(...)' code ##################

        
        # Assigning a Call to a Name (line 189):
        
        # Assigning a Call to a Name (line 189):
        
        # Call to asarray(...): (line 189)
        # Processing the call arguments (line 189)
        
        # Obtaining an instance of the builtin type 'list' (line 189)
        list_7944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 189)
        
        # Processing the call keyword arguments (line 189)
        kwargs_7945 = {}
        # Getting the type of 'np' (line 189)
        np_7942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 189)
        asarray_7943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 12), np_7942, 'asarray')
        # Calling asarray(args, kwargs) (line 189)
        asarray_call_result_7946 = invoke(stypy.reporting.localization.Localization(__file__, 189, 12), asarray_7943, *[list_7944], **kwargs_7945)
        
        # Assigning a type to the variable 'X' (line 189)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'X', asarray_call_result_7946)
        
        # Call to assert_equal(...): (line 190)
        # Processing the call arguments (line 190)
        
        # Call to from_mlab_linkage(...): (line 190)
        # Processing the call arguments (line 190)
        
        # Obtaining an instance of the builtin type 'list' (line 190)
        list_7949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 190)
        
        # Processing the call keyword arguments (line 190)
        kwargs_7950 = {}
        # Getting the type of 'from_mlab_linkage' (line 190)
        from_mlab_linkage_7948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 21), 'from_mlab_linkage', False)
        # Calling from_mlab_linkage(args, kwargs) (line 190)
        from_mlab_linkage_call_result_7951 = invoke(stypy.reporting.localization.Localization(__file__, 190, 21), from_mlab_linkage_7948, *[list_7949], **kwargs_7950)
        
        # Getting the type of 'X' (line 190)
        X_7952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 44), 'X', False)
        # Processing the call keyword arguments (line 190)
        kwargs_7953 = {}
        # Getting the type of 'assert_equal' (line 190)
        assert_equal_7947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 190)
        assert_equal_call_result_7954 = invoke(stypy.reporting.localization.Localization(__file__, 190, 8), assert_equal_7947, *[from_mlab_linkage_call_result_7951, X_7952], **kwargs_7953)
        
        
        # Call to assert_equal(...): (line 191)
        # Processing the call arguments (line 191)
        
        # Call to to_mlab_linkage(...): (line 191)
        # Processing the call arguments (line 191)
        
        # Obtaining an instance of the builtin type 'list' (line 191)
        list_7957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 37), 'list')
        # Adding type elements to the builtin type 'list' instance (line 191)
        
        # Processing the call keyword arguments (line 191)
        kwargs_7958 = {}
        # Getting the type of 'to_mlab_linkage' (line 191)
        to_mlab_linkage_7956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 21), 'to_mlab_linkage', False)
        # Calling to_mlab_linkage(args, kwargs) (line 191)
        to_mlab_linkage_call_result_7959 = invoke(stypy.reporting.localization.Localization(__file__, 191, 21), to_mlab_linkage_7956, *[list_7957], **kwargs_7958)
        
        # Getting the type of 'X' (line 191)
        X_7960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 42), 'X', False)
        # Processing the call keyword arguments (line 191)
        kwargs_7961 = {}
        # Getting the type of 'assert_equal' (line 191)
        assert_equal_7955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 191)
        assert_equal_call_result_7962 = invoke(stypy.reporting.localization.Localization(__file__, 191, 8), assert_equal_7955, *[to_mlab_linkage_call_result_7959, X_7960], **kwargs_7961)
        
        
        # ################# End of 'test_mlab_linkage_conversion_empty(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_mlab_linkage_conversion_empty' in the type store
        # Getting the type of 'stypy_return_type' (line 187)
        stypy_return_type_7963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7963)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_mlab_linkage_conversion_empty'
        return stypy_return_type_7963


    @norecursion
    def test_mlab_linkage_conversion_single_row(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_mlab_linkage_conversion_single_row'
        module_type_store = module_type_store.open_function_context('test_mlab_linkage_conversion_single_row', 193, 4, False)
        # Assigning a type to the variable 'self' (line 194)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 194, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_localization', localization)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_function_name', 'TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row')
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_param_names_list', [])
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMLabLinkageConversion.test_mlab_linkage_conversion_single_row', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_mlab_linkage_conversion_single_row', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_mlab_linkage_conversion_single_row(...)' code ##################

        
        # Assigning a Call to a Name (line 195):
        
        # Assigning a Call to a Name (line 195):
        
        # Call to asarray(...): (line 195)
        # Processing the call arguments (line 195)
        
        # Obtaining an instance of the builtin type 'list' (line 195)
        list_7966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 195)
        # Adding element type (line 195)
        
        # Obtaining an instance of the builtin type 'list' (line 195)
        list_7967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 195)
        # Adding element type (line 195)
        float_7968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 25), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 24), list_7967, float_7968)
        # Adding element type (line 195)
        float_7969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 29), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 24), list_7967, float_7969)
        # Adding element type (line 195)
        float_7970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 33), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 24), list_7967, float_7970)
        # Adding element type (line 195)
        float_7971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 24), list_7967, float_7971)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 23), list_7966, list_7967)
        
        # Processing the call keyword arguments (line 195)
        kwargs_7972 = {}
        # Getting the type of 'np' (line 195)
        np_7964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 195)
        asarray_7965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 12), np_7964, 'asarray')
        # Calling asarray(args, kwargs) (line 195)
        asarray_call_result_7973 = invoke(stypy.reporting.localization.Localization(__file__, 195, 12), asarray_7965, *[list_7966], **kwargs_7972)
        
        # Assigning a type to the variable 'Z' (line 195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'Z', asarray_call_result_7973)
        
        # Assigning a List to a Name (line 196):
        
        # Assigning a List to a Name (line 196):
        
        # Obtaining an instance of the builtin type 'list' (line 196)
        list_7974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 13), 'list')
        # Adding type elements to the builtin type 'list' instance (line 196)
        # Adding element type (line 196)
        
        # Obtaining an instance of the builtin type 'list' (line 196)
        list_7975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 14), 'list')
        # Adding type elements to the builtin type 'list' instance (line 196)
        # Adding element type (line 196)
        int_7976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 15), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 196, 14), list_7975, int_7976)
        # Adding element type (line 196)
        int_7977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 18), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 196, 14), list_7975, int_7977)
        # Adding element type (line 196)
        int_7978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 196, 14), list_7975, int_7978)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 196, 13), list_7974, list_7975)
        
        # Assigning a type to the variable 'Zm' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'Zm', list_7974)
        
        # Call to assert_equal(...): (line 197)
        # Processing the call arguments (line 197)
        
        # Call to from_mlab_linkage(...): (line 197)
        # Processing the call arguments (line 197)
        # Getting the type of 'Zm' (line 197)
        Zm_7981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 39), 'Zm', False)
        # Processing the call keyword arguments (line 197)
        kwargs_7982 = {}
        # Getting the type of 'from_mlab_linkage' (line 197)
        from_mlab_linkage_7980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 21), 'from_mlab_linkage', False)
        # Calling from_mlab_linkage(args, kwargs) (line 197)
        from_mlab_linkage_call_result_7983 = invoke(stypy.reporting.localization.Localization(__file__, 197, 21), from_mlab_linkage_7980, *[Zm_7981], **kwargs_7982)
        
        # Getting the type of 'Z' (line 197)
        Z_7984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 44), 'Z', False)
        # Processing the call keyword arguments (line 197)
        kwargs_7985 = {}
        # Getting the type of 'assert_equal' (line 197)
        assert_equal_7979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 197)
        assert_equal_call_result_7986 = invoke(stypy.reporting.localization.Localization(__file__, 197, 8), assert_equal_7979, *[from_mlab_linkage_call_result_7983, Z_7984], **kwargs_7985)
        
        
        # Call to assert_equal(...): (line 198)
        # Processing the call arguments (line 198)
        
        # Call to to_mlab_linkage(...): (line 198)
        # Processing the call arguments (line 198)
        # Getting the type of 'Z' (line 198)
        Z_7989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 37), 'Z', False)
        # Processing the call keyword arguments (line 198)
        kwargs_7990 = {}
        # Getting the type of 'to_mlab_linkage' (line 198)
        to_mlab_linkage_7988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 21), 'to_mlab_linkage', False)
        # Calling to_mlab_linkage(args, kwargs) (line 198)
        to_mlab_linkage_call_result_7991 = invoke(stypy.reporting.localization.Localization(__file__, 198, 21), to_mlab_linkage_7988, *[Z_7989], **kwargs_7990)
        
        # Getting the type of 'Zm' (line 198)
        Zm_7992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 41), 'Zm', False)
        # Processing the call keyword arguments (line 198)
        kwargs_7993 = {}
        # Getting the type of 'assert_equal' (line 198)
        assert_equal_7987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 198)
        assert_equal_call_result_7994 = invoke(stypy.reporting.localization.Localization(__file__, 198, 8), assert_equal_7987, *[to_mlab_linkage_call_result_7991, Zm_7992], **kwargs_7993)
        
        
        # ################# End of 'test_mlab_linkage_conversion_single_row(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_mlab_linkage_conversion_single_row' in the type store
        # Getting the type of 'stypy_return_type' (line 193)
        stypy_return_type_7995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7995)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_mlab_linkage_conversion_single_row'
        return stypy_return_type_7995


    @norecursion
    def test_mlab_linkage_conversion_multiple_rows(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_mlab_linkage_conversion_multiple_rows'
        module_type_store = module_type_store.open_function_context('test_mlab_linkage_conversion_multiple_rows', 200, 4, False)
        # Assigning a type to the variable 'self' (line 201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_localization', localization)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_function_name', 'TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows')
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_param_names_list', [])
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMLabLinkageConversion.test_mlab_linkage_conversion_multiple_rows', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_mlab_linkage_conversion_multiple_rows', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_mlab_linkage_conversion_multiple_rows(...)' code ##################

        
        # Assigning a Call to a Name (line 202):
        
        # Assigning a Call to a Name (line 202):
        
        # Call to asarray(...): (line 202)
        # Processing the call arguments (line 202)
        
        # Obtaining an instance of the builtin type 'list' (line 202)
        list_7998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 202)
        # Adding element type (line 202)
        
        # Obtaining an instance of the builtin type 'list' (line 202)
        list_7999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 202)
        # Adding element type (line 202)
        int_8000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 25), list_7999, int_8000)
        # Adding element type (line 202)
        int_8001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 25), list_7999, int_8001)
        # Adding element type (line 202)
        int_8002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 25), list_7999, int_8002)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 24), list_7998, list_7999)
        # Adding element type (line 202)
        
        # Obtaining an instance of the builtin type 'list' (line 202)
        list_8003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 202)
        # Adding element type (line 202)
        int_8004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 38), list_8003, int_8004)
        # Adding element type (line 202)
        int_8005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 38), list_8003, int_8005)
        # Adding element type (line 202)
        int_8006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 38), list_8003, int_8006)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 24), list_7998, list_8003)
        # Adding element type (line 202)
        
        # Obtaining an instance of the builtin type 'list' (line 203)
        list_8007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 203)
        # Adding element type (line 203)
        int_8008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 25), list_8007, int_8008)
        # Adding element type (line 203)
        int_8009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 25), list_8007, int_8009)
        # Adding element type (line 203)
        int_8010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 25), list_8007, int_8010)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 24), list_7998, list_8007)
        # Adding element type (line 202)
        
        # Obtaining an instance of the builtin type 'list' (line 203)
        list_8011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 203)
        # Adding element type (line 203)
        int_8012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 38), list_8011, int_8012)
        # Adding element type (line 203)
        int_8013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 38), list_8011, int_8013)
        # Adding element type (line 203)
        int_8014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 38), list_8011, int_8014)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 24), list_7998, list_8011)
        # Adding element type (line 202)
        
        # Obtaining an instance of the builtin type 'list' (line 203)
        list_8015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 203)
        # Adding element type (line 203)
        int_8016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 51), list_8015, int_8016)
        # Adding element type (line 203)
        int_8017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 51), list_8015, int_8017)
        # Adding element type (line 203)
        int_8018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 203, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 203, 51), list_8015, int_8018)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 202, 24), list_7998, list_8015)
        
        # Processing the call keyword arguments (line 202)
        kwargs_8019 = {}
        # Getting the type of 'np' (line 202)
        np_7996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 13), 'np', False)
        # Obtaining the member 'asarray' of a type (line 202)
        asarray_7997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 202, 13), np_7996, 'asarray')
        # Calling asarray(args, kwargs) (line 202)
        asarray_call_result_8020 = invoke(stypy.reporting.localization.Localization(__file__, 202, 13), asarray_7997, *[list_7998], **kwargs_8019)
        
        # Assigning a type to the variable 'Zm' (line 202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 8), 'Zm', asarray_call_result_8020)
        
        # Assigning a Call to a Name (line 204):
        
        # Assigning a Call to a Name (line 204):
        
        # Call to array(...): (line 204)
        # Processing the call arguments (line 204)
        
        # Obtaining an instance of the builtin type 'list' (line 204)
        list_8023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 204)
        # Adding element type (line 204)
        
        # Obtaining an instance of the builtin type 'list' (line 204)
        list_8024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 204)
        # Adding element type (line 204)
        float_8025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 23), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 22), list_8024, float_8025)
        # Adding element type (line 204)
        float_8026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 27), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 22), list_8024, float_8026)
        # Adding element type (line 204)
        float_8027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 22), list_8024, float_8027)
        # Adding element type (line 204)
        float_8028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 22), list_8024, float_8028)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 21), list_8023, list_8024)
        # Adding element type (line 204)
        
        # Obtaining an instance of the builtin type 'list' (line 205)
        list_8029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 205)
        # Adding element type (line 205)
        float_8030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 23), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 22), list_8029, float_8030)
        # Adding element type (line 205)
        float_8031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 27), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 22), list_8029, float_8031)
        # Adding element type (line 205)
        float_8032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 22), list_8029, float_8032)
        # Adding element type (line 205)
        float_8033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 205, 22), list_8029, float_8033)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 21), list_8023, list_8029)
        # Adding element type (line 204)
        
        # Obtaining an instance of the builtin type 'list' (line 206)
        list_8034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 206)
        # Adding element type (line 206)
        float_8035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 23), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 206, 22), list_8034, float_8035)
        # Adding element type (line 206)
        float_8036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 27), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 206, 22), list_8034, float_8036)
        # Adding element type (line 206)
        float_8037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 206, 22), list_8034, float_8037)
        # Adding element type (line 206)
        float_8038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 206, 22), list_8034, float_8038)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 21), list_8023, list_8034)
        # Adding element type (line 204)
        
        # Obtaining an instance of the builtin type 'list' (line 207)
        list_8039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 207)
        # Adding element type (line 207)
        float_8040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 23), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 207, 22), list_8039, float_8040)
        # Adding element type (line 207)
        float_8041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 27), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 207, 22), list_8039, float_8041)
        # Adding element type (line 207)
        float_8042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 207, 22), list_8039, float_8042)
        # Adding element type (line 207)
        float_8043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 207, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 207, 22), list_8039, float_8043)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 21), list_8023, list_8039)
        # Adding element type (line 204)
        
        # Obtaining an instance of the builtin type 'list' (line 208)
        list_8044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 208)
        # Adding element type (line 208)
        float_8045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 23), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 22), list_8044, float_8045)
        # Adding element type (line 208)
        float_8046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 27), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 22), list_8044, float_8046)
        # Adding element type (line 208)
        float_8047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 22), list_8044, float_8047)
        # Adding element type (line 208)
        float_8048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 22), list_8044, float_8048)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 21), list_8023, list_8044)
        
        # Processing the call keyword arguments (line 204)
        # Getting the type of 'np' (line 209)
        np_8049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 28), 'np', False)
        # Obtaining the member 'double' of a type (line 209)
        double_8050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 209, 28), np_8049, 'double')
        keyword_8051 = double_8050
        kwargs_8052 = {'dtype': keyword_8051}
        # Getting the type of 'np' (line 204)
        np_8021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 12), 'np', False)
        # Obtaining the member 'array' of a type (line 204)
        array_8022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 12), np_8021, 'array')
        # Calling array(args, kwargs) (line 204)
        array_call_result_8053 = invoke(stypy.reporting.localization.Localization(__file__, 204, 12), array_8022, *[list_8023], **kwargs_8052)
        
        # Assigning a type to the variable 'Z' (line 204)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 204, 8), 'Z', array_call_result_8053)
        
        # Call to assert_equal(...): (line 210)
        # Processing the call arguments (line 210)
        
        # Call to from_mlab_linkage(...): (line 210)
        # Processing the call arguments (line 210)
        # Getting the type of 'Zm' (line 210)
        Zm_8056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 39), 'Zm', False)
        # Processing the call keyword arguments (line 210)
        kwargs_8057 = {}
        # Getting the type of 'from_mlab_linkage' (line 210)
        from_mlab_linkage_8055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 21), 'from_mlab_linkage', False)
        # Calling from_mlab_linkage(args, kwargs) (line 210)
        from_mlab_linkage_call_result_8058 = invoke(stypy.reporting.localization.Localization(__file__, 210, 21), from_mlab_linkage_8055, *[Zm_8056], **kwargs_8057)
        
        # Getting the type of 'Z' (line 210)
        Z_8059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 44), 'Z', False)
        # Processing the call keyword arguments (line 210)
        kwargs_8060 = {}
        # Getting the type of 'assert_equal' (line 210)
        assert_equal_8054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 210)
        assert_equal_call_result_8061 = invoke(stypy.reporting.localization.Localization(__file__, 210, 8), assert_equal_8054, *[from_mlab_linkage_call_result_8058, Z_8059], **kwargs_8060)
        
        
        # Call to assert_equal(...): (line 211)
        # Processing the call arguments (line 211)
        
        # Call to to_mlab_linkage(...): (line 211)
        # Processing the call arguments (line 211)
        # Getting the type of 'Z' (line 211)
        Z_8064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 37), 'Z', False)
        # Processing the call keyword arguments (line 211)
        kwargs_8065 = {}
        # Getting the type of 'to_mlab_linkage' (line 211)
        to_mlab_linkage_8063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 21), 'to_mlab_linkage', False)
        # Calling to_mlab_linkage(args, kwargs) (line 211)
        to_mlab_linkage_call_result_8066 = invoke(stypy.reporting.localization.Localization(__file__, 211, 21), to_mlab_linkage_8063, *[Z_8064], **kwargs_8065)
        
        # Getting the type of 'Zm' (line 211)
        Zm_8067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 41), 'Zm', False)
        # Processing the call keyword arguments (line 211)
        kwargs_8068 = {}
        # Getting the type of 'assert_equal' (line 211)
        assert_equal_8062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 211)
        assert_equal_call_result_8069 = invoke(stypy.reporting.localization.Localization(__file__, 211, 8), assert_equal_8062, *[to_mlab_linkage_call_result_8066, Zm_8067], **kwargs_8068)
        
        
        # ################# End of 'test_mlab_linkage_conversion_multiple_rows(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_mlab_linkage_conversion_multiple_rows' in the type store
        # Getting the type of 'stypy_return_type' (line 200)
        stypy_return_type_8070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8070)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_mlab_linkage_conversion_multiple_rows'
        return stypy_return_type_8070


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 186, 0, False)
        # Assigning a type to the variable 'self' (line 187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMLabLinkageConversion.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestMLabLinkageConversion' (line 186)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 0), 'TestMLabLinkageConversion', TestMLabLinkageConversion)
# Declaration of the 'TestFcluster' class

class TestFcluster(object, ):

    @norecursion
    def test_fclusterdata(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_fclusterdata'
        module_type_store = module_type_store.open_function_context('test_fclusterdata', 215, 4, False)
        # Assigning a type to the variable 'self' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_localization', localization)
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_function_name', 'TestFcluster.test_fclusterdata')
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_param_names_list', [])
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFcluster.test_fclusterdata.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFcluster.test_fclusterdata', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_fclusterdata', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_fclusterdata(...)' code ##################

        
        # Getting the type of 'hierarchy_test_data' (line 216)
        hierarchy_test_data_8071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 17), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_inconsistent' of a type (line 216)
        fcluster_inconsistent_8072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 17), hierarchy_test_data_8071, 'fcluster_inconsistent')
        # Testing the type of a for loop iterable (line 216)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 216, 8), fcluster_inconsistent_8072)
        # Getting the type of the for loop variable (line 216)
        for_loop_var_8073 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 216, 8), fcluster_inconsistent_8072)
        # Assigning a type to the variable 't' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 't', for_loop_var_8073)
        # SSA begins for a for statement (line 216)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_fclusterdata(...): (line 217)
        # Processing the call arguments (line 217)
        # Getting the type of 't' (line 217)
        t_8076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 36), 't', False)
        str_8077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 39), 'str', 'inconsistent')
        # Processing the call keyword arguments (line 217)
        kwargs_8078 = {}
        # Getting the type of 'self' (line 217)
        self_8074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 12), 'self', False)
        # Obtaining the member 'check_fclusterdata' of a type (line 217)
        check_fclusterdata_8075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 12), self_8074, 'check_fclusterdata')
        # Calling check_fclusterdata(args, kwargs) (line 217)
        check_fclusterdata_call_result_8079 = invoke(stypy.reporting.localization.Localization(__file__, 217, 12), check_fclusterdata_8075, *[t_8076, str_8077], **kwargs_8078)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'hierarchy_test_data' (line 218)
        hierarchy_test_data_8080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 17), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_distance' of a type (line 218)
        fcluster_distance_8081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 17), hierarchy_test_data_8080, 'fcluster_distance')
        # Testing the type of a for loop iterable (line 218)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 218, 8), fcluster_distance_8081)
        # Getting the type of the for loop variable (line 218)
        for_loop_var_8082 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 218, 8), fcluster_distance_8081)
        # Assigning a type to the variable 't' (line 218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 8), 't', for_loop_var_8082)
        # SSA begins for a for statement (line 218)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_fclusterdata(...): (line 219)
        # Processing the call arguments (line 219)
        # Getting the type of 't' (line 219)
        t_8085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 36), 't', False)
        str_8086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 219, 39), 'str', 'distance')
        # Processing the call keyword arguments (line 219)
        kwargs_8087 = {}
        # Getting the type of 'self' (line 219)
        self_8083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 12), 'self', False)
        # Obtaining the member 'check_fclusterdata' of a type (line 219)
        check_fclusterdata_8084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 12), self_8083, 'check_fclusterdata')
        # Calling check_fclusterdata(args, kwargs) (line 219)
        check_fclusterdata_call_result_8088 = invoke(stypy.reporting.localization.Localization(__file__, 219, 12), check_fclusterdata_8084, *[t_8085, str_8086], **kwargs_8087)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'hierarchy_test_data' (line 220)
        hierarchy_test_data_8089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 17), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_maxclust' of a type (line 220)
        fcluster_maxclust_8090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 17), hierarchy_test_data_8089, 'fcluster_maxclust')
        # Testing the type of a for loop iterable (line 220)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 220, 8), fcluster_maxclust_8090)
        # Getting the type of the for loop variable (line 220)
        for_loop_var_8091 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 220, 8), fcluster_maxclust_8090)
        # Assigning a type to the variable 't' (line 220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 't', for_loop_var_8091)
        # SSA begins for a for statement (line 220)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_fclusterdata(...): (line 221)
        # Processing the call arguments (line 221)
        # Getting the type of 't' (line 221)
        t_8094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 36), 't', False)
        str_8095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 221, 39), 'str', 'maxclust')
        # Processing the call keyword arguments (line 221)
        kwargs_8096 = {}
        # Getting the type of 'self' (line 221)
        self_8092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 12), 'self', False)
        # Obtaining the member 'check_fclusterdata' of a type (line 221)
        check_fclusterdata_8093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 12), self_8092, 'check_fclusterdata')
        # Calling check_fclusterdata(args, kwargs) (line 221)
        check_fclusterdata_call_result_8097 = invoke(stypy.reporting.localization.Localization(__file__, 221, 12), check_fclusterdata_8093, *[t_8094, str_8095], **kwargs_8096)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_fclusterdata(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_fclusterdata' in the type store
        # Getting the type of 'stypy_return_type' (line 215)
        stypy_return_type_8098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8098)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_fclusterdata'
        return stypy_return_type_8098


    @norecursion
    def check_fclusterdata(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_fclusterdata'
        module_type_store = module_type_store.open_function_context('check_fclusterdata', 223, 4, False)
        # Assigning a type to the variable 'self' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_localization', localization)
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_function_name', 'TestFcluster.check_fclusterdata')
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_param_names_list', ['t', 'criterion'])
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFcluster.check_fclusterdata.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFcluster.check_fclusterdata', ['t', 'criterion'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_fclusterdata', localization, ['t', 'criterion'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_fclusterdata(...)' code ##################

        
        # Assigning a Subscript to a Name (line 225):
        
        # Assigning a Subscript to a Name (line 225):
        
        # Obtaining the type of the subscript
        # Getting the type of 't' (line 225)
        t_8099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 74), 't')
        
        # Call to getattr(...): (line 225)
        # Processing the call arguments (line 225)
        # Getting the type of 'hierarchy_test_data' (line 225)
        hierarchy_test_data_8101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 28), 'hierarchy_test_data', False)
        str_8102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 49), 'str', 'fcluster_')
        # Getting the type of 'criterion' (line 225)
        criterion_8103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 63), 'criterion', False)
        # Applying the binary operator '+' (line 225)
        result_add_8104 = python_operator(stypy.reporting.localization.Localization(__file__, 225, 49), '+', str_8102, criterion_8103)
        
        # Processing the call keyword arguments (line 225)
        kwargs_8105 = {}
        # Getting the type of 'getattr' (line 225)
        getattr_8100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 20), 'getattr', False)
        # Calling getattr(args, kwargs) (line 225)
        getattr_call_result_8106 = invoke(stypy.reporting.localization.Localization(__file__, 225, 20), getattr_8100, *[hierarchy_test_data_8101, result_add_8104], **kwargs_8105)
        
        # Obtaining the member '__getitem__' of a type (line 225)
        getitem___8107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 20), getattr_call_result_8106, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 225)
        subscript_call_result_8108 = invoke(stypy.reporting.localization.Localization(__file__, 225, 20), getitem___8107, t_8099)
        
        # Assigning a type to the variable 'expectedT' (line 225)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 225, 8), 'expectedT', subscript_call_result_8108)
        
        # Assigning a Attribute to a Name (line 226):
        
        # Assigning a Attribute to a Name (line 226):
        # Getting the type of 'hierarchy_test_data' (line 226)
        hierarchy_test_data_8109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 12), 'hierarchy_test_data')
        # Obtaining the member 'Q_X' of a type (line 226)
        Q_X_8110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 12), hierarchy_test_data_8109, 'Q_X')
        # Assigning a type to the variable 'X' (line 226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 8), 'X', Q_X_8110)
        
        # Assigning a Call to a Name (line 227):
        
        # Assigning a Call to a Name (line 227):
        
        # Call to fclusterdata(...): (line 227)
        # Processing the call arguments (line 227)
        # Getting the type of 'X' (line 227)
        X_8112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 25), 'X', False)
        # Processing the call keyword arguments (line 227)
        # Getting the type of 'criterion' (line 227)
        criterion_8113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 38), 'criterion', False)
        keyword_8114 = criterion_8113
        # Getting the type of 't' (line 227)
        t_8115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 51), 't', False)
        keyword_8116 = t_8115
        kwargs_8117 = {'criterion': keyword_8114, 't': keyword_8116}
        # Getting the type of 'fclusterdata' (line 227)
        fclusterdata_8111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 12), 'fclusterdata', False)
        # Calling fclusterdata(args, kwargs) (line 227)
        fclusterdata_call_result_8118 = invoke(stypy.reporting.localization.Localization(__file__, 227, 12), fclusterdata_8111, *[X_8112], **kwargs_8117)
        
        # Assigning a type to the variable 'T' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'T', fclusterdata_call_result_8118)
        
        # Call to assert_(...): (line 228)
        # Processing the call arguments (line 228)
        
        # Call to is_isomorphic(...): (line 228)
        # Processing the call arguments (line 228)
        # Getting the type of 'T' (line 228)
        T_8121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 30), 'T', False)
        # Getting the type of 'expectedT' (line 228)
        expectedT_8122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 33), 'expectedT', False)
        # Processing the call keyword arguments (line 228)
        kwargs_8123 = {}
        # Getting the type of 'is_isomorphic' (line 228)
        is_isomorphic_8120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 228)
        is_isomorphic_call_result_8124 = invoke(stypy.reporting.localization.Localization(__file__, 228, 16), is_isomorphic_8120, *[T_8121, expectedT_8122], **kwargs_8123)
        
        # Processing the call keyword arguments (line 228)
        kwargs_8125 = {}
        # Getting the type of 'assert_' (line 228)
        assert__8119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 228)
        assert__call_result_8126 = invoke(stypy.reporting.localization.Localization(__file__, 228, 8), assert__8119, *[is_isomorphic_call_result_8124], **kwargs_8125)
        
        
        # ################# End of 'check_fclusterdata(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_fclusterdata' in the type store
        # Getting the type of 'stypy_return_type' (line 223)
        stypy_return_type_8127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8127)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_fclusterdata'
        return stypy_return_type_8127


    @norecursion
    def test_fcluster(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_fcluster'
        module_type_store = module_type_store.open_function_context('test_fcluster', 230, 4, False)
        # Assigning a type to the variable 'self' (line 231)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 231, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_localization', localization)
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_function_name', 'TestFcluster.test_fcluster')
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_param_names_list', [])
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFcluster.test_fcluster.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFcluster.test_fcluster', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_fcluster', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_fcluster(...)' code ##################

        
        # Getting the type of 'hierarchy_test_data' (line 231)
        hierarchy_test_data_8128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 17), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_inconsistent' of a type (line 231)
        fcluster_inconsistent_8129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 231, 17), hierarchy_test_data_8128, 'fcluster_inconsistent')
        # Testing the type of a for loop iterable (line 231)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 231, 8), fcluster_inconsistent_8129)
        # Getting the type of the for loop variable (line 231)
        for_loop_var_8130 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 231, 8), fcluster_inconsistent_8129)
        # Assigning a type to the variable 't' (line 231)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 231, 8), 't', for_loop_var_8130)
        # SSA begins for a for statement (line 231)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_fcluster(...): (line 232)
        # Processing the call arguments (line 232)
        # Getting the type of 't' (line 232)
        t_8133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 32), 't', False)
        str_8134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 35), 'str', 'inconsistent')
        # Processing the call keyword arguments (line 232)
        kwargs_8135 = {}
        # Getting the type of 'self' (line 232)
        self_8131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 12), 'self', False)
        # Obtaining the member 'check_fcluster' of a type (line 232)
        check_fcluster_8132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 12), self_8131, 'check_fcluster')
        # Calling check_fcluster(args, kwargs) (line 232)
        check_fcluster_call_result_8136 = invoke(stypy.reporting.localization.Localization(__file__, 232, 12), check_fcluster_8132, *[t_8133, str_8134], **kwargs_8135)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'hierarchy_test_data' (line 233)
        hierarchy_test_data_8137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 17), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_distance' of a type (line 233)
        fcluster_distance_8138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 233, 17), hierarchy_test_data_8137, 'fcluster_distance')
        # Testing the type of a for loop iterable (line 233)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 233, 8), fcluster_distance_8138)
        # Getting the type of the for loop variable (line 233)
        for_loop_var_8139 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 233, 8), fcluster_distance_8138)
        # Assigning a type to the variable 't' (line 233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 't', for_loop_var_8139)
        # SSA begins for a for statement (line 233)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_fcluster(...): (line 234)
        # Processing the call arguments (line 234)
        # Getting the type of 't' (line 234)
        t_8142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 32), 't', False)
        str_8143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 35), 'str', 'distance')
        # Processing the call keyword arguments (line 234)
        kwargs_8144 = {}
        # Getting the type of 'self' (line 234)
        self_8140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 12), 'self', False)
        # Obtaining the member 'check_fcluster' of a type (line 234)
        check_fcluster_8141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 12), self_8140, 'check_fcluster')
        # Calling check_fcluster(args, kwargs) (line 234)
        check_fcluster_call_result_8145 = invoke(stypy.reporting.localization.Localization(__file__, 234, 12), check_fcluster_8141, *[t_8142, str_8143], **kwargs_8144)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'hierarchy_test_data' (line 235)
        hierarchy_test_data_8146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 17), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_maxclust' of a type (line 235)
        fcluster_maxclust_8147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 17), hierarchy_test_data_8146, 'fcluster_maxclust')
        # Testing the type of a for loop iterable (line 235)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 235, 8), fcluster_maxclust_8147)
        # Getting the type of the for loop variable (line 235)
        for_loop_var_8148 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 235, 8), fcluster_maxclust_8147)
        # Assigning a type to the variable 't' (line 235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 't', for_loop_var_8148)
        # SSA begins for a for statement (line 235)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_fcluster(...): (line 236)
        # Processing the call arguments (line 236)
        # Getting the type of 't' (line 236)
        t_8151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 32), 't', False)
        str_8152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 236, 35), 'str', 'maxclust')
        # Processing the call keyword arguments (line 236)
        kwargs_8153 = {}
        # Getting the type of 'self' (line 236)
        self_8149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 12), 'self', False)
        # Obtaining the member 'check_fcluster' of a type (line 236)
        check_fcluster_8150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 12), self_8149, 'check_fcluster')
        # Calling check_fcluster(args, kwargs) (line 236)
        check_fcluster_call_result_8154 = invoke(stypy.reporting.localization.Localization(__file__, 236, 12), check_fcluster_8150, *[t_8151, str_8152], **kwargs_8153)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_fcluster(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_fcluster' in the type store
        # Getting the type of 'stypy_return_type' (line 230)
        stypy_return_type_8155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8155)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_fcluster'
        return stypy_return_type_8155


    @norecursion
    def check_fcluster(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_fcluster'
        module_type_store = module_type_store.open_function_context('check_fcluster', 238, 4, False)
        # Assigning a type to the variable 'self' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_localization', localization)
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_function_name', 'TestFcluster.check_fcluster')
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_param_names_list', ['t', 'criterion'])
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFcluster.check_fcluster.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFcluster.check_fcluster', ['t', 'criterion'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_fcluster', localization, ['t', 'criterion'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_fcluster(...)' code ##################

        
        # Assigning a Subscript to a Name (line 240):
        
        # Assigning a Subscript to a Name (line 240):
        
        # Obtaining the type of the subscript
        # Getting the type of 't' (line 240)
        t_8156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 74), 't')
        
        # Call to getattr(...): (line 240)
        # Processing the call arguments (line 240)
        # Getting the type of 'hierarchy_test_data' (line 240)
        hierarchy_test_data_8158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 28), 'hierarchy_test_data', False)
        str_8159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 49), 'str', 'fcluster_')
        # Getting the type of 'criterion' (line 240)
        criterion_8160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 63), 'criterion', False)
        # Applying the binary operator '+' (line 240)
        result_add_8161 = python_operator(stypy.reporting.localization.Localization(__file__, 240, 49), '+', str_8159, criterion_8160)
        
        # Processing the call keyword arguments (line 240)
        kwargs_8162 = {}
        # Getting the type of 'getattr' (line 240)
        getattr_8157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 20), 'getattr', False)
        # Calling getattr(args, kwargs) (line 240)
        getattr_call_result_8163 = invoke(stypy.reporting.localization.Localization(__file__, 240, 20), getattr_8157, *[hierarchy_test_data_8158, result_add_8161], **kwargs_8162)
        
        # Obtaining the member '__getitem__' of a type (line 240)
        getitem___8164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 20), getattr_call_result_8163, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 240)
        subscript_call_result_8165 = invoke(stypy.reporting.localization.Localization(__file__, 240, 20), getitem___8164, t_8156)
        
        # Assigning a type to the variable 'expectedT' (line 240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 8), 'expectedT', subscript_call_result_8165)
        
        # Assigning a Call to a Name (line 241):
        
        # Assigning a Call to a Name (line 241):
        
        # Call to single(...): (line 241)
        # Processing the call arguments (line 241)
        # Getting the type of 'hierarchy_test_data' (line 241)
        hierarchy_test_data_8167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 19), 'hierarchy_test_data', False)
        # Obtaining the member 'Q_X' of a type (line 241)
        Q_X_8168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 19), hierarchy_test_data_8167, 'Q_X')
        # Processing the call keyword arguments (line 241)
        kwargs_8169 = {}
        # Getting the type of 'single' (line 241)
        single_8166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'single', False)
        # Calling single(args, kwargs) (line 241)
        single_call_result_8170 = invoke(stypy.reporting.localization.Localization(__file__, 241, 12), single_8166, *[Q_X_8168], **kwargs_8169)
        
        # Assigning a type to the variable 'Z' (line 241)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 8), 'Z', single_call_result_8170)
        
        # Assigning a Call to a Name (line 242):
        
        # Assigning a Call to a Name (line 242):
        
        # Call to fcluster(...): (line 242)
        # Processing the call arguments (line 242)
        # Getting the type of 'Z' (line 242)
        Z_8172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 21), 'Z', False)
        # Processing the call keyword arguments (line 242)
        # Getting the type of 'criterion' (line 242)
        criterion_8173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 34), 'criterion', False)
        keyword_8174 = criterion_8173
        # Getting the type of 't' (line 242)
        t_8175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 47), 't', False)
        keyword_8176 = t_8175
        kwargs_8177 = {'criterion': keyword_8174, 't': keyword_8176}
        # Getting the type of 'fcluster' (line 242)
        fcluster_8171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 12), 'fcluster', False)
        # Calling fcluster(args, kwargs) (line 242)
        fcluster_call_result_8178 = invoke(stypy.reporting.localization.Localization(__file__, 242, 12), fcluster_8171, *[Z_8172], **kwargs_8177)
        
        # Assigning a type to the variable 'T' (line 242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 8), 'T', fcluster_call_result_8178)
        
        # Call to assert_(...): (line 243)
        # Processing the call arguments (line 243)
        
        # Call to is_isomorphic(...): (line 243)
        # Processing the call arguments (line 243)
        # Getting the type of 'T' (line 243)
        T_8181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 30), 'T', False)
        # Getting the type of 'expectedT' (line 243)
        expectedT_8182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 33), 'expectedT', False)
        # Processing the call keyword arguments (line 243)
        kwargs_8183 = {}
        # Getting the type of 'is_isomorphic' (line 243)
        is_isomorphic_8180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 243)
        is_isomorphic_call_result_8184 = invoke(stypy.reporting.localization.Localization(__file__, 243, 16), is_isomorphic_8180, *[T_8181, expectedT_8182], **kwargs_8183)
        
        # Processing the call keyword arguments (line 243)
        kwargs_8185 = {}
        # Getting the type of 'assert_' (line 243)
        assert__8179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 243)
        assert__call_result_8186 = invoke(stypy.reporting.localization.Localization(__file__, 243, 8), assert__8179, *[is_isomorphic_call_result_8184], **kwargs_8185)
        
        
        # ################# End of 'check_fcluster(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_fcluster' in the type store
        # Getting the type of 'stypy_return_type' (line 238)
        stypy_return_type_8187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 238, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8187)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_fcluster'
        return stypy_return_type_8187


    @norecursion
    def test_fcluster_monocrit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_fcluster_monocrit'
        module_type_store = module_type_store.open_function_context('test_fcluster_monocrit', 245, 4, False)
        # Assigning a type to the variable 'self' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_localization', localization)
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_function_name', 'TestFcluster.test_fcluster_monocrit')
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_param_names_list', [])
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFcluster.test_fcluster_monocrit.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFcluster.test_fcluster_monocrit', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_fcluster_monocrit', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_fcluster_monocrit(...)' code ##################

        
        # Getting the type of 'hierarchy_test_data' (line 246)
        hierarchy_test_data_8188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 17), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_distance' of a type (line 246)
        fcluster_distance_8189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 17), hierarchy_test_data_8188, 'fcluster_distance')
        # Testing the type of a for loop iterable (line 246)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 246, 8), fcluster_distance_8189)
        # Getting the type of the for loop variable (line 246)
        for_loop_var_8190 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 246, 8), fcluster_distance_8189)
        # Assigning a type to the variable 't' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 8), 't', for_loop_var_8190)
        # SSA begins for a for statement (line 246)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_fcluster_monocrit(...): (line 247)
        # Processing the call arguments (line 247)
        # Getting the type of 't' (line 247)
        t_8193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 41), 't', False)
        # Processing the call keyword arguments (line 247)
        kwargs_8194 = {}
        # Getting the type of 'self' (line 247)
        self_8191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 12), 'self', False)
        # Obtaining the member 'check_fcluster_monocrit' of a type (line 247)
        check_fcluster_monocrit_8192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 12), self_8191, 'check_fcluster_monocrit')
        # Calling check_fcluster_monocrit(args, kwargs) (line 247)
        check_fcluster_monocrit_call_result_8195 = invoke(stypy.reporting.localization.Localization(__file__, 247, 12), check_fcluster_monocrit_8192, *[t_8193], **kwargs_8194)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'hierarchy_test_data' (line 248)
        hierarchy_test_data_8196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 17), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_maxclust' of a type (line 248)
        fcluster_maxclust_8197 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 17), hierarchy_test_data_8196, 'fcluster_maxclust')
        # Testing the type of a for loop iterable (line 248)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 248, 8), fcluster_maxclust_8197)
        # Getting the type of the for loop variable (line 248)
        for_loop_var_8198 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 248, 8), fcluster_maxclust_8197)
        # Assigning a type to the variable 't' (line 248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 8), 't', for_loop_var_8198)
        # SSA begins for a for statement (line 248)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_fcluster_maxclust_monocrit(...): (line 249)
        # Processing the call arguments (line 249)
        # Getting the type of 't' (line 249)
        t_8201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 50), 't', False)
        # Processing the call keyword arguments (line 249)
        kwargs_8202 = {}
        # Getting the type of 'self' (line 249)
        self_8199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 12), 'self', False)
        # Obtaining the member 'check_fcluster_maxclust_monocrit' of a type (line 249)
        check_fcluster_maxclust_monocrit_8200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 249, 12), self_8199, 'check_fcluster_maxclust_monocrit')
        # Calling check_fcluster_maxclust_monocrit(args, kwargs) (line 249)
        check_fcluster_maxclust_monocrit_call_result_8203 = invoke(stypy.reporting.localization.Localization(__file__, 249, 12), check_fcluster_maxclust_monocrit_8200, *[t_8201], **kwargs_8202)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_fcluster_monocrit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_fcluster_monocrit' in the type store
        # Getting the type of 'stypy_return_type' (line 245)
        stypy_return_type_8204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8204)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_fcluster_monocrit'
        return stypy_return_type_8204


    @norecursion
    def check_fcluster_monocrit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_fcluster_monocrit'
        module_type_store = module_type_store.open_function_context('check_fcluster_monocrit', 251, 4, False)
        # Assigning a type to the variable 'self' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_localization', localization)
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_function_name', 'TestFcluster.check_fcluster_monocrit')
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_param_names_list', ['t'])
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFcluster.check_fcluster_monocrit.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFcluster.check_fcluster_monocrit', ['t'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_fcluster_monocrit', localization, ['t'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_fcluster_monocrit(...)' code ##################

        
        # Assigning a Subscript to a Name (line 252):
        
        # Assigning a Subscript to a Name (line 252):
        
        # Obtaining the type of the subscript
        # Getting the type of 't' (line 252)
        t_8205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 58), 't')
        # Getting the type of 'hierarchy_test_data' (line 252)
        hierarchy_test_data_8206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 20), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_distance' of a type (line 252)
        fcluster_distance_8207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 20), hierarchy_test_data_8206, 'fcluster_distance')
        # Obtaining the member '__getitem__' of a type (line 252)
        getitem___8208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 20), fcluster_distance_8207, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 252)
        subscript_call_result_8209 = invoke(stypy.reporting.localization.Localization(__file__, 252, 20), getitem___8208, t_8205)
        
        # Assigning a type to the variable 'expectedT' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 8), 'expectedT', subscript_call_result_8209)
        
        # Assigning a Call to a Name (line 253):
        
        # Assigning a Call to a Name (line 253):
        
        # Call to single(...): (line 253)
        # Processing the call arguments (line 253)
        # Getting the type of 'hierarchy_test_data' (line 253)
        hierarchy_test_data_8211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 19), 'hierarchy_test_data', False)
        # Obtaining the member 'Q_X' of a type (line 253)
        Q_X_8212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 253, 19), hierarchy_test_data_8211, 'Q_X')
        # Processing the call keyword arguments (line 253)
        kwargs_8213 = {}
        # Getting the type of 'single' (line 253)
        single_8210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 12), 'single', False)
        # Calling single(args, kwargs) (line 253)
        single_call_result_8214 = invoke(stypy.reporting.localization.Localization(__file__, 253, 12), single_8210, *[Q_X_8212], **kwargs_8213)
        
        # Assigning a type to the variable 'Z' (line 253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 253, 8), 'Z', single_call_result_8214)
        
        # Assigning a Call to a Name (line 254):
        
        # Assigning a Call to a Name (line 254):
        
        # Call to fcluster(...): (line 254)
        # Processing the call arguments (line 254)
        # Getting the type of 'Z' (line 254)
        Z_8216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 21), 'Z', False)
        # Getting the type of 't' (line 254)
        t_8217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 24), 't', False)
        # Processing the call keyword arguments (line 254)
        str_8218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 37), 'str', 'monocrit')
        keyword_8219 = str_8218
        
        # Call to maxdists(...): (line 254)
        # Processing the call arguments (line 254)
        # Getting the type of 'Z' (line 254)
        Z_8221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 67), 'Z', False)
        # Processing the call keyword arguments (line 254)
        kwargs_8222 = {}
        # Getting the type of 'maxdists' (line 254)
        maxdists_8220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 58), 'maxdists', False)
        # Calling maxdists(args, kwargs) (line 254)
        maxdists_call_result_8223 = invoke(stypy.reporting.localization.Localization(__file__, 254, 58), maxdists_8220, *[Z_8221], **kwargs_8222)
        
        keyword_8224 = maxdists_call_result_8223
        kwargs_8225 = {'criterion': keyword_8219, 'monocrit': keyword_8224}
        # Getting the type of 'fcluster' (line 254)
        fcluster_8215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'fcluster', False)
        # Calling fcluster(args, kwargs) (line 254)
        fcluster_call_result_8226 = invoke(stypy.reporting.localization.Localization(__file__, 254, 12), fcluster_8215, *[Z_8216, t_8217], **kwargs_8225)
        
        # Assigning a type to the variable 'T' (line 254)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 8), 'T', fcluster_call_result_8226)
        
        # Call to assert_(...): (line 255)
        # Processing the call arguments (line 255)
        
        # Call to is_isomorphic(...): (line 255)
        # Processing the call arguments (line 255)
        # Getting the type of 'T' (line 255)
        T_8229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 30), 'T', False)
        # Getting the type of 'expectedT' (line 255)
        expectedT_8230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 33), 'expectedT', False)
        # Processing the call keyword arguments (line 255)
        kwargs_8231 = {}
        # Getting the type of 'is_isomorphic' (line 255)
        is_isomorphic_8228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 255)
        is_isomorphic_call_result_8232 = invoke(stypy.reporting.localization.Localization(__file__, 255, 16), is_isomorphic_8228, *[T_8229, expectedT_8230], **kwargs_8231)
        
        # Processing the call keyword arguments (line 255)
        kwargs_8233 = {}
        # Getting the type of 'assert_' (line 255)
        assert__8227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 255)
        assert__call_result_8234 = invoke(stypy.reporting.localization.Localization(__file__, 255, 8), assert__8227, *[is_isomorphic_call_result_8232], **kwargs_8233)
        
        
        # ################# End of 'check_fcluster_monocrit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_fcluster_monocrit' in the type store
        # Getting the type of 'stypy_return_type' (line 251)
        stypy_return_type_8235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8235)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_fcluster_monocrit'
        return stypy_return_type_8235


    @norecursion
    def check_fcluster_maxclust_monocrit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_fcluster_maxclust_monocrit'
        module_type_store = module_type_store.open_function_context('check_fcluster_maxclust_monocrit', 257, 4, False)
        # Assigning a type to the variable 'self' (line 258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_localization', localization)
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_function_name', 'TestFcluster.check_fcluster_maxclust_monocrit')
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_param_names_list', ['t'])
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestFcluster.check_fcluster_maxclust_monocrit.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFcluster.check_fcluster_maxclust_monocrit', ['t'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_fcluster_maxclust_monocrit', localization, ['t'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_fcluster_maxclust_monocrit(...)' code ##################

        
        # Assigning a Subscript to a Name (line 258):
        
        # Assigning a Subscript to a Name (line 258):
        
        # Obtaining the type of the subscript
        # Getting the type of 't' (line 258)
        t_8236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 58), 't')
        # Getting the type of 'hierarchy_test_data' (line 258)
        hierarchy_test_data_8237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 20), 'hierarchy_test_data')
        # Obtaining the member 'fcluster_maxclust' of a type (line 258)
        fcluster_maxclust_8238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 20), hierarchy_test_data_8237, 'fcluster_maxclust')
        # Obtaining the member '__getitem__' of a type (line 258)
        getitem___8239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 20), fcluster_maxclust_8238, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 258)
        subscript_call_result_8240 = invoke(stypy.reporting.localization.Localization(__file__, 258, 20), getitem___8239, t_8236)
        
        # Assigning a type to the variable 'expectedT' (line 258)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 8), 'expectedT', subscript_call_result_8240)
        
        # Assigning a Call to a Name (line 259):
        
        # Assigning a Call to a Name (line 259):
        
        # Call to single(...): (line 259)
        # Processing the call arguments (line 259)
        # Getting the type of 'hierarchy_test_data' (line 259)
        hierarchy_test_data_8242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 19), 'hierarchy_test_data', False)
        # Obtaining the member 'Q_X' of a type (line 259)
        Q_X_8243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 19), hierarchy_test_data_8242, 'Q_X')
        # Processing the call keyword arguments (line 259)
        kwargs_8244 = {}
        # Getting the type of 'single' (line 259)
        single_8241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 12), 'single', False)
        # Calling single(args, kwargs) (line 259)
        single_call_result_8245 = invoke(stypy.reporting.localization.Localization(__file__, 259, 12), single_8241, *[Q_X_8243], **kwargs_8244)
        
        # Assigning a type to the variable 'Z' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'Z', single_call_result_8245)
        
        # Assigning a Call to a Name (line 260):
        
        # Assigning a Call to a Name (line 260):
        
        # Call to fcluster(...): (line 260)
        # Processing the call arguments (line 260)
        # Getting the type of 'Z' (line 260)
        Z_8247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 21), 'Z', False)
        # Getting the type of 't' (line 260)
        t_8248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 24), 't', False)
        # Processing the call keyword arguments (line 260)
        str_8249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 260, 37), 'str', 'maxclust_monocrit')
        keyword_8250 = str_8249
        
        # Call to maxdists(...): (line 260)
        # Processing the call arguments (line 260)
        # Getting the type of 'Z' (line 260)
        Z_8252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 76), 'Z', False)
        # Processing the call keyword arguments (line 260)
        kwargs_8253 = {}
        # Getting the type of 'maxdists' (line 260)
        maxdists_8251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 67), 'maxdists', False)
        # Calling maxdists(args, kwargs) (line 260)
        maxdists_call_result_8254 = invoke(stypy.reporting.localization.Localization(__file__, 260, 67), maxdists_8251, *[Z_8252], **kwargs_8253)
        
        keyword_8255 = maxdists_call_result_8254
        kwargs_8256 = {'criterion': keyword_8250, 'monocrit': keyword_8255}
        # Getting the type of 'fcluster' (line 260)
        fcluster_8246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 12), 'fcluster', False)
        # Calling fcluster(args, kwargs) (line 260)
        fcluster_call_result_8257 = invoke(stypy.reporting.localization.Localization(__file__, 260, 12), fcluster_8246, *[Z_8247, t_8248], **kwargs_8256)
        
        # Assigning a type to the variable 'T' (line 260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 8), 'T', fcluster_call_result_8257)
        
        # Call to assert_(...): (line 261)
        # Processing the call arguments (line 261)
        
        # Call to is_isomorphic(...): (line 261)
        # Processing the call arguments (line 261)
        # Getting the type of 'T' (line 261)
        T_8260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 30), 'T', False)
        # Getting the type of 'expectedT' (line 261)
        expectedT_8261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 33), 'expectedT', False)
        # Processing the call keyword arguments (line 261)
        kwargs_8262 = {}
        # Getting the type of 'is_isomorphic' (line 261)
        is_isomorphic_8259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 261)
        is_isomorphic_call_result_8263 = invoke(stypy.reporting.localization.Localization(__file__, 261, 16), is_isomorphic_8259, *[T_8260, expectedT_8261], **kwargs_8262)
        
        # Processing the call keyword arguments (line 261)
        kwargs_8264 = {}
        # Getting the type of 'assert_' (line 261)
        assert__8258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 261)
        assert__call_result_8265 = invoke(stypy.reporting.localization.Localization(__file__, 261, 8), assert__8258, *[is_isomorphic_call_result_8263], **kwargs_8264)
        
        
        # ################# End of 'check_fcluster_maxclust_monocrit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_fcluster_maxclust_monocrit' in the type store
        # Getting the type of 'stypy_return_type' (line 257)
        stypy_return_type_8266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8266)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_fcluster_maxclust_monocrit'
        return stypy_return_type_8266


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 214, 0, False)
        # Assigning a type to the variable 'self' (line 215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestFcluster.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestFcluster' (line 214)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 0), 'TestFcluster', TestFcluster)
# Declaration of the 'TestLeaders' class

class TestLeaders(object, ):

    @norecursion
    def test_leaders_single(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_leaders_single'
        module_type_store = module_type_store.open_function_context('test_leaders_single', 265, 4, False)
        # Assigning a type to the variable 'self' (line 266)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 266, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_localization', localization)
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_function_name', 'TestLeaders.test_leaders_single')
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeaders.test_leaders_single.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeaders.test_leaders_single', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_leaders_single', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_leaders_single(...)' code ##################

        
        # Assigning a Attribute to a Name (line 267):
        
        # Assigning a Attribute to a Name (line 267):
        # Getting the type of 'hierarchy_test_data' (line 267)
        hierarchy_test_data_8267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'hierarchy_test_data')
        # Obtaining the member 'Q_X' of a type (line 267)
        Q_X_8268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 12), hierarchy_test_data_8267, 'Q_X')
        # Assigning a type to the variable 'X' (line 267)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 8), 'X', Q_X_8268)
        
        # Assigning a Call to a Name (line 268):
        
        # Assigning a Call to a Name (line 268):
        
        # Call to pdist(...): (line 268)
        # Processing the call arguments (line 268)
        # Getting the type of 'X' (line 268)
        X_8270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 18), 'X', False)
        # Processing the call keyword arguments (line 268)
        kwargs_8271 = {}
        # Getting the type of 'pdist' (line 268)
        pdist_8269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 12), 'pdist', False)
        # Calling pdist(args, kwargs) (line 268)
        pdist_call_result_8272 = invoke(stypy.reporting.localization.Localization(__file__, 268, 12), pdist_8269, *[X_8270], **kwargs_8271)
        
        # Assigning a type to the variable 'Y' (line 268)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 8), 'Y', pdist_call_result_8272)
        
        # Assigning a Call to a Name (line 269):
        
        # Assigning a Call to a Name (line 269):
        
        # Call to linkage(...): (line 269)
        # Processing the call arguments (line 269)
        # Getting the type of 'Y' (line 269)
        Y_8274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 20), 'Y', False)
        # Processing the call keyword arguments (line 269)
        kwargs_8275 = {}
        # Getting the type of 'linkage' (line 269)
        linkage_8273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 269)
        linkage_call_result_8276 = invoke(stypy.reporting.localization.Localization(__file__, 269, 12), linkage_8273, *[Y_8274], **kwargs_8275)
        
        # Assigning a type to the variable 'Z' (line 269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 8), 'Z', linkage_call_result_8276)
        
        # Assigning a Call to a Name (line 270):
        
        # Assigning a Call to a Name (line 270):
        
        # Call to fcluster(...): (line 270)
        # Processing the call arguments (line 270)
        # Getting the type of 'Z' (line 270)
        Z_8278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 21), 'Z', False)
        # Processing the call keyword arguments (line 270)
        str_8279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 34), 'str', 'maxclust')
        keyword_8280 = str_8279
        int_8281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 48), 'int')
        keyword_8282 = int_8281
        kwargs_8283 = {'criterion': keyword_8280, 't': keyword_8282}
        # Getting the type of 'fcluster' (line 270)
        fcluster_8277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 12), 'fcluster', False)
        # Calling fcluster(args, kwargs) (line 270)
        fcluster_call_result_8284 = invoke(stypy.reporting.localization.Localization(__file__, 270, 12), fcluster_8277, *[Z_8278], **kwargs_8283)
        
        # Assigning a type to the variable 'T' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'T', fcluster_call_result_8284)
        
        # Assigning a Tuple to a Name (line 271):
        
        # Assigning a Tuple to a Name (line 271):
        
        # Obtaining an instance of the builtin type 'tuple' (line 271)
        tuple_8285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 18), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 271)
        # Adding element type (line 271)
        
        # Call to array(...): (line 271)
        # Processing the call arguments (line 271)
        
        # Obtaining an instance of the builtin type 'list' (line 271)
        list_8288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 271)
        # Adding element type (line 271)
        int_8289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 27), list_8288, int_8289)
        # Adding element type (line 271)
        int_8290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 27), list_8288, int_8290)
        # Adding element type (line 271)
        int_8291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 27), list_8288, int_8291)
        
        # Processing the call keyword arguments (line 271)
        kwargs_8292 = {}
        # Getting the type of 'np' (line 271)
        np_8286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 18), 'np', False)
        # Obtaining the member 'array' of a type (line 271)
        array_8287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 18), np_8286, 'array')
        # Calling array(args, kwargs) (line 271)
        array_call_result_8293 = invoke(stypy.reporting.localization.Localization(__file__, 271, 18), array_8287, *[list_8288], **kwargs_8292)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 18), tuple_8285, array_call_result_8293)
        # Adding element type (line 271)
        
        # Call to array(...): (line 271)
        # Processing the call arguments (line 271)
        
        # Obtaining an instance of the builtin type 'list' (line 271)
        list_8296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 271)
        # Adding element type (line 271)
        int_8297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 51), list_8296, int_8297)
        # Adding element type (line 271)
        int_8298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 55), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 51), list_8296, int_8298)
        # Adding element type (line 271)
        int_8299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 58), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 51), list_8296, int_8299)
        
        # Processing the call keyword arguments (line 271)
        kwargs_8300 = {}
        # Getting the type of 'np' (line 271)
        np_8294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'np', False)
        # Obtaining the member 'array' of a type (line 271)
        array_8295 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 42), np_8294, 'array')
        # Calling array(args, kwargs) (line 271)
        array_call_result_8301 = invoke(stypy.reporting.localization.Localization(__file__, 271, 42), array_8295, *[list_8296], **kwargs_8300)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 18), tuple_8285, array_call_result_8301)
        
        # Assigning a type to the variable 'Lright' (line 271)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 8), 'Lright', tuple_8285)
        
        # Assigning a Call to a Name (line 272):
        
        # Assigning a Call to a Name (line 272):
        
        # Call to leaders(...): (line 272)
        # Processing the call arguments (line 272)
        # Getting the type of 'Z' (line 272)
        Z_8303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 20), 'Z', False)
        # Getting the type of 'T' (line 272)
        T_8304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 23), 'T', False)
        # Processing the call keyword arguments (line 272)
        kwargs_8305 = {}
        # Getting the type of 'leaders' (line 272)
        leaders_8302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 12), 'leaders', False)
        # Calling leaders(args, kwargs) (line 272)
        leaders_call_result_8306 = invoke(stypy.reporting.localization.Localization(__file__, 272, 12), leaders_8302, *[Z_8303, T_8304], **kwargs_8305)
        
        # Assigning a type to the variable 'L' (line 272)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 272, 8), 'L', leaders_call_result_8306)
        
        # Call to assert_equal(...): (line 273)
        # Processing the call arguments (line 273)
        # Getting the type of 'L' (line 273)
        L_8308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 21), 'L', False)
        # Getting the type of 'Lright' (line 273)
        Lright_8309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 24), 'Lright', False)
        # Processing the call keyword arguments (line 273)
        kwargs_8310 = {}
        # Getting the type of 'assert_equal' (line 273)
        assert_equal_8307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 273)
        assert_equal_call_result_8311 = invoke(stypy.reporting.localization.Localization(__file__, 273, 8), assert_equal_8307, *[L_8308, Lright_8309], **kwargs_8310)
        
        
        # ################# End of 'test_leaders_single(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_leaders_single' in the type store
        # Getting the type of 'stypy_return_type' (line 265)
        stypy_return_type_8312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8312)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_leaders_single'
        return stypy_return_type_8312


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 264, 0, False)
        # Assigning a type to the variable 'self' (line 265)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeaders.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestLeaders' (line 264)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 0), 'TestLeaders', TestLeaders)
# Declaration of the 'TestIsIsomorphic' class

class TestIsIsomorphic(object, ):

    @norecursion
    def test_is_isomorphic_1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_isomorphic_1'
        module_type_store = module_type_store.open_function_context('test_is_isomorphic_1', 277, 4, False)
        # Assigning a type to the variable 'self' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.test_is_isomorphic_1')
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.test_is_isomorphic_1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.test_is_isomorphic_1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_isomorphic_1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_isomorphic_1(...)' code ##################

        
        # Assigning a List to a Name (line 279):
        
        # Assigning a List to a Name (line 279):
        
        # Obtaining an instance of the builtin type 'list' (line 279)
        list_8313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 279)
        # Adding element type (line 279)
        int_8314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 12), list_8313, int_8314)
        # Adding element type (line 279)
        int_8315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 12), list_8313, int_8315)
        # Adding element type (line 279)
        int_8316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 12), list_8313, int_8316)
        
        # Assigning a type to the variable 'a' (line 279)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'a', list_8313)
        
        # Assigning a List to a Name (line 280):
        
        # Assigning a List to a Name (line 280):
        
        # Obtaining an instance of the builtin type 'list' (line 280)
        list_8317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 280)
        # Adding element type (line 280)
        int_8318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 280, 12), list_8317, int_8318)
        # Adding element type (line 280)
        int_8319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 280, 12), list_8317, int_8319)
        # Adding element type (line 280)
        int_8320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 280, 12), list_8317, int_8320)
        
        # Assigning a type to the variable 'b' (line 280)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 280, 8), 'b', list_8317)
        
        # Call to assert_(...): (line 281)
        # Processing the call arguments (line 281)
        
        # Call to is_isomorphic(...): (line 281)
        # Processing the call arguments (line 281)
        # Getting the type of 'a' (line 281)
        a_8323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 30), 'a', False)
        # Getting the type of 'b' (line 281)
        b_8324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 33), 'b', False)
        # Processing the call keyword arguments (line 281)
        kwargs_8325 = {}
        # Getting the type of 'is_isomorphic' (line 281)
        is_isomorphic_8322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 281)
        is_isomorphic_call_result_8326 = invoke(stypy.reporting.localization.Localization(__file__, 281, 16), is_isomorphic_8322, *[a_8323, b_8324], **kwargs_8325)
        
        # Processing the call keyword arguments (line 281)
        kwargs_8327 = {}
        # Getting the type of 'assert_' (line 281)
        assert__8321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 281)
        assert__call_result_8328 = invoke(stypy.reporting.localization.Localization(__file__, 281, 8), assert__8321, *[is_isomorphic_call_result_8326], **kwargs_8327)
        
        
        # Call to assert_(...): (line 282)
        # Processing the call arguments (line 282)
        
        # Call to is_isomorphic(...): (line 282)
        # Processing the call arguments (line 282)
        # Getting the type of 'b' (line 282)
        b_8331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 30), 'b', False)
        # Getting the type of 'a' (line 282)
        a_8332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 33), 'a', False)
        # Processing the call keyword arguments (line 282)
        kwargs_8333 = {}
        # Getting the type of 'is_isomorphic' (line 282)
        is_isomorphic_8330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 282)
        is_isomorphic_call_result_8334 = invoke(stypy.reporting.localization.Localization(__file__, 282, 16), is_isomorphic_8330, *[b_8331, a_8332], **kwargs_8333)
        
        # Processing the call keyword arguments (line 282)
        kwargs_8335 = {}
        # Getting the type of 'assert_' (line 282)
        assert__8329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 282)
        assert__call_result_8336 = invoke(stypy.reporting.localization.Localization(__file__, 282, 8), assert__8329, *[is_isomorphic_call_result_8334], **kwargs_8335)
        
        
        # ################# End of 'test_is_isomorphic_1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_isomorphic_1' in the type store
        # Getting the type of 'stypy_return_type' (line 277)
        stypy_return_type_8337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8337)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_isomorphic_1'
        return stypy_return_type_8337


    @norecursion
    def test_is_isomorphic_2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_isomorphic_2'
        module_type_store = module_type_store.open_function_context('test_is_isomorphic_2', 284, 4, False)
        # Assigning a type to the variable 'self' (line 285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.test_is_isomorphic_2')
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.test_is_isomorphic_2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.test_is_isomorphic_2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_isomorphic_2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_isomorphic_2(...)' code ##################

        
        # Assigning a List to a Name (line 286):
        
        # Assigning a List to a Name (line 286):
        
        # Obtaining an instance of the builtin type 'list' (line 286)
        list_8338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 286)
        # Adding element type (line 286)
        int_8339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 12), list_8338, int_8339)
        # Adding element type (line 286)
        int_8340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 12), list_8338, int_8340)
        # Adding element type (line 286)
        int_8341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 12), list_8338, int_8341)
        
        # Assigning a type to the variable 'a' (line 286)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 286, 8), 'a', list_8338)
        
        # Assigning a List to a Name (line 287):
        
        # Assigning a List to a Name (line 287):
        
        # Obtaining an instance of the builtin type 'list' (line 287)
        list_8342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 287)
        # Adding element type (line 287)
        int_8343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 287, 12), list_8342, int_8343)
        # Adding element type (line 287)
        int_8344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 287, 12), list_8342, int_8344)
        # Adding element type (line 287)
        int_8345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 287, 12), list_8342, int_8345)
        
        # Assigning a type to the variable 'b' (line 287)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 287, 8), 'b', list_8342)
        
        # Call to assert_(...): (line 288)
        # Processing the call arguments (line 288)
        
        # Call to is_isomorphic(...): (line 288)
        # Processing the call arguments (line 288)
        # Getting the type of 'a' (line 288)
        a_8348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 30), 'a', False)
        # Getting the type of 'b' (line 288)
        b_8349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 33), 'b', False)
        # Processing the call keyword arguments (line 288)
        kwargs_8350 = {}
        # Getting the type of 'is_isomorphic' (line 288)
        is_isomorphic_8347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 288)
        is_isomorphic_call_result_8351 = invoke(stypy.reporting.localization.Localization(__file__, 288, 16), is_isomorphic_8347, *[a_8348, b_8349], **kwargs_8350)
        
        # Processing the call keyword arguments (line 288)
        kwargs_8352 = {}
        # Getting the type of 'assert_' (line 288)
        assert__8346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 288)
        assert__call_result_8353 = invoke(stypy.reporting.localization.Localization(__file__, 288, 8), assert__8346, *[is_isomorphic_call_result_8351], **kwargs_8352)
        
        
        # Call to assert_(...): (line 289)
        # Processing the call arguments (line 289)
        
        # Call to is_isomorphic(...): (line 289)
        # Processing the call arguments (line 289)
        # Getting the type of 'b' (line 289)
        b_8356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 30), 'b', False)
        # Getting the type of 'a' (line 289)
        a_8357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 33), 'a', False)
        # Processing the call keyword arguments (line 289)
        kwargs_8358 = {}
        # Getting the type of 'is_isomorphic' (line 289)
        is_isomorphic_8355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 289)
        is_isomorphic_call_result_8359 = invoke(stypy.reporting.localization.Localization(__file__, 289, 16), is_isomorphic_8355, *[b_8356, a_8357], **kwargs_8358)
        
        # Processing the call keyword arguments (line 289)
        kwargs_8360 = {}
        # Getting the type of 'assert_' (line 289)
        assert__8354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 289)
        assert__call_result_8361 = invoke(stypy.reporting.localization.Localization(__file__, 289, 8), assert__8354, *[is_isomorphic_call_result_8359], **kwargs_8360)
        
        
        # ################# End of 'test_is_isomorphic_2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_isomorphic_2' in the type store
        # Getting the type of 'stypy_return_type' (line 284)
        stypy_return_type_8362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8362)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_isomorphic_2'
        return stypy_return_type_8362


    @norecursion
    def test_is_isomorphic_3(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_isomorphic_3'
        module_type_store = module_type_store.open_function_context('test_is_isomorphic_3', 291, 4, False)
        # Assigning a type to the variable 'self' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.test_is_isomorphic_3')
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.test_is_isomorphic_3.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.test_is_isomorphic_3', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_isomorphic_3', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_isomorphic_3(...)' code ##################

        
        # Assigning a List to a Name (line 293):
        
        # Assigning a List to a Name (line 293):
        
        # Obtaining an instance of the builtin type 'list' (line 293)
        list_8363 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 293)
        
        # Assigning a type to the variable 'a' (line 293)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 293, 8), 'a', list_8363)
        
        # Assigning a List to a Name (line 294):
        
        # Assigning a List to a Name (line 294):
        
        # Obtaining an instance of the builtin type 'list' (line 294)
        list_8364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 294, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 294)
        
        # Assigning a type to the variable 'b' (line 294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'b', list_8364)
        
        # Call to assert_(...): (line 295)
        # Processing the call arguments (line 295)
        
        # Call to is_isomorphic(...): (line 295)
        # Processing the call arguments (line 295)
        # Getting the type of 'a' (line 295)
        a_8367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 30), 'a', False)
        # Getting the type of 'b' (line 295)
        b_8368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 33), 'b', False)
        # Processing the call keyword arguments (line 295)
        kwargs_8369 = {}
        # Getting the type of 'is_isomorphic' (line 295)
        is_isomorphic_8366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 295)
        is_isomorphic_call_result_8370 = invoke(stypy.reporting.localization.Localization(__file__, 295, 16), is_isomorphic_8366, *[a_8367, b_8368], **kwargs_8369)
        
        # Processing the call keyword arguments (line 295)
        kwargs_8371 = {}
        # Getting the type of 'assert_' (line 295)
        assert__8365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 295)
        assert__call_result_8372 = invoke(stypy.reporting.localization.Localization(__file__, 295, 8), assert__8365, *[is_isomorphic_call_result_8370], **kwargs_8371)
        
        
        # ################# End of 'test_is_isomorphic_3(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_isomorphic_3' in the type store
        # Getting the type of 'stypy_return_type' (line 291)
        stypy_return_type_8373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8373)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_isomorphic_3'
        return stypy_return_type_8373


    @norecursion
    def test_is_isomorphic_4A(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_isomorphic_4A'
        module_type_store = module_type_store.open_function_context('test_is_isomorphic_4A', 297, 4, False)
        # Assigning a type to the variable 'self' (line 298)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 298, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.test_is_isomorphic_4A')
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.test_is_isomorphic_4A.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.test_is_isomorphic_4A', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_isomorphic_4A', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_isomorphic_4A(...)' code ##################

        
        # Assigning a List to a Name (line 299):
        
        # Assigning a List to a Name (line 299):
        
        # Obtaining an instance of the builtin type 'list' (line 299)
        list_8374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 299)
        # Adding element type (line 299)
        int_8375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 299, 12), list_8374, int_8375)
        # Adding element type (line 299)
        int_8376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 299, 12), list_8374, int_8376)
        # Adding element type (line 299)
        int_8377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 299, 12), list_8374, int_8377)
        
        # Assigning a type to the variable 'a' (line 299)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 8), 'a', list_8374)
        
        # Assigning a List to a Name (line 300):
        
        # Assigning a List to a Name (line 300):
        
        # Obtaining an instance of the builtin type 'list' (line 300)
        list_8378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 300)
        # Adding element type (line 300)
        int_8379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 12), list_8378, int_8379)
        # Adding element type (line 300)
        int_8380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 12), list_8378, int_8380)
        # Adding element type (line 300)
        int_8381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 300, 12), list_8378, int_8381)
        
        # Assigning a type to the variable 'b' (line 300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 8), 'b', list_8378)
        
        # Call to assert_(...): (line 301)
        # Processing the call arguments (line 301)
        
        # Call to is_isomorphic(...): (line 301)
        # Processing the call arguments (line 301)
        # Getting the type of 'a' (line 301)
        a_8384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 30), 'a', False)
        # Getting the type of 'b' (line 301)
        b_8385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 33), 'b', False)
        # Processing the call keyword arguments (line 301)
        kwargs_8386 = {}
        # Getting the type of 'is_isomorphic' (line 301)
        is_isomorphic_8383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 301)
        is_isomorphic_call_result_8387 = invoke(stypy.reporting.localization.Localization(__file__, 301, 16), is_isomorphic_8383, *[a_8384, b_8385], **kwargs_8386)
        
        # Processing the call keyword arguments (line 301)
        kwargs_8388 = {}
        # Getting the type of 'assert_' (line 301)
        assert__8382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 301)
        assert__call_result_8389 = invoke(stypy.reporting.localization.Localization(__file__, 301, 8), assert__8382, *[is_isomorphic_call_result_8387], **kwargs_8388)
        
        
        # Call to assert_(...): (line 302)
        # Processing the call arguments (line 302)
        
        # Call to is_isomorphic(...): (line 302)
        # Processing the call arguments (line 302)
        # Getting the type of 'b' (line 302)
        b_8392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 30), 'b', False)
        # Getting the type of 'a' (line 302)
        a_8393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 33), 'a', False)
        # Processing the call keyword arguments (line 302)
        kwargs_8394 = {}
        # Getting the type of 'is_isomorphic' (line 302)
        is_isomorphic_8391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 302)
        is_isomorphic_call_result_8395 = invoke(stypy.reporting.localization.Localization(__file__, 302, 16), is_isomorphic_8391, *[b_8392, a_8393], **kwargs_8394)
        
        # Processing the call keyword arguments (line 302)
        kwargs_8396 = {}
        # Getting the type of 'assert_' (line 302)
        assert__8390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 302)
        assert__call_result_8397 = invoke(stypy.reporting.localization.Localization(__file__, 302, 8), assert__8390, *[is_isomorphic_call_result_8395], **kwargs_8396)
        
        
        # ################# End of 'test_is_isomorphic_4A(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_isomorphic_4A' in the type store
        # Getting the type of 'stypy_return_type' (line 297)
        stypy_return_type_8398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8398)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_isomorphic_4A'
        return stypy_return_type_8398


    @norecursion
    def test_is_isomorphic_4B(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_isomorphic_4B'
        module_type_store = module_type_store.open_function_context('test_is_isomorphic_4B', 304, 4, False)
        # Assigning a type to the variable 'self' (line 305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.test_is_isomorphic_4B')
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.test_is_isomorphic_4B.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.test_is_isomorphic_4B', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_isomorphic_4B', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_isomorphic_4B(...)' code ##################

        
        # Assigning a List to a Name (line 306):
        
        # Assigning a List to a Name (line 306):
        
        # Obtaining an instance of the builtin type 'list' (line 306)
        list_8399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 306)
        # Adding element type (line 306)
        int_8400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 306, 12), list_8399, int_8400)
        # Adding element type (line 306)
        int_8401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 306, 12), list_8399, int_8401)
        # Adding element type (line 306)
        int_8402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 306, 12), list_8399, int_8402)
        # Adding element type (line 306)
        int_8403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 306, 12), list_8399, int_8403)
        
        # Assigning a type to the variable 'a' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'a', list_8399)
        
        # Assigning a List to a Name (line 307):
        
        # Assigning a List to a Name (line 307):
        
        # Obtaining an instance of the builtin type 'list' (line 307)
        list_8404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 307)
        # Adding element type (line 307)
        int_8405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 307, 12), list_8404, int_8405)
        # Adding element type (line 307)
        int_8406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 307, 12), list_8404, int_8406)
        # Adding element type (line 307)
        int_8407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 307, 12), list_8404, int_8407)
        # Adding element type (line 307)
        int_8408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 307, 12), list_8404, int_8408)
        
        # Assigning a type to the variable 'b' (line 307)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 307, 8), 'b', list_8404)
        
        # Call to assert_(...): (line 308)
        # Processing the call arguments (line 308)
        
        
        # Call to is_isomorphic(...): (line 308)
        # Processing the call arguments (line 308)
        # Getting the type of 'a' (line 308)
        a_8411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 30), 'a', False)
        # Getting the type of 'b' (line 308)
        b_8412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 33), 'b', False)
        # Processing the call keyword arguments (line 308)
        kwargs_8413 = {}
        # Getting the type of 'is_isomorphic' (line 308)
        is_isomorphic_8410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 308)
        is_isomorphic_call_result_8414 = invoke(stypy.reporting.localization.Localization(__file__, 308, 16), is_isomorphic_8410, *[a_8411, b_8412], **kwargs_8413)
        
        # Getting the type of 'False' (line 308)
        False_8415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 39), 'False', False)
        # Applying the binary operator '==' (line 308)
        result_eq_8416 = python_operator(stypy.reporting.localization.Localization(__file__, 308, 16), '==', is_isomorphic_call_result_8414, False_8415)
        
        # Processing the call keyword arguments (line 308)
        kwargs_8417 = {}
        # Getting the type of 'assert_' (line 308)
        assert__8409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 308)
        assert__call_result_8418 = invoke(stypy.reporting.localization.Localization(__file__, 308, 8), assert__8409, *[result_eq_8416], **kwargs_8417)
        
        
        # Call to assert_(...): (line 309)
        # Processing the call arguments (line 309)
        
        
        # Call to is_isomorphic(...): (line 309)
        # Processing the call arguments (line 309)
        # Getting the type of 'b' (line 309)
        b_8421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 30), 'b', False)
        # Getting the type of 'a' (line 309)
        a_8422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 33), 'a', False)
        # Processing the call keyword arguments (line 309)
        kwargs_8423 = {}
        # Getting the type of 'is_isomorphic' (line 309)
        is_isomorphic_8420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 309)
        is_isomorphic_call_result_8424 = invoke(stypy.reporting.localization.Localization(__file__, 309, 16), is_isomorphic_8420, *[b_8421, a_8422], **kwargs_8423)
        
        # Getting the type of 'False' (line 309)
        False_8425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 39), 'False', False)
        # Applying the binary operator '==' (line 309)
        result_eq_8426 = python_operator(stypy.reporting.localization.Localization(__file__, 309, 16), '==', is_isomorphic_call_result_8424, False_8425)
        
        # Processing the call keyword arguments (line 309)
        kwargs_8427 = {}
        # Getting the type of 'assert_' (line 309)
        assert__8419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 309)
        assert__call_result_8428 = invoke(stypy.reporting.localization.Localization(__file__, 309, 8), assert__8419, *[result_eq_8426], **kwargs_8427)
        
        
        # ################# End of 'test_is_isomorphic_4B(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_isomorphic_4B' in the type store
        # Getting the type of 'stypy_return_type' (line 304)
        stypy_return_type_8429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8429)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_isomorphic_4B'
        return stypy_return_type_8429


    @norecursion
    def test_is_isomorphic_4C(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_isomorphic_4C'
        module_type_store = module_type_store.open_function_context('test_is_isomorphic_4C', 311, 4, False)
        # Assigning a type to the variable 'self' (line 312)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.test_is_isomorphic_4C')
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.test_is_isomorphic_4C.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.test_is_isomorphic_4C', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_isomorphic_4C', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_isomorphic_4C(...)' code ##################

        
        # Assigning a List to a Name (line 313):
        
        # Assigning a List to a Name (line 313):
        
        # Obtaining an instance of the builtin type 'list' (line 313)
        list_8430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 313)
        # Adding element type (line 313)
        int_8431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 313, 12), list_8430, int_8431)
        # Adding element type (line 313)
        int_8432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 313, 12), list_8430, int_8432)
        # Adding element type (line 313)
        int_8433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 313, 12), list_8430, int_8433)
        
        # Assigning a type to the variable 'a' (line 313)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 313, 8), 'a', list_8430)
        
        # Assigning a List to a Name (line 314):
        
        # Assigning a List to a Name (line 314):
        
        # Obtaining an instance of the builtin type 'list' (line 314)
        list_8434 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 314)
        # Adding element type (line 314)
        int_8435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 12), list_8434, int_8435)
        # Adding element type (line 314)
        int_8436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 12), list_8434, int_8436)
        # Adding element type (line 314)
        int_8437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 314, 12), list_8434, int_8437)
        
        # Assigning a type to the variable 'b' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'b', list_8434)
        
        # Call to assert_(...): (line 315)
        # Processing the call arguments (line 315)
        
        # Call to is_isomorphic(...): (line 315)
        # Processing the call arguments (line 315)
        # Getting the type of 'a' (line 315)
        a_8440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 30), 'a', False)
        # Getting the type of 'b' (line 315)
        b_8441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 33), 'b', False)
        # Processing the call keyword arguments (line 315)
        kwargs_8442 = {}
        # Getting the type of 'is_isomorphic' (line 315)
        is_isomorphic_8439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 315)
        is_isomorphic_call_result_8443 = invoke(stypy.reporting.localization.Localization(__file__, 315, 16), is_isomorphic_8439, *[a_8440, b_8441], **kwargs_8442)
        
        # Processing the call keyword arguments (line 315)
        kwargs_8444 = {}
        # Getting the type of 'assert_' (line 315)
        assert__8438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 315)
        assert__call_result_8445 = invoke(stypy.reporting.localization.Localization(__file__, 315, 8), assert__8438, *[is_isomorphic_call_result_8443], **kwargs_8444)
        
        
        # Call to assert_(...): (line 316)
        # Processing the call arguments (line 316)
        
        # Call to is_isomorphic(...): (line 316)
        # Processing the call arguments (line 316)
        # Getting the type of 'b' (line 316)
        b_8448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 30), 'b', False)
        # Getting the type of 'a' (line 316)
        a_8449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 33), 'a', False)
        # Processing the call keyword arguments (line 316)
        kwargs_8450 = {}
        # Getting the type of 'is_isomorphic' (line 316)
        is_isomorphic_8447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 16), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 316)
        is_isomorphic_call_result_8451 = invoke(stypy.reporting.localization.Localization(__file__, 316, 16), is_isomorphic_8447, *[b_8448, a_8449], **kwargs_8450)
        
        # Processing the call keyword arguments (line 316)
        kwargs_8452 = {}
        # Getting the type of 'assert_' (line 316)
        assert__8446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 316)
        assert__call_result_8453 = invoke(stypy.reporting.localization.Localization(__file__, 316, 8), assert__8446, *[is_isomorphic_call_result_8451], **kwargs_8452)
        
        
        # ################# End of 'test_is_isomorphic_4C(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_isomorphic_4C' in the type store
        # Getting the type of 'stypy_return_type' (line 311)
        stypy_return_type_8454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8454)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_isomorphic_4C'
        return stypy_return_type_8454


    @norecursion
    def test_is_isomorphic_5(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_isomorphic_5'
        module_type_store = module_type_store.open_function_context('test_is_isomorphic_5', 318, 4, False)
        # Assigning a type to the variable 'self' (line 319)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.test_is_isomorphic_5')
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.test_is_isomorphic_5.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.test_is_isomorphic_5', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_isomorphic_5', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_isomorphic_5(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 321)
        list_8455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 321)
        # Adding element type (line 321)
        int_8456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 321, 18), list_8455, int_8456)
        # Adding element type (line 321)
        int_8457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 321, 18), list_8455, int_8457)
        # Adding element type (line 321)
        int_8458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 321, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 321, 18), list_8455, int_8458)
        
        # Testing the type of a for loop iterable (line 321)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 321, 8), list_8455)
        # Getting the type of the for loop variable (line 321)
        for_loop_var_8459 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 321, 8), list_8455)
        # Assigning a type to the variable 'nc' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 8), 'nc', for_loop_var_8459)
        # SSA begins for a for statement (line 321)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to help_is_isomorphic_randperm(...): (line 322)
        # Processing the call arguments (line 322)
        int_8462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 45), 'int')
        # Getting the type of 'nc' (line 322)
        nc_8463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 51), 'nc', False)
        # Processing the call keyword arguments (line 322)
        kwargs_8464 = {}
        # Getting the type of 'self' (line 322)
        self_8460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 12), 'self', False)
        # Obtaining the member 'help_is_isomorphic_randperm' of a type (line 322)
        help_is_isomorphic_randperm_8461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 12), self_8460, 'help_is_isomorphic_randperm')
        # Calling help_is_isomorphic_randperm(args, kwargs) (line 322)
        help_is_isomorphic_randperm_call_result_8465 = invoke(stypy.reporting.localization.Localization(__file__, 322, 12), help_is_isomorphic_randperm_8461, *[int_8462, nc_8463], **kwargs_8464)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_isomorphic_5(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_isomorphic_5' in the type store
        # Getting the type of 'stypy_return_type' (line 318)
        stypy_return_type_8466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8466)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_isomorphic_5'
        return stypy_return_type_8466


    @norecursion
    def test_is_isomorphic_6(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_isomorphic_6'
        module_type_store = module_type_store.open_function_context('test_is_isomorphic_6', 324, 4, False)
        # Assigning a type to the variable 'self' (line 325)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 325, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.test_is_isomorphic_6')
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.test_is_isomorphic_6.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.test_is_isomorphic_6', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_isomorphic_6', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_isomorphic_6(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 328)
        list_8467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 328)
        # Adding element type (line 328)
        int_8468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 18), list_8467, int_8468)
        # Adding element type (line 328)
        int_8469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 18), list_8467, int_8469)
        # Adding element type (line 328)
        int_8470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 328, 18), list_8467, int_8470)
        
        # Testing the type of a for loop iterable (line 328)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 328, 8), list_8467)
        # Getting the type of the for loop variable (line 328)
        for_loop_var_8471 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 328, 8), list_8467)
        # Assigning a type to the variable 'nc' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 8), 'nc', for_loop_var_8471)
        # SSA begins for a for statement (line 328)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to help_is_isomorphic_randperm(...): (line 329)
        # Processing the call arguments (line 329)
        int_8474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 45), 'int')
        # Getting the type of 'nc' (line 329)
        nc_8475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 51), 'nc', False)
        # Getting the type of 'True' (line 329)
        True_8476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 55), 'True', False)
        int_8477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 61), 'int')
        # Processing the call keyword arguments (line 329)
        kwargs_8478 = {}
        # Getting the type of 'self' (line 329)
        self_8472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 12), 'self', False)
        # Obtaining the member 'help_is_isomorphic_randperm' of a type (line 329)
        help_is_isomorphic_randperm_8473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 12), self_8472, 'help_is_isomorphic_randperm')
        # Calling help_is_isomorphic_randperm(args, kwargs) (line 329)
        help_is_isomorphic_randperm_call_result_8479 = invoke(stypy.reporting.localization.Localization(__file__, 329, 12), help_is_isomorphic_randperm_8473, *[int_8474, nc_8475, True_8476, int_8477], **kwargs_8478)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_isomorphic_6(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_isomorphic_6' in the type store
        # Getting the type of 'stypy_return_type' (line 324)
        stypy_return_type_8480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8480)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_isomorphic_6'
        return stypy_return_type_8480


    @norecursion
    def test_is_isomorphic_7(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_isomorphic_7'
        module_type_store = module_type_store.open_function_context('test_is_isomorphic_7', 331, 4, False)
        # Assigning a type to the variable 'self' (line 332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 332, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.test_is_isomorphic_7')
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.test_is_isomorphic_7.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.test_is_isomorphic_7', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_isomorphic_7', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_isomorphic_7(...)' code ##################

        
        # Call to assert_(...): (line 333)
        # Processing the call arguments (line 333)
        
        
        # Call to is_isomorphic(...): (line 333)
        # Processing the call arguments (line 333)
        
        # Obtaining an instance of the builtin type 'list' (line 333)
        list_8483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 333)
        # Adding element type (line 333)
        int_8484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 34), list_8483, int_8484)
        # Adding element type (line 333)
        int_8485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 34), list_8483, int_8485)
        # Adding element type (line 333)
        int_8486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 34), list_8483, int_8486)
        
        
        # Obtaining an instance of the builtin type 'list' (line 333)
        list_8487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 45), 'list')
        # Adding type elements to the builtin type 'list' instance (line 333)
        # Adding element type (line 333)
        int_8488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 45), list_8487, int_8488)
        # Adding element type (line 333)
        int_8489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 45), list_8487, int_8489)
        # Adding element type (line 333)
        int_8490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 45), list_8487, int_8490)
        
        # Processing the call keyword arguments (line 333)
        kwargs_8491 = {}
        # Getting the type of 'is_isomorphic' (line 333)
        is_isomorphic_8482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 20), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 333)
        is_isomorphic_call_result_8492 = invoke(stypy.reporting.localization.Localization(__file__, 333, 20), is_isomorphic_8482, *[list_8483, list_8487], **kwargs_8491)
        
        # Applying the 'not' unary operator (line 333)
        result_not__8493 = python_operator(stypy.reporting.localization.Localization(__file__, 333, 16), 'not', is_isomorphic_call_result_8492)
        
        # Processing the call keyword arguments (line 333)
        kwargs_8494 = {}
        # Getting the type of 'assert_' (line 333)
        assert__8481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 333)
        assert__call_result_8495 = invoke(stypy.reporting.localization.Localization(__file__, 333, 8), assert__8481, *[result_not__8493], **kwargs_8494)
        
        
        # ################# End of 'test_is_isomorphic_7(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_isomorphic_7' in the type store
        # Getting the type of 'stypy_return_type' (line 331)
        stypy_return_type_8496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8496)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_isomorphic_7'
        return stypy_return_type_8496


    @norecursion
    def help_is_isomorphic_randperm(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'False' (line 335)
        False_8497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 66), 'False')
        int_8498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 81), 'int')
        defaults = [False_8497, int_8498]
        # Create a new context for function 'help_is_isomorphic_randperm'
        module_type_store = module_type_store.open_function_context('help_is_isomorphic_randperm', 335, 4, False)
        # Assigning a type to the variable 'self' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_localization', localization)
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_function_name', 'TestIsIsomorphic.help_is_isomorphic_randperm')
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_param_names_list', ['nobs', 'nclusters', 'noniso', 'nerrors'])
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsIsomorphic.help_is_isomorphic_randperm.__dict__.__setitem__('stypy_declared_arg_number', 5)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.help_is_isomorphic_randperm', ['nobs', 'nclusters', 'noniso', 'nerrors'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'help_is_isomorphic_randperm', localization, ['nobs', 'nclusters', 'noniso', 'nerrors'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'help_is_isomorphic_randperm(...)' code ##################

        
        
        # Call to range(...): (line 336)
        # Processing the call arguments (line 336)
        int_8500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 23), 'int')
        # Processing the call keyword arguments (line 336)
        kwargs_8501 = {}
        # Getting the type of 'range' (line 336)
        range_8499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 17), 'range', False)
        # Calling range(args, kwargs) (line 336)
        range_call_result_8502 = invoke(stypy.reporting.localization.Localization(__file__, 336, 17), range_8499, *[int_8500], **kwargs_8501)
        
        # Testing the type of a for loop iterable (line 336)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 336, 8), range_call_result_8502)
        # Getting the type of the for loop variable (line 336)
        for_loop_var_8503 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 336, 8), range_call_result_8502)
        # Assigning a type to the variable 'k' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'k', for_loop_var_8503)
        # SSA begins for a for statement (line 336)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 337):
        
        # Assigning a Call to a Name (line 337):
        
        # Call to int_(...): (line 337)
        # Processing the call arguments (line 337)
        
        # Call to rand(...): (line 337)
        # Processing the call arguments (line 337)
        # Getting the type of 'nobs' (line 337)
        nobs_8509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 39), 'nobs', False)
        # Processing the call keyword arguments (line 337)
        kwargs_8510 = {}
        # Getting the type of 'np' (line 337)
        np_8506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 24), 'np', False)
        # Obtaining the member 'random' of a type (line 337)
        random_8507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 24), np_8506, 'random')
        # Obtaining the member 'rand' of a type (line 337)
        rand_8508 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 24), random_8507, 'rand')
        # Calling rand(args, kwargs) (line 337)
        rand_call_result_8511 = invoke(stypy.reporting.localization.Localization(__file__, 337, 24), rand_8508, *[nobs_8509], **kwargs_8510)
        
        # Getting the type of 'nclusters' (line 337)
        nclusters_8512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 47), 'nclusters', False)
        # Applying the binary operator '*' (line 337)
        result_mul_8513 = python_operator(stypy.reporting.localization.Localization(__file__, 337, 24), '*', rand_call_result_8511, nclusters_8512)
        
        # Processing the call keyword arguments (line 337)
        kwargs_8514 = {}
        # Getting the type of 'np' (line 337)
        np_8504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 16), 'np', False)
        # Obtaining the member 'int_' of a type (line 337)
        int__8505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 16), np_8504, 'int_')
        # Calling int_(args, kwargs) (line 337)
        int__call_result_8515 = invoke(stypy.reporting.localization.Localization(__file__, 337, 16), int__8505, *[result_mul_8513], **kwargs_8514)
        
        # Assigning a type to the variable 'a' (line 337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 12), 'a', int__call_result_8515)
        
        # Assigning a Call to a Name (line 338):
        
        # Assigning a Call to a Name (line 338):
        
        # Call to zeros(...): (line 338)
        # Processing the call arguments (line 338)
        # Getting the type of 'a' (line 338)
        a_8518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 25), 'a', False)
        # Obtaining the member 'size' of a type (line 338)
        size_8519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 25), a_8518, 'size')
        # Processing the call keyword arguments (line 338)
        # Getting the type of 'np' (line 338)
        np_8520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 39), 'np', False)
        # Obtaining the member 'int_' of a type (line 338)
        int__8521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 39), np_8520, 'int_')
        keyword_8522 = int__8521
        kwargs_8523 = {'dtype': keyword_8522}
        # Getting the type of 'np' (line 338)
        np_8516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 16), 'np', False)
        # Obtaining the member 'zeros' of a type (line 338)
        zeros_8517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 16), np_8516, 'zeros')
        # Calling zeros(args, kwargs) (line 338)
        zeros_call_result_8524 = invoke(stypy.reporting.localization.Localization(__file__, 338, 16), zeros_8517, *[size_8519], **kwargs_8523)
        
        # Assigning a type to the variable 'b' (line 338)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 12), 'b', zeros_call_result_8524)
        
        # Assigning a Call to a Name (line 339):
        
        # Assigning a Call to a Name (line 339):
        
        # Call to permutation(...): (line 339)
        # Processing the call arguments (line 339)
        # Getting the type of 'nclusters' (line 339)
        nclusters_8528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 38), 'nclusters', False)
        # Processing the call keyword arguments (line 339)
        kwargs_8529 = {}
        # Getting the type of 'np' (line 339)
        np_8525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 339)
        random_8526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 16), np_8525, 'random')
        # Obtaining the member 'permutation' of a type (line 339)
        permutation_8527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 16), random_8526, 'permutation')
        # Calling permutation(args, kwargs) (line 339)
        permutation_call_result_8530 = invoke(stypy.reporting.localization.Localization(__file__, 339, 16), permutation_8527, *[nclusters_8528], **kwargs_8529)
        
        # Assigning a type to the variable 'P' (line 339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 12), 'P', permutation_call_result_8530)
        
        
        # Call to xrange(...): (line 340)
        # Processing the call arguments (line 340)
        int_8532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 28), 'int')
        
        # Obtaining the type of the subscript
        int_8533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 39), 'int')
        # Getting the type of 'a' (line 340)
        a_8534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 31), 'a', False)
        # Obtaining the member 'shape' of a type (line 340)
        shape_8535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 31), a_8534, 'shape')
        # Obtaining the member '__getitem__' of a type (line 340)
        getitem___8536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 31), shape_8535, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 340)
        subscript_call_result_8537 = invoke(stypy.reporting.localization.Localization(__file__, 340, 31), getitem___8536, int_8533)
        
        # Processing the call keyword arguments (line 340)
        kwargs_8538 = {}
        # Getting the type of 'xrange' (line 340)
        xrange_8531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 21), 'xrange', False)
        # Calling xrange(args, kwargs) (line 340)
        xrange_call_result_8539 = invoke(stypy.reporting.localization.Localization(__file__, 340, 21), xrange_8531, *[int_8532, subscript_call_result_8537], **kwargs_8538)
        
        # Testing the type of a for loop iterable (line 340)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 340, 12), xrange_call_result_8539)
        # Getting the type of the for loop variable (line 340)
        for_loop_var_8540 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 340, 12), xrange_call_result_8539)
        # Assigning a type to the variable 'i' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 12), 'i', for_loop_var_8540)
        # SSA begins for a for statement (line 340)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Subscript (line 341):
        
        # Assigning a Subscript to a Subscript (line 341):
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 341)
        i_8541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 27), 'i')
        # Getting the type of 'a' (line 341)
        a_8542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 25), 'a')
        # Obtaining the member '__getitem__' of a type (line 341)
        getitem___8543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 25), a_8542, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 341)
        subscript_call_result_8544 = invoke(stypy.reporting.localization.Localization(__file__, 341, 25), getitem___8543, i_8541)
        
        # Getting the type of 'P' (line 341)
        P_8545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 23), 'P')
        # Obtaining the member '__getitem__' of a type (line 341)
        getitem___8546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 23), P_8545, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 341)
        subscript_call_result_8547 = invoke(stypy.reporting.localization.Localization(__file__, 341, 23), getitem___8546, subscript_call_result_8544)
        
        # Getting the type of 'b' (line 341)
        b_8548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 16), 'b')
        # Getting the type of 'i' (line 341)
        i_8549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 18), 'i')
        # Storing an element on a container (line 341)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 16), b_8548, (i_8549, subscript_call_result_8547))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Getting the type of 'noniso' (line 342)
        noniso_8550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 15), 'noniso')
        # Testing the type of an if condition (line 342)
        if_condition_8551 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 342, 12), noniso_8550)
        # Assigning a type to the variable 'if_condition_8551' (line 342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 12), 'if_condition_8551', if_condition_8551)
        # SSA begins for if statement (line 342)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 343):
        
        # Assigning a Call to a Name (line 343):
        
        # Call to permutation(...): (line 343)
        # Processing the call arguments (line 343)
        # Getting the type of 'nobs' (line 343)
        nobs_8555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 42), 'nobs', False)
        # Processing the call keyword arguments (line 343)
        kwargs_8556 = {}
        # Getting the type of 'np' (line 343)
        np_8552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 20), 'np', False)
        # Obtaining the member 'random' of a type (line 343)
        random_8553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 20), np_8552, 'random')
        # Obtaining the member 'permutation' of a type (line 343)
        permutation_8554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 20), random_8553, 'permutation')
        # Calling permutation(args, kwargs) (line 343)
        permutation_call_result_8557 = invoke(stypy.reporting.localization.Localization(__file__, 343, 20), permutation_8554, *[nobs_8555], **kwargs_8556)
        
        # Assigning a type to the variable 'Q' (line 343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 16), 'Q', permutation_call_result_8557)
        
        # Getting the type of 'b' (line 344)
        b_8558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 16), 'b')
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        int_8559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 20), 'int')
        # Getting the type of 'nerrors' (line 344)
        nerrors_8560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 22), 'nerrors')
        slice_8561 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 344, 18), int_8559, nerrors_8560, None)
        # Getting the type of 'Q' (line 344)
        Q_8562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 18), 'Q')
        # Obtaining the member '__getitem__' of a type (line 344)
        getitem___8563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 18), Q_8562, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 344)
        subscript_call_result_8564 = invoke(stypy.reporting.localization.Localization(__file__, 344, 18), getitem___8563, slice_8561)
        
        # Getting the type of 'b' (line 344)
        b_8565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 16), 'b')
        # Obtaining the member '__getitem__' of a type (line 344)
        getitem___8566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 16), b_8565, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 344)
        subscript_call_result_8567 = invoke(stypy.reporting.localization.Localization(__file__, 344, 16), getitem___8566, subscript_call_result_8564)
        
        int_8568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 35), 'int')
        # Applying the binary operator '+=' (line 344)
        result_iadd_8569 = python_operator(stypy.reporting.localization.Localization(__file__, 344, 16), '+=', subscript_call_result_8567, int_8568)
        # Getting the type of 'b' (line 344)
        b_8570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 16), 'b')
        
        # Obtaining the type of the subscript
        int_8571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 20), 'int')
        # Getting the type of 'nerrors' (line 344)
        nerrors_8572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 22), 'nerrors')
        slice_8573 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 344, 18), int_8571, nerrors_8572, None)
        # Getting the type of 'Q' (line 344)
        Q_8574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 18), 'Q')
        # Obtaining the member '__getitem__' of a type (line 344)
        getitem___8575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 18), Q_8574, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 344)
        subscript_call_result_8576 = invoke(stypy.reporting.localization.Localization(__file__, 344, 18), getitem___8575, slice_8573)
        
        # Storing an element on a container (line 344)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 344, 16), b_8570, (subscript_call_result_8576, result_iadd_8569))
        
        
        # Getting the type of 'b' (line 345)
        b_8577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 16), 'b')
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        int_8578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 20), 'int')
        # Getting the type of 'nerrors' (line 345)
        nerrors_8579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 22), 'nerrors')
        slice_8580 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 345, 18), int_8578, nerrors_8579, None)
        # Getting the type of 'Q' (line 345)
        Q_8581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 18), 'Q')
        # Obtaining the member '__getitem__' of a type (line 345)
        getitem___8582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 18), Q_8581, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 345)
        subscript_call_result_8583 = invoke(stypy.reporting.localization.Localization(__file__, 345, 18), getitem___8582, slice_8580)
        
        # Getting the type of 'b' (line 345)
        b_8584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 16), 'b')
        # Obtaining the member '__getitem__' of a type (line 345)
        getitem___8585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 16), b_8584, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 345)
        subscript_call_result_8586 = invoke(stypy.reporting.localization.Localization(__file__, 345, 16), getitem___8585, subscript_call_result_8583)
        
        # Getting the type of 'nclusters' (line 345)
        nclusters_8587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 35), 'nclusters')
        # Applying the binary operator '%=' (line 345)
        result_imod_8588 = python_operator(stypy.reporting.localization.Localization(__file__, 345, 16), '%=', subscript_call_result_8586, nclusters_8587)
        # Getting the type of 'b' (line 345)
        b_8589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 16), 'b')
        
        # Obtaining the type of the subscript
        int_8590 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 345, 20), 'int')
        # Getting the type of 'nerrors' (line 345)
        nerrors_8591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 22), 'nerrors')
        slice_8592 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 345, 18), int_8590, nerrors_8591, None)
        # Getting the type of 'Q' (line 345)
        Q_8593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 18), 'Q')
        # Obtaining the member '__getitem__' of a type (line 345)
        getitem___8594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 18), Q_8593, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 345)
        subscript_call_result_8595 = invoke(stypy.reporting.localization.Localization(__file__, 345, 18), getitem___8594, slice_8592)
        
        # Storing an element on a container (line 345)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 345, 16), b_8589, (subscript_call_result_8595, result_imod_8588))
        
        # SSA join for if statement (line 342)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to assert_(...): (line 346)
        # Processing the call arguments (line 346)
        
        
        # Call to is_isomorphic(...): (line 346)
        # Processing the call arguments (line 346)
        # Getting the type of 'a' (line 346)
        a_8598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 34), 'a', False)
        # Getting the type of 'b' (line 346)
        b_8599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 37), 'b', False)
        # Processing the call keyword arguments (line 346)
        kwargs_8600 = {}
        # Getting the type of 'is_isomorphic' (line 346)
        is_isomorphic_8597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 20), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 346)
        is_isomorphic_call_result_8601 = invoke(stypy.reporting.localization.Localization(__file__, 346, 20), is_isomorphic_8597, *[a_8598, b_8599], **kwargs_8600)
        
        
        # Getting the type of 'noniso' (line 346)
        noniso_8602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 48), 'noniso', False)
        # Applying the 'not' unary operator (line 346)
        result_not__8603 = python_operator(stypy.reporting.localization.Localization(__file__, 346, 44), 'not', noniso_8602)
        
        # Applying the binary operator '==' (line 346)
        result_eq_8604 = python_operator(stypy.reporting.localization.Localization(__file__, 346, 20), '==', is_isomorphic_call_result_8601, result_not__8603)
        
        # Processing the call keyword arguments (line 346)
        kwargs_8605 = {}
        # Getting the type of 'assert_' (line 346)
        assert__8596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 346)
        assert__call_result_8606 = invoke(stypy.reporting.localization.Localization(__file__, 346, 12), assert__8596, *[result_eq_8604], **kwargs_8605)
        
        
        # Call to assert_(...): (line 347)
        # Processing the call arguments (line 347)
        
        
        # Call to is_isomorphic(...): (line 347)
        # Processing the call arguments (line 347)
        # Getting the type of 'b' (line 347)
        b_8609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 34), 'b', False)
        # Getting the type of 'a' (line 347)
        a_8610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 37), 'a', False)
        # Processing the call keyword arguments (line 347)
        kwargs_8611 = {}
        # Getting the type of 'is_isomorphic' (line 347)
        is_isomorphic_8608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 20), 'is_isomorphic', False)
        # Calling is_isomorphic(args, kwargs) (line 347)
        is_isomorphic_call_result_8612 = invoke(stypy.reporting.localization.Localization(__file__, 347, 20), is_isomorphic_8608, *[b_8609, a_8610], **kwargs_8611)
        
        
        # Getting the type of 'noniso' (line 347)
        noniso_8613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 48), 'noniso', False)
        # Applying the 'not' unary operator (line 347)
        result_not__8614 = python_operator(stypy.reporting.localization.Localization(__file__, 347, 44), 'not', noniso_8613)
        
        # Applying the binary operator '==' (line 347)
        result_eq_8615 = python_operator(stypy.reporting.localization.Localization(__file__, 347, 20), '==', is_isomorphic_call_result_8612, result_not__8614)
        
        # Processing the call keyword arguments (line 347)
        kwargs_8616 = {}
        # Getting the type of 'assert_' (line 347)
        assert__8607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 347)
        assert__call_result_8617 = invoke(stypy.reporting.localization.Localization(__file__, 347, 12), assert__8607, *[result_eq_8615], **kwargs_8616)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'help_is_isomorphic_randperm(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'help_is_isomorphic_randperm' in the type store
        # Getting the type of 'stypy_return_type' (line 335)
        stypy_return_type_8618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8618)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'help_is_isomorphic_randperm'
        return stypy_return_type_8618


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 276, 0, False)
        # Assigning a type to the variable 'self' (line 277)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsIsomorphic.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestIsIsomorphic' (line 276)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 0), 'TestIsIsomorphic', TestIsIsomorphic)
# Declaration of the 'TestIsValidLinkage' class

class TestIsValidLinkage(object, ):

    @norecursion
    def test_is_valid_linkage_various_size(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_linkage_various_size'
        module_type_store = module_type_store.open_function_context('test_is_valid_linkage_various_size', 351, 4, False)
        # Assigning a type to the variable 'self' (line 352)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_function_name', 'TestIsValidLinkage.test_is_valid_linkage_various_size')
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidLinkage.test_is_valid_linkage_various_size.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.test_is_valid_linkage_various_size', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_linkage_various_size', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_linkage_various_size(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 352)
        list_8619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 352)
        # Adding element type (line 352)
        
        # Obtaining an instance of the builtin type 'tuple' (line 352)
        tuple_8620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 352)
        # Adding element type (line 352)
        int_8621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 35), tuple_8620, int_8621)
        # Adding element type (line 352)
        int_8622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 35), tuple_8620, int_8622)
        # Adding element type (line 352)
        # Getting the type of 'False' (line 352)
        False_8623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 41), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 35), tuple_8620, False_8623)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 33), list_8619, tuple_8620)
        # Adding element type (line 352)
        
        # Obtaining an instance of the builtin type 'tuple' (line 352)
        tuple_8624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 352)
        # Adding element type (line 352)
        int_8625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 50), tuple_8624, int_8625)
        # Adding element type (line 352)
        int_8626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 50), tuple_8624, int_8626)
        # Adding element type (line 352)
        # Getting the type of 'False' (line 352)
        False_8627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 56), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 50), tuple_8624, False_8627)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 33), list_8619, tuple_8624)
        # Adding element type (line 352)
        
        # Obtaining an instance of the builtin type 'tuple' (line 353)
        tuple_8628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 353)
        # Adding element type (line 353)
        int_8629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 35), tuple_8628, int_8629)
        # Adding element type (line 353)
        int_8630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 35), tuple_8628, int_8630)
        # Adding element type (line 353)
        # Getting the type of 'True' (line 353)
        True_8631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 41), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 35), tuple_8628, True_8631)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 33), list_8619, tuple_8628)
        # Adding element type (line 352)
        
        # Obtaining an instance of the builtin type 'tuple' (line 353)
        tuple_8632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 353)
        # Adding element type (line 353)
        int_8633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 49), tuple_8632, int_8633)
        # Adding element type (line 353)
        int_8634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 49), tuple_8632, int_8634)
        # Adding element type (line 353)
        # Getting the type of 'True' (line 353)
        True_8635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 55), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 353, 49), tuple_8632, True_8635)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 33), list_8619, tuple_8632)
        
        # Testing the type of a for loop iterable (line 352)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 352, 8), list_8619)
        # Getting the type of the for loop variable (line 352)
        for_loop_var_8636 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 352, 8), list_8619)
        # Assigning a type to the variable 'nrow' (line 352)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 8), 'nrow', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 8), for_loop_var_8636))
        # Assigning a type to the variable 'ncol' (line 352)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 8), 'ncol', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 8), for_loop_var_8636))
        # Assigning a type to the variable 'valid' (line 352)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 8), 'valid', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 352, 8), for_loop_var_8636))
        # SSA begins for a for statement (line 352)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_is_valid_linkage_various_size(...): (line 354)
        # Processing the call arguments (line 354)
        # Getting the type of 'nrow' (line 354)
        nrow_8639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 53), 'nrow', False)
        # Getting the type of 'ncol' (line 354)
        ncol_8640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 59), 'ncol', False)
        # Getting the type of 'valid' (line 354)
        valid_8641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 65), 'valid', False)
        # Processing the call keyword arguments (line 354)
        kwargs_8642 = {}
        # Getting the type of 'self' (line 354)
        self_8637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 12), 'self', False)
        # Obtaining the member 'check_is_valid_linkage_various_size' of a type (line 354)
        check_is_valid_linkage_various_size_8638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 12), self_8637, 'check_is_valid_linkage_various_size')
        # Calling check_is_valid_linkage_various_size(args, kwargs) (line 354)
        check_is_valid_linkage_various_size_call_result_8643 = invoke(stypy.reporting.localization.Localization(__file__, 354, 12), check_is_valid_linkage_various_size_8638, *[nrow_8639, ncol_8640, valid_8641], **kwargs_8642)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_linkage_various_size(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_linkage_various_size' in the type store
        # Getting the type of 'stypy_return_type' (line 351)
        stypy_return_type_8644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8644)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_linkage_various_size'
        return stypy_return_type_8644


    @norecursion
    def check_is_valid_linkage_various_size(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_is_valid_linkage_various_size'
        module_type_store = module_type_store.open_function_context('check_is_valid_linkage_various_size', 356, 4, False)
        # Assigning a type to the variable 'self' (line 357)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_function_name', 'TestIsValidLinkage.check_is_valid_linkage_various_size')
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_param_names_list', ['nrow', 'ncol', 'valid'])
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidLinkage.check_is_valid_linkage_various_size.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.check_is_valid_linkage_various_size', ['nrow', 'ncol', 'valid'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_is_valid_linkage_various_size', localization, ['nrow', 'ncol', 'valid'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_is_valid_linkage_various_size(...)' code ##################

        
        # Assigning a Call to a Name (line 358):
        
        # Assigning a Call to a Name (line 358):
        
        # Call to asarray(...): (line 358)
        # Processing the call arguments (line 358)
        
        # Obtaining an instance of the builtin type 'list' (line 358)
        list_8647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 358)
        # Adding element type (line 358)
        
        # Obtaining an instance of the builtin type 'list' (line 358)
        list_8648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 358)
        # Adding element type (line 358)
        int_8649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 24), list_8648, int_8649)
        # Adding element type (line 358)
        int_8650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 24), list_8648, int_8650)
        # Adding element type (line 358)
        float_8651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 24), list_8648, float_8651)
        # Adding element type (line 358)
        int_8652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 24), list_8648, int_8652)
        # Adding element type (line 358)
        int_8653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 24), list_8648, int_8653)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 23), list_8647, list_8648)
        # Adding element type (line 358)
        
        # Obtaining an instance of the builtin type 'list' (line 359)
        list_8654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 359)
        # Adding element type (line 359)
        int_8655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 359, 24), list_8654, int_8655)
        # Adding element type (line 359)
        int_8656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 359, 24), list_8654, int_8656)
        # Adding element type (line 359)
        float_8657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 359, 24), list_8654, float_8657)
        # Adding element type (line 359)
        int_8658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 359, 24), list_8654, int_8658)
        # Adding element type (line 359)
        int_8659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 359, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 359, 24), list_8654, int_8659)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 23), list_8647, list_8654)
        
        # Processing the call keyword arguments (line 358)
        # Getting the type of 'np' (line 359)
        np_8660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 359, 50), 'np', False)
        # Obtaining the member 'double' of a type (line 359)
        double_8661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 359, 50), np_8660, 'double')
        keyword_8662 = double_8661
        kwargs_8663 = {'dtype': keyword_8662}
        # Getting the type of 'np' (line 358)
        np_8645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 358)
        asarray_8646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 12), np_8645, 'asarray')
        # Calling asarray(args, kwargs) (line 358)
        asarray_call_result_8664 = invoke(stypy.reporting.localization.Localization(__file__, 358, 12), asarray_8646, *[list_8647], **kwargs_8663)
        
        # Assigning a type to the variable 'Z' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 8), 'Z', asarray_call_result_8664)
        
        # Assigning a Subscript to a Name (line 360):
        
        # Assigning a Subscript to a Name (line 360):
        
        # Obtaining the type of the subscript
        # Getting the type of 'nrow' (line 360)
        nrow_8665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 15), 'nrow')
        slice_8666 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 360, 12), None, nrow_8665, None)
        # Getting the type of 'ncol' (line 360)
        ncol_8667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 22), 'ncol')
        slice_8668 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 360, 12), None, ncol_8667, None)
        # Getting the type of 'Z' (line 360)
        Z_8669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 12), 'Z')
        # Obtaining the member '__getitem__' of a type (line 360)
        getitem___8670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 12), Z_8669, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 360)
        subscript_call_result_8671 = invoke(stypy.reporting.localization.Localization(__file__, 360, 12), getitem___8670, (slice_8666, slice_8668))
        
        # Assigning a type to the variable 'Z' (line 360)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 360, 8), 'Z', subscript_call_result_8671)
        
        # Call to assert_(...): (line 361)
        # Processing the call arguments (line 361)
        
        
        # Call to is_valid_linkage(...): (line 361)
        # Processing the call arguments (line 361)
        # Getting the type of 'Z' (line 361)
        Z_8674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 33), 'Z', False)
        # Processing the call keyword arguments (line 361)
        kwargs_8675 = {}
        # Getting the type of 'is_valid_linkage' (line 361)
        is_valid_linkage_8673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 16), 'is_valid_linkage', False)
        # Calling is_valid_linkage(args, kwargs) (line 361)
        is_valid_linkage_call_result_8676 = invoke(stypy.reporting.localization.Localization(__file__, 361, 16), is_valid_linkage_8673, *[Z_8674], **kwargs_8675)
        
        # Getting the type of 'valid' (line 361)
        valid_8677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 39), 'valid', False)
        # Applying the binary operator '==' (line 361)
        result_eq_8678 = python_operator(stypy.reporting.localization.Localization(__file__, 361, 16), '==', is_valid_linkage_call_result_8676, valid_8677)
        
        # Processing the call keyword arguments (line 361)
        kwargs_8679 = {}
        # Getting the type of 'assert_' (line 361)
        assert__8672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 361)
        assert__call_result_8680 = invoke(stypy.reporting.localization.Localization(__file__, 361, 8), assert__8672, *[result_eq_8678], **kwargs_8679)
        
        
        
        # Getting the type of 'valid' (line 362)
        valid_8681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 15), 'valid')
        # Applying the 'not' unary operator (line 362)
        result_not__8682 = python_operator(stypy.reporting.localization.Localization(__file__, 362, 11), 'not', valid_8681)
        
        # Testing the type of an if condition (line 362)
        if_condition_8683 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 362, 8), result_not__8682)
        # Assigning a type to the variable 'if_condition_8683' (line 362)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'if_condition_8683', if_condition_8683)
        # SSA begins for if statement (line 362)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to assert_raises(...): (line 363)
        # Processing the call arguments (line 363)
        # Getting the type of 'ValueError' (line 363)
        ValueError_8685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 26), 'ValueError', False)
        # Getting the type of 'is_valid_linkage' (line 363)
        is_valid_linkage_8686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 38), 'is_valid_linkage', False)
        # Getting the type of 'Z' (line 363)
        Z_8687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 56), 'Z', False)
        # Processing the call keyword arguments (line 363)
        # Getting the type of 'True' (line 363)
        True_8688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 65), 'True', False)
        keyword_8689 = True_8688
        kwargs_8690 = {'throw': keyword_8689}
        # Getting the type of 'assert_raises' (line 363)
        assert_raises_8684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 363)
        assert_raises_call_result_8691 = invoke(stypy.reporting.localization.Localization(__file__, 363, 12), assert_raises_8684, *[ValueError_8685, is_valid_linkage_8686, Z_8687], **kwargs_8690)
        
        # SSA join for if statement (line 362)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'check_is_valid_linkage_various_size(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_is_valid_linkage_various_size' in the type store
        # Getting the type of 'stypy_return_type' (line 356)
        stypy_return_type_8692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8692)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_is_valid_linkage_various_size'
        return stypy_return_type_8692


    @norecursion
    def test_is_valid_linkage_int_type(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_linkage_int_type'
        module_type_store = module_type_store.open_function_context('test_is_valid_linkage_int_type', 365, 4, False)
        # Assigning a type to the variable 'self' (line 366)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_function_name', 'TestIsValidLinkage.test_is_valid_linkage_int_type')
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidLinkage.test_is_valid_linkage_int_type.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.test_is_valid_linkage_int_type', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_linkage_int_type', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_linkage_int_type(...)' code ##################

        
        # Assigning a Call to a Name (line 367):
        
        # Assigning a Call to a Name (line 367):
        
        # Call to asarray(...): (line 367)
        # Processing the call arguments (line 367)
        
        # Obtaining an instance of the builtin type 'list' (line 367)
        list_8695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 367)
        # Adding element type (line 367)
        
        # Obtaining an instance of the builtin type 'list' (line 367)
        list_8696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 367)
        # Adding element type (line 367)
        int_8697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 367, 24), list_8696, int_8697)
        # Adding element type (line 367)
        int_8698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 367, 24), list_8696, int_8698)
        # Adding element type (line 367)
        float_8699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 367, 24), list_8696, float_8699)
        # Adding element type (line 367)
        int_8700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 367, 24), list_8696, int_8700)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 367, 23), list_8695, list_8696)
        # Adding element type (line 367)
        
        # Obtaining an instance of the builtin type 'list' (line 368)
        list_8701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 368)
        # Adding element type (line 368)
        int_8702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 368, 24), list_8701, int_8702)
        # Adding element type (line 368)
        int_8703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 368, 24), list_8701, int_8703)
        # Adding element type (line 368)
        float_8704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 368, 24), list_8701, float_8704)
        # Adding element type (line 368)
        int_8705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 368, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 368, 24), list_8701, int_8705)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 367, 23), list_8695, list_8701)
        
        # Processing the call keyword arguments (line 367)
        # Getting the type of 'int' (line 368)
        int_8706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 47), 'int', False)
        keyword_8707 = int_8706
        kwargs_8708 = {'dtype': keyword_8707}
        # Getting the type of 'np' (line 367)
        np_8693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 367, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 367)
        asarray_8694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 367, 12), np_8693, 'asarray')
        # Calling asarray(args, kwargs) (line 367)
        asarray_call_result_8709 = invoke(stypy.reporting.localization.Localization(__file__, 367, 12), asarray_8694, *[list_8695], **kwargs_8708)
        
        # Assigning a type to the variable 'Z' (line 367)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 367, 8), 'Z', asarray_call_result_8709)
        
        # Call to assert_(...): (line 369)
        # Processing the call arguments (line 369)
        
        
        # Call to is_valid_linkage(...): (line 369)
        # Processing the call arguments (line 369)
        # Getting the type of 'Z' (line 369)
        Z_8712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 33), 'Z', False)
        # Processing the call keyword arguments (line 369)
        kwargs_8713 = {}
        # Getting the type of 'is_valid_linkage' (line 369)
        is_valid_linkage_8711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 16), 'is_valid_linkage', False)
        # Calling is_valid_linkage(args, kwargs) (line 369)
        is_valid_linkage_call_result_8714 = invoke(stypy.reporting.localization.Localization(__file__, 369, 16), is_valid_linkage_8711, *[Z_8712], **kwargs_8713)
        
        # Getting the type of 'False' (line 369)
        False_8715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 39), 'False', False)
        # Applying the binary operator '==' (line 369)
        result_eq_8716 = python_operator(stypy.reporting.localization.Localization(__file__, 369, 16), '==', is_valid_linkage_call_result_8714, False_8715)
        
        # Processing the call keyword arguments (line 369)
        kwargs_8717 = {}
        # Getting the type of 'assert_' (line 369)
        assert__8710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 369)
        assert__call_result_8718 = invoke(stypy.reporting.localization.Localization(__file__, 369, 8), assert__8710, *[result_eq_8716], **kwargs_8717)
        
        
        # Call to assert_raises(...): (line 370)
        # Processing the call arguments (line 370)
        # Getting the type of 'TypeError' (line 370)
        TypeError_8720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 22), 'TypeError', False)
        # Getting the type of 'is_valid_linkage' (line 370)
        is_valid_linkage_8721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 33), 'is_valid_linkage', False)
        # Getting the type of 'Z' (line 370)
        Z_8722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 51), 'Z', False)
        # Processing the call keyword arguments (line 370)
        # Getting the type of 'True' (line 370)
        True_8723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 60), 'True', False)
        keyword_8724 = True_8723
        kwargs_8725 = {'throw': keyword_8724}
        # Getting the type of 'assert_raises' (line 370)
        assert_raises_8719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 370)
        assert_raises_call_result_8726 = invoke(stypy.reporting.localization.Localization(__file__, 370, 8), assert_raises_8719, *[TypeError_8720, is_valid_linkage_8721, Z_8722], **kwargs_8725)
        
        
        # ################# End of 'test_is_valid_linkage_int_type(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_linkage_int_type' in the type store
        # Getting the type of 'stypy_return_type' (line 365)
        stypy_return_type_8727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 365, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8727)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_linkage_int_type'
        return stypy_return_type_8727


    @norecursion
    def test_is_valid_linkage_empty(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_linkage_empty'
        module_type_store = module_type_store.open_function_context('test_is_valid_linkage_empty', 372, 4, False)
        # Assigning a type to the variable 'self' (line 373)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_function_name', 'TestIsValidLinkage.test_is_valid_linkage_empty')
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidLinkage.test_is_valid_linkage_empty.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.test_is_valid_linkage_empty', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_linkage_empty', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_linkage_empty(...)' code ##################

        
        # Assigning a Call to a Name (line 374):
        
        # Assigning a Call to a Name (line 374):
        
        # Call to zeros(...): (line 374)
        # Processing the call arguments (line 374)
        
        # Obtaining an instance of the builtin type 'tuple' (line 374)
        tuple_8730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 374)
        # Adding element type (line 374)
        int_8731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 374, 22), tuple_8730, int_8731)
        # Adding element type (line 374)
        int_8732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 374, 22), tuple_8730, int_8732)
        
        # Processing the call keyword arguments (line 374)
        # Getting the type of 'np' (line 374)
        np_8733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 35), 'np', False)
        # Obtaining the member 'double' of a type (line 374)
        double_8734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 35), np_8733, 'double')
        keyword_8735 = double_8734
        kwargs_8736 = {'dtype': keyword_8735}
        # Getting the type of 'np' (line 374)
        np_8728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 374)
        zeros_8729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 374, 12), np_8728, 'zeros')
        # Calling zeros(args, kwargs) (line 374)
        zeros_call_result_8737 = invoke(stypy.reporting.localization.Localization(__file__, 374, 12), zeros_8729, *[tuple_8730], **kwargs_8736)
        
        # Assigning a type to the variable 'Z' (line 374)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 8), 'Z', zeros_call_result_8737)
        
        # Call to assert_(...): (line 375)
        # Processing the call arguments (line 375)
        
        
        # Call to is_valid_linkage(...): (line 375)
        # Processing the call arguments (line 375)
        # Getting the type of 'Z' (line 375)
        Z_8740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 33), 'Z', False)
        # Processing the call keyword arguments (line 375)
        kwargs_8741 = {}
        # Getting the type of 'is_valid_linkage' (line 375)
        is_valid_linkage_8739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 16), 'is_valid_linkage', False)
        # Calling is_valid_linkage(args, kwargs) (line 375)
        is_valid_linkage_call_result_8742 = invoke(stypy.reporting.localization.Localization(__file__, 375, 16), is_valid_linkage_8739, *[Z_8740], **kwargs_8741)
        
        # Getting the type of 'False' (line 375)
        False_8743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 39), 'False', False)
        # Applying the binary operator '==' (line 375)
        result_eq_8744 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 16), '==', is_valid_linkage_call_result_8742, False_8743)
        
        # Processing the call keyword arguments (line 375)
        kwargs_8745 = {}
        # Getting the type of 'assert_' (line 375)
        assert__8738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 375)
        assert__call_result_8746 = invoke(stypy.reporting.localization.Localization(__file__, 375, 8), assert__8738, *[result_eq_8744], **kwargs_8745)
        
        
        # Call to assert_raises(...): (line 376)
        # Processing the call arguments (line 376)
        # Getting the type of 'ValueError' (line 376)
        ValueError_8748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 22), 'ValueError', False)
        # Getting the type of 'is_valid_linkage' (line 376)
        is_valid_linkage_8749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 34), 'is_valid_linkage', False)
        # Getting the type of 'Z' (line 376)
        Z_8750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 52), 'Z', False)
        # Processing the call keyword arguments (line 376)
        # Getting the type of 'True' (line 376)
        True_8751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 61), 'True', False)
        keyword_8752 = True_8751
        kwargs_8753 = {'throw': keyword_8752}
        # Getting the type of 'assert_raises' (line 376)
        assert_raises_8747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 376, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 376)
        assert_raises_call_result_8754 = invoke(stypy.reporting.localization.Localization(__file__, 376, 8), assert_raises_8747, *[ValueError_8748, is_valid_linkage_8749, Z_8750], **kwargs_8753)
        
        
        # ################# End of 'test_is_valid_linkage_empty(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_linkage_empty' in the type store
        # Getting the type of 'stypy_return_type' (line 372)
        stypy_return_type_8755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8755)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_linkage_empty'
        return stypy_return_type_8755


    @norecursion
    def test_is_valid_linkage_4_and_up(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_linkage_4_and_up'
        module_type_store = module_type_store.open_function_context('test_is_valid_linkage_4_and_up', 378, 4, False)
        # Assigning a type to the variable 'self' (line 379)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_function_name', 'TestIsValidLinkage.test_is_valid_linkage_4_and_up')
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.test_is_valid_linkage_4_and_up', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_linkage_4_and_up', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_linkage_4_and_up(...)' code ##################

        
        
        # Call to xrange(...): (line 381)
        # Processing the call arguments (line 381)
        int_8757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 24), 'int')
        int_8758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 27), 'int')
        int_8759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 381, 31), 'int')
        # Processing the call keyword arguments (line 381)
        kwargs_8760 = {}
        # Getting the type of 'xrange' (line 381)
        xrange_8756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 381)
        xrange_call_result_8761 = invoke(stypy.reporting.localization.Localization(__file__, 381, 17), xrange_8756, *[int_8757, int_8758, int_8759], **kwargs_8760)
        
        # Testing the type of a for loop iterable (line 381)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 381, 8), xrange_call_result_8761)
        # Getting the type of the for loop variable (line 381)
        for_loop_var_8762 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 381, 8), xrange_call_result_8761)
        # Assigning a type to the variable 'i' (line 381)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 8), 'i', for_loop_var_8762)
        # SSA begins for a for statement (line 381)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 382):
        
        # Assigning a Call to a Name (line 382):
        
        # Call to rand(...): (line 382)
        # Processing the call arguments (line 382)
        # Getting the type of 'i' (line 382)
        i_8766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 31), 'i', False)
        # Getting the type of 'i' (line 382)
        i_8767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 34), 'i', False)
        int_8768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, 36), 'int')
        # Applying the binary operator '-' (line 382)
        result_sub_8769 = python_operator(stypy.reporting.localization.Localization(__file__, 382, 34), '-', i_8767, int_8768)
        
        # Applying the binary operator '*' (line 382)
        result_mul_8770 = python_operator(stypy.reporting.localization.Localization(__file__, 382, 31), '*', i_8766, result_sub_8769)
        
        int_8771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 382, 40), 'int')
        # Applying the binary operator '//' (line 382)
        result_floordiv_8772 = python_operator(stypy.reporting.localization.Localization(__file__, 382, 38), '//', result_mul_8770, int_8771)
        
        # Processing the call keyword arguments (line 382)
        kwargs_8773 = {}
        # Getting the type of 'np' (line 382)
        np_8763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 382)
        random_8764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 382, 16), np_8763, 'random')
        # Obtaining the member 'rand' of a type (line 382)
        rand_8765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 382, 16), random_8764, 'rand')
        # Calling rand(args, kwargs) (line 382)
        rand_call_result_8774 = invoke(stypy.reporting.localization.Localization(__file__, 382, 16), rand_8765, *[result_floordiv_8772], **kwargs_8773)
        
        # Assigning a type to the variable 'y' (line 382)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 382, 12), 'y', rand_call_result_8774)
        
        # Assigning a Call to a Name (line 383):
        
        # Assigning a Call to a Name (line 383):
        
        # Call to linkage(...): (line 383)
        # Processing the call arguments (line 383)
        # Getting the type of 'y' (line 383)
        y_8776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 24), 'y', False)
        # Processing the call keyword arguments (line 383)
        kwargs_8777 = {}
        # Getting the type of 'linkage' (line 383)
        linkage_8775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 383)
        linkage_call_result_8778 = invoke(stypy.reporting.localization.Localization(__file__, 383, 16), linkage_8775, *[y_8776], **kwargs_8777)
        
        # Assigning a type to the variable 'Z' (line 383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 12), 'Z', linkage_call_result_8778)
        
        # Call to assert_(...): (line 384)
        # Processing the call arguments (line 384)
        
        
        # Call to is_valid_linkage(...): (line 384)
        # Processing the call arguments (line 384)
        # Getting the type of 'Z' (line 384)
        Z_8781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 37), 'Z', False)
        # Processing the call keyword arguments (line 384)
        kwargs_8782 = {}
        # Getting the type of 'is_valid_linkage' (line 384)
        is_valid_linkage_8780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 20), 'is_valid_linkage', False)
        # Calling is_valid_linkage(args, kwargs) (line 384)
        is_valid_linkage_call_result_8783 = invoke(stypy.reporting.localization.Localization(__file__, 384, 20), is_valid_linkage_8780, *[Z_8781], **kwargs_8782)
        
        # Getting the type of 'True' (line 384)
        True_8784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 43), 'True', False)
        # Applying the binary operator '==' (line 384)
        result_eq_8785 = python_operator(stypy.reporting.localization.Localization(__file__, 384, 20), '==', is_valid_linkage_call_result_8783, True_8784)
        
        # Processing the call keyword arguments (line 384)
        kwargs_8786 = {}
        # Getting the type of 'assert_' (line 384)
        assert__8779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 384)
        assert__call_result_8787 = invoke(stypy.reporting.localization.Localization(__file__, 384, 12), assert__8779, *[result_eq_8785], **kwargs_8786)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_linkage_4_and_up(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_linkage_4_and_up' in the type store
        # Getting the type of 'stypy_return_type' (line 378)
        stypy_return_type_8788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8788)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_linkage_4_and_up'
        return stypy_return_type_8788


    @norecursion
    def test_is_valid_linkage_4_and_up_neg_index_left(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_linkage_4_and_up_neg_index_left'
        module_type_store = module_type_store.open_function_context('test_is_valid_linkage_4_and_up_neg_index_left', 386, 4, False)
        # Assigning a type to the variable 'self' (line 387)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_function_name', 'TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left')
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_left', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_linkage_4_and_up_neg_index_left', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_linkage_4_and_up_neg_index_left(...)' code ##################

        
        
        # Call to xrange(...): (line 389)
        # Processing the call arguments (line 389)
        int_8790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 24), 'int')
        int_8791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 27), 'int')
        int_8792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 31), 'int')
        # Processing the call keyword arguments (line 389)
        kwargs_8793 = {}
        # Getting the type of 'xrange' (line 389)
        xrange_8789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 389)
        xrange_call_result_8794 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), xrange_8789, *[int_8790, int_8791, int_8792], **kwargs_8793)
        
        # Testing the type of a for loop iterable (line 389)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 389, 8), xrange_call_result_8794)
        # Getting the type of the for loop variable (line 389)
        for_loop_var_8795 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 389, 8), xrange_call_result_8794)
        # Assigning a type to the variable 'i' (line 389)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 8), 'i', for_loop_var_8795)
        # SSA begins for a for statement (line 389)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 390):
        
        # Assigning a Call to a Name (line 390):
        
        # Call to rand(...): (line 390)
        # Processing the call arguments (line 390)
        # Getting the type of 'i' (line 390)
        i_8799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 31), 'i', False)
        # Getting the type of 'i' (line 390)
        i_8800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 34), 'i', False)
        int_8801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 36), 'int')
        # Applying the binary operator '-' (line 390)
        result_sub_8802 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 34), '-', i_8800, int_8801)
        
        # Applying the binary operator '*' (line 390)
        result_mul_8803 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 31), '*', i_8799, result_sub_8802)
        
        int_8804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 40), 'int')
        # Applying the binary operator '//' (line 390)
        result_floordiv_8805 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 38), '//', result_mul_8803, int_8804)
        
        # Processing the call keyword arguments (line 390)
        kwargs_8806 = {}
        # Getting the type of 'np' (line 390)
        np_8796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 390)
        random_8797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 16), np_8796, 'random')
        # Obtaining the member 'rand' of a type (line 390)
        rand_8798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 16), random_8797, 'rand')
        # Calling rand(args, kwargs) (line 390)
        rand_call_result_8807 = invoke(stypy.reporting.localization.Localization(__file__, 390, 16), rand_8798, *[result_floordiv_8805], **kwargs_8806)
        
        # Assigning a type to the variable 'y' (line 390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 12), 'y', rand_call_result_8807)
        
        # Assigning a Call to a Name (line 391):
        
        # Assigning a Call to a Name (line 391):
        
        # Call to linkage(...): (line 391)
        # Processing the call arguments (line 391)
        # Getting the type of 'y' (line 391)
        y_8809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 24), 'y', False)
        # Processing the call keyword arguments (line 391)
        kwargs_8810 = {}
        # Getting the type of 'linkage' (line 391)
        linkage_8808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 391, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 391)
        linkage_call_result_8811 = invoke(stypy.reporting.localization.Localization(__file__, 391, 16), linkage_8808, *[y_8809], **kwargs_8810)
        
        # Assigning a type to the variable 'Z' (line 391)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 391, 12), 'Z', linkage_call_result_8811)
        
        # Assigning a Num to a Subscript (line 392):
        
        # Assigning a Num to a Subscript (line 392):
        int_8812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 24), 'int')
        # Getting the type of 'Z' (line 392)
        Z_8813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 12), 'Z')
        
        # Obtaining an instance of the builtin type 'tuple' (line 392)
        tuple_8814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 392)
        # Adding element type (line 392)
        # Getting the type of 'i' (line 392)
        i_8815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 14), 'i')
        int_8816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 17), 'int')
        # Applying the binary operator '//' (line 392)
        result_floordiv_8817 = python_operator(stypy.reporting.localization.Localization(__file__, 392, 14), '//', i_8815, int_8816)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 14), tuple_8814, result_floordiv_8817)
        # Adding element type (line 392)
        int_8818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 14), tuple_8814, int_8818)
        
        # Storing an element on a container (line 392)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 12), Z_8813, (tuple_8814, int_8812))
        
        # Call to assert_(...): (line 393)
        # Processing the call arguments (line 393)
        
        
        # Call to is_valid_linkage(...): (line 393)
        # Processing the call arguments (line 393)
        # Getting the type of 'Z' (line 393)
        Z_8821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 37), 'Z', False)
        # Processing the call keyword arguments (line 393)
        kwargs_8822 = {}
        # Getting the type of 'is_valid_linkage' (line 393)
        is_valid_linkage_8820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 20), 'is_valid_linkage', False)
        # Calling is_valid_linkage(args, kwargs) (line 393)
        is_valid_linkage_call_result_8823 = invoke(stypy.reporting.localization.Localization(__file__, 393, 20), is_valid_linkage_8820, *[Z_8821], **kwargs_8822)
        
        # Getting the type of 'False' (line 393)
        False_8824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 43), 'False', False)
        # Applying the binary operator '==' (line 393)
        result_eq_8825 = python_operator(stypy.reporting.localization.Localization(__file__, 393, 20), '==', is_valid_linkage_call_result_8823, False_8824)
        
        # Processing the call keyword arguments (line 393)
        kwargs_8826 = {}
        # Getting the type of 'assert_' (line 393)
        assert__8819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 393)
        assert__call_result_8827 = invoke(stypy.reporting.localization.Localization(__file__, 393, 12), assert__8819, *[result_eq_8825], **kwargs_8826)
        
        
        # Call to assert_raises(...): (line 394)
        # Processing the call arguments (line 394)
        # Getting the type of 'ValueError' (line 394)
        ValueError_8829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 26), 'ValueError', False)
        # Getting the type of 'is_valid_linkage' (line 394)
        is_valid_linkage_8830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 38), 'is_valid_linkage', False)
        # Getting the type of 'Z' (line 394)
        Z_8831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 56), 'Z', False)
        # Processing the call keyword arguments (line 394)
        # Getting the type of 'True' (line 394)
        True_8832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 65), 'True', False)
        keyword_8833 = True_8832
        kwargs_8834 = {'throw': keyword_8833}
        # Getting the type of 'assert_raises' (line 394)
        assert_raises_8828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 394)
        assert_raises_call_result_8835 = invoke(stypy.reporting.localization.Localization(__file__, 394, 12), assert_raises_8828, *[ValueError_8829, is_valid_linkage_8830, Z_8831], **kwargs_8834)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_linkage_4_and_up_neg_index_left(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_linkage_4_and_up_neg_index_left' in the type store
        # Getting the type of 'stypy_return_type' (line 386)
        stypy_return_type_8836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8836)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_linkage_4_and_up_neg_index_left'
        return stypy_return_type_8836


    @norecursion
    def test_is_valid_linkage_4_and_up_neg_index_right(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_linkage_4_and_up_neg_index_right'
        module_type_store = module_type_store.open_function_context('test_is_valid_linkage_4_and_up_neg_index_right', 396, 4, False)
        # Assigning a type to the variable 'self' (line 397)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 397, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_function_name', 'TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right')
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_index_right', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_linkage_4_and_up_neg_index_right', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_linkage_4_and_up_neg_index_right(...)' code ##################

        
        
        # Call to xrange(...): (line 399)
        # Processing the call arguments (line 399)
        int_8838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 24), 'int')
        int_8839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 27), 'int')
        int_8840 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 31), 'int')
        # Processing the call keyword arguments (line 399)
        kwargs_8841 = {}
        # Getting the type of 'xrange' (line 399)
        xrange_8837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 399)
        xrange_call_result_8842 = invoke(stypy.reporting.localization.Localization(__file__, 399, 17), xrange_8837, *[int_8838, int_8839, int_8840], **kwargs_8841)
        
        # Testing the type of a for loop iterable (line 399)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 399, 8), xrange_call_result_8842)
        # Getting the type of the for loop variable (line 399)
        for_loop_var_8843 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 399, 8), xrange_call_result_8842)
        # Assigning a type to the variable 'i' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 8), 'i', for_loop_var_8843)
        # SSA begins for a for statement (line 399)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 400):
        
        # Assigning a Call to a Name (line 400):
        
        # Call to rand(...): (line 400)
        # Processing the call arguments (line 400)
        # Getting the type of 'i' (line 400)
        i_8847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 31), 'i', False)
        # Getting the type of 'i' (line 400)
        i_8848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 34), 'i', False)
        int_8849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 36), 'int')
        # Applying the binary operator '-' (line 400)
        result_sub_8850 = python_operator(stypy.reporting.localization.Localization(__file__, 400, 34), '-', i_8848, int_8849)
        
        # Applying the binary operator '*' (line 400)
        result_mul_8851 = python_operator(stypy.reporting.localization.Localization(__file__, 400, 31), '*', i_8847, result_sub_8850)
        
        int_8852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 40), 'int')
        # Applying the binary operator '//' (line 400)
        result_floordiv_8853 = python_operator(stypy.reporting.localization.Localization(__file__, 400, 38), '//', result_mul_8851, int_8852)
        
        # Processing the call keyword arguments (line 400)
        kwargs_8854 = {}
        # Getting the type of 'np' (line 400)
        np_8844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 400, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 400)
        random_8845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 16), np_8844, 'random')
        # Obtaining the member 'rand' of a type (line 400)
        rand_8846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 400, 16), random_8845, 'rand')
        # Calling rand(args, kwargs) (line 400)
        rand_call_result_8855 = invoke(stypy.reporting.localization.Localization(__file__, 400, 16), rand_8846, *[result_floordiv_8853], **kwargs_8854)
        
        # Assigning a type to the variable 'y' (line 400)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 400, 12), 'y', rand_call_result_8855)
        
        # Assigning a Call to a Name (line 401):
        
        # Assigning a Call to a Name (line 401):
        
        # Call to linkage(...): (line 401)
        # Processing the call arguments (line 401)
        # Getting the type of 'y' (line 401)
        y_8857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 24), 'y', False)
        # Processing the call keyword arguments (line 401)
        kwargs_8858 = {}
        # Getting the type of 'linkage' (line 401)
        linkage_8856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 401)
        linkage_call_result_8859 = invoke(stypy.reporting.localization.Localization(__file__, 401, 16), linkage_8856, *[y_8857], **kwargs_8858)
        
        # Assigning a type to the variable 'Z' (line 401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 12), 'Z', linkage_call_result_8859)
        
        # Assigning a Num to a Subscript (line 402):
        
        # Assigning a Num to a Subscript (line 402):
        int_8860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 24), 'int')
        # Getting the type of 'Z' (line 402)
        Z_8861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 12), 'Z')
        
        # Obtaining an instance of the builtin type 'tuple' (line 402)
        tuple_8862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 402)
        # Adding element type (line 402)
        # Getting the type of 'i' (line 402)
        i_8863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 14), 'i')
        int_8864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 17), 'int')
        # Applying the binary operator '//' (line 402)
        result_floordiv_8865 = python_operator(stypy.reporting.localization.Localization(__file__, 402, 14), '//', i_8863, int_8864)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 402, 14), tuple_8862, result_floordiv_8865)
        # Adding element type (line 402)
        int_8866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 402, 14), tuple_8862, int_8866)
        
        # Storing an element on a container (line 402)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 402, 12), Z_8861, (tuple_8862, int_8860))
        
        # Call to assert_(...): (line 403)
        # Processing the call arguments (line 403)
        
        
        # Call to is_valid_linkage(...): (line 403)
        # Processing the call arguments (line 403)
        # Getting the type of 'Z' (line 403)
        Z_8869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 37), 'Z', False)
        # Processing the call keyword arguments (line 403)
        kwargs_8870 = {}
        # Getting the type of 'is_valid_linkage' (line 403)
        is_valid_linkage_8868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 20), 'is_valid_linkage', False)
        # Calling is_valid_linkage(args, kwargs) (line 403)
        is_valid_linkage_call_result_8871 = invoke(stypy.reporting.localization.Localization(__file__, 403, 20), is_valid_linkage_8868, *[Z_8869], **kwargs_8870)
        
        # Getting the type of 'False' (line 403)
        False_8872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 43), 'False', False)
        # Applying the binary operator '==' (line 403)
        result_eq_8873 = python_operator(stypy.reporting.localization.Localization(__file__, 403, 20), '==', is_valid_linkage_call_result_8871, False_8872)
        
        # Processing the call keyword arguments (line 403)
        kwargs_8874 = {}
        # Getting the type of 'assert_' (line 403)
        assert__8867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 403)
        assert__call_result_8875 = invoke(stypy.reporting.localization.Localization(__file__, 403, 12), assert__8867, *[result_eq_8873], **kwargs_8874)
        
        
        # Call to assert_raises(...): (line 404)
        # Processing the call arguments (line 404)
        # Getting the type of 'ValueError' (line 404)
        ValueError_8877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 26), 'ValueError', False)
        # Getting the type of 'is_valid_linkage' (line 404)
        is_valid_linkage_8878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 38), 'is_valid_linkage', False)
        # Getting the type of 'Z' (line 404)
        Z_8879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 56), 'Z', False)
        # Processing the call keyword arguments (line 404)
        # Getting the type of 'True' (line 404)
        True_8880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 65), 'True', False)
        keyword_8881 = True_8880
        kwargs_8882 = {'throw': keyword_8881}
        # Getting the type of 'assert_raises' (line 404)
        assert_raises_8876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 404)
        assert_raises_call_result_8883 = invoke(stypy.reporting.localization.Localization(__file__, 404, 12), assert_raises_8876, *[ValueError_8877, is_valid_linkage_8878, Z_8879], **kwargs_8882)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_linkage_4_and_up_neg_index_right(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_linkage_4_and_up_neg_index_right' in the type store
        # Getting the type of 'stypy_return_type' (line 396)
        stypy_return_type_8884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8884)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_linkage_4_and_up_neg_index_right'
        return stypy_return_type_8884


    @norecursion
    def test_is_valid_linkage_4_and_up_neg_dist(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_linkage_4_and_up_neg_dist'
        module_type_store = module_type_store.open_function_context('test_is_valid_linkage_4_and_up_neg_dist', 406, 4, False)
        # Assigning a type to the variable 'self' (line 407)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 407, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_function_name', 'TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist')
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_dist', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_linkage_4_and_up_neg_dist', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_linkage_4_and_up_neg_dist(...)' code ##################

        
        
        # Call to xrange(...): (line 409)
        # Processing the call arguments (line 409)
        int_8886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 24), 'int')
        int_8887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 27), 'int')
        int_8888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 409, 31), 'int')
        # Processing the call keyword arguments (line 409)
        kwargs_8889 = {}
        # Getting the type of 'xrange' (line 409)
        xrange_8885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 409)
        xrange_call_result_8890 = invoke(stypy.reporting.localization.Localization(__file__, 409, 17), xrange_8885, *[int_8886, int_8887, int_8888], **kwargs_8889)
        
        # Testing the type of a for loop iterable (line 409)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 409, 8), xrange_call_result_8890)
        # Getting the type of the for loop variable (line 409)
        for_loop_var_8891 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 409, 8), xrange_call_result_8890)
        # Assigning a type to the variable 'i' (line 409)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 8), 'i', for_loop_var_8891)
        # SSA begins for a for statement (line 409)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 410):
        
        # Assigning a Call to a Name (line 410):
        
        # Call to rand(...): (line 410)
        # Processing the call arguments (line 410)
        # Getting the type of 'i' (line 410)
        i_8895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 31), 'i', False)
        # Getting the type of 'i' (line 410)
        i_8896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 34), 'i', False)
        int_8897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 36), 'int')
        # Applying the binary operator '-' (line 410)
        result_sub_8898 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 34), '-', i_8896, int_8897)
        
        # Applying the binary operator '*' (line 410)
        result_mul_8899 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 31), '*', i_8895, result_sub_8898)
        
        int_8900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 40), 'int')
        # Applying the binary operator '//' (line 410)
        result_floordiv_8901 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 38), '//', result_mul_8899, int_8900)
        
        # Processing the call keyword arguments (line 410)
        kwargs_8902 = {}
        # Getting the type of 'np' (line 410)
        np_8892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 410)
        random_8893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 16), np_8892, 'random')
        # Obtaining the member 'rand' of a type (line 410)
        rand_8894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 16), random_8893, 'rand')
        # Calling rand(args, kwargs) (line 410)
        rand_call_result_8903 = invoke(stypy.reporting.localization.Localization(__file__, 410, 16), rand_8894, *[result_floordiv_8901], **kwargs_8902)
        
        # Assigning a type to the variable 'y' (line 410)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'y', rand_call_result_8903)
        
        # Assigning a Call to a Name (line 411):
        
        # Assigning a Call to a Name (line 411):
        
        # Call to linkage(...): (line 411)
        # Processing the call arguments (line 411)
        # Getting the type of 'y' (line 411)
        y_8905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 24), 'y', False)
        # Processing the call keyword arguments (line 411)
        kwargs_8906 = {}
        # Getting the type of 'linkage' (line 411)
        linkage_8904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 411)
        linkage_call_result_8907 = invoke(stypy.reporting.localization.Localization(__file__, 411, 16), linkage_8904, *[y_8905], **kwargs_8906)
        
        # Assigning a type to the variable 'Z' (line 411)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 12), 'Z', linkage_call_result_8907)
        
        # Assigning a Num to a Subscript (line 412):
        
        # Assigning a Num to a Subscript (line 412):
        float_8908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 24), 'float')
        # Getting the type of 'Z' (line 412)
        Z_8909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 12), 'Z')
        
        # Obtaining an instance of the builtin type 'tuple' (line 412)
        tuple_8910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 412)
        # Adding element type (line 412)
        # Getting the type of 'i' (line 412)
        i_8911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 14), 'i')
        int_8912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 17), 'int')
        # Applying the binary operator '//' (line 412)
        result_floordiv_8913 = python_operator(stypy.reporting.localization.Localization(__file__, 412, 14), '//', i_8911, int_8912)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 14), tuple_8910, result_floordiv_8913)
        # Adding element type (line 412)
        int_8914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 412, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 14), tuple_8910, int_8914)
        
        # Storing an element on a container (line 412)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 412, 12), Z_8909, (tuple_8910, float_8908))
        
        # Call to assert_(...): (line 413)
        # Processing the call arguments (line 413)
        
        
        # Call to is_valid_linkage(...): (line 413)
        # Processing the call arguments (line 413)
        # Getting the type of 'Z' (line 413)
        Z_8917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 37), 'Z', False)
        # Processing the call keyword arguments (line 413)
        kwargs_8918 = {}
        # Getting the type of 'is_valid_linkage' (line 413)
        is_valid_linkage_8916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 20), 'is_valid_linkage', False)
        # Calling is_valid_linkage(args, kwargs) (line 413)
        is_valid_linkage_call_result_8919 = invoke(stypy.reporting.localization.Localization(__file__, 413, 20), is_valid_linkage_8916, *[Z_8917], **kwargs_8918)
        
        # Getting the type of 'False' (line 413)
        False_8920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 43), 'False', False)
        # Applying the binary operator '==' (line 413)
        result_eq_8921 = python_operator(stypy.reporting.localization.Localization(__file__, 413, 20), '==', is_valid_linkage_call_result_8919, False_8920)
        
        # Processing the call keyword arguments (line 413)
        kwargs_8922 = {}
        # Getting the type of 'assert_' (line 413)
        assert__8915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 413, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 413)
        assert__call_result_8923 = invoke(stypy.reporting.localization.Localization(__file__, 413, 12), assert__8915, *[result_eq_8921], **kwargs_8922)
        
        
        # Call to assert_raises(...): (line 414)
        # Processing the call arguments (line 414)
        # Getting the type of 'ValueError' (line 414)
        ValueError_8925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 26), 'ValueError', False)
        # Getting the type of 'is_valid_linkage' (line 414)
        is_valid_linkage_8926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 38), 'is_valid_linkage', False)
        # Getting the type of 'Z' (line 414)
        Z_8927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 56), 'Z', False)
        # Processing the call keyword arguments (line 414)
        # Getting the type of 'True' (line 414)
        True_8928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 65), 'True', False)
        keyword_8929 = True_8928
        kwargs_8930 = {'throw': keyword_8929}
        # Getting the type of 'assert_raises' (line 414)
        assert_raises_8924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 414)
        assert_raises_call_result_8931 = invoke(stypy.reporting.localization.Localization(__file__, 414, 12), assert_raises_8924, *[ValueError_8925, is_valid_linkage_8926, Z_8927], **kwargs_8930)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_linkage_4_and_up_neg_dist(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_linkage_4_and_up_neg_dist' in the type store
        # Getting the type of 'stypy_return_type' (line 406)
        stypy_return_type_8932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8932)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_linkage_4_and_up_neg_dist'
        return stypy_return_type_8932


    @norecursion
    def test_is_valid_linkage_4_and_up_neg_counts(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_linkage_4_and_up_neg_counts'
        module_type_store = module_type_store.open_function_context('test_is_valid_linkage_4_and_up_neg_counts', 416, 4, False)
        # Assigning a type to the variable 'self' (line 417)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_function_name', 'TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts')
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.test_is_valid_linkage_4_and_up_neg_counts', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_linkage_4_and_up_neg_counts', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_linkage_4_and_up_neg_counts(...)' code ##################

        
        
        # Call to xrange(...): (line 419)
        # Processing the call arguments (line 419)
        int_8934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 24), 'int')
        int_8935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 27), 'int')
        int_8936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 31), 'int')
        # Processing the call keyword arguments (line 419)
        kwargs_8937 = {}
        # Getting the type of 'xrange' (line 419)
        xrange_8933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 419)
        xrange_call_result_8938 = invoke(stypy.reporting.localization.Localization(__file__, 419, 17), xrange_8933, *[int_8934, int_8935, int_8936], **kwargs_8937)
        
        # Testing the type of a for loop iterable (line 419)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 419, 8), xrange_call_result_8938)
        # Getting the type of the for loop variable (line 419)
        for_loop_var_8939 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 419, 8), xrange_call_result_8938)
        # Assigning a type to the variable 'i' (line 419)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'i', for_loop_var_8939)
        # SSA begins for a for statement (line 419)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 420):
        
        # Assigning a Call to a Name (line 420):
        
        # Call to rand(...): (line 420)
        # Processing the call arguments (line 420)
        # Getting the type of 'i' (line 420)
        i_8943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 31), 'i', False)
        # Getting the type of 'i' (line 420)
        i_8944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 34), 'i', False)
        int_8945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 36), 'int')
        # Applying the binary operator '-' (line 420)
        result_sub_8946 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 34), '-', i_8944, int_8945)
        
        # Applying the binary operator '*' (line 420)
        result_mul_8947 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 31), '*', i_8943, result_sub_8946)
        
        int_8948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 40), 'int')
        # Applying the binary operator '//' (line 420)
        result_floordiv_8949 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 38), '//', result_mul_8947, int_8948)
        
        # Processing the call keyword arguments (line 420)
        kwargs_8950 = {}
        # Getting the type of 'np' (line 420)
        np_8940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 420)
        random_8941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 16), np_8940, 'random')
        # Obtaining the member 'rand' of a type (line 420)
        rand_8942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 16), random_8941, 'rand')
        # Calling rand(args, kwargs) (line 420)
        rand_call_result_8951 = invoke(stypy.reporting.localization.Localization(__file__, 420, 16), rand_8942, *[result_floordiv_8949], **kwargs_8950)
        
        # Assigning a type to the variable 'y' (line 420)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 12), 'y', rand_call_result_8951)
        
        # Assigning a Call to a Name (line 421):
        
        # Assigning a Call to a Name (line 421):
        
        # Call to linkage(...): (line 421)
        # Processing the call arguments (line 421)
        # Getting the type of 'y' (line 421)
        y_8953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 24), 'y', False)
        # Processing the call keyword arguments (line 421)
        kwargs_8954 = {}
        # Getting the type of 'linkage' (line 421)
        linkage_8952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 421)
        linkage_call_result_8955 = invoke(stypy.reporting.localization.Localization(__file__, 421, 16), linkage_8952, *[y_8953], **kwargs_8954)
        
        # Assigning a type to the variable 'Z' (line 421)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 421, 12), 'Z', linkage_call_result_8955)
        
        # Assigning a Num to a Subscript (line 422):
        
        # Assigning a Num to a Subscript (line 422):
        int_8956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 24), 'int')
        # Getting the type of 'Z' (line 422)
        Z_8957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 12), 'Z')
        
        # Obtaining an instance of the builtin type 'tuple' (line 422)
        tuple_8958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 422)
        # Adding element type (line 422)
        # Getting the type of 'i' (line 422)
        i_8959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 14), 'i')
        int_8960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 17), 'int')
        # Applying the binary operator '//' (line 422)
        result_floordiv_8961 = python_operator(stypy.reporting.localization.Localization(__file__, 422, 14), '//', i_8959, int_8960)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 422, 14), tuple_8958, result_floordiv_8961)
        # Adding element type (line 422)
        int_8962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 422, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 422, 14), tuple_8958, int_8962)
        
        # Storing an element on a container (line 422)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 422, 12), Z_8957, (tuple_8958, int_8956))
        
        # Call to assert_(...): (line 423)
        # Processing the call arguments (line 423)
        
        
        # Call to is_valid_linkage(...): (line 423)
        # Processing the call arguments (line 423)
        # Getting the type of 'Z' (line 423)
        Z_8965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 37), 'Z', False)
        # Processing the call keyword arguments (line 423)
        kwargs_8966 = {}
        # Getting the type of 'is_valid_linkage' (line 423)
        is_valid_linkage_8964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 20), 'is_valid_linkage', False)
        # Calling is_valid_linkage(args, kwargs) (line 423)
        is_valid_linkage_call_result_8967 = invoke(stypy.reporting.localization.Localization(__file__, 423, 20), is_valid_linkage_8964, *[Z_8965], **kwargs_8966)
        
        # Getting the type of 'False' (line 423)
        False_8968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 43), 'False', False)
        # Applying the binary operator '==' (line 423)
        result_eq_8969 = python_operator(stypy.reporting.localization.Localization(__file__, 423, 20), '==', is_valid_linkage_call_result_8967, False_8968)
        
        # Processing the call keyword arguments (line 423)
        kwargs_8970 = {}
        # Getting the type of 'assert_' (line 423)
        assert__8963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 423)
        assert__call_result_8971 = invoke(stypy.reporting.localization.Localization(__file__, 423, 12), assert__8963, *[result_eq_8969], **kwargs_8970)
        
        
        # Call to assert_raises(...): (line 424)
        # Processing the call arguments (line 424)
        # Getting the type of 'ValueError' (line 424)
        ValueError_8973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 26), 'ValueError', False)
        # Getting the type of 'is_valid_linkage' (line 424)
        is_valid_linkage_8974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 38), 'is_valid_linkage', False)
        # Getting the type of 'Z' (line 424)
        Z_8975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 56), 'Z', False)
        # Processing the call keyword arguments (line 424)
        # Getting the type of 'True' (line 424)
        True_8976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 65), 'True', False)
        keyword_8977 = True_8976
        kwargs_8978 = {'throw': keyword_8977}
        # Getting the type of 'assert_raises' (line 424)
        assert_raises_8972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 424)
        assert_raises_call_result_8979 = invoke(stypy.reporting.localization.Localization(__file__, 424, 12), assert_raises_8972, *[ValueError_8973, is_valid_linkage_8974, Z_8975], **kwargs_8978)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_linkage_4_and_up_neg_counts(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_linkage_4_and_up_neg_counts' in the type store
        # Getting the type of 'stypy_return_type' (line 416)
        stypy_return_type_8980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8980)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_linkage_4_and_up_neg_counts'
        return stypy_return_type_8980


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 350, 0, False)
        # Assigning a type to the variable 'self' (line 351)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidLinkage.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestIsValidLinkage' (line 350)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 350, 0), 'TestIsValidLinkage', TestIsValidLinkage)
# Declaration of the 'TestIsValidInconsistent' class

class TestIsValidInconsistent(object, ):

    @norecursion
    def test_is_valid_im_int_type(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_im_int_type'
        module_type_store = module_type_store.open_function_context('test_is_valid_im_int_type', 428, 4, False)
        # Assigning a type to the variable 'self' (line 429)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 429, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_function_name', 'TestIsValidInconsistent.test_is_valid_im_int_type')
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidInconsistent.test_is_valid_im_int_type.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidInconsistent.test_is_valid_im_int_type', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_im_int_type', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_im_int_type(...)' code ##################

        
        # Assigning a Call to a Name (line 430):
        
        # Assigning a Call to a Name (line 430):
        
        # Call to asarray(...): (line 430)
        # Processing the call arguments (line 430)
        
        # Obtaining an instance of the builtin type 'list' (line 430)
        list_8983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 430)
        # Adding element type (line 430)
        
        # Obtaining an instance of the builtin type 'list' (line 430)
        list_8984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 430)
        # Adding element type (line 430)
        int_8985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 24), list_8984, int_8985)
        # Adding element type (line 430)
        int_8986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 24), list_8984, int_8986)
        # Adding element type (line 430)
        float_8987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 24), list_8984, float_8987)
        # Adding element type (line 430)
        int_8988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 24), list_8984, int_8988)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 23), list_8983, list_8984)
        # Adding element type (line 430)
        
        # Obtaining an instance of the builtin type 'list' (line 431)
        list_8989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 431)
        # Adding element type (line 431)
        int_8990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 24), list_8989, int_8990)
        # Adding element type (line 431)
        int_8991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 24), list_8989, int_8991)
        # Adding element type (line 431)
        float_8992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 24), list_8989, float_8992)
        # Adding element type (line 431)
        int_8993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 431, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 431, 24), list_8989, int_8993)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 430, 23), list_8983, list_8989)
        
        # Processing the call keyword arguments (line 430)
        # Getting the type of 'int' (line 431)
        int_8994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 47), 'int', False)
        keyword_8995 = int_8994
        kwargs_8996 = {'dtype': keyword_8995}
        # Getting the type of 'np' (line 430)
        np_8981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 430)
        asarray_8982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 12), np_8981, 'asarray')
        # Calling asarray(args, kwargs) (line 430)
        asarray_call_result_8997 = invoke(stypy.reporting.localization.Localization(__file__, 430, 12), asarray_8982, *[list_8983], **kwargs_8996)
        
        # Assigning a type to the variable 'R' (line 430)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 8), 'R', asarray_call_result_8997)
        
        # Call to assert_(...): (line 432)
        # Processing the call arguments (line 432)
        
        
        # Call to is_valid_im(...): (line 432)
        # Processing the call arguments (line 432)
        # Getting the type of 'R' (line 432)
        R_9000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 28), 'R', False)
        # Processing the call keyword arguments (line 432)
        kwargs_9001 = {}
        # Getting the type of 'is_valid_im' (line 432)
        is_valid_im_8999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 16), 'is_valid_im', False)
        # Calling is_valid_im(args, kwargs) (line 432)
        is_valid_im_call_result_9002 = invoke(stypy.reporting.localization.Localization(__file__, 432, 16), is_valid_im_8999, *[R_9000], **kwargs_9001)
        
        # Getting the type of 'False' (line 432)
        False_9003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 34), 'False', False)
        # Applying the binary operator '==' (line 432)
        result_eq_9004 = python_operator(stypy.reporting.localization.Localization(__file__, 432, 16), '==', is_valid_im_call_result_9002, False_9003)
        
        # Processing the call keyword arguments (line 432)
        kwargs_9005 = {}
        # Getting the type of 'assert_' (line 432)
        assert__8998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 432)
        assert__call_result_9006 = invoke(stypy.reporting.localization.Localization(__file__, 432, 8), assert__8998, *[result_eq_9004], **kwargs_9005)
        
        
        # Call to assert_raises(...): (line 433)
        # Processing the call arguments (line 433)
        # Getting the type of 'TypeError' (line 433)
        TypeError_9008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 22), 'TypeError', False)
        # Getting the type of 'is_valid_im' (line 433)
        is_valid_im_9009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 33), 'is_valid_im', False)
        # Getting the type of 'R' (line 433)
        R_9010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 46), 'R', False)
        # Processing the call keyword arguments (line 433)
        # Getting the type of 'True' (line 433)
        True_9011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 55), 'True', False)
        keyword_9012 = True_9011
        kwargs_9013 = {'throw': keyword_9012}
        # Getting the type of 'assert_raises' (line 433)
        assert_raises_9007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 433)
        assert_raises_call_result_9014 = invoke(stypy.reporting.localization.Localization(__file__, 433, 8), assert_raises_9007, *[TypeError_9008, is_valid_im_9009, R_9010], **kwargs_9013)
        
        
        # ################# End of 'test_is_valid_im_int_type(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_im_int_type' in the type store
        # Getting the type of 'stypy_return_type' (line 428)
        stypy_return_type_9015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9015)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_im_int_type'
        return stypy_return_type_9015


    @norecursion
    def test_is_valid_im_various_size(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_im_various_size'
        module_type_store = module_type_store.open_function_context('test_is_valid_im_various_size', 435, 4, False)
        # Assigning a type to the variable 'self' (line 436)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_function_name', 'TestIsValidInconsistent.test_is_valid_im_various_size')
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidInconsistent.test_is_valid_im_various_size.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidInconsistent.test_is_valid_im_various_size', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_im_various_size', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_im_various_size(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 436)
        list_9016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 436)
        # Adding element type (line 436)
        
        # Obtaining an instance of the builtin type 'tuple' (line 436)
        tuple_9017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 436)
        # Adding element type (line 436)
        int_9018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 35), tuple_9017, int_9018)
        # Adding element type (line 436)
        int_9019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 35), tuple_9017, int_9019)
        # Adding element type (line 436)
        # Getting the type of 'False' (line 436)
        False_9020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 41), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 35), tuple_9017, False_9020)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 33), list_9016, tuple_9017)
        # Adding element type (line 436)
        
        # Obtaining an instance of the builtin type 'tuple' (line 436)
        tuple_9021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 50), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 436)
        # Adding element type (line 436)
        int_9022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 50), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 50), tuple_9021, int_9022)
        # Adding element type (line 436)
        int_9023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 53), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 50), tuple_9021, int_9023)
        # Adding element type (line 436)
        # Getting the type of 'False' (line 436)
        False_9024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 56), 'False')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 50), tuple_9021, False_9024)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 33), list_9016, tuple_9021)
        # Adding element type (line 436)
        
        # Obtaining an instance of the builtin type 'tuple' (line 437)
        tuple_9025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 35), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 437)
        # Adding element type (line 437)
        int_9026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 35), tuple_9025, int_9026)
        # Adding element type (line 437)
        int_9027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 35), tuple_9025, int_9027)
        # Adding element type (line 437)
        # Getting the type of 'True' (line 437)
        True_9028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 41), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 35), tuple_9025, True_9028)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 33), list_9016, tuple_9025)
        # Adding element type (line 436)
        
        # Obtaining an instance of the builtin type 'tuple' (line 437)
        tuple_9029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 437)
        # Adding element type (line 437)
        int_9030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 49), tuple_9029, int_9030)
        # Adding element type (line 437)
        int_9031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 437, 52), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 49), tuple_9029, int_9031)
        # Adding element type (line 437)
        # Getting the type of 'True' (line 437)
        True_9032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 55), 'True')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 437, 49), tuple_9029, True_9032)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 33), list_9016, tuple_9029)
        
        # Testing the type of a for loop iterable (line 436)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 436, 8), list_9016)
        # Getting the type of the for loop variable (line 436)
        for_loop_var_9033 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 436, 8), list_9016)
        # Assigning a type to the variable 'nrow' (line 436)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'nrow', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 8), for_loop_var_9033))
        # Assigning a type to the variable 'ncol' (line 436)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'ncol', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 8), for_loop_var_9033))
        # Assigning a type to the variable 'valid' (line 436)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'valid', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 436, 8), for_loop_var_9033))
        # SSA begins for a for statement (line 436)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_is_valid_im_various_size(...): (line 438)
        # Processing the call arguments (line 438)
        # Getting the type of 'nrow' (line 438)
        nrow_9036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 48), 'nrow', False)
        # Getting the type of 'ncol' (line 438)
        ncol_9037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 54), 'ncol', False)
        # Getting the type of 'valid' (line 438)
        valid_9038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 60), 'valid', False)
        # Processing the call keyword arguments (line 438)
        kwargs_9039 = {}
        # Getting the type of 'self' (line 438)
        self_9034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 12), 'self', False)
        # Obtaining the member 'check_is_valid_im_various_size' of a type (line 438)
        check_is_valid_im_various_size_9035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 12), self_9034, 'check_is_valid_im_various_size')
        # Calling check_is_valid_im_various_size(args, kwargs) (line 438)
        check_is_valid_im_various_size_call_result_9040 = invoke(stypy.reporting.localization.Localization(__file__, 438, 12), check_is_valid_im_various_size_9035, *[nrow_9036, ncol_9037, valid_9038], **kwargs_9039)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_im_various_size(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_im_various_size' in the type store
        # Getting the type of 'stypy_return_type' (line 435)
        stypy_return_type_9041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9041)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_im_various_size'
        return stypy_return_type_9041


    @norecursion
    def check_is_valid_im_various_size(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_is_valid_im_various_size'
        module_type_store = module_type_store.open_function_context('check_is_valid_im_various_size', 440, 4, False)
        # Assigning a type to the variable 'self' (line 441)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_function_name', 'TestIsValidInconsistent.check_is_valid_im_various_size')
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_param_names_list', ['nrow', 'ncol', 'valid'])
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidInconsistent.check_is_valid_im_various_size.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidInconsistent.check_is_valid_im_various_size', ['nrow', 'ncol', 'valid'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_is_valid_im_various_size', localization, ['nrow', 'ncol', 'valid'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_is_valid_im_various_size(...)' code ##################

        
        # Assigning a Call to a Name (line 442):
        
        # Assigning a Call to a Name (line 442):
        
        # Call to asarray(...): (line 442)
        # Processing the call arguments (line 442)
        
        # Obtaining an instance of the builtin type 'list' (line 442)
        list_9044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 442)
        # Adding element type (line 442)
        
        # Obtaining an instance of the builtin type 'list' (line 442)
        list_9045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 442)
        # Adding element type (line 442)
        int_9046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 442, 24), list_9045, int_9046)
        # Adding element type (line 442)
        int_9047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 442, 24), list_9045, int_9047)
        # Adding element type (line 442)
        float_9048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 442, 24), list_9045, float_9048)
        # Adding element type (line 442)
        int_9049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 442, 24), list_9045, int_9049)
        # Adding element type (line 442)
        int_9050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 442, 24), list_9045, int_9050)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 442, 23), list_9044, list_9045)
        # Adding element type (line 442)
        
        # Obtaining an instance of the builtin type 'list' (line 443)
        list_9051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 443)
        # Adding element type (line 443)
        int_9052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 443, 24), list_9051, int_9052)
        # Adding element type (line 443)
        int_9053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 443, 24), list_9051, int_9053)
        # Adding element type (line 443)
        float_9054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 443, 24), list_9051, float_9054)
        # Adding element type (line 443)
        int_9055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 443, 24), list_9051, int_9055)
        # Adding element type (line 443)
        int_9056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 443, 24), list_9051, int_9056)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 442, 23), list_9044, list_9051)
        
        # Processing the call keyword arguments (line 442)
        # Getting the type of 'np' (line 443)
        np_9057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 50), 'np', False)
        # Obtaining the member 'double' of a type (line 443)
        double_9058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 50), np_9057, 'double')
        keyword_9059 = double_9058
        kwargs_9060 = {'dtype': keyword_9059}
        # Getting the type of 'np' (line 442)
        np_9042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 442)
        asarray_9043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 12), np_9042, 'asarray')
        # Calling asarray(args, kwargs) (line 442)
        asarray_call_result_9061 = invoke(stypy.reporting.localization.Localization(__file__, 442, 12), asarray_9043, *[list_9044], **kwargs_9060)
        
        # Assigning a type to the variable 'R' (line 442)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 8), 'R', asarray_call_result_9061)
        
        # Assigning a Subscript to a Name (line 444):
        
        # Assigning a Subscript to a Name (line 444):
        
        # Obtaining the type of the subscript
        # Getting the type of 'nrow' (line 444)
        nrow_9062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 15), 'nrow')
        slice_9063 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 444, 12), None, nrow_9062, None)
        # Getting the type of 'ncol' (line 444)
        ncol_9064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 22), 'ncol')
        slice_9065 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 444, 12), None, ncol_9064, None)
        # Getting the type of 'R' (line 444)
        R_9066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 12), 'R')
        # Obtaining the member '__getitem__' of a type (line 444)
        getitem___9067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 12), R_9066, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 444)
        subscript_call_result_9068 = invoke(stypy.reporting.localization.Localization(__file__, 444, 12), getitem___9067, (slice_9063, slice_9065))
        
        # Assigning a type to the variable 'R' (line 444)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'R', subscript_call_result_9068)
        
        # Call to assert_(...): (line 445)
        # Processing the call arguments (line 445)
        
        
        # Call to is_valid_im(...): (line 445)
        # Processing the call arguments (line 445)
        # Getting the type of 'R' (line 445)
        R_9071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'R', False)
        # Processing the call keyword arguments (line 445)
        kwargs_9072 = {}
        # Getting the type of 'is_valid_im' (line 445)
        is_valid_im_9070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 16), 'is_valid_im', False)
        # Calling is_valid_im(args, kwargs) (line 445)
        is_valid_im_call_result_9073 = invoke(stypy.reporting.localization.Localization(__file__, 445, 16), is_valid_im_9070, *[R_9071], **kwargs_9072)
        
        # Getting the type of 'valid' (line 445)
        valid_9074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 34), 'valid', False)
        # Applying the binary operator '==' (line 445)
        result_eq_9075 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 16), '==', is_valid_im_call_result_9073, valid_9074)
        
        # Processing the call keyword arguments (line 445)
        kwargs_9076 = {}
        # Getting the type of 'assert_' (line 445)
        assert__9069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 445)
        assert__call_result_9077 = invoke(stypy.reporting.localization.Localization(__file__, 445, 8), assert__9069, *[result_eq_9075], **kwargs_9076)
        
        
        
        # Getting the type of 'valid' (line 446)
        valid_9078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 15), 'valid')
        # Applying the 'not' unary operator (line 446)
        result_not__9079 = python_operator(stypy.reporting.localization.Localization(__file__, 446, 11), 'not', valid_9078)
        
        # Testing the type of an if condition (line 446)
        if_condition_9080 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 446, 8), result_not__9079)
        # Assigning a type to the variable 'if_condition_9080' (line 446)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 446, 8), 'if_condition_9080', if_condition_9080)
        # SSA begins for if statement (line 446)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to assert_raises(...): (line 447)
        # Processing the call arguments (line 447)
        # Getting the type of 'ValueError' (line 447)
        ValueError_9082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 26), 'ValueError', False)
        # Getting the type of 'is_valid_im' (line 447)
        is_valid_im_9083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 38), 'is_valid_im', False)
        # Getting the type of 'R' (line 447)
        R_9084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 51), 'R', False)
        # Processing the call keyword arguments (line 447)
        # Getting the type of 'True' (line 447)
        True_9085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 60), 'True', False)
        keyword_9086 = True_9085
        kwargs_9087 = {'throw': keyword_9086}
        # Getting the type of 'assert_raises' (line 447)
        assert_raises_9081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 447)
        assert_raises_call_result_9088 = invoke(stypy.reporting.localization.Localization(__file__, 447, 12), assert_raises_9081, *[ValueError_9082, is_valid_im_9083, R_9084], **kwargs_9087)
        
        # SSA join for if statement (line 446)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'check_is_valid_im_various_size(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_is_valid_im_various_size' in the type store
        # Getting the type of 'stypy_return_type' (line 440)
        stypy_return_type_9089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9089)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_is_valid_im_various_size'
        return stypy_return_type_9089


    @norecursion
    def test_is_valid_im_empty(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_im_empty'
        module_type_store = module_type_store.open_function_context('test_is_valid_im_empty', 449, 4, False)
        # Assigning a type to the variable 'self' (line 450)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_function_name', 'TestIsValidInconsistent.test_is_valid_im_empty')
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidInconsistent.test_is_valid_im_empty.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidInconsistent.test_is_valid_im_empty', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_im_empty', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_im_empty(...)' code ##################

        
        # Assigning a Call to a Name (line 451):
        
        # Assigning a Call to a Name (line 451):
        
        # Call to zeros(...): (line 451)
        # Processing the call arguments (line 451)
        
        # Obtaining an instance of the builtin type 'tuple' (line 451)
        tuple_9092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 451)
        # Adding element type (line 451)
        int_9093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 451, 22), tuple_9092, int_9093)
        # Adding element type (line 451)
        int_9094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 451, 22), tuple_9092, int_9094)
        
        # Processing the call keyword arguments (line 451)
        # Getting the type of 'np' (line 451)
        np_9095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 35), 'np', False)
        # Obtaining the member 'double' of a type (line 451)
        double_9096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 35), np_9095, 'double')
        keyword_9097 = double_9096
        kwargs_9098 = {'dtype': keyword_9097}
        # Getting the type of 'np' (line 451)
        np_9090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 451)
        zeros_9091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 12), np_9090, 'zeros')
        # Calling zeros(args, kwargs) (line 451)
        zeros_call_result_9099 = invoke(stypy.reporting.localization.Localization(__file__, 451, 12), zeros_9091, *[tuple_9092], **kwargs_9098)
        
        # Assigning a type to the variable 'R' (line 451)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 451, 8), 'R', zeros_call_result_9099)
        
        # Call to assert_(...): (line 452)
        # Processing the call arguments (line 452)
        
        
        # Call to is_valid_im(...): (line 452)
        # Processing the call arguments (line 452)
        # Getting the type of 'R' (line 452)
        R_9102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 28), 'R', False)
        # Processing the call keyword arguments (line 452)
        kwargs_9103 = {}
        # Getting the type of 'is_valid_im' (line 452)
        is_valid_im_9101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 16), 'is_valid_im', False)
        # Calling is_valid_im(args, kwargs) (line 452)
        is_valid_im_call_result_9104 = invoke(stypy.reporting.localization.Localization(__file__, 452, 16), is_valid_im_9101, *[R_9102], **kwargs_9103)
        
        # Getting the type of 'False' (line 452)
        False_9105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 34), 'False', False)
        # Applying the binary operator '==' (line 452)
        result_eq_9106 = python_operator(stypy.reporting.localization.Localization(__file__, 452, 16), '==', is_valid_im_call_result_9104, False_9105)
        
        # Processing the call keyword arguments (line 452)
        kwargs_9107 = {}
        # Getting the type of 'assert_' (line 452)
        assert__9100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'assert_', False)
        # Calling assert_(args, kwargs) (line 452)
        assert__call_result_9108 = invoke(stypy.reporting.localization.Localization(__file__, 452, 8), assert__9100, *[result_eq_9106], **kwargs_9107)
        
        
        # Call to assert_raises(...): (line 453)
        # Processing the call arguments (line 453)
        # Getting the type of 'ValueError' (line 453)
        ValueError_9110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 22), 'ValueError', False)
        # Getting the type of 'is_valid_im' (line 453)
        is_valid_im_9111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 34), 'is_valid_im', False)
        # Getting the type of 'R' (line 453)
        R_9112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 47), 'R', False)
        # Processing the call keyword arguments (line 453)
        # Getting the type of 'True' (line 453)
        True_9113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 56), 'True', False)
        keyword_9114 = True_9113
        kwargs_9115 = {'throw': keyword_9114}
        # Getting the type of 'assert_raises' (line 453)
        assert_raises_9109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 453)
        assert_raises_call_result_9116 = invoke(stypy.reporting.localization.Localization(__file__, 453, 8), assert_raises_9109, *[ValueError_9110, is_valid_im_9111, R_9112], **kwargs_9115)
        
        
        # ################# End of 'test_is_valid_im_empty(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_im_empty' in the type store
        # Getting the type of 'stypy_return_type' (line 449)
        stypy_return_type_9117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9117)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_im_empty'
        return stypy_return_type_9117


    @norecursion
    def test_is_valid_im_4_and_up(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_im_4_and_up'
        module_type_store = module_type_store.open_function_context('test_is_valid_im_4_and_up', 455, 4, False)
        # Assigning a type to the variable 'self' (line 456)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_function_name', 'TestIsValidInconsistent.test_is_valid_im_4_and_up')
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidInconsistent.test_is_valid_im_4_and_up.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidInconsistent.test_is_valid_im_4_and_up', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_im_4_and_up', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_im_4_and_up(...)' code ##################

        
        
        # Call to xrange(...): (line 458)
        # Processing the call arguments (line 458)
        int_9119 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 24), 'int')
        int_9120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 27), 'int')
        int_9121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 31), 'int')
        # Processing the call keyword arguments (line 458)
        kwargs_9122 = {}
        # Getting the type of 'xrange' (line 458)
        xrange_9118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 458)
        xrange_call_result_9123 = invoke(stypy.reporting.localization.Localization(__file__, 458, 17), xrange_9118, *[int_9119, int_9120, int_9121], **kwargs_9122)
        
        # Testing the type of a for loop iterable (line 458)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 458, 8), xrange_call_result_9123)
        # Getting the type of the for loop variable (line 458)
        for_loop_var_9124 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 458, 8), xrange_call_result_9123)
        # Assigning a type to the variable 'i' (line 458)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 8), 'i', for_loop_var_9124)
        # SSA begins for a for statement (line 458)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 459):
        
        # Assigning a Call to a Name (line 459):
        
        # Call to rand(...): (line 459)
        # Processing the call arguments (line 459)
        # Getting the type of 'i' (line 459)
        i_9128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 31), 'i', False)
        # Getting the type of 'i' (line 459)
        i_9129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 34), 'i', False)
        int_9130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 36), 'int')
        # Applying the binary operator '-' (line 459)
        result_sub_9131 = python_operator(stypy.reporting.localization.Localization(__file__, 459, 34), '-', i_9129, int_9130)
        
        # Applying the binary operator '*' (line 459)
        result_mul_9132 = python_operator(stypy.reporting.localization.Localization(__file__, 459, 31), '*', i_9128, result_sub_9131)
        
        int_9133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 40), 'int')
        # Applying the binary operator '//' (line 459)
        result_floordiv_9134 = python_operator(stypy.reporting.localization.Localization(__file__, 459, 38), '//', result_mul_9132, int_9133)
        
        # Processing the call keyword arguments (line 459)
        kwargs_9135 = {}
        # Getting the type of 'np' (line 459)
        np_9125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 459)
        random_9126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 16), np_9125, 'random')
        # Obtaining the member 'rand' of a type (line 459)
        rand_9127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 16), random_9126, 'rand')
        # Calling rand(args, kwargs) (line 459)
        rand_call_result_9136 = invoke(stypy.reporting.localization.Localization(__file__, 459, 16), rand_9127, *[result_floordiv_9134], **kwargs_9135)
        
        # Assigning a type to the variable 'y' (line 459)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 12), 'y', rand_call_result_9136)
        
        # Assigning a Call to a Name (line 460):
        
        # Assigning a Call to a Name (line 460):
        
        # Call to linkage(...): (line 460)
        # Processing the call arguments (line 460)
        # Getting the type of 'y' (line 460)
        y_9138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 24), 'y', False)
        # Processing the call keyword arguments (line 460)
        kwargs_9139 = {}
        # Getting the type of 'linkage' (line 460)
        linkage_9137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 460)
        linkage_call_result_9140 = invoke(stypy.reporting.localization.Localization(__file__, 460, 16), linkage_9137, *[y_9138], **kwargs_9139)
        
        # Assigning a type to the variable 'Z' (line 460)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 460, 12), 'Z', linkage_call_result_9140)
        
        # Assigning a Call to a Name (line 461):
        
        # Assigning a Call to a Name (line 461):
        
        # Call to inconsistent(...): (line 461)
        # Processing the call arguments (line 461)
        # Getting the type of 'Z' (line 461)
        Z_9142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 29), 'Z', False)
        # Processing the call keyword arguments (line 461)
        kwargs_9143 = {}
        # Getting the type of 'inconsistent' (line 461)
        inconsistent_9141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 16), 'inconsistent', False)
        # Calling inconsistent(args, kwargs) (line 461)
        inconsistent_call_result_9144 = invoke(stypy.reporting.localization.Localization(__file__, 461, 16), inconsistent_9141, *[Z_9142], **kwargs_9143)
        
        # Assigning a type to the variable 'R' (line 461)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 12), 'R', inconsistent_call_result_9144)
        
        # Call to assert_(...): (line 462)
        # Processing the call arguments (line 462)
        
        
        # Call to is_valid_im(...): (line 462)
        # Processing the call arguments (line 462)
        # Getting the type of 'R' (line 462)
        R_9147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 32), 'R', False)
        # Processing the call keyword arguments (line 462)
        kwargs_9148 = {}
        # Getting the type of 'is_valid_im' (line 462)
        is_valid_im_9146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 20), 'is_valid_im', False)
        # Calling is_valid_im(args, kwargs) (line 462)
        is_valid_im_call_result_9149 = invoke(stypy.reporting.localization.Localization(__file__, 462, 20), is_valid_im_9146, *[R_9147], **kwargs_9148)
        
        # Getting the type of 'True' (line 462)
        True_9150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 38), 'True', False)
        # Applying the binary operator '==' (line 462)
        result_eq_9151 = python_operator(stypy.reporting.localization.Localization(__file__, 462, 20), '==', is_valid_im_call_result_9149, True_9150)
        
        # Processing the call keyword arguments (line 462)
        kwargs_9152 = {}
        # Getting the type of 'assert_' (line 462)
        assert__9145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 462)
        assert__call_result_9153 = invoke(stypy.reporting.localization.Localization(__file__, 462, 12), assert__9145, *[result_eq_9151], **kwargs_9152)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_im_4_and_up(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_im_4_and_up' in the type store
        # Getting the type of 'stypy_return_type' (line 455)
        stypy_return_type_9154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9154)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_im_4_and_up'
        return stypy_return_type_9154


    @norecursion
    def test_is_valid_im_4_and_up_neg_index_left(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_im_4_and_up_neg_index_left'
        module_type_store = module_type_store.open_function_context('test_is_valid_im_4_and_up_neg_index_left', 464, 4, False)
        # Assigning a type to the variable 'self' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_function_name', 'TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left')
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_left', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_im_4_and_up_neg_index_left', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_im_4_and_up_neg_index_left(...)' code ##################

        
        
        # Call to xrange(...): (line 467)
        # Processing the call arguments (line 467)
        int_9156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 24), 'int')
        int_9157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 27), 'int')
        int_9158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 31), 'int')
        # Processing the call keyword arguments (line 467)
        kwargs_9159 = {}
        # Getting the type of 'xrange' (line 467)
        xrange_9155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 467)
        xrange_call_result_9160 = invoke(stypy.reporting.localization.Localization(__file__, 467, 17), xrange_9155, *[int_9156, int_9157, int_9158], **kwargs_9159)
        
        # Testing the type of a for loop iterable (line 467)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 467, 8), xrange_call_result_9160)
        # Getting the type of the for loop variable (line 467)
        for_loop_var_9161 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 467, 8), xrange_call_result_9160)
        # Assigning a type to the variable 'i' (line 467)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 467, 8), 'i', for_loop_var_9161)
        # SSA begins for a for statement (line 467)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 468):
        
        # Assigning a Call to a Name (line 468):
        
        # Call to rand(...): (line 468)
        # Processing the call arguments (line 468)
        # Getting the type of 'i' (line 468)
        i_9165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 31), 'i', False)
        # Getting the type of 'i' (line 468)
        i_9166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 34), 'i', False)
        int_9167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 36), 'int')
        # Applying the binary operator '-' (line 468)
        result_sub_9168 = python_operator(stypy.reporting.localization.Localization(__file__, 468, 34), '-', i_9166, int_9167)
        
        # Applying the binary operator '*' (line 468)
        result_mul_9169 = python_operator(stypy.reporting.localization.Localization(__file__, 468, 31), '*', i_9165, result_sub_9168)
        
        int_9170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 40), 'int')
        # Applying the binary operator '//' (line 468)
        result_floordiv_9171 = python_operator(stypy.reporting.localization.Localization(__file__, 468, 38), '//', result_mul_9169, int_9170)
        
        # Processing the call keyword arguments (line 468)
        kwargs_9172 = {}
        # Getting the type of 'np' (line 468)
        np_9162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 468)
        random_9163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 16), np_9162, 'random')
        # Obtaining the member 'rand' of a type (line 468)
        rand_9164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 16), random_9163, 'rand')
        # Calling rand(args, kwargs) (line 468)
        rand_call_result_9173 = invoke(stypy.reporting.localization.Localization(__file__, 468, 16), rand_9164, *[result_floordiv_9171], **kwargs_9172)
        
        # Assigning a type to the variable 'y' (line 468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 12), 'y', rand_call_result_9173)
        
        # Assigning a Call to a Name (line 469):
        
        # Assigning a Call to a Name (line 469):
        
        # Call to linkage(...): (line 469)
        # Processing the call arguments (line 469)
        # Getting the type of 'y' (line 469)
        y_9175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 24), 'y', False)
        # Processing the call keyword arguments (line 469)
        kwargs_9176 = {}
        # Getting the type of 'linkage' (line 469)
        linkage_9174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 469)
        linkage_call_result_9177 = invoke(stypy.reporting.localization.Localization(__file__, 469, 16), linkage_9174, *[y_9175], **kwargs_9176)
        
        # Assigning a type to the variable 'Z' (line 469)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 469, 12), 'Z', linkage_call_result_9177)
        
        # Assigning a Call to a Name (line 470):
        
        # Assigning a Call to a Name (line 470):
        
        # Call to inconsistent(...): (line 470)
        # Processing the call arguments (line 470)
        # Getting the type of 'Z' (line 470)
        Z_9179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 29), 'Z', False)
        # Processing the call keyword arguments (line 470)
        kwargs_9180 = {}
        # Getting the type of 'inconsistent' (line 470)
        inconsistent_9178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 16), 'inconsistent', False)
        # Calling inconsistent(args, kwargs) (line 470)
        inconsistent_call_result_9181 = invoke(stypy.reporting.localization.Localization(__file__, 470, 16), inconsistent_9178, *[Z_9179], **kwargs_9180)
        
        # Assigning a type to the variable 'R' (line 470)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 12), 'R', inconsistent_call_result_9181)
        
        # Assigning a Num to a Subscript (line 471):
        
        # Assigning a Num to a Subscript (line 471):
        float_9182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 24), 'float')
        # Getting the type of 'R' (line 471)
        R_9183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 12), 'R')
        
        # Obtaining an instance of the builtin type 'tuple' (line 471)
        tuple_9184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 471)
        # Adding element type (line 471)
        # Getting the type of 'i' (line 471)
        i_9185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 14), 'i')
        int_9186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 17), 'int')
        # Applying the binary operator '//' (line 471)
        result_floordiv_9187 = python_operator(stypy.reporting.localization.Localization(__file__, 471, 14), '//', i_9185, int_9186)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 14), tuple_9184, result_floordiv_9187)
        # Adding element type (line 471)
        int_9188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 471, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 14), tuple_9184, int_9188)
        
        # Storing an element on a container (line 471)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 471, 12), R_9183, (tuple_9184, float_9182))
        
        # Call to assert_(...): (line 472)
        # Processing the call arguments (line 472)
        
        
        # Call to is_valid_im(...): (line 472)
        # Processing the call arguments (line 472)
        # Getting the type of 'R' (line 472)
        R_9191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 32), 'R', False)
        # Processing the call keyword arguments (line 472)
        kwargs_9192 = {}
        # Getting the type of 'is_valid_im' (line 472)
        is_valid_im_9190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 20), 'is_valid_im', False)
        # Calling is_valid_im(args, kwargs) (line 472)
        is_valid_im_call_result_9193 = invoke(stypy.reporting.localization.Localization(__file__, 472, 20), is_valid_im_9190, *[R_9191], **kwargs_9192)
        
        # Getting the type of 'False' (line 472)
        False_9194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 38), 'False', False)
        # Applying the binary operator '==' (line 472)
        result_eq_9195 = python_operator(stypy.reporting.localization.Localization(__file__, 472, 20), '==', is_valid_im_call_result_9193, False_9194)
        
        # Processing the call keyword arguments (line 472)
        kwargs_9196 = {}
        # Getting the type of 'assert_' (line 472)
        assert__9189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 472)
        assert__call_result_9197 = invoke(stypy.reporting.localization.Localization(__file__, 472, 12), assert__9189, *[result_eq_9195], **kwargs_9196)
        
        
        # Call to assert_raises(...): (line 473)
        # Processing the call arguments (line 473)
        # Getting the type of 'ValueError' (line 473)
        ValueError_9199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 26), 'ValueError', False)
        # Getting the type of 'is_valid_im' (line 473)
        is_valid_im_9200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 38), 'is_valid_im', False)
        # Getting the type of 'R' (line 473)
        R_9201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 51), 'R', False)
        # Processing the call keyword arguments (line 473)
        # Getting the type of 'True' (line 473)
        True_9202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 60), 'True', False)
        keyword_9203 = True_9202
        kwargs_9204 = {'throw': keyword_9203}
        # Getting the type of 'assert_raises' (line 473)
        assert_raises_9198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 473)
        assert_raises_call_result_9205 = invoke(stypy.reporting.localization.Localization(__file__, 473, 12), assert_raises_9198, *[ValueError_9199, is_valid_im_9200, R_9201], **kwargs_9204)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_im_4_and_up_neg_index_left(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_im_4_and_up_neg_index_left' in the type store
        # Getting the type of 'stypy_return_type' (line 464)
        stypy_return_type_9206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9206)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_im_4_and_up_neg_index_left'
        return stypy_return_type_9206


    @norecursion
    def test_is_valid_im_4_and_up_neg_index_right(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_im_4_and_up_neg_index_right'
        module_type_store = module_type_store.open_function_context('test_is_valid_im_4_and_up_neg_index_right', 475, 4, False)
        # Assigning a type to the variable 'self' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_function_name', 'TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right')
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_index_right', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_im_4_and_up_neg_index_right', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_im_4_and_up_neg_index_right(...)' code ##################

        
        
        # Call to xrange(...): (line 478)
        # Processing the call arguments (line 478)
        int_9208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 24), 'int')
        int_9209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 27), 'int')
        int_9210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 31), 'int')
        # Processing the call keyword arguments (line 478)
        kwargs_9211 = {}
        # Getting the type of 'xrange' (line 478)
        xrange_9207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 478)
        xrange_call_result_9212 = invoke(stypy.reporting.localization.Localization(__file__, 478, 17), xrange_9207, *[int_9208, int_9209, int_9210], **kwargs_9211)
        
        # Testing the type of a for loop iterable (line 478)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 478, 8), xrange_call_result_9212)
        # Getting the type of the for loop variable (line 478)
        for_loop_var_9213 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 478, 8), xrange_call_result_9212)
        # Assigning a type to the variable 'i' (line 478)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'i', for_loop_var_9213)
        # SSA begins for a for statement (line 478)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 479):
        
        # Assigning a Call to a Name (line 479):
        
        # Call to rand(...): (line 479)
        # Processing the call arguments (line 479)
        # Getting the type of 'i' (line 479)
        i_9217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 31), 'i', False)
        # Getting the type of 'i' (line 479)
        i_9218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 34), 'i', False)
        int_9219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 36), 'int')
        # Applying the binary operator '-' (line 479)
        result_sub_9220 = python_operator(stypy.reporting.localization.Localization(__file__, 479, 34), '-', i_9218, int_9219)
        
        # Applying the binary operator '*' (line 479)
        result_mul_9221 = python_operator(stypy.reporting.localization.Localization(__file__, 479, 31), '*', i_9217, result_sub_9220)
        
        int_9222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 40), 'int')
        # Applying the binary operator '//' (line 479)
        result_floordiv_9223 = python_operator(stypy.reporting.localization.Localization(__file__, 479, 38), '//', result_mul_9221, int_9222)
        
        # Processing the call keyword arguments (line 479)
        kwargs_9224 = {}
        # Getting the type of 'np' (line 479)
        np_9214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 479)
        random_9215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 16), np_9214, 'random')
        # Obtaining the member 'rand' of a type (line 479)
        rand_9216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 16), random_9215, 'rand')
        # Calling rand(args, kwargs) (line 479)
        rand_call_result_9225 = invoke(stypy.reporting.localization.Localization(__file__, 479, 16), rand_9216, *[result_floordiv_9223], **kwargs_9224)
        
        # Assigning a type to the variable 'y' (line 479)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 479, 12), 'y', rand_call_result_9225)
        
        # Assigning a Call to a Name (line 480):
        
        # Assigning a Call to a Name (line 480):
        
        # Call to linkage(...): (line 480)
        # Processing the call arguments (line 480)
        # Getting the type of 'y' (line 480)
        y_9227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 24), 'y', False)
        # Processing the call keyword arguments (line 480)
        kwargs_9228 = {}
        # Getting the type of 'linkage' (line 480)
        linkage_9226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 480)
        linkage_call_result_9229 = invoke(stypy.reporting.localization.Localization(__file__, 480, 16), linkage_9226, *[y_9227], **kwargs_9228)
        
        # Assigning a type to the variable 'Z' (line 480)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 12), 'Z', linkage_call_result_9229)
        
        # Assigning a Call to a Name (line 481):
        
        # Assigning a Call to a Name (line 481):
        
        # Call to inconsistent(...): (line 481)
        # Processing the call arguments (line 481)
        # Getting the type of 'Z' (line 481)
        Z_9231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 29), 'Z', False)
        # Processing the call keyword arguments (line 481)
        kwargs_9232 = {}
        # Getting the type of 'inconsistent' (line 481)
        inconsistent_9230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 16), 'inconsistent', False)
        # Calling inconsistent(args, kwargs) (line 481)
        inconsistent_call_result_9233 = invoke(stypy.reporting.localization.Localization(__file__, 481, 16), inconsistent_9230, *[Z_9231], **kwargs_9232)
        
        # Assigning a type to the variable 'R' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 12), 'R', inconsistent_call_result_9233)
        
        # Assigning a Num to a Subscript (line 482):
        
        # Assigning a Num to a Subscript (line 482):
        float_9234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 24), 'float')
        # Getting the type of 'R' (line 482)
        R_9235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'R')
        
        # Obtaining an instance of the builtin type 'tuple' (line 482)
        tuple_9236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 482)
        # Adding element type (line 482)
        # Getting the type of 'i' (line 482)
        i_9237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 14), 'i')
        int_9238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 17), 'int')
        # Applying the binary operator '//' (line 482)
        result_floordiv_9239 = python_operator(stypy.reporting.localization.Localization(__file__, 482, 14), '//', i_9237, int_9238)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 14), tuple_9236, result_floordiv_9239)
        # Adding element type (line 482)
        int_9240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 14), tuple_9236, int_9240)
        
        # Storing an element on a container (line 482)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 12), R_9235, (tuple_9236, float_9234))
        
        # Call to assert_(...): (line 483)
        # Processing the call arguments (line 483)
        
        
        # Call to is_valid_im(...): (line 483)
        # Processing the call arguments (line 483)
        # Getting the type of 'R' (line 483)
        R_9243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 32), 'R', False)
        # Processing the call keyword arguments (line 483)
        kwargs_9244 = {}
        # Getting the type of 'is_valid_im' (line 483)
        is_valid_im_9242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 20), 'is_valid_im', False)
        # Calling is_valid_im(args, kwargs) (line 483)
        is_valid_im_call_result_9245 = invoke(stypy.reporting.localization.Localization(__file__, 483, 20), is_valid_im_9242, *[R_9243], **kwargs_9244)
        
        # Getting the type of 'False' (line 483)
        False_9246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 38), 'False', False)
        # Applying the binary operator '==' (line 483)
        result_eq_9247 = python_operator(stypy.reporting.localization.Localization(__file__, 483, 20), '==', is_valid_im_call_result_9245, False_9246)
        
        # Processing the call keyword arguments (line 483)
        kwargs_9248 = {}
        # Getting the type of 'assert_' (line 483)
        assert__9241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 483)
        assert__call_result_9249 = invoke(stypy.reporting.localization.Localization(__file__, 483, 12), assert__9241, *[result_eq_9247], **kwargs_9248)
        
        
        # Call to assert_raises(...): (line 484)
        # Processing the call arguments (line 484)
        # Getting the type of 'ValueError' (line 484)
        ValueError_9251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 26), 'ValueError', False)
        # Getting the type of 'is_valid_im' (line 484)
        is_valid_im_9252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 38), 'is_valid_im', False)
        # Getting the type of 'R' (line 484)
        R_9253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 51), 'R', False)
        # Processing the call keyword arguments (line 484)
        # Getting the type of 'True' (line 484)
        True_9254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 60), 'True', False)
        keyword_9255 = True_9254
        kwargs_9256 = {'throw': keyword_9255}
        # Getting the type of 'assert_raises' (line 484)
        assert_raises_9250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 484)
        assert_raises_call_result_9257 = invoke(stypy.reporting.localization.Localization(__file__, 484, 12), assert_raises_9250, *[ValueError_9251, is_valid_im_9252, R_9253], **kwargs_9256)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_im_4_and_up_neg_index_right(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_im_4_and_up_neg_index_right' in the type store
        # Getting the type of 'stypy_return_type' (line 475)
        stypy_return_type_9258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9258)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_im_4_and_up_neg_index_right'
        return stypy_return_type_9258


    @norecursion
    def test_is_valid_im_4_and_up_neg_dist(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_valid_im_4_and_up_neg_dist'
        module_type_store = module_type_store.open_function_context('test_is_valid_im_4_and_up_neg_dist', 486, 4, False)
        # Assigning a type to the variable 'self' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_localization', localization)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_function_name', 'TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist')
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidInconsistent.test_is_valid_im_4_and_up_neg_dist', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_valid_im_4_and_up_neg_dist', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_valid_im_4_and_up_neg_dist(...)' code ##################

        
        
        # Call to xrange(...): (line 489)
        # Processing the call arguments (line 489)
        int_9260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 24), 'int')
        int_9261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 27), 'int')
        int_9262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 489, 31), 'int')
        # Processing the call keyword arguments (line 489)
        kwargs_9263 = {}
        # Getting the type of 'xrange' (line 489)
        xrange_9259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 489)
        xrange_call_result_9264 = invoke(stypy.reporting.localization.Localization(__file__, 489, 17), xrange_9259, *[int_9260, int_9261, int_9262], **kwargs_9263)
        
        # Testing the type of a for loop iterable (line 489)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 489, 8), xrange_call_result_9264)
        # Getting the type of the for loop variable (line 489)
        for_loop_var_9265 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 489, 8), xrange_call_result_9264)
        # Assigning a type to the variable 'i' (line 489)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 489, 8), 'i', for_loop_var_9265)
        # SSA begins for a for statement (line 489)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 490):
        
        # Assigning a Call to a Name (line 490):
        
        # Call to rand(...): (line 490)
        # Processing the call arguments (line 490)
        # Getting the type of 'i' (line 490)
        i_9269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 31), 'i', False)
        # Getting the type of 'i' (line 490)
        i_9270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 34), 'i', False)
        int_9271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 36), 'int')
        # Applying the binary operator '-' (line 490)
        result_sub_9272 = python_operator(stypy.reporting.localization.Localization(__file__, 490, 34), '-', i_9270, int_9271)
        
        # Applying the binary operator '*' (line 490)
        result_mul_9273 = python_operator(stypy.reporting.localization.Localization(__file__, 490, 31), '*', i_9269, result_sub_9272)
        
        int_9274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 40), 'int')
        # Applying the binary operator '//' (line 490)
        result_floordiv_9275 = python_operator(stypy.reporting.localization.Localization(__file__, 490, 38), '//', result_mul_9273, int_9274)
        
        # Processing the call keyword arguments (line 490)
        kwargs_9276 = {}
        # Getting the type of 'np' (line 490)
        np_9266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 490)
        random_9267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 16), np_9266, 'random')
        # Obtaining the member 'rand' of a type (line 490)
        rand_9268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 16), random_9267, 'rand')
        # Calling rand(args, kwargs) (line 490)
        rand_call_result_9277 = invoke(stypy.reporting.localization.Localization(__file__, 490, 16), rand_9268, *[result_floordiv_9275], **kwargs_9276)
        
        # Assigning a type to the variable 'y' (line 490)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 12), 'y', rand_call_result_9277)
        
        # Assigning a Call to a Name (line 491):
        
        # Assigning a Call to a Name (line 491):
        
        # Call to linkage(...): (line 491)
        # Processing the call arguments (line 491)
        # Getting the type of 'y' (line 491)
        y_9279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 24), 'y', False)
        # Processing the call keyword arguments (line 491)
        kwargs_9280 = {}
        # Getting the type of 'linkage' (line 491)
        linkage_9278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 491)
        linkage_call_result_9281 = invoke(stypy.reporting.localization.Localization(__file__, 491, 16), linkage_9278, *[y_9279], **kwargs_9280)
        
        # Assigning a type to the variable 'Z' (line 491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 12), 'Z', linkage_call_result_9281)
        
        # Assigning a Call to a Name (line 492):
        
        # Assigning a Call to a Name (line 492):
        
        # Call to inconsistent(...): (line 492)
        # Processing the call arguments (line 492)
        # Getting the type of 'Z' (line 492)
        Z_9283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 29), 'Z', False)
        # Processing the call keyword arguments (line 492)
        kwargs_9284 = {}
        # Getting the type of 'inconsistent' (line 492)
        inconsistent_9282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 16), 'inconsistent', False)
        # Calling inconsistent(args, kwargs) (line 492)
        inconsistent_call_result_9285 = invoke(stypy.reporting.localization.Localization(__file__, 492, 16), inconsistent_9282, *[Z_9283], **kwargs_9284)
        
        # Assigning a type to the variable 'R' (line 492)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 492, 12), 'R', inconsistent_call_result_9285)
        
        # Assigning a Num to a Subscript (line 493):
        
        # Assigning a Num to a Subscript (line 493):
        float_9286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 24), 'float')
        # Getting the type of 'R' (line 493)
        R_9287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 12), 'R')
        
        # Obtaining an instance of the builtin type 'tuple' (line 493)
        tuple_9288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 14), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 493)
        # Adding element type (line 493)
        # Getting the type of 'i' (line 493)
        i_9289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 14), 'i')
        int_9290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 17), 'int')
        # Applying the binary operator '//' (line 493)
        result_floordiv_9291 = python_operator(stypy.reporting.localization.Localization(__file__, 493, 14), '//', i_9289, int_9290)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 493, 14), tuple_9288, result_floordiv_9291)
        # Adding element type (line 493)
        int_9292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 19), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 493, 14), tuple_9288, int_9292)
        
        # Storing an element on a container (line 493)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 493, 12), R_9287, (tuple_9288, float_9286))
        
        # Call to assert_(...): (line 494)
        # Processing the call arguments (line 494)
        
        
        # Call to is_valid_im(...): (line 494)
        # Processing the call arguments (line 494)
        # Getting the type of 'R' (line 494)
        R_9295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 32), 'R', False)
        # Processing the call keyword arguments (line 494)
        kwargs_9296 = {}
        # Getting the type of 'is_valid_im' (line 494)
        is_valid_im_9294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 20), 'is_valid_im', False)
        # Calling is_valid_im(args, kwargs) (line 494)
        is_valid_im_call_result_9297 = invoke(stypy.reporting.localization.Localization(__file__, 494, 20), is_valid_im_9294, *[R_9295], **kwargs_9296)
        
        # Getting the type of 'False' (line 494)
        False_9298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 38), 'False', False)
        # Applying the binary operator '==' (line 494)
        result_eq_9299 = python_operator(stypy.reporting.localization.Localization(__file__, 494, 20), '==', is_valid_im_call_result_9297, False_9298)
        
        # Processing the call keyword arguments (line 494)
        kwargs_9300 = {}
        # Getting the type of 'assert_' (line 494)
        assert__9293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 494)
        assert__call_result_9301 = invoke(stypy.reporting.localization.Localization(__file__, 494, 12), assert__9293, *[result_eq_9299], **kwargs_9300)
        
        
        # Call to assert_raises(...): (line 495)
        # Processing the call arguments (line 495)
        # Getting the type of 'ValueError' (line 495)
        ValueError_9303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 26), 'ValueError', False)
        # Getting the type of 'is_valid_im' (line 495)
        is_valid_im_9304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 38), 'is_valid_im', False)
        # Getting the type of 'R' (line 495)
        R_9305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 51), 'R', False)
        # Processing the call keyword arguments (line 495)
        # Getting the type of 'True' (line 495)
        True_9306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 60), 'True', False)
        keyword_9307 = True_9306
        kwargs_9308 = {'throw': keyword_9307}
        # Getting the type of 'assert_raises' (line 495)
        assert_raises_9302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 12), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 495)
        assert_raises_call_result_9309 = invoke(stypy.reporting.localization.Localization(__file__, 495, 12), assert_raises_9302, *[ValueError_9303, is_valid_im_9304, R_9305], **kwargs_9308)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_is_valid_im_4_and_up_neg_dist(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_valid_im_4_and_up_neg_dist' in the type store
        # Getting the type of 'stypy_return_type' (line 486)
        stypy_return_type_9310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9310)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_valid_im_4_and_up_neg_dist'
        return stypy_return_type_9310


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 427, 0, False)
        # Assigning a type to the variable 'self' (line 428)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsValidInconsistent.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestIsValidInconsistent' (line 427)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 427, 0), 'TestIsValidInconsistent', TestIsValidInconsistent)
# Declaration of the 'TestNumObsLinkage' class

class TestNumObsLinkage(object, ):

    @norecursion
    def test_num_obs_linkage_empty(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_num_obs_linkage_empty'
        module_type_store = module_type_store.open_function_context('test_num_obs_linkage_empty', 499, 4, False)
        # Assigning a type to the variable 'self' (line 500)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_localization', localization)
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_function_name', 'TestNumObsLinkage.test_num_obs_linkage_empty')
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_param_names_list', [])
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestNumObsLinkage.test_num_obs_linkage_empty.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestNumObsLinkage.test_num_obs_linkage_empty', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_num_obs_linkage_empty', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_num_obs_linkage_empty(...)' code ##################

        
        # Assigning a Call to a Name (line 501):
        
        # Assigning a Call to a Name (line 501):
        
        # Call to zeros(...): (line 501)
        # Processing the call arguments (line 501)
        
        # Obtaining an instance of the builtin type 'tuple' (line 501)
        tuple_9313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 501)
        # Adding element type (line 501)
        int_9314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 501, 22), tuple_9313, int_9314)
        # Adding element type (line 501)
        int_9315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 501, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 501, 22), tuple_9313, int_9315)
        
        # Processing the call keyword arguments (line 501)
        # Getting the type of 'np' (line 501)
        np_9316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 35), 'np', False)
        # Obtaining the member 'double' of a type (line 501)
        double_9317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 35), np_9316, 'double')
        keyword_9318 = double_9317
        kwargs_9319 = {'dtype': keyword_9318}
        # Getting the type of 'np' (line 501)
        np_9311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 501)
        zeros_9312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 12), np_9311, 'zeros')
        # Calling zeros(args, kwargs) (line 501)
        zeros_call_result_9320 = invoke(stypy.reporting.localization.Localization(__file__, 501, 12), zeros_9312, *[tuple_9313], **kwargs_9319)
        
        # Assigning a type to the variable 'Z' (line 501)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 501, 8), 'Z', zeros_call_result_9320)
        
        # Call to assert_raises(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'ValueError' (line 502)
        ValueError_9322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 22), 'ValueError', False)
        # Getting the type of 'num_obs_linkage' (line 502)
        num_obs_linkage_9323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 34), 'num_obs_linkage', False)
        # Getting the type of 'Z' (line 502)
        Z_9324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 51), 'Z', False)
        # Processing the call keyword arguments (line 502)
        kwargs_9325 = {}
        # Getting the type of 'assert_raises' (line 502)
        assert_raises_9321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 502)
        assert_raises_call_result_9326 = invoke(stypy.reporting.localization.Localization(__file__, 502, 8), assert_raises_9321, *[ValueError_9322, num_obs_linkage_9323, Z_9324], **kwargs_9325)
        
        
        # ################# End of 'test_num_obs_linkage_empty(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_num_obs_linkage_empty' in the type store
        # Getting the type of 'stypy_return_type' (line 499)
        stypy_return_type_9327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9327)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_num_obs_linkage_empty'
        return stypy_return_type_9327


    @norecursion
    def test_num_obs_linkage_1x4(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_num_obs_linkage_1x4'
        module_type_store = module_type_store.open_function_context('test_num_obs_linkage_1x4', 504, 4, False)
        # Assigning a type to the variable 'self' (line 505)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 505, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_localization', localization)
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_function_name', 'TestNumObsLinkage.test_num_obs_linkage_1x4')
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_param_names_list', [])
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestNumObsLinkage.test_num_obs_linkage_1x4.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestNumObsLinkage.test_num_obs_linkage_1x4', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_num_obs_linkage_1x4', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_num_obs_linkage_1x4(...)' code ##################

        
        # Assigning a Call to a Name (line 506):
        
        # Assigning a Call to a Name (line 506):
        
        # Call to asarray(...): (line 506)
        # Processing the call arguments (line 506)
        
        # Obtaining an instance of the builtin type 'list' (line 506)
        list_9330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 506)
        # Adding element type (line 506)
        
        # Obtaining an instance of the builtin type 'list' (line 506)
        list_9331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 506)
        # Adding element type (line 506)
        int_9332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 24), list_9331, int_9332)
        # Adding element type (line 506)
        int_9333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 24), list_9331, int_9333)
        # Adding element type (line 506)
        float_9334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 24), list_9331, float_9334)
        # Adding element type (line 506)
        int_9335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 24), list_9331, int_9335)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 23), list_9330, list_9331)
        
        # Processing the call keyword arguments (line 506)
        # Getting the type of 'np' (line 506)
        np_9336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 506)
        double_9337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 47), np_9336, 'double')
        keyword_9338 = double_9337
        kwargs_9339 = {'dtype': keyword_9338}
        # Getting the type of 'np' (line 506)
        np_9328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 506)
        asarray_9329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 12), np_9328, 'asarray')
        # Calling asarray(args, kwargs) (line 506)
        asarray_call_result_9340 = invoke(stypy.reporting.localization.Localization(__file__, 506, 12), asarray_9329, *[list_9330], **kwargs_9339)
        
        # Assigning a type to the variable 'Z' (line 506)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 8), 'Z', asarray_call_result_9340)
        
        # Call to assert_equal(...): (line 507)
        # Processing the call arguments (line 507)
        
        # Call to num_obs_linkage(...): (line 507)
        # Processing the call arguments (line 507)
        # Getting the type of 'Z' (line 507)
        Z_9343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 37), 'Z', False)
        # Processing the call keyword arguments (line 507)
        kwargs_9344 = {}
        # Getting the type of 'num_obs_linkage' (line 507)
        num_obs_linkage_9342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 21), 'num_obs_linkage', False)
        # Calling num_obs_linkage(args, kwargs) (line 507)
        num_obs_linkage_call_result_9345 = invoke(stypy.reporting.localization.Localization(__file__, 507, 21), num_obs_linkage_9342, *[Z_9343], **kwargs_9344)
        
        int_9346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 41), 'int')
        # Processing the call keyword arguments (line 507)
        kwargs_9347 = {}
        # Getting the type of 'assert_equal' (line 507)
        assert_equal_9341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 507)
        assert_equal_call_result_9348 = invoke(stypy.reporting.localization.Localization(__file__, 507, 8), assert_equal_9341, *[num_obs_linkage_call_result_9345, int_9346], **kwargs_9347)
        
        
        # ################# End of 'test_num_obs_linkage_1x4(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_num_obs_linkage_1x4' in the type store
        # Getting the type of 'stypy_return_type' (line 504)
        stypy_return_type_9349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9349)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_num_obs_linkage_1x4'
        return stypy_return_type_9349


    @norecursion
    def test_num_obs_linkage_2x4(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_num_obs_linkage_2x4'
        module_type_store = module_type_store.open_function_context('test_num_obs_linkage_2x4', 509, 4, False)
        # Assigning a type to the variable 'self' (line 510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_localization', localization)
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_function_name', 'TestNumObsLinkage.test_num_obs_linkage_2x4')
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_param_names_list', [])
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestNumObsLinkage.test_num_obs_linkage_2x4.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestNumObsLinkage.test_num_obs_linkage_2x4', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_num_obs_linkage_2x4', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_num_obs_linkage_2x4(...)' code ##################

        
        # Assigning a Call to a Name (line 511):
        
        # Assigning a Call to a Name (line 511):
        
        # Call to asarray(...): (line 511)
        # Processing the call arguments (line 511)
        
        # Obtaining an instance of the builtin type 'list' (line 511)
        list_9352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 511)
        # Adding element type (line 511)
        
        # Obtaining an instance of the builtin type 'list' (line 511)
        list_9353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 511)
        # Adding element type (line 511)
        int_9354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 511, 24), list_9353, int_9354)
        # Adding element type (line 511)
        int_9355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 511, 24), list_9353, int_9355)
        # Adding element type (line 511)
        float_9356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 511, 24), list_9353, float_9356)
        # Adding element type (line 511)
        int_9357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 511, 24), list_9353, int_9357)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 511, 23), list_9352, list_9353)
        # Adding element type (line 511)
        
        # Obtaining an instance of the builtin type 'list' (line 512)
        list_9358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 512)
        # Adding element type (line 512)
        int_9359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 512, 24), list_9358, int_9359)
        # Adding element type (line 512)
        int_9360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 512, 24), list_9358, int_9360)
        # Adding element type (line 512)
        float_9361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 512, 24), list_9358, float_9361)
        # Adding element type (line 512)
        int_9362 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 512, 24), list_9358, int_9362)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 511, 23), list_9352, list_9358)
        
        # Processing the call keyword arguments (line 511)
        # Getting the type of 'np' (line 512)
        np_9363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 512)
        double_9364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 512, 47), np_9363, 'double')
        keyword_9365 = double_9364
        kwargs_9366 = {'dtype': keyword_9365}
        # Getting the type of 'np' (line 511)
        np_9350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 511)
        asarray_9351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 511, 12), np_9350, 'asarray')
        # Calling asarray(args, kwargs) (line 511)
        asarray_call_result_9367 = invoke(stypy.reporting.localization.Localization(__file__, 511, 12), asarray_9351, *[list_9352], **kwargs_9366)
        
        # Assigning a type to the variable 'Z' (line 511)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 511, 8), 'Z', asarray_call_result_9367)
        
        # Call to assert_equal(...): (line 513)
        # Processing the call arguments (line 513)
        
        # Call to num_obs_linkage(...): (line 513)
        # Processing the call arguments (line 513)
        # Getting the type of 'Z' (line 513)
        Z_9370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 37), 'Z', False)
        # Processing the call keyword arguments (line 513)
        kwargs_9371 = {}
        # Getting the type of 'num_obs_linkage' (line 513)
        num_obs_linkage_9369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 21), 'num_obs_linkage', False)
        # Calling num_obs_linkage(args, kwargs) (line 513)
        num_obs_linkage_call_result_9372 = invoke(stypy.reporting.localization.Localization(__file__, 513, 21), num_obs_linkage_9369, *[Z_9370], **kwargs_9371)
        
        int_9373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 41), 'int')
        # Processing the call keyword arguments (line 513)
        kwargs_9374 = {}
        # Getting the type of 'assert_equal' (line 513)
        assert_equal_9368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 513)
        assert_equal_call_result_9375 = invoke(stypy.reporting.localization.Localization(__file__, 513, 8), assert_equal_9368, *[num_obs_linkage_call_result_9372, int_9373], **kwargs_9374)
        
        
        # ################# End of 'test_num_obs_linkage_2x4(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_num_obs_linkage_2x4' in the type store
        # Getting the type of 'stypy_return_type' (line 509)
        stypy_return_type_9376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9376)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_num_obs_linkage_2x4'
        return stypy_return_type_9376


    @norecursion
    def test_num_obs_linkage_4_and_up(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_num_obs_linkage_4_and_up'
        module_type_store = module_type_store.open_function_context('test_num_obs_linkage_4_and_up', 515, 4, False)
        # Assigning a type to the variable 'self' (line 516)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 516, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_localization', localization)
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_function_name', 'TestNumObsLinkage.test_num_obs_linkage_4_and_up')
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_param_names_list', [])
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestNumObsLinkage.test_num_obs_linkage_4_and_up.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestNumObsLinkage.test_num_obs_linkage_4_and_up', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_num_obs_linkage_4_and_up', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_num_obs_linkage_4_and_up(...)' code ##################

        
        
        # Call to xrange(...): (line 518)
        # Processing the call arguments (line 518)
        int_9378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 24), 'int')
        int_9379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 27), 'int')
        int_9380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 31), 'int')
        # Processing the call keyword arguments (line 518)
        kwargs_9381 = {}
        # Getting the type of 'xrange' (line 518)
        xrange_9377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 518)
        xrange_call_result_9382 = invoke(stypy.reporting.localization.Localization(__file__, 518, 17), xrange_9377, *[int_9378, int_9379, int_9380], **kwargs_9381)
        
        # Testing the type of a for loop iterable (line 518)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 518, 8), xrange_call_result_9382)
        # Getting the type of the for loop variable (line 518)
        for_loop_var_9383 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 518, 8), xrange_call_result_9382)
        # Assigning a type to the variable 'i' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'i', for_loop_var_9383)
        # SSA begins for a for statement (line 518)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 519):
        
        # Assigning a Call to a Name (line 519):
        
        # Call to rand(...): (line 519)
        # Processing the call arguments (line 519)
        # Getting the type of 'i' (line 519)
        i_9387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 31), 'i', False)
        # Getting the type of 'i' (line 519)
        i_9388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 34), 'i', False)
        int_9389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 36), 'int')
        # Applying the binary operator '-' (line 519)
        result_sub_9390 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 34), '-', i_9388, int_9389)
        
        # Applying the binary operator '*' (line 519)
        result_mul_9391 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 31), '*', i_9387, result_sub_9390)
        
        int_9392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 519, 40), 'int')
        # Applying the binary operator '//' (line 519)
        result_floordiv_9393 = python_operator(stypy.reporting.localization.Localization(__file__, 519, 38), '//', result_mul_9391, int_9392)
        
        # Processing the call keyword arguments (line 519)
        kwargs_9394 = {}
        # Getting the type of 'np' (line 519)
        np_9384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 519)
        random_9385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 16), np_9384, 'random')
        # Obtaining the member 'rand' of a type (line 519)
        rand_9386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 519, 16), random_9385, 'rand')
        # Calling rand(args, kwargs) (line 519)
        rand_call_result_9395 = invoke(stypy.reporting.localization.Localization(__file__, 519, 16), rand_9386, *[result_floordiv_9393], **kwargs_9394)
        
        # Assigning a type to the variable 'y' (line 519)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 519, 12), 'y', rand_call_result_9395)
        
        # Assigning a Call to a Name (line 520):
        
        # Assigning a Call to a Name (line 520):
        
        # Call to linkage(...): (line 520)
        # Processing the call arguments (line 520)
        # Getting the type of 'y' (line 520)
        y_9397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 24), 'y', False)
        # Processing the call keyword arguments (line 520)
        kwargs_9398 = {}
        # Getting the type of 'linkage' (line 520)
        linkage_9396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 520)
        linkage_call_result_9399 = invoke(stypy.reporting.localization.Localization(__file__, 520, 16), linkage_9396, *[y_9397], **kwargs_9398)
        
        # Assigning a type to the variable 'Z' (line 520)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 520, 12), 'Z', linkage_call_result_9399)
        
        # Call to assert_equal(...): (line 521)
        # Processing the call arguments (line 521)
        
        # Call to num_obs_linkage(...): (line 521)
        # Processing the call arguments (line 521)
        # Getting the type of 'Z' (line 521)
        Z_9402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 41), 'Z', False)
        # Processing the call keyword arguments (line 521)
        kwargs_9403 = {}
        # Getting the type of 'num_obs_linkage' (line 521)
        num_obs_linkage_9401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 25), 'num_obs_linkage', False)
        # Calling num_obs_linkage(args, kwargs) (line 521)
        num_obs_linkage_call_result_9404 = invoke(stypy.reporting.localization.Localization(__file__, 521, 25), num_obs_linkage_9401, *[Z_9402], **kwargs_9403)
        
        # Getting the type of 'i' (line 521)
        i_9405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 45), 'i', False)
        # Processing the call keyword arguments (line 521)
        kwargs_9406 = {}
        # Getting the type of 'assert_equal' (line 521)
        assert_equal_9400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 521)
        assert_equal_call_result_9407 = invoke(stypy.reporting.localization.Localization(__file__, 521, 12), assert_equal_9400, *[num_obs_linkage_call_result_9404, i_9405], **kwargs_9406)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_num_obs_linkage_4_and_up(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_num_obs_linkage_4_and_up' in the type store
        # Getting the type of 'stypy_return_type' (line 515)
        stypy_return_type_9408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9408)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_num_obs_linkage_4_and_up'
        return stypy_return_type_9408


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 498, 0, False)
        # Assigning a type to the variable 'self' (line 499)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 499, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestNumObsLinkage.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestNumObsLinkage' (line 498)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 0), 'TestNumObsLinkage', TestNumObsLinkage)
# Declaration of the 'TestLeavesList' class

class TestLeavesList(object, ):

    @norecursion
    def test_leaves_list_1x4(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_leaves_list_1x4'
        module_type_store = module_type_store.open_function_context('test_leaves_list_1x4', 525, 4, False)
        # Assigning a type to the variable 'self' (line 526)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 526, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_localization', localization)
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_function_name', 'TestLeavesList.test_leaves_list_1x4')
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeavesList.test_leaves_list_1x4.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeavesList.test_leaves_list_1x4', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_leaves_list_1x4', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_leaves_list_1x4(...)' code ##################

        
        # Assigning a Call to a Name (line 527):
        
        # Assigning a Call to a Name (line 527):
        
        # Call to asarray(...): (line 527)
        # Processing the call arguments (line 527)
        
        # Obtaining an instance of the builtin type 'list' (line 527)
        list_9411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 527)
        # Adding element type (line 527)
        
        # Obtaining an instance of the builtin type 'list' (line 527)
        list_9412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 527)
        # Adding element type (line 527)
        int_9413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 24), list_9412, int_9413)
        # Adding element type (line 527)
        int_9414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 24), list_9412, int_9414)
        # Adding element type (line 527)
        float_9415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 24), list_9412, float_9415)
        # Adding element type (line 527)
        int_9416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 24), list_9412, int_9416)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 23), list_9411, list_9412)
        
        # Processing the call keyword arguments (line 527)
        # Getting the type of 'np' (line 527)
        np_9417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 527)
        double_9418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 47), np_9417, 'double')
        keyword_9419 = double_9418
        kwargs_9420 = {'dtype': keyword_9419}
        # Getting the type of 'np' (line 527)
        np_9409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 527)
        asarray_9410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 12), np_9409, 'asarray')
        # Calling asarray(args, kwargs) (line 527)
        asarray_call_result_9421 = invoke(stypy.reporting.localization.Localization(__file__, 527, 12), asarray_9410, *[list_9411], **kwargs_9420)
        
        # Assigning a type to the variable 'Z' (line 527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 8), 'Z', asarray_call_result_9421)
        
        # Call to to_tree(...): (line 528)
        # Processing the call arguments (line 528)
        # Getting the type of 'Z' (line 528)
        Z_9423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 16), 'Z', False)
        # Processing the call keyword arguments (line 528)
        kwargs_9424 = {}
        # Getting the type of 'to_tree' (line 528)
        to_tree_9422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 8), 'to_tree', False)
        # Calling to_tree(args, kwargs) (line 528)
        to_tree_call_result_9425 = invoke(stypy.reporting.localization.Localization(__file__, 528, 8), to_tree_9422, *[Z_9423], **kwargs_9424)
        
        
        # Call to assert_equal(...): (line 529)
        # Processing the call arguments (line 529)
        
        # Call to leaves_list(...): (line 529)
        # Processing the call arguments (line 529)
        # Getting the type of 'Z' (line 529)
        Z_9428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 33), 'Z', False)
        # Processing the call keyword arguments (line 529)
        kwargs_9429 = {}
        # Getting the type of 'leaves_list' (line 529)
        leaves_list_9427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 21), 'leaves_list', False)
        # Calling leaves_list(args, kwargs) (line 529)
        leaves_list_call_result_9430 = invoke(stypy.reporting.localization.Localization(__file__, 529, 21), leaves_list_9427, *[Z_9428], **kwargs_9429)
        
        
        # Obtaining an instance of the builtin type 'list' (line 529)
        list_9431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 37), 'list')
        # Adding type elements to the builtin type 'list' instance (line 529)
        # Adding element type (line 529)
        int_9432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 529, 37), list_9431, int_9432)
        # Adding element type (line 529)
        int_9433 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 529, 37), list_9431, int_9433)
        
        # Processing the call keyword arguments (line 529)
        kwargs_9434 = {}
        # Getting the type of 'assert_equal' (line 529)
        assert_equal_9426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 529)
        assert_equal_call_result_9435 = invoke(stypy.reporting.localization.Localization(__file__, 529, 8), assert_equal_9426, *[leaves_list_call_result_9430, list_9431], **kwargs_9434)
        
        
        # ################# End of 'test_leaves_list_1x4(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_leaves_list_1x4' in the type store
        # Getting the type of 'stypy_return_type' (line 525)
        stypy_return_type_9436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9436)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_leaves_list_1x4'
        return stypy_return_type_9436


    @norecursion
    def test_leaves_list_2x4(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_leaves_list_2x4'
        module_type_store = module_type_store.open_function_context('test_leaves_list_2x4', 531, 4, False)
        # Assigning a type to the variable 'self' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_localization', localization)
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_function_name', 'TestLeavesList.test_leaves_list_2x4')
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeavesList.test_leaves_list_2x4.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeavesList.test_leaves_list_2x4', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_leaves_list_2x4', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_leaves_list_2x4(...)' code ##################

        
        # Assigning a Call to a Name (line 533):
        
        # Assigning a Call to a Name (line 533):
        
        # Call to asarray(...): (line 533)
        # Processing the call arguments (line 533)
        
        # Obtaining an instance of the builtin type 'list' (line 533)
        list_9439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 533)
        # Adding element type (line 533)
        
        # Obtaining an instance of the builtin type 'list' (line 533)
        list_9440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 533)
        # Adding element type (line 533)
        int_9441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 24), list_9440, int_9441)
        # Adding element type (line 533)
        int_9442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 24), list_9440, int_9442)
        # Adding element type (line 533)
        float_9443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 24), list_9440, float_9443)
        # Adding element type (line 533)
        int_9444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 24), list_9440, int_9444)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 23), list_9439, list_9440)
        # Adding element type (line 533)
        
        # Obtaining an instance of the builtin type 'list' (line 534)
        list_9445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 534)
        # Adding element type (line 534)
        int_9446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 24), list_9445, int_9446)
        # Adding element type (line 534)
        int_9447 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 24), list_9445, int_9447)
        # Adding element type (line 534)
        float_9448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 24), list_9445, float_9448)
        # Adding element type (line 534)
        int_9449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 24), list_9445, int_9449)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 23), list_9439, list_9445)
        
        # Processing the call keyword arguments (line 533)
        # Getting the type of 'np' (line 534)
        np_9450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 534)
        double_9451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 47), np_9450, 'double')
        keyword_9452 = double_9451
        kwargs_9453 = {'dtype': keyword_9452}
        # Getting the type of 'np' (line 533)
        np_9437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 533)
        asarray_9438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 12), np_9437, 'asarray')
        # Calling asarray(args, kwargs) (line 533)
        asarray_call_result_9454 = invoke(stypy.reporting.localization.Localization(__file__, 533, 12), asarray_9438, *[list_9439], **kwargs_9453)
        
        # Assigning a type to the variable 'Z' (line 533)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 533, 8), 'Z', asarray_call_result_9454)
        
        # Call to to_tree(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'Z' (line 535)
        Z_9456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 16), 'Z', False)
        # Processing the call keyword arguments (line 535)
        kwargs_9457 = {}
        # Getting the type of 'to_tree' (line 535)
        to_tree_9455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 8), 'to_tree', False)
        # Calling to_tree(args, kwargs) (line 535)
        to_tree_call_result_9458 = invoke(stypy.reporting.localization.Localization(__file__, 535, 8), to_tree_9455, *[Z_9456], **kwargs_9457)
        
        
        # Call to assert_equal(...): (line 536)
        # Processing the call arguments (line 536)
        
        # Call to leaves_list(...): (line 536)
        # Processing the call arguments (line 536)
        # Getting the type of 'Z' (line 536)
        Z_9461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 33), 'Z', False)
        # Processing the call keyword arguments (line 536)
        kwargs_9462 = {}
        # Getting the type of 'leaves_list' (line 536)
        leaves_list_9460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 21), 'leaves_list', False)
        # Calling leaves_list(args, kwargs) (line 536)
        leaves_list_call_result_9463 = invoke(stypy.reporting.localization.Localization(__file__, 536, 21), leaves_list_9460, *[Z_9461], **kwargs_9462)
        
        
        # Obtaining an instance of the builtin type 'list' (line 536)
        list_9464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 37), 'list')
        # Adding type elements to the builtin type 'list' instance (line 536)
        # Adding element type (line 536)
        int_9465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 37), list_9464, int_9465)
        # Adding element type (line 536)
        int_9466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 37), list_9464, int_9466)
        # Adding element type (line 536)
        int_9467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 536, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 536, 37), list_9464, int_9467)
        
        # Processing the call keyword arguments (line 536)
        kwargs_9468 = {}
        # Getting the type of 'assert_equal' (line 536)
        assert_equal_9459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 536)
        assert_equal_call_result_9469 = invoke(stypy.reporting.localization.Localization(__file__, 536, 8), assert_equal_9459, *[leaves_list_call_result_9463, list_9464], **kwargs_9468)
        
        
        # ################# End of 'test_leaves_list_2x4(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_leaves_list_2x4' in the type store
        # Getting the type of 'stypy_return_type' (line 531)
        stypy_return_type_9470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9470)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_leaves_list_2x4'
        return stypy_return_type_9470


    @norecursion
    def test_leaves_list_Q(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_leaves_list_Q'
        module_type_store = module_type_store.open_function_context('test_leaves_list_Q', 538, 4, False)
        # Assigning a type to the variable 'self' (line 539)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_localization', localization)
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_function_name', 'TestLeavesList.test_leaves_list_Q')
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeavesList.test_leaves_list_Q.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeavesList.test_leaves_list_Q', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_leaves_list_Q', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_leaves_list_Q(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 539)
        list_9471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 539)
        # Adding element type (line 539)
        str_9472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 23), 'str', 'single')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 22), list_9471, str_9472)
        # Adding element type (line 539)
        str_9473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 33), 'str', 'complete')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 22), list_9471, str_9473)
        # Adding element type (line 539)
        str_9474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 45), 'str', 'average')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 22), list_9471, str_9474)
        # Adding element type (line 539)
        str_9475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 56), 'str', 'weighted')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 22), list_9471, str_9475)
        # Adding element type (line 539)
        str_9476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 539, 68), 'str', 'centroid')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 22), list_9471, str_9476)
        # Adding element type (line 539)
        str_9477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 23), 'str', 'median')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 22), list_9471, str_9477)
        # Adding element type (line 539)
        str_9478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 33), 'str', 'ward')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 539, 22), list_9471, str_9478)
        
        # Testing the type of a for loop iterable (line 539)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 539, 8), list_9471)
        # Getting the type of the for loop variable (line 539)
        for_loop_var_9479 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 539, 8), list_9471)
        # Assigning a type to the variable 'method' (line 539)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 8), 'method', for_loop_var_9479)
        # SSA begins for a for statement (line 539)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_leaves_list_Q(...): (line 541)
        # Processing the call arguments (line 541)
        # Getting the type of 'method' (line 541)
        method_9482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 37), 'method', False)
        # Processing the call keyword arguments (line 541)
        kwargs_9483 = {}
        # Getting the type of 'self' (line 541)
        self_9480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 12), 'self', False)
        # Obtaining the member 'check_leaves_list_Q' of a type (line 541)
        check_leaves_list_Q_9481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 12), self_9480, 'check_leaves_list_Q')
        # Calling check_leaves_list_Q(args, kwargs) (line 541)
        check_leaves_list_Q_call_result_9484 = invoke(stypy.reporting.localization.Localization(__file__, 541, 12), check_leaves_list_Q_9481, *[method_9482], **kwargs_9483)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_leaves_list_Q(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_leaves_list_Q' in the type store
        # Getting the type of 'stypy_return_type' (line 538)
        stypy_return_type_9485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9485)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_leaves_list_Q'
        return stypy_return_type_9485


    @norecursion
    def check_leaves_list_Q(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_leaves_list_Q'
        module_type_store = module_type_store.open_function_context('check_leaves_list_Q', 543, 4, False)
        # Assigning a type to the variable 'self' (line 544)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 544, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_localization', localization)
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_function_name', 'TestLeavesList.check_leaves_list_Q')
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_param_names_list', ['method'])
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeavesList.check_leaves_list_Q.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeavesList.check_leaves_list_Q', ['method'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_leaves_list_Q', localization, ['method'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_leaves_list_Q(...)' code ##################

        
        # Assigning a Attribute to a Name (line 545):
        
        # Assigning a Attribute to a Name (line 545):
        # Getting the type of 'hierarchy_test_data' (line 545)
        hierarchy_test_data_9486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 12), 'hierarchy_test_data')
        # Obtaining the member 'Q_X' of a type (line 545)
        Q_X_9487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 12), hierarchy_test_data_9486, 'Q_X')
        # Assigning a type to the variable 'X' (line 545)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 8), 'X', Q_X_9487)
        
        # Assigning a Call to a Name (line 546):
        
        # Assigning a Call to a Name (line 546):
        
        # Call to linkage(...): (line 546)
        # Processing the call arguments (line 546)
        # Getting the type of 'X' (line 546)
        X_9489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 20), 'X', False)
        # Getting the type of 'method' (line 546)
        method_9490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 23), 'method', False)
        # Processing the call keyword arguments (line 546)
        kwargs_9491 = {}
        # Getting the type of 'linkage' (line 546)
        linkage_9488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 546)
        linkage_call_result_9492 = invoke(stypy.reporting.localization.Localization(__file__, 546, 12), linkage_9488, *[X_9489, method_9490], **kwargs_9491)
        
        # Assigning a type to the variable 'Z' (line 546)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 8), 'Z', linkage_call_result_9492)
        
        # Assigning a Call to a Name (line 547):
        
        # Assigning a Call to a Name (line 547):
        
        # Call to to_tree(...): (line 547)
        # Processing the call arguments (line 547)
        # Getting the type of 'Z' (line 547)
        Z_9494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 23), 'Z', False)
        # Processing the call keyword arguments (line 547)
        kwargs_9495 = {}
        # Getting the type of 'to_tree' (line 547)
        to_tree_9493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 15), 'to_tree', False)
        # Calling to_tree(args, kwargs) (line 547)
        to_tree_call_result_9496 = invoke(stypy.reporting.localization.Localization(__file__, 547, 15), to_tree_9493, *[Z_9494], **kwargs_9495)
        
        # Assigning a type to the variable 'node' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'node', to_tree_call_result_9496)
        
        # Call to assert_equal(...): (line 548)
        # Processing the call arguments (line 548)
        
        # Call to pre_order(...): (line 548)
        # Processing the call keyword arguments (line 548)
        kwargs_9500 = {}
        # Getting the type of 'node' (line 548)
        node_9498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 21), 'node', False)
        # Obtaining the member 'pre_order' of a type (line 548)
        pre_order_9499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 548, 21), node_9498, 'pre_order')
        # Calling pre_order(args, kwargs) (line 548)
        pre_order_call_result_9501 = invoke(stypy.reporting.localization.Localization(__file__, 548, 21), pre_order_9499, *[], **kwargs_9500)
        
        
        # Call to leaves_list(...): (line 548)
        # Processing the call arguments (line 548)
        # Getting the type of 'Z' (line 548)
        Z_9503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 51), 'Z', False)
        # Processing the call keyword arguments (line 548)
        kwargs_9504 = {}
        # Getting the type of 'leaves_list' (line 548)
        leaves_list_9502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 39), 'leaves_list', False)
        # Calling leaves_list(args, kwargs) (line 548)
        leaves_list_call_result_9505 = invoke(stypy.reporting.localization.Localization(__file__, 548, 39), leaves_list_9502, *[Z_9503], **kwargs_9504)
        
        # Processing the call keyword arguments (line 548)
        kwargs_9506 = {}
        # Getting the type of 'assert_equal' (line 548)
        assert_equal_9497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 548)
        assert_equal_call_result_9507 = invoke(stypy.reporting.localization.Localization(__file__, 548, 8), assert_equal_9497, *[pre_order_call_result_9501, leaves_list_call_result_9505], **kwargs_9506)
        
        
        # ################# End of 'check_leaves_list_Q(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_leaves_list_Q' in the type store
        # Getting the type of 'stypy_return_type' (line 543)
        stypy_return_type_9508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9508)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_leaves_list_Q'
        return stypy_return_type_9508


    @norecursion
    def test_Q_subtree_pre_order(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_Q_subtree_pre_order'
        module_type_store = module_type_store.open_function_context('test_Q_subtree_pre_order', 550, 4, False)
        # Assigning a type to the variable 'self' (line 551)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_localization', localization)
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_function_name', 'TestLeavesList.test_Q_subtree_pre_order')
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_param_names_list', [])
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestLeavesList.test_Q_subtree_pre_order.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeavesList.test_Q_subtree_pre_order', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_Q_subtree_pre_order', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_Q_subtree_pre_order(...)' code ##################

        
        # Assigning a Attribute to a Name (line 552):
        
        # Assigning a Attribute to a Name (line 552):
        # Getting the type of 'hierarchy_test_data' (line 552)
        hierarchy_test_data_9509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 12), 'hierarchy_test_data')
        # Obtaining the member 'Q_X' of a type (line 552)
        Q_X_9510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 12), hierarchy_test_data_9509, 'Q_X')
        # Assigning a type to the variable 'X' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'X', Q_X_9510)
        
        # Assigning a Call to a Name (line 553):
        
        # Assigning a Call to a Name (line 553):
        
        # Call to linkage(...): (line 553)
        # Processing the call arguments (line 553)
        # Getting the type of 'X' (line 553)
        X_9512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 20), 'X', False)
        str_9513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 553, 23), 'str', 'single')
        # Processing the call keyword arguments (line 553)
        kwargs_9514 = {}
        # Getting the type of 'linkage' (line 553)
        linkage_9511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 553)
        linkage_call_result_9515 = invoke(stypy.reporting.localization.Localization(__file__, 553, 12), linkage_9511, *[X_9512, str_9513], **kwargs_9514)
        
        # Assigning a type to the variable 'Z' (line 553)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 553, 8), 'Z', linkage_call_result_9515)
        
        # Assigning a Call to a Name (line 554):
        
        # Assigning a Call to a Name (line 554):
        
        # Call to to_tree(...): (line 554)
        # Processing the call arguments (line 554)
        # Getting the type of 'Z' (line 554)
        Z_9517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 23), 'Z', False)
        # Processing the call keyword arguments (line 554)
        kwargs_9518 = {}
        # Getting the type of 'to_tree' (line 554)
        to_tree_9516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 15), 'to_tree', False)
        # Calling to_tree(args, kwargs) (line 554)
        to_tree_call_result_9519 = invoke(stypy.reporting.localization.Localization(__file__, 554, 15), to_tree_9516, *[Z_9517], **kwargs_9518)
        
        # Assigning a type to the variable 'node' (line 554)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 554, 8), 'node', to_tree_call_result_9519)
        
        # Call to assert_equal(...): (line 555)
        # Processing the call arguments (line 555)
        
        # Call to pre_order(...): (line 555)
        # Processing the call keyword arguments (line 555)
        kwargs_9523 = {}
        # Getting the type of 'node' (line 555)
        node_9521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 21), 'node', False)
        # Obtaining the member 'pre_order' of a type (line 555)
        pre_order_9522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 21), node_9521, 'pre_order')
        # Calling pre_order(args, kwargs) (line 555)
        pre_order_call_result_9524 = invoke(stypy.reporting.localization.Localization(__file__, 555, 21), pre_order_9522, *[], **kwargs_9523)
        
        
        # Call to pre_order(...): (line 555)
        # Processing the call keyword arguments (line 555)
        kwargs_9530 = {}
        
        # Call to get_left(...): (line 555)
        # Processing the call keyword arguments (line 555)
        kwargs_9527 = {}
        # Getting the type of 'node' (line 555)
        node_9525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 40), 'node', False)
        # Obtaining the member 'get_left' of a type (line 555)
        get_left_9526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 40), node_9525, 'get_left')
        # Calling get_left(args, kwargs) (line 555)
        get_left_call_result_9528 = invoke(stypy.reporting.localization.Localization(__file__, 555, 40), get_left_9526, *[], **kwargs_9527)
        
        # Obtaining the member 'pre_order' of a type (line 555)
        pre_order_9529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 40), get_left_call_result_9528, 'pre_order')
        # Calling pre_order(args, kwargs) (line 555)
        pre_order_call_result_9531 = invoke(stypy.reporting.localization.Localization(__file__, 555, 40), pre_order_9529, *[], **kwargs_9530)
        
        
        # Call to pre_order(...): (line 556)
        # Processing the call keyword arguments (line 556)
        kwargs_9537 = {}
        
        # Call to get_right(...): (line 556)
        # Processing the call keyword arguments (line 556)
        kwargs_9534 = {}
        # Getting the type of 'node' (line 556)
        node_9532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 42), 'node', False)
        # Obtaining the member 'get_right' of a type (line 556)
        get_right_9533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 42), node_9532, 'get_right')
        # Calling get_right(args, kwargs) (line 556)
        get_right_call_result_9535 = invoke(stypy.reporting.localization.Localization(__file__, 556, 42), get_right_9533, *[], **kwargs_9534)
        
        # Obtaining the member 'pre_order' of a type (line 556)
        pre_order_9536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 42), get_right_call_result_9535, 'pre_order')
        # Calling pre_order(args, kwargs) (line 556)
        pre_order_call_result_9538 = invoke(stypy.reporting.localization.Localization(__file__, 556, 42), pre_order_9536, *[], **kwargs_9537)
        
        # Applying the binary operator '+' (line 555)
        result_add_9539 = python_operator(stypy.reporting.localization.Localization(__file__, 555, 40), '+', pre_order_call_result_9531, pre_order_call_result_9538)
        
        # Processing the call keyword arguments (line 555)
        kwargs_9540 = {}
        # Getting the type of 'assert_equal' (line 555)
        assert_equal_9520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 555)
        assert_equal_call_result_9541 = invoke(stypy.reporting.localization.Localization(__file__, 555, 8), assert_equal_9520, *[pre_order_call_result_9524, result_add_9539], **kwargs_9540)
        
        
        # ################# End of 'test_Q_subtree_pre_order(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_Q_subtree_pre_order' in the type store
        # Getting the type of 'stypy_return_type' (line 550)
        stypy_return_type_9542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9542)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_Q_subtree_pre_order'
        return stypy_return_type_9542


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 524, 0, False)
        # Assigning a type to the variable 'self' (line 525)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 525, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestLeavesList.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestLeavesList' (line 524)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 0), 'TestLeavesList', TestLeavesList)
# Declaration of the 'TestCorrespond' class

class TestCorrespond(object, ):

    @norecursion
    def test_correspond_empty(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_correspond_empty'
        module_type_store = module_type_store.open_function_context('test_correspond_empty', 560, 4, False)
        # Assigning a type to the variable 'self' (line 561)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_localization', localization)
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_function_name', 'TestCorrespond.test_correspond_empty')
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_param_names_list', [])
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCorrespond.test_correspond_empty.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCorrespond.test_correspond_empty', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_correspond_empty', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_correspond_empty(...)' code ##################

        
        # Assigning a Call to a Name (line 562):
        
        # Assigning a Call to a Name (line 562):
        
        # Call to zeros(...): (line 562)
        # Processing the call arguments (line 562)
        
        # Obtaining an instance of the builtin type 'tuple' (line 562)
        tuple_9545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 562)
        # Adding element type (line 562)
        int_9546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 22), tuple_9545, int_9546)
        
        # Processing the call keyword arguments (line 562)
        kwargs_9547 = {}
        # Getting the type of 'np' (line 562)
        np_9543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 562)
        zeros_9544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 12), np_9543, 'zeros')
        # Calling zeros(args, kwargs) (line 562)
        zeros_call_result_9548 = invoke(stypy.reporting.localization.Localization(__file__, 562, 12), zeros_9544, *[tuple_9545], **kwargs_9547)
        
        # Assigning a type to the variable 'y' (line 562)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 8), 'y', zeros_call_result_9548)
        
        # Assigning a Call to a Name (line 563):
        
        # Assigning a Call to a Name (line 563):
        
        # Call to zeros(...): (line 563)
        # Processing the call arguments (line 563)
        
        # Obtaining an instance of the builtin type 'tuple' (line 563)
        tuple_9551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 563)
        # Adding element type (line 563)
        int_9552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 22), tuple_9551, int_9552)
        # Adding element type (line 563)
        int_9553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 563, 22), tuple_9551, int_9553)
        
        # Processing the call keyword arguments (line 563)
        kwargs_9554 = {}
        # Getting the type of 'np' (line 563)
        np_9549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 563)
        zeros_9550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 12), np_9549, 'zeros')
        # Calling zeros(args, kwargs) (line 563)
        zeros_call_result_9555 = invoke(stypy.reporting.localization.Localization(__file__, 563, 12), zeros_9550, *[tuple_9551], **kwargs_9554)
        
        # Assigning a type to the variable 'Z' (line 563)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 563, 8), 'Z', zeros_call_result_9555)
        
        # Call to assert_raises(...): (line 564)
        # Processing the call arguments (line 564)
        # Getting the type of 'ValueError' (line 564)
        ValueError_9557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 22), 'ValueError', False)
        # Getting the type of 'correspond' (line 564)
        correspond_9558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 34), 'correspond', False)
        # Getting the type of 'Z' (line 564)
        Z_9559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 46), 'Z', False)
        # Getting the type of 'y' (line 564)
        y_9560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 49), 'y', False)
        # Processing the call keyword arguments (line 564)
        kwargs_9561 = {}
        # Getting the type of 'assert_raises' (line 564)
        assert_raises_9556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 564)
        assert_raises_call_result_9562 = invoke(stypy.reporting.localization.Localization(__file__, 564, 8), assert_raises_9556, *[ValueError_9557, correspond_9558, Z_9559, y_9560], **kwargs_9561)
        
        
        # ################# End of 'test_correspond_empty(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_correspond_empty' in the type store
        # Getting the type of 'stypy_return_type' (line 560)
        stypy_return_type_9563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9563)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_correspond_empty'
        return stypy_return_type_9563


    @norecursion
    def test_correspond_2_and_up(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_correspond_2_and_up'
        module_type_store = module_type_store.open_function_context('test_correspond_2_and_up', 566, 4, False)
        # Assigning a type to the variable 'self' (line 567)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 567, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_localization', localization)
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_function_name', 'TestCorrespond.test_correspond_2_and_up')
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_param_names_list', [])
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCorrespond.test_correspond_2_and_up.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCorrespond.test_correspond_2_and_up', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_correspond_2_and_up', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_correspond_2_and_up(...)' code ##################

        
        
        # Call to xrange(...): (line 569)
        # Processing the call arguments (line 569)
        int_9565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 24), 'int')
        int_9566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 569, 27), 'int')
        # Processing the call keyword arguments (line 569)
        kwargs_9567 = {}
        # Getting the type of 'xrange' (line 569)
        xrange_9564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 569)
        xrange_call_result_9568 = invoke(stypy.reporting.localization.Localization(__file__, 569, 17), xrange_9564, *[int_9565, int_9566], **kwargs_9567)
        
        # Testing the type of a for loop iterable (line 569)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 569, 8), xrange_call_result_9568)
        # Getting the type of the for loop variable (line 569)
        for_loop_var_9569 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 569, 8), xrange_call_result_9568)
        # Assigning a type to the variable 'i' (line 569)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 569, 8), 'i', for_loop_var_9569)
        # SSA begins for a for statement (line 569)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 570):
        
        # Assigning a Call to a Name (line 570):
        
        # Call to rand(...): (line 570)
        # Processing the call arguments (line 570)
        # Getting the type of 'i' (line 570)
        i_9573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 31), 'i', False)
        # Getting the type of 'i' (line 570)
        i_9574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 34), 'i', False)
        int_9575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 36), 'int')
        # Applying the binary operator '-' (line 570)
        result_sub_9576 = python_operator(stypy.reporting.localization.Localization(__file__, 570, 34), '-', i_9574, int_9575)
        
        # Applying the binary operator '*' (line 570)
        result_mul_9577 = python_operator(stypy.reporting.localization.Localization(__file__, 570, 31), '*', i_9573, result_sub_9576)
        
        int_9578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 40), 'int')
        # Applying the binary operator '//' (line 570)
        result_floordiv_9579 = python_operator(stypy.reporting.localization.Localization(__file__, 570, 38), '//', result_mul_9577, int_9578)
        
        # Processing the call keyword arguments (line 570)
        kwargs_9580 = {}
        # Getting the type of 'np' (line 570)
        np_9570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 570)
        random_9571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 16), np_9570, 'random')
        # Obtaining the member 'rand' of a type (line 570)
        rand_9572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 16), random_9571, 'rand')
        # Calling rand(args, kwargs) (line 570)
        rand_call_result_9581 = invoke(stypy.reporting.localization.Localization(__file__, 570, 16), rand_9572, *[result_floordiv_9579], **kwargs_9580)
        
        # Assigning a type to the variable 'y' (line 570)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 570, 12), 'y', rand_call_result_9581)
        
        # Assigning a Call to a Name (line 571):
        
        # Assigning a Call to a Name (line 571):
        
        # Call to linkage(...): (line 571)
        # Processing the call arguments (line 571)
        # Getting the type of 'y' (line 571)
        y_9583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 24), 'y', False)
        # Processing the call keyword arguments (line 571)
        kwargs_9584 = {}
        # Getting the type of 'linkage' (line 571)
        linkage_9582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 571)
        linkage_call_result_9585 = invoke(stypy.reporting.localization.Localization(__file__, 571, 16), linkage_9582, *[y_9583], **kwargs_9584)
        
        # Assigning a type to the variable 'Z' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 12), 'Z', linkage_call_result_9585)
        
        # Call to assert_(...): (line 572)
        # Processing the call arguments (line 572)
        
        # Call to correspond(...): (line 572)
        # Processing the call arguments (line 572)
        # Getting the type of 'Z' (line 572)
        Z_9588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 31), 'Z', False)
        # Getting the type of 'y' (line 572)
        y_9589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 34), 'y', False)
        # Processing the call keyword arguments (line 572)
        kwargs_9590 = {}
        # Getting the type of 'correspond' (line 572)
        correspond_9587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 20), 'correspond', False)
        # Calling correspond(args, kwargs) (line 572)
        correspond_call_result_9591 = invoke(stypy.reporting.localization.Localization(__file__, 572, 20), correspond_9587, *[Z_9588, y_9589], **kwargs_9590)
        
        # Processing the call keyword arguments (line 572)
        kwargs_9592 = {}
        # Getting the type of 'assert_' (line 572)
        assert__9586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 572)
        assert__call_result_9593 = invoke(stypy.reporting.localization.Localization(__file__, 572, 12), assert__9586, *[correspond_call_result_9591], **kwargs_9592)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # Call to xrange(...): (line 573)
        # Processing the call arguments (line 573)
        int_9595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 24), 'int')
        int_9596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 27), 'int')
        int_9597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 31), 'int')
        # Processing the call keyword arguments (line 573)
        kwargs_9598 = {}
        # Getting the type of 'xrange' (line 573)
        xrange_9594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 573)
        xrange_call_result_9599 = invoke(stypy.reporting.localization.Localization(__file__, 573, 17), xrange_9594, *[int_9595, int_9596, int_9597], **kwargs_9598)
        
        # Testing the type of a for loop iterable (line 573)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 573, 8), xrange_call_result_9599)
        # Getting the type of the for loop variable (line 573)
        for_loop_var_9600 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 573, 8), xrange_call_result_9599)
        # Assigning a type to the variable 'i' (line 573)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 573, 8), 'i', for_loop_var_9600)
        # SSA begins for a for statement (line 573)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 574):
        
        # Assigning a Call to a Name (line 574):
        
        # Call to rand(...): (line 574)
        # Processing the call arguments (line 574)
        # Getting the type of 'i' (line 574)
        i_9604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 31), 'i', False)
        # Getting the type of 'i' (line 574)
        i_9605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 34), 'i', False)
        int_9606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 36), 'int')
        # Applying the binary operator '-' (line 574)
        result_sub_9607 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 34), '-', i_9605, int_9606)
        
        # Applying the binary operator '*' (line 574)
        result_mul_9608 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 31), '*', i_9604, result_sub_9607)
        
        int_9609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 40), 'int')
        # Applying the binary operator '//' (line 574)
        result_floordiv_9610 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 38), '//', result_mul_9608, int_9609)
        
        # Processing the call keyword arguments (line 574)
        kwargs_9611 = {}
        # Getting the type of 'np' (line 574)
        np_9601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 574)
        random_9602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 16), np_9601, 'random')
        # Obtaining the member 'rand' of a type (line 574)
        rand_9603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 16), random_9602, 'rand')
        # Calling rand(args, kwargs) (line 574)
        rand_call_result_9612 = invoke(stypy.reporting.localization.Localization(__file__, 574, 16), rand_9603, *[result_floordiv_9610], **kwargs_9611)
        
        # Assigning a type to the variable 'y' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 12), 'y', rand_call_result_9612)
        
        # Assigning a Call to a Name (line 575):
        
        # Assigning a Call to a Name (line 575):
        
        # Call to linkage(...): (line 575)
        # Processing the call arguments (line 575)
        # Getting the type of 'y' (line 575)
        y_9614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 24), 'y', False)
        # Processing the call keyword arguments (line 575)
        kwargs_9615 = {}
        # Getting the type of 'linkage' (line 575)
        linkage_9613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 575)
        linkage_call_result_9616 = invoke(stypy.reporting.localization.Localization(__file__, 575, 16), linkage_9613, *[y_9614], **kwargs_9615)
        
        # Assigning a type to the variable 'Z' (line 575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 12), 'Z', linkage_call_result_9616)
        
        # Call to assert_(...): (line 576)
        # Processing the call arguments (line 576)
        
        # Call to correspond(...): (line 576)
        # Processing the call arguments (line 576)
        # Getting the type of 'Z' (line 576)
        Z_9619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 31), 'Z', False)
        # Getting the type of 'y' (line 576)
        y_9620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 34), 'y', False)
        # Processing the call keyword arguments (line 576)
        kwargs_9621 = {}
        # Getting the type of 'correspond' (line 576)
        correspond_9618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 20), 'correspond', False)
        # Calling correspond(args, kwargs) (line 576)
        correspond_call_result_9622 = invoke(stypy.reporting.localization.Localization(__file__, 576, 20), correspond_9618, *[Z_9619, y_9620], **kwargs_9621)
        
        # Processing the call keyword arguments (line 576)
        kwargs_9623 = {}
        # Getting the type of 'assert_' (line 576)
        assert__9617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 12), 'assert_', False)
        # Calling assert_(args, kwargs) (line 576)
        assert__call_result_9624 = invoke(stypy.reporting.localization.Localization(__file__, 576, 12), assert__9617, *[correspond_call_result_9622], **kwargs_9623)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_correspond_2_and_up(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_correspond_2_and_up' in the type store
        # Getting the type of 'stypy_return_type' (line 566)
        stypy_return_type_9625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9625)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_correspond_2_and_up'
        return stypy_return_type_9625


    @norecursion
    def test_correspond_4_and_up(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_correspond_4_and_up'
        module_type_store = module_type_store.open_function_context('test_correspond_4_and_up', 578, 4, False)
        # Assigning a type to the variable 'self' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_localization', localization)
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_function_name', 'TestCorrespond.test_correspond_4_and_up')
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_param_names_list', [])
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCorrespond.test_correspond_4_and_up.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCorrespond.test_correspond_4_and_up', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_correspond_4_and_up', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_correspond_4_and_up(...)' code ##################

        
        
        # Call to list(...): (line 581)
        # Processing the call arguments (line 581)
        
        # Call to zip(...): (line 581)
        # Processing the call arguments (line 581)
        
        # Call to list(...): (line 581)
        # Processing the call arguments (line 581)
        
        # Call to range(...): (line 581)
        # Processing the call arguments (line 581)
        int_9630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 43), 'int')
        int_9631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 46), 'int')
        # Processing the call keyword arguments (line 581)
        kwargs_9632 = {}
        # Getting the type of 'range' (line 581)
        range_9629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 37), 'range', False)
        # Calling range(args, kwargs) (line 581)
        range_call_result_9633 = invoke(stypy.reporting.localization.Localization(__file__, 581, 37), range_9629, *[int_9630, int_9631], **kwargs_9632)
        
        # Processing the call keyword arguments (line 581)
        kwargs_9634 = {}
        # Getting the type of 'list' (line 581)
        list_9628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 32), 'list', False)
        # Calling list(args, kwargs) (line 581)
        list_call_result_9635 = invoke(stypy.reporting.localization.Localization(__file__, 581, 32), list_9628, *[range_call_result_9633], **kwargs_9634)
        
        
        # Call to list(...): (line 581)
        # Processing the call arguments (line 581)
        
        # Call to range(...): (line 581)
        # Processing the call arguments (line 581)
        int_9638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 62), 'int')
        int_9639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 65), 'int')
        # Processing the call keyword arguments (line 581)
        kwargs_9640 = {}
        # Getting the type of 'range' (line 581)
        range_9637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 56), 'range', False)
        # Calling range(args, kwargs) (line 581)
        range_call_result_9641 = invoke(stypy.reporting.localization.Localization(__file__, 581, 56), range_9637, *[int_9638, int_9639], **kwargs_9640)
        
        # Processing the call keyword arguments (line 581)
        kwargs_9642 = {}
        # Getting the type of 'list' (line 581)
        list_9636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 51), 'list', False)
        # Calling list(args, kwargs) (line 581)
        list_call_result_9643 = invoke(stypy.reporting.localization.Localization(__file__, 581, 51), list_9636, *[range_call_result_9641], **kwargs_9642)
        
        # Processing the call keyword arguments (line 581)
        kwargs_9644 = {}
        # Getting the type of 'zip' (line 581)
        zip_9627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 28), 'zip', False)
        # Calling zip(args, kwargs) (line 581)
        zip_call_result_9645 = invoke(stypy.reporting.localization.Localization(__file__, 581, 28), zip_9627, *[list_call_result_9635, list_call_result_9643], **kwargs_9644)
        
        # Processing the call keyword arguments (line 581)
        kwargs_9646 = {}
        # Getting the type of 'list' (line 581)
        list_9626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 23), 'list', False)
        # Calling list(args, kwargs) (line 581)
        list_call_result_9647 = invoke(stypy.reporting.localization.Localization(__file__, 581, 23), list_9626, *[zip_call_result_9645], **kwargs_9646)
        
        
        # Call to list(...): (line 582)
        # Processing the call arguments (line 582)
        
        # Call to zip(...): (line 582)
        # Processing the call arguments (line 582)
        
        # Call to list(...): (line 582)
        # Processing the call arguments (line 582)
        
        # Call to range(...): (line 582)
        # Processing the call arguments (line 582)
        int_9652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 43), 'int')
        int_9653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 46), 'int')
        # Processing the call keyword arguments (line 582)
        kwargs_9654 = {}
        # Getting the type of 'range' (line 582)
        range_9651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 37), 'range', False)
        # Calling range(args, kwargs) (line 582)
        range_call_result_9655 = invoke(stypy.reporting.localization.Localization(__file__, 582, 37), range_9651, *[int_9652, int_9653], **kwargs_9654)
        
        # Processing the call keyword arguments (line 582)
        kwargs_9656 = {}
        # Getting the type of 'list' (line 582)
        list_9650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 32), 'list', False)
        # Calling list(args, kwargs) (line 582)
        list_call_result_9657 = invoke(stypy.reporting.localization.Localization(__file__, 582, 32), list_9650, *[range_call_result_9655], **kwargs_9656)
        
        
        # Call to list(...): (line 582)
        # Processing the call arguments (line 582)
        
        # Call to range(...): (line 582)
        # Processing the call arguments (line 582)
        int_9660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 62), 'int')
        int_9661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 65), 'int')
        # Processing the call keyword arguments (line 582)
        kwargs_9662 = {}
        # Getting the type of 'range' (line 582)
        range_9659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 56), 'range', False)
        # Calling range(args, kwargs) (line 582)
        range_call_result_9663 = invoke(stypy.reporting.localization.Localization(__file__, 582, 56), range_9659, *[int_9660, int_9661], **kwargs_9662)
        
        # Processing the call keyword arguments (line 582)
        kwargs_9664 = {}
        # Getting the type of 'list' (line 582)
        list_9658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 51), 'list', False)
        # Calling list(args, kwargs) (line 582)
        list_call_result_9665 = invoke(stypy.reporting.localization.Localization(__file__, 582, 51), list_9658, *[range_call_result_9663], **kwargs_9664)
        
        # Processing the call keyword arguments (line 582)
        kwargs_9666 = {}
        # Getting the type of 'zip' (line 582)
        zip_9649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 28), 'zip', False)
        # Calling zip(args, kwargs) (line 582)
        zip_call_result_9667 = invoke(stypy.reporting.localization.Localization(__file__, 582, 28), zip_9649, *[list_call_result_9657, list_call_result_9665], **kwargs_9666)
        
        # Processing the call keyword arguments (line 582)
        kwargs_9668 = {}
        # Getting the type of 'list' (line 582)
        list_9648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 23), 'list', False)
        # Calling list(args, kwargs) (line 582)
        list_call_result_9669 = invoke(stypy.reporting.localization.Localization(__file__, 582, 23), list_9648, *[zip_call_result_9667], **kwargs_9668)
        
        # Applying the binary operator '+' (line 581)
        result_add_9670 = python_operator(stypy.reporting.localization.Localization(__file__, 581, 23), '+', list_call_result_9647, list_call_result_9669)
        
        # Testing the type of a for loop iterable (line 581)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 581, 8), result_add_9670)
        # Getting the type of the for loop variable (line 581)
        for_loop_var_9671 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 581, 8), result_add_9670)
        # Assigning a type to the variable 'i' (line 581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 8), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 8), for_loop_var_9671))
        # Assigning a type to the variable 'j' (line 581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 8), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 581, 8), for_loop_var_9671))
        # SSA begins for a for statement (line 581)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 583):
        
        # Assigning a Call to a Name (line 583):
        
        # Call to rand(...): (line 583)
        # Processing the call arguments (line 583)
        # Getting the type of 'i' (line 583)
        i_9675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 31), 'i', False)
        # Getting the type of 'i' (line 583)
        i_9676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 34), 'i', False)
        int_9677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 36), 'int')
        # Applying the binary operator '-' (line 583)
        result_sub_9678 = python_operator(stypy.reporting.localization.Localization(__file__, 583, 34), '-', i_9676, int_9677)
        
        # Applying the binary operator '*' (line 583)
        result_mul_9679 = python_operator(stypy.reporting.localization.Localization(__file__, 583, 31), '*', i_9675, result_sub_9678)
        
        int_9680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 40), 'int')
        # Applying the binary operator '//' (line 583)
        result_floordiv_9681 = python_operator(stypy.reporting.localization.Localization(__file__, 583, 38), '//', result_mul_9679, int_9680)
        
        # Processing the call keyword arguments (line 583)
        kwargs_9682 = {}
        # Getting the type of 'np' (line 583)
        np_9672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 583)
        random_9673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 16), np_9672, 'random')
        # Obtaining the member 'rand' of a type (line 583)
        rand_9674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 16), random_9673, 'rand')
        # Calling rand(args, kwargs) (line 583)
        rand_call_result_9683 = invoke(stypy.reporting.localization.Localization(__file__, 583, 16), rand_9674, *[result_floordiv_9681], **kwargs_9682)
        
        # Assigning a type to the variable 'y' (line 583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 12), 'y', rand_call_result_9683)
        
        # Assigning a Call to a Name (line 584):
        
        # Assigning a Call to a Name (line 584):
        
        # Call to rand(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'j' (line 584)
        j_9687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 32), 'j', False)
        # Getting the type of 'j' (line 584)
        j_9688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 35), 'j', False)
        int_9689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 37), 'int')
        # Applying the binary operator '-' (line 584)
        result_sub_9690 = python_operator(stypy.reporting.localization.Localization(__file__, 584, 35), '-', j_9688, int_9689)
        
        # Applying the binary operator '*' (line 584)
        result_mul_9691 = python_operator(stypy.reporting.localization.Localization(__file__, 584, 32), '*', j_9687, result_sub_9690)
        
        int_9692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 41), 'int')
        # Applying the binary operator '//' (line 584)
        result_floordiv_9693 = python_operator(stypy.reporting.localization.Localization(__file__, 584, 39), '//', result_mul_9691, int_9692)
        
        # Processing the call keyword arguments (line 584)
        kwargs_9694 = {}
        # Getting the type of 'np' (line 584)
        np_9684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 17), 'np', False)
        # Obtaining the member 'random' of a type (line 584)
        random_9685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 17), np_9684, 'random')
        # Obtaining the member 'rand' of a type (line 584)
        rand_9686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 17), random_9685, 'rand')
        # Calling rand(args, kwargs) (line 584)
        rand_call_result_9695 = invoke(stypy.reporting.localization.Localization(__file__, 584, 17), rand_9686, *[result_floordiv_9693], **kwargs_9694)
        
        # Assigning a type to the variable 'y2' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 12), 'y2', rand_call_result_9695)
        
        # Assigning a Call to a Name (line 585):
        
        # Assigning a Call to a Name (line 585):
        
        # Call to linkage(...): (line 585)
        # Processing the call arguments (line 585)
        # Getting the type of 'y' (line 585)
        y_9697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 24), 'y', False)
        # Processing the call keyword arguments (line 585)
        kwargs_9698 = {}
        # Getting the type of 'linkage' (line 585)
        linkage_9696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 585)
        linkage_call_result_9699 = invoke(stypy.reporting.localization.Localization(__file__, 585, 16), linkage_9696, *[y_9697], **kwargs_9698)
        
        # Assigning a type to the variable 'Z' (line 585)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 585, 12), 'Z', linkage_call_result_9699)
        
        # Assigning a Call to a Name (line 586):
        
        # Assigning a Call to a Name (line 586):
        
        # Call to linkage(...): (line 586)
        # Processing the call arguments (line 586)
        # Getting the type of 'y2' (line 586)
        y2_9701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 25), 'y2', False)
        # Processing the call keyword arguments (line 586)
        kwargs_9702 = {}
        # Getting the type of 'linkage' (line 586)
        linkage_9700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 17), 'linkage', False)
        # Calling linkage(args, kwargs) (line 586)
        linkage_call_result_9703 = invoke(stypy.reporting.localization.Localization(__file__, 586, 17), linkage_9700, *[y2_9701], **kwargs_9702)
        
        # Assigning a type to the variable 'Z2' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 12), 'Z2', linkage_call_result_9703)
        
        # Call to assert_equal(...): (line 587)
        # Processing the call arguments (line 587)
        
        # Call to correspond(...): (line 587)
        # Processing the call arguments (line 587)
        # Getting the type of 'Z' (line 587)
        Z_9706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 36), 'Z', False)
        # Getting the type of 'y2' (line 587)
        y2_9707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 39), 'y2', False)
        # Processing the call keyword arguments (line 587)
        kwargs_9708 = {}
        # Getting the type of 'correspond' (line 587)
        correspond_9705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 25), 'correspond', False)
        # Calling correspond(args, kwargs) (line 587)
        correspond_call_result_9709 = invoke(stypy.reporting.localization.Localization(__file__, 587, 25), correspond_9705, *[Z_9706, y2_9707], **kwargs_9708)
        
        # Getting the type of 'False' (line 587)
        False_9710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 44), 'False', False)
        # Processing the call keyword arguments (line 587)
        kwargs_9711 = {}
        # Getting the type of 'assert_equal' (line 587)
        assert_equal_9704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 587)
        assert_equal_call_result_9712 = invoke(stypy.reporting.localization.Localization(__file__, 587, 12), assert_equal_9704, *[correspond_call_result_9709, False_9710], **kwargs_9711)
        
        
        # Call to assert_equal(...): (line 588)
        # Processing the call arguments (line 588)
        
        # Call to correspond(...): (line 588)
        # Processing the call arguments (line 588)
        # Getting the type of 'Z2' (line 588)
        Z2_9715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 36), 'Z2', False)
        # Getting the type of 'y' (line 588)
        y_9716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 40), 'y', False)
        # Processing the call keyword arguments (line 588)
        kwargs_9717 = {}
        # Getting the type of 'correspond' (line 588)
        correspond_9714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 25), 'correspond', False)
        # Calling correspond(args, kwargs) (line 588)
        correspond_call_result_9718 = invoke(stypy.reporting.localization.Localization(__file__, 588, 25), correspond_9714, *[Z2_9715, y_9716], **kwargs_9717)
        
        # Getting the type of 'False' (line 588)
        False_9719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 44), 'False', False)
        # Processing the call keyword arguments (line 588)
        kwargs_9720 = {}
        # Getting the type of 'assert_equal' (line 588)
        assert_equal_9713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 588)
        assert_equal_call_result_9721 = invoke(stypy.reporting.localization.Localization(__file__, 588, 12), assert_equal_9713, *[correspond_call_result_9718, False_9719], **kwargs_9720)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_correspond_4_and_up(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_correspond_4_and_up' in the type store
        # Getting the type of 'stypy_return_type' (line 578)
        stypy_return_type_9722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9722)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_correspond_4_and_up'
        return stypy_return_type_9722


    @norecursion
    def test_correspond_4_and_up_2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_correspond_4_and_up_2'
        module_type_store = module_type_store.open_function_context('test_correspond_4_and_up_2', 590, 4, False)
        # Assigning a type to the variable 'self' (line 591)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_localization', localization)
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_function_name', 'TestCorrespond.test_correspond_4_and_up_2')
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_param_names_list', [])
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCorrespond.test_correspond_4_and_up_2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCorrespond.test_correspond_4_and_up_2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_correspond_4_and_up_2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_correspond_4_and_up_2(...)' code ##################

        
        
        # Call to list(...): (line 593)
        # Processing the call arguments (line 593)
        
        # Call to zip(...): (line 593)
        # Processing the call arguments (line 593)
        
        # Call to list(...): (line 593)
        # Processing the call arguments (line 593)
        
        # Call to range(...): (line 593)
        # Processing the call arguments (line 593)
        int_9727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 43), 'int')
        int_9728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 46), 'int')
        # Processing the call keyword arguments (line 593)
        kwargs_9729 = {}
        # Getting the type of 'range' (line 593)
        range_9726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 37), 'range', False)
        # Calling range(args, kwargs) (line 593)
        range_call_result_9730 = invoke(stypy.reporting.localization.Localization(__file__, 593, 37), range_9726, *[int_9727, int_9728], **kwargs_9729)
        
        # Processing the call keyword arguments (line 593)
        kwargs_9731 = {}
        # Getting the type of 'list' (line 593)
        list_9725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 32), 'list', False)
        # Calling list(args, kwargs) (line 593)
        list_call_result_9732 = invoke(stypy.reporting.localization.Localization(__file__, 593, 32), list_9725, *[range_call_result_9730], **kwargs_9731)
        
        
        # Call to list(...): (line 593)
        # Processing the call arguments (line 593)
        
        # Call to range(...): (line 593)
        # Processing the call arguments (line 593)
        int_9735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 62), 'int')
        int_9736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 66), 'int')
        # Processing the call keyword arguments (line 593)
        kwargs_9737 = {}
        # Getting the type of 'range' (line 593)
        range_9734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 56), 'range', False)
        # Calling range(args, kwargs) (line 593)
        range_call_result_9738 = invoke(stypy.reporting.localization.Localization(__file__, 593, 56), range_9734, *[int_9735, int_9736], **kwargs_9737)
        
        # Processing the call keyword arguments (line 593)
        kwargs_9739 = {}
        # Getting the type of 'list' (line 593)
        list_9733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 51), 'list', False)
        # Calling list(args, kwargs) (line 593)
        list_call_result_9740 = invoke(stypy.reporting.localization.Localization(__file__, 593, 51), list_9733, *[range_call_result_9738], **kwargs_9739)
        
        # Processing the call keyword arguments (line 593)
        kwargs_9741 = {}
        # Getting the type of 'zip' (line 593)
        zip_9724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 28), 'zip', False)
        # Calling zip(args, kwargs) (line 593)
        zip_call_result_9742 = invoke(stypy.reporting.localization.Localization(__file__, 593, 28), zip_9724, *[list_call_result_9732, list_call_result_9740], **kwargs_9741)
        
        # Processing the call keyword arguments (line 593)
        kwargs_9743 = {}
        # Getting the type of 'list' (line 593)
        list_9723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 23), 'list', False)
        # Calling list(args, kwargs) (line 593)
        list_call_result_9744 = invoke(stypy.reporting.localization.Localization(__file__, 593, 23), list_9723, *[zip_call_result_9742], **kwargs_9743)
        
        
        # Call to list(...): (line 594)
        # Processing the call arguments (line 594)
        
        # Call to zip(...): (line 594)
        # Processing the call arguments (line 594)
        
        # Call to list(...): (line 594)
        # Processing the call arguments (line 594)
        
        # Call to range(...): (line 594)
        # Processing the call arguments (line 594)
        int_9749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 43), 'int')
        int_9750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 46), 'int')
        # Processing the call keyword arguments (line 594)
        kwargs_9751 = {}
        # Getting the type of 'range' (line 594)
        range_9748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 37), 'range', False)
        # Calling range(args, kwargs) (line 594)
        range_call_result_9752 = invoke(stypy.reporting.localization.Localization(__file__, 594, 37), range_9748, *[int_9749, int_9750], **kwargs_9751)
        
        # Processing the call keyword arguments (line 594)
        kwargs_9753 = {}
        # Getting the type of 'list' (line 594)
        list_9747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 32), 'list', False)
        # Calling list(args, kwargs) (line 594)
        list_call_result_9754 = invoke(stypy.reporting.localization.Localization(__file__, 594, 32), list_9747, *[range_call_result_9752], **kwargs_9753)
        
        
        # Call to list(...): (line 594)
        # Processing the call arguments (line 594)
        
        # Call to range(...): (line 594)
        # Processing the call arguments (line 594)
        int_9757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 62), 'int')
        int_9758 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 594, 66), 'int')
        # Processing the call keyword arguments (line 594)
        kwargs_9759 = {}
        # Getting the type of 'range' (line 594)
        range_9756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 56), 'range', False)
        # Calling range(args, kwargs) (line 594)
        range_call_result_9760 = invoke(stypy.reporting.localization.Localization(__file__, 594, 56), range_9756, *[int_9757, int_9758], **kwargs_9759)
        
        # Processing the call keyword arguments (line 594)
        kwargs_9761 = {}
        # Getting the type of 'list' (line 594)
        list_9755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 51), 'list', False)
        # Calling list(args, kwargs) (line 594)
        list_call_result_9762 = invoke(stypy.reporting.localization.Localization(__file__, 594, 51), list_9755, *[range_call_result_9760], **kwargs_9761)
        
        # Processing the call keyword arguments (line 594)
        kwargs_9763 = {}
        # Getting the type of 'zip' (line 594)
        zip_9746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 28), 'zip', False)
        # Calling zip(args, kwargs) (line 594)
        zip_call_result_9764 = invoke(stypy.reporting.localization.Localization(__file__, 594, 28), zip_9746, *[list_call_result_9754, list_call_result_9762], **kwargs_9763)
        
        # Processing the call keyword arguments (line 594)
        kwargs_9765 = {}
        # Getting the type of 'list' (line 594)
        list_9745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 23), 'list', False)
        # Calling list(args, kwargs) (line 594)
        list_call_result_9766 = invoke(stypy.reporting.localization.Localization(__file__, 594, 23), list_9745, *[zip_call_result_9764], **kwargs_9765)
        
        # Applying the binary operator '+' (line 593)
        result_add_9767 = python_operator(stypy.reporting.localization.Localization(__file__, 593, 23), '+', list_call_result_9744, list_call_result_9766)
        
        # Testing the type of a for loop iterable (line 593)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 593, 8), result_add_9767)
        # Getting the type of the for loop variable (line 593)
        for_loop_var_9768 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 593, 8), result_add_9767)
        # Assigning a type to the variable 'i' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 8), for_loop_var_9768))
        # Assigning a type to the variable 'j' (line 593)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 593, 8), for_loop_var_9768))
        # SSA begins for a for statement (line 593)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 595):
        
        # Assigning a Call to a Name (line 595):
        
        # Call to rand(...): (line 595)
        # Processing the call arguments (line 595)
        # Getting the type of 'i' (line 595)
        i_9772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 31), 'i', False)
        # Getting the type of 'i' (line 595)
        i_9773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 34), 'i', False)
        int_9774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 36), 'int')
        # Applying the binary operator '-' (line 595)
        result_sub_9775 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 34), '-', i_9773, int_9774)
        
        # Applying the binary operator '*' (line 595)
        result_mul_9776 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 31), '*', i_9772, result_sub_9775)
        
        int_9777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 40), 'int')
        # Applying the binary operator '//' (line 595)
        result_floordiv_9778 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 38), '//', result_mul_9776, int_9777)
        
        # Processing the call keyword arguments (line 595)
        kwargs_9779 = {}
        # Getting the type of 'np' (line 595)
        np_9769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 595)
        random_9770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 16), np_9769, 'random')
        # Obtaining the member 'rand' of a type (line 595)
        rand_9771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 16), random_9770, 'rand')
        # Calling rand(args, kwargs) (line 595)
        rand_call_result_9780 = invoke(stypy.reporting.localization.Localization(__file__, 595, 16), rand_9771, *[result_floordiv_9778], **kwargs_9779)
        
        # Assigning a type to the variable 'y' (line 595)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 12), 'y', rand_call_result_9780)
        
        # Assigning a Call to a Name (line 596):
        
        # Assigning a Call to a Name (line 596):
        
        # Call to rand(...): (line 596)
        # Processing the call arguments (line 596)
        # Getting the type of 'j' (line 596)
        j_9784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 32), 'j', False)
        # Getting the type of 'j' (line 596)
        j_9785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 35), 'j', False)
        int_9786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 37), 'int')
        # Applying the binary operator '-' (line 596)
        result_sub_9787 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 35), '-', j_9785, int_9786)
        
        # Applying the binary operator '*' (line 596)
        result_mul_9788 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 32), '*', j_9784, result_sub_9787)
        
        int_9789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 41), 'int')
        # Applying the binary operator '//' (line 596)
        result_floordiv_9790 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 39), '//', result_mul_9788, int_9789)
        
        # Processing the call keyword arguments (line 596)
        kwargs_9791 = {}
        # Getting the type of 'np' (line 596)
        np_9781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 17), 'np', False)
        # Obtaining the member 'random' of a type (line 596)
        random_9782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 17), np_9781, 'random')
        # Obtaining the member 'rand' of a type (line 596)
        rand_9783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 17), random_9782, 'rand')
        # Calling rand(args, kwargs) (line 596)
        rand_call_result_9792 = invoke(stypy.reporting.localization.Localization(__file__, 596, 17), rand_9783, *[result_floordiv_9790], **kwargs_9791)
        
        # Assigning a type to the variable 'y2' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'y2', rand_call_result_9792)
        
        # Assigning a Call to a Name (line 597):
        
        # Assigning a Call to a Name (line 597):
        
        # Call to linkage(...): (line 597)
        # Processing the call arguments (line 597)
        # Getting the type of 'y' (line 597)
        y_9794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 24), 'y', False)
        # Processing the call keyword arguments (line 597)
        kwargs_9795 = {}
        # Getting the type of 'linkage' (line 597)
        linkage_9793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 597)
        linkage_call_result_9796 = invoke(stypy.reporting.localization.Localization(__file__, 597, 16), linkage_9793, *[y_9794], **kwargs_9795)
        
        # Assigning a type to the variable 'Z' (line 597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'Z', linkage_call_result_9796)
        
        # Assigning a Call to a Name (line 598):
        
        # Assigning a Call to a Name (line 598):
        
        # Call to linkage(...): (line 598)
        # Processing the call arguments (line 598)
        # Getting the type of 'y2' (line 598)
        y2_9798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 25), 'y2', False)
        # Processing the call keyword arguments (line 598)
        kwargs_9799 = {}
        # Getting the type of 'linkage' (line 598)
        linkage_9797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 17), 'linkage', False)
        # Calling linkage(args, kwargs) (line 598)
        linkage_call_result_9800 = invoke(stypy.reporting.localization.Localization(__file__, 598, 17), linkage_9797, *[y2_9798], **kwargs_9799)
        
        # Assigning a type to the variable 'Z2' (line 598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 12), 'Z2', linkage_call_result_9800)
        
        # Call to assert_equal(...): (line 599)
        # Processing the call arguments (line 599)
        
        # Call to correspond(...): (line 599)
        # Processing the call arguments (line 599)
        # Getting the type of 'Z' (line 599)
        Z_9803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 36), 'Z', False)
        # Getting the type of 'y2' (line 599)
        y2_9804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 39), 'y2', False)
        # Processing the call keyword arguments (line 599)
        kwargs_9805 = {}
        # Getting the type of 'correspond' (line 599)
        correspond_9802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 25), 'correspond', False)
        # Calling correspond(args, kwargs) (line 599)
        correspond_call_result_9806 = invoke(stypy.reporting.localization.Localization(__file__, 599, 25), correspond_9802, *[Z_9803, y2_9804], **kwargs_9805)
        
        # Getting the type of 'False' (line 599)
        False_9807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 44), 'False', False)
        # Processing the call keyword arguments (line 599)
        kwargs_9808 = {}
        # Getting the type of 'assert_equal' (line 599)
        assert_equal_9801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 599)
        assert_equal_call_result_9809 = invoke(stypy.reporting.localization.Localization(__file__, 599, 12), assert_equal_9801, *[correspond_call_result_9806, False_9807], **kwargs_9808)
        
        
        # Call to assert_equal(...): (line 600)
        # Processing the call arguments (line 600)
        
        # Call to correspond(...): (line 600)
        # Processing the call arguments (line 600)
        # Getting the type of 'Z2' (line 600)
        Z2_9812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 36), 'Z2', False)
        # Getting the type of 'y' (line 600)
        y_9813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 40), 'y', False)
        # Processing the call keyword arguments (line 600)
        kwargs_9814 = {}
        # Getting the type of 'correspond' (line 600)
        correspond_9811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 25), 'correspond', False)
        # Calling correspond(args, kwargs) (line 600)
        correspond_call_result_9815 = invoke(stypy.reporting.localization.Localization(__file__, 600, 25), correspond_9811, *[Z2_9812, y_9813], **kwargs_9814)
        
        # Getting the type of 'False' (line 600)
        False_9816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 44), 'False', False)
        # Processing the call keyword arguments (line 600)
        kwargs_9817 = {}
        # Getting the type of 'assert_equal' (line 600)
        assert_equal_9810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 600)
        assert_equal_call_result_9818 = invoke(stypy.reporting.localization.Localization(__file__, 600, 12), assert_equal_9810, *[correspond_call_result_9815, False_9816], **kwargs_9817)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_correspond_4_and_up_2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_correspond_4_and_up_2' in the type store
        # Getting the type of 'stypy_return_type' (line 590)
        stypy_return_type_9819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9819)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_correspond_4_and_up_2'
        return stypy_return_type_9819


    @norecursion
    def test_num_obs_linkage_multi_matrix(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_num_obs_linkage_multi_matrix'
        module_type_store = module_type_store.open_function_context('test_num_obs_linkage_multi_matrix', 602, 4, False)
        # Assigning a type to the variable 'self' (line 603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_localization', localization)
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_function_name', 'TestCorrespond.test_num_obs_linkage_multi_matrix')
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_param_names_list', [])
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestCorrespond.test_num_obs_linkage_multi_matrix.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCorrespond.test_num_obs_linkage_multi_matrix', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_num_obs_linkage_multi_matrix', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_num_obs_linkage_multi_matrix(...)' code ##################

        
        
        # Call to xrange(...): (line 604)
        # Processing the call arguments (line 604)
        int_9821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 24), 'int')
        int_9822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 27), 'int')
        # Processing the call keyword arguments (line 604)
        kwargs_9823 = {}
        # Getting the type of 'xrange' (line 604)
        xrange_9820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 604)
        xrange_call_result_9824 = invoke(stypy.reporting.localization.Localization(__file__, 604, 17), xrange_9820, *[int_9821, int_9822], **kwargs_9823)
        
        # Testing the type of a for loop iterable (line 604)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 604, 8), xrange_call_result_9824)
        # Getting the type of the for loop variable (line 604)
        for_loop_var_9825 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 604, 8), xrange_call_result_9824)
        # Assigning a type to the variable 'n' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'n', for_loop_var_9825)
        # SSA begins for a for statement (line 604)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 605):
        
        # Assigning a Call to a Name (line 605):
        
        # Call to rand(...): (line 605)
        # Processing the call arguments (line 605)
        # Getting the type of 'n' (line 605)
        n_9829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 31), 'n', False)
        int_9830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 34), 'int')
        # Processing the call keyword arguments (line 605)
        kwargs_9831 = {}
        # Getting the type of 'np' (line 605)
        np_9826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 16), 'np', False)
        # Obtaining the member 'random' of a type (line 605)
        random_9827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 16), np_9826, 'random')
        # Obtaining the member 'rand' of a type (line 605)
        rand_9828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 16), random_9827, 'rand')
        # Calling rand(args, kwargs) (line 605)
        rand_call_result_9832 = invoke(stypy.reporting.localization.Localization(__file__, 605, 16), rand_9828, *[n_9829, int_9830], **kwargs_9831)
        
        # Assigning a type to the variable 'X' (line 605)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 605, 12), 'X', rand_call_result_9832)
        
        # Assigning a Call to a Name (line 606):
        
        # Assigning a Call to a Name (line 606):
        
        # Call to pdist(...): (line 606)
        # Processing the call arguments (line 606)
        # Getting the type of 'X' (line 606)
        X_9834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 22), 'X', False)
        # Processing the call keyword arguments (line 606)
        kwargs_9835 = {}
        # Getting the type of 'pdist' (line 606)
        pdist_9833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 16), 'pdist', False)
        # Calling pdist(args, kwargs) (line 606)
        pdist_call_result_9836 = invoke(stypy.reporting.localization.Localization(__file__, 606, 16), pdist_9833, *[X_9834], **kwargs_9835)
        
        # Assigning a type to the variable 'Y' (line 606)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 606, 12), 'Y', pdist_call_result_9836)
        
        # Assigning a Call to a Name (line 607):
        
        # Assigning a Call to a Name (line 607):
        
        # Call to linkage(...): (line 607)
        # Processing the call arguments (line 607)
        # Getting the type of 'Y' (line 607)
        Y_9838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 24), 'Y', False)
        # Processing the call keyword arguments (line 607)
        kwargs_9839 = {}
        # Getting the type of 'linkage' (line 607)
        linkage_9837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 16), 'linkage', False)
        # Calling linkage(args, kwargs) (line 607)
        linkage_call_result_9840 = invoke(stypy.reporting.localization.Localization(__file__, 607, 16), linkage_9837, *[Y_9838], **kwargs_9839)
        
        # Assigning a type to the variable 'Z' (line 607)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 607, 12), 'Z', linkage_call_result_9840)
        
        # Call to assert_equal(...): (line 608)
        # Processing the call arguments (line 608)
        
        # Call to num_obs_linkage(...): (line 608)
        # Processing the call arguments (line 608)
        # Getting the type of 'Z' (line 608)
        Z_9843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 41), 'Z', False)
        # Processing the call keyword arguments (line 608)
        kwargs_9844 = {}
        # Getting the type of 'num_obs_linkage' (line 608)
        num_obs_linkage_9842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 25), 'num_obs_linkage', False)
        # Calling num_obs_linkage(args, kwargs) (line 608)
        num_obs_linkage_call_result_9845 = invoke(stypy.reporting.localization.Localization(__file__, 608, 25), num_obs_linkage_9842, *[Z_9843], **kwargs_9844)
        
        # Getting the type of 'n' (line 608)
        n_9846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 45), 'n', False)
        # Processing the call keyword arguments (line 608)
        kwargs_9847 = {}
        # Getting the type of 'assert_equal' (line 608)
        assert_equal_9841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 12), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 608)
        assert_equal_call_result_9848 = invoke(stypy.reporting.localization.Localization(__file__, 608, 12), assert_equal_9841, *[num_obs_linkage_call_result_9845, n_9846], **kwargs_9847)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_num_obs_linkage_multi_matrix(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_num_obs_linkage_multi_matrix' in the type store
        # Getting the type of 'stypy_return_type' (line 602)
        stypy_return_type_9849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9849)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_num_obs_linkage_multi_matrix'
        return stypy_return_type_9849


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 559, 0, False)
        # Assigning a type to the variable 'self' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestCorrespond.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestCorrespond' (line 559)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 0), 'TestCorrespond', TestCorrespond)
# Declaration of the 'TestIsMonotonic' class

class TestIsMonotonic(object, ):

    @norecursion
    def test_is_monotonic_empty(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_empty'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_empty', 612, 4, False)
        # Assigning a type to the variable 'self' (line 613)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 613, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_empty')
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_empty.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_empty', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_empty', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_empty(...)' code ##################

        
        # Assigning a Call to a Name (line 614):
        
        # Assigning a Call to a Name (line 614):
        
        # Call to zeros(...): (line 614)
        # Processing the call arguments (line 614)
        
        # Obtaining an instance of the builtin type 'tuple' (line 614)
        tuple_9852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 614)
        # Adding element type (line 614)
        int_9853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 22), tuple_9852, int_9853)
        # Adding element type (line 614)
        int_9854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 614, 22), tuple_9852, int_9854)
        
        # Processing the call keyword arguments (line 614)
        kwargs_9855 = {}
        # Getting the type of 'np' (line 614)
        np_9850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 614)
        zeros_9851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 614, 12), np_9850, 'zeros')
        # Calling zeros(args, kwargs) (line 614)
        zeros_call_result_9856 = invoke(stypy.reporting.localization.Localization(__file__, 614, 12), zeros_9851, *[tuple_9852], **kwargs_9855)
        
        # Assigning a type to the variable 'Z' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'Z', zeros_call_result_9856)
        
        # Call to assert_raises(...): (line 615)
        # Processing the call arguments (line 615)
        # Getting the type of 'ValueError' (line 615)
        ValueError_9858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 22), 'ValueError', False)
        # Getting the type of 'is_monotonic' (line 615)
        is_monotonic_9859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 34), 'is_monotonic', False)
        # Getting the type of 'Z' (line 615)
        Z_9860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 48), 'Z', False)
        # Processing the call keyword arguments (line 615)
        kwargs_9861 = {}
        # Getting the type of 'assert_raises' (line 615)
        assert_raises_9857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 615)
        assert_raises_call_result_9862 = invoke(stypy.reporting.localization.Localization(__file__, 615, 8), assert_raises_9857, *[ValueError_9858, is_monotonic_9859, Z_9860], **kwargs_9861)
        
        
        # ################# End of 'test_is_monotonic_empty(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_empty' in the type store
        # Getting the type of 'stypy_return_type' (line 612)
        stypy_return_type_9863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9863)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_empty'
        return stypy_return_type_9863


    @norecursion
    def test_is_monotonic_1x4(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_1x4'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_1x4', 617, 4, False)
        # Assigning a type to the variable 'self' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_1x4')
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_1x4.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_1x4', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_1x4', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_1x4(...)' code ##################

        
        # Assigning a Call to a Name (line 619):
        
        # Assigning a Call to a Name (line 619):
        
        # Call to asarray(...): (line 619)
        # Processing the call arguments (line 619)
        
        # Obtaining an instance of the builtin type 'list' (line 619)
        list_9866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 619)
        # Adding element type (line 619)
        
        # Obtaining an instance of the builtin type 'list' (line 619)
        list_9867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 619)
        # Adding element type (line 619)
        int_9868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 619, 24), list_9867, int_9868)
        # Adding element type (line 619)
        int_9869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 619, 24), list_9867, int_9869)
        # Adding element type (line 619)
        float_9870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 619, 24), list_9867, float_9870)
        # Adding element type (line 619)
        int_9871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 619, 24), list_9867, int_9871)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 619, 23), list_9866, list_9867)
        
        # Processing the call keyword arguments (line 619)
        # Getting the type of 'np' (line 619)
        np_9872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 619)
        double_9873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 47), np_9872, 'double')
        keyword_9874 = double_9873
        kwargs_9875 = {'dtype': keyword_9874}
        # Getting the type of 'np' (line 619)
        np_9864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 619)
        asarray_9865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 12), np_9864, 'asarray')
        # Calling asarray(args, kwargs) (line 619)
        asarray_call_result_9876 = invoke(stypy.reporting.localization.Localization(__file__, 619, 12), asarray_9865, *[list_9866], **kwargs_9875)
        
        # Assigning a type to the variable 'Z' (line 619)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 8), 'Z', asarray_call_result_9876)
        
        # Call to assert_equal(...): (line 620)
        # Processing the call arguments (line 620)
        
        # Call to is_monotonic(...): (line 620)
        # Processing the call arguments (line 620)
        # Getting the type of 'Z' (line 620)
        Z_9879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 34), 'Z', False)
        # Processing the call keyword arguments (line 620)
        kwargs_9880 = {}
        # Getting the type of 'is_monotonic' (line 620)
        is_monotonic_9878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 620)
        is_monotonic_call_result_9881 = invoke(stypy.reporting.localization.Localization(__file__, 620, 21), is_monotonic_9878, *[Z_9879], **kwargs_9880)
        
        # Getting the type of 'True' (line 620)
        True_9882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 38), 'True', False)
        # Processing the call keyword arguments (line 620)
        kwargs_9883 = {}
        # Getting the type of 'assert_equal' (line 620)
        assert_equal_9877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 620)
        assert_equal_call_result_9884 = invoke(stypy.reporting.localization.Localization(__file__, 620, 8), assert_equal_9877, *[is_monotonic_call_result_9881, True_9882], **kwargs_9883)
        
        
        # ################# End of 'test_is_monotonic_1x4(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_1x4' in the type store
        # Getting the type of 'stypy_return_type' (line 617)
        stypy_return_type_9885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9885)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_1x4'
        return stypy_return_type_9885


    @norecursion
    def test_is_monotonic_2x4_T(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_2x4_T'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_2x4_T', 622, 4, False)
        # Assigning a type to the variable 'self' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_2x4_T')
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_2x4_T.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_2x4_T', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_2x4_T', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_2x4_T(...)' code ##################

        
        # Assigning a Call to a Name (line 624):
        
        # Assigning a Call to a Name (line 624):
        
        # Call to asarray(...): (line 624)
        # Processing the call arguments (line 624)
        
        # Obtaining an instance of the builtin type 'list' (line 624)
        list_9888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 624)
        # Adding element type (line 624)
        
        # Obtaining an instance of the builtin type 'list' (line 624)
        list_9889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 624)
        # Adding element type (line 624)
        int_9890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 24), list_9889, int_9890)
        # Adding element type (line 624)
        int_9891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 24), list_9889, int_9891)
        # Adding element type (line 624)
        float_9892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 24), list_9889, float_9892)
        # Adding element type (line 624)
        int_9893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 24), list_9889, int_9893)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 23), list_9888, list_9889)
        # Adding element type (line 624)
        
        # Obtaining an instance of the builtin type 'list' (line 625)
        list_9894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 625)
        # Adding element type (line 625)
        int_9895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 24), list_9894, int_9895)
        # Adding element type (line 625)
        int_9896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 24), list_9894, int_9896)
        # Adding element type (line 625)
        float_9897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 24), list_9894, float_9897)
        # Adding element type (line 625)
        int_9898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 625, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 625, 24), list_9894, int_9898)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 624, 23), list_9888, list_9894)
        
        # Processing the call keyword arguments (line 624)
        # Getting the type of 'np' (line 625)
        np_9899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 625)
        double_9900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 625, 47), np_9899, 'double')
        keyword_9901 = double_9900
        kwargs_9902 = {'dtype': keyword_9901}
        # Getting the type of 'np' (line 624)
        np_9886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 624)
        asarray_9887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 12), np_9886, 'asarray')
        # Calling asarray(args, kwargs) (line 624)
        asarray_call_result_9903 = invoke(stypy.reporting.localization.Localization(__file__, 624, 12), asarray_9887, *[list_9888], **kwargs_9902)
        
        # Assigning a type to the variable 'Z' (line 624)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 624, 8), 'Z', asarray_call_result_9903)
        
        # Call to assert_equal(...): (line 626)
        # Processing the call arguments (line 626)
        
        # Call to is_monotonic(...): (line 626)
        # Processing the call arguments (line 626)
        # Getting the type of 'Z' (line 626)
        Z_9906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 34), 'Z', False)
        # Processing the call keyword arguments (line 626)
        kwargs_9907 = {}
        # Getting the type of 'is_monotonic' (line 626)
        is_monotonic_9905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 626)
        is_monotonic_call_result_9908 = invoke(stypy.reporting.localization.Localization(__file__, 626, 21), is_monotonic_9905, *[Z_9906], **kwargs_9907)
        
        # Getting the type of 'True' (line 626)
        True_9909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 38), 'True', False)
        # Processing the call keyword arguments (line 626)
        kwargs_9910 = {}
        # Getting the type of 'assert_equal' (line 626)
        assert_equal_9904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 626)
        assert_equal_call_result_9911 = invoke(stypy.reporting.localization.Localization(__file__, 626, 8), assert_equal_9904, *[is_monotonic_call_result_9908, True_9909], **kwargs_9910)
        
        
        # ################# End of 'test_is_monotonic_2x4_T(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_2x4_T' in the type store
        # Getting the type of 'stypy_return_type' (line 622)
        stypy_return_type_9912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9912)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_2x4_T'
        return stypy_return_type_9912


    @norecursion
    def test_is_monotonic_2x4_F(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_2x4_F'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_2x4_F', 628, 4, False)
        # Assigning a type to the variable 'self' (line 629)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 629, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_2x4_F')
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_2x4_F.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_2x4_F', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_2x4_F', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_2x4_F(...)' code ##################

        
        # Assigning a Call to a Name (line 630):
        
        # Assigning a Call to a Name (line 630):
        
        # Call to asarray(...): (line 630)
        # Processing the call arguments (line 630)
        
        # Obtaining an instance of the builtin type 'list' (line 630)
        list_9915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 630, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 630)
        # Adding element type (line 630)
        
        # Obtaining an instance of the builtin type 'list' (line 630)
        list_9916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 630, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 630)
        # Adding element type (line 630)
        int_9917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 630, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 24), list_9916, int_9917)
        # Adding element type (line 630)
        int_9918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 630, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 24), list_9916, int_9918)
        # Adding element type (line 630)
        float_9919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 630, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 24), list_9916, float_9919)
        # Adding element type (line 630)
        int_9920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 630, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 24), list_9916, int_9920)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 23), list_9915, list_9916)
        # Adding element type (line 630)
        
        # Obtaining an instance of the builtin type 'list' (line 631)
        list_9921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 631)
        # Adding element type (line 631)
        int_9922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 631, 24), list_9921, int_9922)
        # Adding element type (line 631)
        int_9923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 631, 24), list_9921, int_9923)
        # Adding element type (line 631)
        float_9924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 631, 24), list_9921, float_9924)
        # Adding element type (line 631)
        int_9925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 631, 24), list_9921, int_9925)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 630, 23), list_9915, list_9921)
        
        # Processing the call keyword arguments (line 630)
        # Getting the type of 'np' (line 631)
        np_9926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 631)
        double_9927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 47), np_9926, 'double')
        keyword_9928 = double_9927
        kwargs_9929 = {'dtype': keyword_9928}
        # Getting the type of 'np' (line 630)
        np_9913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 630)
        asarray_9914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 12), np_9913, 'asarray')
        # Calling asarray(args, kwargs) (line 630)
        asarray_call_result_9930 = invoke(stypy.reporting.localization.Localization(__file__, 630, 12), asarray_9914, *[list_9915], **kwargs_9929)
        
        # Assigning a type to the variable 'Z' (line 630)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'Z', asarray_call_result_9930)
        
        # Call to assert_equal(...): (line 632)
        # Processing the call arguments (line 632)
        
        # Call to is_monotonic(...): (line 632)
        # Processing the call arguments (line 632)
        # Getting the type of 'Z' (line 632)
        Z_9933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 34), 'Z', False)
        # Processing the call keyword arguments (line 632)
        kwargs_9934 = {}
        # Getting the type of 'is_monotonic' (line 632)
        is_monotonic_9932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 632)
        is_monotonic_call_result_9935 = invoke(stypy.reporting.localization.Localization(__file__, 632, 21), is_monotonic_9932, *[Z_9933], **kwargs_9934)
        
        # Getting the type of 'False' (line 632)
        False_9936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 38), 'False', False)
        # Processing the call keyword arguments (line 632)
        kwargs_9937 = {}
        # Getting the type of 'assert_equal' (line 632)
        assert_equal_9931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 632)
        assert_equal_call_result_9938 = invoke(stypy.reporting.localization.Localization(__file__, 632, 8), assert_equal_9931, *[is_monotonic_call_result_9935, False_9936], **kwargs_9937)
        
        
        # ################# End of 'test_is_monotonic_2x4_F(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_2x4_F' in the type store
        # Getting the type of 'stypy_return_type' (line 628)
        stypy_return_type_9939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9939)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_2x4_F'
        return stypy_return_type_9939


    @norecursion
    def test_is_monotonic_3x4_T(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_3x4_T'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_3x4_T', 634, 4, False)
        # Assigning a type to the variable 'self' (line 635)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_3x4_T')
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_3x4_T.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_3x4_T', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_3x4_T', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_3x4_T(...)' code ##################

        
        # Assigning a Call to a Name (line 636):
        
        # Assigning a Call to a Name (line 636):
        
        # Call to asarray(...): (line 636)
        # Processing the call arguments (line 636)
        
        # Obtaining an instance of the builtin type 'list' (line 636)
        list_9942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 636)
        # Adding element type (line 636)
        
        # Obtaining an instance of the builtin type 'list' (line 636)
        list_9943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 636)
        # Adding element type (line 636)
        int_9944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 24), list_9943, int_9944)
        # Adding element type (line 636)
        int_9945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 24), list_9943, int_9945)
        # Adding element type (line 636)
        float_9946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 24), list_9943, float_9946)
        # Adding element type (line 636)
        int_9947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 24), list_9943, int_9947)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 23), list_9942, list_9943)
        # Adding element type (line 636)
        
        # Obtaining an instance of the builtin type 'list' (line 637)
        list_9948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 637)
        # Adding element type (line 637)
        int_9949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 24), list_9948, int_9949)
        # Adding element type (line 637)
        int_9950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 24), list_9948, int_9950)
        # Adding element type (line 637)
        float_9951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 24), list_9948, float_9951)
        # Adding element type (line 637)
        int_9952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 24), list_9948, int_9952)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 23), list_9942, list_9948)
        # Adding element type (line 636)
        
        # Obtaining an instance of the builtin type 'list' (line 638)
        list_9953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 638)
        # Adding element type (line 638)
        int_9954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 24), list_9953, int_9954)
        # Adding element type (line 638)
        int_9955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 24), list_9953, int_9955)
        # Adding element type (line 638)
        float_9956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 24), list_9953, float_9956)
        # Adding element type (line 638)
        int_9957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 24), list_9953, int_9957)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 23), list_9942, list_9953)
        
        # Processing the call keyword arguments (line 636)
        # Getting the type of 'np' (line 638)
        np_9958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 638)
        double_9959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 47), np_9958, 'double')
        keyword_9960 = double_9959
        kwargs_9961 = {'dtype': keyword_9960}
        # Getting the type of 'np' (line 636)
        np_9940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 636)
        asarray_9941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 636, 12), np_9940, 'asarray')
        # Calling asarray(args, kwargs) (line 636)
        asarray_call_result_9962 = invoke(stypy.reporting.localization.Localization(__file__, 636, 12), asarray_9941, *[list_9942], **kwargs_9961)
        
        # Assigning a type to the variable 'Z' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 8), 'Z', asarray_call_result_9962)
        
        # Call to assert_equal(...): (line 639)
        # Processing the call arguments (line 639)
        
        # Call to is_monotonic(...): (line 639)
        # Processing the call arguments (line 639)
        # Getting the type of 'Z' (line 639)
        Z_9965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 34), 'Z', False)
        # Processing the call keyword arguments (line 639)
        kwargs_9966 = {}
        # Getting the type of 'is_monotonic' (line 639)
        is_monotonic_9964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 639)
        is_monotonic_call_result_9967 = invoke(stypy.reporting.localization.Localization(__file__, 639, 21), is_monotonic_9964, *[Z_9965], **kwargs_9966)
        
        # Getting the type of 'True' (line 639)
        True_9968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 38), 'True', False)
        # Processing the call keyword arguments (line 639)
        kwargs_9969 = {}
        # Getting the type of 'assert_equal' (line 639)
        assert_equal_9963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 639)
        assert_equal_call_result_9970 = invoke(stypy.reporting.localization.Localization(__file__, 639, 8), assert_equal_9963, *[is_monotonic_call_result_9967, True_9968], **kwargs_9969)
        
        
        # ################# End of 'test_is_monotonic_3x4_T(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_3x4_T' in the type store
        # Getting the type of 'stypy_return_type' (line 634)
        stypy_return_type_9971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9971)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_3x4_T'
        return stypy_return_type_9971


    @norecursion
    def test_is_monotonic_3x4_F1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_3x4_F1'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_3x4_F1', 641, 4, False)
        # Assigning a type to the variable 'self' (line 642)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 642, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_3x4_F1')
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_3x4_F1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_3x4_F1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_3x4_F1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_3x4_F1(...)' code ##################

        
        # Assigning a Call to a Name (line 643):
        
        # Assigning a Call to a Name (line 643):
        
        # Call to asarray(...): (line 643)
        # Processing the call arguments (line 643)
        
        # Obtaining an instance of the builtin type 'list' (line 643)
        list_9974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 643)
        # Adding element type (line 643)
        
        # Obtaining an instance of the builtin type 'list' (line 643)
        list_9975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 643)
        # Adding element type (line 643)
        int_9976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 24), list_9975, int_9976)
        # Adding element type (line 643)
        int_9977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 24), list_9975, int_9977)
        # Adding element type (line 643)
        float_9978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 24), list_9975, float_9978)
        # Adding element type (line 643)
        int_9979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 24), list_9975, int_9979)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 23), list_9974, list_9975)
        # Adding element type (line 643)
        
        # Obtaining an instance of the builtin type 'list' (line 644)
        list_9980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 644)
        # Adding element type (line 644)
        int_9981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 644, 24), list_9980, int_9981)
        # Adding element type (line 644)
        int_9982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 644, 24), list_9980, int_9982)
        # Adding element type (line 644)
        float_9983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 644, 24), list_9980, float_9983)
        # Adding element type (line 644)
        int_9984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 644, 24), list_9980, int_9984)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 23), list_9974, list_9980)
        # Adding element type (line 643)
        
        # Obtaining an instance of the builtin type 'list' (line 645)
        list_9985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 645)
        # Adding element type (line 645)
        int_9986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 645, 24), list_9985, int_9986)
        # Adding element type (line 645)
        int_9987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 645, 24), list_9985, int_9987)
        # Adding element type (line 645)
        float_9988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 645, 24), list_9985, float_9988)
        # Adding element type (line 645)
        int_9989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 645, 24), list_9985, int_9989)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 643, 23), list_9974, list_9985)
        
        # Processing the call keyword arguments (line 643)
        # Getting the type of 'np' (line 645)
        np_9990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 645)
        double_9991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 645, 47), np_9990, 'double')
        keyword_9992 = double_9991
        kwargs_9993 = {'dtype': keyword_9992}
        # Getting the type of 'np' (line 643)
        np_9972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 643)
        asarray_9973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 12), np_9972, 'asarray')
        # Calling asarray(args, kwargs) (line 643)
        asarray_call_result_9994 = invoke(stypy.reporting.localization.Localization(__file__, 643, 12), asarray_9973, *[list_9974], **kwargs_9993)
        
        # Assigning a type to the variable 'Z' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 8), 'Z', asarray_call_result_9994)
        
        # Call to assert_equal(...): (line 646)
        # Processing the call arguments (line 646)
        
        # Call to is_monotonic(...): (line 646)
        # Processing the call arguments (line 646)
        # Getting the type of 'Z' (line 646)
        Z_9997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 34), 'Z', False)
        # Processing the call keyword arguments (line 646)
        kwargs_9998 = {}
        # Getting the type of 'is_monotonic' (line 646)
        is_monotonic_9996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 646)
        is_monotonic_call_result_9999 = invoke(stypy.reporting.localization.Localization(__file__, 646, 21), is_monotonic_9996, *[Z_9997], **kwargs_9998)
        
        # Getting the type of 'False' (line 646)
        False_10000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 38), 'False', False)
        # Processing the call keyword arguments (line 646)
        kwargs_10001 = {}
        # Getting the type of 'assert_equal' (line 646)
        assert_equal_9995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 646)
        assert_equal_call_result_10002 = invoke(stypy.reporting.localization.Localization(__file__, 646, 8), assert_equal_9995, *[is_monotonic_call_result_9999, False_10000], **kwargs_10001)
        
        
        # ################# End of 'test_is_monotonic_3x4_F1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_3x4_F1' in the type store
        # Getting the type of 'stypy_return_type' (line 641)
        stypy_return_type_10003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10003)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_3x4_F1'
        return stypy_return_type_10003


    @norecursion
    def test_is_monotonic_3x4_F2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_3x4_F2'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_3x4_F2', 648, 4, False)
        # Assigning a type to the variable 'self' (line 649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_3x4_F2')
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_3x4_F2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_3x4_F2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_3x4_F2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_3x4_F2(...)' code ##################

        
        # Assigning a Call to a Name (line 650):
        
        # Assigning a Call to a Name (line 650):
        
        # Call to asarray(...): (line 650)
        # Processing the call arguments (line 650)
        
        # Obtaining an instance of the builtin type 'list' (line 650)
        list_10006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 650)
        # Adding element type (line 650)
        
        # Obtaining an instance of the builtin type 'list' (line 650)
        list_10007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 650)
        # Adding element type (line 650)
        int_10008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 24), list_10007, int_10008)
        # Adding element type (line 650)
        int_10009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 24), list_10007, int_10009)
        # Adding element type (line 650)
        float_10010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 24), list_10007, float_10010)
        # Adding element type (line 650)
        int_10011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 24), list_10007, int_10011)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), list_10006, list_10007)
        # Adding element type (line 650)
        
        # Obtaining an instance of the builtin type 'list' (line 651)
        list_10012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 651)
        # Adding element type (line 651)
        int_10013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 651, 24), list_10012, int_10013)
        # Adding element type (line 651)
        int_10014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 651, 24), list_10012, int_10014)
        # Adding element type (line 651)
        float_10015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 651, 24), list_10012, float_10015)
        # Adding element type (line 651)
        int_10016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 651, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 651, 24), list_10012, int_10016)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), list_10006, list_10012)
        # Adding element type (line 650)
        
        # Obtaining an instance of the builtin type 'list' (line 652)
        list_10017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 652)
        # Adding element type (line 652)
        int_10018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 24), list_10017, int_10018)
        # Adding element type (line 652)
        int_10019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 24), list_10017, int_10019)
        # Adding element type (line 652)
        float_10020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 24), list_10017, float_10020)
        # Adding element type (line 652)
        int_10021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 24), list_10017, int_10021)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 650, 23), list_10006, list_10017)
        
        # Processing the call keyword arguments (line 650)
        # Getting the type of 'np' (line 652)
        np_10022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 652)
        double_10023 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 652, 47), np_10022, 'double')
        keyword_10024 = double_10023
        kwargs_10025 = {'dtype': keyword_10024}
        # Getting the type of 'np' (line 650)
        np_10004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 650)
        asarray_10005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 12), np_10004, 'asarray')
        # Calling asarray(args, kwargs) (line 650)
        asarray_call_result_10026 = invoke(stypy.reporting.localization.Localization(__file__, 650, 12), asarray_10005, *[list_10006], **kwargs_10025)
        
        # Assigning a type to the variable 'Z' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 8), 'Z', asarray_call_result_10026)
        
        # Call to assert_equal(...): (line 653)
        # Processing the call arguments (line 653)
        
        # Call to is_monotonic(...): (line 653)
        # Processing the call arguments (line 653)
        # Getting the type of 'Z' (line 653)
        Z_10029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 34), 'Z', False)
        # Processing the call keyword arguments (line 653)
        kwargs_10030 = {}
        # Getting the type of 'is_monotonic' (line 653)
        is_monotonic_10028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 653)
        is_monotonic_call_result_10031 = invoke(stypy.reporting.localization.Localization(__file__, 653, 21), is_monotonic_10028, *[Z_10029], **kwargs_10030)
        
        # Getting the type of 'False' (line 653)
        False_10032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 38), 'False', False)
        # Processing the call keyword arguments (line 653)
        kwargs_10033 = {}
        # Getting the type of 'assert_equal' (line 653)
        assert_equal_10027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 653)
        assert_equal_call_result_10034 = invoke(stypy.reporting.localization.Localization(__file__, 653, 8), assert_equal_10027, *[is_monotonic_call_result_10031, False_10032], **kwargs_10033)
        
        
        # ################# End of 'test_is_monotonic_3x4_F2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_3x4_F2' in the type store
        # Getting the type of 'stypy_return_type' (line 648)
        stypy_return_type_10035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10035)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_3x4_F2'
        return stypy_return_type_10035


    @norecursion
    def test_is_monotonic_3x4_F3(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_3x4_F3'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_3x4_F3', 655, 4, False)
        # Assigning a type to the variable 'self' (line 656)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 656, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_3x4_F3')
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_3x4_F3.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_3x4_F3', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_3x4_F3', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_3x4_F3(...)' code ##################

        
        # Assigning a Call to a Name (line 657):
        
        # Assigning a Call to a Name (line 657):
        
        # Call to asarray(...): (line 657)
        # Processing the call arguments (line 657)
        
        # Obtaining an instance of the builtin type 'list' (line 657)
        list_10038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 657)
        # Adding element type (line 657)
        
        # Obtaining an instance of the builtin type 'list' (line 657)
        list_10039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 657)
        # Adding element type (line 657)
        int_10040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 24), list_10039, int_10040)
        # Adding element type (line 657)
        int_10041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 24), list_10039, int_10041)
        # Adding element type (line 657)
        float_10042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 24), list_10039, float_10042)
        # Adding element type (line 657)
        int_10043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 24), list_10039, int_10043)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 23), list_10038, list_10039)
        # Adding element type (line 657)
        
        # Obtaining an instance of the builtin type 'list' (line 658)
        list_10044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 658)
        # Adding element type (line 658)
        int_10045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 24), list_10044, int_10045)
        # Adding element type (line 658)
        int_10046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 24), list_10044, int_10046)
        # Adding element type (line 658)
        float_10047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 24), list_10044, float_10047)
        # Adding element type (line 658)
        int_10048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 658, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 658, 24), list_10044, int_10048)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 23), list_10038, list_10044)
        # Adding element type (line 657)
        
        # Obtaining an instance of the builtin type 'list' (line 659)
        list_10049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 659)
        # Adding element type (line 659)
        int_10050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 24), list_10049, int_10050)
        # Adding element type (line 659)
        int_10051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 24), list_10049, int_10051)
        # Adding element type (line 659)
        float_10052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 24), list_10049, float_10052)
        # Adding element type (line 659)
        int_10053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 659, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 659, 24), list_10049, int_10053)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 657, 23), list_10038, list_10049)
        
        # Processing the call keyword arguments (line 657)
        # Getting the type of 'np' (line 659)
        np_10054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 659)
        double_10055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 659, 47), np_10054, 'double')
        keyword_10056 = double_10055
        kwargs_10057 = {'dtype': keyword_10056}
        # Getting the type of 'np' (line 657)
        np_10036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 657)
        asarray_10037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 12), np_10036, 'asarray')
        # Calling asarray(args, kwargs) (line 657)
        asarray_call_result_10058 = invoke(stypy.reporting.localization.Localization(__file__, 657, 12), asarray_10037, *[list_10038], **kwargs_10057)
        
        # Assigning a type to the variable 'Z' (line 657)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 657, 8), 'Z', asarray_call_result_10058)
        
        # Call to assert_equal(...): (line 660)
        # Processing the call arguments (line 660)
        
        # Call to is_monotonic(...): (line 660)
        # Processing the call arguments (line 660)
        # Getting the type of 'Z' (line 660)
        Z_10061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 34), 'Z', False)
        # Processing the call keyword arguments (line 660)
        kwargs_10062 = {}
        # Getting the type of 'is_monotonic' (line 660)
        is_monotonic_10060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 660)
        is_monotonic_call_result_10063 = invoke(stypy.reporting.localization.Localization(__file__, 660, 21), is_monotonic_10060, *[Z_10061], **kwargs_10062)
        
        # Getting the type of 'False' (line 660)
        False_10064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 38), 'False', False)
        # Processing the call keyword arguments (line 660)
        kwargs_10065 = {}
        # Getting the type of 'assert_equal' (line 660)
        assert_equal_10059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 660)
        assert_equal_call_result_10066 = invoke(stypy.reporting.localization.Localization(__file__, 660, 8), assert_equal_10059, *[is_monotonic_call_result_10063, False_10064], **kwargs_10065)
        
        
        # ################# End of 'test_is_monotonic_3x4_F3(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_3x4_F3' in the type store
        # Getting the type of 'stypy_return_type' (line 655)
        stypy_return_type_10067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10067)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_3x4_F3'
        return stypy_return_type_10067


    @norecursion
    def test_is_monotonic_tdist_linkage1(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_tdist_linkage1'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_tdist_linkage1', 662, 4, False)
        # Assigning a type to the variable 'self' (line 663)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 663, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_tdist_linkage1')
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_tdist_linkage1.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_tdist_linkage1', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_tdist_linkage1', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_tdist_linkage1(...)' code ##################

        
        # Assigning a Call to a Name (line 665):
        
        # Assigning a Call to a Name (line 665):
        
        # Call to linkage(...): (line 665)
        # Processing the call arguments (line 665)
        # Getting the type of 'hierarchy_test_data' (line 665)
        hierarchy_test_data_10069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 665)
        ytdist_10070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 20), hierarchy_test_data_10069, 'ytdist')
        str_10071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 48), 'str', 'single')
        # Processing the call keyword arguments (line 665)
        kwargs_10072 = {}
        # Getting the type of 'linkage' (line 665)
        linkage_10068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 665)
        linkage_call_result_10073 = invoke(stypy.reporting.localization.Localization(__file__, 665, 12), linkage_10068, *[ytdist_10070, str_10071], **kwargs_10072)
        
        # Assigning a type to the variable 'Z' (line 665)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 665, 8), 'Z', linkage_call_result_10073)
        
        # Call to assert_equal(...): (line 666)
        # Processing the call arguments (line 666)
        
        # Call to is_monotonic(...): (line 666)
        # Processing the call arguments (line 666)
        # Getting the type of 'Z' (line 666)
        Z_10076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 34), 'Z', False)
        # Processing the call keyword arguments (line 666)
        kwargs_10077 = {}
        # Getting the type of 'is_monotonic' (line 666)
        is_monotonic_10075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 666)
        is_monotonic_call_result_10078 = invoke(stypy.reporting.localization.Localization(__file__, 666, 21), is_monotonic_10075, *[Z_10076], **kwargs_10077)
        
        # Getting the type of 'True' (line 666)
        True_10079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 38), 'True', False)
        # Processing the call keyword arguments (line 666)
        kwargs_10080 = {}
        # Getting the type of 'assert_equal' (line 666)
        assert_equal_10074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 666)
        assert_equal_call_result_10081 = invoke(stypy.reporting.localization.Localization(__file__, 666, 8), assert_equal_10074, *[is_monotonic_call_result_10078, True_10079], **kwargs_10080)
        
        
        # ################# End of 'test_is_monotonic_tdist_linkage1(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_tdist_linkage1' in the type store
        # Getting the type of 'stypy_return_type' (line 662)
        stypy_return_type_10082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10082)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_tdist_linkage1'
        return stypy_return_type_10082


    @norecursion
    def test_is_monotonic_tdist_linkage2(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_tdist_linkage2'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_tdist_linkage2', 668, 4, False)
        # Assigning a type to the variable 'self' (line 669)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 669, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_tdist_linkage2')
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_tdist_linkage2.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_tdist_linkage2', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_tdist_linkage2', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_tdist_linkage2(...)' code ##################

        
        # Assigning a Call to a Name (line 671):
        
        # Assigning a Call to a Name (line 671):
        
        # Call to linkage(...): (line 671)
        # Processing the call arguments (line 671)
        # Getting the type of 'hierarchy_test_data' (line 671)
        hierarchy_test_data_10084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 671)
        ytdist_10085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 671, 20), hierarchy_test_data_10084, 'ytdist')
        str_10086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 48), 'str', 'single')
        # Processing the call keyword arguments (line 671)
        kwargs_10087 = {}
        # Getting the type of 'linkage' (line 671)
        linkage_10083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 671)
        linkage_call_result_10088 = invoke(stypy.reporting.localization.Localization(__file__, 671, 12), linkage_10083, *[ytdist_10085, str_10086], **kwargs_10087)
        
        # Assigning a type to the variable 'Z' (line 671)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 671, 8), 'Z', linkage_call_result_10088)
        
        # Assigning a Num to a Subscript (line 672):
        
        # Assigning a Num to a Subscript (line 672):
        float_10089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 17), 'float')
        # Getting the type of 'Z' (line 672)
        Z_10090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 8), 'Z')
        
        # Obtaining an instance of the builtin type 'tuple' (line 672)
        tuple_10091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 10), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 672)
        # Adding element type (line 672)
        int_10092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 10), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 672, 10), tuple_10091, int_10092)
        # Adding element type (line 672)
        int_10093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 12), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 672, 10), tuple_10091, int_10093)
        
        # Storing an element on a container (line 672)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 672, 8), Z_10090, (tuple_10091, float_10089))
        
        # Call to assert_equal(...): (line 673)
        # Processing the call arguments (line 673)
        
        # Call to is_monotonic(...): (line 673)
        # Processing the call arguments (line 673)
        # Getting the type of 'Z' (line 673)
        Z_10096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 34), 'Z', False)
        # Processing the call keyword arguments (line 673)
        kwargs_10097 = {}
        # Getting the type of 'is_monotonic' (line 673)
        is_monotonic_10095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 673)
        is_monotonic_call_result_10098 = invoke(stypy.reporting.localization.Localization(__file__, 673, 21), is_monotonic_10095, *[Z_10096], **kwargs_10097)
        
        # Getting the type of 'False' (line 673)
        False_10099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 38), 'False', False)
        # Processing the call keyword arguments (line 673)
        kwargs_10100 = {}
        # Getting the type of 'assert_equal' (line 673)
        assert_equal_10094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 673)
        assert_equal_call_result_10101 = invoke(stypy.reporting.localization.Localization(__file__, 673, 8), assert_equal_10094, *[is_monotonic_call_result_10098, False_10099], **kwargs_10100)
        
        
        # ################# End of 'test_is_monotonic_tdist_linkage2(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_tdist_linkage2' in the type store
        # Getting the type of 'stypy_return_type' (line 668)
        stypy_return_type_10102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10102)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_tdist_linkage2'
        return stypy_return_type_10102


    @norecursion
    def test_is_monotonic_Q_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_is_monotonic_Q_linkage'
        module_type_store = module_type_store.open_function_context('test_is_monotonic_Q_linkage', 675, 4, False)
        # Assigning a type to the variable 'self' (line 676)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 676, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_function_name', 'TestIsMonotonic.test_is_monotonic_Q_linkage')
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestIsMonotonic.test_is_monotonic_Q_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.test_is_monotonic_Q_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_is_monotonic_Q_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_is_monotonic_Q_linkage(...)' code ##################

        
        # Assigning a Attribute to a Name (line 678):
        
        # Assigning a Attribute to a Name (line 678):
        # Getting the type of 'hierarchy_test_data' (line 678)
        hierarchy_test_data_10103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'hierarchy_test_data')
        # Obtaining the member 'Q_X' of a type (line 678)
        Q_X_10104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 12), hierarchy_test_data_10103, 'Q_X')
        # Assigning a type to the variable 'X' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 8), 'X', Q_X_10104)
        
        # Assigning a Call to a Name (line 679):
        
        # Assigning a Call to a Name (line 679):
        
        # Call to linkage(...): (line 679)
        # Processing the call arguments (line 679)
        # Getting the type of 'X' (line 679)
        X_10106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 20), 'X', False)
        str_10107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 679, 23), 'str', 'single')
        # Processing the call keyword arguments (line 679)
        kwargs_10108 = {}
        # Getting the type of 'linkage' (line 679)
        linkage_10105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 679)
        linkage_call_result_10109 = invoke(stypy.reporting.localization.Localization(__file__, 679, 12), linkage_10105, *[X_10106, str_10107], **kwargs_10108)
        
        # Assigning a type to the variable 'Z' (line 679)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 679, 8), 'Z', linkage_call_result_10109)
        
        # Call to assert_equal(...): (line 680)
        # Processing the call arguments (line 680)
        
        # Call to is_monotonic(...): (line 680)
        # Processing the call arguments (line 680)
        # Getting the type of 'Z' (line 680)
        Z_10112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 34), 'Z', False)
        # Processing the call keyword arguments (line 680)
        kwargs_10113 = {}
        # Getting the type of 'is_monotonic' (line 680)
        is_monotonic_10111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 21), 'is_monotonic', False)
        # Calling is_monotonic(args, kwargs) (line 680)
        is_monotonic_call_result_10114 = invoke(stypy.reporting.localization.Localization(__file__, 680, 21), is_monotonic_10111, *[Z_10112], **kwargs_10113)
        
        # Getting the type of 'True' (line 680)
        True_10115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 38), 'True', False)
        # Processing the call keyword arguments (line 680)
        kwargs_10116 = {}
        # Getting the type of 'assert_equal' (line 680)
        assert_equal_10110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 680)
        assert_equal_call_result_10117 = invoke(stypy.reporting.localization.Localization(__file__, 680, 8), assert_equal_10110, *[is_monotonic_call_result_10114, True_10115], **kwargs_10116)
        
        
        # ################# End of 'test_is_monotonic_Q_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_is_monotonic_Q_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 675)
        stypy_return_type_10118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10118)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_is_monotonic_Q_linkage'
        return stypy_return_type_10118


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 611, 0, False)
        # Assigning a type to the variable 'self' (line 612)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestIsMonotonic.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestIsMonotonic' (line 611)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 0), 'TestIsMonotonic', TestIsMonotonic)
# Declaration of the 'TestMaxDists' class

class TestMaxDists(object, ):

    @norecursion
    def test_maxdists_empty_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxdists_empty_linkage'
        module_type_store = module_type_store.open_function_context('test_maxdists_empty_linkage', 684, 4, False)
        # Assigning a type to the variable 'self' (line 685)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxDists.test_maxdists_empty_linkage')
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxDists.test_maxdists_empty_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxDists.test_maxdists_empty_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxdists_empty_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxdists_empty_linkage(...)' code ##################

        
        # Assigning a Call to a Name (line 686):
        
        # Assigning a Call to a Name (line 686):
        
        # Call to zeros(...): (line 686)
        # Processing the call arguments (line 686)
        
        # Obtaining an instance of the builtin type 'tuple' (line 686)
        tuple_10121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 686)
        # Adding element type (line 686)
        int_10122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 686, 22), tuple_10121, int_10122)
        # Adding element type (line 686)
        int_10123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 686, 22), tuple_10121, int_10123)
        
        # Processing the call keyword arguments (line 686)
        # Getting the type of 'np' (line 686)
        np_10124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 35), 'np', False)
        # Obtaining the member 'double' of a type (line 686)
        double_10125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 35), np_10124, 'double')
        keyword_10126 = double_10125
        kwargs_10127 = {'dtype': keyword_10126}
        # Getting the type of 'np' (line 686)
        np_10119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 686)
        zeros_10120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 12), np_10119, 'zeros')
        # Calling zeros(args, kwargs) (line 686)
        zeros_call_result_10128 = invoke(stypy.reporting.localization.Localization(__file__, 686, 12), zeros_10120, *[tuple_10121], **kwargs_10127)
        
        # Assigning a type to the variable 'Z' (line 686)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 686, 8), 'Z', zeros_call_result_10128)
        
        # Call to assert_raises(...): (line 687)
        # Processing the call arguments (line 687)
        # Getting the type of 'ValueError' (line 687)
        ValueError_10130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 22), 'ValueError', False)
        # Getting the type of 'maxdists' (line 687)
        maxdists_10131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 34), 'maxdists', False)
        # Getting the type of 'Z' (line 687)
        Z_10132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 44), 'Z', False)
        # Processing the call keyword arguments (line 687)
        kwargs_10133 = {}
        # Getting the type of 'assert_raises' (line 687)
        assert_raises_10129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 687)
        assert_raises_call_result_10134 = invoke(stypy.reporting.localization.Localization(__file__, 687, 8), assert_raises_10129, *[ValueError_10130, maxdists_10131, Z_10132], **kwargs_10133)
        
        
        # ################# End of 'test_maxdists_empty_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxdists_empty_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 684)
        stypy_return_type_10135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10135)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxdists_empty_linkage'
        return stypy_return_type_10135


    @norecursion
    def test_maxdists_one_cluster_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxdists_one_cluster_linkage'
        module_type_store = module_type_store.open_function_context('test_maxdists_one_cluster_linkage', 689, 4, False)
        # Assigning a type to the variable 'self' (line 690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxDists.test_maxdists_one_cluster_linkage')
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxDists.test_maxdists_one_cluster_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxDists.test_maxdists_one_cluster_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxdists_one_cluster_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxdists_one_cluster_linkage(...)' code ##################

        
        # Assigning a Call to a Name (line 691):
        
        # Assigning a Call to a Name (line 691):
        
        # Call to asarray(...): (line 691)
        # Processing the call arguments (line 691)
        
        # Obtaining an instance of the builtin type 'list' (line 691)
        list_10138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 691)
        # Adding element type (line 691)
        
        # Obtaining an instance of the builtin type 'list' (line 691)
        list_10139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 691)
        # Adding element type (line 691)
        int_10140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 691, 24), list_10139, int_10140)
        # Adding element type (line 691)
        int_10141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 691, 24), list_10139, int_10141)
        # Adding element type (line 691)
        float_10142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 691, 24), list_10139, float_10142)
        # Adding element type (line 691)
        int_10143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 691, 24), list_10139, int_10143)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 691, 23), list_10138, list_10139)
        
        # Processing the call keyword arguments (line 691)
        # Getting the type of 'np' (line 691)
        np_10144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 691)
        double_10145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 47), np_10144, 'double')
        keyword_10146 = double_10145
        kwargs_10147 = {'dtype': keyword_10146}
        # Getting the type of 'np' (line 691)
        np_10136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 691)
        asarray_10137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 12), np_10136, 'asarray')
        # Calling asarray(args, kwargs) (line 691)
        asarray_call_result_10148 = invoke(stypy.reporting.localization.Localization(__file__, 691, 12), asarray_10137, *[list_10138], **kwargs_10147)
        
        # Assigning a type to the variable 'Z' (line 691)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 691, 8), 'Z', asarray_call_result_10148)
        
        # Assigning a Call to a Name (line 692):
        
        # Assigning a Call to a Name (line 692):
        
        # Call to maxdists(...): (line 692)
        # Processing the call arguments (line 692)
        # Getting the type of 'Z' (line 692)
        Z_10150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 22), 'Z', False)
        # Processing the call keyword arguments (line 692)
        kwargs_10151 = {}
        # Getting the type of 'maxdists' (line 692)
        maxdists_10149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 13), 'maxdists', False)
        # Calling maxdists(args, kwargs) (line 692)
        maxdists_call_result_10152 = invoke(stypy.reporting.localization.Localization(__file__, 692, 13), maxdists_10149, *[Z_10150], **kwargs_10151)
        
        # Assigning a type to the variable 'MD' (line 692)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 8), 'MD', maxdists_call_result_10152)
        
        # Assigning a Call to a Name (line 693):
        
        # Assigning a Call to a Name (line 693):
        
        # Call to calculate_maximum_distances(...): (line 693)
        # Processing the call arguments (line 693)
        # Getting the type of 'Z' (line 693)
        Z_10154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 49), 'Z', False)
        # Processing the call keyword arguments (line 693)
        kwargs_10155 = {}
        # Getting the type of 'calculate_maximum_distances' (line 693)
        calculate_maximum_distances_10153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 21), 'calculate_maximum_distances', False)
        # Calling calculate_maximum_distances(args, kwargs) (line 693)
        calculate_maximum_distances_call_result_10156 = invoke(stypy.reporting.localization.Localization(__file__, 693, 21), calculate_maximum_distances_10153, *[Z_10154], **kwargs_10155)
        
        # Assigning a type to the variable 'expectedMD' (line 693)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 693, 8), 'expectedMD', calculate_maximum_distances_call_result_10156)
        
        # Call to assert_allclose(...): (line 694)
        # Processing the call arguments (line 694)
        # Getting the type of 'MD' (line 694)
        MD_10158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 24), 'MD', False)
        # Getting the type of 'expectedMD' (line 694)
        expectedMD_10159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 28), 'expectedMD', False)
        # Processing the call keyword arguments (line 694)
        float_10160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 694, 45), 'float')
        keyword_10161 = float_10160
        kwargs_10162 = {'atol': keyword_10161}
        # Getting the type of 'assert_allclose' (line 694)
        assert_allclose_10157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 694)
        assert_allclose_call_result_10163 = invoke(stypy.reporting.localization.Localization(__file__, 694, 8), assert_allclose_10157, *[MD_10158, expectedMD_10159], **kwargs_10162)
        
        
        # ################# End of 'test_maxdists_one_cluster_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxdists_one_cluster_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 689)
        stypy_return_type_10164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10164)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxdists_one_cluster_linkage'
        return stypy_return_type_10164


    @norecursion
    def test_maxdists_Q_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxdists_Q_linkage'
        module_type_store = module_type_store.open_function_context('test_maxdists_Q_linkage', 696, 4, False)
        # Assigning a type to the variable 'self' (line 697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 697, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxDists.test_maxdists_Q_linkage')
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxDists.test_maxdists_Q_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxDists.test_maxdists_Q_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxdists_Q_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxdists_Q_linkage(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 697)
        list_10165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 697)
        # Adding element type (line 697)
        str_10166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 23), 'str', 'single')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 22), list_10165, str_10166)
        # Adding element type (line 697)
        str_10167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 33), 'str', 'complete')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 22), list_10165, str_10167)
        # Adding element type (line 697)
        str_10168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 45), 'str', 'ward')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 22), list_10165, str_10168)
        # Adding element type (line 697)
        str_10169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 53), 'str', 'centroid')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 22), list_10165, str_10169)
        # Adding element type (line 697)
        str_10170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 697, 65), 'str', 'median')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 697, 22), list_10165, str_10170)
        
        # Testing the type of a for loop iterable (line 697)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 697, 8), list_10165)
        # Getting the type of the for loop variable (line 697)
        for_loop_var_10171 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 697, 8), list_10165)
        # Assigning a type to the variable 'method' (line 697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 697, 8), 'method', for_loop_var_10171)
        # SSA begins for a for statement (line 697)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_maxdists_Q_linkage(...): (line 698)
        # Processing the call arguments (line 698)
        # Getting the type of 'method' (line 698)
        method_10174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 42), 'method', False)
        # Processing the call keyword arguments (line 698)
        kwargs_10175 = {}
        # Getting the type of 'self' (line 698)
        self_10172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 12), 'self', False)
        # Obtaining the member 'check_maxdists_Q_linkage' of a type (line 698)
        check_maxdists_Q_linkage_10173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 12), self_10172, 'check_maxdists_Q_linkage')
        # Calling check_maxdists_Q_linkage(args, kwargs) (line 698)
        check_maxdists_Q_linkage_call_result_10176 = invoke(stypy.reporting.localization.Localization(__file__, 698, 12), check_maxdists_Q_linkage_10173, *[method_10174], **kwargs_10175)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_maxdists_Q_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxdists_Q_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 696)
        stypy_return_type_10177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10177)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxdists_Q_linkage'
        return stypy_return_type_10177


    @norecursion
    def check_maxdists_Q_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_maxdists_Q_linkage'
        module_type_store = module_type_store.open_function_context('check_maxdists_Q_linkage', 700, 4, False)
        # Assigning a type to the variable 'self' (line 701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxDists.check_maxdists_Q_linkage')
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_param_names_list', ['method'])
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxDists.check_maxdists_Q_linkage.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxDists.check_maxdists_Q_linkage', ['method'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_maxdists_Q_linkage', localization, ['method'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_maxdists_Q_linkage(...)' code ##################

        
        # Assigning a Attribute to a Name (line 702):
        
        # Assigning a Attribute to a Name (line 702):
        # Getting the type of 'hierarchy_test_data' (line 702)
        hierarchy_test_data_10178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'hierarchy_test_data')
        # Obtaining the member 'Q_X' of a type (line 702)
        Q_X_10179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 12), hierarchy_test_data_10178, 'Q_X')
        # Assigning a type to the variable 'X' (line 702)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 8), 'X', Q_X_10179)
        
        # Assigning a Call to a Name (line 703):
        
        # Assigning a Call to a Name (line 703):
        
        # Call to linkage(...): (line 703)
        # Processing the call arguments (line 703)
        # Getting the type of 'X' (line 703)
        X_10181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 20), 'X', False)
        # Getting the type of 'method' (line 703)
        method_10182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 23), 'method', False)
        # Processing the call keyword arguments (line 703)
        kwargs_10183 = {}
        # Getting the type of 'linkage' (line 703)
        linkage_10180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 703)
        linkage_call_result_10184 = invoke(stypy.reporting.localization.Localization(__file__, 703, 12), linkage_10180, *[X_10181, method_10182], **kwargs_10183)
        
        # Assigning a type to the variable 'Z' (line 703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 703, 8), 'Z', linkage_call_result_10184)
        
        # Assigning a Call to a Name (line 704):
        
        # Assigning a Call to a Name (line 704):
        
        # Call to maxdists(...): (line 704)
        # Processing the call arguments (line 704)
        # Getting the type of 'Z' (line 704)
        Z_10186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 22), 'Z', False)
        # Processing the call keyword arguments (line 704)
        kwargs_10187 = {}
        # Getting the type of 'maxdists' (line 704)
        maxdists_10185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 13), 'maxdists', False)
        # Calling maxdists(args, kwargs) (line 704)
        maxdists_call_result_10188 = invoke(stypy.reporting.localization.Localization(__file__, 704, 13), maxdists_10185, *[Z_10186], **kwargs_10187)
        
        # Assigning a type to the variable 'MD' (line 704)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 8), 'MD', maxdists_call_result_10188)
        
        # Assigning a Call to a Name (line 705):
        
        # Assigning a Call to a Name (line 705):
        
        # Call to calculate_maximum_distances(...): (line 705)
        # Processing the call arguments (line 705)
        # Getting the type of 'Z' (line 705)
        Z_10190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 49), 'Z', False)
        # Processing the call keyword arguments (line 705)
        kwargs_10191 = {}
        # Getting the type of 'calculate_maximum_distances' (line 705)
        calculate_maximum_distances_10189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 21), 'calculate_maximum_distances', False)
        # Calling calculate_maximum_distances(args, kwargs) (line 705)
        calculate_maximum_distances_call_result_10192 = invoke(stypy.reporting.localization.Localization(__file__, 705, 21), calculate_maximum_distances_10189, *[Z_10190], **kwargs_10191)
        
        # Assigning a type to the variable 'expectedMD' (line 705)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'expectedMD', calculate_maximum_distances_call_result_10192)
        
        # Call to assert_allclose(...): (line 706)
        # Processing the call arguments (line 706)
        # Getting the type of 'MD' (line 706)
        MD_10194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 24), 'MD', False)
        # Getting the type of 'expectedMD' (line 706)
        expectedMD_10195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 28), 'expectedMD', False)
        # Processing the call keyword arguments (line 706)
        float_10196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 706, 45), 'float')
        keyword_10197 = float_10196
        kwargs_10198 = {'atol': keyword_10197}
        # Getting the type of 'assert_allclose' (line 706)
        assert_allclose_10193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 706)
        assert_allclose_call_result_10199 = invoke(stypy.reporting.localization.Localization(__file__, 706, 8), assert_allclose_10193, *[MD_10194, expectedMD_10195], **kwargs_10198)
        
        
        # ################# End of 'check_maxdists_Q_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_maxdists_Q_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 700)
        stypy_return_type_10200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10200)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_maxdists_Q_linkage'
        return stypy_return_type_10200


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 683, 0, False)
        # Assigning a type to the variable 'self' (line 684)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 684, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxDists.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestMaxDists' (line 683)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 0), 'TestMaxDists', TestMaxDists)
# Declaration of the 'TestMaxInconsts' class

class TestMaxInconsts(object, ):

    @norecursion
    def test_maxinconsts_empty_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxinconsts_empty_linkage'
        module_type_store = module_type_store.open_function_context('test_maxinconsts_empty_linkage', 710, 4, False)
        # Assigning a type to the variable 'self' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxInconsts.test_maxinconsts_empty_linkage')
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxInconsts.test_maxinconsts_empty_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxInconsts.test_maxinconsts_empty_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxinconsts_empty_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxinconsts_empty_linkage(...)' code ##################

        
        # Assigning a Call to a Name (line 712):
        
        # Assigning a Call to a Name (line 712):
        
        # Call to zeros(...): (line 712)
        # Processing the call arguments (line 712)
        
        # Obtaining an instance of the builtin type 'tuple' (line 712)
        tuple_10203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 712)
        # Adding element type (line 712)
        int_10204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 22), tuple_10203, int_10204)
        # Adding element type (line 712)
        int_10205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 22), tuple_10203, int_10205)
        
        # Processing the call keyword arguments (line 712)
        # Getting the type of 'np' (line 712)
        np_10206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 35), 'np', False)
        # Obtaining the member 'double' of a type (line 712)
        double_10207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 35), np_10206, 'double')
        keyword_10208 = double_10207
        kwargs_10209 = {'dtype': keyword_10208}
        # Getting the type of 'np' (line 712)
        np_10201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 712)
        zeros_10202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 12), np_10201, 'zeros')
        # Calling zeros(args, kwargs) (line 712)
        zeros_call_result_10210 = invoke(stypy.reporting.localization.Localization(__file__, 712, 12), zeros_10202, *[tuple_10203], **kwargs_10209)
        
        # Assigning a type to the variable 'Z' (line 712)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 712, 8), 'Z', zeros_call_result_10210)
        
        # Assigning a Call to a Name (line 713):
        
        # Assigning a Call to a Name (line 713):
        
        # Call to zeros(...): (line 713)
        # Processing the call arguments (line 713)
        
        # Obtaining an instance of the builtin type 'tuple' (line 713)
        tuple_10213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 713)
        # Adding element type (line 713)
        int_10214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 713, 22), tuple_10213, int_10214)
        # Adding element type (line 713)
        int_10215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 713, 22), tuple_10213, int_10215)
        
        # Processing the call keyword arguments (line 713)
        # Getting the type of 'np' (line 713)
        np_10216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 35), 'np', False)
        # Obtaining the member 'double' of a type (line 713)
        double_10217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 35), np_10216, 'double')
        keyword_10218 = double_10217
        kwargs_10219 = {'dtype': keyword_10218}
        # Getting the type of 'np' (line 713)
        np_10211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 713)
        zeros_10212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 12), np_10211, 'zeros')
        # Calling zeros(args, kwargs) (line 713)
        zeros_call_result_10220 = invoke(stypy.reporting.localization.Localization(__file__, 713, 12), zeros_10212, *[tuple_10213], **kwargs_10219)
        
        # Assigning a type to the variable 'R' (line 713)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), 'R', zeros_call_result_10220)
        
        # Call to assert_raises(...): (line 714)
        # Processing the call arguments (line 714)
        # Getting the type of 'ValueError' (line 714)
        ValueError_10222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 22), 'ValueError', False)
        # Getting the type of 'maxinconsts' (line 714)
        maxinconsts_10223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 34), 'maxinconsts', False)
        # Getting the type of 'Z' (line 714)
        Z_10224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 47), 'Z', False)
        # Getting the type of 'R' (line 714)
        R_10225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 50), 'R', False)
        # Processing the call keyword arguments (line 714)
        kwargs_10226 = {}
        # Getting the type of 'assert_raises' (line 714)
        assert_raises_10221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 714)
        assert_raises_call_result_10227 = invoke(stypy.reporting.localization.Localization(__file__, 714, 8), assert_raises_10221, *[ValueError_10222, maxinconsts_10223, Z_10224, R_10225], **kwargs_10226)
        
        
        # ################# End of 'test_maxinconsts_empty_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxinconsts_empty_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 710)
        stypy_return_type_10228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10228)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxinconsts_empty_linkage'
        return stypy_return_type_10228


    @norecursion
    def test_maxinconsts_difrow_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxinconsts_difrow_linkage'
        module_type_store = module_type_store.open_function_context('test_maxinconsts_difrow_linkage', 716, 4, False)
        # Assigning a type to the variable 'self' (line 717)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 717, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxInconsts.test_maxinconsts_difrow_linkage')
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxInconsts.test_maxinconsts_difrow_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxInconsts.test_maxinconsts_difrow_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxinconsts_difrow_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxinconsts_difrow_linkage(...)' code ##################

        
        # Assigning a Call to a Name (line 719):
        
        # Assigning a Call to a Name (line 719):
        
        # Call to asarray(...): (line 719)
        # Processing the call arguments (line 719)
        
        # Obtaining an instance of the builtin type 'list' (line 719)
        list_10231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 719)
        # Adding element type (line 719)
        
        # Obtaining an instance of the builtin type 'list' (line 719)
        list_10232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 719)
        # Adding element type (line 719)
        int_10233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 24), list_10232, int_10233)
        # Adding element type (line 719)
        int_10234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 24), list_10232, int_10234)
        # Adding element type (line 719)
        float_10235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 24), list_10232, float_10235)
        # Adding element type (line 719)
        int_10236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 719, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 24), list_10232, int_10236)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 719, 23), list_10231, list_10232)
        
        # Processing the call keyword arguments (line 719)
        # Getting the type of 'np' (line 719)
        np_10237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 719)
        double_10238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 47), np_10237, 'double')
        keyword_10239 = double_10238
        kwargs_10240 = {'dtype': keyword_10239}
        # Getting the type of 'np' (line 719)
        np_10229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 719)
        asarray_10230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 12), np_10229, 'asarray')
        # Calling asarray(args, kwargs) (line 719)
        asarray_call_result_10241 = invoke(stypy.reporting.localization.Localization(__file__, 719, 12), asarray_10230, *[list_10231], **kwargs_10240)
        
        # Assigning a type to the variable 'Z' (line 719)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 719, 8), 'Z', asarray_call_result_10241)
        
        # Assigning a Call to a Name (line 720):
        
        # Assigning a Call to a Name (line 720):
        
        # Call to rand(...): (line 720)
        # Processing the call arguments (line 720)
        int_10245 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 27), 'int')
        int_10246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 30), 'int')
        # Processing the call keyword arguments (line 720)
        kwargs_10247 = {}
        # Getting the type of 'np' (line 720)
        np_10242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 720)
        random_10243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 12), np_10242, 'random')
        # Obtaining the member 'rand' of a type (line 720)
        rand_10244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 12), random_10243, 'rand')
        # Calling rand(args, kwargs) (line 720)
        rand_call_result_10248 = invoke(stypy.reporting.localization.Localization(__file__, 720, 12), rand_10244, *[int_10245, int_10246], **kwargs_10247)
        
        # Assigning a type to the variable 'R' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 8), 'R', rand_call_result_10248)
        
        # Call to assert_raises(...): (line 721)
        # Processing the call arguments (line 721)
        # Getting the type of 'ValueError' (line 721)
        ValueError_10250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 22), 'ValueError', False)
        # Getting the type of 'maxinconsts' (line 721)
        maxinconsts_10251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 34), 'maxinconsts', False)
        # Getting the type of 'Z' (line 721)
        Z_10252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 47), 'Z', False)
        # Getting the type of 'R' (line 721)
        R_10253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 50), 'R', False)
        # Processing the call keyword arguments (line 721)
        kwargs_10254 = {}
        # Getting the type of 'assert_raises' (line 721)
        assert_raises_10249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 721)
        assert_raises_call_result_10255 = invoke(stypy.reporting.localization.Localization(__file__, 721, 8), assert_raises_10249, *[ValueError_10250, maxinconsts_10251, Z_10252, R_10253], **kwargs_10254)
        
        
        # ################# End of 'test_maxinconsts_difrow_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxinconsts_difrow_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 716)
        stypy_return_type_10256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10256)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxinconsts_difrow_linkage'
        return stypy_return_type_10256


    @norecursion
    def test_maxinconsts_one_cluster_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxinconsts_one_cluster_linkage'
        module_type_store = module_type_store.open_function_context('test_maxinconsts_one_cluster_linkage', 723, 4, False)
        # Assigning a type to the variable 'self' (line 724)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxInconsts.test_maxinconsts_one_cluster_linkage')
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxInconsts.test_maxinconsts_one_cluster_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxInconsts.test_maxinconsts_one_cluster_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxinconsts_one_cluster_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxinconsts_one_cluster_linkage(...)' code ##################

        
        # Assigning a Call to a Name (line 725):
        
        # Assigning a Call to a Name (line 725):
        
        # Call to asarray(...): (line 725)
        # Processing the call arguments (line 725)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_10259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_10260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        int_10261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 24), list_10260, int_10261)
        # Adding element type (line 725)
        int_10262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 24), list_10260, int_10262)
        # Adding element type (line 725)
        float_10263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 24), list_10260, float_10263)
        # Adding element type (line 725)
        int_10264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 24), list_10260, int_10264)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 23), list_10259, list_10260)
        
        # Processing the call keyword arguments (line 725)
        # Getting the type of 'np' (line 725)
        np_10265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 725)
        double_10266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 47), np_10265, 'double')
        keyword_10267 = double_10266
        kwargs_10268 = {'dtype': keyword_10267}
        # Getting the type of 'np' (line 725)
        np_10257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 725)
        asarray_10258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 12), np_10257, 'asarray')
        # Calling asarray(args, kwargs) (line 725)
        asarray_call_result_10269 = invoke(stypy.reporting.localization.Localization(__file__, 725, 12), asarray_10258, *[list_10259], **kwargs_10268)
        
        # Assigning a type to the variable 'Z' (line 725)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 725, 8), 'Z', asarray_call_result_10269)
        
        # Assigning a Call to a Name (line 726):
        
        # Assigning a Call to a Name (line 726):
        
        # Call to asarray(...): (line 726)
        # Processing the call arguments (line 726)
        
        # Obtaining an instance of the builtin type 'list' (line 726)
        list_10272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 726)
        # Adding element type (line 726)
        
        # Obtaining an instance of the builtin type 'list' (line 726)
        list_10273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 726)
        # Adding element type (line 726)
        int_10274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 24), list_10273, int_10274)
        # Adding element type (line 726)
        int_10275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 24), list_10273, int_10275)
        # Adding element type (line 726)
        int_10276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 24), list_10273, int_10276)
        # Adding element type (line 726)
        float_10277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 726, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 24), list_10273, float_10277)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 726, 23), list_10272, list_10273)
        
        # Processing the call keyword arguments (line 726)
        # Getting the type of 'np' (line 726)
        np_10278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 726)
        double_10279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 47), np_10278, 'double')
        keyword_10280 = double_10279
        kwargs_10281 = {'dtype': keyword_10280}
        # Getting the type of 'np' (line 726)
        np_10270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 726)
        asarray_10271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 12), np_10270, 'asarray')
        # Calling asarray(args, kwargs) (line 726)
        asarray_call_result_10282 = invoke(stypy.reporting.localization.Localization(__file__, 726, 12), asarray_10271, *[list_10272], **kwargs_10281)
        
        # Assigning a type to the variable 'R' (line 726)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 726, 8), 'R', asarray_call_result_10282)
        
        # Assigning a Call to a Name (line 727):
        
        # Assigning a Call to a Name (line 727):
        
        # Call to maxinconsts(...): (line 727)
        # Processing the call arguments (line 727)
        # Getting the type of 'Z' (line 727)
        Z_10284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 25), 'Z', False)
        # Getting the type of 'R' (line 727)
        R_10285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 28), 'R', False)
        # Processing the call keyword arguments (line 727)
        kwargs_10286 = {}
        # Getting the type of 'maxinconsts' (line 727)
        maxinconsts_10283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 13), 'maxinconsts', False)
        # Calling maxinconsts(args, kwargs) (line 727)
        maxinconsts_call_result_10287 = invoke(stypy.reporting.localization.Localization(__file__, 727, 13), maxinconsts_10283, *[Z_10284, R_10285], **kwargs_10286)
        
        # Assigning a type to the variable 'MD' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 8), 'MD', maxinconsts_call_result_10287)
        
        # Assigning a Call to a Name (line 728):
        
        # Assigning a Call to a Name (line 728):
        
        # Call to calculate_maximum_inconsistencies(...): (line 728)
        # Processing the call arguments (line 728)
        # Getting the type of 'Z' (line 728)
        Z_10289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 55), 'Z', False)
        # Getting the type of 'R' (line 728)
        R_10290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 58), 'R', False)
        # Processing the call keyword arguments (line 728)
        kwargs_10291 = {}
        # Getting the type of 'calculate_maximum_inconsistencies' (line 728)
        calculate_maximum_inconsistencies_10288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 21), 'calculate_maximum_inconsistencies', False)
        # Calling calculate_maximum_inconsistencies(args, kwargs) (line 728)
        calculate_maximum_inconsistencies_call_result_10292 = invoke(stypy.reporting.localization.Localization(__file__, 728, 21), calculate_maximum_inconsistencies_10288, *[Z_10289, R_10290], **kwargs_10291)
        
        # Assigning a type to the variable 'expectedMD' (line 728)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 728, 8), 'expectedMD', calculate_maximum_inconsistencies_call_result_10292)
        
        # Call to assert_allclose(...): (line 729)
        # Processing the call arguments (line 729)
        # Getting the type of 'MD' (line 729)
        MD_10294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 24), 'MD', False)
        # Getting the type of 'expectedMD' (line 729)
        expectedMD_10295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 28), 'expectedMD', False)
        # Processing the call keyword arguments (line 729)
        float_10296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 45), 'float')
        keyword_10297 = float_10296
        kwargs_10298 = {'atol': keyword_10297}
        # Getting the type of 'assert_allclose' (line 729)
        assert_allclose_10293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 729)
        assert_allclose_call_result_10299 = invoke(stypy.reporting.localization.Localization(__file__, 729, 8), assert_allclose_10293, *[MD_10294, expectedMD_10295], **kwargs_10298)
        
        
        # ################# End of 'test_maxinconsts_one_cluster_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxinconsts_one_cluster_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 723)
        stypy_return_type_10300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10300)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxinconsts_one_cluster_linkage'
        return stypy_return_type_10300


    @norecursion
    def test_maxinconsts_Q_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxinconsts_Q_linkage'
        module_type_store = module_type_store.open_function_context('test_maxinconsts_Q_linkage', 731, 4, False)
        # Assigning a type to the variable 'self' (line 732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 732, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxInconsts.test_maxinconsts_Q_linkage')
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxInconsts.test_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxInconsts.test_maxinconsts_Q_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxinconsts_Q_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxinconsts_Q_linkage(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 732)
        list_10301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 732)
        # Adding element type (line 732)
        str_10302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 23), 'str', 'single')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 22), list_10301, str_10302)
        # Adding element type (line 732)
        str_10303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 33), 'str', 'complete')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 22), list_10301, str_10303)
        # Adding element type (line 732)
        str_10304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 45), 'str', 'ward')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 22), list_10301, str_10304)
        # Adding element type (line 732)
        str_10305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 53), 'str', 'centroid')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 22), list_10301, str_10305)
        # Adding element type (line 732)
        str_10306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 65), 'str', 'median')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 22), list_10301, str_10306)
        
        # Testing the type of a for loop iterable (line 732)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 732, 8), list_10301)
        # Getting the type of the for loop variable (line 732)
        for_loop_var_10307 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 732, 8), list_10301)
        # Assigning a type to the variable 'method' (line 732)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 732, 8), 'method', for_loop_var_10307)
        # SSA begins for a for statement (line 732)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_maxinconsts_Q_linkage(...): (line 733)
        # Processing the call arguments (line 733)
        # Getting the type of 'method' (line 733)
        method_10310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 45), 'method', False)
        # Processing the call keyword arguments (line 733)
        kwargs_10311 = {}
        # Getting the type of 'self' (line 733)
        self_10308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 12), 'self', False)
        # Obtaining the member 'check_maxinconsts_Q_linkage' of a type (line 733)
        check_maxinconsts_Q_linkage_10309 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 12), self_10308, 'check_maxinconsts_Q_linkage')
        # Calling check_maxinconsts_Q_linkage(args, kwargs) (line 733)
        check_maxinconsts_Q_linkage_call_result_10312 = invoke(stypy.reporting.localization.Localization(__file__, 733, 12), check_maxinconsts_Q_linkage_10309, *[method_10310], **kwargs_10311)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_maxinconsts_Q_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxinconsts_Q_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 731)
        stypy_return_type_10313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10313)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxinconsts_Q_linkage'
        return stypy_return_type_10313


    @norecursion
    def check_maxinconsts_Q_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_maxinconsts_Q_linkage'
        module_type_store = module_type_store.open_function_context('check_maxinconsts_Q_linkage', 735, 4, False)
        # Assigning a type to the variable 'self' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxInconsts.check_maxinconsts_Q_linkage')
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_param_names_list', ['method'])
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxInconsts.check_maxinconsts_Q_linkage.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxInconsts.check_maxinconsts_Q_linkage', ['method'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_maxinconsts_Q_linkage', localization, ['method'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_maxinconsts_Q_linkage(...)' code ##################

        
        # Assigning a Attribute to a Name (line 737):
        
        # Assigning a Attribute to a Name (line 737):
        # Getting the type of 'hierarchy_test_data' (line 737)
        hierarchy_test_data_10314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 12), 'hierarchy_test_data')
        # Obtaining the member 'Q_X' of a type (line 737)
        Q_X_10315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 12), hierarchy_test_data_10314, 'Q_X')
        # Assigning a type to the variable 'X' (line 737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 737, 8), 'X', Q_X_10315)
        
        # Assigning a Call to a Name (line 738):
        
        # Assigning a Call to a Name (line 738):
        
        # Call to linkage(...): (line 738)
        # Processing the call arguments (line 738)
        # Getting the type of 'X' (line 738)
        X_10317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 20), 'X', False)
        # Getting the type of 'method' (line 738)
        method_10318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 23), 'method', False)
        # Processing the call keyword arguments (line 738)
        kwargs_10319 = {}
        # Getting the type of 'linkage' (line 738)
        linkage_10316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 738)
        linkage_call_result_10320 = invoke(stypy.reporting.localization.Localization(__file__, 738, 12), linkage_10316, *[X_10317, method_10318], **kwargs_10319)
        
        # Assigning a type to the variable 'Z' (line 738)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 738, 8), 'Z', linkage_call_result_10320)
        
        # Assigning a Call to a Name (line 739):
        
        # Assigning a Call to a Name (line 739):
        
        # Call to inconsistent(...): (line 739)
        # Processing the call arguments (line 739)
        # Getting the type of 'Z' (line 739)
        Z_10322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 25), 'Z', False)
        # Processing the call keyword arguments (line 739)
        kwargs_10323 = {}
        # Getting the type of 'inconsistent' (line 739)
        inconsistent_10321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 12), 'inconsistent', False)
        # Calling inconsistent(args, kwargs) (line 739)
        inconsistent_call_result_10324 = invoke(stypy.reporting.localization.Localization(__file__, 739, 12), inconsistent_10321, *[Z_10322], **kwargs_10323)
        
        # Assigning a type to the variable 'R' (line 739)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 739, 8), 'R', inconsistent_call_result_10324)
        
        # Assigning a Call to a Name (line 740):
        
        # Assigning a Call to a Name (line 740):
        
        # Call to maxinconsts(...): (line 740)
        # Processing the call arguments (line 740)
        # Getting the type of 'Z' (line 740)
        Z_10326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 25), 'Z', False)
        # Getting the type of 'R' (line 740)
        R_10327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 28), 'R', False)
        # Processing the call keyword arguments (line 740)
        kwargs_10328 = {}
        # Getting the type of 'maxinconsts' (line 740)
        maxinconsts_10325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 13), 'maxinconsts', False)
        # Calling maxinconsts(args, kwargs) (line 740)
        maxinconsts_call_result_10329 = invoke(stypy.reporting.localization.Localization(__file__, 740, 13), maxinconsts_10325, *[Z_10326, R_10327], **kwargs_10328)
        
        # Assigning a type to the variable 'MD' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'MD', maxinconsts_call_result_10329)
        
        # Assigning a Call to a Name (line 741):
        
        # Assigning a Call to a Name (line 741):
        
        # Call to calculate_maximum_inconsistencies(...): (line 741)
        # Processing the call arguments (line 741)
        # Getting the type of 'Z' (line 741)
        Z_10331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 55), 'Z', False)
        # Getting the type of 'R' (line 741)
        R_10332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 58), 'R', False)
        # Processing the call keyword arguments (line 741)
        kwargs_10333 = {}
        # Getting the type of 'calculate_maximum_inconsistencies' (line 741)
        calculate_maximum_inconsistencies_10330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 21), 'calculate_maximum_inconsistencies', False)
        # Calling calculate_maximum_inconsistencies(args, kwargs) (line 741)
        calculate_maximum_inconsistencies_call_result_10334 = invoke(stypy.reporting.localization.Localization(__file__, 741, 21), calculate_maximum_inconsistencies_10330, *[Z_10331, R_10332], **kwargs_10333)
        
        # Assigning a type to the variable 'expectedMD' (line 741)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 741, 8), 'expectedMD', calculate_maximum_inconsistencies_call_result_10334)
        
        # Call to assert_allclose(...): (line 742)
        # Processing the call arguments (line 742)
        # Getting the type of 'MD' (line 742)
        MD_10336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 24), 'MD', False)
        # Getting the type of 'expectedMD' (line 742)
        expectedMD_10337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 28), 'expectedMD', False)
        # Processing the call keyword arguments (line 742)
        float_10338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 45), 'float')
        keyword_10339 = float_10338
        kwargs_10340 = {'atol': keyword_10339}
        # Getting the type of 'assert_allclose' (line 742)
        assert_allclose_10335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 742)
        assert_allclose_call_result_10341 = invoke(stypy.reporting.localization.Localization(__file__, 742, 8), assert_allclose_10335, *[MD_10336, expectedMD_10337], **kwargs_10340)
        
        
        # ################# End of 'check_maxinconsts_Q_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_maxinconsts_Q_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 735)
        stypy_return_type_10342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10342)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_maxinconsts_Q_linkage'
        return stypy_return_type_10342


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 709, 0, False)
        # Assigning a type to the variable 'self' (line 710)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 710, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxInconsts.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestMaxInconsts' (line 709)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 709, 0), 'TestMaxInconsts', TestMaxInconsts)
# Declaration of the 'TestMaxRStat' class

class TestMaxRStat(object, ):

    @norecursion
    def test_maxRstat_invalid_index(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxRstat_invalid_index'
        module_type_store = module_type_store.open_function_context('test_maxRstat_invalid_index', 746, 4, False)
        # Assigning a type to the variable 'self' (line 747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.test_maxRstat_invalid_index')
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.test_maxRstat_invalid_index.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.test_maxRstat_invalid_index', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxRstat_invalid_index', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxRstat_invalid_index(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 747)
        list_10343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 747)
        # Adding element type (line 747)
        float_10344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 18), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 17), list_10343, float_10344)
        # Adding element type (line 747)
        int_10345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 17), list_10343, int_10345)
        # Adding element type (line 747)
        int_10346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 747, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 747, 17), list_10343, int_10346)
        
        # Testing the type of a for loop iterable (line 747)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 747, 8), list_10343)
        # Getting the type of the for loop variable (line 747)
        for_loop_var_10347 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 747, 8), list_10343)
        # Assigning a type to the variable 'i' (line 747)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'i', for_loop_var_10347)
        # SSA begins for a for statement (line 747)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_maxRstat_invalid_index(...): (line 748)
        # Processing the call arguments (line 748)
        # Getting the type of 'i' (line 748)
        i_10350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 46), 'i', False)
        # Processing the call keyword arguments (line 748)
        kwargs_10351 = {}
        # Getting the type of 'self' (line 748)
        self_10348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 12), 'self', False)
        # Obtaining the member 'check_maxRstat_invalid_index' of a type (line 748)
        check_maxRstat_invalid_index_10349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 12), self_10348, 'check_maxRstat_invalid_index')
        # Calling check_maxRstat_invalid_index(args, kwargs) (line 748)
        check_maxRstat_invalid_index_call_result_10352 = invoke(stypy.reporting.localization.Localization(__file__, 748, 12), check_maxRstat_invalid_index_10349, *[i_10350], **kwargs_10351)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_maxRstat_invalid_index(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxRstat_invalid_index' in the type store
        # Getting the type of 'stypy_return_type' (line 746)
        stypy_return_type_10353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10353)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxRstat_invalid_index'
        return stypy_return_type_10353


    @norecursion
    def check_maxRstat_invalid_index(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_maxRstat_invalid_index'
        module_type_store = module_type_store.open_function_context('check_maxRstat_invalid_index', 750, 4, False)
        # Assigning a type to the variable 'self' (line 751)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 751, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.check_maxRstat_invalid_index')
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_param_names_list', ['i'])
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.check_maxRstat_invalid_index.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.check_maxRstat_invalid_index', ['i'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_maxRstat_invalid_index', localization, ['i'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_maxRstat_invalid_index(...)' code ##################

        
        # Assigning a Call to a Name (line 752):
        
        # Assigning a Call to a Name (line 752):
        
        # Call to asarray(...): (line 752)
        # Processing the call arguments (line 752)
        
        # Obtaining an instance of the builtin type 'list' (line 752)
        list_10356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 752)
        # Adding element type (line 752)
        
        # Obtaining an instance of the builtin type 'list' (line 752)
        list_10357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 752)
        # Adding element type (line 752)
        int_10358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 24), list_10357, int_10358)
        # Adding element type (line 752)
        int_10359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 24), list_10357, int_10359)
        # Adding element type (line 752)
        float_10360 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 24), list_10357, float_10360)
        # Adding element type (line 752)
        int_10361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 24), list_10357, int_10361)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 23), list_10356, list_10357)
        
        # Processing the call keyword arguments (line 752)
        # Getting the type of 'np' (line 752)
        np_10362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 752)
        double_10363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 47), np_10362, 'double')
        keyword_10364 = double_10363
        kwargs_10365 = {'dtype': keyword_10364}
        # Getting the type of 'np' (line 752)
        np_10354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 752)
        asarray_10355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 12), np_10354, 'asarray')
        # Calling asarray(args, kwargs) (line 752)
        asarray_call_result_10366 = invoke(stypy.reporting.localization.Localization(__file__, 752, 12), asarray_10355, *[list_10356], **kwargs_10365)
        
        # Assigning a type to the variable 'Z' (line 752)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 8), 'Z', asarray_call_result_10366)
        
        # Assigning a Call to a Name (line 753):
        
        # Assigning a Call to a Name (line 753):
        
        # Call to asarray(...): (line 753)
        # Processing the call arguments (line 753)
        
        # Obtaining an instance of the builtin type 'list' (line 753)
        list_10369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 753)
        # Adding element type (line 753)
        
        # Obtaining an instance of the builtin type 'list' (line 753)
        list_10370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 753)
        # Adding element type (line 753)
        int_10371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 24), list_10370, int_10371)
        # Adding element type (line 753)
        int_10372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 24), list_10370, int_10372)
        # Adding element type (line 753)
        int_10373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 24), list_10370, int_10373)
        # Adding element type (line 753)
        float_10374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 24), list_10370, float_10374)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 753, 23), list_10369, list_10370)
        
        # Processing the call keyword arguments (line 753)
        # Getting the type of 'np' (line 753)
        np_10375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 753)
        double_10376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 47), np_10375, 'double')
        keyword_10377 = double_10376
        kwargs_10378 = {'dtype': keyword_10377}
        # Getting the type of 'np' (line 753)
        np_10367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 753)
        asarray_10368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 12), np_10367, 'asarray')
        # Calling asarray(args, kwargs) (line 753)
        asarray_call_result_10379 = invoke(stypy.reporting.localization.Localization(__file__, 753, 12), asarray_10368, *[list_10369], **kwargs_10378)
        
        # Assigning a type to the variable 'R' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'R', asarray_call_result_10379)
        
        # Type idiom detected: calculating its left and rigth part (line 754)
        # Getting the type of 'int' (line 754)
        int_10380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 25), 'int')
        # Getting the type of 'i' (line 754)
        i_10381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 22), 'i')
        
        (may_be_10382, more_types_in_union_10383) = may_be_subtype(int_10380, i_10381)

        if may_be_10382:

            if more_types_in_union_10383:
                # Runtime conditional SSA (line 754)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'i' (line 754)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), 'i', remove_not_subtype_from_union(i_10381, int))
            
            # Call to assert_raises(...): (line 755)
            # Processing the call arguments (line 755)
            # Getting the type of 'ValueError' (line 755)
            ValueError_10385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 26), 'ValueError', False)
            # Getting the type of 'maxRstat' (line 755)
            maxRstat_10386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 38), 'maxRstat', False)
            # Getting the type of 'Z' (line 755)
            Z_10387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 48), 'Z', False)
            # Getting the type of 'R' (line 755)
            R_10388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 51), 'R', False)
            # Getting the type of 'i' (line 755)
            i_10389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 54), 'i', False)
            # Processing the call keyword arguments (line 755)
            kwargs_10390 = {}
            # Getting the type of 'assert_raises' (line 755)
            assert_raises_10384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 12), 'assert_raises', False)
            # Calling assert_raises(args, kwargs) (line 755)
            assert_raises_call_result_10391 = invoke(stypy.reporting.localization.Localization(__file__, 755, 12), assert_raises_10384, *[ValueError_10385, maxRstat_10386, Z_10387, R_10388, i_10389], **kwargs_10390)
            

            if more_types_in_union_10383:
                # Runtime conditional SSA for else branch (line 754)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_10382) or more_types_in_union_10383):
            # Assigning a type to the variable 'i' (line 754)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), 'i', remove_subtype_from_union(i_10381, int))
            
            # Call to assert_raises(...): (line 757)
            # Processing the call arguments (line 757)
            # Getting the type of 'TypeError' (line 757)
            TypeError_10393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 26), 'TypeError', False)
            # Getting the type of 'maxRstat' (line 757)
            maxRstat_10394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 37), 'maxRstat', False)
            # Getting the type of 'Z' (line 757)
            Z_10395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 47), 'Z', False)
            # Getting the type of 'R' (line 757)
            R_10396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 50), 'R', False)
            # Getting the type of 'i' (line 757)
            i_10397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 53), 'i', False)
            # Processing the call keyword arguments (line 757)
            kwargs_10398 = {}
            # Getting the type of 'assert_raises' (line 757)
            assert_raises_10392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 12), 'assert_raises', False)
            # Calling assert_raises(args, kwargs) (line 757)
            assert_raises_call_result_10399 = invoke(stypy.reporting.localization.Localization(__file__, 757, 12), assert_raises_10392, *[TypeError_10393, maxRstat_10394, Z_10395, R_10396, i_10397], **kwargs_10398)
            

            if (may_be_10382 and more_types_in_union_10383):
                # SSA join for if statement (line 754)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # ################# End of 'check_maxRstat_invalid_index(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_maxRstat_invalid_index' in the type store
        # Getting the type of 'stypy_return_type' (line 750)
        stypy_return_type_10400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10400)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_maxRstat_invalid_index'
        return stypy_return_type_10400


    @norecursion
    def test_maxRstat_empty_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxRstat_empty_linkage'
        module_type_store = module_type_store.open_function_context('test_maxRstat_empty_linkage', 759, 4, False)
        # Assigning a type to the variable 'self' (line 760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.test_maxRstat_empty_linkage')
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.test_maxRstat_empty_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.test_maxRstat_empty_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxRstat_empty_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxRstat_empty_linkage(...)' code ##################

        
        
        # Call to range(...): (line 760)
        # Processing the call arguments (line 760)
        int_10402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 760, 23), 'int')
        # Processing the call keyword arguments (line 760)
        kwargs_10403 = {}
        # Getting the type of 'range' (line 760)
        range_10401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 17), 'range', False)
        # Calling range(args, kwargs) (line 760)
        range_call_result_10404 = invoke(stypy.reporting.localization.Localization(__file__, 760, 17), range_10401, *[int_10402], **kwargs_10403)
        
        # Testing the type of a for loop iterable (line 760)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 760, 8), range_call_result_10404)
        # Getting the type of the for loop variable (line 760)
        for_loop_var_10405 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 760, 8), range_call_result_10404)
        # Assigning a type to the variable 'i' (line 760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'i', for_loop_var_10405)
        # SSA begins for a for statement (line 760)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_maxRstat_empty_linkage(...): (line 761)
        # Processing the call arguments (line 761)
        # Getting the type of 'i' (line 761)
        i_10408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 46), 'i', False)
        # Processing the call keyword arguments (line 761)
        kwargs_10409 = {}
        # Getting the type of 'self' (line 761)
        self_10406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 12), 'self', False)
        # Obtaining the member 'check_maxRstat_empty_linkage' of a type (line 761)
        check_maxRstat_empty_linkage_10407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 12), self_10406, 'check_maxRstat_empty_linkage')
        # Calling check_maxRstat_empty_linkage(args, kwargs) (line 761)
        check_maxRstat_empty_linkage_call_result_10410 = invoke(stypy.reporting.localization.Localization(__file__, 761, 12), check_maxRstat_empty_linkage_10407, *[i_10408], **kwargs_10409)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_maxRstat_empty_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxRstat_empty_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 759)
        stypy_return_type_10411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10411)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxRstat_empty_linkage'
        return stypy_return_type_10411


    @norecursion
    def check_maxRstat_empty_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_maxRstat_empty_linkage'
        module_type_store = module_type_store.open_function_context('check_maxRstat_empty_linkage', 763, 4, False)
        # Assigning a type to the variable 'self' (line 764)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 764, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.check_maxRstat_empty_linkage')
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_param_names_list', ['i'])
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.check_maxRstat_empty_linkage.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.check_maxRstat_empty_linkage', ['i'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_maxRstat_empty_linkage', localization, ['i'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_maxRstat_empty_linkage(...)' code ##################

        
        # Assigning a Call to a Name (line 765):
        
        # Assigning a Call to a Name (line 765):
        
        # Call to zeros(...): (line 765)
        # Processing the call arguments (line 765)
        
        # Obtaining an instance of the builtin type 'tuple' (line 765)
        tuple_10414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 765)
        # Adding element type (line 765)
        int_10415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 765, 22), tuple_10414, int_10415)
        # Adding element type (line 765)
        int_10416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 765, 22), tuple_10414, int_10416)
        
        # Processing the call keyword arguments (line 765)
        # Getting the type of 'np' (line 765)
        np_10417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 35), 'np', False)
        # Obtaining the member 'double' of a type (line 765)
        double_10418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 35), np_10417, 'double')
        keyword_10419 = double_10418
        kwargs_10420 = {'dtype': keyword_10419}
        # Getting the type of 'np' (line 765)
        np_10412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 765)
        zeros_10413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 12), np_10412, 'zeros')
        # Calling zeros(args, kwargs) (line 765)
        zeros_call_result_10421 = invoke(stypy.reporting.localization.Localization(__file__, 765, 12), zeros_10413, *[tuple_10414], **kwargs_10420)
        
        # Assigning a type to the variable 'Z' (line 765)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 765, 8), 'Z', zeros_call_result_10421)
        
        # Assigning a Call to a Name (line 766):
        
        # Assigning a Call to a Name (line 766):
        
        # Call to zeros(...): (line 766)
        # Processing the call arguments (line 766)
        
        # Obtaining an instance of the builtin type 'tuple' (line 766)
        tuple_10424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 766)
        # Adding element type (line 766)
        int_10425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 22), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 22), tuple_10424, int_10425)
        # Adding element type (line 766)
        int_10426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 22), tuple_10424, int_10426)
        
        # Processing the call keyword arguments (line 766)
        # Getting the type of 'np' (line 766)
        np_10427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 35), 'np', False)
        # Obtaining the member 'double' of a type (line 766)
        double_10428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 35), np_10427, 'double')
        keyword_10429 = double_10428
        kwargs_10430 = {'dtype': keyword_10429}
        # Getting the type of 'np' (line 766)
        np_10422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 12), 'np', False)
        # Obtaining the member 'zeros' of a type (line 766)
        zeros_10423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 12), np_10422, 'zeros')
        # Calling zeros(args, kwargs) (line 766)
        zeros_call_result_10431 = invoke(stypy.reporting.localization.Localization(__file__, 766, 12), zeros_10423, *[tuple_10424], **kwargs_10430)
        
        # Assigning a type to the variable 'R' (line 766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 8), 'R', zeros_call_result_10431)
        
        # Call to assert_raises(...): (line 767)
        # Processing the call arguments (line 767)
        # Getting the type of 'ValueError' (line 767)
        ValueError_10433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 22), 'ValueError', False)
        # Getting the type of 'maxRstat' (line 767)
        maxRstat_10434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 34), 'maxRstat', False)
        # Getting the type of 'Z' (line 767)
        Z_10435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 44), 'Z', False)
        # Getting the type of 'R' (line 767)
        R_10436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 47), 'R', False)
        # Getting the type of 'i' (line 767)
        i_10437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 50), 'i', False)
        # Processing the call keyword arguments (line 767)
        kwargs_10438 = {}
        # Getting the type of 'assert_raises' (line 767)
        assert_raises_10432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 767)
        assert_raises_call_result_10439 = invoke(stypy.reporting.localization.Localization(__file__, 767, 8), assert_raises_10432, *[ValueError_10433, maxRstat_10434, Z_10435, R_10436, i_10437], **kwargs_10438)
        
        
        # ################# End of 'check_maxRstat_empty_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_maxRstat_empty_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 763)
        stypy_return_type_10440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10440)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_maxRstat_empty_linkage'
        return stypy_return_type_10440


    @norecursion
    def test_maxRstat_difrow_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxRstat_difrow_linkage'
        module_type_store = module_type_store.open_function_context('test_maxRstat_difrow_linkage', 769, 4, False)
        # Assigning a type to the variable 'self' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.test_maxRstat_difrow_linkage')
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.test_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.test_maxRstat_difrow_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxRstat_difrow_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxRstat_difrow_linkage(...)' code ##################

        
        
        # Call to range(...): (line 770)
        # Processing the call arguments (line 770)
        int_10442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 23), 'int')
        # Processing the call keyword arguments (line 770)
        kwargs_10443 = {}
        # Getting the type of 'range' (line 770)
        range_10441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 17), 'range', False)
        # Calling range(args, kwargs) (line 770)
        range_call_result_10444 = invoke(stypy.reporting.localization.Localization(__file__, 770, 17), range_10441, *[int_10442], **kwargs_10443)
        
        # Testing the type of a for loop iterable (line 770)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 770, 8), range_call_result_10444)
        # Getting the type of the for loop variable (line 770)
        for_loop_var_10445 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 770, 8), range_call_result_10444)
        # Assigning a type to the variable 'i' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'i', for_loop_var_10445)
        # SSA begins for a for statement (line 770)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_maxRstat_difrow_linkage(...): (line 771)
        # Processing the call arguments (line 771)
        # Getting the type of 'i' (line 771)
        i_10448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 47), 'i', False)
        # Processing the call keyword arguments (line 771)
        kwargs_10449 = {}
        # Getting the type of 'self' (line 771)
        self_10446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 12), 'self', False)
        # Obtaining the member 'check_maxRstat_difrow_linkage' of a type (line 771)
        check_maxRstat_difrow_linkage_10447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 771, 12), self_10446, 'check_maxRstat_difrow_linkage')
        # Calling check_maxRstat_difrow_linkage(args, kwargs) (line 771)
        check_maxRstat_difrow_linkage_call_result_10450 = invoke(stypy.reporting.localization.Localization(__file__, 771, 12), check_maxRstat_difrow_linkage_10447, *[i_10448], **kwargs_10449)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_maxRstat_difrow_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxRstat_difrow_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 769)
        stypy_return_type_10451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10451)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxRstat_difrow_linkage'
        return stypy_return_type_10451


    @norecursion
    def check_maxRstat_difrow_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_maxRstat_difrow_linkage'
        module_type_store = module_type_store.open_function_context('check_maxRstat_difrow_linkage', 773, 4, False)
        # Assigning a type to the variable 'self' (line 774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.check_maxRstat_difrow_linkage')
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_param_names_list', ['i'])
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.check_maxRstat_difrow_linkage.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.check_maxRstat_difrow_linkage', ['i'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_maxRstat_difrow_linkage', localization, ['i'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_maxRstat_difrow_linkage(...)' code ##################

        
        # Assigning a Call to a Name (line 776):
        
        # Assigning a Call to a Name (line 776):
        
        # Call to asarray(...): (line 776)
        # Processing the call arguments (line 776)
        
        # Obtaining an instance of the builtin type 'list' (line 776)
        list_10454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 776)
        # Adding element type (line 776)
        
        # Obtaining an instance of the builtin type 'list' (line 776)
        list_10455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 776)
        # Adding element type (line 776)
        int_10456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 776, 24), list_10455, int_10456)
        # Adding element type (line 776)
        int_10457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 776, 24), list_10455, int_10457)
        # Adding element type (line 776)
        float_10458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 776, 24), list_10455, float_10458)
        # Adding element type (line 776)
        int_10459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 776, 24), list_10455, int_10459)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 776, 23), list_10454, list_10455)
        
        # Processing the call keyword arguments (line 776)
        # Getting the type of 'np' (line 776)
        np_10460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 776)
        double_10461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 47), np_10460, 'double')
        keyword_10462 = double_10461
        kwargs_10463 = {'dtype': keyword_10462}
        # Getting the type of 'np' (line 776)
        np_10452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 776)
        asarray_10453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 12), np_10452, 'asarray')
        # Calling asarray(args, kwargs) (line 776)
        asarray_call_result_10464 = invoke(stypy.reporting.localization.Localization(__file__, 776, 12), asarray_10453, *[list_10454], **kwargs_10463)
        
        # Assigning a type to the variable 'Z' (line 776)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 776, 8), 'Z', asarray_call_result_10464)
        
        # Assigning a Call to a Name (line 777):
        
        # Assigning a Call to a Name (line 777):
        
        # Call to rand(...): (line 777)
        # Processing the call arguments (line 777)
        int_10468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 27), 'int')
        int_10469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 30), 'int')
        # Processing the call keyword arguments (line 777)
        kwargs_10470 = {}
        # Getting the type of 'np' (line 777)
        np_10465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 12), 'np', False)
        # Obtaining the member 'random' of a type (line 777)
        random_10466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 12), np_10465, 'random')
        # Obtaining the member 'rand' of a type (line 777)
        rand_10467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 12), random_10466, 'rand')
        # Calling rand(args, kwargs) (line 777)
        rand_call_result_10471 = invoke(stypy.reporting.localization.Localization(__file__, 777, 12), rand_10467, *[int_10468, int_10469], **kwargs_10470)
        
        # Assigning a type to the variable 'R' (line 777)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 8), 'R', rand_call_result_10471)
        
        # Call to assert_raises(...): (line 778)
        # Processing the call arguments (line 778)
        # Getting the type of 'ValueError' (line 778)
        ValueError_10473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 22), 'ValueError', False)
        # Getting the type of 'maxRstat' (line 778)
        maxRstat_10474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 34), 'maxRstat', False)
        # Getting the type of 'Z' (line 778)
        Z_10475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 44), 'Z', False)
        # Getting the type of 'R' (line 778)
        R_10476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 47), 'R', False)
        # Getting the type of 'i' (line 778)
        i_10477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 50), 'i', False)
        # Processing the call keyword arguments (line 778)
        kwargs_10478 = {}
        # Getting the type of 'assert_raises' (line 778)
        assert_raises_10472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 778)
        assert_raises_call_result_10479 = invoke(stypy.reporting.localization.Localization(__file__, 778, 8), assert_raises_10472, *[ValueError_10473, maxRstat_10474, Z_10475, R_10476, i_10477], **kwargs_10478)
        
        
        # ################# End of 'check_maxRstat_difrow_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_maxRstat_difrow_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 773)
        stypy_return_type_10480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10480)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_maxRstat_difrow_linkage'
        return stypy_return_type_10480


    @norecursion
    def test_maxRstat_one_cluster_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxRstat_one_cluster_linkage'
        module_type_store = module_type_store.open_function_context('test_maxRstat_one_cluster_linkage', 780, 4, False)
        # Assigning a type to the variable 'self' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.test_maxRstat_one_cluster_linkage')
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.test_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.test_maxRstat_one_cluster_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxRstat_one_cluster_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxRstat_one_cluster_linkage(...)' code ##################

        
        
        # Call to range(...): (line 781)
        # Processing the call arguments (line 781)
        int_10482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 781, 23), 'int')
        # Processing the call keyword arguments (line 781)
        kwargs_10483 = {}
        # Getting the type of 'range' (line 781)
        range_10481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 17), 'range', False)
        # Calling range(args, kwargs) (line 781)
        range_call_result_10484 = invoke(stypy.reporting.localization.Localization(__file__, 781, 17), range_10481, *[int_10482], **kwargs_10483)
        
        # Testing the type of a for loop iterable (line 781)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 781, 8), range_call_result_10484)
        # Getting the type of the for loop variable (line 781)
        for_loop_var_10485 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 781, 8), range_call_result_10484)
        # Assigning a type to the variable 'i' (line 781)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 781, 8), 'i', for_loop_var_10485)
        # SSA begins for a for statement (line 781)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_maxRstat_one_cluster_linkage(...): (line 782)
        # Processing the call arguments (line 782)
        # Getting the type of 'i' (line 782)
        i_10488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 52), 'i', False)
        # Processing the call keyword arguments (line 782)
        kwargs_10489 = {}
        # Getting the type of 'self' (line 782)
        self_10486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'self', False)
        # Obtaining the member 'check_maxRstat_one_cluster_linkage' of a type (line 782)
        check_maxRstat_one_cluster_linkage_10487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 12), self_10486, 'check_maxRstat_one_cluster_linkage')
        # Calling check_maxRstat_one_cluster_linkage(args, kwargs) (line 782)
        check_maxRstat_one_cluster_linkage_call_result_10490 = invoke(stypy.reporting.localization.Localization(__file__, 782, 12), check_maxRstat_one_cluster_linkage_10487, *[i_10488], **kwargs_10489)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_maxRstat_one_cluster_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxRstat_one_cluster_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 780)
        stypy_return_type_10491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10491)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxRstat_one_cluster_linkage'
        return stypy_return_type_10491


    @norecursion
    def check_maxRstat_one_cluster_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_maxRstat_one_cluster_linkage'
        module_type_store = module_type_store.open_function_context('check_maxRstat_one_cluster_linkage', 784, 4, False)
        # Assigning a type to the variable 'self' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.check_maxRstat_one_cluster_linkage')
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_param_names_list', ['i'])
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.check_maxRstat_one_cluster_linkage.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.check_maxRstat_one_cluster_linkage', ['i'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_maxRstat_one_cluster_linkage', localization, ['i'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_maxRstat_one_cluster_linkage(...)' code ##################

        
        # Assigning a Call to a Name (line 786):
        
        # Assigning a Call to a Name (line 786):
        
        # Call to asarray(...): (line 786)
        # Processing the call arguments (line 786)
        
        # Obtaining an instance of the builtin type 'list' (line 786)
        list_10494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 786)
        # Adding element type (line 786)
        
        # Obtaining an instance of the builtin type 'list' (line 786)
        list_10495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 786)
        # Adding element type (line 786)
        int_10496 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 24), list_10495, int_10496)
        # Adding element type (line 786)
        int_10497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 24), list_10495, int_10497)
        # Adding element type (line 786)
        float_10498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 31), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 24), list_10495, float_10498)
        # Adding element type (line 786)
        int_10499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 24), list_10495, int_10499)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 786, 23), list_10494, list_10495)
        
        # Processing the call keyword arguments (line 786)
        # Getting the type of 'np' (line 786)
        np_10500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 786)
        double_10501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 47), np_10500, 'double')
        keyword_10502 = double_10501
        kwargs_10503 = {'dtype': keyword_10502}
        # Getting the type of 'np' (line 786)
        np_10492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 786)
        asarray_10493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 12), np_10492, 'asarray')
        # Calling asarray(args, kwargs) (line 786)
        asarray_call_result_10504 = invoke(stypy.reporting.localization.Localization(__file__, 786, 12), asarray_10493, *[list_10494], **kwargs_10503)
        
        # Assigning a type to the variable 'Z' (line 786)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 8), 'Z', asarray_call_result_10504)
        
        # Assigning a Call to a Name (line 787):
        
        # Assigning a Call to a Name (line 787):
        
        # Call to asarray(...): (line 787)
        # Processing the call arguments (line 787)
        
        # Obtaining an instance of the builtin type 'list' (line 787)
        list_10507 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 787)
        # Adding element type (line 787)
        
        # Obtaining an instance of the builtin type 'list' (line 787)
        list_10508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 787)
        # Adding element type (line 787)
        int_10509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 25), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 24), list_10508, int_10509)
        # Adding element type (line 787)
        int_10510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 24), list_10508, int_10510)
        # Adding element type (line 787)
        int_10511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 24), list_10508, int_10511)
        # Adding element type (line 787)
        float_10512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 34), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 24), list_10508, float_10512)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 23), list_10507, list_10508)
        
        # Processing the call keyword arguments (line 787)
        # Getting the type of 'np' (line 787)
        np_10513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 47), 'np', False)
        # Obtaining the member 'double' of a type (line 787)
        double_10514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 47), np_10513, 'double')
        keyword_10515 = double_10514
        kwargs_10516 = {'dtype': keyword_10515}
        # Getting the type of 'np' (line 787)
        np_10505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 12), 'np', False)
        # Obtaining the member 'asarray' of a type (line 787)
        asarray_10506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 787, 12), np_10505, 'asarray')
        # Calling asarray(args, kwargs) (line 787)
        asarray_call_result_10517 = invoke(stypy.reporting.localization.Localization(__file__, 787, 12), asarray_10506, *[list_10507], **kwargs_10516)
        
        # Assigning a type to the variable 'R' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'R', asarray_call_result_10517)
        
        # Assigning a Call to a Name (line 788):
        
        # Assigning a Call to a Name (line 788):
        
        # Call to maxRstat(...): (line 788)
        # Processing the call arguments (line 788)
        # Getting the type of 'Z' (line 788)
        Z_10519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 22), 'Z', False)
        # Getting the type of 'R' (line 788)
        R_10520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 25), 'R', False)
        int_10521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 28), 'int')
        # Processing the call keyword arguments (line 788)
        kwargs_10522 = {}
        # Getting the type of 'maxRstat' (line 788)
        maxRstat_10518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 13), 'maxRstat', False)
        # Calling maxRstat(args, kwargs) (line 788)
        maxRstat_call_result_10523 = invoke(stypy.reporting.localization.Localization(__file__, 788, 13), maxRstat_10518, *[Z_10519, R_10520, int_10521], **kwargs_10522)
        
        # Assigning a type to the variable 'MD' (line 788)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'MD', maxRstat_call_result_10523)
        
        # Assigning a Call to a Name (line 789):
        
        # Assigning a Call to a Name (line 789):
        
        # Call to calculate_maximum_inconsistencies(...): (line 789)
        # Processing the call arguments (line 789)
        # Getting the type of 'Z' (line 789)
        Z_10525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 55), 'Z', False)
        # Getting the type of 'R' (line 789)
        R_10526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 58), 'R', False)
        int_10527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 789, 61), 'int')
        # Processing the call keyword arguments (line 789)
        kwargs_10528 = {}
        # Getting the type of 'calculate_maximum_inconsistencies' (line 789)
        calculate_maximum_inconsistencies_10524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 21), 'calculate_maximum_inconsistencies', False)
        # Calling calculate_maximum_inconsistencies(args, kwargs) (line 789)
        calculate_maximum_inconsistencies_call_result_10529 = invoke(stypy.reporting.localization.Localization(__file__, 789, 21), calculate_maximum_inconsistencies_10524, *[Z_10525, R_10526, int_10527], **kwargs_10528)
        
        # Assigning a type to the variable 'expectedMD' (line 789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 789, 8), 'expectedMD', calculate_maximum_inconsistencies_call_result_10529)
        
        # Call to assert_allclose(...): (line 790)
        # Processing the call arguments (line 790)
        # Getting the type of 'MD' (line 790)
        MD_10531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 24), 'MD', False)
        # Getting the type of 'expectedMD' (line 790)
        expectedMD_10532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 28), 'expectedMD', False)
        # Processing the call keyword arguments (line 790)
        float_10533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 790, 45), 'float')
        keyword_10534 = float_10533
        kwargs_10535 = {'atol': keyword_10534}
        # Getting the type of 'assert_allclose' (line 790)
        assert_allclose_10530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 790)
        assert_allclose_call_result_10536 = invoke(stypy.reporting.localization.Localization(__file__, 790, 8), assert_allclose_10530, *[MD_10531, expectedMD_10532], **kwargs_10535)
        
        
        # ################# End of 'check_maxRstat_one_cluster_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_maxRstat_one_cluster_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 784)
        stypy_return_type_10537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10537)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_maxRstat_one_cluster_linkage'
        return stypy_return_type_10537


    @norecursion
    def test_maxRstat_Q_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_maxRstat_Q_linkage'
        module_type_store = module_type_store.open_function_context('test_maxRstat_Q_linkage', 792, 4, False)
        # Assigning a type to the variable 'self' (line 793)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.test_maxRstat_Q_linkage')
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_param_names_list', [])
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.test_maxRstat_Q_linkage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.test_maxRstat_Q_linkage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_maxRstat_Q_linkage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_maxRstat_Q_linkage(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 793)
        list_10538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 793)
        # Adding element type (line 793)
        str_10539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 23), 'str', 'single')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 22), list_10538, str_10539)
        # Adding element type (line 793)
        str_10540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 33), 'str', 'complete')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 22), list_10538, str_10540)
        # Adding element type (line 793)
        str_10541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 45), 'str', 'ward')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 22), list_10538, str_10541)
        # Adding element type (line 793)
        str_10542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 53), 'str', 'centroid')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 22), list_10538, str_10542)
        # Adding element type (line 793)
        str_10543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 65), 'str', 'median')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 793, 22), list_10538, str_10543)
        
        # Testing the type of a for loop iterable (line 793)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 793, 8), list_10538)
        # Getting the type of the for loop variable (line 793)
        for_loop_var_10544 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 793, 8), list_10538)
        # Assigning a type to the variable 'method' (line 793)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 8), 'method', for_loop_var_10544)
        # SSA begins for a for statement (line 793)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Call to range(...): (line 794)
        # Processing the call arguments (line 794)
        int_10546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 27), 'int')
        # Processing the call keyword arguments (line 794)
        kwargs_10547 = {}
        # Getting the type of 'range' (line 794)
        range_10545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 21), 'range', False)
        # Calling range(args, kwargs) (line 794)
        range_call_result_10548 = invoke(stypy.reporting.localization.Localization(__file__, 794, 21), range_10545, *[int_10546], **kwargs_10547)
        
        # Testing the type of a for loop iterable (line 794)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 794, 12), range_call_result_10548)
        # Getting the type of the for loop variable (line 794)
        for_loop_var_10549 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 794, 12), range_call_result_10548)
        # Assigning a type to the variable 'i' (line 794)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 12), 'i', for_loop_var_10549)
        # SSA begins for a for statement (line 794)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_maxRstat_Q_linkage(...): (line 795)
        # Processing the call arguments (line 795)
        # Getting the type of 'method' (line 795)
        method_10552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 46), 'method', False)
        # Getting the type of 'i' (line 795)
        i_10553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 54), 'i', False)
        # Processing the call keyword arguments (line 795)
        kwargs_10554 = {}
        # Getting the type of 'self' (line 795)
        self_10550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 16), 'self', False)
        # Obtaining the member 'check_maxRstat_Q_linkage' of a type (line 795)
        check_maxRstat_Q_linkage_10551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 16), self_10550, 'check_maxRstat_Q_linkage')
        # Calling check_maxRstat_Q_linkage(args, kwargs) (line 795)
        check_maxRstat_Q_linkage_call_result_10555 = invoke(stypy.reporting.localization.Localization(__file__, 795, 16), check_maxRstat_Q_linkage_10551, *[method_10552, i_10553], **kwargs_10554)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_maxRstat_Q_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_maxRstat_Q_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 792)
        stypy_return_type_10556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10556)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_maxRstat_Q_linkage'
        return stypy_return_type_10556


    @norecursion
    def check_maxRstat_Q_linkage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_maxRstat_Q_linkage'
        module_type_store = module_type_store.open_function_context('check_maxRstat_Q_linkage', 797, 4, False)
        # Assigning a type to the variable 'self' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_localization', localization)
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_function_name', 'TestMaxRStat.check_maxRstat_Q_linkage')
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_param_names_list', ['method', 'i'])
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestMaxRStat.check_maxRstat_Q_linkage.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.check_maxRstat_Q_linkage', ['method', 'i'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_maxRstat_Q_linkage', localization, ['method', 'i'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_maxRstat_Q_linkage(...)' code ##################

        
        # Assigning a Attribute to a Name (line 799):
        
        # Assigning a Attribute to a Name (line 799):
        # Getting the type of 'hierarchy_test_data' (line 799)
        hierarchy_test_data_10557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 12), 'hierarchy_test_data')
        # Obtaining the member 'Q_X' of a type (line 799)
        Q_X_10558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 799, 12), hierarchy_test_data_10557, 'Q_X')
        # Assigning a type to the variable 'X' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'X', Q_X_10558)
        
        # Assigning a Call to a Name (line 800):
        
        # Assigning a Call to a Name (line 800):
        
        # Call to linkage(...): (line 800)
        # Processing the call arguments (line 800)
        # Getting the type of 'X' (line 800)
        X_10560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 20), 'X', False)
        # Getting the type of 'method' (line 800)
        method_10561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 23), 'method', False)
        # Processing the call keyword arguments (line 800)
        kwargs_10562 = {}
        # Getting the type of 'linkage' (line 800)
        linkage_10559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 800)
        linkage_call_result_10563 = invoke(stypy.reporting.localization.Localization(__file__, 800, 12), linkage_10559, *[X_10560, method_10561], **kwargs_10562)
        
        # Assigning a type to the variable 'Z' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'Z', linkage_call_result_10563)
        
        # Assigning a Call to a Name (line 801):
        
        # Assigning a Call to a Name (line 801):
        
        # Call to inconsistent(...): (line 801)
        # Processing the call arguments (line 801)
        # Getting the type of 'Z' (line 801)
        Z_10565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 25), 'Z', False)
        # Processing the call keyword arguments (line 801)
        kwargs_10566 = {}
        # Getting the type of 'inconsistent' (line 801)
        inconsistent_10564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'inconsistent', False)
        # Calling inconsistent(args, kwargs) (line 801)
        inconsistent_call_result_10567 = invoke(stypy.reporting.localization.Localization(__file__, 801, 12), inconsistent_10564, *[Z_10565], **kwargs_10566)
        
        # Assigning a type to the variable 'R' (line 801)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 801, 8), 'R', inconsistent_call_result_10567)
        
        # Assigning a Call to a Name (line 802):
        
        # Assigning a Call to a Name (line 802):
        
        # Call to maxRstat(...): (line 802)
        # Processing the call arguments (line 802)
        # Getting the type of 'Z' (line 802)
        Z_10569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 22), 'Z', False)
        # Getting the type of 'R' (line 802)
        R_10570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 25), 'R', False)
        int_10571 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 802, 28), 'int')
        # Processing the call keyword arguments (line 802)
        kwargs_10572 = {}
        # Getting the type of 'maxRstat' (line 802)
        maxRstat_10568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 13), 'maxRstat', False)
        # Calling maxRstat(args, kwargs) (line 802)
        maxRstat_call_result_10573 = invoke(stypy.reporting.localization.Localization(__file__, 802, 13), maxRstat_10568, *[Z_10569, R_10570, int_10571], **kwargs_10572)
        
        # Assigning a type to the variable 'MD' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'MD', maxRstat_call_result_10573)
        
        # Assigning a Call to a Name (line 803):
        
        # Assigning a Call to a Name (line 803):
        
        # Call to calculate_maximum_inconsistencies(...): (line 803)
        # Processing the call arguments (line 803)
        # Getting the type of 'Z' (line 803)
        Z_10575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 55), 'Z', False)
        # Getting the type of 'R' (line 803)
        R_10576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 58), 'R', False)
        int_10577 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 803, 61), 'int')
        # Processing the call keyword arguments (line 803)
        kwargs_10578 = {}
        # Getting the type of 'calculate_maximum_inconsistencies' (line 803)
        calculate_maximum_inconsistencies_10574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 21), 'calculate_maximum_inconsistencies', False)
        # Calling calculate_maximum_inconsistencies(args, kwargs) (line 803)
        calculate_maximum_inconsistencies_call_result_10579 = invoke(stypy.reporting.localization.Localization(__file__, 803, 21), calculate_maximum_inconsistencies_10574, *[Z_10575, R_10576, int_10577], **kwargs_10578)
        
        # Assigning a type to the variable 'expectedMD' (line 803)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 803, 8), 'expectedMD', calculate_maximum_inconsistencies_call_result_10579)
        
        # Call to assert_allclose(...): (line 804)
        # Processing the call arguments (line 804)
        # Getting the type of 'MD' (line 804)
        MD_10581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 24), 'MD', False)
        # Getting the type of 'expectedMD' (line 804)
        expectedMD_10582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 28), 'expectedMD', False)
        # Processing the call keyword arguments (line 804)
        float_10583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 804, 45), 'float')
        keyword_10584 = float_10583
        kwargs_10585 = {'atol': keyword_10584}
        # Getting the type of 'assert_allclose' (line 804)
        assert_allclose_10580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 8), 'assert_allclose', False)
        # Calling assert_allclose(args, kwargs) (line 804)
        assert_allclose_call_result_10586 = invoke(stypy.reporting.localization.Localization(__file__, 804, 8), assert_allclose_10580, *[MD_10581, expectedMD_10582], **kwargs_10585)
        
        
        # ################# End of 'check_maxRstat_Q_linkage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_maxRstat_Q_linkage' in the type store
        # Getting the type of 'stypy_return_type' (line 797)
        stypy_return_type_10587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10587)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_maxRstat_Q_linkage'
        return stypy_return_type_10587


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 745, 0, False)
        # Assigning a type to the variable 'self' (line 746)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 746, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestMaxRStat.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestMaxRStat' (line 745)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 0), 'TestMaxRStat', TestMaxRStat)
# Declaration of the 'TestDendrogram' class

class TestDendrogram(object, ):

    @norecursion
    def test_dendrogram_single_linkage_tdist(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_dendrogram_single_linkage_tdist'
        module_type_store = module_type_store.open_function_context('test_dendrogram_single_linkage_tdist', 808, 4, False)
        # Assigning a type to the variable 'self' (line 809)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_localization', localization)
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_function_name', 'TestDendrogram.test_dendrogram_single_linkage_tdist')
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_param_names_list', [])
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestDendrogram.test_dendrogram_single_linkage_tdist.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDendrogram.test_dendrogram_single_linkage_tdist', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_dendrogram_single_linkage_tdist', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_dendrogram_single_linkage_tdist(...)' code ##################

        
        # Assigning a Call to a Name (line 810):
        
        # Assigning a Call to a Name (line 810):
        
        # Call to linkage(...): (line 810)
        # Processing the call arguments (line 810)
        # Getting the type of 'hierarchy_test_data' (line 810)
        hierarchy_test_data_10589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 810)
        ytdist_10590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 20), hierarchy_test_data_10589, 'ytdist')
        str_10591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 48), 'str', 'single')
        # Processing the call keyword arguments (line 810)
        kwargs_10592 = {}
        # Getting the type of 'linkage' (line 810)
        linkage_10588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 810)
        linkage_call_result_10593 = invoke(stypy.reporting.localization.Localization(__file__, 810, 12), linkage_10588, *[ytdist_10590, str_10591], **kwargs_10592)
        
        # Assigning a type to the variable 'Z' (line 810)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 8), 'Z', linkage_call_result_10593)
        
        # Assigning a Call to a Name (line 811):
        
        # Assigning a Call to a Name (line 811):
        
        # Call to dendrogram(...): (line 811)
        # Processing the call arguments (line 811)
        # Getting the type of 'Z' (line 811)
        Z_10595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 23), 'Z', False)
        # Processing the call keyword arguments (line 811)
        # Getting the type of 'True' (line 811)
        True_10596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 34), 'True', False)
        keyword_10597 = True_10596
        kwargs_10598 = {'no_plot': keyword_10597}
        # Getting the type of 'dendrogram' (line 811)
        dendrogram_10594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 12), 'dendrogram', False)
        # Calling dendrogram(args, kwargs) (line 811)
        dendrogram_call_result_10599 = invoke(stypy.reporting.localization.Localization(__file__, 811, 12), dendrogram_10594, *[Z_10595], **kwargs_10598)
        
        # Assigning a type to the variable 'R' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'R', dendrogram_call_result_10599)
        
        # Assigning a Subscript to a Name (line 812):
        
        # Assigning a Subscript to a Name (line 812):
        
        # Obtaining the type of the subscript
        str_10600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 19), 'str', 'leaves')
        # Getting the type of 'R' (line 812)
        R_10601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 17), 'R')
        # Obtaining the member '__getitem__' of a type (line 812)
        getitem___10602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 17), R_10601, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 812)
        subscript_call_result_10603 = invoke(stypy.reporting.localization.Localization(__file__, 812, 17), getitem___10602, str_10600)
        
        # Assigning a type to the variable 'leaves' (line 812)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'leaves', subscript_call_result_10603)
        
        # Call to assert_equal(...): (line 813)
        # Processing the call arguments (line 813)
        # Getting the type of 'leaves' (line 813)
        leaves_10605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 21), 'leaves', False)
        
        # Obtaining an instance of the builtin type 'list' (line 813)
        list_10606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 813)
        # Adding element type (line 813)
        int_10607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 29), list_10606, int_10607)
        # Adding element type (line 813)
        int_10608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 29), list_10606, int_10608)
        # Adding element type (line 813)
        int_10609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 29), list_10606, int_10609)
        # Adding element type (line 813)
        int_10610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 29), list_10606, int_10610)
        # Adding element type (line 813)
        int_10611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 29), list_10606, int_10611)
        # Adding element type (line 813)
        int_10612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 813, 29), list_10606, int_10612)
        
        # Processing the call keyword arguments (line 813)
        kwargs_10613 = {}
        # Getting the type of 'assert_equal' (line 813)
        assert_equal_10604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 813)
        assert_equal_call_result_10614 = invoke(stypy.reporting.localization.Localization(__file__, 813, 8), assert_equal_10604, *[leaves_10605, list_10606], **kwargs_10613)
        
        
        # ################# End of 'test_dendrogram_single_linkage_tdist(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_dendrogram_single_linkage_tdist' in the type store
        # Getting the type of 'stypy_return_type' (line 808)
        stypy_return_type_10615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10615)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_dendrogram_single_linkage_tdist'
        return stypy_return_type_10615


    @norecursion
    def test_valid_orientation(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_valid_orientation'
        module_type_store = module_type_store.open_function_context('test_valid_orientation', 815, 4, False)
        # Assigning a type to the variable 'self' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_localization', localization)
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_function_name', 'TestDendrogram.test_valid_orientation')
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_param_names_list', [])
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestDendrogram.test_valid_orientation.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDendrogram.test_valid_orientation', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_valid_orientation', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_valid_orientation(...)' code ##################

        
        # Assigning a Call to a Name (line 816):
        
        # Assigning a Call to a Name (line 816):
        
        # Call to linkage(...): (line 816)
        # Processing the call arguments (line 816)
        # Getting the type of 'hierarchy_test_data' (line 816)
        hierarchy_test_data_10617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 816)
        ytdist_10618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 20), hierarchy_test_data_10617, 'ytdist')
        str_10619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 48), 'str', 'single')
        # Processing the call keyword arguments (line 816)
        kwargs_10620 = {}
        # Getting the type of 'linkage' (line 816)
        linkage_10616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 816)
        linkage_call_result_10621 = invoke(stypy.reporting.localization.Localization(__file__, 816, 12), linkage_10616, *[ytdist_10618, str_10619], **kwargs_10620)
        
        # Assigning a type to the variable 'Z' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 8), 'Z', linkage_call_result_10621)
        
        # Call to assert_raises(...): (line 817)
        # Processing the call arguments (line 817)
        # Getting the type of 'ValueError' (line 817)
        ValueError_10623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 22), 'ValueError', False)
        # Getting the type of 'dendrogram' (line 817)
        dendrogram_10624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 34), 'dendrogram', False)
        # Getting the type of 'Z' (line 817)
        Z_10625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 46), 'Z', False)
        # Processing the call keyword arguments (line 817)
        str_10626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 61), 'str', 'foo')
        keyword_10627 = str_10626
        kwargs_10628 = {'orientation': keyword_10627}
        # Getting the type of 'assert_raises' (line 817)
        assert_raises_10622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 8), 'assert_raises', False)
        # Calling assert_raises(args, kwargs) (line 817)
        assert_raises_call_result_10629 = invoke(stypy.reporting.localization.Localization(__file__, 817, 8), assert_raises_10622, *[ValueError_10623, dendrogram_10624, Z_10625], **kwargs_10628)
        
        
        # ################# End of 'test_valid_orientation(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_valid_orientation' in the type store
        # Getting the type of 'stypy_return_type' (line 815)
        stypy_return_type_10630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10630)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_valid_orientation'
        return stypy_return_type_10630


    @norecursion
    def test_dendrogram_plot(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_dendrogram_plot'
        module_type_store = module_type_store.open_function_context('test_dendrogram_plot', 819, 4, False)
        # Assigning a type to the variable 'self' (line 820)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_localization', localization)
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_function_name', 'TestDendrogram.test_dendrogram_plot')
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_param_names_list', [])
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestDendrogram.test_dendrogram_plot.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDendrogram.test_dendrogram_plot', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_dendrogram_plot', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_dendrogram_plot(...)' code ##################

        
        
        # Obtaining an instance of the builtin type 'list' (line 821)
        list_10631 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 821)
        # Adding element type (line 821)
        str_10632 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 28), 'str', 'top')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 821, 27), list_10631, str_10632)
        # Adding element type (line 821)
        str_10633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 35), 'str', 'bottom')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 821, 27), list_10631, str_10633)
        # Adding element type (line 821)
        str_10634 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 45), 'str', 'left')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 821, 27), list_10631, str_10634)
        # Adding element type (line 821)
        str_10635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 53), 'str', 'right')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 821, 27), list_10631, str_10635)
        
        # Testing the type of a for loop iterable (line 821)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 821, 8), list_10631)
        # Getting the type of the for loop variable (line 821)
        for_loop_var_10636 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 821, 8), list_10631)
        # Assigning a type to the variable 'orientation' (line 821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 8), 'orientation', for_loop_var_10636)
        # SSA begins for a for statement (line 821)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to check_dendrogram_plot(...): (line 822)
        # Processing the call arguments (line 822)
        # Getting the type of 'orientation' (line 822)
        orientation_10639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 39), 'orientation', False)
        # Processing the call keyword arguments (line 822)
        kwargs_10640 = {}
        # Getting the type of 'self' (line 822)
        self_10637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 12), 'self', False)
        # Obtaining the member 'check_dendrogram_plot' of a type (line 822)
        check_dendrogram_plot_10638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 12), self_10637, 'check_dendrogram_plot')
        # Calling check_dendrogram_plot(args, kwargs) (line 822)
        check_dendrogram_plot_call_result_10641 = invoke(stypy.reporting.localization.Localization(__file__, 822, 12), check_dendrogram_plot_10638, *[orientation_10639], **kwargs_10640)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_dendrogram_plot(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_dendrogram_plot' in the type store
        # Getting the type of 'stypy_return_type' (line 819)
        stypy_return_type_10642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10642)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_dendrogram_plot'
        return stypy_return_type_10642


    @norecursion
    def check_dendrogram_plot(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'check_dendrogram_plot'
        module_type_store = module_type_store.open_function_context('check_dendrogram_plot', 824, 4, False)
        # Assigning a type to the variable 'self' (line 825)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 825, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_localization', localization)
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_function_name', 'TestDendrogram.check_dendrogram_plot')
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_param_names_list', ['orientation'])
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestDendrogram.check_dendrogram_plot.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDendrogram.check_dendrogram_plot', ['orientation'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'check_dendrogram_plot', localization, ['orientation'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'check_dendrogram_plot(...)' code ##################

        
        # Assigning a Call to a Name (line 826):
        
        # Assigning a Call to a Name (line 826):
        
        # Call to linkage(...): (line 826)
        # Processing the call arguments (line 826)
        # Getting the type of 'hierarchy_test_data' (line 826)
        hierarchy_test_data_10644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 826)
        ytdist_10645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 20), hierarchy_test_data_10644, 'ytdist')
        str_10646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 48), 'str', 'single')
        # Processing the call keyword arguments (line 826)
        kwargs_10647 = {}
        # Getting the type of 'linkage' (line 826)
        linkage_10643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 826)
        linkage_call_result_10648 = invoke(stypy.reporting.localization.Localization(__file__, 826, 12), linkage_10643, *[ytdist_10645, str_10646], **kwargs_10647)
        
        # Assigning a type to the variable 'Z' (line 826)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 8), 'Z', linkage_call_result_10648)
        
        # Assigning a Dict to a Name (line 827):
        
        # Assigning a Dict to a Name (line 827):
        
        # Obtaining an instance of the builtin type 'dict' (line 827)
        dict_10649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 19), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 827)
        # Adding element type (key, value) (line 827)
        str_10650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 20), 'str', 'color_list')
        
        # Obtaining an instance of the builtin type 'list' (line 827)
        list_10651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 827)
        # Adding element type (line 827)
        str_10652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 35), 'str', 'g')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 34), list_10651, str_10652)
        # Adding element type (line 827)
        str_10653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 40), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 34), list_10651, str_10653)
        # Adding element type (line 827)
        str_10654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 45), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 34), list_10651, str_10654)
        # Adding element type (line 827)
        str_10655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 50), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 34), list_10651, str_10655)
        # Adding element type (line 827)
        str_10656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 55), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 34), list_10651, str_10656)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 19), dict_10649, (str_10650, list_10651))
        # Adding element type (key, value) (line 827)
        str_10657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 20), 'str', 'dcoord')
        
        # Obtaining an instance of the builtin type 'list' (line 828)
        list_10658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 828)
        # Adding element type (line 828)
        
        # Obtaining an instance of the builtin type 'list' (line 828)
        list_10659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 828)
        # Adding element type (line 828)
        float_10660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_10659, float_10660)
        # Adding element type (line 828)
        float_10661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_10659, float_10661)
        # Adding element type (line 828)
        float_10662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_10659, float_10662)
        # Adding element type (line 828)
        float_10663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 51), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 31), list_10659, float_10663)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 30), list_10658, list_10659)
        # Adding element type (line 828)
        
        # Obtaining an instance of the builtin type 'list' (line 829)
        list_10664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 829)
        # Adding element type (line 829)
        float_10665 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 829, 31), list_10664, float_10665)
        # Adding element type (line 829)
        float_10666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 829, 31), list_10664, float_10666)
        # Adding element type (line 829)
        float_10667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 829, 31), list_10664, float_10667)
        # Adding element type (line 829)
        float_10668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 51), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 829, 31), list_10664, float_10668)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 30), list_10658, list_10664)
        # Adding element type (line 828)
        
        # Obtaining an instance of the builtin type 'list' (line 830)
        list_10669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 830)
        # Adding element type (line 830)
        float_10670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 31), list_10669, float_10670)
        # Adding element type (line 830)
        float_10671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 31), list_10669, float_10671)
        # Adding element type (line 830)
        float_10672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 31), list_10669, float_10672)
        # Adding element type (line 830)
        float_10673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 51), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 830, 31), list_10669, float_10673)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 30), list_10658, list_10669)
        # Adding element type (line 828)
        
        # Obtaining an instance of the builtin type 'list' (line 831)
        list_10674 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 831)
        # Adding element type (line 831)
        float_10675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 831, 31), list_10674, float_10675)
        # Adding element type (line 831)
        float_10676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 831, 31), list_10674, float_10676)
        # Adding element type (line 831)
        float_10677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 831, 31), list_10674, float_10677)
        # Adding element type (line 831)
        float_10678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 51), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 831, 31), list_10674, float_10678)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 30), list_10658, list_10674)
        # Adding element type (line 828)
        
        # Obtaining an instance of the builtin type 'list' (line 832)
        list_10679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 832)
        # Adding element type (line 832)
        float_10680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 832, 31), list_10679, float_10680)
        # Adding element type (line 832)
        float_10681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 39), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 832, 31), list_10679, float_10681)
        # Adding element type (line 832)
        float_10682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 46), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 832, 31), list_10679, float_10682)
        # Adding element type (line 832)
        float_10683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 832, 31), list_10679, float_10683)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 828, 30), list_10658, list_10679)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 19), dict_10649, (str_10657, list_10658))
        # Adding element type (key, value) (line 827)
        str_10684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 20), 'str', 'icoord')
        
        # Obtaining an instance of the builtin type 'list' (line 833)
        list_10685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 833)
        # Adding element type (line 833)
        
        # Obtaining an instance of the builtin type 'list' (line 833)
        list_10686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 833)
        # Adding element type (line 833)
        float_10687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 31), list_10686, float_10687)
        # Adding element type (line 833)
        float_10688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 31), list_10686, float_10688)
        # Adding element type (line 833)
        float_10689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 31), list_10686, float_10689)
        # Adding element type (line 833)
        float_10690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 48), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 31), list_10686, float_10690)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 30), list_10685, list_10686)
        # Adding element type (line 833)
        
        # Obtaining an instance of the builtin type 'list' (line 834)
        list_10691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 834)
        # Adding element type (line 834)
        float_10692 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 31), list_10691, float_10692)
        # Adding element type (line 834)
        float_10693 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 31), list_10691, float_10693)
        # Adding element type (line 834)
        float_10694 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 31), list_10691, float_10694)
        # Adding element type (line 834)
        float_10695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 50), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 31), list_10691, float_10695)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 30), list_10685, list_10691)
        # Adding element type (line 833)
        
        # Obtaining an instance of the builtin type 'list' (line 835)
        list_10696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 835)
        # Adding element type (line 835)
        float_10697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 835, 31), list_10696, float_10697)
        # Adding element type (line 835)
        float_10698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 835, 31), list_10696, float_10698)
        # Adding element type (line 835)
        float_10699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 835, 31), list_10696, float_10699)
        # Adding element type (line 835)
        float_10700 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 50), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 835, 31), list_10696, float_10700)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 30), list_10685, list_10696)
        # Adding element type (line 833)
        
        # Obtaining an instance of the builtin type 'list' (line 836)
        list_10701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 836)
        # Adding element type (line 836)
        float_10702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 836, 31), list_10701, float_10702)
        # Adding element type (line 836)
        float_10703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 836, 31), list_10701, float_10703)
        # Adding element type (line 836)
        float_10704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 836, 31), list_10701, float_10704)
        # Adding element type (line 836)
        float_10705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 50), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 836, 31), list_10701, float_10705)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 30), list_10685, list_10701)
        # Adding element type (line 833)
        
        # Obtaining an instance of the builtin type 'list' (line 837)
        list_10706 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 837)
        # Adding element type (line 837)
        float_10707 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 32), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 31), list_10706, float_10707)
        # Adding element type (line 837)
        float_10708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 38), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 31), list_10706, float_10708)
        # Adding element type (line 837)
        float_10709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 31), list_10706, float_10709)
        # Adding element type (line 837)
        float_10710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 837, 51), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 837, 31), list_10706, float_10710)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 30), list_10685, list_10706)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 19), dict_10649, (str_10684, list_10685))
        # Adding element type (key, value) (line 827)
        str_10711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 20), 'str', 'ivl')
        
        # Obtaining an instance of the builtin type 'list' (line 838)
        list_10712 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 838)
        # Adding element type (line 838)
        str_10713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 28), 'str', '2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 27), list_10712, str_10713)
        # Adding element type (line 838)
        str_10714 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 33), 'str', '5')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 27), list_10712, str_10714)
        # Adding element type (line 838)
        str_10715 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 38), 'str', '1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 27), list_10712, str_10715)
        # Adding element type (line 838)
        str_10716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 43), 'str', '0')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 27), list_10712, str_10716)
        # Adding element type (line 838)
        str_10717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 48), 'str', '3')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 27), list_10712, str_10717)
        # Adding element type (line 838)
        str_10718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 53), 'str', '4')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 838, 27), list_10712, str_10718)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 19), dict_10649, (str_10711, list_10712))
        # Adding element type (key, value) (line 827)
        str_10719 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 20), 'str', 'leaves')
        
        # Obtaining an instance of the builtin type 'list' (line 839)
        list_10720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 839)
        # Adding element type (line 839)
        int_10721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 839, 30), list_10720, int_10721)
        # Adding element type (line 839)
        int_10722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 839, 30), list_10720, int_10722)
        # Adding element type (line 839)
        int_10723 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 839, 30), list_10720, int_10723)
        # Adding element type (line 839)
        int_10724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 839, 30), list_10720, int_10724)
        # Adding element type (line 839)
        int_10725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 839, 30), list_10720, int_10725)
        # Adding element type (line 839)
        int_10726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 839, 30), list_10720, int_10726)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 827, 19), dict_10649, (str_10719, list_10720))
        
        # Assigning a type to the variable 'expected' (line 827)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 827, 8), 'expected', dict_10649)
        
        # Assigning a Call to a Name (line 841):
        
        # Assigning a Call to a Name (line 841):
        
        # Call to figure(...): (line 841)
        # Processing the call keyword arguments (line 841)
        kwargs_10729 = {}
        # Getting the type of 'plt' (line 841)
        plt_10727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 14), 'plt', False)
        # Obtaining the member 'figure' of a type (line 841)
        figure_10728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 14), plt_10727, 'figure')
        # Calling figure(args, kwargs) (line 841)
        figure_call_result_10730 = invoke(stypy.reporting.localization.Localization(__file__, 841, 14), figure_10728, *[], **kwargs_10729)
        
        # Assigning a type to the variable 'fig' (line 841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 8), 'fig', figure_call_result_10730)
        
        # Assigning a Call to a Name (line 842):
        
        # Assigning a Call to a Name (line 842):
        
        # Call to add_subplot(...): (line 842)
        # Processing the call arguments (line 842)
        int_10733 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 29), 'int')
        # Processing the call keyword arguments (line 842)
        kwargs_10734 = {}
        # Getting the type of 'fig' (line 842)
        fig_10731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 13), 'fig', False)
        # Obtaining the member 'add_subplot' of a type (line 842)
        add_subplot_10732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 13), fig_10731, 'add_subplot')
        # Calling add_subplot(args, kwargs) (line 842)
        add_subplot_call_result_10735 = invoke(stypy.reporting.localization.Localization(__file__, 842, 13), add_subplot_10732, *[int_10733], **kwargs_10734)
        
        # Assigning a type to the variable 'ax' (line 842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 8), 'ax', add_subplot_call_result_10735)
        
        # Assigning a Call to a Name (line 845):
        
        # Assigning a Call to a Name (line 845):
        
        # Call to dendrogram(...): (line 845)
        # Processing the call arguments (line 845)
        # Getting the type of 'Z' (line 845)
        Z_10737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 24), 'Z', False)
        # Processing the call keyword arguments (line 845)
        # Getting the type of 'ax' (line 845)
        ax_10738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 30), 'ax', False)
        keyword_10739 = ax_10738
        # Getting the type of 'orientation' (line 845)
        orientation_10740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 46), 'orientation', False)
        keyword_10741 = orientation_10740
        kwargs_10742 = {'ax': keyword_10739, 'orientation': keyword_10741}
        # Getting the type of 'dendrogram' (line 845)
        dendrogram_10736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 13), 'dendrogram', False)
        # Calling dendrogram(args, kwargs) (line 845)
        dendrogram_call_result_10743 = invoke(stypy.reporting.localization.Localization(__file__, 845, 13), dendrogram_10736, *[Z_10737], **kwargs_10742)
        
        # Assigning a type to the variable 'R1' (line 845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 8), 'R1', dendrogram_call_result_10743)
        
        # Call to assert_equal(...): (line 846)
        # Processing the call arguments (line 846)
        # Getting the type of 'R1' (line 846)
        R1_10745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 21), 'R1', False)
        # Getting the type of 'expected' (line 846)
        expected_10746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 25), 'expected', False)
        # Processing the call keyword arguments (line 846)
        kwargs_10747 = {}
        # Getting the type of 'assert_equal' (line 846)
        assert_equal_10744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 846)
        assert_equal_call_result_10748 = invoke(stypy.reporting.localization.Localization(__file__, 846, 8), assert_equal_10744, *[R1_10745, expected_10746], **kwargs_10747)
        
        
        # Assigning a Call to a Name (line 850):
        
        # Assigning a Call to a Name (line 850):
        
        # Call to dendrogram(...): (line 850)
        # Processing the call arguments (line 850)
        # Getting the type of 'Z' (line 850)
        Z_10750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 25), 'Z', False)
        # Processing the call keyword arguments (line 850)
        # Getting the type of 'ax' (line 850)
        ax_10751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 31), 'ax', False)
        keyword_10752 = ax_10751
        # Getting the type of 'orientation' (line 850)
        orientation_10753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 47), 'orientation', False)
        keyword_10754 = orientation_10753
        int_10755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 40), 'int')
        keyword_10756 = int_10755
        int_10757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 851, 58), 'int')
        keyword_10758 = int_10757
        kwargs_10759 = {'leaf_rotation': keyword_10758, 'ax': keyword_10752, 'leaf_font_size': keyword_10756, 'orientation': keyword_10754}
        # Getting the type of 'dendrogram' (line 850)
        dendrogram_10749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 14), 'dendrogram', False)
        # Calling dendrogram(args, kwargs) (line 850)
        dendrogram_call_result_10760 = invoke(stypy.reporting.localization.Localization(__file__, 850, 14), dendrogram_10749, *[Z_10750], **kwargs_10759)
        
        # Assigning a type to the variable 'R1a' (line 850)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'R1a', dendrogram_call_result_10760)
        
        # Assigning a IfExp to a Name (line 852):
        
        # Assigning a IfExp to a Name (line 852):
        
        
        # Getting the type of 'orientation' (line 854)
        orientation_10761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 15), 'orientation')
        
        # Obtaining an instance of the builtin type 'list' (line 854)
        list_10762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 854)
        # Adding element type (line 854)
        str_10763 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 31), 'str', 'top')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 30), list_10762, str_10763)
        # Adding element type (line 854)
        str_10764 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 38), 'str', 'bottom')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 854, 30), list_10762, str_10764)
        
        # Applying the binary operator 'in' (line 854)
        result_contains_10765 = python_operator(stypy.reporting.localization.Localization(__file__, 854, 15), 'in', orientation_10761, list_10762)
        
        # Testing the type of an if expression (line 853)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 853, 12), result_contains_10765)
        # SSA begins for if expression (line 853)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Obtaining the type of the subscript
        int_10766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 33), 'int')
        
        # Call to get_xticklabels(...): (line 853)
        # Processing the call keyword arguments (line 853)
        kwargs_10769 = {}
        # Getting the type of 'ax' (line 853)
        ax_10767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 12), 'ax', False)
        # Obtaining the member 'get_xticklabels' of a type (line 853)
        get_xticklabels_10768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 12), ax_10767, 'get_xticklabels')
        # Calling get_xticklabels(args, kwargs) (line 853)
        get_xticklabels_call_result_10770 = invoke(stypy.reporting.localization.Localization(__file__, 853, 12), get_xticklabels_10768, *[], **kwargs_10769)
        
        # Obtaining the member '__getitem__' of a type (line 853)
        getitem___10771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 12), get_xticklabels_call_result_10770, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 853)
        subscript_call_result_10772 = invoke(stypy.reporting.localization.Localization(__file__, 853, 12), getitem___10771, int_10766)
        
        # SSA branch for the else part of an if expression (line 853)
        module_type_store.open_ssa_branch('if expression else')
        
        # Obtaining the type of the subscript
        int_10773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 38), 'int')
        
        # Call to get_yticklabels(...): (line 855)
        # Processing the call keyword arguments (line 855)
        kwargs_10776 = {}
        # Getting the type of 'ax' (line 855)
        ax_10774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 17), 'ax', False)
        # Obtaining the member 'get_yticklabels' of a type (line 855)
        get_yticklabels_10775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 17), ax_10774, 'get_yticklabels')
        # Calling get_yticklabels(args, kwargs) (line 855)
        get_yticklabels_call_result_10777 = invoke(stypy.reporting.localization.Localization(__file__, 855, 17), get_yticklabels_10775, *[], **kwargs_10776)
        
        # Obtaining the member '__getitem__' of a type (line 855)
        getitem___10778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 17), get_yticklabels_call_result_10777, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 855)
        subscript_call_result_10779 = invoke(stypy.reporting.localization.Localization(__file__, 855, 17), getitem___10778, int_10773)
        
        # SSA join for if expression (line 853)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_10780 = union_type.UnionType.add(subscript_call_result_10772, subscript_call_result_10779)
        
        # Assigning a type to the variable 'testlabel' (line 852)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 8), 'testlabel', if_exp_10780)
        
        # Call to assert_equal(...): (line 857)
        # Processing the call arguments (line 857)
        
        # Call to get_rotation(...): (line 857)
        # Processing the call keyword arguments (line 857)
        kwargs_10784 = {}
        # Getting the type of 'testlabel' (line 857)
        testlabel_10782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 21), 'testlabel', False)
        # Obtaining the member 'get_rotation' of a type (line 857)
        get_rotation_10783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 21), testlabel_10782, 'get_rotation')
        # Calling get_rotation(args, kwargs) (line 857)
        get_rotation_call_result_10785 = invoke(stypy.reporting.localization.Localization(__file__, 857, 21), get_rotation_10783, *[], **kwargs_10784)
        
        int_10786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 47), 'int')
        # Processing the call keyword arguments (line 857)
        kwargs_10787 = {}
        # Getting the type of 'assert_equal' (line 857)
        assert_equal_10781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 857)
        assert_equal_call_result_10788 = invoke(stypy.reporting.localization.Localization(__file__, 857, 8), assert_equal_10781, *[get_rotation_call_result_10785, int_10786], **kwargs_10787)
        
        
        # Call to assert_equal(...): (line 858)
        # Processing the call arguments (line 858)
        
        # Call to get_size(...): (line 858)
        # Processing the call keyword arguments (line 858)
        kwargs_10792 = {}
        # Getting the type of 'testlabel' (line 858)
        testlabel_10790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 21), 'testlabel', False)
        # Obtaining the member 'get_size' of a type (line 858)
        get_size_10791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 21), testlabel_10790, 'get_size')
        # Calling get_size(args, kwargs) (line 858)
        get_size_call_result_10793 = invoke(stypy.reporting.localization.Localization(__file__, 858, 21), get_size_10791, *[], **kwargs_10792)
        
        int_10794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 43), 'int')
        # Processing the call keyword arguments (line 858)
        kwargs_10795 = {}
        # Getting the type of 'assert_equal' (line 858)
        assert_equal_10789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 858)
        assert_equal_call_result_10796 = invoke(stypy.reporting.localization.Localization(__file__, 858, 8), assert_equal_10789, *[get_size_call_result_10793, int_10794], **kwargs_10795)
        
        
        # Assigning a Call to a Name (line 859):
        
        # Assigning a Call to a Name (line 859):
        
        # Call to dendrogram(...): (line 859)
        # Processing the call arguments (line 859)
        # Getting the type of 'Z' (line 859)
        Z_10798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 25), 'Z', False)
        # Processing the call keyword arguments (line 859)
        # Getting the type of 'ax' (line 859)
        ax_10799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 31), 'ax', False)
        keyword_10800 = ax_10799
        # Getting the type of 'orientation' (line 859)
        orientation_10801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 47), 'orientation', False)
        keyword_10802 = orientation_10801
        int_10803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 39), 'int')
        keyword_10804 = int_10803
        kwargs_10805 = {'leaf_rotation': keyword_10804, 'ax': keyword_10800, 'orientation': keyword_10802}
        # Getting the type of 'dendrogram' (line 859)
        dendrogram_10797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 14), 'dendrogram', False)
        # Calling dendrogram(args, kwargs) (line 859)
        dendrogram_call_result_10806 = invoke(stypy.reporting.localization.Localization(__file__, 859, 14), dendrogram_10797, *[Z_10798], **kwargs_10805)
        
        # Assigning a type to the variable 'R1a' (line 859)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 8), 'R1a', dendrogram_call_result_10806)
        
        # Assigning a IfExp to a Name (line 861):
        
        # Assigning a IfExp to a Name (line 861):
        
        
        # Getting the type of 'orientation' (line 863)
        orientation_10807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 15), 'orientation')
        
        # Obtaining an instance of the builtin type 'list' (line 863)
        list_10808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 863)
        # Adding element type (line 863)
        str_10809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 31), 'str', 'top')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 863, 30), list_10808, str_10809)
        # Adding element type (line 863)
        str_10810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 38), 'str', 'bottom')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 863, 30), list_10808, str_10810)
        
        # Applying the binary operator 'in' (line 863)
        result_contains_10811 = python_operator(stypy.reporting.localization.Localization(__file__, 863, 15), 'in', orientation_10807, list_10808)
        
        # Testing the type of an if expression (line 862)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 862, 12), result_contains_10811)
        # SSA begins for if expression (line 862)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Obtaining the type of the subscript
        int_10812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 33), 'int')
        
        # Call to get_xticklabels(...): (line 862)
        # Processing the call keyword arguments (line 862)
        kwargs_10815 = {}
        # Getting the type of 'ax' (line 862)
        ax_10813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 12), 'ax', False)
        # Obtaining the member 'get_xticklabels' of a type (line 862)
        get_xticklabels_10814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 12), ax_10813, 'get_xticklabels')
        # Calling get_xticklabels(args, kwargs) (line 862)
        get_xticklabels_call_result_10816 = invoke(stypy.reporting.localization.Localization(__file__, 862, 12), get_xticklabels_10814, *[], **kwargs_10815)
        
        # Obtaining the member '__getitem__' of a type (line 862)
        getitem___10817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 12), get_xticklabels_call_result_10816, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 862)
        subscript_call_result_10818 = invoke(stypy.reporting.localization.Localization(__file__, 862, 12), getitem___10817, int_10812)
        
        # SSA branch for the else part of an if expression (line 862)
        module_type_store.open_ssa_branch('if expression else')
        
        # Obtaining the type of the subscript
        int_10819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 38), 'int')
        
        # Call to get_yticklabels(...): (line 864)
        # Processing the call keyword arguments (line 864)
        kwargs_10822 = {}
        # Getting the type of 'ax' (line 864)
        ax_10820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 17), 'ax', False)
        # Obtaining the member 'get_yticklabels' of a type (line 864)
        get_yticklabels_10821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 17), ax_10820, 'get_yticklabels')
        # Calling get_yticklabels(args, kwargs) (line 864)
        get_yticklabels_call_result_10823 = invoke(stypy.reporting.localization.Localization(__file__, 864, 17), get_yticklabels_10821, *[], **kwargs_10822)
        
        # Obtaining the member '__getitem__' of a type (line 864)
        getitem___10824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 17), get_yticklabels_call_result_10823, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 864)
        subscript_call_result_10825 = invoke(stypy.reporting.localization.Localization(__file__, 864, 17), getitem___10824, int_10819)
        
        # SSA join for if expression (line 862)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_10826 = union_type.UnionType.add(subscript_call_result_10818, subscript_call_result_10825)
        
        # Assigning a type to the variable 'testlabel' (line 861)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 861, 8), 'testlabel', if_exp_10826)
        
        # Call to assert_equal(...): (line 866)
        # Processing the call arguments (line 866)
        
        # Call to get_rotation(...): (line 866)
        # Processing the call keyword arguments (line 866)
        kwargs_10830 = {}
        # Getting the type of 'testlabel' (line 866)
        testlabel_10828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 21), 'testlabel', False)
        # Obtaining the member 'get_rotation' of a type (line 866)
        get_rotation_10829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 21), testlabel_10828, 'get_rotation')
        # Calling get_rotation(args, kwargs) (line 866)
        get_rotation_call_result_10831 = invoke(stypy.reporting.localization.Localization(__file__, 866, 21), get_rotation_10829, *[], **kwargs_10830)
        
        int_10832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 47), 'int')
        # Processing the call keyword arguments (line 866)
        kwargs_10833 = {}
        # Getting the type of 'assert_equal' (line 866)
        assert_equal_10827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 866)
        assert_equal_call_result_10834 = invoke(stypy.reporting.localization.Localization(__file__, 866, 8), assert_equal_10827, *[get_rotation_call_result_10831, int_10832], **kwargs_10833)
        
        
        # Assigning a Call to a Name (line 867):
        
        # Assigning a Call to a Name (line 867):
        
        # Call to dendrogram(...): (line 867)
        # Processing the call arguments (line 867)
        # Getting the type of 'Z' (line 867)
        Z_10836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 25), 'Z', False)
        # Processing the call keyword arguments (line 867)
        # Getting the type of 'ax' (line 867)
        ax_10837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 31), 'ax', False)
        keyword_10838 = ax_10837
        # Getting the type of 'orientation' (line 867)
        orientation_10839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 47), 'orientation', False)
        keyword_10840 = orientation_10839
        int_10841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 40), 'int')
        keyword_10842 = int_10841
        kwargs_10843 = {'ax': keyword_10838, 'leaf_font_size': keyword_10842, 'orientation': keyword_10840}
        # Getting the type of 'dendrogram' (line 867)
        dendrogram_10835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 14), 'dendrogram', False)
        # Calling dendrogram(args, kwargs) (line 867)
        dendrogram_call_result_10844 = invoke(stypy.reporting.localization.Localization(__file__, 867, 14), dendrogram_10835, *[Z_10836], **kwargs_10843)
        
        # Assigning a type to the variable 'R1a' (line 867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 8), 'R1a', dendrogram_call_result_10844)
        
        # Assigning a IfExp to a Name (line 869):
        
        # Assigning a IfExp to a Name (line 869):
        
        
        # Getting the type of 'orientation' (line 871)
        orientation_10845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 15), 'orientation')
        
        # Obtaining an instance of the builtin type 'list' (line 871)
        list_10846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 871)
        # Adding element type (line 871)
        str_10847 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 31), 'str', 'top')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 30), list_10846, str_10847)
        # Adding element type (line 871)
        str_10848 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 38), 'str', 'bottom')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 871, 30), list_10846, str_10848)
        
        # Applying the binary operator 'in' (line 871)
        result_contains_10849 = python_operator(stypy.reporting.localization.Localization(__file__, 871, 15), 'in', orientation_10845, list_10846)
        
        # Testing the type of an if expression (line 870)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 870, 12), result_contains_10849)
        # SSA begins for if expression (line 870)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if expression')
        
        # Obtaining the type of the subscript
        int_10850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 33), 'int')
        
        # Call to get_xticklabels(...): (line 870)
        # Processing the call keyword arguments (line 870)
        kwargs_10853 = {}
        # Getting the type of 'ax' (line 870)
        ax_10851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 12), 'ax', False)
        # Obtaining the member 'get_xticklabels' of a type (line 870)
        get_xticklabels_10852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 12), ax_10851, 'get_xticklabels')
        # Calling get_xticklabels(args, kwargs) (line 870)
        get_xticklabels_call_result_10854 = invoke(stypy.reporting.localization.Localization(__file__, 870, 12), get_xticklabels_10852, *[], **kwargs_10853)
        
        # Obtaining the member '__getitem__' of a type (line 870)
        getitem___10855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 12), get_xticklabels_call_result_10854, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 870)
        subscript_call_result_10856 = invoke(stypy.reporting.localization.Localization(__file__, 870, 12), getitem___10855, int_10850)
        
        # SSA branch for the else part of an if expression (line 870)
        module_type_store.open_ssa_branch('if expression else')
        
        # Obtaining the type of the subscript
        int_10857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 38), 'int')
        
        # Call to get_yticklabels(...): (line 872)
        # Processing the call keyword arguments (line 872)
        kwargs_10860 = {}
        # Getting the type of 'ax' (line 872)
        ax_10858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 17), 'ax', False)
        # Obtaining the member 'get_yticklabels' of a type (line 872)
        get_yticklabels_10859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 17), ax_10858, 'get_yticklabels')
        # Calling get_yticklabels(args, kwargs) (line 872)
        get_yticklabels_call_result_10861 = invoke(stypy.reporting.localization.Localization(__file__, 872, 17), get_yticklabels_10859, *[], **kwargs_10860)
        
        # Obtaining the member '__getitem__' of a type (line 872)
        getitem___10862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 17), get_yticklabels_call_result_10861, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 872)
        subscript_call_result_10863 = invoke(stypy.reporting.localization.Localization(__file__, 872, 17), getitem___10862, int_10857)
        
        # SSA join for if expression (line 870)
        module_type_store = module_type_store.join_ssa_context()
        if_exp_10864 = union_type.UnionType.add(subscript_call_result_10856, subscript_call_result_10863)
        
        # Assigning a type to the variable 'testlabel' (line 869)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 869, 8), 'testlabel', if_exp_10864)
        
        # Call to assert_equal(...): (line 874)
        # Processing the call arguments (line 874)
        
        # Call to get_size(...): (line 874)
        # Processing the call keyword arguments (line 874)
        kwargs_10868 = {}
        # Getting the type of 'testlabel' (line 874)
        testlabel_10866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 21), 'testlabel', False)
        # Obtaining the member 'get_size' of a type (line 874)
        get_size_10867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 21), testlabel_10866, 'get_size')
        # Calling get_size(args, kwargs) (line 874)
        get_size_call_result_10869 = invoke(stypy.reporting.localization.Localization(__file__, 874, 21), get_size_10867, *[], **kwargs_10868)
        
        int_10870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 43), 'int')
        # Processing the call keyword arguments (line 874)
        kwargs_10871 = {}
        # Getting the type of 'assert_equal' (line 874)
        assert_equal_10865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 874)
        assert_equal_call_result_10872 = invoke(stypy.reporting.localization.Localization(__file__, 874, 8), assert_equal_10865, *[get_size_call_result_10869, int_10870], **kwargs_10871)
        
        
        # Call to close(...): (line 875)
        # Processing the call keyword arguments (line 875)
        kwargs_10875 = {}
        # Getting the type of 'plt' (line 875)
        plt_10873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 8), 'plt', False)
        # Obtaining the member 'close' of a type (line 875)
        close_10874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 8), plt_10873, 'close')
        # Calling close(args, kwargs) (line 875)
        close_call_result_10876 = invoke(stypy.reporting.localization.Localization(__file__, 875, 8), close_10874, *[], **kwargs_10875)
        
        
        # Assigning a Call to a Name (line 878):
        
        # Assigning a Call to a Name (line 878):
        
        # Call to dendrogram(...): (line 878)
        # Processing the call arguments (line 878)
        # Getting the type of 'Z' (line 878)
        Z_10878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 24), 'Z', False)
        # Processing the call keyword arguments (line 878)
        # Getting the type of 'orientation' (line 878)
        orientation_10879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 39), 'orientation', False)
        keyword_10880 = orientation_10879
        kwargs_10881 = {'orientation': keyword_10880}
        # Getting the type of 'dendrogram' (line 878)
        dendrogram_10877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 13), 'dendrogram', False)
        # Calling dendrogram(args, kwargs) (line 878)
        dendrogram_call_result_10882 = invoke(stypy.reporting.localization.Localization(__file__, 878, 13), dendrogram_10877, *[Z_10878], **kwargs_10881)
        
        # Assigning a type to the variable 'R2' (line 878)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 878, 8), 'R2', dendrogram_call_result_10882)
        
        # Call to close(...): (line 879)
        # Processing the call keyword arguments (line 879)
        kwargs_10885 = {}
        # Getting the type of 'plt' (line 879)
        plt_10883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 8), 'plt', False)
        # Obtaining the member 'close' of a type (line 879)
        close_10884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 8), plt_10883, 'close')
        # Calling close(args, kwargs) (line 879)
        close_call_result_10886 = invoke(stypy.reporting.localization.Localization(__file__, 879, 8), close_10884, *[], **kwargs_10885)
        
        
        # Call to assert_equal(...): (line 880)
        # Processing the call arguments (line 880)
        # Getting the type of 'R2' (line 880)
        R2_10888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 21), 'R2', False)
        # Getting the type of 'expected' (line 880)
        expected_10889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 25), 'expected', False)
        # Processing the call keyword arguments (line 880)
        kwargs_10890 = {}
        # Getting the type of 'assert_equal' (line 880)
        assert_equal_10887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 880)
        assert_equal_call_result_10891 = invoke(stypy.reporting.localization.Localization(__file__, 880, 8), assert_equal_10887, *[R2_10888, expected_10889], **kwargs_10890)
        
        
        # ################# End of 'check_dendrogram_plot(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'check_dendrogram_plot' in the type store
        # Getting the type of 'stypy_return_type' (line 824)
        stypy_return_type_10892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 824, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10892)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'check_dendrogram_plot'
        return stypy_return_type_10892


    @norecursion
    def test_dendrogram_truncate_mode(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_dendrogram_truncate_mode'
        module_type_store = module_type_store.open_function_context('test_dendrogram_truncate_mode', 882, 4, False)
        # Assigning a type to the variable 'self' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_localization', localization)
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_function_name', 'TestDendrogram.test_dendrogram_truncate_mode')
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_param_names_list', [])
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestDendrogram.test_dendrogram_truncate_mode.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDendrogram.test_dendrogram_truncate_mode', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_dendrogram_truncate_mode', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_dendrogram_truncate_mode(...)' code ##################

        
        # Assigning a Call to a Name (line 884):
        
        # Assigning a Call to a Name (line 884):
        
        # Call to linkage(...): (line 884)
        # Processing the call arguments (line 884)
        # Getting the type of 'hierarchy_test_data' (line 884)
        hierarchy_test_data_10894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 884)
        ytdist_10895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 20), hierarchy_test_data_10894, 'ytdist')
        str_10896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 884, 48), 'str', 'single')
        # Processing the call keyword arguments (line 884)
        kwargs_10897 = {}
        # Getting the type of 'linkage' (line 884)
        linkage_10893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 884)
        linkage_call_result_10898 = invoke(stypy.reporting.localization.Localization(__file__, 884, 12), linkage_10893, *[ytdist_10895, str_10896], **kwargs_10897)
        
        # Assigning a type to the variable 'Z' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 8), 'Z', linkage_call_result_10898)
        
        # Assigning a Call to a Name (line 886):
        
        # Assigning a Call to a Name (line 886):
        
        # Call to dendrogram(...): (line 886)
        # Processing the call arguments (line 886)
        # Getting the type of 'Z' (line 886)
        Z_10900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 23), 'Z', False)
        int_10901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 26), 'int')
        str_10902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 29), 'str', 'lastp')
        # Processing the call keyword arguments (line 886)
        # Getting the type of 'True' (line 886)
        True_10903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 54), 'True', False)
        keyword_10904 = True_10903
        kwargs_10905 = {'show_contracted': keyword_10904}
        # Getting the type of 'dendrogram' (line 886)
        dendrogram_10899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 12), 'dendrogram', False)
        # Calling dendrogram(args, kwargs) (line 886)
        dendrogram_call_result_10906 = invoke(stypy.reporting.localization.Localization(__file__, 886, 12), dendrogram_10899, *[Z_10900, int_10901, str_10902], **kwargs_10905)
        
        # Assigning a type to the variable 'R' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 8), 'R', dendrogram_call_result_10906)
        
        # Call to close(...): (line 887)
        # Processing the call keyword arguments (line 887)
        kwargs_10909 = {}
        # Getting the type of 'plt' (line 887)
        plt_10907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'plt', False)
        # Obtaining the member 'close' of a type (line 887)
        close_10908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 8), plt_10907, 'close')
        # Calling close(args, kwargs) (line 887)
        close_call_result_10910 = invoke(stypy.reporting.localization.Localization(__file__, 887, 8), close_10908, *[], **kwargs_10909)
        
        
        # Call to assert_equal(...): (line 888)
        # Processing the call arguments (line 888)
        # Getting the type of 'R' (line 888)
        R_10912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 21), 'R', False)
        
        # Obtaining an instance of the builtin type 'dict' (line 888)
        dict_10913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 24), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 888)
        # Adding element type (key, value) (line 888)
        str_10914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 25), 'str', 'color_list')
        
        # Obtaining an instance of the builtin type 'list' (line 888)
        list_10915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 888)
        # Adding element type (line 888)
        str_10916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 40), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 888, 39), list_10915, str_10916)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 888, 24), dict_10913, (str_10914, list_10915))
        # Adding element type (key, value) (line 888)
        str_10917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 25), 'str', 'dcoord')
        
        # Obtaining an instance of the builtin type 'list' (line 889)
        list_10918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 889)
        # Adding element type (line 889)
        
        # Obtaining an instance of the builtin type 'list' (line 889)
        list_10919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 889)
        # Adding element type (line 889)
        float_10920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 889, 36), list_10919, float_10920)
        # Adding element type (line 889)
        float_10921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 889, 36), list_10919, float_10921)
        # Adding element type (line 889)
        float_10922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 889, 36), list_10919, float_10922)
        # Adding element type (line 889)
        float_10923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 56), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 889, 36), list_10919, float_10923)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 889, 35), list_10918, list_10919)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 888, 24), dict_10913, (str_10917, list_10918))
        # Adding element type (key, value) (line 888)
        str_10924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 25), 'str', 'icoord')
        
        # Obtaining an instance of the builtin type 'list' (line 890)
        list_10925 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 890)
        # Adding element type (line 890)
        
        # Obtaining an instance of the builtin type 'list' (line 890)
        list_10926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 890)
        # Adding element type (line 890)
        float_10927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 36), list_10926, float_10927)
        # Adding element type (line 890)
        float_10928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 36), list_10926, float_10928)
        # Adding element type (line 890)
        float_10929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 47), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 36), list_10926, float_10929)
        # Adding element type (line 890)
        float_10930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 36), list_10926, float_10930)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 890, 35), list_10925, list_10926)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 888, 24), dict_10913, (str_10924, list_10925))
        # Adding element type (key, value) (line 888)
        str_10931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 25), 'str', 'ivl')
        
        # Obtaining an instance of the builtin type 'list' (line 891)
        list_10932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 891)
        # Adding element type (line 891)
        str_10933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 33), 'str', '(2)')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 891, 32), list_10932, str_10933)
        # Adding element type (line 891)
        str_10934 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 40), 'str', '(4)')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 891, 32), list_10932, str_10934)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 888, 24), dict_10913, (str_10931, list_10932))
        # Adding element type (key, value) (line 888)
        str_10935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 25), 'str', 'leaves')
        
        # Obtaining an instance of the builtin type 'list' (line 892)
        list_10936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 892)
        # Adding element type (line 892)
        int_10937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 892, 35), list_10936, int_10937)
        # Adding element type (line 892)
        int_10938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 892, 35), list_10936, int_10938)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 888, 24), dict_10913, (str_10935, list_10936))
        
        # Processing the call keyword arguments (line 888)
        kwargs_10939 = {}
        # Getting the type of 'assert_equal' (line 888)
        assert_equal_10911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 888)
        assert_equal_call_result_10940 = invoke(stypy.reporting.localization.Localization(__file__, 888, 8), assert_equal_10911, *[R_10912, dict_10913], **kwargs_10939)
        
        
        # Assigning a Call to a Name (line 894):
        
        # Assigning a Call to a Name (line 894):
        
        # Call to dendrogram(...): (line 894)
        # Processing the call arguments (line 894)
        # Getting the type of 'Z' (line 894)
        Z_10942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 23), 'Z', False)
        int_10943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 26), 'int')
        str_10944 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 29), 'str', 'mtica')
        # Processing the call keyword arguments (line 894)
        # Getting the type of 'True' (line 894)
        True_10945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 54), 'True', False)
        keyword_10946 = True_10945
        kwargs_10947 = {'show_contracted': keyword_10946}
        # Getting the type of 'dendrogram' (line 894)
        dendrogram_10941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 12), 'dendrogram', False)
        # Calling dendrogram(args, kwargs) (line 894)
        dendrogram_call_result_10948 = invoke(stypy.reporting.localization.Localization(__file__, 894, 12), dendrogram_10941, *[Z_10942, int_10943, str_10944], **kwargs_10947)
        
        # Assigning a type to the variable 'R' (line 894)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 894, 8), 'R', dendrogram_call_result_10948)
        
        # Call to close(...): (line 895)
        # Processing the call keyword arguments (line 895)
        kwargs_10951 = {}
        # Getting the type of 'plt' (line 895)
        plt_10949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'plt', False)
        # Obtaining the member 'close' of a type (line 895)
        close_10950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 8), plt_10949, 'close')
        # Calling close(args, kwargs) (line 895)
        close_call_result_10952 = invoke(stypy.reporting.localization.Localization(__file__, 895, 8), close_10950, *[], **kwargs_10951)
        
        
        # Call to assert_equal(...): (line 896)
        # Processing the call arguments (line 896)
        # Getting the type of 'R' (line 896)
        R_10954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 21), 'R', False)
        
        # Obtaining an instance of the builtin type 'dict' (line 896)
        dict_10955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 24), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 896)
        # Adding element type (key, value) (line 896)
        str_10956 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 25), 'str', 'color_list')
        
        # Obtaining an instance of the builtin type 'list' (line 896)
        list_10957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 896)
        # Adding element type (line 896)
        str_10958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 40), 'str', 'g')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 39), list_10957, str_10958)
        # Adding element type (line 896)
        str_10959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 45), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 39), list_10957, str_10959)
        # Adding element type (line 896)
        str_10960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 50), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 39), list_10957, str_10960)
        # Adding element type (line 896)
        str_10961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 55), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 39), list_10957, str_10961)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 24), dict_10955, (str_10956, list_10957))
        # Adding element type (key, value) (line 896)
        str_10962 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 25), 'str', 'dcoord')
        
        # Obtaining an instance of the builtin type 'list' (line 897)
        list_10963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 897)
        # Adding element type (line 897)
        
        # Obtaining an instance of the builtin type 'list' (line 897)
        list_10964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 897)
        # Adding element type (line 897)
        float_10965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 36), list_10964, float_10965)
        # Adding element type (line 897)
        float_10966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 36), list_10964, float_10966)
        # Adding element type (line 897)
        float_10967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 36), list_10964, float_10967)
        # Adding element type (line 897)
        float_10968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 56), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 36), list_10964, float_10968)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 35), list_10963, list_10964)
        # Adding element type (line 897)
        
        # Obtaining an instance of the builtin type 'list' (line 898)
        list_10969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 898)
        # Adding element type (line 898)
        float_10970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 36), list_10969, float_10970)
        # Adding element type (line 898)
        float_10971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 36), list_10969, float_10971)
        # Adding element type (line 898)
        float_10972 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 36), list_10969, float_10972)
        # Adding element type (line 898)
        float_10973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 56), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 36), list_10969, float_10973)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 35), list_10963, list_10969)
        # Adding element type (line 897)
        
        # Obtaining an instance of the builtin type 'list' (line 899)
        list_10974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 899)
        # Adding element type (line 899)
        float_10975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 899, 36), list_10974, float_10975)
        # Adding element type (line 899)
        float_10976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 899, 36), list_10974, float_10976)
        # Adding element type (line 899)
        float_10977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 899, 36), list_10974, float_10977)
        # Adding element type (line 899)
        float_10978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 899, 56), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 899, 36), list_10974, float_10978)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 35), list_10963, list_10974)
        # Adding element type (line 897)
        
        # Obtaining an instance of the builtin type 'list' (line 900)
        list_10979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 900)
        # Adding element type (line 900)
        float_10980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 36), list_10979, float_10980)
        # Adding element type (line 900)
        float_10981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 44), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 36), list_10979, float_10981)
        # Adding element type (line 900)
        float_10982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 51), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 36), list_10979, float_10982)
        # Adding element type (line 900)
        float_10983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 58), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 36), list_10979, float_10983)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 897, 35), list_10963, list_10979)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 24), dict_10955, (str_10962, list_10963))
        # Adding element type (key, value) (line 896)
        str_10984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 25), 'str', 'icoord')
        
        # Obtaining an instance of the builtin type 'list' (line 901)
        list_10985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 901)
        # Adding element type (line 901)
        
        # Obtaining an instance of the builtin type 'list' (line 901)
        list_10986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 901)
        # Adding element type (line 901)
        float_10987 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 36), list_10986, float_10987)
        # Adding element type (line 901)
        float_10988 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 42), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 36), list_10986, float_10988)
        # Adding element type (line 901)
        float_10989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 47), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 36), list_10986, float_10989)
        # Adding element type (line 901)
        float_10990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 901, 53), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 36), list_10986, float_10990)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 35), list_10985, list_10986)
        # Adding element type (line 901)
        
        # Obtaining an instance of the builtin type 'list' (line 902)
        list_10991 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 902)
        # Adding element type (line 902)
        float_10992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 36), list_10991, float_10992)
        # Adding element type (line 902)
        float_10993 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 36), list_10991, float_10993)
        # Adding element type (line 902)
        float_10994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 36), list_10991, float_10994)
        # Adding element type (line 902)
        float_10995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 902, 55), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 902, 36), list_10991, float_10995)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 35), list_10985, list_10991)
        # Adding element type (line 901)
        
        # Obtaining an instance of the builtin type 'list' (line 903)
        list_10996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 903)
        # Adding element type (line 903)
        float_10997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 36), list_10996, float_10997)
        # Adding element type (line 903)
        float_10998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 36), list_10996, float_10998)
        # Adding element type (line 903)
        float_10999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 36), list_10996, float_10999)
        # Adding element type (line 903)
        float_11000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 55), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 903, 36), list_10996, float_11000)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 35), list_10985, list_10996)
        # Adding element type (line 901)
        
        # Obtaining an instance of the builtin type 'list' (line 904)
        list_11001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 904, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 904)
        # Adding element type (line 904)
        float_11002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 904, 37), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 904, 36), list_11001, float_11002)
        # Adding element type (line 904)
        float_11003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 904, 43), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 904, 36), list_11001, float_11003)
        # Adding element type (line 904)
        float_11004 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 904, 49), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 904, 36), list_11001, float_11004)
        # Adding element type (line 904)
        float_11005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 904, 55), 'float')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 904, 36), list_11001, float_11005)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 901, 35), list_10985, list_11001)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 24), dict_10955, (str_10984, list_10985))
        # Adding element type (key, value) (line 896)
        str_11006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 25), 'str', 'ivl')
        
        # Obtaining an instance of the builtin type 'list' (line 905)
        list_11007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 905)
        # Adding element type (line 905)
        str_11008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 33), 'str', '2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 905, 32), list_11007, str_11008)
        # Adding element type (line 905)
        str_11009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 38), 'str', '5')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 905, 32), list_11007, str_11009)
        # Adding element type (line 905)
        str_11010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 43), 'str', '1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 905, 32), list_11007, str_11010)
        # Adding element type (line 905)
        str_11011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 48), 'str', '0')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 905, 32), list_11007, str_11011)
        # Adding element type (line 905)
        str_11012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 53), 'str', '(2)')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 905, 32), list_11007, str_11012)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 24), dict_10955, (str_11006, list_11007))
        # Adding element type (key, value) (line 896)
        str_11013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 25), 'str', 'leaves')
        
        # Obtaining an instance of the builtin type 'list' (line 906)
        list_11014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 906)
        # Adding element type (line 906)
        int_11015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 35), list_11014, int_11015)
        # Adding element type (line 906)
        int_11016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 35), list_11014, int_11016)
        # Adding element type (line 906)
        int_11017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 35), list_11014, int_11017)
        # Adding element type (line 906)
        int_11018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 35), list_11014, int_11018)
        # Adding element type (line 906)
        int_11019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 906, 35), list_11014, int_11019)
        
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 24), dict_10955, (str_11013, list_11014))
        
        # Processing the call keyword arguments (line 896)
        kwargs_11020 = {}
        # Getting the type of 'assert_equal' (line 896)
        assert_equal_10953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 896)
        assert_equal_call_result_11021 = invoke(stypy.reporting.localization.Localization(__file__, 896, 8), assert_equal_10953, *[R_10954, dict_10955], **kwargs_11020)
        
        
        # ################# End of 'test_dendrogram_truncate_mode(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_dendrogram_truncate_mode' in the type store
        # Getting the type of 'stypy_return_type' (line 882)
        stypy_return_type_11022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_11022)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_dendrogram_truncate_mode'
        return stypy_return_type_11022


    @norecursion
    def test_dendrogram_colors(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_dendrogram_colors'
        module_type_store = module_type_store.open_function_context('test_dendrogram_colors', 908, 4, False)
        # Assigning a type to the variable 'self' (line 909)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 909, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_localization', localization)
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_type_store', module_type_store)
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_function_name', 'TestDendrogram.test_dendrogram_colors')
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_param_names_list', [])
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_varargs_param_name', None)
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_kwargs_param_name', None)
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_call_defaults', defaults)
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_call_varargs', varargs)
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        TestDendrogram.test_dendrogram_colors.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDendrogram.test_dendrogram_colors', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_dendrogram_colors', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_dendrogram_colors(...)' code ##################

        
        # Assigning a Call to a Name (line 910):
        
        # Assigning a Call to a Name (line 910):
        
        # Call to linkage(...): (line 910)
        # Processing the call arguments (line 910)
        # Getting the type of 'hierarchy_test_data' (line 910)
        hierarchy_test_data_11024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 20), 'hierarchy_test_data', False)
        # Obtaining the member 'ytdist' of a type (line 910)
        ytdist_11025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 910, 20), hierarchy_test_data_11024, 'ytdist')
        str_11026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 48), 'str', 'single')
        # Processing the call keyword arguments (line 910)
        kwargs_11027 = {}
        # Getting the type of 'linkage' (line 910)
        linkage_11023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 910, 12), 'linkage', False)
        # Calling linkage(args, kwargs) (line 910)
        linkage_call_result_11028 = invoke(stypy.reporting.localization.Localization(__file__, 910, 12), linkage_11023, *[ytdist_11025, str_11026], **kwargs_11027)
        
        # Assigning a type to the variable 'Z' (line 910)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 910, 8), 'Z', linkage_call_result_11028)
        
        # Call to set_link_color_palette(...): (line 912)
        # Processing the call arguments (line 912)
        
        # Obtaining an instance of the builtin type 'list' (line 912)
        list_11030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 912)
        # Adding element type (line 912)
        str_11031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 32), 'str', 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 31), list_11030, str_11031)
        # Adding element type (line 912)
        str_11032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 37), 'str', 'm')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 31), list_11030, str_11032)
        # Adding element type (line 912)
        str_11033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 42), 'str', 'y')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 31), list_11030, str_11033)
        # Adding element type (line 912)
        str_11034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 47), 'str', 'k')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 912, 31), list_11030, str_11034)
        
        # Processing the call keyword arguments (line 912)
        kwargs_11035 = {}
        # Getting the type of 'set_link_color_palette' (line 912)
        set_link_color_palette_11029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'set_link_color_palette', False)
        # Calling set_link_color_palette(args, kwargs) (line 912)
        set_link_color_palette_call_result_11036 = invoke(stypy.reporting.localization.Localization(__file__, 912, 8), set_link_color_palette_11029, *[list_11030], **kwargs_11035)
        
        
        # Assigning a Call to a Name (line 913):
        
        # Assigning a Call to a Name (line 913):
        
        # Call to dendrogram(...): (line 913)
        # Processing the call arguments (line 913)
        # Getting the type of 'Z' (line 913)
        Z_11038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 23), 'Z', False)
        # Processing the call keyword arguments (line 913)
        # Getting the type of 'True' (line 913)
        True_11039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 34), 'True', False)
        keyword_11040 = True_11039
        str_11041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 45), 'str', 'g')
        keyword_11042 = str_11041
        int_11043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 914, 66), 'int')
        keyword_11044 = int_11043
        kwargs_11045 = {'no_plot': keyword_11040, 'color_threshold': keyword_11044, 'above_threshold_color': keyword_11042}
        # Getting the type of 'dendrogram' (line 913)
        dendrogram_11037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 12), 'dendrogram', False)
        # Calling dendrogram(args, kwargs) (line 913)
        dendrogram_call_result_11046 = invoke(stypy.reporting.localization.Localization(__file__, 913, 12), dendrogram_11037, *[Z_11038], **kwargs_11045)
        
        # Assigning a type to the variable 'R' (line 913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 8), 'R', dendrogram_call_result_11046)
        
        # Call to set_link_color_palette(...): (line 915)
        # Processing the call arguments (line 915)
        
        # Obtaining an instance of the builtin type 'list' (line 915)
        list_11048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 915)
        # Adding element type (line 915)
        str_11049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 32), 'str', 'g')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 31), list_11048, str_11049)
        # Adding element type (line 915)
        str_11050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 37), 'str', 'r')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 31), list_11048, str_11050)
        # Adding element type (line 915)
        str_11051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 42), 'str', 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 31), list_11048, str_11051)
        # Adding element type (line 915)
        str_11052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 47), 'str', 'm')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 31), list_11048, str_11052)
        # Adding element type (line 915)
        str_11053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 52), 'str', 'y')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 31), list_11048, str_11053)
        # Adding element type (line 915)
        str_11054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 915, 57), 'str', 'k')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 915, 31), list_11048, str_11054)
        
        # Processing the call keyword arguments (line 915)
        kwargs_11055 = {}
        # Getting the type of 'set_link_color_palette' (line 915)
        set_link_color_palette_11047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 8), 'set_link_color_palette', False)
        # Calling set_link_color_palette(args, kwargs) (line 915)
        set_link_color_palette_call_result_11056 = invoke(stypy.reporting.localization.Localization(__file__, 915, 8), set_link_color_palette_11047, *[list_11048], **kwargs_11055)
        
        
        # Assigning a Subscript to a Name (line 917):
        
        # Assigning a Subscript to a Name (line 917):
        
        # Obtaining the type of the subscript
        str_11057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 23), 'str', 'color_list')
        # Getting the type of 'R' (line 917)
        R_11058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 21), 'R')
        # Obtaining the member '__getitem__' of a type (line 917)
        getitem___11059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 21), R_11058, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 917)
        subscript_call_result_11060 = invoke(stypy.reporting.localization.Localization(__file__, 917, 21), getitem___11059, str_11057)
        
        # Assigning a type to the variable 'color_list' (line 917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 8), 'color_list', subscript_call_result_11060)
        
        # Call to assert_equal(...): (line 918)
        # Processing the call arguments (line 918)
        # Getting the type of 'color_list' (line 918)
        color_list_11062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 21), 'color_list', False)
        
        # Obtaining an instance of the builtin type 'list' (line 918)
        list_11063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 918)
        # Adding element type (line 918)
        str_11064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 34), 'str', 'c')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 33), list_11063, str_11064)
        # Adding element type (line 918)
        str_11065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 39), 'str', 'm')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 33), list_11063, str_11065)
        # Adding element type (line 918)
        str_11066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 44), 'str', 'g')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 33), list_11063, str_11066)
        # Adding element type (line 918)
        str_11067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 49), 'str', 'g')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 33), list_11063, str_11067)
        # Adding element type (line 918)
        str_11068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 54), 'str', 'g')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 918, 33), list_11063, str_11068)
        
        # Processing the call keyword arguments (line 918)
        kwargs_11069 = {}
        # Getting the type of 'assert_equal' (line 918)
        assert_equal_11061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 8), 'assert_equal', False)
        # Calling assert_equal(args, kwargs) (line 918)
        assert_equal_call_result_11070 = invoke(stypy.reporting.localization.Localization(__file__, 918, 8), assert_equal_11061, *[color_list_11062, list_11063], **kwargs_11069)
        
        
        # Call to set_link_color_palette(...): (line 921)
        # Processing the call arguments (line 921)
        # Getting the type of 'None' (line 921)
        None_11072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 31), 'None', False)
        # Processing the call keyword arguments (line 921)
        kwargs_11073 = {}
        # Getting the type of 'set_link_color_palette' (line 921)
        set_link_color_palette_11071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'set_link_color_palette', False)
        # Calling set_link_color_palette(args, kwargs) (line 921)
        set_link_color_palette_call_result_11074 = invoke(stypy.reporting.localization.Localization(__file__, 921, 8), set_link_color_palette_11071, *[None_11072], **kwargs_11073)
        
        
        # ################# End of 'test_dendrogram_colors(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_dendrogram_colors' in the type store
        # Getting the type of 'stypy_return_type' (line 908)
        stypy_return_type_11075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_11075)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_dendrogram_colors'
        return stypy_return_type_11075


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 807, 0, False)
        # Assigning a type to the variable 'self' (line 808)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestDendrogram.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'TestDendrogram' (line 807)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 807, 0), 'TestDendrogram', TestDendrogram)

@norecursion
def calculate_maximum_distances(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'calculate_maximum_distances'
    module_type_store = module_type_store.open_function_context('calculate_maximum_distances', 924, 0, False)
    
    # Passed parameters checking function
    calculate_maximum_distances.stypy_localization = localization
    calculate_maximum_distances.stypy_type_of_self = None
    calculate_maximum_distances.stypy_type_store = module_type_store
    calculate_maximum_distances.stypy_function_name = 'calculate_maximum_distances'
    calculate_maximum_distances.stypy_param_names_list = ['Z']
    calculate_maximum_distances.stypy_varargs_param_name = None
    calculate_maximum_distances.stypy_kwargs_param_name = None
    calculate_maximum_distances.stypy_call_defaults = defaults
    calculate_maximum_distances.stypy_call_varargs = varargs
    calculate_maximum_distances.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'calculate_maximum_distances', ['Z'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'calculate_maximum_distances', localization, ['Z'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'calculate_maximum_distances(...)' code ##################

    
    # Assigning a BinOp to a Name (line 926):
    
    # Assigning a BinOp to a Name (line 926):
    
    # Obtaining the type of the subscript
    int_11076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 16), 'int')
    # Getting the type of 'Z' (line 926)
    Z_11077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 8), 'Z')
    # Obtaining the member 'shape' of a type (line 926)
    shape_11078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 926, 8), Z_11077, 'shape')
    # Obtaining the member '__getitem__' of a type (line 926)
    getitem___11079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 926, 8), shape_11078, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 926)
    subscript_call_result_11080 = invoke(stypy.reporting.localization.Localization(__file__, 926, 8), getitem___11079, int_11076)
    
    int_11081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 21), 'int')
    # Applying the binary operator '+' (line 926)
    result_add_11082 = python_operator(stypy.reporting.localization.Localization(__file__, 926, 8), '+', subscript_call_result_11080, int_11081)
    
    # Assigning a type to the variable 'n' (line 926)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 4), 'n', result_add_11082)
    
    # Assigning a Call to a Name (line 927):
    
    # Assigning a Call to a Name (line 927):
    
    # Call to zeros(...): (line 927)
    # Processing the call arguments (line 927)
    
    # Obtaining an instance of the builtin type 'tuple' (line 927)
    tuple_11085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 927)
    # Adding element type (line 927)
    # Getting the type of 'n' (line 927)
    n_11086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 18), 'n', False)
    int_11087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 20), 'int')
    # Applying the binary operator '-' (line 927)
    result_sub_11088 = python_operator(stypy.reporting.localization.Localization(__file__, 927, 18), '-', n_11086, int_11087)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 927, 18), tuple_11085, result_sub_11088)
    
    # Processing the call keyword arguments (line 927)
    kwargs_11089 = {}
    # Getting the type of 'np' (line 927)
    np_11083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 8), 'np', False)
    # Obtaining the member 'zeros' of a type (line 927)
    zeros_11084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 927, 8), np_11083, 'zeros')
    # Calling zeros(args, kwargs) (line 927)
    zeros_call_result_11090 = invoke(stypy.reporting.localization.Localization(__file__, 927, 8), zeros_11084, *[tuple_11085], **kwargs_11089)
    
    # Assigning a type to the variable 'B' (line 927)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 927, 4), 'B', zeros_call_result_11090)
    
    # Assigning a Call to a Name (line 928):
    
    # Assigning a Call to a Name (line 928):
    
    # Call to zeros(...): (line 928)
    # Processing the call arguments (line 928)
    
    # Obtaining an instance of the builtin type 'tuple' (line 928)
    tuple_11093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 928)
    # Adding element type (line 928)
    int_11094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 928, 18), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 928, 18), tuple_11093, int_11094)
    
    # Processing the call keyword arguments (line 928)
    kwargs_11095 = {}
    # Getting the type of 'np' (line 928)
    np_11091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 8), 'np', False)
    # Obtaining the member 'zeros' of a type (line 928)
    zeros_11092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 8), np_11091, 'zeros')
    # Calling zeros(args, kwargs) (line 928)
    zeros_call_result_11096 = invoke(stypy.reporting.localization.Localization(__file__, 928, 8), zeros_11092, *[tuple_11093], **kwargs_11095)
    
    # Assigning a type to the variable 'q' (line 928)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 928, 4), 'q', zeros_call_result_11096)
    
    
    # Call to xrange(...): (line 929)
    # Processing the call arguments (line 929)
    int_11098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 929, 20), 'int')
    # Getting the type of 'n' (line 929)
    n_11099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 23), 'n', False)
    int_11100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 929, 27), 'int')
    # Applying the binary operator '-' (line 929)
    result_sub_11101 = python_operator(stypy.reporting.localization.Localization(__file__, 929, 23), '-', n_11099, int_11100)
    
    # Processing the call keyword arguments (line 929)
    kwargs_11102 = {}
    # Getting the type of 'xrange' (line 929)
    xrange_11097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 13), 'xrange', False)
    # Calling xrange(args, kwargs) (line 929)
    xrange_call_result_11103 = invoke(stypy.reporting.localization.Localization(__file__, 929, 13), xrange_11097, *[int_11098, result_sub_11101], **kwargs_11102)
    
    # Testing the type of a for loop iterable (line 929)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 929, 4), xrange_call_result_11103)
    # Getting the type of the for loop variable (line 929)
    for_loop_var_11104 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 929, 4), xrange_call_result_11103)
    # Assigning a type to the variable 'i' (line 929)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 929, 4), 'i', for_loop_var_11104)
    # SSA begins for a for statement (line 929)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Num to a Subscript (line 930):
    
    # Assigning a Num to a Subscript (line 930):
    float_11105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 15), 'float')
    # Getting the type of 'q' (line 930)
    q_11106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 8), 'q')
    slice_11107 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 930, 8), None, None, None)
    # Storing an element on a container (line 930)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 8), q_11106, (slice_11107, float_11105))
    
    # Assigning a Subscript to a Name (line 931):
    
    # Assigning a Subscript to a Name (line 931):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 931)
    tuple_11108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 931)
    # Adding element type (line 931)
    # Getting the type of 'i' (line 931)
    i_11109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 17), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 931, 17), tuple_11108, i_11109)
    # Adding element type (line 931)
    int_11110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 931, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 931, 17), tuple_11108, int_11110)
    
    # Getting the type of 'Z' (line 931)
    Z_11111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 15), 'Z')
    # Obtaining the member '__getitem__' of a type (line 931)
    getitem___11112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 931, 15), Z_11111, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 931)
    subscript_call_result_11113 = invoke(stypy.reporting.localization.Localization(__file__, 931, 15), getitem___11112, tuple_11108)
    
    # Assigning a type to the variable 'left' (line 931)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 931, 8), 'left', subscript_call_result_11113)
    
    # Assigning a Subscript to a Name (line 932):
    
    # Assigning a Subscript to a Name (line 932):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 932)
    tuple_11114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 932)
    # Adding element type (line 932)
    # Getting the type of 'i' (line 932)
    i_11115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 18), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 932, 18), tuple_11114, i_11115)
    # Adding element type (line 932)
    int_11116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 21), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 932, 18), tuple_11114, int_11116)
    
    # Getting the type of 'Z' (line 932)
    Z_11117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 16), 'Z')
    # Obtaining the member '__getitem__' of a type (line 932)
    getitem___11118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 932, 16), Z_11117, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 932)
    subscript_call_result_11119 = invoke(stypy.reporting.localization.Localization(__file__, 932, 16), getitem___11118, tuple_11114)
    
    # Assigning a type to the variable 'right' (line 932)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 932, 8), 'right', subscript_call_result_11119)
    
    
    # Getting the type of 'left' (line 933)
    left_11120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 11), 'left')
    # Getting the type of 'n' (line 933)
    n_11121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 933, 19), 'n')
    # Applying the binary operator '>=' (line 933)
    result_ge_11122 = python_operator(stypy.reporting.localization.Localization(__file__, 933, 11), '>=', left_11120, n_11121)
    
    # Testing the type of an if condition (line 933)
    if_condition_11123 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 933, 8), result_ge_11122)
    # Assigning a type to the variable 'if_condition_11123' (line 933)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'if_condition_11123', if_condition_11123)
    # SSA begins for if statement (line 933)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 934):
    
    # Assigning a Subscript to a Subscript (line 934):
    
    # Obtaining the type of the subscript
    
    # Call to int(...): (line 934)
    # Processing the call arguments (line 934)
    # Getting the type of 'left' (line 934)
    left_11125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 25), 'left', False)
    # Processing the call keyword arguments (line 934)
    kwargs_11126 = {}
    # Getting the type of 'int' (line 934)
    int_11124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 21), 'int', False)
    # Calling int(args, kwargs) (line 934)
    int_call_result_11127 = invoke(stypy.reporting.localization.Localization(__file__, 934, 21), int_11124, *[left_11125], **kwargs_11126)
    
    # Getting the type of 'n' (line 934)
    n_11128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 33), 'n')
    # Applying the binary operator '-' (line 934)
    result_sub_11129 = python_operator(stypy.reporting.localization.Localization(__file__, 934, 21), '-', int_call_result_11127, n_11128)
    
    # Getting the type of 'B' (line 934)
    B_11130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 19), 'B')
    # Obtaining the member '__getitem__' of a type (line 934)
    getitem___11131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 934, 19), B_11130, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 934)
    subscript_call_result_11132 = invoke(stypy.reporting.localization.Localization(__file__, 934, 19), getitem___11131, result_sub_11129)
    
    # Getting the type of 'q' (line 934)
    q_11133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 12), 'q')
    int_11134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 934, 14), 'int')
    # Storing an element on a container (line 934)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 934, 12), q_11133, (int_11134, subscript_call_result_11132))
    # SSA join for if statement (line 933)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'right' (line 935)
    right_11135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 11), 'right')
    # Getting the type of 'n' (line 935)
    n_11136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 20), 'n')
    # Applying the binary operator '>=' (line 935)
    result_ge_11137 = python_operator(stypy.reporting.localization.Localization(__file__, 935, 11), '>=', right_11135, n_11136)
    
    # Testing the type of an if condition (line 935)
    if_condition_11138 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 935, 8), result_ge_11137)
    # Assigning a type to the variable 'if_condition_11138' (line 935)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 935, 8), 'if_condition_11138', if_condition_11138)
    # SSA begins for if statement (line 935)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 936):
    
    # Assigning a Subscript to a Subscript (line 936):
    
    # Obtaining the type of the subscript
    
    # Call to int(...): (line 936)
    # Processing the call arguments (line 936)
    # Getting the type of 'right' (line 936)
    right_11140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 25), 'right', False)
    # Processing the call keyword arguments (line 936)
    kwargs_11141 = {}
    # Getting the type of 'int' (line 936)
    int_11139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 21), 'int', False)
    # Calling int(args, kwargs) (line 936)
    int_call_result_11142 = invoke(stypy.reporting.localization.Localization(__file__, 936, 21), int_11139, *[right_11140], **kwargs_11141)
    
    # Getting the type of 'n' (line 936)
    n_11143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 34), 'n')
    # Applying the binary operator '-' (line 936)
    result_sub_11144 = python_operator(stypy.reporting.localization.Localization(__file__, 936, 21), '-', int_call_result_11142, n_11143)
    
    # Getting the type of 'B' (line 936)
    B_11145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 19), 'B')
    # Obtaining the member '__getitem__' of a type (line 936)
    getitem___11146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 936, 19), B_11145, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 936)
    subscript_call_result_11147 = invoke(stypy.reporting.localization.Localization(__file__, 936, 19), getitem___11146, result_sub_11144)
    
    # Getting the type of 'q' (line 936)
    q_11148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 12), 'q')
    int_11149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 936, 14), 'int')
    # Storing an element on a container (line 936)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 936, 12), q_11148, (int_11149, subscript_call_result_11147))
    # SSA join for if statement (line 935)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Subscript (line 937):
    
    # Assigning a Subscript to a Subscript (line 937):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 937)
    tuple_11150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 937)
    # Adding element type (line 937)
    # Getting the type of 'i' (line 937)
    i_11151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 17), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 17), tuple_11150, i_11151)
    # Adding element type (line 937)
    int_11152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 17), tuple_11150, int_11152)
    
    # Getting the type of 'Z' (line 937)
    Z_11153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 15), 'Z')
    # Obtaining the member '__getitem__' of a type (line 937)
    getitem___11154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 937, 15), Z_11153, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 937)
    subscript_call_result_11155 = invoke(stypy.reporting.localization.Localization(__file__, 937, 15), getitem___11154, tuple_11150)
    
    # Getting the type of 'q' (line 937)
    q_11156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 8), 'q')
    int_11157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 937, 10), 'int')
    # Storing an element on a container (line 937)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 937, 8), q_11156, (int_11157, subscript_call_result_11155))
    
    # Assigning a Call to a Subscript (line 938):
    
    # Assigning a Call to a Subscript (line 938):
    
    # Call to max(...): (line 938)
    # Processing the call keyword arguments (line 938)
    kwargs_11160 = {}
    # Getting the type of 'q' (line 938)
    q_11158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 15), 'q', False)
    # Obtaining the member 'max' of a type (line 938)
    max_11159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 15), q_11158, 'max')
    # Calling max(args, kwargs) (line 938)
    max_call_result_11161 = invoke(stypy.reporting.localization.Localization(__file__, 938, 15), max_11159, *[], **kwargs_11160)
    
    # Getting the type of 'B' (line 938)
    B_11162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'B')
    # Getting the type of 'i' (line 938)
    i_11163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 10), 'i')
    # Storing an element on a container (line 938)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 938, 8), B_11162, (i_11163, max_call_result_11161))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'B' (line 939)
    B_11164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 11), 'B')
    # Assigning a type to the variable 'stypy_return_type' (line 939)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 939, 4), 'stypy_return_type', B_11164)
    
    # ################# End of 'calculate_maximum_distances(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'calculate_maximum_distances' in the type store
    # Getting the type of 'stypy_return_type' (line 924)
    stypy_return_type_11165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11165)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'calculate_maximum_distances'
    return stypy_return_type_11165

# Assigning a type to the variable 'calculate_maximum_distances' (line 924)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 0), 'calculate_maximum_distances', calculate_maximum_distances)

@norecursion
def calculate_maximum_inconsistencies(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    int_11166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 46), 'int')
    defaults = [int_11166]
    # Create a new context for function 'calculate_maximum_inconsistencies'
    module_type_store = module_type_store.open_function_context('calculate_maximum_inconsistencies', 942, 0, False)
    
    # Passed parameters checking function
    calculate_maximum_inconsistencies.stypy_localization = localization
    calculate_maximum_inconsistencies.stypy_type_of_self = None
    calculate_maximum_inconsistencies.stypy_type_store = module_type_store
    calculate_maximum_inconsistencies.stypy_function_name = 'calculate_maximum_inconsistencies'
    calculate_maximum_inconsistencies.stypy_param_names_list = ['Z', 'R', 'k']
    calculate_maximum_inconsistencies.stypy_varargs_param_name = None
    calculate_maximum_inconsistencies.stypy_kwargs_param_name = None
    calculate_maximum_inconsistencies.stypy_call_defaults = defaults
    calculate_maximum_inconsistencies.stypy_call_varargs = varargs
    calculate_maximum_inconsistencies.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'calculate_maximum_inconsistencies', ['Z', 'R', 'k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'calculate_maximum_inconsistencies', localization, ['Z', 'R', 'k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'calculate_maximum_inconsistencies(...)' code ##################

    
    # Assigning a BinOp to a Name (line 944):
    
    # Assigning a BinOp to a Name (line 944):
    
    # Obtaining the type of the subscript
    int_11167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 16), 'int')
    # Getting the type of 'Z' (line 944)
    Z_11168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 8), 'Z')
    # Obtaining the member 'shape' of a type (line 944)
    shape_11169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 944, 8), Z_11168, 'shape')
    # Obtaining the member '__getitem__' of a type (line 944)
    getitem___11170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 944, 8), shape_11169, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 944)
    subscript_call_result_11171 = invoke(stypy.reporting.localization.Localization(__file__, 944, 8), getitem___11170, int_11167)
    
    int_11172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 944, 21), 'int')
    # Applying the binary operator '+' (line 944)
    result_add_11173 = python_operator(stypy.reporting.localization.Localization(__file__, 944, 8), '+', subscript_call_result_11171, int_11172)
    
    # Assigning a type to the variable 'n' (line 944)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 944, 4), 'n', result_add_11173)
    
    # Assigning a Call to a Name (line 945):
    
    # Assigning a Call to a Name (line 945):
    
    # Call to zeros(...): (line 945)
    # Processing the call arguments (line 945)
    
    # Obtaining an instance of the builtin type 'tuple' (line 945)
    tuple_11176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 945)
    # Adding element type (line 945)
    # Getting the type of 'n' (line 945)
    n_11177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 18), 'n', False)
    int_11178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 20), 'int')
    # Applying the binary operator '-' (line 945)
    result_sub_11179 = python_operator(stypy.reporting.localization.Localization(__file__, 945, 18), '-', n_11177, int_11178)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 18), tuple_11176, result_sub_11179)
    
    # Processing the call keyword arguments (line 945)
    kwargs_11180 = {}
    # Getting the type of 'np' (line 945)
    np_11174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 8), 'np', False)
    # Obtaining the member 'zeros' of a type (line 945)
    zeros_11175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 945, 8), np_11174, 'zeros')
    # Calling zeros(args, kwargs) (line 945)
    zeros_call_result_11181 = invoke(stypy.reporting.localization.Localization(__file__, 945, 8), zeros_11175, *[tuple_11176], **kwargs_11180)
    
    # Assigning a type to the variable 'B' (line 945)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 4), 'B', zeros_call_result_11181)
    
    # Assigning a Call to a Name (line 946):
    
    # Assigning a Call to a Name (line 946):
    
    # Call to zeros(...): (line 946)
    # Processing the call arguments (line 946)
    
    # Obtaining an instance of the builtin type 'tuple' (line 946)
    tuple_11184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 946)
    # Adding element type (line 946)
    int_11185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 18), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 946, 18), tuple_11184, int_11185)
    
    # Processing the call keyword arguments (line 946)
    kwargs_11186 = {}
    # Getting the type of 'np' (line 946)
    np_11182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'np', False)
    # Obtaining the member 'zeros' of a type (line 946)
    zeros_11183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 946, 8), np_11182, 'zeros')
    # Calling zeros(args, kwargs) (line 946)
    zeros_call_result_11187 = invoke(stypy.reporting.localization.Localization(__file__, 946, 8), zeros_11183, *[tuple_11184], **kwargs_11186)
    
    # Assigning a type to the variable 'q' (line 946)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 946, 4), 'q', zeros_call_result_11187)
    
    
    # Call to xrange(...): (line 947)
    # Processing the call arguments (line 947)
    int_11189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 20), 'int')
    # Getting the type of 'n' (line 947)
    n_11190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 23), 'n', False)
    int_11191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 27), 'int')
    # Applying the binary operator '-' (line 947)
    result_sub_11192 = python_operator(stypy.reporting.localization.Localization(__file__, 947, 23), '-', n_11190, int_11191)
    
    # Processing the call keyword arguments (line 947)
    kwargs_11193 = {}
    # Getting the type of 'xrange' (line 947)
    xrange_11188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 13), 'xrange', False)
    # Calling xrange(args, kwargs) (line 947)
    xrange_call_result_11194 = invoke(stypy.reporting.localization.Localization(__file__, 947, 13), xrange_11188, *[int_11189, result_sub_11192], **kwargs_11193)
    
    # Testing the type of a for loop iterable (line 947)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 947, 4), xrange_call_result_11194)
    # Getting the type of the for loop variable (line 947)
    for_loop_var_11195 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 947, 4), xrange_call_result_11194)
    # Assigning a type to the variable 'i' (line 947)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 4), 'i', for_loop_var_11195)
    # SSA begins for a for statement (line 947)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Num to a Subscript (line 948):
    
    # Assigning a Num to a Subscript (line 948):
    float_11196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 15), 'float')
    # Getting the type of 'q' (line 948)
    q_11197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 8), 'q')
    slice_11198 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 948, 8), None, None, None)
    # Storing an element on a container (line 948)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 948, 8), q_11197, (slice_11198, float_11196))
    
    # Assigning a Subscript to a Name (line 949):
    
    # Assigning a Subscript to a Name (line 949):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 949)
    tuple_11199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 949)
    # Adding element type (line 949)
    # Getting the type of 'i' (line 949)
    i_11200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 17), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 949, 17), tuple_11199, i_11200)
    # Adding element type (line 949)
    int_11201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 20), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 949, 17), tuple_11199, int_11201)
    
    # Getting the type of 'Z' (line 949)
    Z_11202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 15), 'Z')
    # Obtaining the member '__getitem__' of a type (line 949)
    getitem___11203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 949, 15), Z_11202, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 949)
    subscript_call_result_11204 = invoke(stypy.reporting.localization.Localization(__file__, 949, 15), getitem___11203, tuple_11199)
    
    # Assigning a type to the variable 'left' (line 949)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'left', subscript_call_result_11204)
    
    # Assigning a Subscript to a Name (line 950):
    
    # Assigning a Subscript to a Name (line 950):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 950)
    tuple_11205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 950)
    # Adding element type (line 950)
    # Getting the type of 'i' (line 950)
    i_11206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 18), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 18), tuple_11205, i_11206)
    # Adding element type (line 950)
    int_11207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 21), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 18), tuple_11205, int_11207)
    
    # Getting the type of 'Z' (line 950)
    Z_11208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 16), 'Z')
    # Obtaining the member '__getitem__' of a type (line 950)
    getitem___11209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 16), Z_11208, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 950)
    subscript_call_result_11210 = invoke(stypy.reporting.localization.Localization(__file__, 950, 16), getitem___11209, tuple_11205)
    
    # Assigning a type to the variable 'right' (line 950)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 950, 8), 'right', subscript_call_result_11210)
    
    
    # Getting the type of 'left' (line 951)
    left_11211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 11), 'left')
    # Getting the type of 'n' (line 951)
    n_11212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 19), 'n')
    # Applying the binary operator '>=' (line 951)
    result_ge_11213 = python_operator(stypy.reporting.localization.Localization(__file__, 951, 11), '>=', left_11211, n_11212)
    
    # Testing the type of an if condition (line 951)
    if_condition_11214 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 951, 8), result_ge_11213)
    # Assigning a type to the variable 'if_condition_11214' (line 951)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 951, 8), 'if_condition_11214', if_condition_11214)
    # SSA begins for if statement (line 951)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 952):
    
    # Assigning a Subscript to a Subscript (line 952):
    
    # Obtaining the type of the subscript
    
    # Call to int(...): (line 952)
    # Processing the call arguments (line 952)
    # Getting the type of 'left' (line 952)
    left_11216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 25), 'left', False)
    # Processing the call keyword arguments (line 952)
    kwargs_11217 = {}
    # Getting the type of 'int' (line 952)
    int_11215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 21), 'int', False)
    # Calling int(args, kwargs) (line 952)
    int_call_result_11218 = invoke(stypy.reporting.localization.Localization(__file__, 952, 21), int_11215, *[left_11216], **kwargs_11217)
    
    # Getting the type of 'n' (line 952)
    n_11219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 33), 'n')
    # Applying the binary operator '-' (line 952)
    result_sub_11220 = python_operator(stypy.reporting.localization.Localization(__file__, 952, 21), '-', int_call_result_11218, n_11219)
    
    # Getting the type of 'B' (line 952)
    B_11221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 19), 'B')
    # Obtaining the member '__getitem__' of a type (line 952)
    getitem___11222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 952, 19), B_11221, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 952)
    subscript_call_result_11223 = invoke(stypy.reporting.localization.Localization(__file__, 952, 19), getitem___11222, result_sub_11220)
    
    # Getting the type of 'q' (line 952)
    q_11224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 12), 'q')
    int_11225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 952, 14), 'int')
    # Storing an element on a container (line 952)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 952, 12), q_11224, (int_11225, subscript_call_result_11223))
    # SSA join for if statement (line 951)
    module_type_store = module_type_store.join_ssa_context()
    
    
    
    # Getting the type of 'right' (line 953)
    right_11226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 11), 'right')
    # Getting the type of 'n' (line 953)
    n_11227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 20), 'n')
    # Applying the binary operator '>=' (line 953)
    result_ge_11228 = python_operator(stypy.reporting.localization.Localization(__file__, 953, 11), '>=', right_11226, n_11227)
    
    # Testing the type of an if condition (line 953)
    if_condition_11229 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 953, 8), result_ge_11228)
    # Assigning a type to the variable 'if_condition_11229' (line 953)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'if_condition_11229', if_condition_11229)
    # SSA begins for if statement (line 953)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
    
    # Assigning a Subscript to a Subscript (line 954):
    
    # Assigning a Subscript to a Subscript (line 954):
    
    # Obtaining the type of the subscript
    
    # Call to int(...): (line 954)
    # Processing the call arguments (line 954)
    # Getting the type of 'right' (line 954)
    right_11231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 25), 'right', False)
    # Processing the call keyword arguments (line 954)
    kwargs_11232 = {}
    # Getting the type of 'int' (line 954)
    int_11230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 21), 'int', False)
    # Calling int(args, kwargs) (line 954)
    int_call_result_11233 = invoke(stypy.reporting.localization.Localization(__file__, 954, 21), int_11230, *[right_11231], **kwargs_11232)
    
    # Getting the type of 'n' (line 954)
    n_11234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 34), 'n')
    # Applying the binary operator '-' (line 954)
    result_sub_11235 = python_operator(stypy.reporting.localization.Localization(__file__, 954, 21), '-', int_call_result_11233, n_11234)
    
    # Getting the type of 'B' (line 954)
    B_11236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 19), 'B')
    # Obtaining the member '__getitem__' of a type (line 954)
    getitem___11237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 19), B_11236, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 954)
    subscript_call_result_11238 = invoke(stypy.reporting.localization.Localization(__file__, 954, 19), getitem___11237, result_sub_11235)
    
    # Getting the type of 'q' (line 954)
    q_11239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 12), 'q')
    int_11240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 954, 14), 'int')
    # Storing an element on a container (line 954)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 954, 12), q_11239, (int_11240, subscript_call_result_11238))
    # SSA join for if statement (line 953)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Assigning a Subscript to a Subscript (line 955):
    
    # Assigning a Subscript to a Subscript (line 955):
    
    # Obtaining the type of the subscript
    
    # Obtaining an instance of the builtin type 'tuple' (line 955)
    tuple_11241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 17), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 955)
    # Adding element type (line 955)
    # Getting the type of 'i' (line 955)
    i_11242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 17), 'i')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 955, 17), tuple_11241, i_11242)
    # Adding element type (line 955)
    # Getting the type of 'k' (line 955)
    k_11243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 20), 'k')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 955, 17), tuple_11241, k_11243)
    
    # Getting the type of 'R' (line 955)
    R_11244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 15), 'R')
    # Obtaining the member '__getitem__' of a type (line 955)
    getitem___11245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 955, 15), R_11244, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 955)
    subscript_call_result_11246 = invoke(stypy.reporting.localization.Localization(__file__, 955, 15), getitem___11245, tuple_11241)
    
    # Getting the type of 'q' (line 955)
    q_11247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 8), 'q')
    int_11248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 10), 'int')
    # Storing an element on a container (line 955)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 955, 8), q_11247, (int_11248, subscript_call_result_11246))
    
    # Assigning a Call to a Subscript (line 956):
    
    # Assigning a Call to a Subscript (line 956):
    
    # Call to max(...): (line 956)
    # Processing the call keyword arguments (line 956)
    kwargs_11251 = {}
    # Getting the type of 'q' (line 956)
    q_11249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 15), 'q', False)
    # Obtaining the member 'max' of a type (line 956)
    max_11250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 15), q_11249, 'max')
    # Calling max(args, kwargs) (line 956)
    max_call_result_11252 = invoke(stypy.reporting.localization.Localization(__file__, 956, 15), max_11250, *[], **kwargs_11251)
    
    # Getting the type of 'B' (line 956)
    B_11253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 8), 'B')
    # Getting the type of 'i' (line 956)
    i_11254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 10), 'i')
    # Storing an element on a container (line 956)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 956, 8), B_11253, (i_11254, max_call_result_11252))
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    # Getting the type of 'B' (line 957)
    B_11255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 11), 'B')
    # Assigning a type to the variable 'stypy_return_type' (line 957)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 957, 4), 'stypy_return_type', B_11255)
    
    # ################# End of 'calculate_maximum_inconsistencies(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'calculate_maximum_inconsistencies' in the type store
    # Getting the type of 'stypy_return_type' (line 942)
    stypy_return_type_11256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11256)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'calculate_maximum_inconsistencies'
    return stypy_return_type_11256

# Assigning a type to the variable 'calculate_maximum_inconsistencies' (line 942)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 942, 0), 'calculate_maximum_inconsistencies', calculate_maximum_inconsistencies)

@norecursion
def within_tol(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'within_tol'
    module_type_store = module_type_store.open_function_context('within_tol', 960, 0, False)
    
    # Passed parameters checking function
    within_tol.stypy_localization = localization
    within_tol.stypy_type_of_self = None
    within_tol.stypy_type_store = module_type_store
    within_tol.stypy_function_name = 'within_tol'
    within_tol.stypy_param_names_list = ['a', 'b', 'tol']
    within_tol.stypy_varargs_param_name = None
    within_tol.stypy_kwargs_param_name = None
    within_tol.stypy_call_defaults = defaults
    within_tol.stypy_call_varargs = varargs
    within_tol.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'within_tol', ['a', 'b', 'tol'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'within_tol', localization, ['a', 'b', 'tol'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'within_tol(...)' code ##################

    
    
    # Call to max(...): (line 961)
    # Processing the call keyword arguments (line 961)
    kwargs_11265 = {}
    
    # Call to abs(...): (line 961)
    # Processing the call arguments (line 961)
    # Getting the type of 'a' (line 961)
    a_11259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 18), 'a', False)
    # Getting the type of 'b' (line 961)
    b_11260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 22), 'b', False)
    # Applying the binary operator '-' (line 961)
    result_sub_11261 = python_operator(stypy.reporting.localization.Localization(__file__, 961, 18), '-', a_11259, b_11260)
    
    # Processing the call keyword arguments (line 961)
    kwargs_11262 = {}
    # Getting the type of 'np' (line 961)
    np_11257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 11), 'np', False)
    # Obtaining the member 'abs' of a type (line 961)
    abs_11258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 961, 11), np_11257, 'abs')
    # Calling abs(args, kwargs) (line 961)
    abs_call_result_11263 = invoke(stypy.reporting.localization.Localization(__file__, 961, 11), abs_11258, *[result_sub_11261], **kwargs_11262)
    
    # Obtaining the member 'max' of a type (line 961)
    max_11264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 961, 11), abs_call_result_11263, 'max')
    # Calling max(args, kwargs) (line 961)
    max_call_result_11266 = invoke(stypy.reporting.localization.Localization(__file__, 961, 11), max_11264, *[], **kwargs_11265)
    
    # Getting the type of 'tol' (line 961)
    tol_11267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 33), 'tol')
    # Applying the binary operator '<' (line 961)
    result_lt_11268 = python_operator(stypy.reporting.localization.Localization(__file__, 961, 11), '<', max_call_result_11266, tol_11267)
    
    # Assigning a type to the variable 'stypy_return_type' (line 961)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 4), 'stypy_return_type', result_lt_11268)
    
    # ################# End of 'within_tol(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'within_tol' in the type store
    # Getting the type of 'stypy_return_type' (line 960)
    stypy_return_type_11269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11269)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'within_tol'
    return stypy_return_type_11269

# Assigning a type to the variable 'within_tol' (line 960)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 0), 'within_tol', within_tol)

@norecursion
def test_unsupported_uncondensed_distance_matrix_linkage_warning(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_unsupported_uncondensed_distance_matrix_linkage_warning'
    module_type_store = module_type_store.open_function_context('test_unsupported_uncondensed_distance_matrix_linkage_warning', 964, 0, False)
    
    # Passed parameters checking function
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_localization = localization
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_type_of_self = None
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_type_store = module_type_store
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_function_name = 'test_unsupported_uncondensed_distance_matrix_linkage_warning'
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_param_names_list = []
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_varargs_param_name = None
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_kwargs_param_name = None
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_call_defaults = defaults
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_call_varargs = varargs
    test_unsupported_uncondensed_distance_matrix_linkage_warning.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_unsupported_uncondensed_distance_matrix_linkage_warning', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_unsupported_uncondensed_distance_matrix_linkage_warning', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_unsupported_uncondensed_distance_matrix_linkage_warning(...)' code ##################

    
    # Call to assert_warns(...): (line 965)
    # Processing the call arguments (line 965)
    # Getting the type of 'ClusterWarning' (line 965)
    ClusterWarning_11271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 17), 'ClusterWarning', False)
    # Getting the type of 'linkage' (line 965)
    linkage_11272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 33), 'linkage', False)
    
    # Obtaining an instance of the builtin type 'list' (line 965)
    list_11273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 42), 'list')
    # Adding type elements to the builtin type 'list' instance (line 965)
    # Adding element type (line 965)
    
    # Obtaining an instance of the builtin type 'list' (line 965)
    list_11274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 43), 'list')
    # Adding type elements to the builtin type 'list' instance (line 965)
    # Adding element type (line 965)
    int_11275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 44), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 965, 43), list_11274, int_11275)
    # Adding element type (line 965)
    int_11276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 47), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 965, 43), list_11274, int_11276)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 965, 42), list_11273, list_11274)
    # Adding element type (line 965)
    
    # Obtaining an instance of the builtin type 'list' (line 965)
    list_11277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 51), 'list')
    # Adding type elements to the builtin type 'list' instance (line 965)
    # Adding element type (line 965)
    int_11278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 52), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 965, 51), list_11277, int_11278)
    # Adding element type (line 965)
    int_11279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 55), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 965, 51), list_11277, int_11279)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 965, 42), list_11273, list_11277)
    
    # Processing the call keyword arguments (line 965)
    kwargs_11280 = {}
    # Getting the type of 'assert_warns' (line 965)
    assert_warns_11270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 4), 'assert_warns', False)
    # Calling assert_warns(args, kwargs) (line 965)
    assert_warns_call_result_11281 = invoke(stypy.reporting.localization.Localization(__file__, 965, 4), assert_warns_11270, *[ClusterWarning_11271, linkage_11272, list_11273], **kwargs_11280)
    
    
    # ################# End of 'test_unsupported_uncondensed_distance_matrix_linkage_warning(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_unsupported_uncondensed_distance_matrix_linkage_warning' in the type store
    # Getting the type of 'stypy_return_type' (line 964)
    stypy_return_type_11282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11282)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_unsupported_uncondensed_distance_matrix_linkage_warning'
    return stypy_return_type_11282

# Assigning a type to the variable 'test_unsupported_uncondensed_distance_matrix_linkage_warning' (line 964)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 964, 0), 'test_unsupported_uncondensed_distance_matrix_linkage_warning', test_unsupported_uncondensed_distance_matrix_linkage_warning)

@norecursion
def test_euclidean_linkage_value_error(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_euclidean_linkage_value_error'
    module_type_store = module_type_store.open_function_context('test_euclidean_linkage_value_error', 968, 0, False)
    
    # Passed parameters checking function
    test_euclidean_linkage_value_error.stypy_localization = localization
    test_euclidean_linkage_value_error.stypy_type_of_self = None
    test_euclidean_linkage_value_error.stypy_type_store = module_type_store
    test_euclidean_linkage_value_error.stypy_function_name = 'test_euclidean_linkage_value_error'
    test_euclidean_linkage_value_error.stypy_param_names_list = []
    test_euclidean_linkage_value_error.stypy_varargs_param_name = None
    test_euclidean_linkage_value_error.stypy_kwargs_param_name = None
    test_euclidean_linkage_value_error.stypy_call_defaults = defaults
    test_euclidean_linkage_value_error.stypy_call_varargs = varargs
    test_euclidean_linkage_value_error.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_euclidean_linkage_value_error', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_euclidean_linkage_value_error', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_euclidean_linkage_value_error(...)' code ##################

    
    # Getting the type of 'scipy' (line 969)
    scipy_11283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 18), 'scipy')
    # Obtaining the member 'cluster' of a type (line 969)
    cluster_11284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 969, 18), scipy_11283, 'cluster')
    # Obtaining the member 'hierarchy' of a type (line 969)
    hierarchy_11285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 969, 18), cluster_11284, 'hierarchy')
    # Obtaining the member '_EUCLIDEAN_METHODS' of a type (line 969)
    _EUCLIDEAN_METHODS_11286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 969, 18), hierarchy_11285, '_EUCLIDEAN_METHODS')
    # Testing the type of a for loop iterable (line 969)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 969, 4), _EUCLIDEAN_METHODS_11286)
    # Getting the type of the for loop variable (line 969)
    for_loop_var_11287 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 969, 4), _EUCLIDEAN_METHODS_11286)
    # Assigning a type to the variable 'method' (line 969)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 969, 4), 'method', for_loop_var_11287)
    # SSA begins for a for statement (line 969)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Call to assert_raises(...): (line 970)
    # Processing the call arguments (line 970)
    # Getting the type of 'ValueError' (line 970)
    ValueError_11289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 22), 'ValueError', False)
    # Getting the type of 'linkage' (line 970)
    linkage_11290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 34), 'linkage', False)
    
    # Obtaining an instance of the builtin type 'list' (line 970)
    list_11291 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 43), 'list')
    # Adding type elements to the builtin type 'list' instance (line 970)
    # Adding element type (line 970)
    
    # Obtaining an instance of the builtin type 'list' (line 970)
    list_11292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 44), 'list')
    # Adding type elements to the builtin type 'list' instance (line 970)
    # Adding element type (line 970)
    int_11293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 45), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 970, 44), list_11292, int_11293)
    # Adding element type (line 970)
    int_11294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 48), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 970, 44), list_11292, int_11294)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 970, 43), list_11291, list_11292)
    # Adding element type (line 970)
    
    # Obtaining an instance of the builtin type 'list' (line 970)
    list_11295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 52), 'list')
    # Adding type elements to the builtin type 'list' instance (line 970)
    # Adding element type (line 970)
    int_11296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 53), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 970, 52), list_11295, int_11296)
    # Adding element type (line 970)
    int_11297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 56), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 970, 52), list_11295, int_11297)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 970, 43), list_11291, list_11295)
    
    # Processing the call keyword arguments (line 970)
    # Getting the type of 'method' (line 971)
    method_11298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 29), 'method', False)
    keyword_11299 = method_11298
    str_11300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 971, 44), 'str', 'cityblock')
    keyword_11301 = str_11300
    kwargs_11302 = {'metric': keyword_11301, 'method': keyword_11299}
    # Getting the type of 'assert_raises' (line 970)
    assert_raises_11288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 8), 'assert_raises', False)
    # Calling assert_raises(args, kwargs) (line 970)
    assert_raises_call_result_11303 = invoke(stypy.reporting.localization.Localization(__file__, 970, 8), assert_raises_11288, *[ValueError_11289, linkage_11290, list_11291], **kwargs_11302)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()
    
    
    # ################# End of 'test_euclidean_linkage_value_error(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_euclidean_linkage_value_error' in the type store
    # Getting the type of 'stypy_return_type' (line 968)
    stypy_return_type_11304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11304)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_euclidean_linkage_value_error'
    return stypy_return_type_11304

# Assigning a type to the variable 'test_euclidean_linkage_value_error' (line 968)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 968, 0), 'test_euclidean_linkage_value_error', test_euclidean_linkage_value_error)

@norecursion
def test_2x2_linkage(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_2x2_linkage'
    module_type_store = module_type_store.open_function_context('test_2x2_linkage', 974, 0, False)
    
    # Passed parameters checking function
    test_2x2_linkage.stypy_localization = localization
    test_2x2_linkage.stypy_type_of_self = None
    test_2x2_linkage.stypy_type_store = module_type_store
    test_2x2_linkage.stypy_function_name = 'test_2x2_linkage'
    test_2x2_linkage.stypy_param_names_list = []
    test_2x2_linkage.stypy_varargs_param_name = None
    test_2x2_linkage.stypy_kwargs_param_name = None
    test_2x2_linkage.stypy_call_defaults = defaults
    test_2x2_linkage.stypy_call_varargs = varargs
    test_2x2_linkage.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_2x2_linkage', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_2x2_linkage', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_2x2_linkage(...)' code ##################

    
    # Assigning a Call to a Name (line 975):
    
    # Assigning a Call to a Name (line 975):
    
    # Call to linkage(...): (line 975)
    # Processing the call arguments (line 975)
    
    # Obtaining an instance of the builtin type 'list' (line 975)
    list_11306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 975)
    # Adding element type (line 975)
    int_11307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 18), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 975, 17), list_11306, int_11307)
    
    # Processing the call keyword arguments (line 975)
    str_11308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 29), 'str', 'single')
    keyword_11309 = str_11308
    str_11310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 975, 46), 'str', 'euclidean')
    keyword_11311 = str_11310
    kwargs_11312 = {'metric': keyword_11311, 'method': keyword_11309}
    # Getting the type of 'linkage' (line 975)
    linkage_11305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 9), 'linkage', False)
    # Calling linkage(args, kwargs) (line 975)
    linkage_call_result_11313 = invoke(stypy.reporting.localization.Localization(__file__, 975, 9), linkage_11305, *[list_11306], **kwargs_11312)
    
    # Assigning a type to the variable 'Z1' (line 975)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 4), 'Z1', linkage_call_result_11313)
    
    # Assigning a Call to a Name (line 976):
    
    # Assigning a Call to a Name (line 976):
    
    # Call to linkage(...): (line 976)
    # Processing the call arguments (line 976)
    
    # Obtaining an instance of the builtin type 'list' (line 976)
    list_11315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 17), 'list')
    # Adding type elements to the builtin type 'list' instance (line 976)
    # Adding element type (line 976)
    
    # Obtaining an instance of the builtin type 'list' (line 976)
    list_11316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 18), 'list')
    # Adding type elements to the builtin type 'list' instance (line 976)
    # Adding element type (line 976)
    int_11317 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 19), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 18), list_11316, int_11317)
    # Adding element type (line 976)
    int_11318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 22), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 18), list_11316, int_11318)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 17), list_11315, list_11316)
    # Adding element type (line 976)
    
    # Obtaining an instance of the builtin type 'list' (line 976)
    list_11319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 26), 'list')
    # Adding type elements to the builtin type 'list' instance (line 976)
    # Adding element type (line 976)
    int_11320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 27), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 26), list_11319, int_11320)
    # Adding element type (line 976)
    int_11321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 30), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 26), list_11319, int_11321)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 976, 17), list_11315, list_11319)
    
    # Processing the call keyword arguments (line 976)
    str_11322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 42), 'str', 'single')
    keyword_11323 = str_11322
    str_11324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 59), 'str', 'euclidean')
    keyword_11325 = str_11324
    kwargs_11326 = {'metric': keyword_11325, 'method': keyword_11323}
    # Getting the type of 'linkage' (line 976)
    linkage_11314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 9), 'linkage', False)
    # Calling linkage(args, kwargs) (line 976)
    linkage_call_result_11327 = invoke(stypy.reporting.localization.Localization(__file__, 976, 9), linkage_11314, *[list_11315], **kwargs_11326)
    
    # Assigning a type to the variable 'Z2' (line 976)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 976, 4), 'Z2', linkage_call_result_11327)
    
    # Call to assert_allclose(...): (line 977)
    # Processing the call arguments (line 977)
    # Getting the type of 'Z1' (line 977)
    Z1_11329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 20), 'Z1', False)
    # Getting the type of 'Z2' (line 977)
    Z2_11330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 24), 'Z2', False)
    # Processing the call keyword arguments (line 977)
    kwargs_11331 = {}
    # Getting the type of 'assert_allclose' (line 977)
    assert_allclose_11328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 977)
    assert_allclose_call_result_11332 = invoke(stypy.reporting.localization.Localization(__file__, 977, 4), assert_allclose_11328, *[Z1_11329, Z2_11330], **kwargs_11331)
    
    
    # ################# End of 'test_2x2_linkage(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_2x2_linkage' in the type store
    # Getting the type of 'stypy_return_type' (line 974)
    stypy_return_type_11333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11333)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_2x2_linkage'
    return stypy_return_type_11333

# Assigning a type to the variable 'test_2x2_linkage' (line 974)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 974, 0), 'test_2x2_linkage', test_2x2_linkage)

@norecursion
def test_node_compare(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_node_compare'
    module_type_store = module_type_store.open_function_context('test_node_compare', 980, 0, False)
    
    # Passed parameters checking function
    test_node_compare.stypy_localization = localization
    test_node_compare.stypy_type_of_self = None
    test_node_compare.stypy_type_store = module_type_store
    test_node_compare.stypy_function_name = 'test_node_compare'
    test_node_compare.stypy_param_names_list = []
    test_node_compare.stypy_varargs_param_name = None
    test_node_compare.stypy_kwargs_param_name = None
    test_node_compare.stypy_call_defaults = defaults
    test_node_compare.stypy_call_varargs = varargs
    test_node_compare.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_node_compare', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_node_compare', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_node_compare(...)' code ##################

    
    # Call to seed(...): (line 981)
    # Processing the call arguments (line 981)
    int_11337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 19), 'int')
    # Processing the call keyword arguments (line 981)
    kwargs_11338 = {}
    # Getting the type of 'np' (line 981)
    np_11334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 4), 'np', False)
    # Obtaining the member 'random' of a type (line 981)
    random_11335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 4), np_11334, 'random')
    # Obtaining the member 'seed' of a type (line 981)
    seed_11336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 4), random_11335, 'seed')
    # Calling seed(args, kwargs) (line 981)
    seed_call_result_11339 = invoke(stypy.reporting.localization.Localization(__file__, 981, 4), seed_11336, *[int_11337], **kwargs_11338)
    
    
    # Assigning a Num to a Name (line 982):
    
    # Assigning a Num to a Name (line 982):
    int_11340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 11), 'int')
    # Assigning a type to the variable 'nobs' (line 982)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 982, 4), 'nobs', int_11340)
    
    # Assigning a Call to a Name (line 983):
    
    # Assigning a Call to a Name (line 983):
    
    # Call to randn(...): (line 983)
    # Processing the call arguments (line 983)
    # Getting the type of 'nobs' (line 983)
    nobs_11344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 24), 'nobs', False)
    int_11345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 983, 30), 'int')
    # Processing the call keyword arguments (line 983)
    kwargs_11346 = {}
    # Getting the type of 'np' (line 983)
    np_11341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'np', False)
    # Obtaining the member 'random' of a type (line 983)
    random_11342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 8), np_11341, 'random')
    # Obtaining the member 'randn' of a type (line 983)
    randn_11343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 8), random_11342, 'randn')
    # Calling randn(args, kwargs) (line 983)
    randn_call_result_11347 = invoke(stypy.reporting.localization.Localization(__file__, 983, 8), randn_11343, *[nobs_11344, int_11345], **kwargs_11346)
    
    # Assigning a type to the variable 'X' (line 983)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 983, 4), 'X', randn_call_result_11347)
    
    # Assigning a Call to a Name (line 984):
    
    # Assigning a Call to a Name (line 984):
    
    # Call to ward(...): (line 984)
    # Processing the call arguments (line 984)
    # Getting the type of 'X' (line 984)
    X_11352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 37), 'X', False)
    # Processing the call keyword arguments (line 984)
    kwargs_11353 = {}
    # Getting the type of 'scipy' (line 984)
    scipy_11348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 8), 'scipy', False)
    # Obtaining the member 'cluster' of a type (line 984)
    cluster_11349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 8), scipy_11348, 'cluster')
    # Obtaining the member 'hierarchy' of a type (line 984)
    hierarchy_11350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 8), cluster_11349, 'hierarchy')
    # Obtaining the member 'ward' of a type (line 984)
    ward_11351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 8), hierarchy_11350, 'ward')
    # Calling ward(args, kwargs) (line 984)
    ward_call_result_11354 = invoke(stypy.reporting.localization.Localization(__file__, 984, 8), ward_11351, *[X_11352], **kwargs_11353)
    
    # Assigning a type to the variable 'Z' (line 984)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 984, 4), 'Z', ward_call_result_11354)
    
    # Assigning a Call to a Name (line 985):
    
    # Assigning a Call to a Name (line 985):
    
    # Call to to_tree(...): (line 985)
    # Processing the call arguments (line 985)
    # Getting the type of 'Z' (line 985)
    Z_11356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 19), 'Z', False)
    # Processing the call keyword arguments (line 985)
    kwargs_11357 = {}
    # Getting the type of 'to_tree' (line 985)
    to_tree_11355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 11), 'to_tree', False)
    # Calling to_tree(args, kwargs) (line 985)
    to_tree_call_result_11358 = invoke(stypy.reporting.localization.Localization(__file__, 985, 11), to_tree_11355, *[Z_11356], **kwargs_11357)
    
    # Assigning a type to the variable 'tree' (line 985)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 985, 4), 'tree', to_tree_call_result_11358)
    
    # Call to assert_(...): (line 986)
    # Processing the call arguments (line 986)
    
    # Getting the type of 'tree' (line 986)
    tree_11360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 12), 'tree', False)
    
    # Call to get_left(...): (line 986)
    # Processing the call keyword arguments (line 986)
    kwargs_11363 = {}
    # Getting the type of 'tree' (line 986)
    tree_11361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 19), 'tree', False)
    # Obtaining the member 'get_left' of a type (line 986)
    get_left_11362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 19), tree_11361, 'get_left')
    # Calling get_left(args, kwargs) (line 986)
    get_left_call_result_11364 = invoke(stypy.reporting.localization.Localization(__file__, 986, 19), get_left_11362, *[], **kwargs_11363)
    
    # Applying the binary operator '>' (line 986)
    result_gt_11365 = python_operator(stypy.reporting.localization.Localization(__file__, 986, 12), '>', tree_11360, get_left_call_result_11364)
    
    # Processing the call keyword arguments (line 986)
    kwargs_11366 = {}
    # Getting the type of 'assert_' (line 986)
    assert__11359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 4), 'assert_', False)
    # Calling assert_(args, kwargs) (line 986)
    assert__call_result_11367 = invoke(stypy.reporting.localization.Localization(__file__, 986, 4), assert__11359, *[result_gt_11365], **kwargs_11366)
    
    
    # Call to assert_(...): (line 987)
    # Processing the call arguments (line 987)
    
    
    # Call to get_right(...): (line 987)
    # Processing the call keyword arguments (line 987)
    kwargs_11371 = {}
    # Getting the type of 'tree' (line 987)
    tree_11369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 12), 'tree', False)
    # Obtaining the member 'get_right' of a type (line 987)
    get_right_11370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 12), tree_11369, 'get_right')
    # Calling get_right(args, kwargs) (line 987)
    get_right_call_result_11372 = invoke(stypy.reporting.localization.Localization(__file__, 987, 12), get_right_11370, *[], **kwargs_11371)
    
    
    # Call to get_left(...): (line 987)
    # Processing the call keyword arguments (line 987)
    kwargs_11375 = {}
    # Getting the type of 'tree' (line 987)
    tree_11373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 31), 'tree', False)
    # Obtaining the member 'get_left' of a type (line 987)
    get_left_11374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 987, 31), tree_11373, 'get_left')
    # Calling get_left(args, kwargs) (line 987)
    get_left_call_result_11376 = invoke(stypy.reporting.localization.Localization(__file__, 987, 31), get_left_11374, *[], **kwargs_11375)
    
    # Applying the binary operator '>' (line 987)
    result_gt_11377 = python_operator(stypy.reporting.localization.Localization(__file__, 987, 12), '>', get_right_call_result_11372, get_left_call_result_11376)
    
    # Processing the call keyword arguments (line 987)
    kwargs_11378 = {}
    # Getting the type of 'assert_' (line 987)
    assert__11368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 987, 4), 'assert_', False)
    # Calling assert_(args, kwargs) (line 987)
    assert__call_result_11379 = invoke(stypy.reporting.localization.Localization(__file__, 987, 4), assert__11368, *[result_gt_11377], **kwargs_11378)
    
    
    # Call to assert_(...): (line 988)
    # Processing the call arguments (line 988)
    
    
    # Call to get_right(...): (line 988)
    # Processing the call keyword arguments (line 988)
    kwargs_11383 = {}
    # Getting the type of 'tree' (line 988)
    tree_11381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 12), 'tree', False)
    # Obtaining the member 'get_right' of a type (line 988)
    get_right_11382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 12), tree_11381, 'get_right')
    # Calling get_right(args, kwargs) (line 988)
    get_right_call_result_11384 = invoke(stypy.reporting.localization.Localization(__file__, 988, 12), get_right_11382, *[], **kwargs_11383)
    
    
    # Call to get_right(...): (line 988)
    # Processing the call keyword arguments (line 988)
    kwargs_11387 = {}
    # Getting the type of 'tree' (line 988)
    tree_11385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 32), 'tree', False)
    # Obtaining the member 'get_right' of a type (line 988)
    get_right_11386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 32), tree_11385, 'get_right')
    # Calling get_right(args, kwargs) (line 988)
    get_right_call_result_11388 = invoke(stypy.reporting.localization.Localization(__file__, 988, 32), get_right_11386, *[], **kwargs_11387)
    
    # Applying the binary operator '==' (line 988)
    result_eq_11389 = python_operator(stypy.reporting.localization.Localization(__file__, 988, 12), '==', get_right_call_result_11384, get_right_call_result_11388)
    
    # Processing the call keyword arguments (line 988)
    kwargs_11390 = {}
    # Getting the type of 'assert_' (line 988)
    assert__11380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 4), 'assert_', False)
    # Calling assert_(args, kwargs) (line 988)
    assert__call_result_11391 = invoke(stypy.reporting.localization.Localization(__file__, 988, 4), assert__11380, *[result_eq_11389], **kwargs_11390)
    
    
    # Call to assert_(...): (line 989)
    # Processing the call arguments (line 989)
    
    
    # Call to get_right(...): (line 989)
    # Processing the call keyword arguments (line 989)
    kwargs_11395 = {}
    # Getting the type of 'tree' (line 989)
    tree_11393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 12), 'tree', False)
    # Obtaining the member 'get_right' of a type (line 989)
    get_right_11394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 12), tree_11393, 'get_right')
    # Calling get_right(args, kwargs) (line 989)
    get_right_call_result_11396 = invoke(stypy.reporting.localization.Localization(__file__, 989, 12), get_right_11394, *[], **kwargs_11395)
    
    
    # Call to get_left(...): (line 989)
    # Processing the call keyword arguments (line 989)
    kwargs_11399 = {}
    # Getting the type of 'tree' (line 989)
    tree_11397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 32), 'tree', False)
    # Obtaining the member 'get_left' of a type (line 989)
    get_left_11398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 32), tree_11397, 'get_left')
    # Calling get_left(args, kwargs) (line 989)
    get_left_call_result_11400 = invoke(stypy.reporting.localization.Localization(__file__, 989, 32), get_left_11398, *[], **kwargs_11399)
    
    # Applying the binary operator '!=' (line 989)
    result_ne_11401 = python_operator(stypy.reporting.localization.Localization(__file__, 989, 12), '!=', get_right_call_result_11396, get_left_call_result_11400)
    
    # Processing the call keyword arguments (line 989)
    kwargs_11402 = {}
    # Getting the type of 'assert_' (line 989)
    assert__11392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 4), 'assert_', False)
    # Calling assert_(args, kwargs) (line 989)
    assert__call_result_11403 = invoke(stypy.reporting.localization.Localization(__file__, 989, 4), assert__11392, *[result_ne_11401], **kwargs_11402)
    
    
    # ################# End of 'test_node_compare(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_node_compare' in the type store
    # Getting the type of 'stypy_return_type' (line 980)
    stypy_return_type_11404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11404)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_node_compare'
    return stypy_return_type_11404

# Assigning a type to the variable 'test_node_compare' (line 980)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 0), 'test_node_compare', test_node_compare)

@norecursion
def test_cut_tree(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_cut_tree'
    module_type_store = module_type_store.open_function_context('test_cut_tree', 992, 0, False)
    
    # Passed parameters checking function
    test_cut_tree.stypy_localization = localization
    test_cut_tree.stypy_type_of_self = None
    test_cut_tree.stypy_type_store = module_type_store
    test_cut_tree.stypy_function_name = 'test_cut_tree'
    test_cut_tree.stypy_param_names_list = []
    test_cut_tree.stypy_varargs_param_name = None
    test_cut_tree.stypy_kwargs_param_name = None
    test_cut_tree.stypy_call_defaults = defaults
    test_cut_tree.stypy_call_varargs = varargs
    test_cut_tree.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_cut_tree', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_cut_tree', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_cut_tree(...)' code ##################

    
    # Call to seed(...): (line 993)
    # Processing the call arguments (line 993)
    int_11408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 993, 19), 'int')
    # Processing the call keyword arguments (line 993)
    kwargs_11409 = {}
    # Getting the type of 'np' (line 993)
    np_11405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 4), 'np', False)
    # Obtaining the member 'random' of a type (line 993)
    random_11406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 4), np_11405, 'random')
    # Obtaining the member 'seed' of a type (line 993)
    seed_11407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 4), random_11406, 'seed')
    # Calling seed(args, kwargs) (line 993)
    seed_call_result_11410 = invoke(stypy.reporting.localization.Localization(__file__, 993, 4), seed_11407, *[int_11408], **kwargs_11409)
    
    
    # Assigning a Num to a Name (line 994):
    
    # Assigning a Num to a Name (line 994):
    int_11411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 11), 'int')
    # Assigning a type to the variable 'nobs' (line 994)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 994, 4), 'nobs', int_11411)
    
    # Assigning a Call to a Name (line 995):
    
    # Assigning a Call to a Name (line 995):
    
    # Call to randn(...): (line 995)
    # Processing the call arguments (line 995)
    # Getting the type of 'nobs' (line 995)
    nobs_11415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 24), 'nobs', False)
    int_11416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 30), 'int')
    # Processing the call keyword arguments (line 995)
    kwargs_11417 = {}
    # Getting the type of 'np' (line 995)
    np_11412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 8), 'np', False)
    # Obtaining the member 'random' of a type (line 995)
    random_11413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 995, 8), np_11412, 'random')
    # Obtaining the member 'randn' of a type (line 995)
    randn_11414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 995, 8), random_11413, 'randn')
    # Calling randn(args, kwargs) (line 995)
    randn_call_result_11418 = invoke(stypy.reporting.localization.Localization(__file__, 995, 8), randn_11414, *[nobs_11415, int_11416], **kwargs_11417)
    
    # Assigning a type to the variable 'X' (line 995)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 995, 4), 'X', randn_call_result_11418)
    
    # Assigning a Call to a Name (line 996):
    
    # Assigning a Call to a Name (line 996):
    
    # Call to ward(...): (line 996)
    # Processing the call arguments (line 996)
    # Getting the type of 'X' (line 996)
    X_11423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 37), 'X', False)
    # Processing the call keyword arguments (line 996)
    kwargs_11424 = {}
    # Getting the type of 'scipy' (line 996)
    scipy_11419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'scipy', False)
    # Obtaining the member 'cluster' of a type (line 996)
    cluster_11420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 8), scipy_11419, 'cluster')
    # Obtaining the member 'hierarchy' of a type (line 996)
    hierarchy_11421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 8), cluster_11420, 'hierarchy')
    # Obtaining the member 'ward' of a type (line 996)
    ward_11422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 8), hierarchy_11421, 'ward')
    # Calling ward(args, kwargs) (line 996)
    ward_call_result_11425 = invoke(stypy.reporting.localization.Localization(__file__, 996, 8), ward_11422, *[X_11423], **kwargs_11424)
    
    # Assigning a type to the variable 'Z' (line 996)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 4), 'Z', ward_call_result_11425)
    
    # Assigning a Call to a Name (line 997):
    
    # Assigning a Call to a Name (line 997):
    
    # Call to cut_tree(...): (line 997)
    # Processing the call arguments (line 997)
    # Getting the type of 'Z' (line 997)
    Z_11427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 22), 'Z', False)
    # Processing the call keyword arguments (line 997)
    kwargs_11428 = {}
    # Getting the type of 'cut_tree' (line 997)
    cut_tree_11426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 13), 'cut_tree', False)
    # Calling cut_tree(args, kwargs) (line 997)
    cut_tree_call_result_11429 = invoke(stypy.reporting.localization.Localization(__file__, 997, 13), cut_tree_11426, *[Z_11427], **kwargs_11428)
    
    # Assigning a type to the variable 'cutree' (line 997)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 997, 4), 'cutree', cut_tree_call_result_11429)
    
    # Call to assert_equal(...): (line 999)
    # Processing the call arguments (line 999)
    
    # Obtaining the type of the subscript
    slice_11431 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 999, 17), None, None, None)
    int_11432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 999, 27), 'int')
    # Getting the type of 'cutree' (line 999)
    cutree_11433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 17), 'cutree', False)
    # Obtaining the member '__getitem__' of a type (line 999)
    getitem___11434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 17), cutree_11433, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 999)
    subscript_call_result_11435 = invoke(stypy.reporting.localization.Localization(__file__, 999, 17), getitem___11434, (slice_11431, int_11432))
    
    
    # Call to arange(...): (line 999)
    # Processing the call arguments (line 999)
    # Getting the type of 'nobs' (line 999)
    nobs_11438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 41), 'nobs', False)
    # Processing the call keyword arguments (line 999)
    kwargs_11439 = {}
    # Getting the type of 'np' (line 999)
    np_11436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 31), 'np', False)
    # Obtaining the member 'arange' of a type (line 999)
    arange_11437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 999, 31), np_11436, 'arange')
    # Calling arange(args, kwargs) (line 999)
    arange_call_result_11440 = invoke(stypy.reporting.localization.Localization(__file__, 999, 31), arange_11437, *[nobs_11438], **kwargs_11439)
    
    # Processing the call keyword arguments (line 999)
    kwargs_11441 = {}
    # Getting the type of 'assert_equal' (line 999)
    assert_equal_11430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 999)
    assert_equal_call_result_11442 = invoke(stypy.reporting.localization.Localization(__file__, 999, 4), assert_equal_11430, *[subscript_call_result_11435, arange_call_result_11440], **kwargs_11441)
    
    
    # Call to assert_equal(...): (line 1000)
    # Processing the call arguments (line 1000)
    
    # Obtaining the type of the subscript
    slice_11444 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1000, 17), None, None, None)
    int_11445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1000, 27), 'int')
    # Getting the type of 'cutree' (line 1000)
    cutree_11446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 17), 'cutree', False)
    # Obtaining the member '__getitem__' of a type (line 1000)
    getitem___11447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 17), cutree_11446, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1000)
    subscript_call_result_11448 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 17), getitem___11447, (slice_11444, int_11445))
    
    
    # Call to zeros(...): (line 1000)
    # Processing the call arguments (line 1000)
    # Getting the type of 'nobs' (line 1000)
    nobs_11451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 41), 'nobs', False)
    # Processing the call keyword arguments (line 1000)
    kwargs_11452 = {}
    # Getting the type of 'np' (line 1000)
    np_11449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 32), 'np', False)
    # Obtaining the member 'zeros' of a type (line 1000)
    zeros_11450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1000, 32), np_11449, 'zeros')
    # Calling zeros(args, kwargs) (line 1000)
    zeros_call_result_11453 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 32), zeros_11450, *[nobs_11451], **kwargs_11452)
    
    # Processing the call keyword arguments (line 1000)
    kwargs_11454 = {}
    # Getting the type of 'assert_equal' (line 1000)
    assert_equal_11443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1000)
    assert_equal_call_result_11455 = invoke(stypy.reporting.localization.Localization(__file__, 1000, 4), assert_equal_11443, *[subscript_call_result_11448, zeros_call_result_11453], **kwargs_11454)
    
    
    # Call to assert_equal(...): (line 1001)
    # Processing the call arguments (line 1001)
    
    # Call to max(...): (line 1001)
    # Processing the call arguments (line 1001)
    int_11459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1001, 28), 'int')
    # Processing the call keyword arguments (line 1001)
    kwargs_11460 = {}
    # Getting the type of 'cutree' (line 1001)
    cutree_11457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 17), 'cutree', False)
    # Obtaining the member 'max' of a type (line 1001)
    max_11458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1001, 17), cutree_11457, 'max')
    # Calling max(args, kwargs) (line 1001)
    max_call_result_11461 = invoke(stypy.reporting.localization.Localization(__file__, 1001, 17), max_11458, *[int_11459], **kwargs_11460)
    
    
    # Call to arange(...): (line 1001)
    # Processing the call arguments (line 1001)
    # Getting the type of 'nobs' (line 1001)
    nobs_11464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 42), 'nobs', False)
    int_11465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1001, 49), 'int')
    # Applying the binary operator '-' (line 1001)
    result_sub_11466 = python_operator(stypy.reporting.localization.Localization(__file__, 1001, 42), '-', nobs_11464, int_11465)
    
    int_11467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1001, 52), 'int')
    int_11468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1001, 56), 'int')
    # Processing the call keyword arguments (line 1001)
    kwargs_11469 = {}
    # Getting the type of 'np' (line 1001)
    np_11462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 32), 'np', False)
    # Obtaining the member 'arange' of a type (line 1001)
    arange_11463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1001, 32), np_11462, 'arange')
    # Calling arange(args, kwargs) (line 1001)
    arange_call_result_11470 = invoke(stypy.reporting.localization.Localization(__file__, 1001, 32), arange_11463, *[result_sub_11466, int_11467, int_11468], **kwargs_11469)
    
    # Processing the call keyword arguments (line 1001)
    kwargs_11471 = {}
    # Getting the type of 'assert_equal' (line 1001)
    assert_equal_11456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1001)
    assert_equal_call_result_11472 = invoke(stypy.reporting.localization.Localization(__file__, 1001, 4), assert_equal_11456, *[max_call_result_11461, arange_call_result_11470], **kwargs_11471)
    
    
    # Call to assert_equal(...): (line 1003)
    # Processing the call arguments (line 1003)
    
    # Obtaining the type of the subscript
    slice_11474 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1003, 17), None, None, None)
    
    # Obtaining an instance of the builtin type 'list' (line 1003)
    list_11475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1003)
    # Adding element type (line 1003)
    int_11476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1003, 27), list_11475, int_11476)
    
    # Getting the type of 'cutree' (line 1003)
    cutree_11477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 17), 'cutree', False)
    # Obtaining the member '__getitem__' of a type (line 1003)
    getitem___11478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1003, 17), cutree_11477, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1003)
    subscript_call_result_11479 = invoke(stypy.reporting.localization.Localization(__file__, 1003, 17), getitem___11478, (slice_11474, list_11475))
    
    
    # Call to cut_tree(...): (line 1003)
    # Processing the call arguments (line 1003)
    # Getting the type of 'Z' (line 1003)
    Z_11481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 43), 'Z', False)
    # Processing the call keyword arguments (line 1003)
    int_11482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 57), 'int')
    keyword_11483 = int_11482
    kwargs_11484 = {'n_clusters': keyword_11483}
    # Getting the type of 'cut_tree' (line 1003)
    cut_tree_11480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 34), 'cut_tree', False)
    # Calling cut_tree(args, kwargs) (line 1003)
    cut_tree_call_result_11485 = invoke(stypy.reporting.localization.Localization(__file__, 1003, 34), cut_tree_11480, *[Z_11481], **kwargs_11484)
    
    # Processing the call keyword arguments (line 1003)
    kwargs_11486 = {}
    # Getting the type of 'assert_equal' (line 1003)
    assert_equal_11473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1003)
    assert_equal_call_result_11487 = invoke(stypy.reporting.localization.Localization(__file__, 1003, 4), assert_equal_11473, *[subscript_call_result_11479, cut_tree_call_result_11485], **kwargs_11486)
    
    
    # Call to assert_equal(...): (line 1004)
    # Processing the call arguments (line 1004)
    
    # Obtaining the type of the subscript
    slice_11489 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1004, 17), None, None, None)
    
    # Obtaining an instance of the builtin type 'list' (line 1004)
    list_11490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1004)
    # Adding element type (line 1004)
    int_11491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1004, 27), list_11490, int_11491)
    # Adding element type (line 1004)
    int_11492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 32), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1004, 27), list_11490, int_11492)
    
    # Getting the type of 'cutree' (line 1004)
    cutree_11493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 17), 'cutree', False)
    # Obtaining the member '__getitem__' of a type (line 1004)
    getitem___11494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1004, 17), cutree_11493, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1004)
    subscript_call_result_11495 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 17), getitem___11494, (slice_11489, list_11490))
    
    
    # Call to cut_tree(...): (line 1004)
    # Processing the call arguments (line 1004)
    # Getting the type of 'Z' (line 1004)
    Z_11497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 48), 'Z', False)
    # Processing the call keyword arguments (line 1004)
    
    # Obtaining an instance of the builtin type 'list' (line 1004)
    list_11498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 62), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1004)
    # Adding element type (line 1004)
    int_11499 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 63), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1004, 62), list_11498, int_11499)
    # Adding element type (line 1004)
    int_11500 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1004, 66), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1004, 62), list_11498, int_11500)
    
    keyword_11501 = list_11498
    kwargs_11502 = {'n_clusters': keyword_11501}
    # Getting the type of 'cut_tree' (line 1004)
    cut_tree_11496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 39), 'cut_tree', False)
    # Calling cut_tree(args, kwargs) (line 1004)
    cut_tree_call_result_11503 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 39), cut_tree_11496, *[Z_11497], **kwargs_11502)
    
    # Processing the call keyword arguments (line 1004)
    kwargs_11504 = {}
    # Getting the type of 'assert_equal' (line 1004)
    assert_equal_11488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1004)
    assert_equal_call_result_11505 = invoke(stypy.reporting.localization.Localization(__file__, 1004, 4), assert_equal_11488, *[subscript_call_result_11495, cut_tree_call_result_11503], **kwargs_11504)
    
    
    # Call to assert_equal(...): (line 1005)
    # Processing the call arguments (line 1005)
    
    # Obtaining the type of the subscript
    slice_11507 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1005, 17), None, None, None)
    
    # Obtaining an instance of the builtin type 'list' (line 1005)
    list_11508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 27), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1005)
    # Adding element type (line 1005)
    int_11509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 28), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1005, 27), list_11508, int_11509)
    # Adding element type (line 1005)
    int_11510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 33), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1005, 27), list_11508, int_11510)
    
    # Getting the type of 'cutree' (line 1005)
    cutree_11511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 17), 'cutree', False)
    # Obtaining the member '__getitem__' of a type (line 1005)
    getitem___11512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 17), cutree_11511, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1005)
    subscript_call_result_11513 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 17), getitem___11512, (slice_11507, list_11508))
    
    
    # Call to cut_tree(...): (line 1005)
    # Processing the call arguments (line 1005)
    # Getting the type of 'Z' (line 1005)
    Z_11515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 48), 'Z', False)
    # Processing the call keyword arguments (line 1005)
    
    # Obtaining an instance of the builtin type 'list' (line 1005)
    list_11516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 62), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1005)
    # Adding element type (line 1005)
    int_11517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 63), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1005, 62), list_11516, int_11517)
    # Adding element type (line 1005)
    int_11518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 67), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1005, 62), list_11516, int_11518)
    
    keyword_11519 = list_11516
    kwargs_11520 = {'n_clusters': keyword_11519}
    # Getting the type of 'cut_tree' (line 1005)
    cut_tree_11514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 39), 'cut_tree', False)
    # Calling cut_tree(args, kwargs) (line 1005)
    cut_tree_call_result_11521 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 39), cut_tree_11514, *[Z_11515], **kwargs_11520)
    
    # Processing the call keyword arguments (line 1005)
    kwargs_11522 = {}
    # Getting the type of 'assert_equal' (line 1005)
    assert_equal_11506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1005)
    assert_equal_call_result_11523 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 4), assert_equal_11506, *[subscript_call_result_11513, cut_tree_call_result_11521], **kwargs_11522)
    
    
    # Assigning a Call to a Name (line 1007):
    
    # Assigning a Call to a Name (line 1007):
    
    # Call to _order_cluster_tree(...): (line 1007)
    # Processing the call arguments (line 1007)
    # Getting the type of 'Z' (line 1007)
    Z_11525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 32), 'Z', False)
    # Processing the call keyword arguments (line 1007)
    kwargs_11526 = {}
    # Getting the type of '_order_cluster_tree' (line 1007)
    _order_cluster_tree_11524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 12), '_order_cluster_tree', False)
    # Calling _order_cluster_tree(args, kwargs) (line 1007)
    _order_cluster_tree_call_result_11527 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 12), _order_cluster_tree_11524, *[Z_11525], **kwargs_11526)
    
    # Assigning a type to the variable 'nodes' (line 1007)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1007, 4), 'nodes', _order_cluster_tree_call_result_11527)
    
    # Assigning a Call to a Name (line 1008):
    
    # Assigning a Call to a Name (line 1008):
    
    # Call to array(...): (line 1008)
    # Processing the call arguments (line 1008)
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'nodes' (line 1008)
    nodes_11532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 46), 'nodes', False)
    comprehension_11533 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 24), nodes_11532)
    # Assigning a type to the variable 'node' (line 1008)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1008, 24), 'node', comprehension_11533)
    # Getting the type of 'node' (line 1008)
    node_11530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 24), 'node', False)
    # Obtaining the member 'dist' of a type (line 1008)
    dist_11531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1008, 24), node_11530, 'dist')
    list_11534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1008, 24), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1008, 24), list_11534, dist_11531)
    # Processing the call keyword arguments (line 1008)
    kwargs_11535 = {}
    # Getting the type of 'np' (line 1008)
    np_11528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1008, 14), 'np', False)
    # Obtaining the member 'array' of a type (line 1008)
    array_11529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1008, 14), np_11528, 'array')
    # Calling array(args, kwargs) (line 1008)
    array_call_result_11536 = invoke(stypy.reporting.localization.Localization(__file__, 1008, 14), array_11529, *[list_11534], **kwargs_11535)
    
    # Assigning a type to the variable 'heights' (line 1008)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1008, 4), 'heights', array_call_result_11536)
    
    # Call to assert_equal(...): (line 1010)
    # Processing the call arguments (line 1010)
    
    # Obtaining the type of the subscript
    slice_11538 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1010, 17), None, None, None)
    
    # Call to searchsorted(...): (line 1010)
    # Processing the call arguments (line 1010)
    # Getting the type of 'heights' (line 1010)
    heights_11541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 43), 'heights', False)
    
    # Obtaining an instance of the builtin type 'list' (line 1010)
    list_11542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 52), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1010)
    # Adding element type (line 1010)
    int_11543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 53), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1010, 52), list_11542, int_11543)
    
    # Processing the call keyword arguments (line 1010)
    kwargs_11544 = {}
    # Getting the type of 'np' (line 1010)
    np_11539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 27), 'np', False)
    # Obtaining the member 'searchsorted' of a type (line 1010)
    searchsorted_11540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1010, 27), np_11539, 'searchsorted')
    # Calling searchsorted(args, kwargs) (line 1010)
    searchsorted_call_result_11545 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 27), searchsorted_11540, *[heights_11541, list_11542], **kwargs_11544)
    
    # Getting the type of 'cutree' (line 1010)
    cutree_11546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 17), 'cutree', False)
    # Obtaining the member '__getitem__' of a type (line 1010)
    getitem___11547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1010, 17), cutree_11546, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1010)
    subscript_call_result_11548 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 17), getitem___11547, (slice_11538, searchsorted_call_result_11545))
    
    
    # Call to cut_tree(...): (line 1011)
    # Processing the call arguments (line 1011)
    # Getting the type of 'Z' (line 1011)
    Z_11550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 26), 'Z', False)
    # Processing the call keyword arguments (line 1011)
    int_11551 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1011, 36), 'int')
    keyword_11552 = int_11551
    kwargs_11553 = {'height': keyword_11552}
    # Getting the type of 'cut_tree' (line 1011)
    cut_tree_11549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 17), 'cut_tree', False)
    # Calling cut_tree(args, kwargs) (line 1011)
    cut_tree_call_result_11554 = invoke(stypy.reporting.localization.Localization(__file__, 1011, 17), cut_tree_11549, *[Z_11550], **kwargs_11553)
    
    # Processing the call keyword arguments (line 1010)
    kwargs_11555 = {}
    # Getting the type of 'assert_equal' (line 1010)
    assert_equal_11537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1010)
    assert_equal_call_result_11556 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 4), assert_equal_11537, *[subscript_call_result_11548, cut_tree_call_result_11554], **kwargs_11555)
    
    
    # Call to assert_equal(...): (line 1012)
    # Processing the call arguments (line 1012)
    
    # Obtaining the type of the subscript
    slice_11558 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1012, 17), None, None, None)
    
    # Call to searchsorted(...): (line 1012)
    # Processing the call arguments (line 1012)
    # Getting the type of 'heights' (line 1012)
    heights_11561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 43), 'heights', False)
    
    # Obtaining an instance of the builtin type 'list' (line 1012)
    list_11562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 52), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1012)
    # Adding element type (line 1012)
    int_11563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 53), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1012, 52), list_11562, int_11563)
    # Adding element type (line 1012)
    int_11564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 56), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1012, 52), list_11562, int_11564)
    
    # Processing the call keyword arguments (line 1012)
    kwargs_11565 = {}
    # Getting the type of 'np' (line 1012)
    np_11559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 27), 'np', False)
    # Obtaining the member 'searchsorted' of a type (line 1012)
    searchsorted_11560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 27), np_11559, 'searchsorted')
    # Calling searchsorted(args, kwargs) (line 1012)
    searchsorted_call_result_11566 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 27), searchsorted_11560, *[heights_11561, list_11562], **kwargs_11565)
    
    # Getting the type of 'cutree' (line 1012)
    cutree_11567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 17), 'cutree', False)
    # Obtaining the member '__getitem__' of a type (line 1012)
    getitem___11568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 17), cutree_11567, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1012)
    subscript_call_result_11569 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 17), getitem___11568, (slice_11558, searchsorted_call_result_11566))
    
    
    # Call to cut_tree(...): (line 1013)
    # Processing the call arguments (line 1013)
    # Getting the type of 'Z' (line 1013)
    Z_11571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 26), 'Z', False)
    # Processing the call keyword arguments (line 1013)
    
    # Obtaining an instance of the builtin type 'list' (line 1013)
    list_11572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 36), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1013)
    # Adding element type (line 1013)
    int_11573 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 37), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 36), list_11572, int_11573)
    # Adding element type (line 1013)
    int_11574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1013, 40), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1013, 36), list_11572, int_11574)
    
    keyword_11575 = list_11572
    kwargs_11576 = {'height': keyword_11575}
    # Getting the type of 'cut_tree' (line 1013)
    cut_tree_11570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 17), 'cut_tree', False)
    # Calling cut_tree(args, kwargs) (line 1013)
    cut_tree_call_result_11577 = invoke(stypy.reporting.localization.Localization(__file__, 1013, 17), cut_tree_11570, *[Z_11571], **kwargs_11576)
    
    # Processing the call keyword arguments (line 1012)
    kwargs_11578 = {}
    # Getting the type of 'assert_equal' (line 1012)
    assert_equal_11557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1012)
    assert_equal_call_result_11579 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 4), assert_equal_11557, *[subscript_call_result_11569, cut_tree_call_result_11577], **kwargs_11578)
    
    
    # Call to assert_equal(...): (line 1014)
    # Processing the call arguments (line 1014)
    
    # Obtaining the type of the subscript
    slice_11581 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 1014, 17), None, None, None)
    
    # Call to searchsorted(...): (line 1014)
    # Processing the call arguments (line 1014)
    # Getting the type of 'heights' (line 1014)
    heights_11584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 43), 'heights', False)
    
    # Obtaining an instance of the builtin type 'list' (line 1014)
    list_11585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, 52), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1014)
    # Adding element type (line 1014)
    int_11586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, 53), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1014, 52), list_11585, int_11586)
    # Adding element type (line 1014)
    int_11587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1014, 57), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1014, 52), list_11585, int_11587)
    
    # Processing the call keyword arguments (line 1014)
    kwargs_11588 = {}
    # Getting the type of 'np' (line 1014)
    np_11582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 27), 'np', False)
    # Obtaining the member 'searchsorted' of a type (line 1014)
    searchsorted_11583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1014, 27), np_11582, 'searchsorted')
    # Calling searchsorted(args, kwargs) (line 1014)
    searchsorted_call_result_11589 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 27), searchsorted_11583, *[heights_11584, list_11585], **kwargs_11588)
    
    # Getting the type of 'cutree' (line 1014)
    cutree_11590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 17), 'cutree', False)
    # Obtaining the member '__getitem__' of a type (line 1014)
    getitem___11591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1014, 17), cutree_11590, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1014)
    subscript_call_result_11592 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 17), getitem___11591, (slice_11581, searchsorted_call_result_11589))
    
    
    # Call to cut_tree(...): (line 1015)
    # Processing the call arguments (line 1015)
    # Getting the type of 'Z' (line 1015)
    Z_11594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 26), 'Z', False)
    # Processing the call keyword arguments (line 1015)
    
    # Obtaining an instance of the builtin type 'list' (line 1015)
    list_11595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 36), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1015)
    # Adding element type (line 1015)
    int_11596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 37), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1015, 36), list_11595, int_11596)
    # Adding element type (line 1015)
    int_11597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 41), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1015, 36), list_11595, int_11597)
    
    keyword_11598 = list_11595
    kwargs_11599 = {'height': keyword_11598}
    # Getting the type of 'cut_tree' (line 1015)
    cut_tree_11593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 17), 'cut_tree', False)
    # Calling cut_tree(args, kwargs) (line 1015)
    cut_tree_call_result_11600 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 17), cut_tree_11593, *[Z_11594], **kwargs_11599)
    
    # Processing the call keyword arguments (line 1014)
    kwargs_11601 = {}
    # Getting the type of 'assert_equal' (line 1014)
    assert_equal_11580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1014)
    assert_equal_call_result_11602 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 4), assert_equal_11580, *[subscript_call_result_11592, cut_tree_call_result_11600], **kwargs_11601)
    
    
    # ################# End of 'test_cut_tree(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_cut_tree' in the type store
    # Getting the type of 'stypy_return_type' (line 992)
    stypy_return_type_11603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11603)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_cut_tree'
    return stypy_return_type_11603

# Assigning a type to the variable 'test_cut_tree' (line 992)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 0), 'test_cut_tree', test_cut_tree)

@norecursion
def test_optimal_leaf_ordering(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_optimal_leaf_ordering'
    module_type_store = module_type_store.open_function_context('test_optimal_leaf_ordering', 1018, 0, False)
    
    # Passed parameters checking function
    test_optimal_leaf_ordering.stypy_localization = localization
    test_optimal_leaf_ordering.stypy_type_of_self = None
    test_optimal_leaf_ordering.stypy_type_store = module_type_store
    test_optimal_leaf_ordering.stypy_function_name = 'test_optimal_leaf_ordering'
    test_optimal_leaf_ordering.stypy_param_names_list = []
    test_optimal_leaf_ordering.stypy_varargs_param_name = None
    test_optimal_leaf_ordering.stypy_kwargs_param_name = None
    test_optimal_leaf_ordering.stypy_call_defaults = defaults
    test_optimal_leaf_ordering.stypy_call_varargs = varargs
    test_optimal_leaf_ordering.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_optimal_leaf_ordering', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_optimal_leaf_ordering', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_optimal_leaf_ordering(...)' code ##################

    
    # Assigning a Call to a Name (line 1020):
    
    # Assigning a Call to a Name (line 1020):
    
    # Call to optimal_leaf_ordering(...): (line 1020)
    # Processing the call arguments (line 1020)
    
    # Call to linkage(...): (line 1020)
    # Processing the call arguments (line 1020)
    # Getting the type of 'hierarchy_test_data' (line 1020)
    hierarchy_test_data_11606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 38), 'hierarchy_test_data', False)
    # Obtaining the member 'ytdist' of a type (line 1020)
    ytdist_11607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1020, 38), hierarchy_test_data_11606, 'ytdist')
    # Processing the call keyword arguments (line 1020)
    kwargs_11608 = {}
    # Getting the type of 'linkage' (line 1020)
    linkage_11605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 30), 'linkage', False)
    # Calling linkage(args, kwargs) (line 1020)
    linkage_call_result_11609 = invoke(stypy.reporting.localization.Localization(__file__, 1020, 30), linkage_11605, *[ytdist_11607], **kwargs_11608)
    
    # Getting the type of 'hierarchy_test_data' (line 1021)
    hierarchy_test_data_11610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 30), 'hierarchy_test_data', False)
    # Obtaining the member 'ytdist' of a type (line 1021)
    ytdist_11611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1021, 30), hierarchy_test_data_11610, 'ytdist')
    # Processing the call keyword arguments (line 1020)
    kwargs_11612 = {}
    # Getting the type of 'optimal_leaf_ordering' (line 1020)
    optimal_leaf_ordering_11604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 8), 'optimal_leaf_ordering', False)
    # Calling optimal_leaf_ordering(args, kwargs) (line 1020)
    optimal_leaf_ordering_call_result_11613 = invoke(stypy.reporting.localization.Localization(__file__, 1020, 8), optimal_leaf_ordering_11604, *[linkage_call_result_11609, ytdist_11611], **kwargs_11612)
    
    # Assigning a type to the variable 'Z' (line 1020)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1020, 4), 'Z', optimal_leaf_ordering_call_result_11613)
    
    # Assigning a Attribute to a Name (line 1022):
    
    # Assigning a Attribute to a Name (line 1022):
    # Getting the type of 'hierarchy_test_data' (line 1022)
    hierarchy_test_data_11614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 16), 'hierarchy_test_data')
    # Obtaining the member 'linkage_ytdist_single_olo' of a type (line 1022)
    linkage_ytdist_single_olo_11615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1022, 16), hierarchy_test_data_11614, 'linkage_ytdist_single_olo')
    # Assigning a type to the variable 'expectedZ' (line 1022)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1022, 4), 'expectedZ', linkage_ytdist_single_olo_11615)
    
    # Call to assert_allclose(...): (line 1023)
    # Processing the call arguments (line 1023)
    # Getting the type of 'Z' (line 1023)
    Z_11617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 20), 'Z', False)
    # Getting the type of 'expectedZ' (line 1023)
    expectedZ_11618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 23), 'expectedZ', False)
    # Processing the call keyword arguments (line 1023)
    float_11619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1023, 39), 'float')
    keyword_11620 = float_11619
    kwargs_11621 = {'atol': keyword_11620}
    # Getting the type of 'assert_allclose' (line 1023)
    assert_allclose_11616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 1023)
    assert_allclose_call_result_11622 = invoke(stypy.reporting.localization.Localization(__file__, 1023, 4), assert_allclose_11616, *[Z_11617, expectedZ_11618], **kwargs_11621)
    
    
    # Assigning a Call to a Name (line 1026):
    
    # Assigning a Call to a Name (line 1026):
    
    # Call to optimal_leaf_ordering(...): (line 1026)
    # Processing the call arguments (line 1026)
    
    # Call to linkage(...): (line 1026)
    # Processing the call arguments (line 1026)
    # Getting the type of 'hierarchy_test_data' (line 1026)
    hierarchy_test_data_11625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 38), 'hierarchy_test_data', False)
    # Obtaining the member 'X' of a type (line 1026)
    X_11626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1026, 38), hierarchy_test_data_11625, 'X')
    str_11627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1026, 61), 'str', 'ward')
    # Processing the call keyword arguments (line 1026)
    kwargs_11628 = {}
    # Getting the type of 'linkage' (line 1026)
    linkage_11624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 30), 'linkage', False)
    # Calling linkage(args, kwargs) (line 1026)
    linkage_call_result_11629 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 30), linkage_11624, *[X_11626, str_11627], **kwargs_11628)
    
    # Getting the type of 'hierarchy_test_data' (line 1027)
    hierarchy_test_data_11630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 30), 'hierarchy_test_data', False)
    # Obtaining the member 'X' of a type (line 1027)
    X_11631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 30), hierarchy_test_data_11630, 'X')
    # Processing the call keyword arguments (line 1026)
    kwargs_11632 = {}
    # Getting the type of 'optimal_leaf_ordering' (line 1026)
    optimal_leaf_ordering_11623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1026, 8), 'optimal_leaf_ordering', False)
    # Calling optimal_leaf_ordering(args, kwargs) (line 1026)
    optimal_leaf_ordering_call_result_11633 = invoke(stypy.reporting.localization.Localization(__file__, 1026, 8), optimal_leaf_ordering_11623, *[linkage_call_result_11629, X_11631], **kwargs_11632)
    
    # Assigning a type to the variable 'Z' (line 1026)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1026, 4), 'Z', optimal_leaf_ordering_call_result_11633)
    
    # Assigning a Attribute to a Name (line 1028):
    
    # Assigning a Attribute to a Name (line 1028):
    # Getting the type of 'hierarchy_test_data' (line 1028)
    hierarchy_test_data_11634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 16), 'hierarchy_test_data')
    # Obtaining the member 'linkage_X_ward_olo' of a type (line 1028)
    linkage_X_ward_olo_11635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1028, 16), hierarchy_test_data_11634, 'linkage_X_ward_olo')
    # Assigning a type to the variable 'expectedZ' (line 1028)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1028, 4), 'expectedZ', linkage_X_ward_olo_11635)
    
    # Call to assert_allclose(...): (line 1029)
    # Processing the call arguments (line 1029)
    # Getting the type of 'Z' (line 1029)
    Z_11637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 20), 'Z', False)
    # Getting the type of 'expectedZ' (line 1029)
    expectedZ_11638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 23), 'expectedZ', False)
    # Processing the call keyword arguments (line 1029)
    float_11639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1029, 39), 'float')
    keyword_11640 = float_11639
    kwargs_11641 = {'atol': keyword_11640}
    # Getting the type of 'assert_allclose' (line 1029)
    assert_allclose_11636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 4), 'assert_allclose', False)
    # Calling assert_allclose(args, kwargs) (line 1029)
    assert_allclose_call_result_11642 = invoke(stypy.reporting.localization.Localization(__file__, 1029, 4), assert_allclose_11636, *[Z_11637, expectedZ_11638], **kwargs_11641)
    
    
    # ################# End of 'test_optimal_leaf_ordering(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_optimal_leaf_ordering' in the type store
    # Getting the type of 'stypy_return_type' (line 1018)
    stypy_return_type_11643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11643)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_optimal_leaf_ordering'
    return stypy_return_type_11643

# Assigning a type to the variable 'test_optimal_leaf_ordering' (line 1018)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1018, 0), 'test_optimal_leaf_ordering', test_optimal_leaf_ordering)

@norecursion
def test_Heap(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'test_Heap'
    module_type_store = module_type_store.open_function_context('test_Heap', 1032, 0, False)
    
    # Passed parameters checking function
    test_Heap.stypy_localization = localization
    test_Heap.stypy_type_of_self = None
    test_Heap.stypy_type_store = module_type_store
    test_Heap.stypy_function_name = 'test_Heap'
    test_Heap.stypy_param_names_list = []
    test_Heap.stypy_varargs_param_name = None
    test_Heap.stypy_kwargs_param_name = None
    test_Heap.stypy_call_defaults = defaults
    test_Heap.stypy_call_varargs = varargs
    test_Heap.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'test_Heap', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'test_Heap', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'test_Heap(...)' code ##################

    
    # Assigning a Call to a Name (line 1033):
    
    # Assigning a Call to a Name (line 1033):
    
    # Call to array(...): (line 1033)
    # Processing the call arguments (line 1033)
    
    # Obtaining an instance of the builtin type 'list' (line 1033)
    list_11646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 22), 'list')
    # Adding type elements to the builtin type 'list' instance (line 1033)
    # Adding element type (line 1033)
    int_11647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 23), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 22), list_11646, int_11647)
    # Adding element type (line 1033)
    int_11648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 26), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 22), list_11646, int_11648)
    # Adding element type (line 1033)
    int_11649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 30), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 22), list_11646, int_11649)
    # Adding element type (line 1033)
    float_11650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 33), 'float')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 22), list_11646, float_11650)
    # Adding element type (line 1033)
    int_11651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1033, 39), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1033, 22), list_11646, int_11651)
    
    # Processing the call keyword arguments (line 1033)
    kwargs_11652 = {}
    # Getting the type of 'np' (line 1033)
    np_11644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 13), 'np', False)
    # Obtaining the member 'array' of a type (line 1033)
    array_11645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 13), np_11644, 'array')
    # Calling array(args, kwargs) (line 1033)
    array_call_result_11653 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 13), array_11645, *[list_11646], **kwargs_11652)
    
    # Assigning a type to the variable 'values' (line 1033)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1033, 4), 'values', array_call_result_11653)
    
    # Assigning a Call to a Name (line 1034):
    
    # Assigning a Call to a Name (line 1034):
    
    # Call to Heap(...): (line 1034)
    # Processing the call arguments (line 1034)
    # Getting the type of 'values' (line 1034)
    values_11655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 16), 'values', False)
    # Processing the call keyword arguments (line 1034)
    kwargs_11656 = {}
    # Getting the type of 'Heap' (line 1034)
    Heap_11654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 11), 'Heap', False)
    # Calling Heap(args, kwargs) (line 1034)
    Heap_call_result_11657 = invoke(stypy.reporting.localization.Localization(__file__, 1034, 11), Heap_11654, *[values_11655], **kwargs_11656)
    
    # Assigning a type to the variable 'heap' (line 1034)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1034, 4), 'heap', Heap_call_result_11657)
    
    # Assigning a Call to a Name (line 1036):
    
    # Assigning a Call to a Name (line 1036):
    
    # Call to get_min(...): (line 1036)
    # Processing the call keyword arguments (line 1036)
    kwargs_11660 = {}
    # Getting the type of 'heap' (line 1036)
    heap_11658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 11), 'heap', False)
    # Obtaining the member 'get_min' of a type (line 1036)
    get_min_11659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 11), heap_11658, 'get_min')
    # Calling get_min(args, kwargs) (line 1036)
    get_min_call_result_11661 = invoke(stypy.reporting.localization.Localization(__file__, 1036, 11), get_min_11659, *[], **kwargs_11660)
    
    # Assigning a type to the variable 'pair' (line 1036)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1036, 4), 'pair', get_min_call_result_11661)
    
    # Call to assert_equal(...): (line 1037)
    # Processing the call arguments (line 1037)
    
    # Obtaining the type of the subscript
    str_11663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 22), 'str', 'key')
    # Getting the type of 'pair' (line 1037)
    pair_11664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1037)
    getitem___11665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1037, 17), pair_11664, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1037)
    subscript_call_result_11666 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 17), getitem___11665, str_11663)
    
    int_11667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1037, 30), 'int')
    # Processing the call keyword arguments (line 1037)
    kwargs_11668 = {}
    # Getting the type of 'assert_equal' (line 1037)
    assert_equal_11662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1037)
    assert_equal_call_result_11669 = invoke(stypy.reporting.localization.Localization(__file__, 1037, 4), assert_equal_11662, *[subscript_call_result_11666, int_11667], **kwargs_11668)
    
    
    # Call to assert_equal(...): (line 1038)
    # Processing the call arguments (line 1038)
    
    # Obtaining the type of the subscript
    str_11671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 22), 'str', 'value')
    # Getting the type of 'pair' (line 1038)
    pair_11672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1038)
    getitem___11673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 17), pair_11672, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1038)
    subscript_call_result_11674 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 17), getitem___11673, str_11671)
    
    float_11675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1038, 32), 'float')
    # Processing the call keyword arguments (line 1038)
    kwargs_11676 = {}
    # Getting the type of 'assert_equal' (line 1038)
    assert_equal_11670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1038)
    assert_equal_call_result_11677 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 4), assert_equal_11670, *[subscript_call_result_11674, float_11675], **kwargs_11676)
    
    
    # Call to remove_min(...): (line 1040)
    # Processing the call keyword arguments (line 1040)
    kwargs_11680 = {}
    # Getting the type of 'heap' (line 1040)
    heap_11678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1040, 4), 'heap', False)
    # Obtaining the member 'remove_min' of a type (line 1040)
    remove_min_11679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1040, 4), heap_11678, 'remove_min')
    # Calling remove_min(args, kwargs) (line 1040)
    remove_min_call_result_11681 = invoke(stypy.reporting.localization.Localization(__file__, 1040, 4), remove_min_11679, *[], **kwargs_11680)
    
    
    # Assigning a Call to a Name (line 1041):
    
    # Assigning a Call to a Name (line 1041):
    
    # Call to get_min(...): (line 1041)
    # Processing the call keyword arguments (line 1041)
    kwargs_11684 = {}
    # Getting the type of 'heap' (line 1041)
    heap_11682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 11), 'heap', False)
    # Obtaining the member 'get_min' of a type (line 1041)
    get_min_11683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1041, 11), heap_11682, 'get_min')
    # Calling get_min(args, kwargs) (line 1041)
    get_min_call_result_11685 = invoke(stypy.reporting.localization.Localization(__file__, 1041, 11), get_min_11683, *[], **kwargs_11684)
    
    # Assigning a type to the variable 'pair' (line 1041)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1041, 4), 'pair', get_min_call_result_11685)
    
    # Call to assert_equal(...): (line 1042)
    # Processing the call arguments (line 1042)
    
    # Obtaining the type of the subscript
    str_11687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 22), 'str', 'key')
    # Getting the type of 'pair' (line 1042)
    pair_11688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1042)
    getitem___11689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1042, 17), pair_11688, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1042)
    subscript_call_result_11690 = invoke(stypy.reporting.localization.Localization(__file__, 1042, 17), getitem___11689, str_11687)
    
    int_11691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1042, 30), 'int')
    # Processing the call keyword arguments (line 1042)
    kwargs_11692 = {}
    # Getting the type of 'assert_equal' (line 1042)
    assert_equal_11686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1042)
    assert_equal_call_result_11693 = invoke(stypy.reporting.localization.Localization(__file__, 1042, 4), assert_equal_11686, *[subscript_call_result_11690, int_11691], **kwargs_11692)
    
    
    # Call to assert_equal(...): (line 1043)
    # Processing the call arguments (line 1043)
    
    # Obtaining the type of the subscript
    str_11695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 22), 'str', 'value')
    # Getting the type of 'pair' (line 1043)
    pair_11696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1043)
    getitem___11697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 17), pair_11696, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1043)
    subscript_call_result_11698 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 17), getitem___11697, str_11695)
    
    int_11699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1043, 32), 'int')
    # Processing the call keyword arguments (line 1043)
    kwargs_11700 = {}
    # Getting the type of 'assert_equal' (line 1043)
    assert_equal_11694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1043)
    assert_equal_call_result_11701 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 4), assert_equal_11694, *[subscript_call_result_11698, int_11699], **kwargs_11700)
    
    
    # Call to change_value(...): (line 1045)
    # Processing the call arguments (line 1045)
    int_11704 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 22), 'int')
    float_11705 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 25), 'float')
    # Processing the call keyword arguments (line 1045)
    kwargs_11706 = {}
    # Getting the type of 'heap' (line 1045)
    heap_11702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1045, 4), 'heap', False)
    # Obtaining the member 'change_value' of a type (line 1045)
    change_value_11703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1045, 4), heap_11702, 'change_value')
    # Calling change_value(args, kwargs) (line 1045)
    change_value_call_result_11707 = invoke(stypy.reporting.localization.Localization(__file__, 1045, 4), change_value_11703, *[int_11704, float_11705], **kwargs_11706)
    
    
    # Assigning a Call to a Name (line 1046):
    
    # Assigning a Call to a Name (line 1046):
    
    # Call to get_min(...): (line 1046)
    # Processing the call keyword arguments (line 1046)
    kwargs_11710 = {}
    # Getting the type of 'heap' (line 1046)
    heap_11708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 11), 'heap', False)
    # Obtaining the member 'get_min' of a type (line 1046)
    get_min_11709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1046, 11), heap_11708, 'get_min')
    # Calling get_min(args, kwargs) (line 1046)
    get_min_call_result_11711 = invoke(stypy.reporting.localization.Localization(__file__, 1046, 11), get_min_11709, *[], **kwargs_11710)
    
    # Assigning a type to the variable 'pair' (line 1046)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1046, 4), 'pair', get_min_call_result_11711)
    
    # Call to assert_equal(...): (line 1047)
    # Processing the call arguments (line 1047)
    
    # Obtaining the type of the subscript
    str_11713 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 22), 'str', 'key')
    # Getting the type of 'pair' (line 1047)
    pair_11714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1047)
    getitem___11715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1047, 17), pair_11714, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1047)
    subscript_call_result_11716 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 17), getitem___11715, str_11713)
    
    int_11717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 30), 'int')
    # Processing the call keyword arguments (line 1047)
    kwargs_11718 = {}
    # Getting the type of 'assert_equal' (line 1047)
    assert_equal_11712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1047)
    assert_equal_call_result_11719 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 4), assert_equal_11712, *[subscript_call_result_11716, int_11717], **kwargs_11718)
    
    
    # Call to assert_equal(...): (line 1048)
    # Processing the call arguments (line 1048)
    
    # Obtaining the type of the subscript
    str_11721 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1048, 22), 'str', 'value')
    # Getting the type of 'pair' (line 1048)
    pair_11722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1048)
    getitem___11723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1048, 17), pair_11722, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1048)
    subscript_call_result_11724 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 17), getitem___11723, str_11721)
    
    int_11725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1048, 32), 'int')
    # Processing the call keyword arguments (line 1048)
    kwargs_11726 = {}
    # Getting the type of 'assert_equal' (line 1048)
    assert_equal_11720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1048, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1048)
    assert_equal_call_result_11727 = invoke(stypy.reporting.localization.Localization(__file__, 1048, 4), assert_equal_11720, *[subscript_call_result_11724, int_11725], **kwargs_11726)
    
    
    # Call to remove_min(...): (line 1050)
    # Processing the call keyword arguments (line 1050)
    kwargs_11730 = {}
    # Getting the type of 'heap' (line 1050)
    heap_11728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 4), 'heap', False)
    # Obtaining the member 'remove_min' of a type (line 1050)
    remove_min_11729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1050, 4), heap_11728, 'remove_min')
    # Calling remove_min(args, kwargs) (line 1050)
    remove_min_call_result_11731 = invoke(stypy.reporting.localization.Localization(__file__, 1050, 4), remove_min_11729, *[], **kwargs_11730)
    
    
    # Call to remove_min(...): (line 1051)
    # Processing the call keyword arguments (line 1051)
    kwargs_11734 = {}
    # Getting the type of 'heap' (line 1051)
    heap_11732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1051, 4), 'heap', False)
    # Obtaining the member 'remove_min' of a type (line 1051)
    remove_min_11733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1051, 4), heap_11732, 'remove_min')
    # Calling remove_min(args, kwargs) (line 1051)
    remove_min_call_result_11735 = invoke(stypy.reporting.localization.Localization(__file__, 1051, 4), remove_min_11733, *[], **kwargs_11734)
    
    
    # Call to change_value(...): (line 1053)
    # Processing the call arguments (line 1053)
    int_11738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 22), 'int')
    int_11739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1053, 25), 'int')
    # Processing the call keyword arguments (line 1053)
    kwargs_11740 = {}
    # Getting the type of 'heap' (line 1053)
    heap_11736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 4), 'heap', False)
    # Obtaining the member 'change_value' of a type (line 1053)
    change_value_11737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1053, 4), heap_11736, 'change_value')
    # Calling change_value(args, kwargs) (line 1053)
    change_value_call_result_11741 = invoke(stypy.reporting.localization.Localization(__file__, 1053, 4), change_value_11737, *[int_11738, int_11739], **kwargs_11740)
    
    
    # Assigning a Call to a Name (line 1054):
    
    # Assigning a Call to a Name (line 1054):
    
    # Call to get_min(...): (line 1054)
    # Processing the call keyword arguments (line 1054)
    kwargs_11744 = {}
    # Getting the type of 'heap' (line 1054)
    heap_11742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 11), 'heap', False)
    # Obtaining the member 'get_min' of a type (line 1054)
    get_min_11743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1054, 11), heap_11742, 'get_min')
    # Calling get_min(args, kwargs) (line 1054)
    get_min_call_result_11745 = invoke(stypy.reporting.localization.Localization(__file__, 1054, 11), get_min_11743, *[], **kwargs_11744)
    
    # Assigning a type to the variable 'pair' (line 1054)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1054, 4), 'pair', get_min_call_result_11745)
    
    # Call to assert_equal(...): (line 1055)
    # Processing the call arguments (line 1055)
    
    # Obtaining the type of the subscript
    str_11747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 22), 'str', 'key')
    # Getting the type of 'pair' (line 1055)
    pair_11748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1055)
    getitem___11749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1055, 17), pair_11748, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1055)
    subscript_call_result_11750 = invoke(stypy.reporting.localization.Localization(__file__, 1055, 17), getitem___11749, str_11747)
    
    int_11751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 30), 'int')
    # Processing the call keyword arguments (line 1055)
    kwargs_11752 = {}
    # Getting the type of 'assert_equal' (line 1055)
    assert_equal_11746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1055, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1055)
    assert_equal_call_result_11753 = invoke(stypy.reporting.localization.Localization(__file__, 1055, 4), assert_equal_11746, *[subscript_call_result_11750, int_11751], **kwargs_11752)
    
    
    # Call to assert_equal(...): (line 1056)
    # Processing the call arguments (line 1056)
    
    # Obtaining the type of the subscript
    str_11755 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 22), 'str', 'value')
    # Getting the type of 'pair' (line 1056)
    pair_11756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1056)
    getitem___11757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1056, 17), pair_11756, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1056)
    subscript_call_result_11758 = invoke(stypy.reporting.localization.Localization(__file__, 1056, 17), getitem___11757, str_11755)
    
    int_11759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1056, 32), 'int')
    # Processing the call keyword arguments (line 1056)
    kwargs_11760 = {}
    # Getting the type of 'assert_equal' (line 1056)
    assert_equal_11754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1056, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1056)
    assert_equal_call_result_11761 = invoke(stypy.reporting.localization.Localization(__file__, 1056, 4), assert_equal_11754, *[subscript_call_result_11758, int_11759], **kwargs_11760)
    
    
    # Call to remove_min(...): (line 1058)
    # Processing the call keyword arguments (line 1058)
    kwargs_11764 = {}
    # Getting the type of 'heap' (line 1058)
    heap_11762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 4), 'heap', False)
    # Obtaining the member 'remove_min' of a type (line 1058)
    remove_min_11763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1058, 4), heap_11762, 'remove_min')
    # Calling remove_min(args, kwargs) (line 1058)
    remove_min_call_result_11765 = invoke(stypy.reporting.localization.Localization(__file__, 1058, 4), remove_min_11763, *[], **kwargs_11764)
    
    
    # Assigning a Call to a Name (line 1059):
    
    # Assigning a Call to a Name (line 1059):
    
    # Call to get_min(...): (line 1059)
    # Processing the call keyword arguments (line 1059)
    kwargs_11768 = {}
    # Getting the type of 'heap' (line 1059)
    heap_11766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 11), 'heap', False)
    # Obtaining the member 'get_min' of a type (line 1059)
    get_min_11767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1059, 11), heap_11766, 'get_min')
    # Calling get_min(args, kwargs) (line 1059)
    get_min_call_result_11769 = invoke(stypy.reporting.localization.Localization(__file__, 1059, 11), get_min_11767, *[], **kwargs_11768)
    
    # Assigning a type to the variable 'pair' (line 1059)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1059, 4), 'pair', get_min_call_result_11769)
    
    # Call to assert_equal(...): (line 1060)
    # Processing the call arguments (line 1060)
    
    # Obtaining the type of the subscript
    str_11771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 22), 'str', 'key')
    # Getting the type of 'pair' (line 1060)
    pair_11772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1060)
    getitem___11773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1060, 17), pair_11772, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1060)
    subscript_call_result_11774 = invoke(stypy.reporting.localization.Localization(__file__, 1060, 17), getitem___11773, str_11771)
    
    int_11775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1060, 30), 'int')
    # Processing the call keyword arguments (line 1060)
    kwargs_11776 = {}
    # Getting the type of 'assert_equal' (line 1060)
    assert_equal_11770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1060)
    assert_equal_call_result_11777 = invoke(stypy.reporting.localization.Localization(__file__, 1060, 4), assert_equal_11770, *[subscript_call_result_11774, int_11775], **kwargs_11776)
    
    
    # Call to assert_equal(...): (line 1061)
    # Processing the call arguments (line 1061)
    
    # Obtaining the type of the subscript
    str_11779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 22), 'str', 'value')
    # Getting the type of 'pair' (line 1061)
    pair_11780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 17), 'pair', False)
    # Obtaining the member '__getitem__' of a type (line 1061)
    getitem___11781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1061, 17), pair_11780, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 1061)
    subscript_call_result_11782 = invoke(stypy.reporting.localization.Localization(__file__, 1061, 17), getitem___11781, str_11779)
    
    int_11783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1061, 32), 'int')
    # Processing the call keyword arguments (line 1061)
    kwargs_11784 = {}
    # Getting the type of 'assert_equal' (line 1061)
    assert_equal_11778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 4), 'assert_equal', False)
    # Calling assert_equal(args, kwargs) (line 1061)
    assert_equal_call_result_11785 = invoke(stypy.reporting.localization.Localization(__file__, 1061, 4), assert_equal_11778, *[subscript_call_result_11782, int_11783], **kwargs_11784)
    
    
    # ################# End of 'test_Heap(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'test_Heap' in the type store
    # Getting the type of 'stypy_return_type' (line 1032)
    stypy_return_type_11786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1032, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_11786)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'test_Heap'
    return stypy_return_type_11786

# Assigning a type to the variable 'test_Heap' (line 1032)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1032, 0), 'test_Heap', test_Heap)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
